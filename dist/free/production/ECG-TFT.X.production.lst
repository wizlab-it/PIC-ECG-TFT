

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 26 17:13:19 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79  0000                     
    80                           ; Version 2.10
    81                           ; Generated 31/07/2019 GMT
    82                           ; 
    83                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution.
    97                           ; 
    98                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    99                           ;        software without specific prior written permission.
   100                           ; 
   101                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   102                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   103                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   104                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   105                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   106                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   107                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   108                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   109                           ; 
   110                           ; 
   111                           ; Code-generator required, PIC18F2455 Definitions
   112                           ; 
   113                           ; SFR Addresses
   114  0000                     
   115                           	psect	idataCOMRAM
   116  002700                     __pidataCOMRAM:
   117                           	opt callstack 0
   118                           
   119                           ;initializer for _Ecg_Y
   120  002700  018F               	dw	399
   121                           
   122                           	psect	idataBANK0
   123  0026F4                     __pidataBANK0:
   124                           	opt callstack 0
   125                           
   126                           ;initializer for _Ecg_Yold
   127  0026F4  018F               	dw	399
   128                           
   129                           ;initializer for _Ecg_Xold
   130  0026F6  00EF               	dw	239
   131                           
   132                           ;initializer for _Ecg_X
   133  0026F8  00EF               	dw	239
   134                           
   135                           	psect	mediumconst
   136  00585A                     __pmediumconst:
   137                           	opt callstack 0
   138  00585A  00                 	db	0
   139  00585B                     _TFT_Font:
   140                           	opt callstack 0
   141  00585B  00                 	db	0
   142  00585C  00                 	db	0
   143  00585D  00                 	db	0
   144  00585E  00                 	db	0
   145  00585F  00                 	db	0
   146  005860  3E                 	db	62
   147  005861  5B                 	db	91
   148  005862  4F                 	db	79
   149  005863  5B                 	db	91
   150  005864  3E                 	db	62
   151  005865  3E                 	db	62
   152  005866  6B                 	db	107
   153  005867  4F                 	db	79
   154  005868  6B                 	db	107
   155  005869  3E                 	db	62
   156  00586A  1C                 	db	28
   157  00586B  3E                 	db	62
   158  00586C  7C                 	db	124
   159  00586D  3E                 	db	62
   160  00586E  1C                 	db	28
   161  00586F  18                 	db	24
   162  005870  3C                 	db	60
   163  005871  7E                 	db	126
   164  005872  3C                 	db	60
   165  005873  18                 	db	24
   166  005874  1C                 	db	28
   167  005875  57                 	db	87
   168  005876  7D                 	db	125
   169  005877  57                 	db	87
   170  005878  1C                 	db	28
   171  005879  1C                 	db	28
   172  00587A  5E                 	db	94
   173  00587B  7F                 	db	127
   174  00587C  5E                 	db	94
   175  00587D  1C                 	db	28
   176  00587E  00                 	db	0
   177  00587F  18                 	db	24
   178  005880  3C                 	db	60
   179  005881  18                 	db	24
   180  005882  00                 	db	0
   181  005883  FF                 	db	255
   182  005884  E7                 	db	231
   183  005885  C3                 	db	195
   184  005886  E7                 	db	231
   185  005887  FF                 	db	255
   186  005888  00                 	db	0
   187  005889  18                 	db	24
   188  00588A  24                 	db	36
   189  00588B  18                 	db	24
   190  00588C  00                 	db	0
   191  00588D  FF                 	db	255
   192  00588E  E7                 	db	231
   193  00588F  DB                 	db	219
   194  005890  E7                 	db	231
   195  005891  FF                 	db	255
   196  005892  30                 	db	48
   197  005893  48                 	db	72
   198  005894  3A                 	db	58
   199  005895  06                 	db	6
   200  005896  0E                 	db	14
   201  005897  26                 	db	38
   202  005898  29                 	db	41
   203  005899  79                 	db	121
   204  00589A  29                 	db	41
   205  00589B  26                 	db	38
   206  00589C  40                 	db	64
   207  00589D  7F                 	db	127
   208  00589E  05                 	db	5
   209  00589F  05                 	db	5
   210  0058A0  07                 	db	7
   211  0058A1  40                 	db	64
   212  0058A2  7F                 	db	127
   213  0058A3  05                 	db	5
   214  0058A4  25                 	db	37
   215  0058A5  3F                 	db	63
   216  0058A6  5A                 	db	90
   217  0058A7  3C                 	db	60
   218  0058A8  E7                 	db	231
   219  0058A9  3C                 	db	60
   220  0058AA  5A                 	db	90
   221  0058AB  7F                 	db	127
   222  0058AC  3E                 	db	62
   223  0058AD  1C                 	db	28
   224  0058AE  1C                 	db	28
   225  0058AF  08                 	db	8
   226  0058B0  08                 	db	8
   227  0058B1  1C                 	db	28
   228  0058B2  1C                 	db	28
   229  0058B3  3E                 	db	62
   230  0058B4  7F                 	db	127
   231  0058B5  14                 	db	20
   232  0058B6  22                 	db	34
   233  0058B7  7F                 	db	127
   234  0058B8  22                 	db	34
   235  0058B9  14                 	db	20
   236  0058BA  5F                 	db	95
   237  0058BB  5F                 	db	95
   238  0058BC  00                 	db	0
   239  0058BD  5F                 	db	95
   240  0058BE  5F                 	db	95
   241  0058BF  06                 	db	6
   242  0058C0  09                 	db	9
   243  0058C1  7F                 	db	127
   244  0058C2  01                 	db	1
   245  0058C3  7F                 	db	127
   246  0058C4  00                 	db	0
   247  0058C5  66                 	db	102
   248  0058C6  89                 	db	137
   249  0058C7  95                 	db	149
   250  0058C8  6A                 	db	106
   251  0058C9  60                 	db	96
   252  0058CA  60                 	db	96
   253  0058CB  60                 	db	96
   254  0058CC  60                 	db	96
   255  0058CD  60                 	db	96
   256  0058CE  94                 	db	148
   257  0058CF  A2                 	db	162
   258  0058D0  FF                 	db	255
   259  0058D1  A2                 	db	162
   260  0058D2  94                 	db	148
   261  0058D3  08                 	db	8
   262  0058D4  04                 	db	4
   263  0058D5  7E                 	db	126
   264  0058D6  04                 	db	4
   265  0058D7  08                 	db	8
   266  0058D8  10                 	db	16
   267  0058D9  20                 	db	32
   268  0058DA  7E                 	db	126
   269  0058DB  20                 	db	32
   270  0058DC  10                 	db	16
   271  0058DD  08                 	db	8
   272  0058DE  08                 	db	8
   273  0058DF  2A                 	db	42
   274  0058E0  1C                 	db	28
   275  0058E1  08                 	db	8
   276  0058E2  08                 	db	8
   277  0058E3  1C                 	db	28
   278  0058E4  2A                 	db	42
   279  0058E5  08                 	db	8
   280  0058E6  08                 	db	8
   281  0058E7  1E                 	db	30
   282  0058E8  10                 	db	16
   283  0058E9  10                 	db	16
   284  0058EA  10                 	db	16
   285  0058EB  10                 	db	16
   286  0058EC  0C                 	db	12
   287  0058ED  1E                 	db	30
   288  0058EE  0C                 	db	12
   289  0058EF  1E                 	db	30
   290  0058F0  0C                 	db	12
   291  0058F1  30                 	db	48
   292  0058F2  38                 	db	56
   293  0058F3  3E                 	db	62
   294  0058F4  38                 	db	56
   295  0058F5  30                 	db	48
   296  0058F6  06                 	db	6
   297  0058F7  0E                 	db	14
   298  0058F8  3E                 	db	62
   299  0058F9  0E                 	db	14
   300  0058FA  06                 	db	6
   301  0058FB  00                 	db	0
   302  0058FC  00                 	db	0
   303  0058FD  00                 	db	0
   304  0058FE  00                 	db	0
   305  0058FF  00                 	db	0
   306  005900  00                 	db	0
   307  005901  00                 	db	0
   308  005902  5F                 	db	95
   309  005903  00                 	db	0
   310  005904  00                 	db	0
   311  005905  00                 	db	0
   312  005906  07                 	db	7
   313  005907  00                 	db	0
   314  005908  07                 	db	7
   315  005909  00                 	db	0
   316  00590A  14                 	db	20
   317  00590B  7F                 	db	127
   318  00590C  14                 	db	20
   319  00590D  7F                 	db	127
   320  00590E  14                 	db	20
   321  00590F  24                 	db	36
   322  005910  2A                 	db	42
   323  005911  7F                 	db	127
   324  005912  2A                 	db	42
   325  005913  12                 	db	18
   326  005914  23                 	db	35
   327  005915  13                 	db	19
   328  005916  08                 	db	8
   329  005917  64                 	db	100
   330  005918  62                 	db	98
   331  005919  36                 	db	54
   332  00591A  49                 	db	73
   333  00591B  56                 	db	86
   334  00591C  20                 	db	32
   335  00591D  50                 	db	80
   336  00591E  00                 	db	0
   337  00591F  08                 	db	8
   338  005920  07                 	db	7
   339  005921  03                 	db	3
   340  005922  00                 	db	0
   341  005923  00                 	db	0
   342  005924  1C                 	db	28
   343  005925  22                 	db	34
   344  005926  41                 	db	65
   345  005927  00                 	db	0
   346  005928  00                 	db	0
   347  005929  41                 	db	65
   348  00592A  22                 	db	34
   349  00592B  1C                 	db	28
   350  00592C  00                 	db	0
   351  00592D  2A                 	db	42
   352  00592E  1C                 	db	28
   353  00592F  7F                 	db	127
   354  005930  1C                 	db	28
   355  005931  2A                 	db	42
   356  005932  08                 	db	8
   357  005933  08                 	db	8
   358  005934  3E                 	db	62
   359  005935  08                 	db	8
   360  005936  08                 	db	8
   361  005937  00                 	db	0
   362  005938  80                 	db	128
   363  005939  70                 	db	112
   364  00593A  30                 	db	48
   365  00593B  00                 	db	0
   366  00593C  08                 	db	8
   367  00593D  08                 	db	8
   368  00593E  08                 	db	8
   369  00593F  08                 	db	8
   370  005940  08                 	db	8
   371  005941  00                 	db	0
   372  005942  00                 	db	0
   373  005943  60                 	db	96
   374  005944  60                 	db	96
   375  005945  00                 	db	0
   376  005946  20                 	db	32
   377  005947  10                 	db	16
   378  005948  08                 	db	8
   379  005949  04                 	db	4
   380  00594A  02                 	db	2
   381  00594B  3E                 	db	62
   382  00594C  51                 	db	81
   383  00594D  49                 	db	73
   384  00594E  45                 	db	69
   385  00594F  3E                 	db	62
   386  005950  00                 	db	0
   387  005951  42                 	db	66
   388  005952  7F                 	db	127
   389  005953  40                 	db	64
   390  005954  00                 	db	0
   391  005955  72                 	db	114
   392  005956  49                 	db	73
   393  005957  49                 	db	73
   394  005958  49                 	db	73
   395  005959  46                 	db	70
   396  00595A  21                 	db	33
   397  00595B  41                 	db	65
   398  00595C  49                 	db	73
   399  00595D  4D                 	db	77
   400  00595E  33                 	db	51
   401  00595F  18                 	db	24
   402  005960  14                 	db	20
   403  005961  12                 	db	18
   404  005962  7F                 	db	127
   405  005963  10                 	db	16
   406  005964  27                 	db	39
   407  005965  45                 	db	69
   408  005966  45                 	db	69
   409  005967  45                 	db	69
   410  005968  39                 	db	57
   411  005969  3C                 	db	60
   412  00596A  4A                 	db	74
   413  00596B  49                 	db	73
   414  00596C  49                 	db	73
   415  00596D  31                 	db	49
   416  00596E  41                 	db	65
   417  00596F  21                 	db	33
   418  005970  11                 	db	17
   419  005971  09                 	db	9
   420  005972  07                 	db	7
   421  005973  36                 	db	54
   422  005974  49                 	db	73
   423  005975  49                 	db	73
   424  005976  49                 	db	73
   425  005977  36                 	db	54
   426  005978  46                 	db	70
   427  005979  49                 	db	73
   428  00597A  49                 	db	73
   429  00597B  29                 	db	41
   430  00597C  1E                 	db	30
   431  00597D  00                 	db	0
   432  00597E  00                 	db	0
   433  00597F  14                 	db	20
   434  005980  00                 	db	0
   435  005981  00                 	db	0
   436  005982  00                 	db	0
   437  005983  40                 	db	64
   438  005984  34                 	db	52
   439  005985  00                 	db	0
   440  005986  00                 	db	0
   441  005987  00                 	db	0
   442  005988  08                 	db	8
   443  005989  14                 	db	20
   444  00598A  22                 	db	34
   445  00598B  41                 	db	65
   446  00598C  14                 	db	20
   447  00598D  14                 	db	20
   448  00598E  14                 	db	20
   449  00598F  14                 	db	20
   450  005990  14                 	db	20
   451  005991  00                 	db	0
   452  005992  41                 	db	65
   453  005993  22                 	db	34
   454  005994  14                 	db	20
   455  005995  08                 	db	8
   456  005996  02                 	db	2
   457  005997  01                 	db	1
   458  005998  59                 	db	89
   459  005999  09                 	db	9
   460  00599A  06                 	db	6
   461  00599B  3E                 	db	62
   462  00599C  41                 	db	65
   463  00599D  5D                 	db	93
   464  00599E  59                 	db	89
   465  00599F  4E                 	db	78
   466  0059A0  7C                 	db	124
   467  0059A1  12                 	db	18
   468  0059A2  11                 	db	17
   469  0059A3  12                 	db	18
   470  0059A4  7C                 	db	124
   471  0059A5  7F                 	db	127
   472  0059A6  49                 	db	73
   473  0059A7  49                 	db	73
   474  0059A8  49                 	db	73
   475  0059A9  36                 	db	54
   476  0059AA  3E                 	db	62
   477  0059AB  41                 	db	65
   478  0059AC  41                 	db	65
   479  0059AD  41                 	db	65
   480  0059AE  22                 	db	34
   481  0059AF  7F                 	db	127
   482  0059B0  41                 	db	65
   483  0059B1  41                 	db	65
   484  0059B2  41                 	db	65
   485  0059B3  3E                 	db	62
   486  0059B4  7F                 	db	127
   487  0059B5  49                 	db	73
   488  0059B6  49                 	db	73
   489  0059B7  49                 	db	73
   490  0059B8  41                 	db	65
   491  0059B9  7F                 	db	127
   492  0059BA  09                 	db	9
   493  0059BB  09                 	db	9
   494  0059BC  09                 	db	9
   495  0059BD  01                 	db	1
   496  0059BE  3E                 	db	62
   497  0059BF  41                 	db	65
   498  0059C0  41                 	db	65
   499  0059C1  51                 	db	81
   500  0059C2  73                 	db	115
   501  0059C3  7F                 	db	127
   502  0059C4  08                 	db	8
   503  0059C5  08                 	db	8
   504  0059C6  08                 	db	8
   505  0059C7  7F                 	db	127
   506  0059C8  00                 	db	0
   507  0059C9  41                 	db	65
   508  0059CA  7F                 	db	127
   509  0059CB  41                 	db	65
   510  0059CC  00                 	db	0
   511  0059CD  20                 	db	32
   512  0059CE  40                 	db	64
   513  0059CF  41                 	db	65
   514  0059D0  3F                 	db	63
   515  0059D1  01                 	db	1
   516  0059D2  7F                 	db	127
   517  0059D3  08                 	db	8
   518  0059D4  14                 	db	20
   519  0059D5  22                 	db	34
   520  0059D6  41                 	db	65
   521  0059D7  7F                 	db	127
   522  0059D8  40                 	db	64
   523  0059D9  40                 	db	64
   524  0059DA  40                 	db	64
   525  0059DB  40                 	db	64
   526  0059DC  7F                 	db	127
   527  0059DD  02                 	db	2
   528  0059DE  1C                 	db	28
   529  0059DF  02                 	db	2
   530  0059E0  7F                 	db	127
   531  0059E1  7F                 	db	127
   532  0059E2  04                 	db	4
   533  0059E3  08                 	db	8
   534  0059E4  10                 	db	16
   535  0059E5  7F                 	db	127
   536  0059E6  3E                 	db	62
   537  0059E7  41                 	db	65
   538  0059E8  41                 	db	65
   539  0059E9  41                 	db	65
   540  0059EA  3E                 	db	62
   541  0059EB  7F                 	db	127
   542  0059EC  09                 	db	9
   543  0059ED  09                 	db	9
   544  0059EE  09                 	db	9
   545  0059EF  06                 	db	6
   546  0059F0  3E                 	db	62
   547  0059F1  41                 	db	65
   548  0059F2  51                 	db	81
   549  0059F3  21                 	db	33
   550  0059F4  5E                 	db	94
   551  0059F5  7F                 	db	127
   552  0059F6  09                 	db	9
   553  0059F7  19                 	db	25
   554  0059F8  29                 	db	41
   555  0059F9  46                 	db	70
   556  0059FA  26                 	db	38
   557  0059FB  49                 	db	73
   558  0059FC  49                 	db	73
   559  0059FD  49                 	db	73
   560  0059FE  32                 	db	50
   561  0059FF  03                 	db	3
   562  005A00  01                 	db	1
   563  005A01  7F                 	db	127
   564  005A02  01                 	db	1
   565  005A03  03                 	db	3
   566  005A04  3F                 	db	63
   567  005A05  40                 	db	64
   568  005A06  40                 	db	64
   569  005A07  40                 	db	64
   570  005A08  3F                 	db	63
   571  005A09  1F                 	db	31
   572  005A0A  20                 	db	32
   573  005A0B  40                 	db	64
   574  005A0C  20                 	db	32
   575  005A0D  1F                 	db	31
   576  005A0E  3F                 	db	63
   577  005A0F  40                 	db	64
   578  005A10  38                 	db	56
   579  005A11  40                 	db	64
   580  005A12  3F                 	db	63
   581  005A13  63                 	db	99
   582  005A14  14                 	db	20
   583  005A15  08                 	db	8
   584  005A16  14                 	db	20
   585  005A17  63                 	db	99
   586  005A18  03                 	db	3
   587  005A19  04                 	db	4
   588  005A1A  78                 	db	120
   589  005A1B  04                 	db	4
   590  005A1C  03                 	db	3
   591  005A1D  61                 	db	97
   592  005A1E  59                 	db	89
   593  005A1F  49                 	db	73
   594  005A20  4D                 	db	77
   595  005A21  43                 	db	67
   596  005A22  00                 	db	0
   597  005A23  7F                 	db	127
   598  005A24  41                 	db	65
   599  005A25  41                 	db	65
   600  005A26  41                 	db	65
   601  005A27  02                 	db	2
   602  005A28  04                 	db	4
   603  005A29  08                 	db	8
   604  005A2A  10                 	db	16
   605  005A2B  20                 	db	32
   606  005A2C  00                 	db	0
   607  005A2D  41                 	db	65
   608  005A2E  41                 	db	65
   609  005A2F  41                 	db	65
   610  005A30  7F                 	db	127
   611  005A31  04                 	db	4
   612  005A32  02                 	db	2
   613  005A33  01                 	db	1
   614  005A34  02                 	db	2
   615  005A35  04                 	db	4
   616  005A36  40                 	db	64
   617  005A37  40                 	db	64
   618  005A38  40                 	db	64
   619  005A39  40                 	db	64
   620  005A3A  40                 	db	64
   621  005A3B  00                 	db	0
   622  005A3C  03                 	db	3
   623  005A3D  07                 	db	7
   624  005A3E  08                 	db	8
   625  005A3F  00                 	db	0
   626  005A40  20                 	db	32
   627  005A41  54                 	db	84
   628  005A42  54                 	db	84
   629  005A43  78                 	db	120
   630  005A44  40                 	db	64
   631  005A45  7F                 	db	127
   632  005A46  28                 	db	40
   633  005A47  44                 	db	68
   634  005A48  44                 	db	68
   635  005A49  38                 	db	56
   636  005A4A  38                 	db	56
   637  005A4B  44                 	db	68
   638  005A4C  44                 	db	68
   639  005A4D  44                 	db	68
   640  005A4E  28                 	db	40
   641  005A4F  38                 	db	56
   642  005A50  44                 	db	68
   643  005A51  44                 	db	68
   644  005A52  28                 	db	40
   645  005A53  7F                 	db	127
   646  005A54  38                 	db	56
   647  005A55  54                 	db	84
   648  005A56  54                 	db	84
   649  005A57  54                 	db	84
   650  005A58  18                 	db	24
   651  005A59  00                 	db	0
   652  005A5A  08                 	db	8
   653  005A5B  7E                 	db	126
   654  005A5C  09                 	db	9
   655  005A5D  02                 	db	2
   656  005A5E  18                 	db	24
   657  005A5F  A4                 	db	164
   658  005A60  A4                 	db	164
   659  005A61  9C                 	db	156
   660  005A62  78                 	db	120
   661  005A63  7F                 	db	127
   662  005A64  08                 	db	8
   663  005A65  04                 	db	4
   664  005A66  04                 	db	4
   665  005A67  78                 	db	120
   666  005A68  00                 	db	0
   667  005A69  44                 	db	68
   668  005A6A  7D                 	db	125
   669  005A6B  40                 	db	64
   670  005A6C  00                 	db	0
   671  005A6D  20                 	db	32
   672  005A6E  40                 	db	64
   673  005A6F  40                 	db	64
   674  005A70  3D                 	db	61
   675  005A71  00                 	db	0
   676  005A72  7F                 	db	127
   677  005A73  10                 	db	16
   678  005A74  28                 	db	40
   679  005A75  44                 	db	68
   680  005A76  00                 	db	0
   681  005A77  00                 	db	0
   682  005A78  41                 	db	65
   683  005A79  7F                 	db	127
   684  005A7A  40                 	db	64
   685  005A7B  00                 	db	0
   686  005A7C  7C                 	db	124
   687  005A7D  04                 	db	4
   688  005A7E  78                 	db	120
   689  005A7F  04                 	db	4
   690  005A80  78                 	db	120
   691  005A81  7C                 	db	124
   692  005A82  08                 	db	8
   693  005A83  04                 	db	4
   694  005A84  04                 	db	4
   695  005A85  78                 	db	120
   696  005A86  38                 	db	56
   697  005A87  44                 	db	68
   698  005A88  44                 	db	68
   699  005A89  44                 	db	68
   700  005A8A  38                 	db	56
   701  005A8B  FC                 	db	252
   702  005A8C  18                 	db	24
   703  005A8D  24                 	db	36
   704  005A8E  24                 	db	36
   705  005A8F  18                 	db	24
   706  005A90  18                 	db	24
   707  005A91  24                 	db	36
   708  005A92  24                 	db	36
   709  005A93  18                 	db	24
   710  005A94  FC                 	db	252
   711  005A95  7C                 	db	124
   712  005A96  08                 	db	8
   713  005A97  04                 	db	4
   714  005A98  04                 	db	4
   715  005A99  08                 	db	8
   716  005A9A  48                 	db	72
   717  005A9B  54                 	db	84
   718  005A9C  54                 	db	84
   719  005A9D  54                 	db	84
   720  005A9E  24                 	db	36
   721  005A9F  04                 	db	4
   722  005AA0  04                 	db	4
   723  005AA1  3F                 	db	63
   724  005AA2  44                 	db	68
   725  005AA3  24                 	db	36
   726  005AA4  3C                 	db	60
   727  005AA5  40                 	db	64
   728  005AA6  40                 	db	64
   729  005AA7  20                 	db	32
   730  005AA8  7C                 	db	124
   731  005AA9  1C                 	db	28
   732  005AAA  20                 	db	32
   733  005AAB  40                 	db	64
   734  005AAC  20                 	db	32
   735  005AAD  1C                 	db	28
   736  005AAE  3C                 	db	60
   737  005AAF  40                 	db	64
   738  005AB0  30                 	db	48
   739  005AB1  40                 	db	64
   740  005AB2  3C                 	db	60
   741  005AB3  44                 	db	68
   742  005AB4  28                 	db	40
   743  005AB5  10                 	db	16
   744  005AB6  28                 	db	40
   745  005AB7  44                 	db	68
   746  005AB8  4C                 	db	76
   747  005AB9  90                 	db	144
   748  005ABA  90                 	db	144
   749  005ABB  90                 	db	144
   750  005ABC  7C                 	db	124
   751  005ABD  44                 	db	68
   752  005ABE  64                 	db	100
   753  005ABF  54                 	db	84
   754  005AC0  4C                 	db	76
   755  005AC1  44                 	db	68
   756  005AC2  00                 	db	0
   757  005AC3  08                 	db	8
   758  005AC4  36                 	db	54
   759  005AC5  41                 	db	65
   760  005AC6  00                 	db	0
   761  005AC7  00                 	db	0
   762  005AC8  00                 	db	0
   763  005AC9  77                 	db	119
   764  005ACA  00                 	db	0
   765  005ACB  00                 	db	0
   766  005ACC  00                 	db	0
   767  005ACD  41                 	db	65
   768  005ACE  36                 	db	54
   769  005ACF  08                 	db	8
   770  005AD0  00                 	db	0
   771  005AD1  02                 	db	2
   772  005AD2  01                 	db	1
   773  005AD3  02                 	db	2
   774  005AD4  04                 	db	4
   775  005AD5  02                 	db	2
   776  005AD6  3C                 	db	60
   777  005AD7  26                 	db	38
   778  005AD8  23                 	db	35
   779  005AD9  26                 	db	38
   780  005ADA  3C                 	db	60
   781  005ADB  1E                 	db	30
   782  005ADC  A1                 	db	161
   783  005ADD  A1                 	db	161
   784  005ADE  61                 	db	97
   785  005ADF  12                 	db	18
   786  005AE0  3A                 	db	58
   787  005AE1  40                 	db	64
   788  005AE2  40                 	db	64
   789  005AE3  20                 	db	32
   790  005AE4  7A                 	db	122
   791  005AE5  38                 	db	56
   792  005AE6  54                 	db	84
   793  005AE7  54                 	db	84
   794  005AE8  55                 	db	85
   795  005AE9  59                 	db	89
   796  005AEA  21                 	db	33
   797  005AEB  55                 	db	85
   798  005AEC  55                 	db	85
   799  005AED  79                 	db	121
   800  005AEE  41                 	db	65
   801  005AEF  22                 	db	34
   802  005AF0  54                 	db	84
   803  005AF1  54                 	db	84
   804  005AF2  78                 	db	120
   805  005AF3  42                 	db	66
   806  005AF4  21                 	db	33
   807  005AF5  55                 	db	85
   808  005AF6  54                 	db	84
   809  005AF7  78                 	db	120
   810  005AF8  40                 	db	64
   811  005AF9  20                 	db	32
   812  005AFA  54                 	db	84
   813  005AFB  55                 	db	85
   814  005AFC  79                 	db	121
   815  005AFD  40                 	db	64
   816  005AFE  0C                 	db	12
   817  005AFF  1E                 	db	30
   818  005B00  52                 	db	82
   819  005B01  72                 	db	114
   820  005B02  12                 	db	18
   821  005B03  39                 	db	57
   822  005B04  55                 	db	85
   823  005B05  55                 	db	85
   824  005B06  55                 	db	85
   825  005B07  59                 	db	89
   826  005B08  39                 	db	57
   827  005B09  54                 	db	84
   828  005B0A  54                 	db	84
   829  005B0B  54                 	db	84
   830  005B0C  59                 	db	89
   831  005B0D  39                 	db	57
   832  005B0E  55                 	db	85
   833  005B0F  54                 	db	84
   834  005B10  54                 	db	84
   835  005B11  58                 	db	88
   836  005B12  00                 	db	0
   837  005B13  00                 	db	0
   838  005B14  45                 	db	69
   839  005B15  7C                 	db	124
   840  005B16  41                 	db	65
   841  005B17  00                 	db	0
   842  005B18  02                 	db	2
   843  005B19  45                 	db	69
   844  005B1A  7D                 	db	125
   845  005B1B  42                 	db	66
   846  005B1C  00                 	db	0
   847  005B1D  01                 	db	1
   848  005B1E  45                 	db	69
   849  005B1F  7C                 	db	124
   850  005B20  40                 	db	64
   851  005B21  7D                 	db	125
   852  005B22  12                 	db	18
   853  005B23  11                 	db	17
   854  005B24  12                 	db	18
   855  005B25  7D                 	db	125
   856  005B26  F0                 	db	240
   857  005B27  28                 	db	40
   858  005B28  25                 	db	37
   859  005B29  28                 	db	40
   860  005B2A  F0                 	db	240
   861  005B2B  7C                 	db	124
   862  005B2C  54                 	db	84
   863  005B2D  55                 	db	85
   864  005B2E  45                 	db	69
   865  005B2F  00                 	db	0
   866  005B30  20                 	db	32
   867  005B31  54                 	db	84
   868  005B32  54                 	db	84
   869  005B33  7C                 	db	124
   870  005B34  54                 	db	84
   871  005B35  7C                 	db	124
   872  005B36  0A                 	db	10
   873  005B37  09                 	db	9
   874  005B38  7F                 	db	127
   875  005B39  49                 	db	73
   876  005B3A  32                 	db	50
   877  005B3B  49                 	db	73
   878  005B3C  49                 	db	73
   879  005B3D  49                 	db	73
   880  005B3E  32                 	db	50
   881  005B3F  3A                 	db	58
   882  005B40  44                 	db	68
   883  005B41  44                 	db	68
   884  005B42  44                 	db	68
   885  005B43  3A                 	db	58
   886  005B44  32                 	db	50
   887  005B45  4A                 	db	74
   888  005B46  48                 	db	72
   889  005B47  48                 	db	72
   890  005B48  30                 	db	48
   891  005B49  3A                 	db	58
   892  005B4A  41                 	db	65
   893  005B4B  41                 	db	65
   894  005B4C  21                 	db	33
   895  005B4D  7A                 	db	122
   896  005B4E  3A                 	db	58
   897  005B4F  42                 	db	66
   898  005B50  40                 	db	64
   899  005B51  20                 	db	32
   900  005B52  78                 	db	120
   901  005B53  00                 	db	0
   902  005B54  9D                 	db	157
   903  005B55  A0                 	db	160
   904  005B56  A0                 	db	160
   905  005B57  7D                 	db	125
   906  005B58  3D                 	db	61
   907  005B59  42                 	db	66
   908  005B5A  42                 	db	66
   909  005B5B  42                 	db	66
   910  005B5C  3D                 	db	61
   911  005B5D  3D                 	db	61
   912  005B5E  40                 	db	64
   913  005B5F  40                 	db	64
   914  005B60  40                 	db	64
   915  005B61  3D                 	db	61
   916  005B62  3C                 	db	60
   917  005B63  24                 	db	36
   918  005B64  FF                 	db	255
   919  005B65  24                 	db	36
   920  005B66  24                 	db	36
   921  005B67  48                 	db	72
   922  005B68  7E                 	db	126
   923  005B69  49                 	db	73
   924  005B6A  43                 	db	67
   925  005B6B  66                 	db	102
   926  005B6C  2B                 	db	43
   927  005B6D  2F                 	db	47
   928  005B6E  FC                 	db	252
   929  005B6F  2F                 	db	47
   930  005B70  2B                 	db	43
   931  005B71  FF                 	db	255
   932  005B72  09                 	db	9
   933  005B73  29                 	db	41
   934  005B74  F6                 	db	246
   935  005B75  20                 	db	32
   936  005B76  C0                 	db	192
   937  005B77  88                 	db	136
   938  005B78  7E                 	db	126
   939  005B79  09                 	db	9
   940  005B7A  03                 	db	3
   941  005B7B  20                 	db	32
   942  005B7C  54                 	db	84
   943  005B7D  54                 	db	84
   944  005B7E  79                 	db	121
   945  005B7F  41                 	db	65
   946  005B80  00                 	db	0
   947  005B81  00                 	db	0
   948  005B82  44                 	db	68
   949  005B83  7D                 	db	125
   950  005B84  41                 	db	65
   951  005B85  30                 	db	48
   952  005B86  48                 	db	72
   953  005B87  48                 	db	72
   954  005B88  4A                 	db	74
   955  005B89  32                 	db	50
   956  005B8A  38                 	db	56
   957  005B8B  40                 	db	64
   958  005B8C  40                 	db	64
   959  005B8D  22                 	db	34
   960  005B8E  7A                 	db	122
   961  005B8F  00                 	db	0
   962  005B90  7A                 	db	122
   963  005B91  0A                 	db	10
   964  005B92  0A                 	db	10
   965  005B93  72                 	db	114
   966  005B94  7D                 	db	125
   967  005B95  0D                 	db	13
   968  005B96  19                 	db	25
   969  005B97  31                 	db	49
   970  005B98  7D                 	db	125
   971  005B99  26                 	db	38
   972  005B9A  29                 	db	41
   973  005B9B  29                 	db	41
   974  005B9C  2F                 	db	47
   975  005B9D  28                 	db	40
   976  005B9E  26                 	db	38
   977  005B9F  29                 	db	41
   978  005BA0  29                 	db	41
   979  005BA1  29                 	db	41
   980  005BA2  26                 	db	38
   981  005BA3  30                 	db	48
   982  005BA4  48                 	db	72
   983  005BA5  4D                 	db	77
   984  005BA6  40                 	db	64
   985  005BA7  20                 	db	32
   986  005BA8  38                 	db	56
   987  005BA9  08                 	db	8
   988  005BAA  08                 	db	8
   989  005BAB  08                 	db	8
   990  005BAC  08                 	db	8
   991  005BAD  08                 	db	8
   992  005BAE  08                 	db	8
   993  005BAF  08                 	db	8
   994  005BB0  08                 	db	8
   995  005BB1  38                 	db	56
   996  005BB2  2F                 	db	47
   997  005BB3  10                 	db	16
   998  005BB4  C8                 	db	200
   999  005BB5  AC                 	db	172
  1000  005BB6  BA                 	db	186
  1001  005BB7  2F                 	db	47
  1002  005BB8  10                 	db	16
  1003  005BB9  28                 	db	40
  1004  005BBA  34                 	db	52
  1005  005BBB  FA                 	db	250
  1006  005BBC  00                 	db	0
  1007  005BBD  00                 	db	0
  1008  005BBE  7B                 	db	123
  1009  005BBF  00                 	db	0
  1010  005BC0  00                 	db	0
  1011  005BC1  08                 	db	8
  1012  005BC2  14                 	db	20
  1013  005BC3  2A                 	db	42
  1014  005BC4  14                 	db	20
  1015  005BC5  22                 	db	34
  1016  005BC6  22                 	db	34
  1017  005BC7  14                 	db	20
  1018  005BC8  2A                 	db	42
  1019  005BC9  14                 	db	20
  1020  005BCA  08                 	db	8
  1021  005BCB  55                 	db	85
  1022  005BCC  00                 	db	0
  1023  005BCD  55                 	db	85
  1024  005BCE  00                 	db	0
  1025  005BCF  55                 	db	85
  1026  005BD0  AA                 	db	170
  1027  005BD1  55                 	db	85
  1028  005BD2  AA                 	db	170
  1029  005BD3  55                 	db	85
  1030  005BD4  AA                 	db	170
  1031  005BD5  FF                 	db	255
  1032  005BD6  55                 	db	85
  1033  005BD7  FF                 	db	255
  1034  005BD8  55                 	db	85
  1035  005BD9  FF                 	db	255
  1036  005BDA  00                 	db	0
  1037  005BDB  00                 	db	0
  1038  005BDC  00                 	db	0
  1039  005BDD  FF                 	db	255
  1040  005BDE  00                 	db	0
  1041  005BDF  10                 	db	16
  1042  005BE0  10                 	db	16
  1043  005BE1  10                 	db	16
  1044  005BE2  FF                 	db	255
  1045  005BE3  00                 	db	0
  1046  005BE4  14                 	db	20
  1047  005BE5  14                 	db	20
  1048  005BE6  14                 	db	20
  1049  005BE7  FF                 	db	255
  1050  005BE8  00                 	db	0
  1051  005BE9  10                 	db	16
  1052  005BEA  10                 	db	16
  1053  005BEB  FF                 	db	255
  1054  005BEC  00                 	db	0
  1055  005BED  FF                 	db	255
  1056  005BEE  10                 	db	16
  1057  005BEF  10                 	db	16
  1058  005BF0  F0                 	db	240
  1059  005BF1  10                 	db	16
  1060  005BF2  F0                 	db	240
  1061  005BF3  14                 	db	20
  1062  005BF4  14                 	db	20
  1063  005BF5  14                 	db	20
  1064  005BF6  FC                 	db	252
  1065  005BF7  00                 	db	0
  1066  005BF8  14                 	db	20
  1067  005BF9  14                 	db	20
  1068  005BFA  F7                 	db	247
  1069  005BFB  00                 	db	0
  1070  005BFC  FF                 	db	255
  1071  005BFD  00                 	db	0
  1072  005BFE  00                 	db	0
  1073  005BFF  FF                 	db	255
  1074  005C00  00                 	db	0
  1075  005C01  FF                 	db	255
  1076  005C02  14                 	db	20
  1077  005C03  14                 	db	20
  1078  005C04  F4                 	db	244
  1079  005C05  04                 	db	4
  1080  005C06  FC                 	db	252
  1081  005C07  14                 	db	20
  1082  005C08  14                 	db	20
  1083  005C09  17                 	db	23
  1084  005C0A  10                 	db	16
  1085  005C0B  1F                 	db	31
  1086  005C0C  10                 	db	16
  1087  005C0D  10                 	db	16
  1088  005C0E  1F                 	db	31
  1089  005C0F  10                 	db	16
  1090  005C10  1F                 	db	31
  1091  005C11  14                 	db	20
  1092  005C12  14                 	db	20
  1093  005C13  14                 	db	20
  1094  005C14  1F                 	db	31
  1095  005C15  00                 	db	0
  1096  005C16  10                 	db	16
  1097  005C17  10                 	db	16
  1098  005C18  10                 	db	16
  1099  005C19  F0                 	db	240
  1100  005C1A  00                 	db	0
  1101  005C1B  00                 	db	0
  1102  005C1C  00                 	db	0
  1103  005C1D  00                 	db	0
  1104  005C1E  1F                 	db	31
  1105  005C1F  10                 	db	16
  1106  005C20  10                 	db	16
  1107  005C21  10                 	db	16
  1108  005C22  10                 	db	16
  1109  005C23  1F                 	db	31
  1110  005C24  10                 	db	16
  1111  005C25  10                 	db	16
  1112  005C26  10                 	db	16
  1113  005C27  10                 	db	16
  1114  005C28  F0                 	db	240
  1115  005C29  10                 	db	16
  1116  005C2A  00                 	db	0
  1117  005C2B  00                 	db	0
  1118  005C2C  00                 	db	0
  1119  005C2D  FF                 	db	255
  1120  005C2E  10                 	db	16
  1121  005C2F  10                 	db	16
  1122  005C30  10                 	db	16
  1123  005C31  10                 	db	16
  1124  005C32  10                 	db	16
  1125  005C33  10                 	db	16
  1126  005C34  10                 	db	16
  1127  005C35  10                 	db	16
  1128  005C36  10                 	db	16
  1129  005C37  FF                 	db	255
  1130  005C38  10                 	db	16
  1131  005C39  00                 	db	0
  1132  005C3A  00                 	db	0
  1133  005C3B  00                 	db	0
  1134  005C3C  FF                 	db	255
  1135  005C3D  14                 	db	20
  1136  005C3E  00                 	db	0
  1137  005C3F  00                 	db	0
  1138  005C40  FF                 	db	255
  1139  005C41  00                 	db	0
  1140  005C42  FF                 	db	255
  1141  005C43  00                 	db	0
  1142  005C44  00                 	db	0
  1143  005C45  1F                 	db	31
  1144  005C46  10                 	db	16
  1145  005C47  17                 	db	23
  1146  005C48  00                 	db	0
  1147  005C49  00                 	db	0
  1148  005C4A  FC                 	db	252
  1149  005C4B  04                 	db	4
  1150  005C4C  F4                 	db	244
  1151  005C4D  14                 	db	20
  1152  005C4E  14                 	db	20
  1153  005C4F  17                 	db	23
  1154  005C50  10                 	db	16
  1155  005C51  17                 	db	23
  1156  005C52  14                 	db	20
  1157  005C53  14                 	db	20
  1158  005C54  F4                 	db	244
  1159  005C55  04                 	db	4
  1160  005C56  F4                 	db	244
  1161  005C57  00                 	db	0
  1162  005C58  00                 	db	0
  1163  005C59  FF                 	db	255
  1164  005C5A  00                 	db	0
  1165  005C5B  F7                 	db	247
  1166  005C5C  14                 	db	20
  1167  005C5D  14                 	db	20
  1168  005C5E  14                 	db	20
  1169  005C5F  14                 	db	20
  1170  005C60  14                 	db	20
  1171  005C61  14                 	db	20
  1172  005C62  14                 	db	20
  1173  005C63  F7                 	db	247
  1174  005C64  00                 	db	0
  1175  005C65  F7                 	db	247
  1176  005C66  14                 	db	20
  1177  005C67  14                 	db	20
  1178  005C68  14                 	db	20
  1179  005C69  17                 	db	23
  1180  005C6A  14                 	db	20
  1181  005C6B  10                 	db	16
  1182  005C6C  10                 	db	16
  1183  005C6D  1F                 	db	31
  1184  005C6E  10                 	db	16
  1185  005C6F  1F                 	db	31
  1186  005C70  14                 	db	20
  1187  005C71  14                 	db	20
  1188  005C72  14                 	db	20
  1189  005C73  F4                 	db	244
  1190  005C74  14                 	db	20
  1191  005C75  10                 	db	16
  1192  005C76  10                 	db	16
  1193  005C77  F0                 	db	240
  1194  005C78  10                 	db	16
  1195  005C79  F0                 	db	240
  1196  005C7A  00                 	db	0
  1197  005C7B  00                 	db	0
  1198  005C7C  1F                 	db	31
  1199  005C7D  10                 	db	16
  1200  005C7E  1F                 	db	31
  1201  005C7F  00                 	db	0
  1202  005C80  00                 	db	0
  1203  005C81  00                 	db	0
  1204  005C82  1F                 	db	31
  1205  005C83  14                 	db	20
  1206  005C84  00                 	db	0
  1207  005C85  00                 	db	0
  1208  005C86  00                 	db	0
  1209  005C87  FC                 	db	252
  1210  005C88  14                 	db	20
  1211  005C89  00                 	db	0
  1212  005C8A  00                 	db	0
  1213  005C8B  F0                 	db	240
  1214  005C8C  10                 	db	16
  1215  005C8D  F0                 	db	240
  1216  005C8E  10                 	db	16
  1217  005C8F  10                 	db	16
  1218  005C90  FF                 	db	255
  1219  005C91  10                 	db	16
  1220  005C92  FF                 	db	255
  1221  005C93  14                 	db	20
  1222  005C94  14                 	db	20
  1223  005C95  14                 	db	20
  1224  005C96  FF                 	db	255
  1225  005C97  14                 	db	20
  1226  005C98  10                 	db	16
  1227  005C99  10                 	db	16
  1228  005C9A  10                 	db	16
  1229  005C9B  1F                 	db	31
  1230  005C9C  00                 	db	0
  1231  005C9D  00                 	db	0
  1232  005C9E  00                 	db	0
  1233  005C9F  00                 	db	0
  1234  005CA0  F0                 	db	240
  1235  005CA1  10                 	db	16
  1236  005CA2  FF                 	db	255
  1237  005CA3  FF                 	db	255
  1238  005CA4  FF                 	db	255
  1239  005CA5  FF                 	db	255
  1240  005CA6  FF                 	db	255
  1241  005CA7  F0                 	db	240
  1242  005CA8  F0                 	db	240
  1243  005CA9  F0                 	db	240
  1244  005CAA  F0                 	db	240
  1245  005CAB  F0                 	db	240
  1246  005CAC  FF                 	db	255
  1247  005CAD  FF                 	db	255
  1248  005CAE  FF                 	db	255
  1249  005CAF  00                 	db	0
  1250  005CB0  00                 	db	0
  1251  005CB1  00                 	db	0
  1252  005CB2  00                 	db	0
  1253  005CB3  00                 	db	0
  1254  005CB4  FF                 	db	255
  1255  005CB5  FF                 	db	255
  1256  005CB6  0F                 	db	15
  1257  005CB7  0F                 	db	15
  1258  005CB8  0F                 	db	15
  1259  005CB9  0F                 	db	15
  1260  005CBA  0F                 	db	15
  1261  005CBB  38                 	db	56
  1262  005CBC  44                 	db	68
  1263  005CBD  44                 	db	68
  1264  005CBE  38                 	db	56
  1265  005CBF  44                 	db	68
  1266  005CC0  FC                 	db	252
  1267  005CC1  4A                 	db	74
  1268  005CC2  4A                 	db	74
  1269  005CC3  4A                 	db	74
  1270  005CC4  34                 	db	52
  1271  005CC5  7E                 	db	126
  1272  005CC6  02                 	db	2
  1273  005CC7  02                 	db	2
  1274  005CC8  06                 	db	6
  1275  005CC9  06                 	db	6
  1276  005CCA  02                 	db	2
  1277  005CCB  7E                 	db	126
  1278  005CCC  02                 	db	2
  1279  005CCD  7E                 	db	126
  1280  005CCE  02                 	db	2
  1281  005CCF  63                 	db	99
  1282  005CD0  55                 	db	85
  1283  005CD1  49                 	db	73
  1284  005CD2  41                 	db	65
  1285  005CD3  63                 	db	99
  1286  005CD4  38                 	db	56
  1287  005CD5  44                 	db	68
  1288  005CD6  44                 	db	68
  1289  005CD7  3C                 	db	60
  1290  005CD8  04                 	db	4
  1291  005CD9  40                 	db	64
  1292  005CDA  7E                 	db	126
  1293  005CDB  20                 	db	32
  1294  005CDC  1E                 	db	30
  1295  005CDD  20                 	db	32
  1296  005CDE  06                 	db	6
  1297  005CDF  02                 	db	2
  1298  005CE0  7E                 	db	126
  1299  005CE1  02                 	db	2
  1300  005CE2  02                 	db	2
  1301  005CE3  99                 	db	153
  1302  005CE4  A5                 	db	165
  1303  005CE5  E7                 	db	231
  1304  005CE6  A5                 	db	165
  1305  005CE7  99                 	db	153
  1306  005CE8  1C                 	db	28
  1307  005CE9  2A                 	db	42
  1308  005CEA  49                 	db	73
  1309  005CEB  2A                 	db	42
  1310  005CEC  1C                 	db	28
  1311  005CED  4C                 	db	76
  1312  005CEE  72                 	db	114
  1313  005CEF  01                 	db	1
  1314  005CF0  72                 	db	114
  1315  005CF1  4C                 	db	76
  1316  005CF2  30                 	db	48
  1317  005CF3  4A                 	db	74
  1318  005CF4  4D                 	db	77
  1319  005CF5  4D                 	db	77
  1320  005CF6  30                 	db	48
  1321  005CF7  30                 	db	48
  1322  005CF8  48                 	db	72
  1323  005CF9  78                 	db	120
  1324  005CFA  48                 	db	72
  1325  005CFB  30                 	db	48
  1326  005CFC  BC                 	db	188
  1327  005CFD  62                 	db	98
  1328  005CFE  5A                 	db	90
  1329  005CFF  46                 	db	70
  1330  005D00  3D                 	db	61
  1331  005D01  3E                 	db	62
  1332  005D02  49                 	db	73
  1333  005D03  49                 	db	73
  1334  005D04  49                 	db	73
  1335  005D05  00                 	db	0
  1336  005D06  7E                 	db	126
  1337  005D07  01                 	db	1
  1338  005D08  01                 	db	1
  1339  005D09  01                 	db	1
  1340  005D0A  7E                 	db	126
  1341  005D0B  2A                 	db	42
  1342  005D0C  2A                 	db	42
  1343  005D0D  2A                 	db	42
  1344  005D0E  2A                 	db	42
  1345  005D0F  2A                 	db	42
  1346  005D10  44                 	db	68
  1347  005D11  44                 	db	68
  1348  005D12  5F                 	db	95
  1349  005D13  44                 	db	68
  1350  005D14  44                 	db	68
  1351  005D15  40                 	db	64
  1352  005D16  51                 	db	81
  1353  005D17  4A                 	db	74
  1354  005D18  44                 	db	68
  1355  005D19  40                 	db	64
  1356  005D1A  40                 	db	64
  1357  005D1B  44                 	db	68
  1358  005D1C  4A                 	db	74
  1359  005D1D  51                 	db	81
  1360  005D1E  40                 	db	64
  1361  005D1F  00                 	db	0
  1362  005D20  00                 	db	0
  1363  005D21  FF                 	db	255
  1364  005D22  01                 	db	1
  1365  005D23  03                 	db	3
  1366  005D24  E0                 	db	224
  1367  005D25  80                 	db	128
  1368  005D26  FF                 	db	255
  1369  005D27  00                 	db	0
  1370  005D28  00                 	db	0
  1371  005D29  08                 	db	8
  1372  005D2A  08                 	db	8
  1373  005D2B  6B                 	db	107
  1374  005D2C  6B                 	db	107
  1375  005D2D  08                 	db	8
  1376  005D2E  36                 	db	54
  1377  005D2F  12                 	db	18
  1378  005D30  36                 	db	54
  1379  005D31  24                 	db	36
  1380  005D32  36                 	db	54
  1381  005D33  06                 	db	6
  1382  005D34  0F                 	db	15
  1383  005D35  09                 	db	9
  1384  005D36  0F                 	db	15
  1385  005D37  06                 	db	6
  1386  005D38  00                 	db	0
  1387  005D39  00                 	db	0
  1388  005D3A  18                 	db	24
  1389  005D3B  18                 	db	24
  1390  005D3C  00                 	db	0
  1391  005D3D  00                 	db	0
  1392  005D3E  00                 	db	0
  1393  005D3F  10                 	db	16
  1394  005D40  10                 	db	16
  1395  005D41  00                 	db	0
  1396  005D42  30                 	db	48
  1397  005D43  40                 	db	64
  1398  005D44  FF                 	db	255
  1399  005D45  01                 	db	1
  1400  005D46  01                 	db	1
  1401  005D47  00                 	db	0
  1402  005D48  1F                 	db	31
  1403  005D49  01                 	db	1
  1404  005D4A  01                 	db	1
  1405  005D4B  1E                 	db	30
  1406  005D4C  00                 	db	0
  1407  005D4D  19                 	db	25
  1408  005D4E  1D                 	db	29
  1409  005D4F  17                 	db	23
  1410  005D50  12                 	db	18
  1411  005D51  00                 	db	0
  1412  005D52  3C                 	db	60
  1413  005D53  3C                 	db	60
  1414  005D54  3C                 	db	60
  1415  005D55  3C                 	db	60
  1416  005D56  00                 	db	0
  1417  005D57  00                 	db	0
  1418  005D58  00                 	db	0
  1419  005D59  00                 	db	0
  1420  005D5A  00                 	db	0
  1421  005D5B                     __end_of_TFT_Font:
  1422                           	opt callstack 0
  1423  005D5B                     _TFT_Init_Sequence:
  1424                           	opt callstack 0
  1425  005D5B  0702               	dw	1794
  1426  005D5D  3008               	dw	12296
  1427  005D5F  0705               	dw	1797
  1428  005D61  0036               	dw	54
  1429  005D63  070B               	dw	1803
  1430  005D65  1213               	dw	4627
  1431  005D67  0001               	dw	1
  1432  005D69  0100               	dw	256
  1433  005D6B  0002               	dw	2
  1434  005D6D  0100               	dw	256
  1435  005D6F  0003               	dw	3
  1436  005D71  1030               	dw	4144
  1437  005D73  0008               	dw	8
  1438  005D75  0202               	dw	514
  1439  005D77  0009               	dw	9
  1440  005D79  0000               	dw	0
  1441  005D7B  000C               	dw	12
  1442  005D7D  0000               	dw	0
  1443  005D7F  000F               	dw	15
  1444  005D81  0000               	dw	0
  1445  005D83  0100               	dw	256
  1446  005D85  0000               	dw	0
  1447  005D87  0102               	dw	258
  1448  005D89  0000               	dw	0
  1449  005D8B  0103               	dw	259
  1450  005D8D  0000               	dw	0
  1451  005D8F  FFFF               	dw	65535
  1452  005D91  0001               	dw	1
  1453  005D93  0100               	dw	256
  1454  005D95  1190               	dw	4496
  1455  005D97  0101               	dw	257
  1456  005D99  0227               	dw	551
  1457  005D9B  FFFF               	dw	65535
  1458  005D9D  0001               	dw	1
  1459  005D9F  0102               	dw	258
  1460  005DA1  01BD               	dw	445
  1461  005DA3  FFFF               	dw	65535
  1462  005DA5  0001               	dw	1
  1463  005DA7  0103               	dw	259
  1464  005DA9  2D00               	dw	11520
  1465  005DAB  0281               	dw	641
  1466  005DAD  000E               	dw	14
  1467  005DAF  FFFF               	dw	65535
  1468  005DB1  0001               	dw	1
  1469  005DB3  0200               	dw	512
  1470  005DB5  0000               	dw	0
  1471  005DB7  0201               	dw	513
  1472  005DB9  0000               	dw	0
  1473  005DBB  0300               	dw	768
  1474  005DBD  0000               	dw	0
  1475  005DBF  0301               	dw	769
  1476  005DC1  0707               	dw	1799
  1477  005DC3  0302               	dw	770
  1478  005DC5  0606               	dw	1542
  1479  005DC7  0305               	dw	773
  1480  005DC9  0000               	dw	0
  1481  005DCB  0306               	dw	774
  1482  005DCD  0D00               	dw	3328
  1483  005DCF  0307               	dw	775
  1484  005DD1  0706               	dw	1798
  1485  005DD3  0308               	dw	776
  1486  005DD5  0005               	dw	5
  1487  005DD7  0309               	dw	777
  1488  005DD9  0007               	dw	7
  1489  005DDB  030C               	dw	780
  1490  005DDD  0000               	dw	0
  1491  005DDF  030D               	dw	781
  1492  005DE1  000A               	dw	10
  1493  005DE3  0210               	dw	528
  1494  005DE5  0000               	dw	0
  1495  005DE7  0211               	dw	529
  1496  005DE9  00EF               	dw	239
  1497  005DEB  0212               	dw	530
  1498  005DED  0000               	dw	0
  1499  005DEF  0213               	dw	531
  1500  005DF1  018F               	dw	399
  1501  005DF3  0400               	dw	1024
  1502  005DF5  3100               	dw	12544
  1503  005DF7  0401               	dw	1025
  1504  005DF9  0001               	dw	1
  1505  005DFB  0404               	dw	1028
  1506  005DFD  0000               	dw	0
  1507  005DFF  0500               	dw	1280
  1508  005E01  0000               	dw	0
  1509  005E03  0501               	dw	1281
  1510  005E05  0000               	dw	0
  1511  005E07  0502               	dw	1282
  1512  005E09  0000               	dw	0
  1513  005E0B  0503               	dw	1283
  1514  005E0D  0000               	dw	0
  1515  005E0F  0504               	dw	1284
  1516  005E11  0000               	dw	0
  1517  005E13  0505               	dw	1285
  1518  005E15  0000               	dw	0
  1519  005E17  0010               	dw	16
  1520  005E19  0010               	dw	16
  1521  005E1B  0011               	dw	17
  1522  005E1D  0600               	dw	1536
  1523  005E1F  0020               	dw	32
  1524  005E21  0002               	dw	2
  1525  005E23  0007               	dw	7
  1526  005E25  0173               	dw	371
  1527  005E27                     __end_of_TFT_Init_Sequence:
  1528                           	opt callstack 0
  1529  005E27                     _dpowers:
  1530                           	opt callstack 0
  1531  005E27  0001               	dw	1
  1532  005E29  0000               	dw	0
  1533  005E2B  000A               	dw	10
  1534  005E2D  0000               	dw	0
  1535  005E2F  0064               	dw	100
  1536  005E31  0000               	dw	0
  1537  005E33  03E8               	dw	1000
  1538  005E35  0000               	dw	0
  1539  005E37  2710               	dw	10000
  1540  005E39  0000               	dw	0
  1541  005E3B  86A0               	dw	34464
  1542  005E3D  0001               	dw	1
  1543  005E3F  4240               	dw	16960
  1544  005E41  000F               	dw	15
  1545  005E43  9680               	dw	38528
  1546  005E45  0098               	dw	152
  1547  005E47  E100               	dw	57600
  1548  005E49  05F5               	dw	1525
  1549  005E4B  CA00               	dw	51712
  1550  005E4D  3B9A               	dw	15258
  1551  005E4F                     __end_of_dpowers:
  1552                           	opt callstack 0
  1553  005E4F                     _A6_BAUDRATES:
  1554                           	opt callstack 0
  1555  005E4F  2580               	dw	9600
  1556  005E51  0000               	dw	0
  1557  005E53  E100               	dw	57600
  1558  005E55  0000               	dw	0
  1559  005E57  C200               	dw	49664
  1560  005E59  0001               	dw	1
  1561  005E5B                     __end_of_A6_BAUDRATES:
  1562                           	opt callstack 0
  1563  005E5B                     _ECG_ICON_HEART:
  1564                           	opt callstack 0
  1565  005E5B  14                 	db	20
  1566  005E5C  14                 	db	20
  1567  005E5D  00                 	db	0
  1568  005E5E  00                 	db	0
  1569  005E5F  00                 	db	0
  1570  005E60  00                 	db	0
  1571  005E61  00                 	db	0
  1572  005E62  00                 	db	0
  1573  005E63  F8                 	db	248
  1574  005E64  F0                 	db	240
  1575  005E65  01                 	db	1
  1576  005E66  FC                 	db	252
  1577  005E67  F9                 	db	249
  1578  005E68  03                 	db	3
  1579  005E69  FC                 	db	252
  1580  005E6A  FF                 	db	255
  1581  005E6B  03                 	db	3
  1582  005E6C  FE                 	db	254
  1583  005E6D  FF                 	db	255
  1584  005E6E  07                 	db	7
  1585  005E6F  FE                 	db	254
  1586  005E70  FF                 	db	255
  1587  005E71  07                 	db	7
  1588  005E72  FE                 	db	254
  1589  005E73  FF                 	db	255
  1590  005E74  07                 	db	7
  1591  005E75  FE                 	db	254
  1592  005E76  FF                 	db	255
  1593  005E77  07                 	db	7
  1594  005E78  FC                 	db	252
  1595  005E79  FF                 	db	255
  1596  005E7A  03                 	db	3
  1597  005E7B  FC                 	db	252
  1598  005E7C  FF                 	db	255
  1599  005E7D  03                 	db	3
  1600  005E7E  F8                 	db	248
  1601  005E7F  FF                 	db	255
  1602  005E80  01                 	db	1
  1603  005E81  F0                 	db	240
  1604  005E82  FF                 	db	255
  1605  005E83  00                 	db	0
  1606  005E84  E0                 	db	224
  1607  005E85  7F                 	db	127
  1608  005E86  00                 	db	0
  1609  005E87  C0                 	db	192
  1610  005E88  3F                 	db	63
  1611  005E89  00                 	db	0
  1612  005E8A  80                 	db	128
  1613  005E8B  1F                 	db	31
  1614  005E8C  00                 	db	0
  1615  005E8D  00                 	db	0
  1616  005E8E  0F                 	db	15
  1617  005E8F  00                 	db	0
  1618  005E90  00                 	db	0
  1619  005E91  06                 	db	6
  1620  005E92  00                 	db	0
  1621  005E93  00                 	db	0
  1622  005E94  00                 	db	0
  1623  005E95  00                 	db	0
  1624  005E96  00                 	db	0
  1625  005E97  00                 	db	0
  1626  005E98  00                 	db	0
  1627  005E99                     __end_of_ECG_ICON_HEART:
  1628                           	opt callstack 0
  1629  0000                     _RCREG	set	4014
  1630  0000                     _TXREG	set	4013
  1631  0000                     _SPBRG	set	4015
  1632  0000                     _SPBRGH	set	4016
  1633  0000                     _BAUDCONbits	set	4024
  1634  0000                     _RCSTAbits	set	4011
  1635  0000                     _TXSTAbits	set	4012
  1636  0000                     _ADRESL	set	4035
  1637  0000                     _ADRESH	set	4036
  1638  0000                     _PORTAbits	set	3968
  1639  0000                     _PORTB	set	3969
  1640  0000                     _PORTCbits	set	3970
  1641  0000                     _TMR3L	set	4018
  1642  0000                     _TMR3H	set	4019
  1643  0000                     _T3CONbits	set	4017
  1644  0000                     _ADCON2bits	set	4032
  1645  0000                     _ADCON1bits	set	4033
  1646  0000                     _ADCON0bits	set	4034
  1647  0000                     _LATC	set	3979
  1648  0000                     _TRISC	set	3988
  1649  0000                     _LATB	set	3978
  1650  0000                     _TRISB	set	3987
  1651  0000                     _LATA	set	3977
  1652  0000                     _TRISA	set	3986
  1653  0000                     _UCFGbits	set	3951
  1654  0000                     _UCONbits	set	3949
  1655  0000                     _OSCTUNEbits	set	3995
  1656  0000                     _OSCCONbits	set	4051
  1657  0000                     _CREN	set	32092
  1658  0000                     _OERR	set	32089
  1659  0000                     _TXIF	set	31988
  1660  0000                     _GO_nDONE	set	32273
  1661  0000                     _RCIF	set	31989
  1662  0000                     _RCIE	set	31981
  1663  0000                     _TMR3IF	set	32009
  1664  0000                     _GIE	set	32663
  1665  0000                     _PEIE	set	32662
  1666  0000                     _TMR3IE	set	32001
  1667  0000                     _RBPU	set	32655
  1668  005E99                     STR_2:
  1669                           
  1670                           ; BSR set to: 2
  1671  005E99  49                 	db	73	;'I'
  1672  005E9A  6E                 	db	110	;'n'
  1673  005E9B  76                 	db	118	;'v'
  1674  005E9C  61                 	db	97	;'a'
  1675  005E9D  6C                 	db	108	;'l'
  1676  005E9E  69                 	db	105	;'i'
  1677  005E9F  64                 	db	100	;'d'
  1678  005EA0  20                 	db	32
  1679  005EA1  63                 	db	99	;'c'
  1680  005EA2  75                 	db	117	;'u'
  1681  005EA3  72                 	db	114	;'r'
  1682  005EA4  72                 	db	114	;'r'
  1683  005EA5  65                 	db	101	;'e'
  1684  005EA6  6E                 	db	110	;'n'
  1685  005EA7  74                 	db	116	;'t'
  1686  005EA8  20                 	db	32
  1687  005EA9  62                 	db	98	;'b'
  1688  005EAA  61                 	db	97	;'a'
  1689  005EAB  75                 	db	117	;'u'
  1690  005EAC  64                 	db	100	;'d'
  1691  005EAD  20                 	db	32
  1692  005EAE  72                 	db	114	;'r'
  1693  005EAF  61                 	db	97	;'a'
  1694  005EB0  74                 	db	116	;'t'
  1695  005EB1  65                 	db	101	;'e'
  1696  005EB2  20                 	db	32
  1697  005EB3  28                 	db	40
  1698  005EB4  25                 	db	37
  1699  005EB5  6C                 	db	108	;'l'
  1700  005EB6  75                 	db	117	;'u'
  1701  005EB7  29                 	db	41
  1702  005EB8  00                 	db	0
  1703  005EB9                     STR_18:
  1704                           
  1705                           ; BSR set to: 2
  1706  005EB9  2A                 	db	42
  1707  005EBA  2A                 	db	42
  1708  005EBB  2A                 	db	42
  1709  005EBC  20                 	db	32
  1710  005EBD  43                 	db	67	;'C'
  1711  005EBE  6F                 	db	111	;'o'
  1712  005EBF  6C                 	db	108	;'l'
  1713  005EC0  6C                 	db	108	;'l'
  1714  005EC1  65                 	db	101	;'e'
  1715  005EC2  67                 	db	103	;'g'
  1716  005EC3  61                 	db	97	;'a'
  1717  005EC4  72                 	db	114	;'r'
  1718  005EC5  65                 	db	101	;'e'
  1719  005EC6  20                 	db	32
  1720  005EC7  65                 	db	101	;'e'
  1721  005EC8  6C                 	db	108	;'l'
  1722  005EC9  65                 	db	101	;'e'
  1723  005ECA  74                 	db	116	;'t'
  1724  005ECB  74                 	db	116	;'t'
  1725  005ECC  72                 	db	114	;'r'
  1726  005ECD  6F                 	db	111	;'o'
  1727  005ECE  64                 	db	100	;'d'
  1728  005ECF  69                 	db	105	;'i'
  1729  005ED0  20                 	db	32
  1730  005ED1  2A                 	db	42
  1731  005ED2  2A                 	db	42
  1732  005ED3  2A                 	db	42
  1733  005ED4  00                 	db	0
  1734  005ED5                     STR_3:
  1735                           
  1736                           ; BSR set to: 2
  1737  005ED5  42                 	db	66	;'B'
  1738  005ED6  61                 	db	97	;'a'
  1739  005ED7  75                 	db	117	;'u'
  1740  005ED8  64                 	db	100	;'d'
  1741  005ED9  20                 	db	32
  1742  005EDA  72                 	db	114	;'r'
  1743  005EDB  61                 	db	97	;'a'
  1744  005EDC  74                 	db	116	;'t'
  1745  005EDD  65                 	db	101	;'e'
  1746  005EDE  20                 	db	32
  1747  005EDF  63                 	db	99	;'c'
  1748  005EE0  68                 	db	104	;'h'
  1749  005EE1  61                 	db	97	;'a'
  1750  005EE2  6E                 	db	110	;'n'
  1751  005EE3  67                 	db	103	;'g'
  1752  005EE4  65                 	db	101	;'e'
  1753  005EE5  64                 	db	100	;'d'
  1754  005EE6  20                 	db	32
  1755  005EE7  28                 	db	40
  1756  005EE8  2D                 	db	45
  1757  005EE9  3E                 	db	62	;'>'
  1758  005EEA  20                 	db	32
  1759  005EEB  25                 	db	37
  1760  005EEC  6C                 	db	108	;'l'
  1761  005EED  75                 	db	117	;'u'
  1762  005EEE  29                 	db	41
  1763  005EEF  00                 	db	0
  1764  005EF0                     STR_4:
  1765                           
  1766                           ; BSR set to: 2
  1767  005EF0  45                 	db	69	;'E'
  1768  005EF1  72                 	db	114	;'r'
  1769  005EF2  72                 	db	114	;'r'
  1770  005EF3  6F                 	db	111	;'o'
  1771  005EF4  72                 	db	114	;'r'
  1772  005EF5  20                 	db	32
  1773  005EF6  63                 	db	99	;'c'
  1774  005EF7  68                 	db	104	;'h'
  1775  005EF8  61                 	db	97	;'a'
  1776  005EF9  6E                 	db	110	;'n'
  1777  005EFA  67                 	db	103	;'g'
  1778  005EFB  69                 	db	105	;'i'
  1779  005EFC  6E                 	db	110	;'n'
  1780  005EFD  67                 	db	103	;'g'
  1781  005EFE  20                 	db	32
  1782  005EFF  62                 	db	98	;'b'
  1783  005F00  61                 	db	97	;'a'
  1784  005F01  75                 	db	117	;'u'
  1785  005F02  64                 	db	100	;'d'
  1786  005F03  20                 	db	32
  1787  005F04  72                 	db	114	;'r'
  1788  005F05  61                 	db	97	;'a'
  1789  005F06  74                 	db	116	;'t'
  1790  005F07  65                 	db	101	;'e'
  1791  005F08  00                 	db	0
  1792  005F09                     STR_26:
  1793                           
  1794                           ; BSR set to: 2
  1795  005F09  44                 	db	68	;'D'
  1796  005F0A  65                 	db	101	;'e'
  1797  005F0B  74                 	db	116	;'t'
  1798  005F0C  65                 	db	101	;'e'
  1799  005F0D  63                 	db	99	;'c'
  1800  005F0E  74                 	db	116	;'t'
  1801  005F0F  69                 	db	105	;'i'
  1802  005F10  6E                 	db	110	;'n'
  1803  005F11  67                 	db	103	;'g'
  1804  005F12  20                 	db	32
  1805  005F13  62                 	db	98	;'b'
  1806  005F14  61                 	db	97	;'a'
  1807  005F15  75                 	db	117	;'u'
  1808  005F16  64                 	db	100	;'d'
  1809  005F17  20                 	db	32
  1810  005F18  72                 	db	114	;'r'
  1811  005F19  61                 	db	97	;'a'
  1812  005F1A  74                 	db	116	;'t'
  1813  005F1B  65                 	db	101	;'e'
  1814  005F1C  2E                 	db	46
  1815  005F1D  2E                 	db	46
  1816  005F1E  2E                 	db	46
  1817  005F1F  00                 	db	0
  1818  005F20                     STR_1:
  1819                           
  1820                           ; BSR set to: 2
  1821  005F20  43                 	db	67	;'C'
  1822  005F21  68                 	db	104	;'h'
  1823  005F22  61                 	db	97	;'a'
  1824  005F23  6E                 	db	110	;'n'
  1825  005F24  67                 	db	103	;'g'
  1826  005F25  65                 	db	101	;'e'
  1827  005F26  20                 	db	32
  1828  005F27  62                 	db	98	;'b'
  1829  005F28  61                 	db	97	;'a'
  1830  005F29  75                 	db	117	;'u'
  1831  005F2A  64                 	db	100	;'d'
  1832  005F2B  20                 	db	32
  1833  005F2C  72                 	db	114	;'r'
  1834  005F2D  61                 	db	97	;'a'
  1835  005F2E  74                 	db	116	;'t'
  1836  005F2F  65                 	db	101	;'e'
  1837  005F30  20                 	db	32
  1838  005F31  28                 	db	40
  1839  005F32  25                 	db	37
  1840  005F33  6C                 	db	108	;'l'
  1841  005F34  75                 	db	117	;'u'
  1842  005F35  29                 	db	41
  1843  005F36  00                 	db	0
  1844  005F37                     STR_5:
  1845                           
  1846                           ; BSR set to: 2
  1847  005F37  43                 	db	67	;'C'
  1848  005F38  6F                 	db	111	;'o'
  1849  005F39  6D                 	db	109	;'m'
  1850  005F3A  6D                 	db	109	;'m'
  1851  005F3B  20                 	db	32
  1852  005F3C  69                 	db	105	;'i'
  1853  005F3D  73                 	db	115	;'s'
  1854  005F3E  20                 	db	32
  1855  005F3F  64                 	db	100	;'d'
  1856  005F40  65                 	db	101	;'e'
  1857  005F41  61                 	db	97	;'a'
  1858  005F42  64                 	db	100	;'d'
  1859  005F43  2E                 	db	46
  1860  005F44  20                 	db	32
  1861  005F45  52                 	db	82	;'R'
  1862  005F46  65                 	db	101	;'e'
  1863  005F47  74                 	db	116	;'t'
  1864  005F48  72                 	db	114	;'r'
  1865  005F49  79                 	db	121	;'y'
  1866  005F4A  2E                 	db	46
  1867  005F4B  2E                 	db	46
  1868  005F4C  2E                 	db	46
  1869  005F4D  00                 	db	0
  1870  005F4E                     STR_14:
  1871                           
  1872                           ; BSR set to: 2
  1873  005F4E  43                 	db	67	;'C'
  1874  005F4F  68                 	db	104	;'h'
  1875  005F50  65                 	db	101	;'e'
  1876  005F51  63                 	db	99	;'c'
  1877  005F52  6B                 	db	107	;'k'
  1878  005F53  20                 	db	32
  1879  005F54  72                 	db	114	;'r'
  1880  005F55  65                 	db	101	;'e'
  1881  005F56  67                 	db	103	;'g'
  1882  005F57  69                 	db	105	;'i'
  1883  005F58  73                 	db	115	;'s'
  1884  005F59  74                 	db	116	;'t'
  1885  005F5A  72                 	db	114	;'r'
  1886  005F5B  61                 	db	97	;'a'
  1887  005F5C  74                 	db	116	;'t'
  1888  005F5D  69                 	db	105	;'i'
  1889  005F5E  6F                 	db	111	;'o'
  1890  005F5F  6E                 	db	110	;'n'
  1891  005F60  00                 	db	0
  1892  005F61                     STR_10:
  1893                           
  1894                           ; BSR set to: 2
  1895  005F61  43                 	db	67	;'C'
  1896  005F62  68                 	db	104	;'h'
  1897  005F63  65                 	db	101	;'e'
  1898  005F64  63                 	db	99	;'c'
  1899  005F65  6B                 	db	107	;'k'
  1900  005F66  20                 	db	32
  1901  005F67  62                 	db	98	;'b'
  1902  005F68  61                 	db	97	;'a'
  1903  005F69  75                 	db	117	;'u'
  1904  005F6A  64                 	db	100	;'d'
  1905  005F6B  20                 	db	32
  1906  005F6C  72                 	db	114	;'r'
  1907  005F6D  61                 	db	97	;'a'
  1908  005F6E  74                 	db	116	;'t'
  1909  005F6F  65                 	db	101	;'e'
  1910  005F70  00                 	db	0
  1911  005F71                     STR_7:
  1912                           
  1913                           ; BSR set to: 2
  1914  005F71  52                 	db	82	;'R'
  1915  005F72  65                 	db	101	;'e'
  1916  005F73  73                 	db	115	;'s'
  1917  005F74  75                 	db	117	;'u'
  1918  005F75  72                 	db	114	;'r'
  1919  005F76  72                 	db	114	;'r'
  1920  005F77  65                 	db	101	;'e'
  1921  005F78  63                 	db	99	;'c'
  1922  005F79  74                 	db	116	;'t'
  1923  005F7A  65                 	db	101	;'e'
  1924  005F7B  64                 	db	100	;'d'
  1925  005F7C  21                 	db	33
  1926  005F7D  00                 	db	0
  1927  005F7E                     STR_12:
  1928                           
  1929                           ; BSR set to: 2
  1930  005F7E  43                 	db	67	;'C'
  1931  005F7F  68                 	db	104	;'h'
  1932  005F80  65                 	db	101	;'e'
  1933  005F81  63                 	db	99	;'c'
  1934  005F82  6B                 	db	107	;'k'
  1935  005F83  20                 	db	32
  1936  005F84  73                 	db	115	;'s'
  1937  005F85  69                 	db	105	;'i'
  1938  005F86  67                 	db	103	;'g'
  1939  005F87  6E                 	db	110	;'n'
  1940  005F88  61                 	db	97	;'a'
  1941  005F89  6C                 	db	108	;'l'
  1942  005F8A  00                 	db	0
  1943  005F8B                     STR_24:
  1944                           
  1945                           ; BSR set to: 2
  1946  005F8B  41                 	db	65	;'A'
  1947  005F8C  54                 	db	84	;'T'
  1948  005F8D  2B                 	db	43
  1949  005F8E  49                 	db	73	;'I'
  1950  005F8F  50                 	db	80	;'P'
  1951  005F90  52                 	db	82	;'R'
  1952  005F91  3D                 	db	61	;'='
  1953  005F92  25                 	db	37
  1954  005F93  6C                 	db	108	;'l'
  1955  005F94  75                 	db	117	;'u'
  1956  005F95  0D                 	db	13
  1957  005F96  00                 	db	0
  1958  005F97                     STR_27:
  1959                           
  1960                           ; BSR set to: 2
  1961  005F97  25                 	db	37
  1962  005F98  6C                 	db	108	;'l'
  1963  005F99  75                 	db	117	;'u'
  1964  005F9A  20                 	db	32
  1965  005F9B  46                 	db	70	;'F'
  1966  005F9C  4F                 	db	79	;'O'
  1967  005F9D  55                 	db	85	;'U'
  1968  005F9E  4E                 	db	78	;'N'
  1969  005F9F  44                 	db	68	;'D'
  1970  005FA0  21                 	db	33
  1971  005FA1  00                 	db	0
  1972  005FA2                     STR_17:
  1973                           
  1974                           ; BSR set to: 2
  1975  005FA2  46                 	db	70	;'F'
  1976  005FA3  72                 	db	114	;'r'
  1977  005FA4  65                 	db	101	;'e'
  1978  005FA5  71                 	db	113	;'q'
  1979  005FA6  75                 	db	117	;'u'
  1980  005FA7  65                 	db	101	;'e'
  1981  005FA8  6E                 	db	110	;'n'
  1982  005FA9  7A                 	db	122	;'z'
  1983  005FAA  61                 	db	97	;'a'
  1984  005FAB  3A                 	db	58	;':'
  1985  005FAC  00                 	db	0
  1986  005FAD                     STR_6:
  1987                           
  1988                           ; BSR set to: 2
  1989  005FAD  53                 	db	83	;'S'
  1990  005FAE  74                 	db	116	;'t'
  1991  005FAF  69                 	db	105	;'i'
  1992  005FB0  6C                 	db	108	;'l'
  1993  005FB1  6C                 	db	108	;'l'
  1994  005FB2  20                 	db	32
  1995  005FB3  64                 	db	100	;'d'
  1996  005FB4  65                 	db	101	;'e'
  1997  005FB5  61                 	db	97	;'a'
  1998  005FB6  64                 	db	100	;'d'
  1999  005FB7  00                 	db	0
  2000  005FB8                     STR_8:
  2001                           
  2002                           ; BSR set to: 2
  2003  005FB8  43                 	db	67	;'C'
  2004  005FB9  68                 	db	104	;'h'
  2005  005FBA  65                 	db	101	;'e'
  2006  005FBB  63                 	db	99	;'c'
  2007  005FBC  6B                 	db	107	;'k'
  2008  005FBD  20                 	db	32
  2009  005FBE  74                 	db	116	;'t'
  2010  005FBF  69                 	db	105	;'i'
  2011  005FC0  6D                 	db	109	;'m'
  2012  005FC1  65                 	db	101	;'e'
  2013  005FC2  00                 	db	0
  2014  005FC3                     STR_15:
  2015                           
  2016                           ; BSR set to: 2
  2017  005FC3  41                 	db	65	;'A'
  2018  005FC4  54                 	db	84	;'T'
  2019  005FC5  2B                 	db	43
  2020  005FC6  43                 	db	67	;'C'
  2021  005FC7  52                 	db	82	;'R'
  2022  005FC8  45                 	db	69	;'E'
  2023  005FC9  47                 	db	71	;'G'
  2024  005FCA  3F                 	db	63	;'?'
  2025  005FCB  0D                 	db	13
  2026  005FCC  00                 	db	0
  2027  005FCD                     STR_9:
  2028                           
  2029                           ; BSR set to: 2
  2030  005FCD  41                 	db	65	;'A'
  2031  005FCE  54                 	db	84	;'T'
  2032  005FCF  2B                 	db	43
  2033  005FD0  43                 	db	67	;'C'
  2034  005FD1  43                 	db	67	;'C'
  2035  005FD2  4C                 	db	76	;'L'
  2036  005FD3  4B                 	db	75	;'K'
  2037  005FD4  3F                 	db	63	;'?'
  2038  005FD5  0D                 	db	13
  2039  005FD6  00                 	db	0
  2040  005FD7                     STR_21:
  2041                           
  2042                           ; BSR set to: 2
  2043  005FD7  41                 	db	65	;'A'
  2044  005FD8  54                 	db	84	;'T'
  2045  005FD9  2B                 	db	43
  2046  005FDA  49                 	db	73	;'I'
  2047  005FDB  50                 	db	80	;'P'
  2048  005FDC  52                 	db	82	;'R'
  2049  005FDD  3F                 	db	63	;'?'
  2050  005FDE  0D                 	db	13
  2051  005FDF  00                 	db	0
  2052  005FE0                     STR_13:
  2053                           
  2054                           ; BSR set to: 2
  2055  005FE0  41                 	db	65	;'A'
  2056  005FE1  54                 	db	84	;'T'
  2057  005FE2  2B                 	db	43
  2058  005FE3  43                 	db	67	;'C'
  2059  005FE4  53                 	db	83	;'S'
  2060  005FE5  51                 	db	81	;'Q'
  2061  005FE6  0D                 	db	13
  2062  005FE7  00                 	db	0
  2063  005FE8                     STR_22:
  2064                           
  2065                           ; BSR set to: 2
  2066  005FE8  2B                 	db	43
  2067  005FE9  49                 	db	73	;'I'
  2068  005FEA  50                 	db	80	;'P'
  2069  005FEB  52                 	db	82	;'R'
  2070  005FEC  3A                 	db	58	;':'
  2071  005FED  20                 	db	32
  2072  005FEE  00                 	db	0
  2073  005FEF                     STR_19:
  2074                           
  2075                           ; BSR set to: 2
  2076  005FEF  41                 	db	65	;'A'
  2077  005FF0  54                 	db	84	;'T'
  2078  005FF1  0D                 	db	13
  2079  005FF2  00                 	db	0
  2080  005FF3                     
  2081                           ; BSR set to: 2
  2082  005FF3  25                 	db	37
  2083  005FF4  33                 	db	51	;'3'
  2084  005FF5  64                 	db	100	;'d'
  2085  005FF6  00                 	db	0
  2086  005FF7                     STR_11:
  2087                           
  2088                           ; BSR set to: 2
  2089  005FF7  25                 	db	37
  2090  005FF8  6C                 	db	108	;'l'
  2091  005FF9  75                 	db	117	;'u'
  2092  005FFA  00                 	db	0
  2093  005FFB                     STR_20:
  2094                           
  2095                           ; BSR set to: 2
  2096  005FFB  4F                 	db	79	;'O'
  2097  005FFC  4B                 	db	75	;'K'
  2098  005FFD  00                 	db	0
  2099  0000                     
  2100                           ; #config settings
  2101  005FFE  00                 	db	0	; dummy byte at the end
  2102  0000                     
  2103                           	psect	cinit
  2104  001F22                     __pcinit:
  2105                           	opt callstack 0
  2106  001F22                     start_initialization:
  2107                           	opt callstack 0
  2108  001F22                     __initialization:
  2109                           	opt callstack 0
  2110                           
  2111                           ; Initialize objects allocated to BANK0 (6 bytes)
  2112                           ; load TBLPTR registers with __pidataBANK0
  2113  001F22  0EF4               	movlw	low __pidataBANK0
  2114  001F24  6EF6               	movwf	tblptrl,c
  2115  001F26  0E26               	movlw	high __pidataBANK0
  2116  001F28  6EF7               	movwf	tblptrh,c
  2117  001F2A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2118  001F2C  6EF8               	movwf	tblptru,c
  2119  001F2E  EE00  F0C6         	lfsr	0,__pdataBANK0
  2120  001F32  EE10 F006          	lfsr	1,6
  2121  001F36                     copy_data0:
  2122  001F36  0009               	tblrd		*+
  2123  001F38  CFF5 FFEE          	movff	tablat,postinc0
  2124  001F3C  50E5               	movf	postdec1,w,c
  2125  001F3E  50E1               	movf	fsr1l,w,c
  2126  001F40  E1FA               	bnz	copy_data0
  2127                           
  2128                           ; Initialize objects allocated to COMRAM (2 bytes)
  2129                           ; load TBLPTR registers with __pidataCOMRAM
  2130  001F42  0E00               	movlw	low __pidataCOMRAM
  2131  001F44  6EF6               	movwf	tblptrl,c
  2132  001F46  0E27               	movlw	high __pidataCOMRAM
  2133  001F48  6EF7               	movwf	tblptrh,c
  2134  001F4A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2135  001F4C  6EF8               	movwf	tblptru,c
  2136  001F4E  0009               	tblrd		*+	;fetch initializer
  2137  001F50  CFF5 F059          	movff	tablat,__pdataCOMRAM
  2138  001F54  0009               	tblrd		*+	;fetch initializer
  2139  001F56  CFF5 F05A          	movff	tablat,__pdataCOMRAM+1
  2140                           
  2141                           ; Clear objects allocated to BANK2 (130 bytes)
  2142  001F5A  EE02  F000         	lfsr	0,__pbssBANK2
  2143  001F5E  0E82               	movlw	130
  2144  001F60                     clear_0:
  2145  001F60  6AEE               	clrf	postinc0,c
  2146  001F62  06E8               	decf	wreg,f,c
  2147  001F64  E1FD               	bnz	clear_0
  2148                           
  2149                           ; Clear objects allocated to BANK1 (24 bytes)
  2150  001F66  EE01  F0A8         	lfsr	0,__pbssBANK1
  2151  001F6A  0E18               	movlw	24
  2152  001F6C                     clear_1:
  2153  001F6C  6AEE               	clrf	postinc0,c
  2154  001F6E  06E8               	decf	wreg,f,c
  2155  001F70  E1FD               	bnz	clear_1
  2156                           
  2157                           ; Clear objects allocated to BANK0 (26 bytes)
  2158  001F72  EE00  F0AC         	lfsr	0,__pbssBANK0
  2159  001F76  0E1A               	movlw	26
  2160  001F78                     clear_2:
  2161  001F78  6AEE               	clrf	postinc0,c
  2162  001F7A  06E8               	decf	wreg,f,c
  2163  001F7C  E1FD               	bnz	clear_2
  2164                           
  2165                           ; Clear objects allocated to COMRAM (2 bytes)
  2166  001F7E  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2167  001F80  6A57               	clrf	__pbssCOMRAM& (0+255),c
  2168  001F82                     end_of_initialization:
  2169                           	opt callstack 0
  2170  001F82                     __end_of__initialization:
  2171                           	opt callstack 0
  2172  001F82  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2173  001F84  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2174  001F86  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2175  001F88  6EF8               	movwf	tblptru,c
  2176  001F8A  0100               	movlb	0
  2177  001F8C  EF32  F013         	goto	_main	;jump to C main() function
  2178                           
  2179                           	psect	bssCOMRAM
  2180  000057                     __pbssCOMRAM:
  2181                           	opt callstack 0
  2182  000057                     _ECG_FLAGS:
  2183                           	opt callstack 0
  2184  000057                     	ds	2
  2185                           
  2186                           	psect	dataCOMRAM
  2187  000059                     __pdataCOMRAM:
  2188                           	opt callstack 0
  2189  000059                     _Ecg_Y:
  2190                           	opt callstack 0
  2191  000059                     	ds	2
  2192                           
  2193                           	psect	bssBANK0
  2194  0000AC                     __pbssBANK0:
  2195                           	opt callstack 0
  2196  0000AC                     _ECG_HEARTBEAT:
  2197                           	opt callstack 0
  2198  0000AC                     	ds	13
  2199  0000B9                     _ECG_BUFFER:
  2200                           	opt callstack 0
  2201  0000B9                     	ds	5
  2202  0000BE                     _ECG_HEARTRATE:
  2203                           	opt callstack 0
  2204  0000BE                     	ds	4
  2205  0000C2                     strtok@sp:
  2206                           	opt callstack 0
  2207  0000C2                     	ds	2
  2208  0000C4                     _consoleX:
  2209                           	opt callstack 0
  2210  0000C4                     	ds	2
  2211                           
  2212                           	psect	dataBANK0
  2213  0000C6                     __pdataBANK0:
  2214                           	opt callstack 0
  2215  0000C6                     _Ecg_Yold:
  2216                           	opt callstack 0
  2217  0000C6                     	ds	2
  2218  0000C8                     _Ecg_Xold:
  2219                           	opt callstack 0
  2220  0000C8                     	ds	2
  2221  0000CA                     _Ecg_X:
  2222                           	opt callstack 0
  2223  0000CA                     	ds	2
  2224                           
  2225                           	psect	bssBANK1
  2226  0001A8                     __pbssBANK1:
  2227                           	opt callstack 0
  2228  0001A8                     _tmp5:
  2229                           	opt callstack 0
  2230  0001A8                     	ds	4
  2231  0001AC                     _tmp4:
  2232                           	opt callstack 0
  2233  0001AC                     	ds	4
  2234  0001B0                     _tmp3:
  2235                           	opt callstack 0
  2236  0001B0                     	ds	4
  2237  0001B4                     _tmp2:
  2238                           	opt callstack 0
  2239  0001B4                     	ds	4
  2240  0001B8                     _tmp1:
  2241                           	opt callstack 0
  2242  0001B8                     	ds	4
  2243  0001BC                     _MILLISECONDS:
  2244                           	opt callstack 0
  2245  0001BC                     	ds	4
  2246                           
  2247                           	psect	bssBANK2
  2248  000200                     __pbssBANK2:
  2249                           	opt callstack 0
  2250  000200                     _EUSART_RX:
  2251                           	opt callstack 0
  2252  000200                     	ds	130
  2253                           
  2254                           	psect	cstackBANK1
  2255  000100                     __pcstackBANK1:
  2256                           	opt callstack 0
  2257  000100                     loop@response:
  2258                           	opt callstack 0
  2259                           
  2260                           ; 32 bytes @ 0x0
  2261  000100                     	ds	32
  2262  000120                     loop@response_152:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 32 bytes @ 0x20
  2266  000120                     	ds	32
  2267  000140                     loop@response_155:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 32 bytes @ 0x40
  2271  000140                     	ds	32
  2272  000160                     loop@zzzz_149:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 32 bytes @ 0x60
  2276  000160                     	ds	32
  2277  000180                     loop@zzzz:
  2278                           	opt callstack 0
  2279                           
  2280                           ; 32 bytes @ 0x80
  2281  000180                     	ds	32
  2282  0001A0                     _loop$139:
  2283                           	opt callstack 0
  2284                           
  2285                           ; 2 bytes @ 0xA0
  2286  0001A0                     	ds	2
  2287  0001A2                     _loop$144:
  2288                           	opt callstack 0
  2289                           
  2290                           ; 2 bytes @ 0xA2
  2291  0001A2                     	ds	2
  2292  0001A4                     loop@zz:
  2293                           	opt callstack 0
  2294                           
  2295                           ; 4 bytes @ 0xA4
  2296  0001A4                     	ds	4
  2297                           
  2298                           	psect	cstackBANK0
  2299  000060                     __pcstackBANK0:
  2300                           	opt callstack 0
  2301  000060                     sprintf@prec:
  2302                           	opt callstack 0
  2303  000060                     A6_Process_Random_Comms@response:
  2304                           	opt callstack 0
  2305                           
  2306                           ; 32 bytes @ 0x0
  2307  000060                     	ds	2
  2308  000062                     sprintf@val:
  2309                           	opt callstack 0
  2310                           
  2311                           ; 4 bytes @ 0x2
  2312  000062                     	ds	4
  2313  000066                     sprintf@ap:
  2314                           	opt callstack 0
  2315                           
  2316                           ; 2 bytes @ 0x6
  2317  000066                     	ds	2
  2318  000068                     sprintf@flag:
  2319                           	opt callstack 0
  2320                           
  2321                           ; 1 bytes @ 0x8
  2322  000068                     	ds	1
  2323  000069                     sprintf@width:
  2324                           	opt callstack 0
  2325                           
  2326                           ; 2 bytes @ 0x9
  2327  000069                     	ds	2
  2328  00006B                     sprintf@c:
  2329                           	opt callstack 0
  2330                           
  2331                           ; 1 bytes @ 0xB
  2332  00006B                     	ds	1
  2333  00006C                     ?_A6_BaudRateSet:
  2334                           	opt callstack 0
  2335  00006C                     A6_BaudRateSet@baudRate:
  2336                           	opt callstack 0
  2337  00006C                     A6_BaudRateAutoDetect@zzzz:
  2338                           	opt callstack 0
  2339                           
  2340                           ; 32 bytes @ 0xC
  2341  00006C                     	ds	4
  2342  000070                     A6_BaudRateSet@response:
  2343                           	opt callstack 0
  2344                           
  2345                           ; 32 bytes @ 0x10
  2346  000070                     	ds	16
  2347  000080                     A6_Process_Random_Comms@cnt:
  2348                           	opt callstack 0
  2349                           
  2350                           ; 1 bytes @ 0x20
  2351  000080                     	ds	12
  2352  00008C                     A6_BaudRateAutoDetect@i:
  2353                           	opt callstack 0
  2354                           
  2355                           ; 1 bytes @ 0x2C
  2356  00008C                     	ds	4
  2357  000090                     A6_BaudRateSet@request:
  2358                           	opt callstack 0
  2359                           
  2360                           ; 20 bytes @ 0x30
  2361  000090                     	ds	20
  2362  0000A4                     A6_BaudRateSet@currentBaudRate:
  2363                           	opt callstack 0
  2364                           
  2365                           ; 4 bytes @ 0x44
  2366  0000A4                     	ds	4
  2367  0000A8                     ??_loop:
  2368                           
  2369                           ; 1 bytes @ 0x48
  2370  0000A8                     	ds	4
  2371                           
  2372                           	psect	cstackCOMRAM
  2373  000001                     __pcstackCOMRAM:
  2374                           	opt callstack 0
  2375  000001                     ??_Ecg_Interrupt:
  2376  000001                     ??_EUSART_RX_Interrupt:
  2377  000001                     
  2378                           ; 4 bytes @ 0x0
  2379  000001                     	ds	1
  2380  000002                     EUSART_RX_Interrupt@c:
  2381                           	opt callstack 0
  2382                           
  2383                           ; 1 bytes @ 0x1
  2384  000002                     	ds	1
  2385  000003                     ??_isr:
  2386                           
  2387                           ; 1 bytes @ 0x2
  2388  000003                     	ds	2
  2389  000005                     ??_init:
  2390  000005                     ??_isdigit:
  2391  000005                     ??_TFT_Reset:
  2392  000005                     ?_abs:
  2393                           	opt callstack 0
  2394  000005                     ?_Ecg_CheckLeads:
  2395                           	opt callstack 0
  2396  000005                     ?_strcmp:
  2397                           	opt callstack 0
  2398  000005                     ?_strlen:
  2399                           	opt callstack 0
  2400  000005                     ?_strchr:
  2401                           	opt callstack 0
  2402  000005                     ?___wmul:
  2403                           	opt callstack 0
  2404  000005                     ?___awdiv:
  2405                           	opt callstack 0
  2406  000005                     ?___lmul:
  2407                           	opt callstack 0
  2408  000005                     ?___lldiv:
  2409                           	opt callstack 0
  2410  000005                     EUSART_TX_Char@c:
  2411                           	opt callstack 0
  2412  000005                     TFT_WriteRegister@reg:
  2413                           	opt callstack 0
  2414  000005                     EUSART_RX_AvailableData@timeout:
  2415                           	opt callstack 0
  2416  000005                     ___wmul@multiplier:
  2417                           	opt callstack 0
  2418  000005                     ___awdiv@dividend:
  2419                           	opt callstack 0
  2420  000005                     abs@a:
  2421                           	opt callstack 0
  2422  000005                     memset@p1:
  2423                           	opt callstack 0
  2424  000005                     strcmp@s1:
  2425                           	opt callstack 0
  2426  000005                     strlen@s:
  2427                           	opt callstack 0
  2428  000005                     strchr@ptr:
  2429                           	opt callstack 0
  2430  000005                     sleepMS@ms:
  2431                           	opt callstack 0
  2432  000005                     ___lmul@multiplier:
  2433                           	opt callstack 0
  2434  000005                     ___lldiv@dividend:
  2435                           	opt callstack 0
  2436                           
  2437                           ; 4 bytes @ 0x4
  2438  000005                     	ds	1
  2439  000006                     _isdigit$1881:
  2440                           	opt callstack 0
  2441                           
  2442                           ; 1 bytes @ 0x5
  2443  000006                     	ds	1
  2444  000007                     ??_abs:
  2445  000007                     ??_Ecg_CheckLeads:
  2446  000007                     ??_EUSART_RX_AvailableData:
  2447  000007                     isdigit@c:
  2448                           	opt callstack 0
  2449  000007                     TFT_WriteRegister@data:
  2450                           	opt callstack 0
  2451  000007                     ___wmul@multiplicand:
  2452                           	opt callstack 0
  2453  000007                     ___awdiv@divisor:
  2454                           	opt callstack 0
  2455  000007                     memset@c:
  2456                           	opt callstack 0
  2457  000007                     strcmp@s2:
  2458                           	opt callstack 0
  2459  000007                     strlen@cp:
  2460                           	opt callstack 0
  2461  000007                     strchr@chr:
  2462                           	opt callstack 0
  2463                           
  2464                           ; 2 bytes @ 0x6
  2465  000007                     	ds	1
  2466  000008                     Ecg_CheckLeads@leadsStatus:
  2467                           	opt callstack 0
  2468                           
  2469                           ; 1 bytes @ 0x7
  2470  000008                     	ds	1
  2471  000009                     ??_strcmp:
  2472  000009                     ??_strchr:
  2473  000009                     ?_strncmp:
  2474                           	opt callstack 0
  2475  000009                     TFT_WriteRegister@h:
  2476                           	opt callstack 0
  2477  000009                     ___awdiv@counter:
  2478                           	opt callstack 0
  2479  000009                     EUSART_TX_String@str:
  2480                           	opt callstack 0
  2481  000009                     ___wmul@product:
  2482                           	opt callstack 0
  2483  000009                     memset@n:
  2484                           	opt callstack 0
  2485  000009                     strncmp@s1:
  2486                           	opt callstack 0
  2487  000009                     sleepMS@t:
  2488                           	opt callstack 0
  2489  000009                     ___lmul@multiplicand:
  2490                           	opt callstack 0
  2491  000009                     ___lldiv@divisor:
  2492                           	opt callstack 0
  2493                           
  2494                           ; 4 bytes @ 0x8
  2495  000009                     	ds	1
  2496  00000A                     TFT_WriteRegister@l:
  2497                           	opt callstack 0
  2498  00000A                     ___awdiv@sign:
  2499                           	opt callstack 0
  2500                           
  2501                           ; 1 bytes @ 0x9
  2502  00000A                     	ds	1
  2503  00000B                     ?_strspn:
  2504                           	opt callstack 0
  2505  00000B                     ?_strcspn:
  2506                           	opt callstack 0
  2507  00000B                     TFT_WriteRegister@h_724:
  2508                           	opt callstack 0
  2509  00000B                     EUSART_TX_String@len:
  2510                           	opt callstack 0
  2511  00000B                     strcmp@r:
  2512                           	opt callstack 0
  2513  00000B                     ___awdiv@quotient:
  2514                           	opt callstack 0
  2515  00000B                     memset@p:
  2516                           	opt callstack 0
  2517  00000B                     strcspn@s1:
  2518                           	opt callstack 0
  2519  00000B                     strncmp@s2:
  2520                           	opt callstack 0
  2521  00000B                     strspn@s1:
  2522                           	opt callstack 0
  2523  00000B                     EUSART_RX_AvailableData@t:
  2524                           	opt callstack 0
  2525                           
  2526                           ; 4 bytes @ 0xA
  2527  00000B                     	ds	1
  2528  00000C                     TFT_WriteRegister@l_725:
  2529                           	opt callstack 0
  2530                           
  2531                           ; 1 bytes @ 0xB
  2532  00000C                     	ds	1
  2533  00000D                     TFT_SetAddrWindow@x1:
  2534                           	opt callstack 0
  2535  00000D                     TFT_DrawPixel@x:
  2536                           	opt callstack 0
  2537  00000D                     TFT_Flood@color:
  2538                           	opt callstack 0
  2539  00000D                     strcspn@s2:
  2540                           	opt callstack 0
  2541  00000D                     strncmp@len:
  2542                           	opt callstack 0
  2543  00000D                     strspn@s2:
  2544                           	opt callstack 0
  2545  00000D                     ___lmul@product:
  2546                           	opt callstack 0
  2547  00000D                     ___lldiv@quotient:
  2548                           	opt callstack 0
  2549                           
  2550                           ; 4 bytes @ 0xC
  2551  00000D                     	ds	2
  2552  00000F                     ??_strncmp:
  2553  00000F                     ??_strspn:
  2554  00000F                     ??_strcspn:
  2555  00000F                     TFT_SetAddrWindow@y1:
  2556                           	opt callstack 0
  2557  00000F                     TFT_DrawPixel@y:
  2558                           	opt callstack 0
  2559  00000F                     EUSART_BufferGetChar@timeout:
  2560                           	opt callstack 0
  2561  00000F                     TFT_Flood@len:
  2562                           	opt callstack 0
  2563                           
  2564                           ; 4 bytes @ 0xE
  2565  00000F                     	ds	1
  2566  000010                     ?_strstr:
  2567                           	opt callstack 0
  2568  000010                     strstr@s1:
  2569                           	opt callstack 0
  2570  000010                     strcspn@i:
  2571                           	opt callstack 0
  2572  000010                     strspn@i:
  2573                           	opt callstack 0
  2574                           
  2575                           ; 2 bytes @ 0xF
  2576  000010                     	ds	1
  2577  000011                     ?_atol:
  2578                           	opt callstack 0
  2579  000011                     ___lldiv@counter:
  2580                           	opt callstack 0
  2581  000011                     TFT_SetAddrWindow@x2:
  2582                           	opt callstack 0
  2583  000011                     TFT_DrawPixel@color:
  2584                           	opt callstack 0
  2585  000011                     A6_ReadLine@response:
  2586                           	opt callstack 0
  2587  000011                     atol@s:
  2588                           	opt callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x10
  2591  000011                     	ds	1
  2592  000012                     ?_strtok:
  2593                           	opt callstack 0
  2594  000012                     ?___llmod:
  2595                           	opt callstack 0
  2596  000012                     strstr@s2:
  2597                           	opt callstack 0
  2598  000012                     strtok@s1:
  2599                           	opt callstack 0
  2600  000012                     EUSART_BaudRateSet@baudRate:
  2601                           	opt callstack 0
  2602  000012                     ___llmod@dividend:
  2603                           	opt callstack 0
  2604                           
  2605                           ; 4 bytes @ 0x11
  2606  000012                     	ds	1
  2607  000013                     ??_TFT_Flood:
  2608  000013                     A6_ReadLine@responseLen:
  2609                           	opt callstack 0
  2610  000013                     TFT_SetAddrWindow@y2:
  2611                           	opt callstack 0
  2612  000013                     TFT_DrawLine@x0:
  2613                           	opt callstack 0
  2614                           
  2615                           ; 2 bytes @ 0x12
  2616  000013                     	ds	1
  2617  000014                     A6_ReadLine@timeout:
  2618                           	opt callstack 0
  2619  000014                     strtok@s2:
  2620                           	opt callstack 0
  2621                           
  2622                           ; 2 bytes @ 0x13
  2623  000014                     	ds	1
  2624  000015                     ??_atol:
  2625  000015                     TFT_DrawLine@y0:
  2626                           	opt callstack 0
  2627                           
  2628                           ; 2 bytes @ 0x14
  2629  000015                     	ds	1
  2630  000016                     ??_EUSART_BaudRateSet:
  2631  000016                     A6_ReadLine@iResponse:
  2632                           	opt callstack 0
  2633  000016                     ___llmod@divisor:
  2634                           	opt callstack 0
  2635                           
  2636                           ; 4 bytes @ 0x15
  2637  000016                     	ds	1
  2638  000017                     A6_ReadLine@c:
  2639                           	opt callstack 0
  2640  000017                     TFT_DrawLine@x1:
  2641                           	opt callstack 0
  2642  000017                     TFT_Flood@blocks:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 2 bytes @ 0x16
  2646  000017                     	ds	1
  2647  000018                     A6_Command@command:
  2648                           	opt callstack 0
  2649                           
  2650                           ; 2 bytes @ 0x17
  2651  000018                     	ds	1
  2652  000019                     TFT_Flood@i:
  2653                           	opt callstack 0
  2654  000019                     atol@sign:
  2655                           	opt callstack 0
  2656  000019                     TFT_DrawLine@y1:
  2657                           	opt callstack 0
  2658                           
  2659                           ; 2 bytes @ 0x18
  2660  000019                     	ds	1
  2661  00001A                     TFT_Flood@color_hi:
  2662                           	opt callstack 0
  2663  00001A                     ___llmod@counter:
  2664                           	opt callstack 0
  2665  00001A                     A6_Command@timeout:
  2666                           	opt callstack 0
  2667  00001A                     EUSART_BaudRateSet@tmp:
  2668                           	opt callstack 0
  2669  00001A                     atol@a:
  2670                           	opt callstack 0
  2671                           
  2672                           ; 4 bytes @ 0x19
  2673  00001A                     	ds	1
  2674  00001B                     TFT_Flood@color_lo:
  2675                           	opt callstack 0
  2676  00001B                     TFT_DrawLine@color:
  2677                           	opt callstack 0
  2678                           
  2679                           ; 2 bytes @ 0x1A
  2680  00001B                     	ds	1
  2681  00001C                     TFT_DrawFillRect@x:
  2682                           	opt callstack 0
  2683  00001C                     TFT_FillScreen@color:
  2684                           	opt callstack 0
  2685  00001C                     A6_Command@response:
  2686                           	opt callstack 0
  2687                           
  2688                           ; 2 bytes @ 0x1B
  2689  00001C                     	ds	1
  2690  00001D                     ??_TFT_DrawLine:
  2691                           
  2692                           ; 1 bytes @ 0x1C
  2693  00001D                     	ds	1
  2694  00001E                     ??_TFT_Init:
  2695  00001E                     A6_Command@responseLen:
  2696                           	opt callstack 0
  2697  00001E                     atol@c:
  2698                           	opt callstack 0
  2699  00001E                     TFT_DrawFillRect@y:
  2700                           	opt callstack 0
  2701                           
  2702                           ; 2 bytes @ 0x1D
  2703  00001E                     	ds	1
  2704  00001F                     ?_A6_BaudRateGet:
  2705                           	opt callstack 0
  2706  00001F                     A6_IsAlive@response:
  2707                           	opt callstack 0
  2708                           
  2709                           ; 32 bytes @ 0x1E
  2710  00001F                     	ds	1
  2711  000020                     TFT_Init@data:
  2712                           	opt callstack 0
  2713  000020                     TFT_DrawLine@t:
  2714                           	opt callstack 0
  2715  000020                     TFT_DrawFillRect@w:
  2716                           	opt callstack 0
  2717                           
  2718                           ; 2 bytes @ 0x1F
  2719  000020                     	ds	2
  2720  000022                     TFT_Init@initSequenceSize:
  2721                           	opt callstack 0
  2722  000022                     TFT_DrawLine@t_769:
  2723                           	opt callstack 0
  2724  000022                     TFT_DrawFillRect@h:
  2725                           	opt callstack 0
  2726                           
  2727                           ; 2 bytes @ 0x21
  2728  000022                     	ds	1
  2729  000023                     A6_BaudRateGet@response:
  2730                           	opt callstack 0
  2731                           
  2732                           ; 32 bytes @ 0x22
  2733  000023                     	ds	1
  2734  000024                     TFT_Init@cmd:
  2735                           	opt callstack 0
  2736  000024                     TFT_DrawLine@t_770:
  2737                           	opt callstack 0
  2738  000024                     TFT_DrawFillRect@color:
  2739                           	opt callstack 0
  2740                           
  2741                           ; 2 bytes @ 0x23
  2742  000024                     	ds	2
  2743  000026                     ??_TFT_DrawFillRect:
  2744  000026                     TFT_Init@i:
  2745                           	opt callstack 0
  2746  000026                     TFT_DrawLine@t_771:
  2747                           	opt callstack 0
  2748                           
  2749                           ; 2 bytes @ 0x25
  2750  000026                     	ds	2
  2751  000028                     TFT_DrawLine@dy:
  2752                           	opt callstack 0
  2753                           
  2754                           ; 2 bytes @ 0x27
  2755  000028                     	ds	2
  2756  00002A                     TFT_DrawLine@ystep:
  2757                           	opt callstack 0
  2758  00002A                     TFT_DrawChar@x:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x29
  2762  00002A                     	ds	2
  2763  00002C                     TFT_DrawLine@err:
  2764                           	opt callstack 0
  2765  00002C                     TFT_DrawChar@y:
  2766                           	opt callstack 0
  2767                           
  2768                           ; 2 bytes @ 0x2B
  2769  00002C                     	ds	2
  2770  00002E                     TFT_DrawChar@c:
  2771                           	opt callstack 0
  2772  00002E                     TFT_DrawLine@steep:
  2773                           	opt callstack 0
  2774                           
  2775                           ; 2 bytes @ 0x2D
  2776  00002E                     	ds	1
  2777  00002F                     TFT_DrawChar@color:
  2778                           	opt callstack 0
  2779                           
  2780                           ; 2 bytes @ 0x2E
  2781  00002F                     	ds	1
  2782  000030                     TFT_DrawLine@dx:
  2783                           	opt callstack 0
  2784                           
  2785                           ; 2 bytes @ 0x2F
  2786  000030                     	ds	1
  2787  000031                     TFT_DrawChar@bg:
  2788                           	opt callstack 0
  2789                           
  2790                           ; 2 bytes @ 0x30
  2791  000031                     	ds	2
  2792  000033                     TFT_DrawChar@size:
  2793                           	opt callstack 0
  2794                           
  2795                           ; 1 bytes @ 0x32
  2796  000033                     	ds	1
  2797  000034                     ??_TFT_DrawChar:
  2798                           
  2799                           ; 1 bytes @ 0x33
  2800  000034                     	ds	4
  2801  000038                     TFT_DrawChar@line:
  2802                           	opt callstack 0
  2803                           
  2804                           ; 1 bytes @ 0x37
  2805  000038                     	ds	1
  2806  000039                     _TFT_DrawChar$2152:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 2 bytes @ 0x38
  2810  000039                     	ds	2
  2811  00003B                     _TFT_DrawChar$2153:
  2812                           	opt callstack 0
  2813                           
  2814                           ; 2 bytes @ 0x3A
  2815  00003B                     	ds	2
  2816  00003D                     TFT_DrawChar@j:
  2817                           	opt callstack 0
  2818                           
  2819                           ; 1 bytes @ 0x3C
  2820  00003D                     	ds	1
  2821  00003E                     TFT_DrawChar@i:
  2822                           	opt callstack 0
  2823                           
  2824                           ; 1 bytes @ 0x3D
  2825  00003E                     	ds	1
  2826  00003F                     A6_IsAlive@loop:
  2827                           	opt callstack 0
  2828  00003F                     TFT_DrawString@x:
  2829                           	opt callstack 0
  2830                           
  2831                           ; 2 bytes @ 0x3E
  2832  00003F                     	ds	2
  2833  000041                     TFT_DrawString@y:
  2834                           	opt callstack 0
  2835                           
  2836                           ; 2 bytes @ 0x40
  2837  000041                     	ds	2
  2838  000043                     A6_BaudRateGet@loop:
  2839                           	opt callstack 0
  2840  000043                     TFT_DrawString@str:
  2841                           	opt callstack 0
  2842                           
  2843                           ; 2 bytes @ 0x42
  2844  000043                     	ds	1
  2845  000044                     A6_BaudRateGet@baudRate:
  2846                           	opt callstack 0
  2847                           
  2848                           ; 4 bytes @ 0x43
  2849  000044                     	ds	1
  2850  000045                     TFT_DrawString@color:
  2851                           	opt callstack 0
  2852                           
  2853                           ; 2 bytes @ 0x44
  2854  000045                     	ds	2
  2855  000047                     TFT_DrawString@bg:
  2856                           	opt callstack 0
  2857                           
  2858                           ; 2 bytes @ 0x46
  2859  000047                     	ds	1
  2860  000048                     A6_BaudRateGet@baudRateToken:
  2861                           	opt callstack 0
  2862                           
  2863                           ; 2 bytes @ 0x47
  2864  000048                     	ds	1
  2865  000049                     TFT_DrawString@size:
  2866                           	opt callstack 0
  2867                           
  2868                           ; 1 bytes @ 0x48
  2869  000049                     	ds	1
  2870  00004A                     A6_BaudRateGet@j:
  2871                           	opt callstack 0
  2872  00004A                     printLine@str:
  2873                           	opt callstack 0
  2874                           
  2875                           ; 2 bytes @ 0x49
  2876  00004A                     	ds	1
  2877  00004B                     ?_sprintf:
  2878                           	opt callstack 0
  2879  00004B                     sprintf@sp:
  2880                           	opt callstack 0
  2881                           
  2882                           ; 2 bytes @ 0x4A
  2883  00004B                     	ds	1
  2884  00004C                     printLine@color:
  2885                           	opt callstack 0
  2886                           
  2887                           ; 2 bytes @ 0x4B
  2888  00004C                     	ds	1
  2889  00004D                     sprintf@f:
  2890                           	opt callstack 0
  2891                           
  2892                           ; 2 bytes @ 0x4C
  2893  00004D                     	ds	1
  2894  00004E                     
  2895                           ; 1 bytes @ 0x4D
  2896  00004E                     	ds	5
  2897  000053                     ??_sprintf:
  2898                           
  2899                           ; 1 bytes @ 0x52
  2900  000053                     	ds	4
  2901  000057                     
  2902                           ; 1 bytes @ 0x56
  2903 ;;
  2904 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2905 ;;
  2906 ;; *************** function _main *****************
  2907 ;; Defined at:
  2908 ;;		line 12 in file "main.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;		None
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;		None
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels required when called:   11
  2928 ;; This function calls:
  2929 ;;		_A6_Init
  2930 ;;		_EUSART_Init
  2931 ;;		_Ecg_Init
  2932 ;;		_TFT_Init
  2933 ;;		_init
  2934 ;;		_loop
  2935 ;; This function is called by:
  2936 ;;		Startup code after reset
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text0
  2941  002664                     __ptext0:
  2942                           	opt callstack 0
  2943  002664                     _main:
  2944                           	opt callstack 20
  2945  002664                     
  2946                           ;main.c: 14: init();
  2947  002664  EC58  F00F         	call	_init	;wreg free
  2948  002668                     
  2949                           ;main.c: 15: TFT_Init();
  2950  002668  EC00  F00A         	call	_TFT_Init	;wreg free
  2951  00266C                     
  2952                           ;main.c: 16: EUSART_Init();
  2953  00266C  ECA5  F011         	call	_EUSART_Init	;wreg free
  2954  002670                     
  2955                           ;main.c: 17: Ecg_Init();
  2956  002670  ECF4  F012         	call	_Ecg_Init	;wreg free
  2957  002674                     
  2958                           ;main.c: 18: A6_Init();
  2959  002674  EC61  F013         	call	_A6_Init	;wreg free
  2960  002678                     l4182:
  2961  002678  EC09  F000         	call	_loop	;wreg free
  2962  00267C  EF3C  F013         	goto	l4182
  2963  002680  EF07  F000         	goto	start
  2964  002684                     __end_of_main:
  2965                           	opt callstack 0
  2966                           
  2967 ;; *************** function _loop *****************
  2968 ;; Defined at:
  2969 ;;		line 28 in file "main.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;  response       32   64[BANK1 ] unsigned char [32]
  2974 ;;  response       32   32[BANK1 ] unsigned char [32]
  2975 ;;  zzzz           32   96[BANK1 ] unsigned char [32]
  2976 ;;  response       32    0[BANK1 ] unsigned char [32]
  2977 ;;  zzzz           32  128[BANK1 ] unsigned char [32]
  2978 ;;  zz              4  164[BANK1 ] unsigned long 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  1    wreg      void 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2988 ;;      Params:         0       0       0       0       0       0       0       0       0
  2989 ;;      Locals:         0       0     168       0       0       0       0       0       0
  2990 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2991 ;;      Totals:         0       4     168       0       0       0       0       0       0
  2992 ;;Total ram usage:      172 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:   10
  2995 ;; This function calls:
  2996 ;;		_A6_BaudRateAutoDetect
  2997 ;;		_A6_BaudRateGet
  2998 ;;		_A6_BaudRateSet
  2999 ;;		_A6_Command
  3000 ;;		_A6_IsAlive
  3001 ;;		_A6_Process_Random_Comms
  3002 ;;		_printLine
  3003 ;;		_sprintf
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text1
  3010  000012                     __ptext1:
  3011                           	opt callstack 0
  3012  000012                     _loop:
  3013                           	opt callstack 20
  3014  000012                     
  3015                           ;main.c: 31: A6_Process_Random_Comms();
  3016  000012  EC0F  F00D         	call	_A6_Process_Random_Comms	;wreg free
  3017  000016                     
  3018                           ;main.c: 33: if((MILLISECONDS > 20000) && (tmp4 < (MILLISECONDS - 20000))) {
  3019  000016  0101               	movlb	1	; () banked
  3020  000018  51BF               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3021  00001A  11BE               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3022  00001C  E10B               	bnz	u3070
  3023  00001E  0E21               	movlw	33
  3024  000020  5DBC               	subwf	_MILLISECONDS& (0+255),w,b
  3025  000022  0E4E               	movlw	78
  3026  000024  59BD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3027  000026  A0D8               	btfss	status,0,c
  3028  000028  EF18  F000         	goto	u3071
  3029  00002C  EF1A  F000         	goto	u3070
  3030  000030                     u3071:
  3031  000030  EF78  F001         	goto	l4008
  3032  000034                     u3070:
  3033  000034                     
  3034                           ; BSR set to: 1
  3035  000034  0EE0               	movlw	224
  3036  000036  25BC               	addwf	_MILLISECONDS& (0+255),w,b
  3037  000038  0100               	movlb	0	; () banked
  3038  00003A  6FA8               	movwf	??_loop& (0+255),b
  3039  00003C  0EB1               	movlw	177
  3040  00003E  0101               	movlb	1	; () banked
  3041  000040  21BD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3042  000042  0100               	movlb	0	; () banked
  3043  000044  6FA9               	movwf	(??_loop+1)& (0+255),b
  3044  000046  0EFF               	movlw	255
  3045  000048  0101               	movlb	1	; () banked
  3046  00004A  21BE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3047  00004C  0100               	movlb	0	; () banked
  3048  00004E  6FAA               	movwf	(??_loop+2)& (0+255),b
  3049  000050  0EFF               	movlw	255
  3050  000052  0101               	movlb	1	; () banked
  3051  000054  21BF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3052  000056  0100               	movlb	0	; () banked
  3053  000058  6FAB               	movwf	(??_loop+3)& (0+255),b
  3054  00005A  51A8               	movf	??_loop& (0+255),w,b
  3055  00005C  0101               	movlb	1	; () banked
  3056  00005E  5DAC               	subwf	_tmp4& (0+255),w,b
  3057  000060  0100               	movlb	0	; () banked
  3058  000062  51A9               	movf	(??_loop+1)& (0+255),w,b
  3059  000064  0101               	movlb	1	; () banked
  3060  000066  59AD               	subwfb	(_tmp4+1)& (0+255),w,b
  3061  000068  0100               	movlb	0	; () banked
  3062  00006A  51AA               	movf	(??_loop+2)& (0+255),w,b
  3063  00006C  0101               	movlb	1	; () banked
  3064  00006E  59AE               	subwfb	(_tmp4+2)& (0+255),w,b
  3065  000070  0100               	movlb	0	; () banked
  3066  000072  51AB               	movf	(??_loop+3)& (0+255),w,b
  3067  000074  0101               	movlb	1	; () banked
  3068  000076  59AF               	subwfb	(_tmp4+3)& (0+255),w,b
  3069  000078  B0D8               	btfsc	status,0,c
  3070  00007A  EF41  F000         	goto	u3081
  3071  00007E  EF43  F000         	goto	u3080
  3072  000082                     u3081:
  3073  000082  EF78  F001         	goto	l4008
  3074  000086                     u3080:
  3075  000086                     
  3076                           ; BSR set to: 1
  3077                           ;main.c: 34: tmp4 = MILLISECONDS;
  3078  000086  C1BC  F1AC         	movff	_MILLISECONDS,_tmp4
  3079  00008A  C1BD  F1AD         	movff	_MILLISECONDS+1,_tmp4+1
  3080  00008E  C1BE  F1AE         	movff	_MILLISECONDS+2,_tmp4+2
  3081  000092  C1BF  F1AF         	movff	_MILLISECONDS+3,_tmp4+3
  3082  000096                     
  3083                           ; BSR set to: 1
  3084                           ;main.c: 36: char zzzz[32];;main.c: 37: sprintf(zzzz, "Change baud rate (%lu)", A6_BaudR
      +                          ateGet());
  3085  000096  0E80               	movlw	low loop@zzzz
  3086  000098  6E4B               	movwf	sprintf@sp^0,c
  3087  00009A  0E01               	movlw	high loop@zzzz
  3088  00009C  6E4C               	movwf	(sprintf@sp+1)^0,c
  3089  00009E  0E20               	movlw	low STR_1
  3090  0000A0  6E4D               	movwf	sprintf@f^0,c
  3091  0000A2  0E5F               	movlw	high STR_1
  3092  0000A4  6E4E               	movwf	(sprintf@f+1)^0,c
  3093  0000A6  ECB4  F007         	call	_A6_BaudRateGet	;wreg free
  3094  0000AA  C01F  F04F         	movff	?_A6_BaudRateGet,?_sprintf+4
  3095  0000AE  C020  F050         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3096  0000B2  C021  F051         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3097  0000B6  C022  F052         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3098  0000BA  EC0B  F003         	call	_sprintf	;wreg free
  3099  0000BE                     
  3100                           ;main.c: 38: printLine(zzzz, 0xFFE0);
  3101  0000BE  0E80               	movlw	low loop@zzzz
  3102  0000C0  6E4A               	movwf	printLine@str^0,c
  3103  0000C2  0E01               	movlw	high loop@zzzz
  3104  0000C4  6E4B               	movwf	(printLine@str+1)^0,c
  3105  0000C6  0EFF               	movlw	255
  3106  0000C8  6E4D               	movwf	(printLine@color+1)^0,c
  3107  0000CA  0EE0               	movlw	224
  3108  0000CC  6E4C               	movwf	printLine@color^0,c
  3109  0000CE  EC99  F00D         	call	_printLine	;wreg free
  3110  0000D2                     
  3111                           ;main.c: 40: uint32_t zz = 0;
  3112  0000D2  0E00               	movlw	0
  3113  0000D4  0101               	movlb	1	; () banked
  3114  0000D6  6FA4               	movwf	loop@zz& (0+255),b
  3115  0000D8  0E00               	movlw	0
  3116  0000DA  6FA5               	movwf	(loop@zz+1)& (0+255),b
  3117  0000DC  0E00               	movlw	0
  3118  0000DE  6FA6               	movwf	(loop@zz+2)& (0+255),b
  3119  0000E0  0E00               	movlw	0
  3120  0000E2  6FA7               	movwf	(loop@zz+3)& (0+255),b
  3121                           
  3122                           ;main.c: 41: switch(A6_BaudRateGet()) {
  3123  0000E4  EFD5  F000         	goto	l3982
  3124  0000E8                     l3968:
  3125                           
  3126                           ;main.c: 43: zz = A6_BaudRateSet(115200);
  3127  0000E8  0E00               	movlw	0
  3128  0000EA  0100               	movlb	0	; () banked
  3129  0000EC  6F6C               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3130  0000EE  0EC2               	movlw	194
  3131  0000F0  6F6D               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3132  0000F2  0E01               	movlw	1
  3133  0000F4  6F6E               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3134  0000F6  0E00               	movlw	0
  3135  0000F8  6F6F               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3136  0000FA  ECFA  F008         	call	_A6_BaudRateSet	;wreg free
  3137  0000FE  C06C  F1A4         	movff	?_A6_BaudRateSet,loop@zz
  3138  000102  C06D  F1A5         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3139  000106  C06E  F1A6         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3140  00010A  C06F  F1A7         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3141                           
  3142                           ;main.c: 44: break;
  3143  00010E  EF10  F001         	goto	l3984
  3144  000112                     l3970:
  3145                           
  3146                           ;main.c: 46: zz = A6_BaudRateSet(9600);
  3147  000112  0E80               	movlw	128
  3148  000114  0100               	movlb	0	; () banked
  3149  000116  6F6C               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3150  000118  0E25               	movlw	37
  3151  00011A  6F6D               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3152  00011C  0E00               	movlw	0
  3153  00011E  6F6E               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3154  000120  0E00               	movlw	0
  3155  000122  6F6F               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3156  000124  ECFA  F008         	call	_A6_BaudRateSet	;wreg free
  3157  000128  C06C  F1A4         	movff	?_A6_BaudRateSet,loop@zz
  3158  00012C  C06D  F1A5         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3159  000130  C06E  F1A6         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3160  000134  C06F  F1A7         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3161                           
  3162                           ;main.c: 47: break;
  3163  000138  EF10  F001         	goto	l3984
  3164  00013C                     l3972:
  3165                           
  3166                           ;main.c: 49: zz = A6_BaudRateSet(57600);
  3167  00013C  0E00               	movlw	0
  3168  00013E  0100               	movlb	0	; () banked
  3169  000140  6F6C               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3170  000142  0EE1               	movlw	225
  3171  000144  6F6D               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3172  000146  0E00               	movlw	0
  3173  000148  6F6E               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3174  00014A  0E00               	movlw	0
  3175  00014C  6F6F               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3176  00014E  ECFA  F008         	call	_A6_BaudRateSet	;wreg free
  3177  000152  C06C  F1A4         	movff	?_A6_BaudRateSet,loop@zz
  3178  000156  C06D  F1A5         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3179  00015A  C06E  F1A6         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3180  00015E  C06F  F1A7         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3181                           
  3182                           ;main.c: 50: break;
  3183  000162  EF10  F001         	goto	l3984
  3184  000166                     l3974:
  3185                           
  3186                           ;main.c: 52: sprintf(zzzz, "Invalid current baud rate (%lu)", A6_BaudRateGet());
  3187  000166  0E80               	movlw	low loop@zzzz
  3188  000168  6E4B               	movwf	sprintf@sp^0,c
  3189  00016A  0E01               	movlw	high loop@zzzz
  3190  00016C  6E4C               	movwf	(sprintf@sp+1)^0,c
  3191  00016E  0E99               	movlw	low STR_2
  3192  000170  6E4D               	movwf	sprintf@f^0,c
  3193  000172  0E5E               	movlw	high STR_2
  3194  000174  6E4E               	movwf	(sprintf@f+1)^0,c
  3195  000176  ECB4  F007         	call	_A6_BaudRateGet	;wreg free
  3196  00017A  C01F  F04F         	movff	?_A6_BaudRateGet,?_sprintf+4
  3197  00017E  C020  F050         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3198  000182  C021  F051         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3199  000186  C022  F052         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3200  00018A  EC0B  F003         	call	_sprintf	;wreg free
  3201  00018E                     
  3202                           ;main.c: 53: printLine(zzzz, 0xFFE0);
  3203  00018E  0E80               	movlw	low loop@zzzz
  3204  000190  6E4A               	movwf	printLine@str^0,c
  3205  000192  0E01               	movlw	high loop@zzzz
  3206  000194  6E4B               	movwf	(printLine@str+1)^0,c
  3207  000196  0EFF               	movlw	255
  3208  000198  6E4D               	movwf	(printLine@color+1)^0,c
  3209  00019A  0EE0               	movlw	224
  3210  00019C  6E4C               	movwf	printLine@color^0,c
  3211  00019E  EC99  F00D         	call	_printLine	;wreg free
  3212  0001A2                     
  3213                           ;main.c: 54: A6_BaudRateAutoDetect();
  3214  0001A2  ECDC  F00A         	call	_A6_BaudRateAutoDetect	;wreg free
  3215                           
  3216                           ;main.c: 55: break;
  3217  0001A6  EF10  F001         	goto	l3984
  3218  0001AA                     l3982:
  3219                           
  3220                           ; BSR set to: 1
  3221  0001AA  ECB4  F007         	call	_A6_BaudRateGet	;wreg free
  3222                           
  3223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3224                           ; Switch size 1, requested type "simple"
  3225                           ; Number of cases is 1, Range of values is 0 to 0
  3226                           ; switch strategies available:
  3227                           ; Name         Instructions Cycles
  3228                           ; simple_byte            4     3 (average)
  3229                           ;	Chosen strategy is simple_byte
  3230  0001AE  5022               	movf	(?_A6_BaudRateGet+3)^0,w,c
  3231  0001B0  0A00               	xorlw	0	; case 0
  3232  0001B2  B4D8               	btfsc	status,2,c
  3233  0001B4  EF05  F001         	goto	l4566
  3234  0001B8  EFB3  F000         	goto	l3974
  3235  0001BC                     l4562:
  3236                           
  3237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3238                           ; Switch size 1, requested type "simple"
  3239                           ; Number of cases is 2, Range of values is 37 to 225
  3240                           ; switch strategies available:
  3241                           ; Name         Instructions Cycles
  3242                           ; simple_byte            7     4 (average)
  3243                           ;	Chosen strategy is simple_byte
  3244  0001BC  5020               	movf	(?_A6_BaudRateGet+1)^0,w,c
  3245  0001BE  0A25               	xorlw	37	; case 37
  3246  0001C0  B4D8               	btfsc	status,2,c
  3247  0001C2  EFE9  F000         	goto	l4568
  3248  0001C6  0AC4               	xorlw	196	; case 225
  3249  0001C8  B4D8               	btfsc	status,2,c
  3250  0001CA  EFF0  F000         	goto	l4570
  3251  0001CE  EFB3  F000         	goto	l3974
  3252  0001D2                     l4568:
  3253                           
  3254                           ; Switch size 1, requested type "simple"
  3255                           ; Number of cases is 1, Range of values is 128 to 128
  3256                           ; switch strategies available:
  3257                           ; Name         Instructions Cycles
  3258                           ; simple_byte            4     3 (average)
  3259                           ;	Chosen strategy is simple_byte
  3260  0001D2  501F               	movf	?_A6_BaudRateGet^0,w,c
  3261  0001D4  0A80               	xorlw	128	; case 128
  3262  0001D6  B4D8               	btfsc	status,2,c
  3263  0001D8  EF9E  F000         	goto	l3972
  3264  0001DC  EFB3  F000         	goto	l3974
  3265  0001E0                     l4570:
  3266                           
  3267                           ; Switch size 1, requested type "simple"
  3268                           ; Number of cases is 1, Range of values is 0 to 0
  3269                           ; switch strategies available:
  3270                           ; Name         Instructions Cycles
  3271                           ; simple_byte            4     3 (average)
  3272                           ;	Chosen strategy is simple_byte
  3273  0001E0  501F               	movf	?_A6_BaudRateGet^0,w,c
  3274  0001E2  0A00               	xorlw	0	; case 0
  3275  0001E4  B4D8               	btfsc	status,2,c
  3276  0001E6  EF74  F000         	goto	l3968
  3277  0001EA  EFB3  F000         	goto	l3974
  3278  0001EE                     l4564:
  3279                           
  3280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3281                           ; Switch size 1, requested type "simple"
  3282                           ; Number of cases is 1, Range of values is 194 to 194
  3283                           ; switch strategies available:
  3284                           ; Name         Instructions Cycles
  3285                           ; simple_byte            4     3 (average)
  3286                           ;	Chosen strategy is simple_byte
  3287  0001EE  5020               	movf	(?_A6_BaudRateGet+1)^0,w,c
  3288  0001F0  0AC2               	xorlw	194	; case 194
  3289  0001F2  B4D8               	btfsc	status,2,c
  3290  0001F4  EFFE  F000         	goto	l4572
  3291  0001F8  EFB3  F000         	goto	l3974
  3292  0001FC                     l4572:
  3293                           
  3294                           ; Switch size 1, requested type "simple"
  3295                           ; Number of cases is 1, Range of values is 0 to 0
  3296                           ; switch strategies available:
  3297                           ; Name         Instructions Cycles
  3298                           ; simple_byte            4     3 (average)
  3299                           ;	Chosen strategy is simple_byte
  3300  0001FC  501F               	movf	?_A6_BaudRateGet^0,w,c
  3301  0001FE  0A00               	xorlw	0	; case 0
  3302  000200  B4D8               	btfsc	status,2,c
  3303  000202  EF89  F000         	goto	l3970
  3304  000206  EFB3  F000         	goto	l3974
  3305  00020A                     l4566:
  3306                           
  3307                           ; Switch size 1, requested type "simple"
  3308                           ; Number of cases is 2, Range of values is 0 to 1
  3309                           ; switch strategies available:
  3310                           ; Name         Instructions Cycles
  3311                           ; simple_byte            7     4 (average)
  3312                           ;	Chosen strategy is simple_byte
  3313  00020A  5021               	movf	(?_A6_BaudRateGet+2)^0,w,c
  3314  00020C  0A00               	xorlw	0	; case 0
  3315  00020E  B4D8               	btfsc	status,2,c
  3316  000210  EFDE  F000         	goto	l4562
  3317  000214  0A01               	xorlw	1	; case 1
  3318  000216  B4D8               	btfsc	status,2,c
  3319  000218  EFF7  F000         	goto	l4564
  3320  00021C  EFB3  F000         	goto	l3974
  3321  000220                     l3984:
  3322                           
  3323                           ;main.c: 58: sprintf(zzzz, "Baud rate changed (-> %lu)", zz);
  3324  000220  0E80               	movlw	low loop@zzzz
  3325  000222  6E4B               	movwf	sprintf@sp^0,c
  3326  000224  0E01               	movlw	high loop@zzzz
  3327  000226  6E4C               	movwf	(sprintf@sp+1)^0,c
  3328  000228  0ED5               	movlw	low STR_3
  3329  00022A  6E4D               	movwf	sprintf@f^0,c
  3330  00022C  0E5E               	movlw	high STR_3
  3331  00022E  6E4E               	movwf	(sprintf@f+1)^0,c
  3332  000230  C1A4  F04F         	movff	loop@zz,?_sprintf+4
  3333  000234  C1A5  F050         	movff	loop@zz+1,?_sprintf+5
  3334  000238  C1A6  F051         	movff	loop@zz+2,?_sprintf+6
  3335  00023C  C1A7  F052         	movff	loop@zz+3,?_sprintf+7
  3336  000240  EC0B  F003         	call	_sprintf	;wreg free
  3337  000244                     
  3338                           ;main.c: 59: printLine(((zz == 0) ? "Error changing baud rate" : zzzz), 0xF81F);
  3339  000244  0101               	movlb	1	; () banked
  3340  000246  51A4               	movf	loop@zz& (0+255),w,b
  3341  000248  11A5               	iorwf	(loop@zz+1)& (0+255),w,b
  3342  00024A  11A6               	iorwf	(loop@zz+2)& (0+255),w,b
  3343  00024C  11A7               	iorwf	(loop@zz+3)& (0+255),w,b
  3344  00024E  B4D8               	btfsc	status,2,c
  3345  000250  EF2C  F001         	goto	u3091
  3346  000254  EF2E  F001         	goto	u3090
  3347  000258                     u3091:
  3348  000258  EF34  F001         	goto	l3990
  3349  00025C                     u3090:
  3350  00025C                     
  3351                           ; BSR set to: 1
  3352  00025C  0E80               	movlw	low loop@zzzz
  3353  00025E  6FA0               	movwf	_loop$139& (0+255),b
  3354  000260  0E01               	movlw	high loop@zzzz
  3355  000262  6FA1               	movwf	(_loop$139+1)& (0+255),b
  3356  000264  EF38  F001         	goto	l3992
  3357  000268                     l3990:
  3358                           
  3359                           ; BSR set to: 1
  3360  000268  0EF0               	movlw	low STR_4
  3361  00026A  6FA0               	movwf	_loop$139& (0+255),b
  3362  00026C  0E5E               	movlw	high STR_4
  3363  00026E  6FA1               	movwf	(_loop$139+1)& (0+255),b
  3364  000270                     l3992:
  3365                           
  3366                           ; BSR set to: 1
  3367  000270  C1A0  F04A         	movff	_loop$139,printLine@str
  3368  000274  C1A1  F04B         	movff	_loop$139+1,printLine@str+1
  3369  000278  0EF8               	movlw	248
  3370  00027A  6E4D               	movwf	(printLine@color+1)^0,c
  3371  00027C  0E1F               	movlw	31
  3372  00027E  6E4C               	movwf	printLine@color^0,c
  3373  000280  EC99  F00D         	call	_printLine	;wreg free
  3374  000284                     
  3375                           ;main.c: 61: if(A6_IsAlive() == 0) {
  3376  000284  EC34  F010         	call	_A6_IsAlive	;wreg free
  3377  000288  0900               	iorlw	0
  3378  00028A  A4D8               	btfss	status,2,c
  3379  00028C  EF4A  F001         	goto	u3101
  3380  000290  EF4C  F001         	goto	u3100
  3381  000294                     u3101:
  3382  000294  EF78  F001         	goto	l4008
  3383  000298                     u3100:
  3384  000298                     
  3385                           ;main.c: 62: printLine("Comm is dead. Retry...", 0x001F);
  3386  000298  0E37               	movlw	low STR_5
  3387  00029A  6E4A               	movwf	printLine@str^0,c
  3388  00029C  0E5F               	movlw	high STR_5
  3389  00029E  6E4B               	movwf	(printLine@str+1)^0,c
  3390  0002A0  0E00               	movlw	0
  3391  0002A2  6E4D               	movwf	(printLine@color+1)^0,c
  3392  0002A4  0E1F               	movlw	31
  3393  0002A6  6E4C               	movwf	printLine@color^0,c
  3394  0002A8  EC99  F00D         	call	_printLine	;wreg free
  3395  0002AC                     
  3396                           ;main.c: 63: A6_BaudRateAutoDetect();
  3397  0002AC  ECDC  F00A         	call	_A6_BaudRateAutoDetect	;wreg free
  3398  0002B0                     
  3399                           ;main.c: 64: printLine(((A6_IsAlive() == 0) ? "Still dead" : "Resurrected!"), 0x001F);
  3400  0002B0  EC34  F010         	call	_A6_IsAlive	;wreg free
  3401  0002B4  0900               	iorlw	0
  3402  0002B6  B4D8               	btfsc	status,2,c
  3403  0002B8  EF60  F001         	goto	u3111
  3404  0002BC  EF62  F001         	goto	u3110
  3405  0002C0                     u3111:
  3406  0002C0  EF69  F001         	goto	l4004
  3407  0002C4                     u3110:
  3408  0002C4  0E71               	movlw	low STR_7
  3409  0002C6  0101               	movlb	1	; () banked
  3410  0002C8  6FA2               	movwf	_loop$144& (0+255),b
  3411  0002CA  0E5F               	movlw	high STR_7
  3412  0002CC  6FA3               	movwf	(_loop$144+1)& (0+255),b
  3413  0002CE  EF6E  F001         	goto	l4006
  3414  0002D2                     l4004:
  3415  0002D2  0EAD               	movlw	low STR_6
  3416  0002D4  0101               	movlb	1	; () banked
  3417  0002D6  6FA2               	movwf	_loop$144& (0+255),b
  3418  0002D8  0E5F               	movlw	high STR_6
  3419  0002DA  6FA3               	movwf	(_loop$144+1)& (0+255),b
  3420  0002DC                     l4006:
  3421                           
  3422                           ; BSR set to: 1
  3423  0002DC  C1A2  F04A         	movff	_loop$144,printLine@str
  3424  0002E0  C1A3  F04B         	movff	_loop$144+1,printLine@str+1
  3425  0002E4  0E00               	movlw	0
  3426  0002E6  6E4D               	movwf	(printLine@color+1)^0,c
  3427  0002E8  0E1F               	movlw	31
  3428  0002EA  6E4C               	movwf	printLine@color^0,c
  3429  0002EC  EC99  F00D         	call	_printLine	;wreg free
  3430  0002F0                     l4008:
  3431                           
  3432                           ;main.c: 65: };main.c: 66: };main.c: 68: if((MILLISECONDS > 2500) && (tmp1 < (MILLISECON
      +                          DS - 2500))) {
  3433  0002F0  0101               	movlb	1	; () banked
  3434  0002F2  51BF               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3435  0002F4  11BE               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3436  0002F6  E10B               	bnz	u3120
  3437  0002F8  0EC5               	movlw	197
  3438  0002FA  5DBC               	subwf	_MILLISECONDS& (0+255),w,b
  3439  0002FC  0E09               	movlw	9
  3440  0002FE  59BD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3441  000300  A0D8               	btfss	status,0,c
  3442  000302  EF85  F001         	goto	u3121
  3443  000306  EF87  F001         	goto	u3120
  3444  00030A                     u3121:
  3445  00030A  EFDC  F001         	goto	l4020
  3446  00030E                     u3120:
  3447  00030E                     
  3448                           ; BSR set to: 1
  3449  00030E  0E3C               	movlw	60
  3450  000310  25BC               	addwf	_MILLISECONDS& (0+255),w,b
  3451  000312  0100               	movlb	0	; () banked
  3452  000314  6FA8               	movwf	??_loop& (0+255),b
  3453  000316  0EF6               	movlw	246
  3454  000318  0101               	movlb	1	; () banked
  3455  00031A  21BD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3456  00031C  0100               	movlb	0	; () banked
  3457  00031E  6FA9               	movwf	(??_loop+1)& (0+255),b
  3458  000320  0EFF               	movlw	255
  3459  000322  0101               	movlb	1	; () banked
  3460  000324  21BE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3461  000326  0100               	movlb	0	; () banked
  3462  000328  6FAA               	movwf	(??_loop+2)& (0+255),b
  3463  00032A  0EFF               	movlw	255
  3464  00032C  0101               	movlb	1	; () banked
  3465  00032E  21BF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3466  000330  0100               	movlb	0	; () banked
  3467  000332  6FAB               	movwf	(??_loop+3)& (0+255),b
  3468  000334  51A8               	movf	??_loop& (0+255),w,b
  3469  000336  0101               	movlb	1	; () banked
  3470  000338  5DB8               	subwf	_tmp1& (0+255),w,b
  3471  00033A  0100               	movlb	0	; () banked
  3472  00033C  51A9               	movf	(??_loop+1)& (0+255),w,b
  3473  00033E  0101               	movlb	1	; () banked
  3474  000340  59B9               	subwfb	(_tmp1+1)& (0+255),w,b
  3475  000342  0100               	movlb	0	; () banked
  3476  000344  51AA               	movf	(??_loop+2)& (0+255),w,b
  3477  000346  0101               	movlb	1	; () banked
  3478  000348  59BA               	subwfb	(_tmp1+2)& (0+255),w,b
  3479  00034A  0100               	movlb	0	; () banked
  3480  00034C  51AB               	movf	(??_loop+3)& (0+255),w,b
  3481  00034E  0101               	movlb	1	; () banked
  3482  000350  59BB               	subwfb	(_tmp1+3)& (0+255),w,b
  3483  000352  B0D8               	btfsc	status,0,c
  3484  000354  EFAE  F001         	goto	u3131
  3485  000358  EFB0  F001         	goto	u3130
  3486  00035C                     u3131:
  3487  00035C  EFDC  F001         	goto	l4020
  3488  000360                     u3130:
  3489  000360                     
  3490                           ; BSR set to: 1
  3491                           ;main.c: 69: tmp1 = MILLISECONDS;
  3492  000360  C1BC  F1B8         	movff	_MILLISECONDS,_tmp1
  3493  000364  C1BD  F1B9         	movff	_MILLISECONDS+1,_tmp1+1
  3494  000368  C1BE  F1BA         	movff	_MILLISECONDS+2,_tmp1+2
  3495  00036C  C1BF  F1BB         	movff	_MILLISECONDS+3,_tmp1+3
  3496  000370                     
  3497                           ; BSR set to: 1
  3498                           ;main.c: 71: printLine("Check time", 0xFFE0);
  3499  000370  0EB8               	movlw	low STR_8
  3500  000372  6E4A               	movwf	printLine@str^0,c
  3501  000374  0E5F               	movlw	high STR_8
  3502  000376  6E4B               	movwf	(printLine@str+1)^0,c
  3503  000378  0EFF               	movlw	255
  3504  00037A  6E4D               	movwf	(printLine@color+1)^0,c
  3505  00037C  0EE0               	movlw	224
  3506  00037E  6E4C               	movwf	printLine@color^0,c
  3507  000380  EC99  F00D         	call	_printLine	;wreg free
  3508  000384                     
  3509                           ;main.c: 72: char response[32];;main.c: 73: A6_Command("AT+CCLK?\r", 0, response, 32);
  3510  000384  0ECD               	movlw	low STR_9
  3511  000386  6E18               	movwf	A6_Command@command^0,c
  3512  000388  0E5F               	movlw	high STR_9
  3513  00038A  6E19               	movwf	(A6_Command@command+1)^0,c
  3514  00038C  0E00               	movlw	0
  3515  00038E  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3516  000390  0E00               	movlw	0
  3517  000392  6E1A               	movwf	A6_Command@timeout^0,c
  3518  000394  0E00               	movlw	low loop@response
  3519  000396  6E1C               	movwf	A6_Command@response^0,c
  3520  000398  0E01               	movlw	high loop@response
  3521  00039A  6E1D               	movwf	(A6_Command@response+1)^0,c
  3522  00039C  0E20               	movlw	32
  3523  00039E  6E1E               	movwf	A6_Command@responseLen^0,c
  3524  0003A0  EC88  F012         	call	_A6_Command	;wreg free
  3525  0003A4                     
  3526                           ;main.c: 74: printLine(response, 0x07E0);
  3527  0003A4  0E00               	movlw	low loop@response
  3528  0003A6  6E4A               	movwf	printLine@str^0,c
  3529  0003A8  0E01               	movlw	high loop@response
  3530  0003AA  6E4B               	movwf	(printLine@str+1)^0,c
  3531  0003AC  0E07               	movlw	7
  3532  0003AE  6E4D               	movwf	(printLine@color+1)^0,c
  3533  0003B0  0EE0               	movlw	224
  3534  0003B2  6E4C               	movwf	printLine@color^0,c
  3535  0003B4  EC99  F00D         	call	_printLine	;wreg free
  3536  0003B8                     l4020:
  3537                           
  3538                           ;main.c: 75: };main.c: 77: if((MILLISECONDS > 4000) && (tmp2 < (MILLISECONDS - 4000))) {
  3539  0003B8  0101               	movlb	1	; () banked
  3540  0003BA  51BF               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3541  0003BC  11BE               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3542  0003BE  E10B               	bnz	u3140
  3543  0003C0  0EA1               	movlw	161
  3544  0003C2  5DBC               	subwf	_MILLISECONDS& (0+255),w,b
  3545  0003C4  0E0F               	movlw	15
  3546  0003C6  59BD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3547  0003C8  A0D8               	btfss	status,0,c
  3548  0003CA  EFE9  F001         	goto	u3141
  3549  0003CE  EFEB  F001         	goto	u3140
  3550  0003D2                     u3141:
  3551  0003D2  EF44  F002         	goto	l4032
  3552  0003D6                     u3140:
  3553  0003D6                     
  3554                           ; BSR set to: 1
  3555  0003D6  0E60               	movlw	96
  3556  0003D8  25BC               	addwf	_MILLISECONDS& (0+255),w,b
  3557  0003DA  0100               	movlb	0	; () banked
  3558  0003DC  6FA8               	movwf	??_loop& (0+255),b
  3559  0003DE  0EF0               	movlw	240
  3560  0003E0  0101               	movlb	1	; () banked
  3561  0003E2  21BD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3562  0003E4  0100               	movlb	0	; () banked
  3563  0003E6  6FA9               	movwf	(??_loop+1)& (0+255),b
  3564  0003E8  0EFF               	movlw	255
  3565  0003EA  0101               	movlb	1	; () banked
  3566  0003EC  21BE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3567  0003EE  0100               	movlb	0	; () banked
  3568  0003F0  6FAA               	movwf	(??_loop+2)& (0+255),b
  3569  0003F2  0EFF               	movlw	255
  3570  0003F4  0101               	movlb	1	; () banked
  3571  0003F6  21BF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3572  0003F8  0100               	movlb	0	; () banked
  3573  0003FA  6FAB               	movwf	(??_loop+3)& (0+255),b
  3574  0003FC  51A8               	movf	??_loop& (0+255),w,b
  3575  0003FE  0101               	movlb	1	; () banked
  3576  000400  5DB4               	subwf	_tmp2& (0+255),w,b
  3577  000402  0100               	movlb	0	; () banked
  3578  000404  51A9               	movf	(??_loop+1)& (0+255),w,b
  3579  000406  0101               	movlb	1	; () banked
  3580  000408  59B5               	subwfb	(_tmp2+1)& (0+255),w,b
  3581  00040A  0100               	movlb	0	; () banked
  3582  00040C  51AA               	movf	(??_loop+2)& (0+255),w,b
  3583  00040E  0101               	movlb	1	; () banked
  3584  000410  59B6               	subwfb	(_tmp2+2)& (0+255),w,b
  3585  000412  0100               	movlb	0	; () banked
  3586  000414  51AB               	movf	(??_loop+3)& (0+255),w,b
  3587  000416  0101               	movlb	1	; () banked
  3588  000418  59B7               	subwfb	(_tmp2+3)& (0+255),w,b
  3589  00041A  B0D8               	btfsc	status,0,c
  3590  00041C  EF12  F002         	goto	u3151
  3591  000420  EF14  F002         	goto	u3150
  3592  000424                     u3151:
  3593  000424  EF44  F002         	goto	l4032
  3594  000428                     u3150:
  3595  000428                     
  3596                           ; BSR set to: 1
  3597                           ;main.c: 78: tmp2 = MILLISECONDS;
  3598  000428  C1BC  F1B4         	movff	_MILLISECONDS,_tmp2
  3599  00042C  C1BD  F1B5         	movff	_MILLISECONDS+1,_tmp2+1
  3600  000430  C1BE  F1B6         	movff	_MILLISECONDS+2,_tmp2+2
  3601  000434  C1BF  F1B7         	movff	_MILLISECONDS+3,_tmp2+3
  3602  000438                     
  3603                           ; BSR set to: 1
  3604                           ;main.c: 79: printLine("Check baud rate", 0xFFE0);
  3605  000438  0E61               	movlw	low STR_10
  3606  00043A  6E4A               	movwf	printLine@str^0,c
  3607  00043C  0E5F               	movlw	high STR_10
  3608  00043E  6E4B               	movwf	(printLine@str+1)^0,c
  3609  000440  0EFF               	movlw	255
  3610  000442  6E4D               	movwf	(printLine@color+1)^0,c
  3611  000444  0EE0               	movlw	224
  3612  000446  6E4C               	movwf	printLine@color^0,c
  3613  000448  EC99  F00D         	call	_printLine	;wreg free
  3614  00044C                     
  3615                           ;main.c: 80: char zzzz[32];;main.c: 81: sprintf(zzzz, "%lu", A6_BaudRateGet());
  3616  00044C  0E60               	movlw	low loop@zzzz_149
  3617  00044E  6E4B               	movwf	sprintf@sp^0,c
  3618  000450  0E01               	movlw	high loop@zzzz_149
  3619  000452  6E4C               	movwf	(sprintf@sp+1)^0,c
  3620  000454  0EF7               	movlw	low STR_11
  3621  000456  6E4D               	movwf	sprintf@f^0,c
  3622  000458  0E5F               	movlw	high STR_11
  3623  00045A  6E4E               	movwf	(sprintf@f+1)^0,c
  3624  00045C  ECB4  F007         	call	_A6_BaudRateGet	;wreg free
  3625  000460  C01F  F04F         	movff	?_A6_BaudRateGet,?_sprintf+4
  3626  000464  C020  F050         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3627  000468  C021  F051         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3628  00046C  C022  F052         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3629  000470  EC0B  F003         	call	_sprintf	;wreg free
  3630  000474                     
  3631                           ;main.c: 82: printLine(zzzz, 0xF800);
  3632  000474  0E60               	movlw	low loop@zzzz_149
  3633  000476  6E4A               	movwf	printLine@str^0,c
  3634  000478  0E01               	movlw	high loop@zzzz_149
  3635  00047A  6E4B               	movwf	(printLine@str+1)^0,c
  3636  00047C  0EF8               	movlw	248
  3637  00047E  6E4D               	movwf	(printLine@color+1)^0,c
  3638  000480  0E00               	movlw	0
  3639  000482  6E4C               	movwf	printLine@color^0,c
  3640  000484  EC99  F00D         	call	_printLine	;wreg free
  3641  000488                     l4032:
  3642                           
  3643                           ;main.c: 83: };main.c: 85: if((MILLISECONDS > 6500) && (tmp3 < (MILLISECONDS - 6500))) {
  3644  000488  0101               	movlb	1	; () banked
  3645  00048A  51BF               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3646  00048C  11BE               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3647  00048E  E10B               	bnz	u3160
  3648  000490  0E65               	movlw	101
  3649  000492  5DBC               	subwf	_MILLISECONDS& (0+255),w,b
  3650  000494  0E19               	movlw	25
  3651  000496  59BD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3652  000498  A0D8               	btfss	status,0,c
  3653  00049A  EF51  F002         	goto	u3161
  3654  00049E  EF53  F002         	goto	u3160
  3655  0004A2                     u3161:
  3656  0004A2  EFA7  F002         	goto	l4044
  3657  0004A6                     u3160:
  3658  0004A6                     
  3659                           ; BSR set to: 1
  3660  0004A6  0E9C               	movlw	156
  3661  0004A8  25BC               	addwf	_MILLISECONDS& (0+255),w,b
  3662  0004AA  0100               	movlb	0	; () banked
  3663  0004AC  6FA8               	movwf	??_loop& (0+255),b
  3664  0004AE  0EE6               	movlw	230
  3665  0004B0  0101               	movlb	1	; () banked
  3666  0004B2  21BD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3667  0004B4  0100               	movlb	0	; () banked
  3668  0004B6  6FA9               	movwf	(??_loop+1)& (0+255),b
  3669  0004B8  0EFF               	movlw	255
  3670  0004BA  0101               	movlb	1	; () banked
  3671  0004BC  21BE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3672  0004BE  0100               	movlb	0	; () banked
  3673  0004C0  6FAA               	movwf	(??_loop+2)& (0+255),b
  3674  0004C2  0EFF               	movlw	255
  3675  0004C4  0101               	movlb	1	; () banked
  3676  0004C6  21BF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3677  0004C8  0100               	movlb	0	; () banked
  3678  0004CA  6FAB               	movwf	(??_loop+3)& (0+255),b
  3679  0004CC  51A8               	movf	??_loop& (0+255),w,b
  3680  0004CE  0101               	movlb	1	; () banked
  3681  0004D0  5DB0               	subwf	_tmp3& (0+255),w,b
  3682  0004D2  0100               	movlb	0	; () banked
  3683  0004D4  51A9               	movf	(??_loop+1)& (0+255),w,b
  3684  0004D6  0101               	movlb	1	; () banked
  3685  0004D8  59B1               	subwfb	(_tmp3+1)& (0+255),w,b
  3686  0004DA  0100               	movlb	0	; () banked
  3687  0004DC  51AA               	movf	(??_loop+2)& (0+255),w,b
  3688  0004DE  0101               	movlb	1	; () banked
  3689  0004E0  59B2               	subwfb	(_tmp3+2)& (0+255),w,b
  3690  0004E2  0100               	movlb	0	; () banked
  3691  0004E4  51AB               	movf	(??_loop+3)& (0+255),w,b
  3692  0004E6  0101               	movlb	1	; () banked
  3693  0004E8  59B3               	subwfb	(_tmp3+3)& (0+255),w,b
  3694  0004EA  B0D8               	btfsc	status,0,c
  3695  0004EC  EF7A  F002         	goto	u3171
  3696  0004F0  EF7C  F002         	goto	u3170
  3697  0004F4                     u3171:
  3698  0004F4  EFA7  F002         	goto	l4044
  3699  0004F8                     u3170:
  3700  0004F8                     
  3701                           ; BSR set to: 1
  3702                           ;main.c: 86: tmp3 = MILLISECONDS;
  3703  0004F8  C1BC  F1B0         	movff	_MILLISECONDS,_tmp3
  3704  0004FC  C1BD  F1B1         	movff	_MILLISECONDS+1,_tmp3+1
  3705  000500  C1BE  F1B2         	movff	_MILLISECONDS+2,_tmp3+2
  3706  000504  C1BF  F1B3         	movff	_MILLISECONDS+3,_tmp3+3
  3707  000508                     
  3708                           ; BSR set to: 1
  3709                           ;main.c: 88: printLine("Check signal", 0xFFE0);
  3710  000508  0E7E               	movlw	low STR_12
  3711  00050A  6E4A               	movwf	printLine@str^0,c
  3712  00050C  0E5F               	movlw	high STR_12
  3713  00050E  6E4B               	movwf	(printLine@str+1)^0,c
  3714  000510  0EFF               	movlw	255
  3715  000512  6E4D               	movwf	(printLine@color+1)^0,c
  3716  000514  0EE0               	movlw	224
  3717  000516  6E4C               	movwf	printLine@color^0,c
  3718  000518  EC99  F00D         	call	_printLine	;wreg free
  3719  00051C                     
  3720                           ;main.c: 89: char response[32];;main.c: 90: A6_Command("AT+CSQ\r", 0, response, 32);
  3721  00051C  0EE0               	movlw	low STR_13
  3722  00051E  6E18               	movwf	A6_Command@command^0,c
  3723  000520  0E5F               	movlw	high STR_13
  3724  000522  6E19               	movwf	(A6_Command@command+1)^0,c
  3725  000524  0E00               	movlw	0
  3726  000526  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3727  000528  0E00               	movlw	0
  3728  00052A  6E1A               	movwf	A6_Command@timeout^0,c
  3729  00052C  0E20               	movlw	low loop@response_152
  3730  00052E  6E1C               	movwf	A6_Command@response^0,c
  3731  000530  0E01               	movlw	high loop@response_152
  3732  000532  6E1D               	movwf	(A6_Command@response+1)^0,c
  3733  000534  0E20               	movlw	32
  3734  000536  6E1E               	movwf	A6_Command@responseLen^0,c
  3735  000538  EC88  F012         	call	_A6_Command	;wreg free
  3736  00053C                     
  3737                           ;main.c: 91: printLine(response, 0xFFFF);
  3738  00053C  0E20               	movlw	low loop@response_152
  3739  00053E  6E4A               	movwf	printLine@str^0,c
  3740  000540  0E01               	movlw	high loop@response_152
  3741  000542  6E4B               	movwf	(printLine@str+1)^0,c
  3742  000544  0EFF               	movlw	255
  3743  000546  6E4D               	movwf	(printLine@color+1)^0,c
  3744  000548  684C               	setf	printLine@color^0,c
  3745  00054A  EC99  F00D         	call	_printLine	;wreg free
  3746  00054E                     l4044:
  3747                           
  3748                           ;main.c: 100: };main.c: 102: if((MILLISECONDS > 8500) && (tmp5 < (MILLISECONDS - 8500)))
      +                           {
  3749  00054E  0101               	movlb	1	; () banked
  3750  000550  51BF               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3751  000552  11BE               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3752  000554  E10B               	bnz	u3180
  3753  000556  0E35               	movlw	53
  3754  000558  5DBC               	subwf	_MILLISECONDS& (0+255),w,b
  3755  00055A  0E21               	movlw	33
  3756  00055C  59BD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3757  00055E  A0D8               	btfss	status,0,c
  3758  000560  EFB4  F002         	goto	u3181
  3759  000564  EFB6  F002         	goto	u3180
  3760  000568                     u3181:
  3761  000568  EF0A  F003         	goto	l85
  3762  00056C                     u3180:
  3763  00056C                     
  3764                           ; BSR set to: 1
  3765  00056C  0ECC               	movlw	204
  3766  00056E  25BC               	addwf	_MILLISECONDS& (0+255),w,b
  3767  000570  0100               	movlb	0	; () banked
  3768  000572  6FA8               	movwf	??_loop& (0+255),b
  3769  000574  0EDE               	movlw	222
  3770  000576  0101               	movlb	1	; () banked
  3771  000578  21BD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3772  00057A  0100               	movlb	0	; () banked
  3773  00057C  6FA9               	movwf	(??_loop+1)& (0+255),b
  3774  00057E  0EFF               	movlw	255
  3775  000580  0101               	movlb	1	; () banked
  3776  000582  21BE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3777  000584  0100               	movlb	0	; () banked
  3778  000586  6FAA               	movwf	(??_loop+2)& (0+255),b
  3779  000588  0EFF               	movlw	255
  3780  00058A  0101               	movlb	1	; () banked
  3781  00058C  21BF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3782  00058E  0100               	movlb	0	; () banked
  3783  000590  6FAB               	movwf	(??_loop+3)& (0+255),b
  3784  000592  51A8               	movf	??_loop& (0+255),w,b
  3785  000594  0101               	movlb	1	; () banked
  3786  000596  5DA8               	subwf	_tmp5& (0+255),w,b
  3787  000598  0100               	movlb	0	; () banked
  3788  00059A  51A9               	movf	(??_loop+1)& (0+255),w,b
  3789  00059C  0101               	movlb	1	; () banked
  3790  00059E  59A9               	subwfb	(_tmp5+1)& (0+255),w,b
  3791  0005A0  0100               	movlb	0	; () banked
  3792  0005A2  51AA               	movf	(??_loop+2)& (0+255),w,b
  3793  0005A4  0101               	movlb	1	; () banked
  3794  0005A6  59AA               	subwfb	(_tmp5+2)& (0+255),w,b
  3795  0005A8  0100               	movlb	0	; () banked
  3796  0005AA  51AB               	movf	(??_loop+3)& (0+255),w,b
  3797  0005AC  0101               	movlb	1	; () banked
  3798  0005AE  59AB               	subwfb	(_tmp5+3)& (0+255),w,b
  3799  0005B0  B0D8               	btfsc	status,0,c
  3800  0005B2  EFDD  F002         	goto	u3191
  3801  0005B6  EFDF  F002         	goto	u3190
  3802  0005BA                     u3191:
  3803  0005BA  EF0A  F003         	goto	l85
  3804  0005BE                     u3190:
  3805  0005BE                     
  3806                           ; BSR set to: 1
  3807                           ;main.c: 103: tmp5 = MILLISECONDS;
  3808  0005BE  C1BC  F1A8         	movff	_MILLISECONDS,_tmp5
  3809  0005C2  C1BD  F1A9         	movff	_MILLISECONDS+1,_tmp5+1
  3810  0005C6  C1BE  F1AA         	movff	_MILLISECONDS+2,_tmp5+2
  3811  0005CA  C1BF  F1AB         	movff	_MILLISECONDS+3,_tmp5+3
  3812  0005CE                     
  3813                           ; BSR set to: 1
  3814                           ;main.c: 105: printLine("Check registration", 0xFFE0);
  3815  0005CE  0E4E               	movlw	low STR_14
  3816  0005D0  6E4A               	movwf	printLine@str^0,c
  3817  0005D2  0E5F               	movlw	high STR_14
  3818  0005D4  6E4B               	movwf	(printLine@str+1)^0,c
  3819  0005D6  0EFF               	movlw	255
  3820  0005D8  6E4D               	movwf	(printLine@color+1)^0,c
  3821  0005DA  0EE0               	movlw	224
  3822  0005DC  6E4C               	movwf	printLine@color^0,c
  3823  0005DE  EC99  F00D         	call	_printLine	;wreg free
  3824  0005E2                     
  3825                           ;main.c: 106: char response[32];;main.c: 107: A6_Command("AT+CREG?\r", 0, response, 32);
  3826  0005E2  0EC3               	movlw	low STR_15
  3827  0005E4  6E18               	movwf	A6_Command@command^0,c
  3828  0005E6  0E5F               	movlw	high STR_15
  3829  0005E8  6E19               	movwf	(A6_Command@command+1)^0,c
  3830  0005EA  0E00               	movlw	0
  3831  0005EC  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3832  0005EE  0E00               	movlw	0
  3833  0005F0  6E1A               	movwf	A6_Command@timeout^0,c
  3834  0005F2  0E40               	movlw	low loop@response_155
  3835  0005F4  6E1C               	movwf	A6_Command@response^0,c
  3836  0005F6  0E01               	movlw	high loop@response_155
  3837  0005F8  6E1D               	movwf	(A6_Command@response+1)^0,c
  3838  0005FA  0E20               	movlw	32
  3839  0005FC  6E1E               	movwf	A6_Command@responseLen^0,c
  3840  0005FE  EC88  F012         	call	_A6_Command	;wreg free
  3841  000602                     
  3842                           ;main.c: 108: printLine(response, 0xFFFF);
  3843  000602  0E40               	movlw	low loop@response_155
  3844  000604  6E4A               	movwf	printLine@str^0,c
  3845  000606  0E01               	movlw	high loop@response_155
  3846  000608  6E4B               	movwf	(printLine@str+1)^0,c
  3847  00060A  0EFF               	movlw	255
  3848  00060C  6E4D               	movwf	(printLine@color+1)^0,c
  3849  00060E  684C               	setf	printLine@color^0,c
  3850  000610  EC99  F00D         	call	_printLine	;wreg free
  3851  000614                     l85:
  3852  000614  0012               	return		;funcret
  3853  000616                     __end_of_loop:
  3854                           	opt callstack 0
  3855                           
  3856 ;; *************** function _A6_Process_Random_Comms *****************
  3857 ;; Defined at:
  3858 ;;		line 129 in file "A6Lib.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;		None
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  response       32    0[BANK0 ] unsigned char [32]
  3863 ;;  cnt             1   32[BANK0 ] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0
  3874 ;;      Locals:         0      33       0       0       0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3876 ;;      Totals:         0      33       0       0       0       0       0       0       0
  3877 ;;Total ram usage:       33 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    9
  3880 ;; This function calls:
  3881 ;;		_A6_ReadLine
  3882 ;;		_EUSART_RX_AvailableData
  3883 ;;		_printLine
  3884 ;;		_strcmp
  3885 ;; This function is called by:
  3886 ;;		_loop
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text2
  3891  001A1E                     __ptext2:
  3892                           	opt callstack 0
  3893  001A1E                     _A6_Process_Random_Comms:
  3894                           	opt callstack 20
  3895  001A1E                     
  3896                           ;A6Lib.c: 130: if(EUSART_RX_AvailableData(-1) == 0) return;
  3897  001A1E  0EFF               	movlw	255
  3898  001A20  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
  3899  001A22  6805               	setf	EUSART_RX_AvailableData@timeout^0,c
  3900  001A24  ECDD  F00D         	call	_EUSART_RX_AvailableData	;wreg free
  3901  001A28  0900               	iorlw	0
  3902  001A2A  A4D8               	btfss	status,2,c
  3903  001A2C  EF1A  F00D         	goto	u2921
  3904  001A30  EF1C  F00D         	goto	u2920
  3905  001A34                     u2921:
  3906  001A34  EF1E  F00D         	goto	l3810
  3907  001A38                     u2920:
  3908  001A38  EF54  F00D         	goto	l534
  3909  001A3C                     l3810:
  3910                           
  3911                           ;A6Lib.c: 132: char response[32];;A6Lib.c: 133: uint8_t cnt = A6_ReadLine(response, 32, 
      +                          0);
  3912  001A3C  0E60               	movlw	low A6_Process_Random_Comms@response
  3913  001A3E  6E11               	movwf	A6_ReadLine@response^0,c
  3914  001A40  0E00               	movlw	high A6_Process_Random_Comms@response
  3915  001A42  6E12               	movwf	(A6_ReadLine@response+1)^0,c
  3916  001A44  0E20               	movlw	32
  3917  001A46  6E13               	movwf	A6_ReadLine@responseLen^0,c
  3918  001A48  0E00               	movlw	0
  3919  001A4A  6E15               	movwf	(A6_ReadLine@timeout+1)^0,c
  3920  001A4C  0E00               	movlw	0
  3921  001A4E  6E14               	movwf	A6_ReadLine@timeout^0,c
  3922  001A50  EC49  F00B         	call	_A6_ReadLine	;wreg free
  3923  001A54  0100               	movlb	0	; () banked
  3924  001A56  6F80               	movwf	A6_Process_Random_Comms@cnt& (0+255),b
  3925  001A58                     
  3926                           ; BSR set to: 0
  3927                           ;A6Lib.c: 134: if(cnt == 0) return;
  3928  001A58  5180               	movf	A6_Process_Random_Comms@cnt& (0+255),w,b
  3929  001A5A  A4D8               	btfss	status,2,c
  3930  001A5C  EF32  F00D         	goto	u2931
  3931  001A60  EF34  F00D         	goto	u2930
  3932  001A64                     u2931:
  3933  001A64  EF36  F00D         	goto	l3816
  3934  001A68                     u2930:
  3935  001A68  EF54  F00D         	goto	l534
  3936  001A6C                     l3816:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;A6Lib.c: 135: if(strcmp(response, "OK") == 0) return;
  3940  001A6C  0E60               	movlw	low A6_Process_Random_Comms@response
  3941  001A6E  6E05               	movwf	strcmp@s1^0,c
  3942  001A70  0E00               	movlw	high A6_Process_Random_Comms@response
  3943  001A72  6E06               	movwf	(strcmp@s1+1)^0,c
  3944  001A74  0EFB               	movlw	low STR_20
  3945  001A76  6E07               	movwf	strcmp@s2^0,c
  3946  001A78  0E5F               	movlw	high STR_20
  3947  001A7A  6E08               	movwf	(strcmp@s2+1)^0,c
  3948  001A7C  EC01  F011         	call	_strcmp	;wreg free
  3949  001A80  5005               	movf	?_strcmp^0,w,c
  3950  001A82  1006               	iorwf	(?_strcmp+1)^0,w,c
  3951  001A84  A4D8               	btfss	status,2,c
  3952  001A86  EF47  F00D         	goto	u2941
  3953  001A8A  EF49  F00D         	goto	u2940
  3954  001A8E                     u2941:
  3955  001A8E  EF4B  F00D         	goto	l3820
  3956  001A92                     u2940:
  3957  001A92  EF54  F00D         	goto	l534
  3958  001A96                     l3820:
  3959                           
  3960                           ;A6Lib.c: 136: printLine(response, 0x07FF);
  3961  001A96  0E60               	movlw	low A6_Process_Random_Comms@response
  3962  001A98  6E4A               	movwf	printLine@str^0,c
  3963  001A9A  0E00               	movlw	high A6_Process_Random_Comms@response
  3964  001A9C  6E4B               	movwf	(printLine@str+1)^0,c
  3965  001A9E  0E07               	movlw	7
  3966  001AA0  6E4D               	movwf	(printLine@color+1)^0,c
  3967  001AA2  684C               	setf	printLine@color^0,c
  3968  001AA4  EC99  F00D         	call	_printLine	;wreg free
  3969  001AA8                     l534:
  3970  001AA8  0012               	return		;funcret
  3971  001AAA                     __end_of_A6_Process_Random_Comms:
  3972                           	opt callstack 0
  3973                           
  3974 ;; *************** function _A6_BaudRateSet *****************
  3975 ;; Defined at:
  3976 ;;		line 56 in file "A6Lib.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  baudRate        4   12[BANK0 ] const unsigned long 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  response       32   16[BANK0 ] unsigned char [32]
  3981 ;;  request        20   48[BANK0 ] unsigned char [20]
  3982 ;;  currentBaudR    4   68[BANK0 ] unsigned long 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  4   12[BANK0 ] unsigned long 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3992 ;;      Params:         0       4       0       0       0       0       0       0       0
  3993 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3995 ;;      Totals:         0      60       0       0       0       0       0       0       0
  3996 ;;Total ram usage:       60 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    7
  3999 ;; This function calls:
  4000 ;;		_A6_BaudRateGet
  4001 ;;		_A6_Command
  4002 ;;		_A6_IsAlive
  4003 ;;		_EUSART_BaudRateSet
  4004 ;;		_sleepMS
  4005 ;;		_sprintf
  4006 ;;		_strcmp
  4007 ;; This function is called by:
  4008 ;;		_loop
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text3
  4013  0011F4                     __ptext3:
  4014                           	opt callstack 0
  4015  0011F4                     _A6_BaudRateSet:
  4016                           	opt callstack 22
  4017  0011F4                     
  4018                           ;A6Lib.c: 57: char request[20];;A6Lib.c: 58: char response[32];;A6Lib.c: 59: uint32_t cu
      +                          rrentBaudRate = A6_BaudRateGet();
  4019  0011F4  ECB4  F007         	call	_A6_BaudRateGet	;wreg free
  4020  0011F8  C01F  F0A4         	movff	?_A6_BaudRateGet,A6_BaudRateSet@currentBaudRate
  4021  0011FC  C020  F0A5         	movff	?_A6_BaudRateGet+1,A6_BaudRateSet@currentBaudRate+1
  4022  001200  C021  F0A6         	movff	?_A6_BaudRateGet+2,A6_BaudRateSet@currentBaudRate+2
  4023  001204  C022  F0A7         	movff	?_A6_BaudRateGet+3,A6_BaudRateSet@currentBaudRate+3
  4024  001208                     
  4025                           ;A6Lib.c: 62: if(currentBaudRate == 0) return 0;
  4026  001208  0100               	movlb	0	; () banked
  4027  00120A  51A4               	movf	A6_BaudRateSet@currentBaudRate& (0+255),w,b
  4028  00120C  11A5               	iorwf	(A6_BaudRateSet@currentBaudRate+1)& (0+255),w,b
  4029  00120E  11A6               	iorwf	(A6_BaudRateSet@currentBaudRate+2)& (0+255),w,b
  4030  001210  11A7               	iorwf	(A6_BaudRateSet@currentBaudRate+3)& (0+255),w,b
  4031  001212  A4D8               	btfss	status,2,c
  4032  001214  EF0E  F009         	goto	u2951
  4033  001218  EF10  F009         	goto	u2950
  4034  00121C                     u2951:
  4035  00121C  EF1B  F009         	goto	l3830
  4036  001220                     u2950:
  4037  001220                     l3826:
  4038  001220  0E00               	movlw	0
  4039  001222  0100               	movlb	0	; () banked
  4040  001224  6F6C               	movwf	?_A6_BaudRateSet& (0+255),b
  4041  001226  0E00               	movlw	0
  4042  001228  6F6D               	movwf	(?_A6_BaudRateSet+1)& (0+255),b
  4043  00122A  0E00               	movlw	0
  4044  00122C  6F6E               	movwf	(?_A6_BaudRateSet+2)& (0+255),b
  4045  00122E  0E00               	movlw	0
  4046  001230  6F6F               	movwf	(?_A6_BaudRateSet+3)& (0+255),b
  4047  001232  EF8E  F009         	goto	l505
  4048  001236                     l3830:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;A6Lib.c: 65: sprintf(request, "AT+IPR=%lu\r", baudRate);
  4052  001236  0E90               	movlw	low A6_BaudRateSet@request
  4053  001238  6E4B               	movwf	sprintf@sp^0,c
  4054  00123A  0E00               	movlw	high A6_BaudRateSet@request
  4055  00123C  6E4C               	movwf	(sprintf@sp+1)^0,c
  4056  00123E  0E8B               	movlw	low STR_24
  4057  001240  6E4D               	movwf	sprintf@f^0,c
  4058  001242  0E5F               	movlw	high STR_24
  4059  001244  6E4E               	movwf	(sprintf@f+1)^0,c
  4060  001246  C06C  F04F         	movff	A6_BaudRateSet@baudRate,?_sprintf+4
  4061  00124A  C06D  F050         	movff	A6_BaudRateSet@baudRate+1,?_sprintf+5
  4062  00124E  C06E  F051         	movff	A6_BaudRateSet@baudRate+2,?_sprintf+6
  4063  001252  C06F  F052         	movff	A6_BaudRateSet@baudRate+3,?_sprintf+7
  4064  001256  EC0B  F003         	call	_sprintf	;wreg free
  4065  00125A                     
  4066                           ;A6Lib.c: 66: A6_Command(request, 0, response, 32);
  4067  00125A  0E90               	movlw	low A6_BaudRateSet@request
  4068  00125C  6E18               	movwf	A6_Command@command^0,c
  4069  00125E  0E00               	movlw	high A6_BaudRateSet@request
  4070  001260  6E19               	movwf	(A6_Command@command+1)^0,c
  4071  001262  0E00               	movlw	0
  4072  001264  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4073  001266  0E00               	movlw	0
  4074  001268  6E1A               	movwf	A6_Command@timeout^0,c
  4075  00126A  0E70               	movlw	low A6_BaudRateSet@response
  4076  00126C  6E1C               	movwf	A6_Command@response^0,c
  4077  00126E  0E00               	movlw	high A6_BaudRateSet@response
  4078  001270  6E1D               	movwf	(A6_Command@response+1)^0,c
  4079  001272  0E20               	movlw	32
  4080  001274  6E1E               	movwf	A6_Command@responseLen^0,c
  4081  001276  EC88  F012         	call	_A6_Command	;wreg free
  4082  00127A                     
  4083                           ;A6Lib.c: 67: sleepMS(250);
  4084  00127A  0EFA               	movlw	250
  4085  00127C  6E05               	movwf	sleepMS@ms^0,c
  4086  00127E  0E00               	movlw	0
  4087  001280  6E06               	movwf	(sleepMS@ms+1)^0,c
  4088  001282  0E00               	movlw	0
  4089  001284  6E07               	movwf	(sleepMS@ms+2)^0,c
  4090  001286  0E00               	movlw	0
  4091  001288  6E08               	movwf	(sleepMS@ms+3)^0,c
  4092  00128A  EC6B  F012         	call	_sleepMS	;wreg free
  4093  00128E                     
  4094                           ;A6Lib.c: 68: if(strcmp(response, "OK") == 0) {
  4095  00128E  0E70               	movlw	low A6_BaudRateSet@response
  4096  001290  6E05               	movwf	strcmp@s1^0,c
  4097  001292  0E00               	movlw	high A6_BaudRateSet@response
  4098  001294  6E06               	movwf	(strcmp@s1+1)^0,c
  4099  001296  0EFB               	movlw	low STR_20
  4100  001298  6E07               	movwf	strcmp@s2^0,c
  4101  00129A  0E5F               	movlw	high STR_20
  4102  00129C  6E08               	movwf	(strcmp@s2+1)^0,c
  4103  00129E  EC01  F011         	call	_strcmp	;wreg free
  4104  0012A2  5005               	movf	?_strcmp^0,w,c
  4105  0012A4  1006               	iorwf	(?_strcmp+1)^0,w,c
  4106  0012A6  A4D8               	btfss	status,2,c
  4107  0012A8  EF58  F009         	goto	u2961
  4108  0012AC  EF5A  F009         	goto	u2960
  4109  0012B0                     u2961:
  4110  0012B0  EF82  F009         	goto	l3844
  4111  0012B4                     u2960:
  4112  0012B4                     
  4113                           ;A6Lib.c: 70: EUSART_BaudRateSet(baudRate);
  4114  0012B4  C06C  F012         	movff	A6_BaudRateSet@baudRate,EUSART_BaudRateSet@baudRate
  4115  0012B8  C06D  F013         	movff	A6_BaudRateSet@baudRate+1,EUSART_BaudRateSet@baudRate+1
  4116  0012BC  C06E  F014         	movff	A6_BaudRateSet@baudRate+2,EUSART_BaudRateSet@baudRate+2
  4117  0012C0  C06F  F015         	movff	A6_BaudRateSet@baudRate+3,EUSART_BaudRateSet@baudRate+3
  4118  0012C4  EC21  F00E         	call	_EUSART_BaudRateSet	;wreg free
  4119                           
  4120                           ;A6Lib.c: 71: sleepMS(150);
  4121  0012C8  0E96               	movlw	150
  4122  0012CA  6E05               	movwf	sleepMS@ms^0,c
  4123  0012CC  0E00               	movlw	0
  4124  0012CE  6E06               	movwf	(sleepMS@ms+1)^0,c
  4125  0012D0  0E00               	movlw	0
  4126  0012D2  6E07               	movwf	(sleepMS@ms+2)^0,c
  4127  0012D4  0E00               	movlw	0
  4128  0012D6  6E08               	movwf	(sleepMS@ms+3)^0,c
  4129  0012D8  EC6B  F012         	call	_sleepMS	;wreg free
  4130  0012DC                     
  4131                           ;A6Lib.c: 72: if(A6_IsAlive() == 1) {
  4132  0012DC  EC34  F010         	call	_A6_IsAlive	;wreg free
  4133  0012E0  06E8               	decf	wreg,f,c
  4134  0012E2  A4D8               	btfss	status,2,c
  4135  0012E4  EF76  F009         	goto	u2971
  4136  0012E8  EF78  F009         	goto	u2970
  4137  0012EC                     u2971:
  4138  0012EC  EF82  F009         	goto	l3844
  4139  0012F0                     u2970:
  4140  0012F0                     
  4141                           ;A6Lib.c: 73: return baudRate;
  4142  0012F0  C06C  F06C         	movff	A6_BaudRateSet@baudRate,?_A6_BaudRateSet
  4143  0012F4  C06D  F06D         	movff	A6_BaudRateSet@baudRate+1,?_A6_BaudRateSet+1
  4144  0012F8  C06E  F06E         	movff	A6_BaudRateSet@baudRate+2,?_A6_BaudRateSet+2
  4145  0012FC  C06F  F06F         	movff	A6_BaudRateSet@baudRate+3,?_A6_BaudRateSet+3
  4146  001300  EF8E  F009         	goto	l505
  4147  001304                     l3844:
  4148                           
  4149                           ;A6Lib.c: 74: };A6Lib.c: 75: };A6Lib.c: 78: EUSART_BaudRateSet(currentBaudRate);
  4150  001304  C0A4  F012         	movff	A6_BaudRateSet@currentBaudRate,EUSART_BaudRateSet@baudRate
  4151  001308  C0A5  F013         	movff	A6_BaudRateSet@currentBaudRate+1,EUSART_BaudRateSet@baudRate+1
  4152  00130C  C0A6  F014         	movff	A6_BaudRateSet@currentBaudRate+2,EUSART_BaudRateSet@baudRate+2
  4153  001310  C0A7  F015         	movff	A6_BaudRateSet@currentBaudRate+3,EUSART_BaudRateSet@baudRate+3
  4154  001314  EC21  F00E         	call	_EUSART_BaudRateSet	;wreg free
  4155  001318  EF10  F009         	goto	l3826
  4156  00131C                     l505:
  4157  00131C  0012               	return		;funcret
  4158  00131E                     __end_of_A6_BaudRateSet:
  4159                           	opt callstack 0
  4160                           
  4161 ;; *************** function _A6_BaudRateGet *****************
  4162 ;; Defined at:
  4163 ;;		line 30 in file "A6Lib.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  j               1   73[COMRAM] unsigned char 
  4168 ;;  response       32   34[COMRAM] unsigned char [32]
  4169 ;;  baudRate        4   67[COMRAM] unsigned long 
  4170 ;;  baudRateToke    2   71[COMRAM] PTR unsigned char 
  4171 ;;		 -> NULL(0), A6_BaudRateGet@response(32), 
  4172 ;;  loop            1   66[COMRAM] unsigned char 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  4   30[COMRAM] unsigned long 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4182 ;;      Params:         4       0       0       0       0       0       0       0       0
  4183 ;;      Locals:        40       0       0       0       0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4185 ;;      Totals:        44       0       0       0       0       0       0       0       0
  4186 ;;Total ram usage:       44 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    6
  4189 ;; This function calls:
  4190 ;;		_A6_Command
  4191 ;;		_atol
  4192 ;;		_sleepMS
  4193 ;;		_strstr
  4194 ;;		_strtok
  4195 ;; This function is called by:
  4196 ;;		_loop
  4197 ;;		_A6_BaudRateSet
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text4
  4202  000F68                     __ptext4:
  4203                           	opt callstack 0
  4204  000F68                     _A6_BaudRateGet:
  4205                           	opt callstack 22
  4206  000F68                     
  4207                           ;A6Lib.c: 31: uint32_t baudRate;;A6Lib.c: 32: char *baudRateToken;;A6Lib.c: 33: char res
      +                          ponse[32];;A6Lib.c: 35: uint8_t loop = 5;
  4208  000F68  0E05               	movlw	5
  4209  000F6A  6E43               	movwf	A6_BaudRateGet@loop^0,c
  4210                           
  4211                           ;A6Lib.c: 36: while(loop--) {
  4212  000F6C  EF4B  F008         	goto	l3612
  4213  000F70                     l3586:
  4214                           
  4215                           ;A6Lib.c: 37: A6_Command("AT+IPR?\r", 0, response, 32);
  4216  000F70  0ED7               	movlw	low STR_21
  4217  000F72  6E18               	movwf	A6_Command@command^0,c
  4218  000F74  0E5F               	movlw	high STR_21
  4219  000F76  6E19               	movwf	(A6_Command@command+1)^0,c
  4220  000F78  0E00               	movlw	0
  4221  000F7A  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4222  000F7C  0E00               	movlw	0
  4223  000F7E  6E1A               	movwf	A6_Command@timeout^0,c
  4224  000F80  0E23               	movlw	low A6_BaudRateGet@response
  4225  000F82  6E1C               	movwf	A6_Command@response^0,c
  4226  000F84  0E00               	movlw	high A6_BaudRateGet@response
  4227  000F86  6E1D               	movwf	(A6_Command@response+1)^0,c
  4228  000F88  0E20               	movlw	32
  4229  000F8A  6E1E               	movwf	A6_Command@responseLen^0,c
  4230  000F8C  EC88  F012         	call	_A6_Command	;wreg free
  4231  000F90                     
  4232                           ;A6Lib.c: 38: if(strstr(response, "+IPR: ") != (0)) {
  4233  000F90  0E23               	movlw	low A6_BaudRateGet@response
  4234  000F92  6E10               	movwf	strstr@s1^0,c
  4235  000F94  0E00               	movlw	high A6_BaudRateGet@response
  4236  000F96  6E11               	movwf	(strstr@s1+1)^0,c
  4237  000F98  0EE8               	movlw	low STR_22
  4238  000F9A  6E12               	movwf	strstr@s2^0,c
  4239  000F9C  0E5F               	movlw	high STR_22
  4240  000F9E  6E13               	movwf	(strstr@s2+1)^0,c
  4241  000FA0  EC16  F00C         	call	_strstr	;wreg free
  4242  000FA4  5010               	movf	?_strstr^0,w,c
  4243  000FA6  1011               	iorwf	(?_strstr+1)^0,w,c
  4244  000FA8  B4D8               	btfsc	status,2,c
  4245  000FAA  EFD9  F007         	goto	u2581
  4246  000FAE  EFDB  F007         	goto	u2580
  4247  000FB2                     u2581:
  4248  000FB2  EF41  F008         	goto	l3610
  4249  000FB6                     u2580:
  4250  000FB6                     
  4251                           ;A6Lib.c: 39: baudRateToken = strtok(response, " ");
  4252  000FB6  0E23               	movlw	low A6_BaudRateGet@response
  4253  000FB8  6E12               	movwf	strtok@s1^0,c
  4254  000FBA  0E00               	movlw	high A6_BaudRateGet@response
  4255  000FBC  6E13               	movwf	(strtok@s1+1)^0,c
  4256  000FBE  0EED               	movlw	low (STR_22+5)
  4257  000FC0  6E14               	movwf	strtok@s2^0,c
  4258  000FC2  0E5F               	movlw	high (STR_22+5)
  4259  000FC4  6E15               	movwf	(strtok@s2+1)^0,c
  4260  000FC6  EC8F  F009         	call	_strtok	;wreg free
  4261  000FCA  C012  F048         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  4262  000FCE  C013  F049         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  4263                           
  4264                           ;A6Lib.c: 40: baudRateToken = strtok((0), response);
  4265  000FD2  0E00               	movlw	0
  4266  000FD4  6E12               	movwf	strtok@s1^0,c
  4267  000FD6  0E00               	movlw	0
  4268  000FD8  6E13               	movwf	(strtok@s1+1)^0,c
  4269  000FDA  0E23               	movlw	low A6_BaudRateGet@response
  4270  000FDC  6E14               	movwf	strtok@s2^0,c
  4271  000FDE  0E00               	movlw	high A6_BaudRateGet@response
  4272  000FE0  6E15               	movwf	(strtok@s2+1)^0,c
  4273  000FE2  EC8F  F009         	call	_strtok	;wreg free
  4274  000FE6  C012  F048         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  4275  000FEA  C013  F049         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  4276  000FEE                     
  4277                           ;A6Lib.c: 41: if(baudRateToken != (0)) {
  4278  000FEE  5048               	movf	A6_BaudRateGet@baudRateToken^0,w,c
  4279  000FF0  1049               	iorwf	(A6_BaudRateGet@baudRateToken+1)^0,w,c
  4280  000FF2  B4D8               	btfsc	status,2,c
  4281  000FF4  EFFE  F007         	goto	u2591
  4282  000FF8  EF00  F008         	goto	u2590
  4283  000FFC                     u2591:
  4284  000FFC  EF41  F008         	goto	l3610
  4285  001000                     u2590:
  4286  001000                     
  4287                           ;A6Lib.c: 42: baudRate = atol(baudRateToken);
  4288  001000  C048  F011         	movff	A6_BaudRateGet@baudRateToken,atol@s
  4289  001004  C049  F012         	movff	A6_BaudRateGet@baudRateToken+1,atol@s+1
  4290  001008  EC5D  F008         	call	_atol	;wreg free
  4291  00100C  C011  F044         	movff	?_atol,A6_BaudRateGet@baudRate
  4292  001010  C012  F045         	movff	?_atol+1,A6_BaudRateGet@baudRate+1
  4293  001014  C013  F046         	movff	?_atol+2,A6_BaudRateGet@baudRate+2
  4294  001018  C014  F047         	movff	?_atol+3,A6_BaudRateGet@baudRate+3
  4295  00101C                     
  4296                           ;A6Lib.c: 43: for(uint8_t j=0; j<3; j++) {
  4297  00101C  0E00               	movlw	0
  4298  00101E  6E4A               	movwf	A6_BaudRateGet@j^0,c
  4299  001020                     l3602:
  4300                           
  4301                           ;A6Lib.c: 44: if(baudRate == A6_BAUDRATES[j]) {
  4302  001020  504A               	movf	A6_BaudRateGet@j^0,w,c
  4303  001022  0D04               	mullw	4
  4304  001024  0E4F               	movlw	low _A6_BAUDRATES
  4305  001026  24F3               	addwf	243,w,c
  4306  001028  6EF6               	movwf	tblptrl,c
  4307  00102A  0E5E               	movlw	high _A6_BAUDRATES
  4308  00102C  20F4               	addwfc	244,w,c
  4309  00102E  6EF7               	movwf	tblptrh,c
  4310  001030                     	if	0	;There are less than 3 active tblptr bytes
  4311  001030                     	endif
  4312  001030  5044               	movf	A6_BaudRateGet@baudRate^0,w,c
  4313  001032  0009               	tblrd		*+
  4314  001034  18F5               	xorwf	tablat,w,c
  4315  001036  E110               	bnz	u2601
  4316  001038  5045               	movf	(A6_BaudRateGet@baudRate+1)^0,w,c
  4317  00103A  0009               	tblrd		*+
  4318  00103C  18F5               	xorwf	tablat,w,c
  4319  00103E  E10C               	bnz	u2601
  4320  001040  5046               	movf	(A6_BaudRateGet@baudRate+2)^0,w,c
  4321  001042  0009               	tblrd		*+
  4322  001044  18F5               	xorwf	tablat,w,c
  4323  001046  E108               	bnz	u2601
  4324  001048  5047               	movf	(A6_BaudRateGet@baudRate+3)^0,w,c
  4325  00104A  0009               	tblrd		*+
  4326  00104C  18F5               	xorwf	tablat,w,c
  4327  00104E  A4D8               	btfss	status,2,c
  4328  001050  EF2C  F008         	goto	u2601
  4329  001054  EF2E  F008         	goto	u2600
  4330  001058                     u2601:
  4331  001058  EF38  F008         	goto	l3606
  4332  00105C                     u2600:
  4333  00105C                     
  4334                           ;A6Lib.c: 45: return baudRate;
  4335  00105C  C044  F01F         	movff	A6_BaudRateGet@baudRate,?_A6_BaudRateGet
  4336  001060  C045  F020         	movff	A6_BaudRateGet@baudRate+1,?_A6_BaudRateGet+1
  4337  001064  C046  F021         	movff	A6_BaudRateGet@baudRate+2,?_A6_BaudRateGet+2
  4338  001068  C047  F022         	movff	A6_BaudRateGet@baudRate+3,?_A6_BaudRateGet+3
  4339  00106C  EF5C  F008         	goto	l500
  4340  001070                     l3606:
  4341  001070  2A4A               	incf	A6_BaudRateGet@j^0,f,c
  4342  001072  0E02               	movlw	2
  4343  001074  644A               	cpfsgt	A6_BaudRateGet@j^0,c
  4344  001076  EF3F  F008         	goto	u2611
  4345  00107A  EF41  F008         	goto	u2610
  4346  00107E                     u2611:
  4347  00107E  EF10  F008         	goto	l3602
  4348  001082                     u2610:
  4349  001082                     l3610:
  4350                           
  4351                           ;A6Lib.c: 46: };A6Lib.c: 47: };A6Lib.c: 48: };A6Lib.c: 49: };A6Lib.c: 50: sleepMS(250);
  4352  001082  0EFA               	movlw	250
  4353  001084  6E05               	movwf	sleepMS@ms^0,c
  4354  001086  0E00               	movlw	0
  4355  001088  6E06               	movwf	(sleepMS@ms+1)^0,c
  4356  00108A  0E00               	movlw	0
  4357  00108C  6E07               	movwf	(sleepMS@ms+2)^0,c
  4358  00108E  0E00               	movlw	0
  4359  001090  6E08               	movwf	(sleepMS@ms+3)^0,c
  4360  001092  EC6B  F012         	call	_sleepMS	;wreg free
  4361  001096                     l3612:
  4362  001096  0643               	decf	A6_BaudRateGet@loop^0,f,c
  4363  001098  2843               	incf	A6_BaudRateGet@loop^0,w,c
  4364  00109A  A4D8               	btfss	status,2,c
  4365  00109C  EF52  F008         	goto	u2621
  4366  0010A0  EF54  F008         	goto	u2620
  4367  0010A4                     u2621:
  4368  0010A4  EFB8  F007         	goto	l3586
  4369  0010A8                     u2620:
  4370  0010A8                     
  4371                           ;A6Lib.c: 51: };A6Lib.c: 53: return 0;
  4372  0010A8  0E00               	movlw	0
  4373  0010AA  6E1F               	movwf	?_A6_BaudRateGet^0,c
  4374  0010AC  0E00               	movlw	0
  4375  0010AE  6E20               	movwf	(?_A6_BaudRateGet+1)^0,c
  4376  0010B0  0E00               	movlw	0
  4377  0010B2  6E21               	movwf	(?_A6_BaudRateGet+2)^0,c
  4378  0010B4  0E00               	movlw	0
  4379  0010B6  6E22               	movwf	(?_A6_BaudRateGet+3)^0,c
  4380  0010B8                     l500:
  4381  0010B8  0012               	return		;funcret
  4382  0010BA                     __end_of_A6_BaudRateGet:
  4383                           	opt callstack 0
  4384                           
  4385 ;; *************** function _strtok *****************
  4386 ;; Defined at:
  4387 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strtok.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  s1              2   17[COMRAM] PTR unsigned char 
  4390 ;;		 -> NULL(0), A6_BaudRateGet@response(32), 
  4391 ;;  s2              2   19[COMRAM] PTR const unsigned char 
  4392 ;;		 -> STR_23(2), A6_BaudRateGet@response(32), 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  2   17[COMRAM] PTR unsigned char 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4404 ;;      Params:         4       0       0       0       0       0       0       0       0
  4405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4407 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4408 ;;Total ram usage:        4 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    4
  4411 ;; This function calls:
  4412 ;;		_strcspn
  4413 ;;		_strspn
  4414 ;; This function is called by:
  4415 ;;		_A6_BaudRateGet
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text5
  4420  00131E                     __ptext5:
  4421                           	opt callstack 0
  4422  00131E                     _strtok:
  4423                           	opt callstack 23
  4424  00131E  5012               	movf	strtok@s1^0,w,c
  4425  001320  1013               	iorwf	(strtok@s1+1)^0,w,c
  4426  001322  A4D8               	btfss	status,2,c
  4427  001324  EF96  F009         	goto	u2361
  4428  001328  EF98  F009         	goto	u2360
  4429  00132C                     u2361:
  4430  00132C  EF9C  F009         	goto	l1388
  4431  001330                     u2360:
  4432  001330  C0C2  F012         	movff	strtok@sp,strtok@s1
  4433  001334  C0C3  F013         	movff	strtok@sp+1,strtok@s1+1
  4434  001338                     l1388:
  4435  001338  5012               	movf	strtok@s1^0,w,c
  4436  00133A  1013               	iorwf	(strtok@s1+1)^0,w,c
  4437  00133C  A4D8               	btfss	status,2,c
  4438  00133E  EFA3  F009         	goto	u2371
  4439  001342  EFA5  F009         	goto	u2370
  4440  001346                     u2371:
  4441  001346  EFAB  F009         	goto	l3444
  4442  00134A                     u2370:
  4443  00134A  0E00               	movlw	0
  4444  00134C  6E12               	movwf	?_strtok^0,c
  4445  00134E  0E00               	movlw	0
  4446  001350  6E13               	movwf	(?_strtok+1)^0,c
  4447  001352  EFFF  F009         	goto	l1390
  4448  001356                     l3444:
  4449  001356  C012  F00B         	movff	strtok@s1,strspn@s1
  4450  00135A  C013  F00C         	movff	strtok@s1+1,strspn@s1+1
  4451  00135E  C014  F00D         	movff	strtok@s2,strspn@s2
  4452  001362  C015  F00E         	movff	strtok@s2+1,strspn@s2+1
  4453  001366  EC69  F010         	call	_strspn	;wreg free
  4454  00136A  500B               	movf	?_strspn^0,w,c
  4455  00136C  2612               	addwf	strtok@s1^0,f,c
  4456  00136E  500C               	movf	(?_strspn+1)^0,w,c
  4457  001370  2213               	addwfc	(strtok@s1+1)^0,f,c
  4458  001372  C012  FFD9         	movff	strtok@s1,fsr2l
  4459  001376  C013  FFDA         	movff	strtok@s1+1,fsr2h
  4460  00137A  50DF               	movf	indf2,w,c
  4461  00137C  A4D8               	btfss	status,2,c
  4462  00137E  EFC3  F009         	goto	u2381
  4463  001382  EFC5  F009         	goto	u2380
  4464  001386                     u2381:
  4465  001386  EFD0  F009         	goto	l3452
  4466  00138A                     u2380:
  4467  00138A  0E00               	movlw	0
  4468  00138C  0100               	movlb	0	; () banked
  4469  00138E  6FC2               	movwf	strtok@sp& (0+255),b
  4470  001390  0E00               	movlw	0
  4471  001392  6FC3               	movwf	(strtok@sp+1)& (0+255),b
  4472  001394  C0C2  F012         	movff	strtok@sp,?_strtok
  4473  001398  C0C3  F013         	movff	strtok@sp+1,?_strtok+1
  4474  00139C  EFFF  F009         	goto	l1390
  4475  0013A0                     l3452:
  4476  0013A0  C012  F00B         	movff	strtok@s1,strcspn@s1
  4477  0013A4  C013  F00C         	movff	strtok@s1+1,strcspn@s1+1
  4478  0013A8  C014  F00D         	movff	strtok@s2,strcspn@s2
  4479  0013AC  C015  F00E         	movff	strtok@s2+1,strcspn@s2+1
  4480  0013B0  EC9C  F010         	call	_strcspn	;wreg free
  4481  0013B4  500B               	movf	?_strcspn^0,w,c
  4482  0013B6  2412               	addwf	strtok@s1^0,w,c
  4483  0013B8  0100               	movlb	0	; () banked
  4484  0013BA  6FC2               	movwf	strtok@sp& (0+255),b
  4485  0013BC  500C               	movf	(?_strcspn+1)^0,w,c
  4486  0013BE  2013               	addwfc	(strtok@s1+1)^0,w,c
  4487  0013C0  6FC3               	movwf	(strtok@sp+1)& (0+255),b
  4488  0013C2                     
  4489                           ; BSR set to: 0
  4490  0013C2  C0C2  FFD9         	movff	strtok@sp,fsr2l
  4491  0013C6  C0C3  FFDA         	movff	strtok@sp+1,fsr2h
  4492  0013CA  50DF               	movf	indf2,w,c
  4493  0013CC  B4D8               	btfsc	status,2,c
  4494  0013CE  EFEB  F009         	goto	u2391
  4495  0013D2  EFED  F009         	goto	u2390
  4496  0013D6                     u2391:
  4497  0013D6  EFF7  F009         	goto	l3460
  4498  0013DA                     u2390:
  4499  0013DA                     
  4500                           ; BSR set to: 0
  4501  0013DA  C0C2  FFD9         	movff	strtok@sp,fsr2l
  4502  0013DE  C0C3  FFDA         	movff	strtok@sp+1,fsr2h
  4503  0013E2  0E00               	movlw	0
  4504  0013E4  6EDF               	movwf	indf2,c
  4505  0013E6                     
  4506                           ; BSR set to: 0
  4507  0013E6  4BC2               	infsnz	strtok@sp& (0+255),f,b
  4508  0013E8  2BC3               	incf	(strtok@sp+1)& (0+255),f,b
  4509  0013EA  EFFB  F009         	goto	l1393
  4510  0013EE                     l3460:
  4511                           
  4512                           ; BSR set to: 0
  4513  0013EE  0E00               	movlw	0
  4514  0013F0  6FC2               	movwf	strtok@sp& (0+255),b
  4515  0013F2  0E00               	movlw	0
  4516  0013F4  6FC3               	movwf	(strtok@sp+1)& (0+255),b
  4517  0013F6                     l1393:
  4518                           
  4519                           ; BSR set to: 0
  4520  0013F6  C012  F012         	movff	strtok@s1,?_strtok
  4521  0013FA  C013  F013         	movff	strtok@s1+1,?_strtok+1
  4522  0013FE                     l1390:
  4523  0013FE  0012               	return		;funcret
  4524  001400                     __end_of_strtok:
  4525                           	opt callstack 0
  4526                           
  4527 ;; *************** function _strspn *****************
  4528 ;; Defined at:
  4529 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strspn.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  4532 ;;		 -> NULL(0), A6_BaudRateGet@response(32), 
  4533 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  4534 ;;		 -> STR_23(2), A6_BaudRateGet@response(32), 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  i               2   15[COMRAM] unsigned int 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  2   10[COMRAM] unsigned int 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4546 ;;      Params:         4       0       0       0       0       0       0       0       0
  4547 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4548 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4549 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4550 ;;Total ram usage:        7 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    3
  4553 ;; This function calls:
  4554 ;;		_strchr
  4555 ;; This function is called by:
  4556 ;;		_strtok
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           	psect	text6
  4561  0020D2                     __ptext6:
  4562                           	opt callstack 0
  4563  0020D2                     _strspn:
  4564                           	opt callstack 23
  4565  0020D2  0E00               	movlw	0
  4566  0020D4  6E11               	movwf	(strspn@i+1)^0,c
  4567  0020D6  0E00               	movlw	0
  4568  0020D8  6E10               	movwf	strspn@i^0,c
  4569  0020DA  EF73  F010         	goto	l3368
  4570  0020DE                     l3366:
  4571  0020DE  4A0B               	infsnz	strspn@s1^0,f,c
  4572  0020E0  2A0C               	incf	(strspn@s1+1)^0,f,c
  4573  0020E2  4A10               	infsnz	strspn@i^0,f,c
  4574  0020E4  2A11               	incf	(strspn@i+1)^0,f,c
  4575  0020E6                     l3368:
  4576  0020E6  C00B  FFD9         	movff	strspn@s1,fsr2l
  4577  0020EA  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  4578  0020EE  50DF               	movf	indf2,w,c
  4579  0020F0  B4D8               	btfsc	status,2,c
  4580  0020F2  EF7D  F010         	goto	u2211
  4581  0020F6  EF7F  F010         	goto	u2210
  4582  0020FA                     u2211:
  4583  0020FA  EF97  F010         	goto	l1427
  4584  0020FE                     u2210:
  4585  0020FE  C00D  F005         	movff	strspn@s2,strchr@ptr
  4586  002102  C00E  F006         	movff	strspn@s2+1,strchr@ptr+1
  4587  002106  C00B  FFD9         	movff	strspn@s1,fsr2l
  4588  00210A  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  4589  00210E  50DF               	movf	indf2,w,c
  4590  002110  6E0F               	movwf	??_strspn^0,c
  4591  002112  500F               	movf	??_strspn^0,w,c
  4592  002114  6E07               	movwf	strchr@chr^0,c
  4593  002116  6A08               	clrf	(strchr@chr+1)^0,c
  4594  002118  EC63  F00E         	call	_strchr	;wreg free
  4595  00211C  5005               	movf	?_strchr^0,w,c
  4596  00211E  1006               	iorwf	(?_strchr+1)^0,w,c
  4597  002120  A4D8               	btfss	status,2,c
  4598  002122  EF95  F010         	goto	u2221
  4599  002126  EF97  F010         	goto	u2220
  4600  00212A                     u2221:
  4601  00212A  EF6F  F010         	goto	l3366
  4602  00212E                     u2220:
  4603  00212E                     l1427:
  4604  00212E  C010  F00B         	movff	strspn@i,?_strspn
  4605  002132  C011  F00C         	movff	strspn@i+1,?_strspn+1
  4606  002136  0012               	return		;funcret
  4607  002138                     __end_of_strspn:
  4608                           	opt callstack 0
  4609                           
  4610 ;; *************** function _strcspn *****************
  4611 ;; Defined at:
  4612 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcspn.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  4615 ;;		 -> NULL(0), A6_BaudRateGet@response(32), 
  4616 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  4617 ;;		 -> STR_23(2), A6_BaudRateGet@response(32), 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  i               2   15[COMRAM] unsigned int 
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  2   10[COMRAM] unsigned int 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4629 ;;      Params:         4       0       0       0       0       0       0       0       0
  4630 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4631 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4632 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4633 ;;Total ram usage:        7 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    3
  4636 ;; This function calls:
  4637 ;;		_strchr
  4638 ;; This function is called by:
  4639 ;;		_strtok
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text7
  4644  002138                     __ptext7:
  4645                           	opt callstack 0
  4646  002138                     _strcspn:
  4647                           	opt callstack 23
  4648  002138  0E00               	movlw	0
  4649  00213A  6E11               	movwf	(strcspn@i+1)^0,c
  4650  00213C  0E00               	movlw	0
  4651  00213E  6E10               	movwf	strcspn@i^0,c
  4652  002140  EFA6  F010         	goto	l3376
  4653  002144                     l3374:
  4654  002144  4A0B               	infsnz	strcspn@s1^0,f,c
  4655  002146  2A0C               	incf	(strcspn@s1+1)^0,f,c
  4656  002148  4A10               	infsnz	strcspn@i^0,f,c
  4657  00214A  2A11               	incf	(strcspn@i+1)^0,f,c
  4658  00214C                     l3376:
  4659  00214C  C00B  FFD9         	movff	strcspn@s1,fsr2l
  4660  002150  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  4661  002154  50DF               	movf	indf2,w,c
  4662  002156  B4D8               	btfsc	status,2,c
  4663  002158  EFB0  F010         	goto	u2231
  4664  00215C  EFB2  F010         	goto	u2230
  4665  002160                     u2231:
  4666  002160  EFCA  F010         	goto	l1408
  4667  002164                     u2230:
  4668  002164  C00D  F005         	movff	strcspn@s2,strchr@ptr
  4669  002168  C00E  F006         	movff	strcspn@s2+1,strchr@ptr+1
  4670  00216C  C00B  FFD9         	movff	strcspn@s1,fsr2l
  4671  002170  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  4672  002174  50DF               	movf	indf2,w,c
  4673  002176  6E0F               	movwf	??_strcspn^0,c
  4674  002178  500F               	movf	??_strcspn^0,w,c
  4675  00217A  6E07               	movwf	strchr@chr^0,c
  4676  00217C  6A08               	clrf	(strchr@chr+1)^0,c
  4677  00217E  EC63  F00E         	call	_strchr	;wreg free
  4678  002182  5005               	movf	?_strchr^0,w,c
  4679  002184  1006               	iorwf	(?_strchr+1)^0,w,c
  4680  002186  B4D8               	btfsc	status,2,c
  4681  002188  EFC8  F010         	goto	u2241
  4682  00218C  EFCA  F010         	goto	u2240
  4683  002190                     u2241:
  4684  002190  EFA2  F010         	goto	l3374
  4685  002194                     u2240:
  4686  002194                     l1408:
  4687  002194  C010  F00B         	movff	strcspn@i,?_strcspn
  4688  002198  C011  F00C         	movff	strcspn@i+1,?_strcspn+1
  4689  00219C  0012               	return		;funcret
  4690  00219E                     __end_of_strcspn:
  4691                           	opt callstack 0
  4692                           
  4693 ;; *************** function _strstr *****************
  4694 ;; Defined at:
  4695 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strstr.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  4698 ;;		 -> STR_23(2), NULL(0), A6_BaudRateGet@response(32), 
  4699 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  4700 ;;		 -> STR_22(7), 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  2   15[COMRAM] PTR unsigned char 
  4705 ;; Registers used:
  4706 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4712 ;;      Params:         4       0       0       0       0       0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4715 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4716 ;;Total ram usage:        4 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    3
  4719 ;; This function calls:
  4720 ;;		_strchr
  4721 ;;		_strlen
  4722 ;;		_strncmp
  4723 ;; This function is called by:
  4724 ;;		_A6_BaudRateGet
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text8
  4729  00182C                     __ptext8:
  4730                           	opt callstack 0
  4731  00182C                     _strstr:
  4732                           	opt callstack 24
  4733  00182C  EF4F  F00C         	goto	l3428
  4734  001830                     l3420:
  4735  001830  C010  F009         	movff	strstr@s1,strncmp@s1
  4736  001834  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
  4737  001838  C012  F00B         	movff	strstr@s2,strncmp@s2
  4738  00183C  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
  4739  001840  C012  F005         	movff	strstr@s2,strlen@s
  4740  001844  C013  F006         	movff	strstr@s2+1,strlen@s+1
  4741  001848  EC58  F011         	call	_strlen	;wreg free
  4742  00184C  C005  F00D         	movff	?_strlen,strncmp@len
  4743  001850  C006  F00E         	movff	?_strlen+1,strncmp@len+1
  4744  001854  EC6F  F00A         	call	_strncmp	;wreg free
  4745  001858  5009               	movf	?_strncmp^0,w,c
  4746  00185A  100A               	iorwf	(?_strncmp+1)^0,w,c
  4747  00185C  A4D8               	btfss	status,2,c
  4748  00185E  EF33  F00C         	goto	u2321
  4749  001862  EF35  F00C         	goto	u2320
  4750  001866                     u2321:
  4751  001866  EF3B  F00C         	goto	l3426
  4752  00186A                     u2320:
  4753  00186A  C010  F010         	movff	strstr@s1,?_strstr
  4754  00186E  C011  F011         	movff	strstr@s1+1,?_strstr+1
  4755  001872  EF74  F00C         	goto	l1376
  4756  001876                     l3426:
  4757  001876  0E01               	movlw	1
  4758  001878  2410               	addwf	strstr@s1^0,w,c
  4759  00187A  6E05               	movwf	strchr@ptr^0,c
  4760  00187C  0E00               	movlw	0
  4761  00187E  2011               	addwfc	(strstr@s1+1)^0,w,c
  4762  001880  6E06               	movwf	(strchr@ptr+1)^0,c
  4763  001882  C012  FFF6         	movff	strstr@s2,tblptrl
  4764  001886  C013  FFF7         	movff	strstr@s2+1,tblptrh
  4765  00188A                     	if	0	;tblptru may be non-zero
  4766  00188A                     	endif
  4767  00188A                     	if	0	;tblptru may be non-zero
  4768  00188A                     	endif
  4769  00188A  0008               	tblrd		*
  4770  00188C  50F5               	movf	tablat,w,c
  4771  00188E  6E07               	movwf	strchr@chr^0,c
  4772  001890  6A08               	clrf	(strchr@chr+1)^0,c
  4773  001892  EC63  F00E         	call	_strchr	;wreg free
  4774  001896  C005  F010         	movff	?_strchr,strstr@s1
  4775  00189A  C006  F011         	movff	?_strchr+1,strstr@s1+1
  4776  00189E                     l3428:
  4777  00189E  5010               	movf	strstr@s1^0,w,c
  4778  0018A0  1011               	iorwf	(strstr@s1+1)^0,w,c
  4779  0018A2  B4D8               	btfsc	status,2,c
  4780  0018A4  EF56  F00C         	goto	u2331
  4781  0018A8  EF58  F00C         	goto	u2330
  4782  0018AC                     u2331:
  4783  0018AC  EF70  F00C         	goto	l3432
  4784  0018B0                     u2330:
  4785  0018B0  C010  FFF6         	movff	strstr@s1,tblptrl
  4786  0018B4  C011  FFF7         	movff	strstr@s1+1,tblptrh
  4787  0018B8  6AF8               	clrf	tblptru,c
  4788  0018BA  0E07               	movlw	(high __ramtop+-1)
  4789  0018BC  64F7               	cpfsgt	tblptrh,c
  4790  0018BE  D003               	bra	u2347
  4791  0018C0  0008               	tblrd		*
  4792  0018C2  50F5               	movf	tablat,w,c
  4793  0018C4  D005               	bra	u2340
  4794  0018C6                     u2347:
  4795  0018C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  4796  0018CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  4797  0018CE  50EF               	movf	indf0,w,c
  4798  0018D0                     u2340:
  4799  0018D0  0900               	iorlw	0
  4800  0018D2  A4D8               	btfss	status,2,c
  4801  0018D4  EF6E  F00C         	goto	u2351
  4802  0018D8  EF70  F00C         	goto	u2350
  4803  0018DC                     u2351:
  4804  0018DC  EF18  F00C         	goto	l3420
  4805  0018E0                     u2350:
  4806  0018E0                     l3432:
  4807  0018E0  0E00               	movlw	0
  4808  0018E2  6E10               	movwf	?_strstr^0,c
  4809  0018E4  0E00               	movlw	0
  4810  0018E6  6E11               	movwf	(?_strstr+1)^0,c
  4811  0018E8                     l1376:
  4812  0018E8  0012               	return		;funcret
  4813  0018EA                     __end_of_strstr:
  4814                           	opt callstack 0
  4815                           
  4816 ;; *************** function _strncmp *****************
  4817 ;; Defined at:
  4818 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strncmp.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  s1              2    8[COMRAM] PTR const unsigned char 
  4821 ;;		 -> STR_23(2), NULL(0), A6_BaudRateGet@response(32), 
  4822 ;;  s2              2   10[COMRAM] PTR const unsigned char 
  4823 ;;		 -> STR_22(7), 
  4824 ;;  len             2   12[COMRAM] unsigned int 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  2    8[COMRAM] int 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4836 ;;      Params:         6       0       0       0       0       0       0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4838 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4839 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4840 ;;Total ram usage:        7 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:    2
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_strstr
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text9
  4851  0014DE                     __ptext9:
  4852                           	opt callstack 0
  4853  0014DE                     _strncmp:
  4854                           	opt callstack 24
  4855  0014DE  EFCA  F00A         	goto	l3358
  4856  0014E2                     l3348:
  4857  0014E2  C009  FFF6         	movff	strncmp@s1,tblptrl
  4858  0014E6  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  4859  0014EA  6AF8               	clrf	tblptru,c
  4860  0014EC  0E07               	movlw	(high __ramtop+-1)
  4861  0014EE  64F7               	cpfsgt	tblptrh,c
  4862  0014F0  D003               	bra	u2167
  4863  0014F2  0008               	tblrd		*
  4864  0014F4  50F5               	movf	tablat,w,c
  4865  0014F6  D005               	bra	u2160
  4866  0014F8                     u2167:
  4867  0014F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  4868  0014FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  4869  001500  50EF               	movf	indf0,w,c
  4870  001502                     u2160:
  4871  001502  0900               	iorlw	0
  4872  001504  B4D8               	btfsc	status,2,c
  4873  001506  EF87  F00A         	goto	u2171
  4874  00150A  EF89  F00A         	goto	u2170
  4875  00150E                     u2171:
  4876  00150E  EFA8  F00A         	goto	l3352
  4877  001512                     u2170:
  4878  001512  C00B  FFF6         	movff	strncmp@s2,tblptrl
  4879  001516  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  4880  00151A                     	if	0	;tblptru may be non-zero
  4881  00151A                     	endif
  4882  00151A                     	if	0	;tblptru may be non-zero
  4883  00151A                     	endif
  4884  00151A  0008               	tblrd		*
  4885  00151C  CFF5 F00F          	movff	tablat,??_strncmp
  4886  001520  C009  FFF6         	movff	strncmp@s1,tblptrl
  4887  001524  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  4888  001528  6AF8               	clrf	tblptru,c
  4889  00152A  0E07               	movlw	(high __ramtop+-1)
  4890  00152C  64F7               	cpfsgt	tblptrh,c
  4891  00152E  D003               	bra	u2187
  4892  001530  0008               	tblrd		*
  4893  001532  50F5               	movf	tablat,w,c
  4894  001534  D005               	bra	u2185
  4895  001536                     u2187:
  4896  001536  CFF6 FFE9          	movff	tblptrl,fsr0l
  4897  00153A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4898  00153E  50EF               	movf	indf0,w,c
  4899  001540                     u2185:
  4900  001540  180F               	xorwf	??_strncmp^0,w,c
  4901  001542  B4D8               	btfsc	status,2,c
  4902  001544  EFA6  F00A         	goto	u2181
  4903  001548  EFA8  F00A         	goto	u2180
  4904  00154C                     u2181:
  4905  00154C  EFC6  F00A         	goto	l3356
  4906  001550                     u2180:
  4907  001550                     l3352:
  4908  001550  C009  FFF6         	movff	strncmp@s1,tblptrl
  4909  001554  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  4910  001558  6AF8               	clrf	tblptru,c
  4911  00155A  0E07               	movlw	(high __ramtop+-1)
  4912  00155C  64F7               	cpfsgt	tblptrh,c
  4913  00155E  D003               	bra	u2197
  4914  001560  0008               	tblrd		*
  4915  001562  50F5               	movf	tablat,w,c
  4916  001564  D005               	bra	u2190
  4917  001566                     u2197:
  4918  001566  CFF6 FFE9          	movff	tblptrl,fsr0l
  4919  00156A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4920  00156E  50EF               	movf	indf0,w,c
  4921  001570                     u2190:
  4922  001570  6E0F               	movwf	??_strncmp^0,c
  4923  001572  C00B  FFF6         	movff	strncmp@s2,tblptrl
  4924  001576  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  4925  00157A                     	if	0	;tblptru may be non-zero
  4926  00157A                     	endif
  4927  00157A                     	if	0	;tblptru may be non-zero
  4928  00157A                     	endif
  4929  00157A  0008               	tblrd		*
  4930  00157C  50F5               	movf	tablat,w,c
  4931  00157E  5C0F               	subwf	??_strncmp^0,w,c
  4932  001580  6E09               	movwf	?_strncmp^0,c
  4933  001582  6A0A               	clrf	(?_strncmp+1)^0,c
  4934  001584  A0D8               	btfss	status,0,c
  4935  001586  060A               	decf	(?_strncmp+1)^0,f,c
  4936  001588  EFDB  F00A         	goto	l1417
  4937  00158C                     l3356:
  4938  00158C  4A09               	infsnz	strncmp@s1^0,f,c
  4939  00158E  2A0A               	incf	(strncmp@s1+1)^0,f,c
  4940  001590  4A0B               	infsnz	strncmp@s2^0,f,c
  4941  001592  2A0C               	incf	(strncmp@s2+1)^0,f,c
  4942  001594                     l3358:
  4943  001594  060D               	decf	strncmp@len^0,f,c
  4944  001596  A0D8               	btfss	status,0,c
  4945  001598  060E               	decf	(strncmp@len+1)^0,f,c
  4946  00159A  280D               	incf	strncmp@len^0,w,c
  4947  00159C  E106               	bnz	u2201
  4948  00159E  280E               	incf	(strncmp@len+1)^0,w,c
  4949  0015A0  A4D8               	btfss	status,2,c
  4950  0015A2  EFD5  F00A         	goto	u2201
  4951  0015A6  EFD7  F00A         	goto	u2200
  4952  0015AA                     u2201:
  4953  0015AA  EF71  F00A         	goto	l3348
  4954  0015AE                     u2200:
  4955  0015AE  0E00               	movlw	0
  4956  0015B0  6E0A               	movwf	(?_strncmp+1)^0,c
  4957  0015B2  0E00               	movlw	0
  4958  0015B4  6E09               	movwf	?_strncmp^0,c
  4959  0015B6                     l1417:
  4960  0015B6  0012               	return		;funcret
  4961  0015B8                     __end_of_strncmp:
  4962                           	opt callstack 0
  4963                           
  4964 ;; *************** function _strchr *****************
  4965 ;; Defined at:
  4966 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strchr.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  4969 ;;		 -> STR_23(2), NULL(0), A6_BaudRateGet@response(32), 
  4970 ;;  chr             2    6[COMRAM] int 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  2    4[COMRAM] PTR unsigned char 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         4       0       0       0       0       0       0       0       0
  4983 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4984 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4985 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4986 ;;Total ram usage:        6 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    2
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_strstr
  4993 ;;		_strcspn
  4994 ;;		_strspn
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text10
  4999  001CC6                     __ptext10:
  5000                           	opt callstack 0
  5001  001CC6                     _strchr:
  5002                           	opt callstack 23
  5003  001CC6                     l1396:
  5004  001CC6  C005  FFF6         	movff	strchr@ptr,tblptrl
  5005  001CCA  C006  FFF7         	movff	strchr@ptr+1,tblptrh
  5006  001CCE  6AF8               	clrf	tblptru,c
  5007  001CD0  0E07               	movlw	(high __ramtop+-1)
  5008  001CD2  64F7               	cpfsgt	tblptrh,c
  5009  001CD4  D003               	bra	u1917
  5010  001CD6  0008               	tblrd		*
  5011  001CD8  50F5               	movf	tablat,w,c
  5012  001CDA  D005               	bra	u1910
  5013  001CDC                     u1917:
  5014  001CDC  CFF6 FFE9          	movff	tblptrl,fsr0l
  5015  001CE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  5016  001CE4  50EF               	movf	indf0,w,c
  5017  001CE6                     u1910:
  5018  001CE6  1807               	xorwf	strchr@chr^0,w,c
  5019  001CE8  A4D8               	btfss	status,2,c
  5020  001CEA  EF79  F00E         	goto	u1921
  5021  001CEE  EF7B  F00E         	goto	u1920
  5022  001CF2                     u1921:
  5023  001CF2  EF81  F00E         	goto	l3226
  5024  001CF6                     u1920:
  5025  001CF6  C005  F005         	movff	strchr@ptr,?_strchr
  5026  001CFA  C006  F006         	movff	strchr@ptr+1,?_strchr+1
  5027  001CFE  EFA3  F00E         	goto	l1398
  5028  001D02                     l3226:
  5029  001D02  5005               	movf	strchr@ptr^0,w,c
  5030  001D04  6E09               	movwf	??_strchr^0,c
  5031  001D06  5006               	movf	(strchr@ptr+1)^0,w,c
  5032  001D08  6E0A               	movwf	(??_strchr+1)^0,c
  5033  001D0A  4A05               	infsnz	strchr@ptr^0,f,c
  5034  001D0C  2A06               	incf	(strchr@ptr+1)^0,f,c
  5035  001D0E  C009  FFF6         	movff	??_strchr,tblptrl
  5036  001D12  C00A  FFF7         	movff	??_strchr+1,tblptrh
  5037  001D16  6AF8               	clrf	tblptru,c
  5038  001D18  0E07               	movlw	(high __ramtop+-1)
  5039  001D1A  64F7               	cpfsgt	tblptrh,c
  5040  001D1C  D003               	bra	u1937
  5041  001D1E  0008               	tblrd		*
  5042  001D20  50F5               	movf	tablat,w,c
  5043  001D22  D005               	bra	u1930
  5044  001D24                     u1937:
  5045  001D24  CFF6 FFE9          	movff	tblptrl,fsr0l
  5046  001D28  CFF7 FFEA          	movff	tblptrh,fsr0h
  5047  001D2C  50EF               	movf	indf0,w,c
  5048  001D2E                     u1930:
  5049  001D2E  0900               	iorlw	0
  5050  001D30  A4D8               	btfss	status,2,c
  5051  001D32  EF9D  F00E         	goto	u1941
  5052  001D36  EF9F  F00E         	goto	u1940
  5053  001D3A                     u1941:
  5054  001D3A  EF63  F00E         	goto	l1396
  5055  001D3E                     u1940:
  5056  001D3E  0E00               	movlw	0
  5057  001D40  6E05               	movwf	?_strchr^0,c
  5058  001D42  0E00               	movlw	0
  5059  001D44  6E06               	movwf	(?_strchr+1)^0,c
  5060  001D46                     l1398:
  5061  001D46  0012               	return		;funcret
  5062  001D48                     __end_of_strchr:
  5063                           	opt callstack 0
  5064                           
  5065 ;; *************** function _atol *****************
  5066 ;; Defined at:
  5067 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atol.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;  s               2   16[COMRAM] PTR const unsigned char 
  5070 ;;		 -> NULL(0), A6_BaudRateGet@response(32), 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  a               4   25[COMRAM] long 
  5073 ;;  c               1   29[COMRAM] unsigned char 
  5074 ;;  sign            1   24[COMRAM] unsigned char 
  5075 ;; Return value:  Size  Location     Type
  5076 ;;                  4   16[COMRAM] long 
  5077 ;; Registers used:
  5078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5079 ;; Tracked objects:
  5080 ;;		On entry : 0/0
  5081 ;;		On exit  : 0/0
  5082 ;;		Unchanged: 0/0
  5083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5084 ;;      Params:         4       0       0       0       0       0       0       0       0
  5085 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5086 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5087 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5088 ;;Total ram usage:       14 bytes
  5089 ;; Hardware stack levels used:    1
  5090 ;; Hardware stack levels required when called:    3
  5091 ;; This function calls:
  5092 ;;		___lmul
  5093 ;;		_isdigit
  5094 ;; This function is called by:
  5095 ;;		_A6_BaudRateGet
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           	psect	text11
  5100  0010BA                     __ptext11:
  5101                           	opt callstack 0
  5102  0010BA                     _atol:
  5103                           	opt callstack 24
  5104  0010BA                     l1330:
  5105  0010BA  C011  FFD9         	movff	atol@s,fsr2l
  5106  0010BE  C012  FFDA         	movff	atol@s+1,fsr2h
  5107  0010C2  50DF               	movf	indf2,w,c
  5108  0010C4  6E1E               	movwf	atol@c^0,c
  5109  0010C6  4A11               	infsnz	atol@s^0,f,c
  5110  0010C8  2A12               	incf	(atol@s+1)^0,f,c
  5111  0010CA  0E20               	movlw	32
  5112  0010CC  181E               	xorwf	atol@c^0,w,c
  5113  0010CE  B4D8               	btfsc	status,2,c
  5114  0010D0  EF6C  F008         	goto	u2401
  5115  0010D4  EF6E  F008         	goto	u2400
  5116  0010D8                     u2401:
  5117  0010D8  EF5D  F008         	goto	l1330
  5118  0010DC                     u2400:
  5119  0010DC  0E09               	movlw	9
  5120  0010DE  181E               	xorwf	atol@c^0,w,c
  5121  0010E0  B4D8               	btfsc	status,2,c
  5122  0010E2  EF75  F008         	goto	u2411
  5123  0010E6  EF77  F008         	goto	u2410
  5124  0010EA                     u2411:
  5125  0010EA  EF5D  F008         	goto	l1330
  5126  0010EE                     u2410:
  5127  0010EE  0E00               	movlw	0
  5128  0010F0  6E1A               	movwf	atol@a^0,c
  5129  0010F2  0E00               	movlw	0
  5130  0010F4  6E1B               	movwf	(atol@a+1)^0,c
  5131  0010F6  0E00               	movlw	0
  5132  0010F8  6E1C               	movwf	(atol@a+2)^0,c
  5133  0010FA  0E00               	movlw	0
  5134  0010FC  6E1D               	movwf	(atol@a+3)^0,c
  5135  0010FE  0E00               	movlw	0
  5136  001100  6E19               	movwf	atol@sign^0,c
  5137  001102  0E2D               	movlw	45
  5138  001104  181E               	xorwf	atol@c^0,w,c
  5139  001106  A4D8               	btfss	status,2,c
  5140  001108  EF88  F008         	goto	u2421
  5141  00110C  EF8A  F008         	goto	u2420
  5142  001110                     u2421:
  5143  001110  EF95  F008         	goto	l3482
  5144  001114                     u2420:
  5145  001114  2A19               	incf	atol@sign^0,f,c
  5146  001116                     l3478:
  5147  001116  C011  FFD9         	movff	atol@s,fsr2l
  5148  00111A  C012  FFDA         	movff	atol@s+1,fsr2h
  5149  00111E  50DF               	movf	indf2,w,c
  5150  001120  6E1E               	movwf	atol@c^0,c
  5151  001122  4A11               	infsnz	atol@s^0,f,c
  5152  001124  2A12               	incf	(atol@s+1)^0,f,c
  5153  001126  EFC4  F008         	goto	l3494
  5154  00112A                     l3482:
  5155  00112A  0E2B               	movlw	43
  5156  00112C  181E               	xorwf	atol@c^0,w,c
  5157  00112E  A4D8               	btfss	status,2,c
  5158  001130  EF9C  F008         	goto	u2431
  5159  001134  EF9E  F008         	goto	u2430
  5160  001138                     u2431:
  5161  001138  EFC4  F008         	goto	l3494
  5162  00113C                     u2430:
  5163  00113C  EF8B  F008         	goto	l3478
  5164  001140                     l3488:
  5165  001140  C01A  F005         	movff	atol@a,___lmul@multiplier
  5166  001144  C01B  F006         	movff	atol@a+1,___lmul@multiplier+1
  5167  001148  C01C  F007         	movff	atol@a+2,___lmul@multiplier+2
  5168  00114C  C01D  F008         	movff	atol@a+3,___lmul@multiplier+3
  5169  001150  0E0A               	movlw	10
  5170  001152  6E09               	movwf	___lmul@multiplicand^0,c
  5171  001154  0E00               	movlw	0
  5172  001156  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  5173  001158  0E00               	movlw	0
  5174  00115A  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  5175  00115C  0E00               	movlw	0
  5176  00115E  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  5177  001160  ECFF  F00F         	call	___lmul	;wreg free
  5178  001164  C01E  F015         	movff	atol@c,??_atol
  5179  001168  0ED0               	movlw	208
  5180  00116A  2615               	addwf	??_atol^0,f,c
  5181  00116C  5015               	movf	??_atol^0,w,c
  5182  00116E  2405               	addwf	?___lmul^0,w,c
  5183  001170  6E1A               	movwf	atol@a^0,c
  5184  001172  0E00               	movlw	0
  5185  001174  2006               	addwfc	(?___lmul+1)^0,w,c
  5186  001176  6E1B               	movwf	(atol@a+1)^0,c
  5187  001178  0E00               	movlw	0
  5188  00117A  2007               	addwfc	(?___lmul+2)^0,w,c
  5189  00117C  6E1C               	movwf	(atol@a+2)^0,c
  5190  00117E  0E00               	movlw	0
  5191  001180  2008               	addwfc	(?___lmul+3)^0,w,c
  5192  001182  6E1D               	movwf	(atol@a+3)^0,c
  5193  001184  EF8B  F008         	goto	l3478
  5194  001188                     l3494:
  5195  001188  501E               	movf	atol@c^0,w,c
  5196  00118A  ECDB  F012         	call	_isdigit
  5197  00118E  B0D8               	btfsc	status,0,c
  5198  001190  EFCC  F008         	goto	u2441
  5199  001194  EFCE  F008         	goto	u2440
  5200  001198                     u2441:
  5201  001198  EFA0  F008         	goto	l3488
  5202  00119C                     u2440:
  5203  00119C  5019               	movf	atol@sign^0,w,c
  5204  00119E  B4D8               	btfsc	status,2,c
  5205  0011A0  EFD4  F008         	goto	u2451
  5206  0011A4  EFD6  F008         	goto	u2450
  5207  0011A8                     u2451:
  5208  0011A8  EFF1  F008         	goto	l1338
  5209  0011AC                     u2450:
  5210  0011AC  C01A  F015         	movff	atol@a,??_atol
  5211  0011B0  C01B  F016         	movff	atol@a+1,??_atol+1
  5212  0011B4  C01C  F017         	movff	atol@a+2,??_atol+2
  5213  0011B8  C01D  F018         	movff	atol@a+3,??_atol+3
  5214  0011BC  1E15               	comf	??_atol^0,f,c
  5215  0011BE  1E16               	comf	(??_atol+1)^0,f,c
  5216  0011C0  1E17               	comf	(??_atol+2)^0,f,c
  5217  0011C2  1E18               	comf	(??_atol+3)^0,f,c
  5218  0011C4  2A15               	incf	??_atol^0,f,c
  5219  0011C6  0E00               	movlw	0
  5220  0011C8  2216               	addwfc	(??_atol+1)^0,f,c
  5221  0011CA  2217               	addwfc	(??_atol+2)^0,f,c
  5222  0011CC  2218               	addwfc	(??_atol+3)^0,f,c
  5223  0011CE  C015  F011         	movff	??_atol,?_atol
  5224  0011D2  C016  F012         	movff	??_atol+1,?_atol+1
  5225  0011D6  C017  F013         	movff	??_atol+2,?_atol+2
  5226  0011DA  C018  F014         	movff	??_atol+3,?_atol+3
  5227  0011DE  EFF9  F008         	goto	l1339
  5228  0011E2                     l1338:
  5229  0011E2  C01A  F011         	movff	atol@a,?_atol
  5230  0011E6  C01B  F012         	movff	atol@a+1,?_atol+1
  5231  0011EA  C01C  F013         	movff	atol@a+2,?_atol+2
  5232  0011EE  C01D  F014         	movff	atol@a+3,?_atol+3
  5233  0011F2                     l1339:
  5234  0011F2  0012               	return		;funcret
  5235  0011F4                     __end_of_atol:
  5236                           	opt callstack 0
  5237                           
  5238 ;; *************** function ___lmul *****************
  5239 ;; Defined at:
  5240 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  multiplier      4    4[COMRAM] unsigned long 
  5243 ;;  multiplicand    4    8[COMRAM] unsigned long 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  product         4   12[COMRAM] unsigned long 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  4    4[COMRAM] unsigned long 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5255 ;;      Params:         8       0       0       0       0       0       0       0       0
  5256 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5258 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5259 ;;Total ram usage:       12 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    2
  5262 ;; This function calls:
  5263 ;;		Nothing
  5264 ;; This function is called by:
  5265 ;;		_atol
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text12
  5270  001FFE                     __ptext12:
  5271                           	opt callstack 0
  5272  001FFE                     ___lmul:
  5273                           	opt callstack 24
  5274  001FFE  0E00               	movlw	0
  5275  002000  6E0D               	movwf	___lmul@product^0,c
  5276  002002  0E00               	movlw	0
  5277  002004  6E0E               	movwf	(___lmul@product+1)^0,c
  5278  002006  0E00               	movlw	0
  5279  002008  6E0F               	movwf	(___lmul@product+2)^0,c
  5280  00200A  0E00               	movlw	0
  5281  00200C  6E10               	movwf	(___lmul@product+3)^0,c
  5282  00200E                     l3338:
  5283  00200E  A005               	btfss	___lmul@multiplier^0,0,c
  5284  002010  EF0C  F010         	goto	u2141
  5285  002014  EF0E  F010         	goto	u2140
  5286  002018                     u2141:
  5287  002018  EF16  F010         	goto	l3342
  5288  00201C                     u2140:
  5289  00201C  5009               	movf	___lmul@multiplicand^0,w,c
  5290  00201E  260D               	addwf	___lmul@product^0,f,c
  5291  002020  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  5292  002022  220E               	addwfc	(___lmul@product+1)^0,f,c
  5293  002024  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  5294  002026  220F               	addwfc	(___lmul@product+2)^0,f,c
  5295  002028  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  5296  00202A  2210               	addwfc	(___lmul@product+3)^0,f,c
  5297  00202C                     l3342:
  5298  00202C  90D8               	bcf	status,0,c
  5299  00202E  3609               	rlcf	___lmul@multiplicand^0,f,c
  5300  002030  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5301  002032  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5302  002034  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5303  002036  90D8               	bcf	status,0,c
  5304  002038  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  5305  00203A  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  5306  00203C  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  5307  00203E  3205               	rrcf	___lmul@multiplier^0,f,c
  5308  002040  5005               	movf	___lmul@multiplier^0,w,c
  5309  002042  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  5310  002044  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  5311  002046  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  5312  002048  A4D8               	btfss	status,2,c
  5313  00204A  EF29  F010         	goto	u2151
  5314  00204E  EF2B  F010         	goto	u2150
  5315  002052                     u2151:
  5316  002052  EF07  F010         	goto	l3338
  5317  002056                     u2150:
  5318  002056  C00D  F005         	movff	___lmul@product,?___lmul
  5319  00205A  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  5320  00205E  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  5321  002062  C010  F008         	movff	___lmul@product+3,?___lmul+3
  5322  002066  0012               	return		;funcret
  5323  002068                     __end_of___lmul:
  5324                           	opt callstack 0
  5325                           
  5326 ;; *************** function _init *****************
  5327 ;; Defined at:
  5328 ;;		line 15 in file "init.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5344 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5345 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5346 ;;Total ram usage:        2 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    2
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_main
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text13
  5357  001EB0                     __ptext13:
  5358                           	opt callstack 0
  5359  001EB0                     _init:
  5360                           	opt callstack 28
  5361  001EB0                     
  5362                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  5363  001EB0  9ED3               	bcf	211,7,c	;volatile
  5364  001EB2                     
  5365                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  5366  001EB2  0E70               	movlw	112
  5367  001EB4  12D3               	iorwf	211,f,c	;volatile
  5368                           
  5369                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  5370  001EB6  0EFC               	movlw	-4
  5371  001EB8  16D3               	andwf	211,f,c	;volatile
  5372  001EBA                     
  5373                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  5374  001EBA  8E9B               	bsf	155,7,c	;volatile
  5375                           
  5376                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  5377  001EBC  0EE0               	movlw	-32
  5378  001EBE  169B               	andwf	155,f,c	;volatile
  5379  001EC0                     
  5380                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  5381  001EC0  0E07               	movlw	7
  5382  001EC2  6E06               	movwf	(??_init+1)^0,c
  5383  001EC4  0E17               	movlw	23
  5384  001EC6  6E05               	movwf	??_init^0,c
  5385  001EC8  0E6A               	movlw	106
  5386  001ECA                     u3577:
  5387  001ECA  2EE8               	decfsz	wreg,f,c
  5388  001ECC  D7FE               	bra	u3577
  5389  001ECE  2E05               	decfsz	??_init^0,f,c
  5390  001ED0  D7FC               	bra	u3577
  5391  001ED2  2E06               	decfsz	(??_init+1)^0,f,c
  5392  001ED4  D7FA               	bra	u3577
  5393  001ED6  D000               	nop2	
  5394  001ED8                     
  5395                           ;init.c: 27: UCONbits.USBEN = 0;
  5396  001ED8  966D               	bcf	109,3,c	;volatile
  5397  001EDA                     
  5398                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  5399  001EDA  866F               	bsf	111,3,c	;volatile
  5400  001EDC                     
  5401                           ;init.c: 41: TRISA = 0b00001011;
  5402  001EDC  0E0B               	movlw	11
  5403  001EDE  6E92               	movwf	146,c	;volatile
  5404  001EE0                     
  5405                           ;init.c: 42: LATA = 0x00;
  5406  001EE0  0E00               	movlw	0
  5407  001EE2  6E89               	movwf	137,c	;volatile
  5408  001EE4                     
  5409                           ;init.c: 48: RBPU = 1;
  5410  001EE4  8EF1               	bsf	4081,7,c	;volatile
  5411  001EE6                     
  5412                           ;init.c: 49: TRISB = 0x00;
  5413  001EE6  0E00               	movlw	0
  5414  001EE8  6E93               	movwf	147,c	;volatile
  5415  001EEA                     
  5416                           ;init.c: 50: LATB = 0x00;
  5417  001EEA  0E00               	movlw	0
  5418  001EEC  6E8A               	movwf	138,c	;volatile
  5419  001EEE                     
  5420                           ;init.c: 63: TRISC = 0b11110000;
  5421  001EEE  0EF0               	movlw	240
  5422  001EF0  6E94               	movwf	148,c	;volatile
  5423  001EF2                     
  5424                           ;init.c: 64: LATC = 0x00;
  5425  001EF2  0E00               	movlw	0
  5426  001EF4  6E8B               	movwf	139,c	;volatile
  5427  001EF6                     
  5428                           ;init.c: 67: ADCON0bits.ADON = 0;
  5429  001EF6  90C2               	bcf	194,0,c	;volatile
  5430  001EF8                     
  5431                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  5432  001EF8  0ECF               	movlw	-49
  5433  001EFA  16C1               	andwf	193,f,c	;volatile
  5434  001EFC                     
  5435                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  5436  001EFC  50C1               	movf	193,w,c	;volatile
  5437  001EFE  0BF0               	andlw	-16
  5438  001F00  090E               	iorlw	14
  5439  001F02  6EC1               	movwf	193,c	;volatile
  5440  001F04                     
  5441                           ;init.c: 70: ADCON2bits.ADFM = 1;
  5442  001F04  8EC0               	bsf	192,7,c	;volatile
  5443  001F06                     
  5444                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  5445  001F06  0EC7               	movlw	-57
  5446  001F08  16C0               	andwf	192,f,c	;volatile
  5447  001F0A                     
  5448                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  5449  001F0A  50C0               	movf	192,w,c	;volatile
  5450  001F0C  0BF8               	andlw	-8
  5451  001F0E  0902               	iorlw	2
  5452  001F10  6EC0               	movwf	192,c	;volatile
  5453  001F12                     
  5454                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  5455  001F12  0ECF               	movlw	-49
  5456  001F14  16B1               	andwf	177,f,c	;volatile
  5457  001F16                     
  5458                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  5459  001F16  92B1               	bcf	177,1,c	;volatile
  5460  001F18                     
  5461                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  5462  001F18  80B1               	bsf	177,0,c	;volatile
  5463  001F1A                     
  5464                           ;init.c: 78: TMR3IE = 1;
  5465  001F1A  82A0               	bsf	4000,1,c	;volatile
  5466  001F1C                     
  5467                           ;init.c: 81: PEIE = 1;
  5468  001F1C  8CF2               	bsf	4082,6,c	;volatile
  5469  001F1E                     
  5470                           ;init.c: 82: GIE = 1;
  5471  001F1E  8EF2               	bsf	4082,7,c	;volatile
  5472  001F20  0012               	return		;funcret
  5473  001F22                     __end_of_init:
  5474                           	opt callstack 0
  5475                           
  5476 ;; *************** function _TFT_Init *****************
  5477 ;; Defined at:
  5478 ;;		line 72 in file "TFT.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  i               2   37[COMRAM] unsigned int 
  5483 ;;  cmd             2   35[COMRAM] unsigned int 
  5484 ;;  initSequence    2   33[COMRAM] unsigned int 
  5485 ;;  data            2   31[COMRAM] unsigned int 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0
  5496 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5497 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5498 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5499 ;;Total ram usage:       10 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    5
  5502 ;; This function calls:
  5503 ;;		_TFT_FillScreen
  5504 ;;		_TFT_FullScreen
  5505 ;;		_TFT_Reset
  5506 ;;		_TFT_WriteRegister
  5507 ;; This function is called by:
  5508 ;;		_main
  5509 ;; This function uses a non-reentrant model
  5510 ;;
  5511                           
  5512                           	psect	text14
  5513  001400                     __ptext14:
  5514                           	opt callstack 0
  5515  001400                     _TFT_Init:
  5516                           	opt callstack 25
  5517  001400                     
  5518                           ;TFT.c: 73: TFT_Reset();
  5519  001400  EC52  F013         	call	_TFT_Reset	;wreg free
  5520  001404                     
  5521                           ;TFT.c: 74: _delay((unsigned long)((200)*(48000000/4000.0)));
  5522  001404  0E0D               	movlw	13
  5523  001406  6E1F               	movwf	(??_TFT_Init+1)^0,c
  5524  001408  0E2D               	movlw	45
  5525  00140A  6E1E               	movwf	??_TFT_Init^0,c
  5526  00140C  0ED8               	movlw	216
  5527  00140E                     u3587:
  5528  00140E  2EE8               	decfsz	wreg,f,c
  5529  001410  D7FE               	bra	u3587
  5530  001412  2E1E               	decfsz	??_TFT_Init^0,f,c
  5531  001414  D7FC               	bra	u3587
  5532  001416  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  5533  001418  D7FA               	bra	u3587
  5534  00141A                     
  5535                           ;TFT.c: 77: uint16_t i=0, cmd, data;
  5536  00141A  0E00               	movlw	0
  5537  00141C  6E27               	movwf	(TFT_Init@i+1)^0,c
  5538  00141E  0E00               	movlw	0
  5539  001420  6E26               	movwf	TFT_Init@i^0,c
  5540  001422                     
  5541                           ;TFT.c: 78: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  5542  001422  0E00               	movlw	0
  5543  001424  6E23               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  5544  001426  0E66               	movlw	102
  5545  001428  6E22               	movwf	TFT_Init@initSequenceSize^0,c
  5546                           
  5547                           ;TFT.c: 79: while(i != initSequenceSize) {
  5548  00142A  EF5A  F00A         	goto	l3924
  5549  00142E                     l3912:
  5550                           
  5551                           ;TFT.c: 80: cmd = TFT_Init_Sequence[i++];
  5552  00142E  90D8               	bcf	status,0,c
  5553  001430  3426               	rlcf	TFT_Init@i^0,w,c
  5554  001432  6EF6               	movwf	tblptrl,c
  5555  001434  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  5556  001436  6EF7               	movwf	tblptrh,c
  5557  001438  0E5B               	movlw	low _TFT_Init_Sequence
  5558  00143A  26F6               	addwf	tblptrl,f,c
  5559  00143C  0E5D               	movlw	high _TFT_Init_Sequence
  5560  00143E  22F7               	addwfc	tblptrh,f,c
  5561  001440                     	if	0	;There are less than 3 active tblptr bytes
  5562  001440                     	endif
  5563  001440  0009               	tblrd		*+
  5564  001442  CFF5 F024          	movff	tablat,TFT_Init@cmd
  5565  001446  000A               	tblrd		*-
  5566  001448  CFF5 F025          	movff	tablat,TFT_Init@cmd+1
  5567  00144C  4A26               	infsnz	TFT_Init@i^0,f,c
  5568  00144E  2A27               	incf	(TFT_Init@i+1)^0,f,c
  5569  001450                     
  5570                           ;TFT.c: 81: data = TFT_Init_Sequence[i++];
  5571  001450  90D8               	bcf	status,0,c
  5572  001452  3426               	rlcf	TFT_Init@i^0,w,c
  5573  001454  6EF6               	movwf	tblptrl,c
  5574  001456  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  5575  001458  6EF7               	movwf	tblptrh,c
  5576  00145A  0E5B               	movlw	low _TFT_Init_Sequence
  5577  00145C  26F6               	addwf	tblptrl,f,c
  5578  00145E  0E5D               	movlw	high _TFT_Init_Sequence
  5579  001460  22F7               	addwfc	tblptrh,f,c
  5580  001462                     	if	0	;There are less than 3 active tblptr bytes
  5581  001462                     	endif
  5582  001462  0009               	tblrd		*+
  5583  001464  CFF5 F020          	movff	tablat,TFT_Init@data
  5584  001468  000A               	tblrd		*-
  5585  00146A  CFF5 F021          	movff	tablat,TFT_Init@data+1
  5586  00146E  4A26               	infsnz	TFT_Init@i^0,f,c
  5587  001470  2A27               	incf	(TFT_Init@i+1)^0,f,c
  5588  001472                     
  5589                           ;TFT.c: 82: if(cmd == 0xFFFF) {
  5590  001472  2824               	incf	TFT_Init@cmd^0,w,c
  5591  001474  E106               	bnz	u3041
  5592  001476  2825               	incf	(TFT_Init@cmd+1)^0,w,c
  5593  001478  A4D8               	btfss	status,2,c
  5594  00147A  EF41  F00A         	goto	u3041
  5595  00147E  EF43  F00A         	goto	u3040
  5596  001482                     u3041:
  5597  001482  EF50  F00A         	goto	l3922
  5598  001486                     u3040:
  5599  001486                     
  5600                           ;TFT.c: 83: _delay((unsigned long)((200)*(48000000/4000.0)));
  5601  001486  0E0D               	movlw	13
  5602  001488  6E1F               	movwf	(??_TFT_Init+1)^0,c
  5603  00148A  0E2D               	movlw	45
  5604  00148C  6E1E               	movwf	??_TFT_Init^0,c
  5605  00148E  0ED8               	movlw	216
  5606  001490                     u3597:
  5607  001490  2EE8               	decfsz	wreg,f,c
  5608  001492  D7FE               	bra	u3597
  5609  001494  2E1E               	decfsz	??_TFT_Init^0,f,c
  5610  001496  D7FC               	bra	u3597
  5611  001498  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  5612  00149A  D7FA               	bra	u3597
  5613                           
  5614                           ;TFT.c: 84: } else {
  5615  00149C  EF5A  F00A         	goto	l3924
  5616  0014A0                     l3922:
  5617                           
  5618                           ;TFT.c: 85: TFT_WriteRegister(cmd, data);
  5619  0014A0  C024  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  5620  0014A4  C025  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  5621  0014A8  C020  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  5622  0014AC  C021  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  5623  0014B0  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  5624  0014B4                     l3924:
  5625  0014B4  5022               	movf	TFT_Init@initSequenceSize^0,w,c
  5626  0014B6  1826               	xorwf	TFT_Init@i^0,w,c
  5627  0014B8  E107               	bnz	u3051
  5628  0014BA  5023               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  5629  0014BC  1827               	xorwf	(TFT_Init@i+1)^0,w,c
  5630  0014BE  A4D8               	btfss	status,2,c
  5631  0014C0  EF64  F00A         	goto	u3051
  5632  0014C4  EF66  F00A         	goto	u3050
  5633  0014C8                     u3051:
  5634  0014C8  EF17  F00A         	goto	l3912
  5635  0014CC                     u3050:
  5636  0014CC                     
  5637                           ;TFT.c: 86: };TFT.c: 87: };TFT.c: 90: TFT_FullScreen();
  5638  0014CC  EC1F  F013         	call	_TFT_FullScreen	;wreg free
  5639  0014D0                     
  5640                           ;TFT.c: 91: TFT_FillScreen(0x0000);
  5641  0014D0  0E00               	movlw	0
  5642  0014D2  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  5643  0014D4  0E00               	movlw	0
  5644  0014D6  6E1C               	movwf	TFT_FillScreen@color^0,c
  5645  0014D8  ECC9  F011         	call	_TFT_FillScreen	;wreg free
  5646  0014DC  0012               	return		;funcret
  5647  0014DE                     __end_of_TFT_Init:
  5648                           	opt callstack 0
  5649                           
  5650 ;; *************** function _TFT_Reset *****************
  5651 ;; Defined at:
  5652 ;;		line 46 in file "TFT.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5666 ;;      Params:         0       0       0       0       0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5668 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5669 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5670 ;;Total ram usage:        1 bytes
  5671 ;; Hardware stack levels used:    1
  5672 ;; Hardware stack levels required when called:    2
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_TFT_Init
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text15
  5681  0026A4                     __ptext15:
  5682                           	opt callstack 0
  5683  0026A4                     _TFT_Reset:
  5684                           	opt callstack 27
  5685  0026A4                     
  5686                           ;TFT.c: 47: TRISB = 0x00;;
  5687  0026A4  0E00               	movlw	0
  5688  0026A6  6E93               	movwf	147,c	;volatile
  5689  0026A8                     
  5690                           ;TFT.c: 48: PORTCbits.RC0 = 1;;
  5691  0026A8  8082               	bsf	130,0,c	;volatile
  5692  0026AA                     
  5693                           ;TFT.c: 49: PORTAbits.RA5 = 1;;
  5694  0026AA  8A80               	bsf	128,5,c	;volatile
  5695  0026AC                     
  5696                           ;TFT.c: 50: PORTAbits.RA4 = 1;;
  5697  0026AC  8880               	bsf	128,4,c	;volatile
  5698  0026AE                     
  5699                           ;TFT.c: 51: PORTCbits.RC2 = 0;;
  5700  0026AE  9482               	bcf	130,2,c	;volatile
  5701  0026B0                     
  5702                           ;TFT.c: 52: _delay((unsigned long)((2)*(48000000/4000.0)));
  5703  0026B0  0E20               	movlw	32
  5704  0026B2  6E05               	movwf	??_TFT_Reset^0,c
  5705  0026B4  0E2A               	movlw	42
  5706  0026B6                     u3607:
  5707  0026B6  2EE8               	decfsz	wreg,f,c
  5708  0026B8  D7FE               	bra	u3607
  5709  0026BA  2E05               	decfsz	??_TFT_Reset^0,f,c
  5710  0026BC  D7FC               	bra	u3607
  5711  0026BE                     
  5712                           ;TFT.c: 53: PORTCbits.RC2 = 1;;
  5713  0026BE  8482               	bsf	130,2,c	;volatile
  5714  0026C0  0012               	return		;funcret
  5715  0026C2                     __end_of_TFT_Reset:
  5716                           	opt callstack 0
  5717                           
  5718 ;; *************** function _Ecg_Init *****************
  5719 ;; Defined at:
  5720 ;;		line 12 in file "ecg.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5737 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    9
  5741 ;; This function calls:
  5742 ;;		_Ecg_Background_Leads_Failure
  5743 ;;		_Ecg_Background_Leads_Ok
  5744 ;;		_Ecg_CheckLeads
  5745 ;; This function is called by:
  5746 ;;		_main
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text16
  5751  0025E8                     __ptext16:
  5752                           	opt callstack 0
  5753  0025E8                     _Ecg_Init:
  5754                           	opt callstack 21
  5755  0025E8                     
  5756                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  5757  0025E8  EC31  F011         	call	_Ecg_CheckLeads	;wreg free
  5758  0025EC  5005               	movf	?_Ecg_CheckLeads^0,w,c
  5759  0025EE  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  5760  0025F0  A4D8               	btfss	status,2,c
  5761  0025F2  EFFD  F012         	goto	u3061
  5762  0025F6  EFFF  F012         	goto	u3060
  5763  0025FA                     u3061:
  5764  0025FA  EF03  F013         	goto	l3942
  5765  0025FE                     u3060:
  5766  0025FE                     
  5767                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  5768  0025FE  ECE1  F00E         	call	_Ecg_Background_Leads_Ok	;wreg free
  5769                           
  5770                           ;ecg.c: 15: } else {
  5771  002602  EF05  F013         	goto	l3944
  5772  002606                     l3942:
  5773                           
  5774                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  5775  002606  EC4D  F012         	call	_Ecg_Background_Leads_Failure	;wreg free
  5776  00260A                     l3944:
  5777                           
  5778                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  5779  00260A  0E00               	movlw	0
  5780  00260C  0100               	movlb	0	; () banked
  5781  00260E  6FB8               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  5782  002610                     
  5783                           ; BSR set to: 0
  5784                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  5785  002610  0E00               	movlw	0
  5786  002612  6FBD               	movwf	(_ECG_BUFFER+4)& (0+255),b
  5787  002614                     
  5788                           ; BSR set to: 0
  5789                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  5790  002614  8DBE               	bsf	_ECG_HEARTRATE& (0+255),6,b
  5791  002616                     
  5792                           ; BSR set to: 0
  5793  002616  0012               	return		;funcret
  5794  002618                     __end_of_Ecg_Init:
  5795                           	opt callstack 0
  5796                           
  5797 ;; *************** function _Ecg_CheckLeads *****************
  5798 ;; Defined at:
  5799 ;;		line 141 in file "ecg.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;		None
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  2    4[COMRAM] unsigned int 
  5806 ;; Registers used:
  5807 ;;		wreg, status,2, status,0
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5813 ;;      Params:         2       0       0       0       0       0       0       0       0
  5814 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5815 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5816 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5817 ;;Total ram usage:        4 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    2
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_Ecg_Init
  5824 ;;		_Ecg_ProcessEcg
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text17
  5829  002262                     __ptext17:
  5830                           	opt callstack 0
  5831  002262                     _Ecg_CheckLeads:
  5832                           	opt callstack 27
  5833  002262                     
  5834                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  5835  002262  0E00               	movlw	0
  5836  002264  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  5837  002266                     
  5838                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  5839  002266  AA82               	btfss	130,5,c	;volatile
  5840  002268  EF38  F011         	goto	u3001
  5841  00226C  EF3A  F011         	goto	u3000
  5842  002270                     u3001:
  5843  002270  EF3B  F011         	goto	l3880
  5844  002274                     u3000:
  5845  002274  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  5846  002276                     l3880:
  5847                           
  5848                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  5849  002276  A882               	btfss	130,4,c	;volatile
  5850  002278  EF40  F011         	goto	u3011
  5851  00227C  EF42  F011         	goto	u3010
  5852  002280                     u3011:
  5853  002280  EF43  F011         	goto	l3884
  5854  002284                     u3010:
  5855  002284  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  5856  002286                     l3884:
  5857                           
  5858                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  5859  002286  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  5860  002288  B4D8               	btfsc	status,2,c
  5861  00228A  EF49  F011         	goto	u3021
  5862  00228E  EF4D  F011         	goto	u3020
  5863  002292                     u3021:
  5864  002292  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5865  002294  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  5866  002296  EF4E  F011         	goto	u3038
  5867  00229A                     u3020:
  5868  00229A  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5869  00229C                     u3038:
  5870  00229C  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  5871  00229E  5057               	movf	_ECG_FLAGS^0,w,c
  5872  0022A0  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5873  0022A2  0BFD               	andlw	-3
  5874  0022A4  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5875  0022A6  6E57               	movwf	_ECG_FLAGS^0,c
  5876  0022A8                     
  5877                           ;ecg.c: 146: return leadsStatus;
  5878  0022A8  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  5879  0022AC  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  5880  0022AE  0012               	return		;funcret
  5881  0022B0                     __end_of_Ecg_CheckLeads:
  5882                           	opt callstack 0
  5883                           
  5884 ;; *************** function _Ecg_Background_Leads_Ok *****************
  5885 ;; Defined at:
  5886 ;;		line 180 in file "ecg.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5900 ;;      Params:         0       0       0       0       0       0       0       0       0
  5901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5903 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used:    1
  5906 ;; Hardware stack levels required when called:    8
  5907 ;; This function calls:
  5908 ;;		_TFT_DrawLine
  5909 ;;		_TFT_DrawString
  5910 ;;		_TFT_FillScreen
  5911 ;; This function is called by:
  5912 ;;		_Ecg_Init
  5913 ;;		_Ecg_ProcessEcg
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text18
  5918  001DC2                     __ptext18:
  5919                           	opt callstack 0
  5920  001DC2                     _Ecg_Background_Leads_Ok:
  5921                           	opt callstack 21
  5922  001DC2                     
  5923                           ;ecg.c: 181: TFT_FillScreen(0x0000);
  5924  001DC2  0E00               	movlw	0
  5925  001DC4  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  5926  001DC6  0E00               	movlw	0
  5927  001DC8  6E1C               	movwf	TFT_FillScreen@color^0,c
  5928  001DCA  ECC9  F011         	call	_TFT_FillScreen	;wreg free
  5929  001DCE                     
  5930                           ;ecg.c: 182: TFT_DrawString(8, (400 - 10), "Frequenza:", 0xFFFF, 0x0000, 2);
  5931  001DCE  0E00               	movlw	0
  5932  001DD0  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  5933  001DD2  0E08               	movlw	8
  5934  001DD4  6E3F               	movwf	TFT_DrawString@x^0,c
  5935  001DD6  0E01               	movlw	1
  5936  001DD8  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  5937  001DDA  0E86               	movlw	134
  5938  001DDC  6E41               	movwf	TFT_DrawString@y^0,c
  5939  001DDE  0EA2               	movlw	low STR_17
  5940  001DE0  6E43               	movwf	TFT_DrawString@str^0,c
  5941  001DE2  0E5F               	movlw	high STR_17
  5942  001DE4  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  5943  001DE6  0EFF               	movlw	255
  5944  001DE8  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  5945  001DEA  6845               	setf	TFT_DrawString@color^0,c
  5946  001DEC  0E00               	movlw	0
  5947  001DEE  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  5948  001DF0  0E00               	movlw	0
  5949  001DF2  6E47               	movwf	TFT_DrawString@bg^0,c
  5950  001DF4  0E02               	movlw	2
  5951  001DF6  6E49               	movwf	TFT_DrawString@size^0,c
  5952  001DF8  ECC7  F00C         	call	_TFT_DrawString	;wreg free
  5953  001DFC                     
  5954                           ;ecg.c: 183: TFT_DrawLine((33 - 1), 0, (33 - 1), 400, 0xFFFF);
  5955  001DFC  0E00               	movlw	0
  5956  001DFE  6E14               	movwf	(TFT_DrawLine@x0+1)^0,c
  5957  001E00  0E20               	movlw	32
  5958  001E02  6E13               	movwf	TFT_DrawLine@x0^0,c
  5959  001E04  0E00               	movlw	0
  5960  001E06  6E16               	movwf	(TFT_DrawLine@y0+1)^0,c
  5961  001E08  0E00               	movlw	0
  5962  001E0A  6E15               	movwf	TFT_DrawLine@y0^0,c
  5963  001E0C  0E00               	movlw	0
  5964  001E0E  6E18               	movwf	(TFT_DrawLine@x1+1)^0,c
  5965  001E10  0E20               	movlw	32
  5966  001E12  6E17               	movwf	TFT_DrawLine@x1^0,c
  5967  001E14  0E01               	movlw	1
  5968  001E16  6E1A               	movwf	(TFT_DrawLine@y1+1)^0,c
  5969  001E18  0E90               	movlw	144
  5970  001E1A  6E19               	movwf	TFT_DrawLine@y1^0,c
  5971  001E1C  0EFF               	movlw	255
  5972  001E1E  6E1C               	movwf	(TFT_DrawLine@color+1)^0,c
  5973  001E20  681B               	setf	TFT_DrawLine@color^0,c
  5974  001E22  ECFF  F005         	call	_TFT_DrawLine	;wreg free
  5975  001E26                     
  5976                           ;ecg.c: 184: Ecg_Y = 400 - 1;
  5977  001E26  0E01               	movlw	1
  5978  001E28  6E5A               	movwf	(_Ecg_Y+1)^0,c
  5979  001E2A  0E8F               	movlw	143
  5980  001E2C  6E59               	movwf	_Ecg_Y^0,c
  5981  001E2E                     
  5982                           ;ecg.c: 185: Ecg_Yold = 400 - 1;
  5983  001E2E  0E01               	movlw	1
  5984  001E30  0100               	movlb	0	; () banked
  5985  001E32  6FC7               	movwf	(_Ecg_Yold+1)& (0+255),b
  5986  001E34  0E8F               	movlw	143
  5987  001E36  6FC6               	movwf	_Ecg_Yold& (0+255),b
  5988  001E38                     
  5989                           ; BSR set to: 0
  5990  001E38  0012               	return		;funcret
  5991  001E3A                     __end_of_Ecg_Background_Leads_Ok:
  5992                           	opt callstack 0
  5993                           
  5994 ;; *************** function _TFT_DrawLine *****************
  5995 ;; Defined at:
  5996 ;;		line 100 in file "TFT.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  x0              2   18[COMRAM] int 
  5999 ;;  y0              2   20[COMRAM] int 
  6000 ;;  x1              2   22[COMRAM] int 
  6001 ;;  y1              2   24[COMRAM] int 
  6002 ;;  color           2   26[COMRAM] unsigned int 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  t               2   37[COMRAM] int 
  6005 ;;  t               2   35[COMRAM] int 
  6006 ;;  t               2   33[COMRAM] int 
  6007 ;;  t               2   31[COMRAM] int 
  6008 ;;  dx              2   47[COMRAM] int 
  6009 ;;  steep           2   45[COMRAM] int 
  6010 ;;  err             2   43[COMRAM] int 
  6011 ;;  ystep           2   41[COMRAM] int 
  6012 ;;  dy              2   39[COMRAM] int 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      void 
  6015 ;; Registers used:
  6016 ;;		wreg, status,2, status,0, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6022 ;;      Params:        10       0       0       0       0       0       0       0       0
  6023 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6024 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6025 ;;      Totals:        31       0       0       0       0       0       0       0       0
  6026 ;;Total ram usage:       31 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:    4
  6029 ;; This function calls:
  6030 ;;		_TFT_DrawPixel
  6031 ;;		___awdiv
  6032 ;;		_abs
  6033 ;; This function is called by:
  6034 ;;		_Ecg_Background_Leads_Ok
  6035 ;;		_Ecg_Draw
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text19
  6040  000BFE                     __ptext19:
  6041                           	opt callstack 0
  6042  000BFE                     _TFT_DrawLine:
  6043                           	opt callstack 24
  6044  000BFE                     
  6045                           ;TFT.c: 101: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  6046  000BFE  5013               	movf	TFT_DrawLine@x0^0,w,c
  6047  000C00  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6048  000C02  6E05               	movwf	abs@a^0,c
  6049  000C04  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6050  000C06  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6051  000C08  6E06               	movwf	(abs@a+1)^0,c
  6052  000C0A  ECC1  F012         	call	_abs	;wreg free
  6053  000C0E  C005  F01D         	movff	?_abs,??_TFT_DrawLine
  6054  000C12  C006  F01E         	movff	?_abs+1,??_TFT_DrawLine+1
  6055  000C16  5015               	movf	TFT_DrawLine@y0^0,w,c
  6056  000C18  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  6057  000C1A  6E05               	movwf	abs@a^0,c
  6058  000C1C  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6059  000C1E  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6060  000C20  6E06               	movwf	(abs@a+1)^0,c
  6061  000C22  ECC1  F012         	call	_abs	;wreg free
  6062  000C26  5005               	movf	?_abs^0,w,c
  6063  000C28  5C1D               	subwf	??_TFT_DrawLine^0,w,c
  6064  000C2A  501E               	movf	(??_TFT_DrawLine+1)^0,w,c
  6065  000C2C  0A80               	xorlw	128
  6066  000C2E  6E1F               	movwf	(??_TFT_DrawLine+2)^0,c
  6067  000C30  5006               	movf	(?_abs+1)^0,w,c
  6068  000C32  0A80               	xorlw	128
  6069  000C34  581F               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  6070  000C36  A0D8               	btfss	status,0,c
  6071  000C38  EF20  F006         	goto	u2831
  6072  000C3C  EF23  F006         	goto	u2830
  6073  000C40                     u2831:
  6074  000C40  0E01               	movlw	1
  6075  000C42  EF24  F006         	goto	u2840
  6076  000C46                     u2830:
  6077  000C46  0E00               	movlw	0
  6078  000C48                     u2840:
  6079  000C48  6E2E               	movwf	TFT_DrawLine@steep^0,c
  6080  000C4A  6A2F               	clrf	(TFT_DrawLine@steep+1)^0,c
  6081  000C4C                     
  6082                           ;TFT.c: 102: if(steep) {
  6083  000C4C  502E               	movf	TFT_DrawLine@steep^0,w,c
  6084  000C4E  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6085  000C50  B4D8               	btfsc	status,2,c
  6086  000C52  EF2D  F006         	goto	u2851
  6087  000C56  EF2F  F006         	goto	u2850
  6088  000C5A                     u2851:
  6089  000C5A  EF47  F006         	goto	l3764
  6090  000C5E                     u2850:
  6091  000C5E                     
  6092                           ;TFT.c: 103: { int16_t t = x0; x0 = y0; y0 = t; };
  6093  000C5E  C013  F020         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  6094  000C62  C014  F021         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  6095  000C66  C015  F013         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  6096  000C6A  C016  F014         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  6097  000C6E  C020  F015         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  6098  000C72  C021  F016         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  6099                           
  6100                           ;TFT.c: 104: { int16_t t = x1; x1 = y1; y1 = t; };
  6101  000C76  C017  F022         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_769
  6102  000C7A  C018  F023         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_769+1
  6103  000C7E  C019  F017         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  6104  000C82  C01A  F018         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  6105  000C86  C022  F019         	movff	TFT_DrawLine@t_769,TFT_DrawLine@y1
  6106  000C8A  C023  F01A         	movff	TFT_DrawLine@t_769+1,TFT_DrawLine@y1+1
  6107  000C8E                     l3764:
  6108                           
  6109                           ;TFT.c: 105: };TFT.c: 106: if(x0 > x1) {
  6110  000C8E  5013               	movf	TFT_DrawLine@x0^0,w,c
  6111  000C90  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6112  000C92  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6113  000C94  0A80               	xorlw	128
  6114  000C96  6E1D               	movwf	??_TFT_DrawLine^0,c
  6115  000C98  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6116  000C9A  0A80               	xorlw	128
  6117  000C9C  581D               	subwfb	??_TFT_DrawLine^0,w,c
  6118  000C9E  B0D8               	btfsc	status,0,c
  6119  000CA0  EF54  F006         	goto	u2861
  6120  000CA4  EF56  F006         	goto	u2860
  6121  000CA8                     u2861:
  6122  000CA8  EF6E  F006         	goto	l3768
  6123  000CAC                     u2860:
  6124  000CAC                     
  6125                           ;TFT.c: 107: { int16_t t = x0; x0 = x1; x1 = t; };
  6126  000CAC  C013  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_770
  6127  000CB0  C014  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_770+1
  6128  000CB4  C017  F013         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  6129  000CB8  C018  F014         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  6130  000CBC  C024  F017         	movff	TFT_DrawLine@t_770,TFT_DrawLine@x1
  6131  000CC0  C025  F018         	movff	TFT_DrawLine@t_770+1,TFT_DrawLine@x1+1
  6132                           
  6133                           ;TFT.c: 108: { int16_t t = y0; y0 = y1; y1 = t; };
  6134  000CC4  C015  F026         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_771
  6135  000CC8  C016  F027         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_771+1
  6136  000CCC  C019  F015         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  6137  000CD0  C01A  F016         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  6138  000CD4  C026  F019         	movff	TFT_DrawLine@t_771,TFT_DrawLine@y1
  6139  000CD8  C027  F01A         	movff	TFT_DrawLine@t_771+1,TFT_DrawLine@y1+1
  6140  000CDC                     l3768:
  6141                           
  6142                           ;TFT.c: 109: };TFT.c: 111: int16_t dx, dy;;TFT.c: 112: dx = x1 - x0;
  6143  000CDC  5013               	movf	TFT_DrawLine@x0^0,w,c
  6144  000CDE  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6145  000CE0  6E30               	movwf	TFT_DrawLine@dx^0,c
  6146  000CE2  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6147  000CE4  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6148  000CE6  6E31               	movwf	(TFT_DrawLine@dx+1)^0,c
  6149  000CE8                     
  6150                           ;TFT.c: 113: dy = abs(y1 - y0);
  6151  000CE8  5015               	movf	TFT_DrawLine@y0^0,w,c
  6152  000CEA  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  6153  000CEC  6E05               	movwf	abs@a^0,c
  6154  000CEE  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6155  000CF0  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6156  000CF2  6E06               	movwf	(abs@a+1)^0,c
  6157  000CF4  ECC1  F012         	call	_abs	;wreg free
  6158  000CF8  C005  F028         	movff	?_abs,TFT_DrawLine@dy
  6159  000CFC  C006  F029         	movff	?_abs+1,TFT_DrawLine@dy+1
  6160  000D00                     
  6161                           ;TFT.c: 115: int16_t err = dx / 2;
  6162  000D00  C030  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  6163  000D04  C031  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  6164  000D08  0E00               	movlw	0
  6165  000D0A  6E08               	movwf	(___awdiv@divisor+1)^0,c
  6166  000D0C  0E02               	movlw	2
  6167  000D0E  6E07               	movwf	___awdiv@divisor^0,c
  6168  000D10  ECB4  F00B         	call	___awdiv	;wreg free
  6169  000D14  C005  F02C         	movff	?___awdiv,TFT_DrawLine@err
  6170  000D18  C006  F02D         	movff	?___awdiv+1,TFT_DrawLine@err+1
  6171                           
  6172                           ;TFT.c: 116: int16_t ystep;;TFT.c: 118: if(y0 < y1) {
  6173  000D1C  5019               	movf	TFT_DrawLine@y1^0,w,c
  6174  000D1E  5C15               	subwf	TFT_DrawLine@y0^0,w,c
  6175  000D20  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6176  000D22  0A80               	xorlw	128
  6177  000D24  6E1D               	movwf	??_TFT_DrawLine^0,c
  6178  000D26  501A               	movf	(TFT_DrawLine@y1+1)^0,w,c
  6179  000D28  0A80               	xorlw	128
  6180  000D2A  581D               	subwfb	??_TFT_DrawLine^0,w,c
  6181  000D2C  B0D8               	btfsc	status,0,c
  6182  000D2E  EF9B  F006         	goto	u2871
  6183  000D32  EF9D  F006         	goto	u2870
  6184  000D36                     u2871:
  6185  000D36  EFA3  F006         	goto	l231
  6186  000D3A                     u2870:
  6187  000D3A                     
  6188                           ;TFT.c: 119: ystep = 1;
  6189  000D3A  0E00               	movlw	0
  6190  000D3C  6E2B               	movwf	(TFT_DrawLine@ystep+1)^0,c
  6191  000D3E  0E01               	movlw	1
  6192  000D40  6E2A               	movwf	TFT_DrawLine@ystep^0,c
  6193                           
  6194                           ;TFT.c: 120: } else {
  6195  000D42  EFE3  F006         	goto	l3790
  6196  000D46                     l231:
  6197                           
  6198                           ;TFT.c: 121: ystep = -1;
  6199  000D46  682A               	setf	TFT_DrawLine@ystep^0,c
  6200  000D48  682B               	setf	(TFT_DrawLine@ystep+1)^0,c
  6201  000D4A  EFE3  F006         	goto	l3790
  6202  000D4E                     l3776:
  6203                           
  6204                           ;TFT.c: 125: if(steep) {
  6205  000D4E  502E               	movf	TFT_DrawLine@steep^0,w,c
  6206  000D50  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6207  000D52  B4D8               	btfsc	status,2,c
  6208  000D54  EFAE  F006         	goto	u2881
  6209  000D58  EFB0  F006         	goto	u2880
  6210  000D5C                     u2881:
  6211  000D5C  EFC0  F006         	goto	l3780
  6212  000D60                     u2880:
  6213  000D60                     
  6214                           ;TFT.c: 126: TFT_DrawPixel(y0, x0, color);
  6215  000D60  C015  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  6216  000D64  C016  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  6217  000D68  C013  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  6218  000D6C  C014  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  6219  000D70  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6220  000D74  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6221  000D78  EC2E  F012         	call	_TFT_DrawPixel	;wreg free
  6222                           
  6223                           ;TFT.c: 127: } else {
  6224  000D7C  EFCE  F006         	goto	l3782
  6225  000D80                     l3780:
  6226                           
  6227                           ;TFT.c: 128: TFT_DrawPixel(x0, y0, color);
  6228  000D80  C013  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  6229  000D84  C014  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  6230  000D88  C015  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  6231  000D8C  C016  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  6232  000D90  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6233  000D94  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6234  000D98  EC2E  F012         	call	_TFT_DrawPixel	;wreg free
  6235  000D9C                     l3782:
  6236                           
  6237                           ;TFT.c: 129: };TFT.c: 130: err -= dy;
  6238  000D9C  5028               	movf	TFT_DrawLine@dy^0,w,c
  6239  000D9E  5E2C               	subwf	TFT_DrawLine@err^0,f,c
  6240  000DA0  5029               	movf	(TFT_DrawLine@dy+1)^0,w,c
  6241  000DA2  5A2D               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  6242  000DA4                     
  6243                           ;TFT.c: 131: if(err < 0) {
  6244  000DA4  BE2D               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  6245  000DA6  EFD9  F006         	goto	u2890
  6246  000DAA  EFD7  F006         	goto	u2891
  6247  000DAE                     u2891:
  6248  000DAE  EFE1  F006         	goto	l3788
  6249  000DB2                     u2890:
  6250  000DB2                     
  6251                           ;TFT.c: 132: y0 += ystep;
  6252  000DB2  502A               	movf	TFT_DrawLine@ystep^0,w,c
  6253  000DB4  2615               	addwf	TFT_DrawLine@y0^0,f,c
  6254  000DB6  502B               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  6255  000DB8  2216               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  6256                           
  6257                           ;TFT.c: 133: err += dx;
  6258  000DBA  5030               	movf	TFT_DrawLine@dx^0,w,c
  6259  000DBC  262C               	addwf	TFT_DrawLine@err^0,f,c
  6260  000DBE  5031               	movf	(TFT_DrawLine@dx+1)^0,w,c
  6261  000DC0  222D               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  6262  000DC2                     l3788:
  6263  000DC2  4A13               	infsnz	TFT_DrawLine@x0^0,f,c
  6264  000DC4  2A14               	incf	(TFT_DrawLine@x0+1)^0,f,c
  6265  000DC6                     l3790:
  6266  000DC6  5013               	movf	TFT_DrawLine@x0^0,w,c
  6267  000DC8  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6268  000DCA  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6269  000DCC  0A80               	xorlw	128
  6270  000DCE  6E1D               	movwf	??_TFT_DrawLine^0,c
  6271  000DD0  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6272  000DD2  0A80               	xorlw	128
  6273  000DD4  581D               	subwfb	??_TFT_DrawLine^0,w,c
  6274  000DD6  B0D8               	btfsc	status,0,c
  6275  000DD8  EFF0  F006         	goto	u2901
  6276  000DDC  EFF2  F006         	goto	u2900
  6277  000DE0                     u2901:
  6278  000DE0  EFA7  F006         	goto	l3776
  6279  000DE4                     u2900:
  6280  000DE4  0012               	return		;funcret
  6281  000DE6                     __end_of_TFT_DrawLine:
  6282                           	opt callstack 0
  6283                           
  6284 ;; *************** function _abs *****************
  6285 ;; Defined at:
  6286 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  a               2    4[COMRAM] int 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;		None
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  2    4[COMRAM] int 
  6293 ;; Registers used:
  6294 ;;		wreg, status,2, status,0
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6300 ;;      Params:         2       0       0       0       0       0       0       0       0
  6301 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6302 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6303 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6304 ;;Total ram usage:        4 bytes
  6305 ;; Hardware stack levels used:    1
  6306 ;; Hardware stack levels required when called:    2
  6307 ;; This function calls:
  6308 ;;		Nothing
  6309 ;; This function is called by:
  6310 ;;		_TFT_DrawLine
  6311 ;;		_Ecg_ProcessHeartbeat
  6312 ;; This function uses a non-reentrant model
  6313 ;;
  6314                           
  6315                           	psect	text20
  6316  002582                     __ptext20:
  6317                           	opt callstack 0
  6318  002582                     _abs:
  6319                           	opt callstack 25
  6320  002582  BE06               	btfsc	(abs@a+1)^0,7,c
  6321  002584  EFC8  F012         	goto	u2290
  6322  002588  EFC6  F012         	goto	u2291
  6323  00258C                     u2291:
  6324  00258C  EFD6  F012         	goto	l1324
  6325  002590                     u2290:
  6326  002590  C005  F007         	movff	abs@a,??_abs
  6327  002594  C006  F008         	movff	abs@a+1,??_abs+1
  6328  002598  1E07               	comf	??_abs^0,f,c
  6329  00259A  1E08               	comf	(??_abs+1)^0,f,c
  6330  00259C  4A07               	infsnz	??_abs^0,f,c
  6331  00259E  2A08               	incf	(??_abs+1)^0,f,c
  6332  0025A0  C007  F005         	movff	??_abs,?_abs
  6333  0025A4  C008  F006         	movff	??_abs+1,?_abs+1
  6334  0025A8  EFDA  F012         	goto	l1325
  6335  0025AC                     l1324:
  6336  0025AC  C005  F005         	movff	abs@a,?_abs
  6337  0025B0  C006  F006         	movff	abs@a+1,?_abs+1
  6338  0025B4                     l1325:
  6339  0025B4  0012               	return		;funcret
  6340  0025B6                     __end_of_abs:
  6341                           	opt callstack 0
  6342                           
  6343 ;; *************** function ___awdiv *****************
  6344 ;; Defined at:
  6345 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  dividend        2    4[COMRAM] int 
  6348 ;;  divisor         2    6[COMRAM] int 
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;  quotient        2   10[COMRAM] int 
  6351 ;;  sign            1    9[COMRAM] unsigned char 
  6352 ;;  counter         1    8[COMRAM] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  2    4[COMRAM] int 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6362 ;;      Params:         4       0       0       0       0       0       0       0       0
  6363 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6365 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6366 ;;Total ram usage:        8 bytes
  6367 ;; Hardware stack levels used:    1
  6368 ;; Hardware stack levels required when called:    2
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_TFT_DrawLine
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text21
  6377  001768                     __ptext21:
  6378                           	opt callstack 0
  6379  001768                     ___awdiv:
  6380                           	opt callstack 25
  6381  001768  0E00               	movlw	0
  6382  00176A  6E0A               	movwf	___awdiv@sign^0,c
  6383  00176C  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6384  00176E  EFBD  F00B         	goto	u2490
  6385  001772  EFBB  F00B         	goto	u2491
  6386  001776                     u2491:
  6387  001776  EFC3  F00B         	goto	l3532
  6388  00177A                     u2490:
  6389  00177A  6C07               	negf	___awdiv@divisor^0,c
  6390  00177C  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6391  00177E  B0D8               	btfsc	status,0,c
  6392  001780  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6393  001782  0E01               	movlw	1
  6394  001784  6E0A               	movwf	___awdiv@sign^0,c
  6395  001786                     l3532:
  6396  001786  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6397  001788  EFCA  F00B         	goto	u2500
  6398  00178C  EFC8  F00B         	goto	u2501
  6399  001790                     u2501:
  6400  001790  EFD0  F00B         	goto	l3538
  6401  001794                     u2500:
  6402  001794  6C05               	negf	___awdiv@dividend^0,c
  6403  001796  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6404  001798  B0D8               	btfsc	status,0,c
  6405  00179A  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6406  00179C  0E01               	movlw	1
  6407  00179E  1A0A               	xorwf	___awdiv@sign^0,f,c
  6408  0017A0                     l3538:
  6409  0017A0  0E00               	movlw	0
  6410  0017A2  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6411  0017A4  0E00               	movlw	0
  6412  0017A6  6E0B               	movwf	___awdiv@quotient^0,c
  6413  0017A8  5007               	movf	___awdiv@divisor^0,w,c
  6414  0017AA  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6415  0017AC  B4D8               	btfsc	status,2,c
  6416  0017AE  EFDB  F00B         	goto	u2511
  6417  0017B2  EFDD  F00B         	goto	u2510
  6418  0017B6                     u2511:
  6419  0017B6  EF05  F00C         	goto	l3560
  6420  0017BA                     u2510:
  6421  0017BA  0E01               	movlw	1
  6422  0017BC  6E09               	movwf	___awdiv@counter^0,c
  6423  0017BE  EFE5  F00B         	goto	l3546
  6424  0017C2                     l3544:
  6425  0017C2  90D8               	bcf	status,0,c
  6426  0017C4  3607               	rlcf	___awdiv@divisor^0,f,c
  6427  0017C6  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6428  0017C8  2A09               	incf	___awdiv@counter^0,f,c
  6429  0017CA                     l3546:
  6430  0017CA  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6431  0017CC  EFEA  F00B         	goto	u2521
  6432  0017D0  EFEC  F00B         	goto	u2520
  6433  0017D4                     u2521:
  6434  0017D4  EFE1  F00B         	goto	l3544
  6435  0017D8                     u2520:
  6436  0017D8                     l3548:
  6437  0017D8  90D8               	bcf	status,0,c
  6438  0017DA  360B               	rlcf	___awdiv@quotient^0,f,c
  6439  0017DC  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6440  0017DE  5007               	movf	___awdiv@divisor^0,w,c
  6441  0017E0  5C05               	subwf	___awdiv@dividend^0,w,c
  6442  0017E2  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6443  0017E4  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6444  0017E6  A0D8               	btfss	status,0,c
  6445  0017E8  EFF8  F00B         	goto	u2531
  6446  0017EC  EFFA  F00B         	goto	u2530
  6447  0017F0                     u2531:
  6448  0017F0  EFFF  F00B         	goto	l3556
  6449  0017F4                     u2530:
  6450  0017F4  5007               	movf	___awdiv@divisor^0,w,c
  6451  0017F6  5E05               	subwf	___awdiv@dividend^0,f,c
  6452  0017F8  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6453  0017FA  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6454  0017FC  800B               	bsf	___awdiv@quotient^0,0,c
  6455  0017FE                     l3556:
  6456  0017FE  90D8               	bcf	status,0,c
  6457  001800  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6458  001802  3207               	rrcf	___awdiv@divisor^0,f,c
  6459  001804  2E09               	decfsz	___awdiv@counter^0,f,c
  6460  001806  EFEC  F00B         	goto	l3548
  6461  00180A                     l3560:
  6462  00180A  500A               	movf	___awdiv@sign^0,w,c
  6463  00180C  B4D8               	btfsc	status,2,c
  6464  00180E  EF0B  F00C         	goto	u2541
  6465  001812  EF0D  F00C         	goto	u2540
  6466  001816                     u2541:
  6467  001816  EF11  F00C         	goto	l3564
  6468  00181A                     u2540:
  6469  00181A  6C0B               	negf	___awdiv@quotient^0,c
  6470  00181C  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6471  00181E  B0D8               	btfsc	status,0,c
  6472  001820  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6473  001822                     l3564:
  6474  001822  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6475  001826  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6476  00182A  0012               	return		;funcret
  6477  00182C                     __end_of___awdiv:
  6478                           	opt callstack 0
  6479                           
  6480 ;; *************** function _Ecg_Background_Leads_Failure *****************
  6481 ;; Defined at:
  6482 ;;		line 188 in file "ecg.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:    8
  6503 ;; This function calls:
  6504 ;;		_TFT_DrawString
  6505 ;;		_TFT_FillScreen
  6506 ;; This function is called by:
  6507 ;;		_Ecg_Init
  6508 ;;		_Ecg_ProcessEcg
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text22
  6513  00249A                     __ptext22:
  6514                           	opt callstack 0
  6515  00249A                     _Ecg_Background_Leads_Failure:
  6516                           	opt callstack 21
  6517  00249A                     
  6518                           ;ecg.c: 189: TFT_FillScreen(0x0000);
  6519  00249A  0E00               	movlw	0
  6520  00249C  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  6521  00249E  0E00               	movlw	0
  6522  0024A0  6E1C               	movwf	TFT_FillScreen@color^0,c
  6523  0024A2  ECC9  F011         	call	_TFT_FillScreen	;wreg free
  6524  0024A6                     
  6525                           ;ecg.c: 190: TFT_DrawString(70, 362, "*** Collegare elettrodi ***", 0xFFFF, 0x0000, 2);
  6526  0024A6  0E00               	movlw	0
  6527  0024A8  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  6528  0024AA  0E46               	movlw	70
  6529  0024AC  6E3F               	movwf	TFT_DrawString@x^0,c
  6530  0024AE  0E01               	movlw	1
  6531  0024B0  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  6532  0024B2  0E6A               	movlw	106
  6533  0024B4  6E41               	movwf	TFT_DrawString@y^0,c
  6534  0024B6  0EB9               	movlw	low STR_18
  6535  0024B8  6E43               	movwf	TFT_DrawString@str^0,c
  6536  0024BA  0E5E               	movlw	high STR_18
  6537  0024BC  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  6538  0024BE  0EFF               	movlw	255
  6539  0024C0  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  6540  0024C2  6845               	setf	TFT_DrawString@color^0,c
  6541  0024C4  0E00               	movlw	0
  6542  0024C6  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  6543  0024C8  0E00               	movlw	0
  6544  0024CA  6E47               	movwf	TFT_DrawString@bg^0,c
  6545  0024CC  0E02               	movlw	2
  6546  0024CE  6E49               	movwf	TFT_DrawString@size^0,c
  6547  0024D0  ECC7  F00C         	call	_TFT_DrawString	;wreg free
  6548  0024D4  0012               	return		;funcret
  6549  0024D6                     __end_of_Ecg_Background_Leads_Failure:
  6550                           	opt callstack 0
  6551                           
  6552 ;; *************** function _TFT_FillScreen *****************
  6553 ;; Defined at:
  6554 ;;		line 182 in file "TFT.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  color           2   27[COMRAM] unsigned int 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6568 ;;      Params:         2       0       0       0       0       0       0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6571 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6572 ;;Total ram usage:        2 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:    4
  6575 ;; This function calls:
  6576 ;;		_TFT_Flood
  6577 ;;		_TFT_WriteRegister
  6578 ;; This function is called by:
  6579 ;;		_TFT_Init
  6580 ;;		_Ecg_Background_Leads_Ok
  6581 ;;		_Ecg_Background_Leads_Failure
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           	psect	text23
  6586  002392                     __ptext23:
  6587                           	opt callstack 0
  6588  002392                     _TFT_FillScreen:
  6589                           	opt callstack 25
  6590  002392                     
  6591                           ;TFT.c: 183: TFT_WriteRegister(0x0200, 0);
  6592  002392  0E02               	movlw	2
  6593  002394  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6594  002396  0E00               	movlw	0
  6595  002398  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6596  00239A  0E00               	movlw	0
  6597  00239C  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  6598  00239E  0E00               	movlw	0
  6599  0023A0  6E07               	movwf	TFT_WriteRegister@data^0,c
  6600  0023A2  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  6601                           
  6602                           ;TFT.c: 184: TFT_WriteRegister(0x0201, 0);
  6603  0023A6  0E02               	movlw	2
  6604  0023A8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6605  0023AA  0E01               	movlw	1
  6606  0023AC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6607  0023AE  0E00               	movlw	0
  6608  0023B0  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  6609  0023B2  0E00               	movlw	0
  6610  0023B4  6E07               	movwf	TFT_WriteRegister@data^0,c
  6611  0023B6  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  6612  0023BA                     
  6613                           ;TFT.c: 185: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  6614  0023BA  C01C  F00D         	movff	TFT_FillScreen@color,TFT_Flood@color
  6615  0023BE  C01D  F00E         	movff	TFT_FillScreen@color+1,TFT_Flood@color+1
  6616  0023C2  0E00               	movlw	0
  6617  0023C4  6E0F               	movwf	TFT_Flood@len^0,c
  6618  0023C6  0E77               	movlw	119
  6619  0023C8  6E10               	movwf	(TFT_Flood@len+1)^0,c
  6620  0023CA  0E01               	movlw	1
  6621  0023CC  6E11               	movwf	(TFT_Flood@len+2)^0,c
  6622  0023CE  0E00               	movlw	0
  6623  0023D0  6E12               	movwf	(TFT_Flood@len+3)^0,c
  6624  0023D2  ECF3  F006         	call	_TFT_Flood	;wreg free
  6625  0023D6  0012               	return		;funcret
  6626  0023D8                     __end_of_TFT_FillScreen:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function _EUSART_Init *****************
  6630 ;; Defined at:
  6631 ;;		line 12 in file "EUSART.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;		None
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:    3
  6652 ;; This function calls:
  6653 ;;		_memset
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text24
  6660  00234A                     __ptext24:
  6661                           	opt callstack 0
  6662  00234A                     _EUSART_Init:
  6663                           	opt callstack 27
  6664  00234A                     
  6665                           ;EUSART.c: 14: TXSTAbits.TX9 = 0;
  6666  00234A  9CAC               	bcf	172,6,c	;volatile
  6667                           
  6668                           ;EUSART.c: 15: TXSTAbits.TXEN = 1;
  6669  00234C  8AAC               	bsf	172,5,c	;volatile
  6670                           
  6671                           ;EUSART.c: 16: TXSTAbits.SYNC = 0;
  6672  00234E  98AC               	bcf	172,4,c	;volatile
  6673                           
  6674                           ;EUSART.c: 17: TXSTAbits.SENDB = 0;
  6675  002350  96AC               	bcf	172,3,c	;volatile
  6676                           
  6677                           ;EUSART.c: 18: TXSTAbits.BRGH = 1;
  6678  002352  84AC               	bsf	172,2,c	;volatile
  6679                           
  6680                           ;EUSART.c: 21: RCSTAbits.SPEN = 1;
  6681  002354  8EAB               	bsf	171,7,c	;volatile
  6682                           
  6683                           ;EUSART.c: 22: RCSTAbits.RX9 = 0;
  6684  002356  9CAB               	bcf	171,6,c	;volatile
  6685                           
  6686                           ;EUSART.c: 23: RCSTAbits.CREN = 1;
  6687  002358  88AB               	bsf	171,4,c	;volatile
  6688                           
  6689                           ;EUSART.c: 26: BAUDCONbits.BRG16 = 1;
  6690  00235A  86B8               	bsf	184,3,c	;volatile
  6691                           
  6692                           ;EUSART.c: 27: BAUDCONbits.WUE = 0;
  6693  00235C  92B8               	bcf	184,1,c	;volatile
  6694                           
  6695                           ;EUSART.c: 28: BAUDCONbits.ABDEN = 0;
  6696  00235E  90B8               	bcf	184,0,c	;volatile
  6697  002360                     
  6698                           ;EUSART.c: 29: SPBRGH = 0x04;
  6699  002360  0E04               	movlw	4
  6700  002362  6EB0               	movwf	176,c	;volatile
  6701                           
  6702                           ;EUSART.c: 30: SPBRG = 0xE1;
  6703  002364  0EE1               	movlw	225
  6704  002366  6EAF               	movwf	175,c	;volatile
  6705  002368                     
  6706                           ;EUSART.c: 33: RCIE = 1;
  6707  002368  8A9D               	bsf	3997,5,c	;volatile
  6708                           
  6709                           ;EUSART.c: 36: EUSART_RX.iRead = 0;
  6710  00236A  0E00               	movlw	0
  6711  00236C  0102               	movlb	2	; () banked
  6712  00236E  6F00               	movwf	_EUSART_RX& (0+255),b
  6713                           
  6714                           ;EUSART.c: 37: EUSART_RX.iWrite = 0;
  6715  002370  0E00               	movlw	0
  6716  002372  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
  6717  002374                     
  6718                           ; BSR set to: 2
  6719                           ;EUSART.c: 38: memset(EUSART_RX.buffer, 0x00, 128);
  6720  002374  0E02               	movlw	low (_EUSART_RX+2)
  6721  002376  6E05               	movwf	memset@p1^0,c
  6722  002378  0E02               	movlw	high (_EUSART_RX+2)
  6723  00237A  6E06               	movwf	(memset@p1+1)^0,c
  6724  00237C  0E00               	movlw	0
  6725  00237E  6E08               	movwf	(memset@c+1)^0,c
  6726  002380  0E00               	movlw	0
  6727  002382  6E07               	movwf	memset@c^0,c
  6728  002384  0E00               	movlw	0
  6729  002386  6E0A               	movwf	(memset@n+1)^0,c
  6730  002388  0E80               	movlw	128
  6731  00238A  6E09               	movwf	memset@n^0,c
  6732  00238C  ECA5  F012         	call	_memset	;wreg free
  6733  002390  0012               	return		;funcret
  6734  002392                     __end_of_EUSART_Init:
  6735                           	opt callstack 0
  6736                           
  6737 ;; *************** function _A6_Init *****************
  6738 ;; Defined at:
  6739 ;;		line 12 in file "A6Lib.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;		None
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;		None
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6753 ;;      Params:         0       0       0       0       0       0       0       0       0
  6754 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6755 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6756 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6757 ;;Total ram usage:        0 bytes
  6758 ;; Hardware stack levels used:    1
  6759 ;; Hardware stack levels required when called:   10
  6760 ;; This function calls:
  6761 ;;		_A6_BaudRateAutoDetect
  6762 ;;		_sleepMS
  6763 ;; This function is called by:
  6764 ;;		_main
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text25
  6769  0026C2                     __ptext25:
  6770                           	opt callstack 0
  6771  0026C2                     _A6_Init:
  6772                           	opt callstack 20
  6773  0026C2                     
  6774                           ;A6Lib.c: 13: A6_BaudRateAutoDetect();
  6775  0026C2  ECDC  F00A         	call	_A6_BaudRateAutoDetect	;wreg free
  6776  0026C6                     
  6777                           ;A6Lib.c: 14: sleepMS(1000);
  6778  0026C6  0EE8               	movlw	232
  6779  0026C8  6E05               	movwf	sleepMS@ms^0,c
  6780  0026CA  0E03               	movlw	3
  6781  0026CC  6E06               	movwf	(sleepMS@ms+1)^0,c
  6782  0026CE  0E00               	movlw	0
  6783  0026D0  6E07               	movwf	(sleepMS@ms+2)^0,c
  6784  0026D2  0E00               	movlw	0
  6785  0026D4  6E08               	movwf	(sleepMS@ms+3)^0,c
  6786  0026D6  EC6B  F012         	call	_sleepMS	;wreg free
  6787  0026DA  0012               	return		;funcret
  6788  0026DC                     __end_of_A6_Init:
  6789                           	opt callstack 0
  6790                           
  6791 ;; *************** function _A6_BaudRateAutoDetect *****************
  6792 ;; Defined at:
  6793 ;;		line 82 in file "A6Lib.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;		None
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  zzzz           32   12[BANK0 ] unsigned char [32]
  6798 ;;  i               1   44[BANK0 ] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  4   26[None  ] unsigned long 
  6801 ;; Registers used:
  6802 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6808 ;;      Params:         0       0       0       0       0       0       0       0       0
  6809 ;;      Locals:         0      33       0       0       0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6811 ;;      Totals:         0      33       0       0       0       0       0       0       0
  6812 ;;Total ram usage:       33 bytes
  6813 ;; Hardware stack levels used:    1
  6814 ;; Hardware stack levels required when called:    9
  6815 ;; This function calls:
  6816 ;;		_A6_IsAlive
  6817 ;;		_EUSART_BaudRateSet
  6818 ;;		_printLine
  6819 ;;		_sleepMS
  6820 ;;		_sprintf
  6821 ;; This function is called by:
  6822 ;;		_loop
  6823 ;;		_A6_Init
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text26
  6828  0015B8                     __ptext26:
  6829                           	opt callstack 0
  6830  0015B8                     _A6_BaudRateAutoDetect:
  6831                           	opt callstack 20
  6832  0015B8                     
  6833                           ;A6Lib.c: 83: printLine("Detecting baud rate...", 0xF81F);
  6834  0015B8  0E09               	movlw	low STR_26
  6835  0015BA  6E4A               	movwf	printLine@str^0,c
  6836  0015BC  0E5F               	movlw	high STR_26
  6837  0015BE  6E4B               	movwf	(printLine@str+1)^0,c
  6838  0015C0  0EF8               	movlw	248
  6839  0015C2  6E4D               	movwf	(printLine@color+1)^0,c
  6840  0015C4  0E1F               	movlw	31
  6841  0015C6  6E4C               	movwf	printLine@color^0,c
  6842  0015C8  EC99  F00D         	call	_printLine	;wreg free
  6843  0015CC                     
  6844                           ;A6Lib.c: 85: for(uint8_t i=0; i<3; i++) {
  6845  0015CC  0E00               	movlw	0
  6846  0015CE  0100               	movlb	0	; () banked
  6847  0015D0  6F8C               	movwf	A6_BaudRateAutoDetect@i& (0+255),b
  6848  0015D2                     l3858:
  6849                           
  6850                           ; BSR set to: 0
  6851                           ;A6Lib.c: 86: EUSART_BaudRateSet(A6_BAUDRATES[i]);
  6852  0015D2  518C               	movf	A6_BaudRateAutoDetect@i& (0+255),w,b
  6853  0015D4  0D04               	mullw	4
  6854  0015D6  0E4F               	movlw	low _A6_BAUDRATES
  6855  0015D8  24F3               	addwf	243,w,c
  6856  0015DA  6EF6               	movwf	tblptrl,c
  6857  0015DC  0E5E               	movlw	high _A6_BAUDRATES
  6858  0015DE  20F4               	addwfc	244,w,c
  6859  0015E0  6EF7               	movwf	tblptrh,c
  6860  0015E2                     	if	0	;There are less than 3 active tblptr bytes
  6861  0015E2                     	endif
  6862  0015E2  0009               	tblrd		*+
  6863  0015E4  CFF5 F012          	movff	tablat,EUSART_BaudRateSet@baudRate
  6864  0015E8  0009               	tblrd		*+
  6865  0015EA  CFF5 F013          	movff	tablat,EUSART_BaudRateSet@baudRate+1
  6866  0015EE  0009               	tblrd		*+
  6867  0015F0  CFF5 F014          	movff	tablat,EUSART_BaudRateSet@baudRate+2
  6868  0015F4  000A               	tblrd		*-
  6869  0015F6  CFF5 F015          	movff	tablat,EUSART_BaudRateSet@baudRate+3
  6870  0015FA  EC21  F00E         	call	_EUSART_BaudRateSet	;wreg free
  6871  0015FE                     
  6872                           ;A6Lib.c: 87: if(A6_IsAlive() == 1) {
  6873  0015FE  EC34  F010         	call	_A6_IsAlive	;wreg free
  6874  001602  06E8               	decf	wreg,f,c
  6875  001604  A4D8               	btfss	status,2,c
  6876  001606  EF07  F00B         	goto	u2981
  6877  00160A  EF09  F00B         	goto	u2980
  6878  00160E                     u2981:
  6879  00160E  EF34  F00B         	goto	l3868
  6880  001612                     u2980:
  6881  001612                     
  6882                           ;A6Lib.c: 88: char zzzz[32];;A6Lib.c: 89: sprintf(zzzz, "%lu FOUND!", A6_BAUDRATES[i]);
  6883  001612  0E6C               	movlw	low A6_BaudRateAutoDetect@zzzz
  6884  001614  6E4B               	movwf	sprintf@sp^0,c
  6885  001616  0E00               	movlw	high A6_BaudRateAutoDetect@zzzz
  6886  001618  6E4C               	movwf	(sprintf@sp+1)^0,c
  6887  00161A  0E97               	movlw	low STR_27
  6888  00161C  6E4D               	movwf	sprintf@f^0,c
  6889  00161E  0E5F               	movlw	high STR_27
  6890  001620  6E4E               	movwf	(sprintf@f+1)^0,c
  6891  001622  0100               	movlb	0	; () banked
  6892  001624  518C               	movf	A6_BaudRateAutoDetect@i& (0+255),w,b
  6893  001626  0D04               	mullw	4
  6894  001628  0E4F               	movlw	low _A6_BAUDRATES
  6895  00162A  24F3               	addwf	243,w,c
  6896  00162C  6EF6               	movwf	tblptrl,c
  6897  00162E  0E5E               	movlw	high _A6_BAUDRATES
  6898  001630  20F4               	addwfc	244,w,c
  6899  001632  6EF7               	movwf	tblptrh,c
  6900  001634                     	if	0	;There are less than 3 active tblptr bytes
  6901  001634                     	endif
  6902  001634  0009               	tblrd		*+
  6903  001636  CFF5 F04F          	movff	tablat,?_sprintf+4
  6904  00163A  0009               	tblrd		*+
  6905  00163C  CFF5 F050          	movff	tablat,?_sprintf+5
  6906  001640  0009               	tblrd		*+
  6907  001642  CFF5 F051          	movff	tablat,?_sprintf+6
  6908  001646  000A               	tblrd		*-
  6909  001648  CFF5 F052          	movff	tablat,?_sprintf+7
  6910  00164C  EC0B  F003         	call	_sprintf	;wreg free
  6911  001650                     
  6912                           ;A6Lib.c: 90: printLine(zzzz, 0xF800);
  6913  001650  0E6C               	movlw	low A6_BaudRateAutoDetect@zzzz
  6914  001652  6E4A               	movwf	printLine@str^0,c
  6915  001654  0E00               	movlw	high A6_BaudRateAutoDetect@zzzz
  6916  001656  6E4B               	movwf	(printLine@str+1)^0,c
  6917  001658  0EF8               	movlw	248
  6918  00165A  6E4D               	movwf	(printLine@color+1)^0,c
  6919  00165C  0E00               	movlw	0
  6920  00165E  6E4C               	movwf	printLine@color^0,c
  6921  001660  EC99  F00D         	call	_printLine	;wreg free
  6922  001664  EF48  F00B         	goto	l513
  6923  001668                     l3868:
  6924                           
  6925                           ;A6Lib.c: 92: };A6Lib.c: 93: sleepMS(100);
  6926  001668  0E64               	movlw	100
  6927  00166A  6E05               	movwf	sleepMS@ms^0,c
  6928  00166C  0E00               	movlw	0
  6929  00166E  6E06               	movwf	(sleepMS@ms+1)^0,c
  6930  001670  0E00               	movlw	0
  6931  001672  6E07               	movwf	(sleepMS@ms+2)^0,c
  6932  001674  0E00               	movlw	0
  6933  001676  6E08               	movwf	(sleepMS@ms+3)^0,c
  6934  001678  EC6B  F012         	call	_sleepMS	;wreg free
  6935  00167C  0100               	movlb	0	; () banked
  6936  00167E  2B8C               	incf	A6_BaudRateAutoDetect@i& (0+255),f,b
  6937  001680                     
  6938                           ; BSR set to: 0
  6939  001680  0E02               	movlw	2
  6940  001682  658C               	cpfsgt	A6_BaudRateAutoDetect@i& (0+255),b
  6941  001684  EF46  F00B         	goto	u2991
  6942  001688  EF48  F00B         	goto	u2990
  6943  00168C                     u2991:
  6944  00168C  EFE9  F00A         	goto	l3858
  6945  001690                     u2990:
  6946  001690                     l513:
  6947  001690  0012               	return		;funcret
  6948  001692                     __end_of_A6_BaudRateAutoDetect:
  6949                           	opt callstack 0
  6950                           
  6951 ;; *************** function _sprintf *****************
  6952 ;; Defined at:
  6953 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;  sp              2   74[COMRAM] PTR unsigned char 
  6956 ;;		 -> A6_BaudRateAutoDetect@zzzz(32), A6_BaudRateSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), loop@zzzz_1
      +49(32), 
  6957 ;;		 -> loop@zzzz(32), 
  6958 ;;  f               2   76[COMRAM] PTR const unsigned char 
  6959 ;;		 -> STR_27(11), STR_24(12), STR_16(4), STR_11(4), 
  6960 ;;		 -> STR_3(27), STR_2(32), STR_1(23), 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;  val             4    2[BANK0 ] unsigned long 
  6963 ;;  tmpval          4    0        struct .
  6964 ;;  cp              3    0        PTR const unsigned char 
  6965 ;;  width           2    9[BANK0 ] int 
  6966 ;;  ap              2    6[BANK0 ] PTR void [1]
  6967 ;;		 -> ?_sprintf(2), 
  6968 ;;  prec            2    0[BANK0 ] int 
  6969 ;;  len             2    0        unsigned int 
  6970 ;;  c               1   11[BANK0 ] unsigned char 
  6971 ;;  flag            1    8[BANK0 ] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  2   74[COMRAM] int 
  6974 ;; Registers used:
  6975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6981 ;;      Params:         8       0       0       0       0       0       0       0       0
  6982 ;;      Locals:         0      12       0       0       0       0       0       0       0
  6983 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6984 ;;      Totals:        12      12       0       0       0       0       0       0       0
  6985 ;;Total ram usage:       24 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    3
  6988 ;; This function calls:
  6989 ;;		___lldiv
  6990 ;;		___llmod
  6991 ;;		___wmul
  6992 ;;		_isdigit
  6993 ;; This function is called by:
  6994 ;;		_loop
  6995 ;;		_A6_BaudRateSet
  6996 ;;		_A6_BaudRateAutoDetect
  6997 ;;		_Ecg_ProcessHeartRate
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text27
  7002  000616                     __ptext27:
  7003                           	opt callstack 0
  7004  000616                     _sprintf:
  7005                           	opt callstack 26
  7006  000616                     
  7007                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  7008  000616  0E4F               	movlw	low (?_sprintf+4)
  7009  000618  0100               	movlb	0	; () banked
  7010  00061A  6F66               	movwf	sprintf@ap& (0+255),b
  7011  00061C  0E00               	movlw	high (?_sprintf+4)
  7012  00061E  6F67               	movwf	(sprintf@ap+1)& (0+255),b
  7013                           
  7014                           ;doprnt.c: 553: while((c = *f++)) {
  7015  000620  EFED  F004         	goto	l3722
  7016  000624                     l3620:
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;doprnt.c: 555: if(c != '%')
  7020  000624  0E25               	movlw	37
  7021  000626  196B               	xorwf	sprintf@c& (0+255),w,b
  7022  000628  B4D8               	btfsc	status,2,c
  7023  00062A  EF19  F003         	goto	u2631
  7024  00062E  EF1B  F003         	goto	u2630
  7025  000632                     u2631:
  7026  000632  EF25  F003         	goto	l3626
  7027  000636                     u2630:
  7028  000636                     
  7029                           ; BSR set to: 0
  7030                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  7031  000636  C04B  FFD9         	movff	sprintf@sp,fsr2l
  7032  00063A  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  7033  00063E  C06B  FFDF         	movff	sprintf@c,indf2
  7034  000642                     
  7035                           ; BSR set to: 0
  7036  000642  4A4B               	infsnz	sprintf@sp^0,f,c
  7037  000644  2A4C               	incf	(sprintf@sp+1)^0,f,c
  7038                           
  7039                           ;doprnt.c: 559: continue;
  7040  000646  EFED  F004         	goto	l3722
  7041  00064A                     l3626:
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  7045  00064A  0E00               	movlw	0
  7046  00064C  6F6A               	movwf	(sprintf@width+1)& (0+255),b
  7047  00064E  0E00               	movlw	0
  7048  000650  6F69               	movwf	sprintf@width& (0+255),b
  7049                           
  7050                           ;doprnt.c: 565: flag = 0;
  7051  000652  0E00               	movlw	0
  7052  000654  6F68               	movwf	sprintf@flag& (0+255),b
  7053  000656                     
  7054                           ; BSR set to: 0
  7055                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  7056  000656  C04D  FFF6         	movff	sprintf@f,tblptrl
  7057  00065A  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  7058  00065E                     	if	0	;tblptru may be non-zero
  7059  00065E                     	endif
  7060  00065E                     	if	0	;tblptru may be non-zero
  7061  00065E                     	endif
  7062  00065E  0008               	tblrd		*
  7063  000660  50F5               	movf	tablat,w,c
  7064  000662  ECDB  F012         	call	_isdigit
  7065  000666  A0D8               	btfss	status,0,c
  7066  000668  EF38  F003         	goto	u2641
  7067  00066C  EF3A  F003         	goto	u2640
  7068  000670                     u2641:
  7069  000670  EF7B  F003         	goto	l3646
  7070  000674                     u2640:
  7071  000674                     
  7072                           ;doprnt.c: 615: width = 0;
  7073  000674  0E00               	movlw	0
  7074  000676  0100               	movlb	0	; () banked
  7075  000678  6F6A               	movwf	(sprintf@width+1)& (0+255),b
  7076  00067A  0E00               	movlw	0
  7077  00067C  6F69               	movwf	sprintf@width& (0+255),b
  7078  00067E                     l3632:
  7079                           
  7080                           ;doprnt.c: 617: width *= 10;
  7081  00067E  C069  F005         	movff	sprintf@width,___wmul@multiplier
  7082  000682  C06A  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  7083  000686  0E00               	movlw	0
  7084  000688  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7085  00068A  0E0A               	movlw	10
  7086  00068C  6E07               	movwf	___wmul@multiplicand^0,c
  7087  00068E  EC0C  F013         	call	___wmul	;wreg free
  7088  000692  C005  F069         	movff	?___wmul,sprintf@width
  7089  000696  C006  F06A         	movff	?___wmul+1,sprintf@width+1
  7090  00069A                     
  7091                           ;doprnt.c: 618: width += *f++ - '0';
  7092  00069A  0ED0               	movlw	208
  7093  00069C  6E53               	movwf	??_sprintf^0,c
  7094  00069E  0EFF               	movlw	255
  7095  0006A0  6E54               	movwf	(??_sprintf+1)^0,c
  7096  0006A2  C04D  FFF6         	movff	sprintf@f,tblptrl
  7097  0006A6  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  7098  0006AA                     	if	0	;tblptru may be non-zero
  7099  0006AA                     	endif
  7100  0006AA                     	if	0	;tblptru may be non-zero
  7101  0006AA                     	endif
  7102  0006AA  0008               	tblrd		*
  7103  0006AC  50F5               	movf	tablat,w,c
  7104  0006AE  6E55               	movwf	(??_sprintf+2)^0,c
  7105  0006B0  6A56               	clrf	(??_sprintf+3)^0,c
  7106  0006B2  5053               	movf	??_sprintf^0,w,c
  7107  0006B4  2655               	addwf	(??_sprintf+2)^0,f,c
  7108  0006B6  5054               	movf	(??_sprintf+1)^0,w,c
  7109  0006B8  2256               	addwfc	(??_sprintf+3)^0,f,c
  7110  0006BA  5055               	movf	(??_sprintf+2)^0,w,c
  7111  0006BC  0100               	movlb	0	; () banked
  7112  0006BE  2769               	addwf	sprintf@width& (0+255),f,b
  7113  0006C0  5056               	movf	(??_sprintf+3)^0,w,c
  7114  0006C2  236A               	addwfc	(sprintf@width+1)& (0+255),f,b
  7115  0006C4                     
  7116                           ; BSR set to: 0
  7117  0006C4  4A4D               	infsnz	sprintf@f^0,f,c
  7118  0006C6  2A4E               	incf	(sprintf@f+1)^0,f,c
  7119  0006C8                     
  7120                           ; BSR set to: 0
  7121                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  7122  0006C8  C04D  FFF6         	movff	sprintf@f,tblptrl
  7123  0006CC  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  7124  0006D0                     	if	0	;tblptru may be non-zero
  7125  0006D0                     	endif
  7126  0006D0                     	if	0	;tblptru may be non-zero
  7127  0006D0                     	endif
  7128  0006D0  0008               	tblrd		*
  7129  0006D2  50F5               	movf	tablat,w,c
  7130  0006D4  ECDB  F012         	call	_isdigit
  7131  0006D8  B0D8               	btfsc	status,0,c
  7132  0006DA  EF71  F003         	goto	u2651
  7133  0006DE  EF73  F003         	goto	u2650
  7134  0006E2                     u2651:
  7135  0006E2  EF3F  F003         	goto	l3632
  7136  0006E6                     u2650:
  7137  0006E6  EF7B  F003         	goto	l3646
  7138  0006EA                     l3640:
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;doprnt.c: 669: flag |= 0x10;
  7142  0006EA  8968               	bsf	sprintf@flag& (0+255),4,b
  7143                           
  7144                           ;doprnt.c: 670: goto loop;
  7145  0006EC  EF7B  F003         	goto	l3646
  7146  0006F0                     l3642:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;doprnt.c: 844: flag |= 0x40;
  7150  0006F0  8D68               	bsf	sprintf@flag& (0+255),6,b
  7151                           
  7152                           ;doprnt.c: 845: break;
  7153  0006F2  EF9C  F003         	goto	l635
  7154  0006F6                     l3646:
  7155  0006F6  C04D  FFF6         	movff	sprintf@f,tblptrl
  7156  0006FA  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  7157  0006FE  4A4D               	infsnz	sprintf@f^0,f,c
  7158  000700  2A4E               	incf	(sprintf@f+1)^0,f,c
  7159  000702                     	if	0	;tblptru may be non-zero
  7160  000702                     	endif
  7161  000702                     	if	0	;tblptru may be non-zero
  7162  000702                     	endif
  7163  000702  0008               	tblrd		*
  7164  000704  CFF5 F06B          	movff	tablat,sprintf@c
  7165  000708  0100               	movlb	0	; () banked
  7166  00070A  516B               	movf	sprintf@c& (0+255),w,b
  7167                           
  7168                           ; Switch size 1, requested type "simple"
  7169                           ; Number of cases is 5, Range of values is 0 to 117
  7170                           ; switch strategies available:
  7171                           ; Name         Instructions Cycles
  7172                           ; simple_byte           16     9 (average)
  7173                           ;	Chosen strategy is simple_byte
  7174  00070C  0A00               	xorlw	0	; case 0
  7175  00070E  B4D8               	btfsc	status,2,c
  7176  000710  EFFE  F004         	goto	l3724
  7177  000714  0A64               	xorlw	100	; case 100
  7178  000716  B4D8               	btfsc	status,2,c
  7179  000718  EF9C  F003         	goto	l635
  7180  00071C  0A0D               	xorlw	13	; case 105
  7181  00071E  B4D8               	btfsc	status,2,c
  7182  000720  EF9C  F003         	goto	l635
  7183  000724  0A05               	xorlw	5	; case 108
  7184  000726  B4D8               	btfsc	status,2,c
  7185  000728  EF75  F003         	goto	l3640
  7186  00072C  0A19               	xorlw	25	; case 117
  7187  00072E  B4D8               	btfsc	status,2,c
  7188  000730  EF78  F003         	goto	l3642
  7189  000734  EFED  F004         	goto	l3722
  7190  000738                     l635:
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  7194  000738  BD68               	btfsc	sprintf@flag& (0+255),6,b
  7195  00073A  EFA1  F003         	goto	u2661
  7196  00073E  EFA3  F003         	goto	u2660
  7197  000742                     u2661:
  7198  000742  EFE0  F003         	goto	l638
  7199  000746                     u2660:
  7200  000746                     
  7201                           ; BSR set to: 0
  7202                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  7203  000746  A968               	btfss	sprintf@flag& (0+255),4,b
  7204  000748  EFA8  F003         	goto	u2671
  7205  00074C  EFAA  F003         	goto	u2670
  7206  000750                     u2671:
  7207  000750  EFBC  F003         	goto	l3654
  7208  000754                     u2670:
  7209  000754                     
  7210                           ; BSR set to: 0
  7211                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  7212  000754  C066  FFD9         	movff	sprintf@ap,fsr2l
  7213  000758  C067  FFDA         	movff	sprintf@ap+1,fsr2h
  7214  00075C  CFDE F062          	movff	postinc2,sprintf@val
  7215  000760  CFDE F063          	movff	postinc2,sprintf@val+1
  7216  000764  CFDE F064          	movff	postinc2,sprintf@val+2
  7217  000768  CFDE F065          	movff	postinc2,sprintf@val+3
  7218  00076C                     
  7219                           ; BSR set to: 0
  7220  00076C  0E04               	movlw	4
  7221  00076E  2766               	addwf	sprintf@ap& (0+255),f,b
  7222  000770  0E00               	movlw	0
  7223  000772  2367               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7224  000774  EFCD  F003         	goto	l3658
  7225  000778                     l3654:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  7229  000778  C066  FFD9         	movff	sprintf@ap,fsr2l
  7230  00077C  C067  FFDA         	movff	sprintf@ap+1,fsr2h
  7231  000780  CFDE F062          	movff	postinc2,sprintf@val
  7232  000784  CFDD F063          	movff	postdec2,sprintf@val+1
  7233  000788  0E00               	movlw	0
  7234  00078A  BF63               	btfsc	(sprintf@val+1)& (0+255),7,b
  7235  00078C  0EFF               	movlw	-1
  7236  00078E  6F64               	movwf	(sprintf@val+2)& (0+255),b
  7237  000790  6F65               	movwf	(sprintf@val+3)& (0+255),b
  7238  000792                     
  7239                           ; BSR set to: 0
  7240  000792  0E02               	movlw	2
  7241  000794  2766               	addwf	sprintf@ap& (0+255),f,b
  7242  000796  0E00               	movlw	0
  7243  000798  2367               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7244  00079A                     l3658:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;doprnt.c: 1287: if((long)val < 0) {
  7248  00079A  BF65               	btfsc	(sprintf@val+3)& (0+255),7,b
  7249  00079C  EFD4  F003         	goto	u2680
  7250  0007A0  EFD2  F003         	goto	u2681
  7251  0007A4                     u2681:
  7252  0007A4  EF0B  F004         	goto	l3672
  7253  0007A8                     u2680:
  7254  0007A8                     
  7255                           ; BSR set to: 0
  7256                           ;doprnt.c: 1288: flag |= 0x03;
  7257  0007A8  0E03               	movlw	3
  7258  0007AA  1368               	iorwf	sprintf@flag& (0+255),f,b
  7259  0007AC                     
  7260                           ; BSR set to: 0
  7261                           ;doprnt.c: 1289: val = -val;
  7262  0007AC  1F65               	comf	(sprintf@val+3)& (0+255),f,b
  7263  0007AE  1F64               	comf	(sprintf@val+2)& (0+255),f,b
  7264  0007B0  1F63               	comf	(sprintf@val+1)& (0+255),f,b
  7265  0007B2  6D62               	negf	sprintf@val& (0+255),b
  7266  0007B4  0E00               	movlw	0
  7267  0007B6  2363               	addwfc	(sprintf@val+1)& (0+255),f,b
  7268  0007B8  2364               	addwfc	(sprintf@val+2)& (0+255),f,b
  7269  0007BA  2365               	addwfc	(sprintf@val+3)& (0+255),f,b
  7270  0007BC  EF0B  F004         	goto	l3672
  7271  0007C0                     l638:
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  7275  0007C0  A968               	btfss	sprintf@flag& (0+255),4,b
  7276  0007C2  EFE5  F003         	goto	u2691
  7277  0007C6  EFE7  F003         	goto	u2690
  7278  0007CA                     u2691:
  7279  0007CA  EFF9  F003         	goto	l3668
  7280  0007CE                     u2690:
  7281  0007CE                     
  7282                           ; BSR set to: 0
  7283                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  7284  0007CE  C066  FFD9         	movff	sprintf@ap,fsr2l
  7285  0007D2  C067  FFDA         	movff	sprintf@ap+1,fsr2h
  7286  0007D6  CFDE F062          	movff	postinc2,sprintf@val
  7287  0007DA  CFDE F063          	movff	postinc2,sprintf@val+1
  7288  0007DE  CFDE F064          	movff	postinc2,sprintf@val+2
  7289  0007E2  CFDE F065          	movff	postinc2,sprintf@val+3
  7290  0007E6                     
  7291                           ; BSR set to: 0
  7292  0007E6  0E04               	movlw	4
  7293  0007E8  2766               	addwf	sprintf@ap& (0+255),f,b
  7294  0007EA  0E00               	movlw	0
  7295  0007EC  2367               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7296  0007EE  EF0B  F004         	goto	l3672
  7297  0007F2                     l3668:
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  7301  0007F2  C066  FFD9         	movff	sprintf@ap,fsr2l
  7302  0007F6  C067  FFDA         	movff	sprintf@ap+1,fsr2h
  7303  0007FA  CFDE F053          	movff	postinc2,??_sprintf
  7304  0007FE  CFDD F054          	movff	postdec2,??_sprintf+1
  7305  000802  C053  F062         	movff	??_sprintf,sprintf@val
  7306  000806  C054  F063         	movff	??_sprintf+1,sprintf@val+1
  7307  00080A  6B64               	clrf	(sprintf@val+2)& (0+255),b
  7308  00080C  6B65               	clrf	(sprintf@val+3)& (0+255),b
  7309  00080E                     
  7310                           ; BSR set to: 0
  7311  00080E  0E02               	movlw	2
  7312  000810  2766               	addwf	sprintf@ap& (0+255),f,b
  7313  000812  0E00               	movlw	0
  7314  000814  2367               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7315  000816                     l3672:
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  7319  000816  0E01               	movlw	1
  7320  000818  6F6B               	movwf	sprintf@c& (0+255),b
  7321  00081A                     l3678:
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;doprnt.c: 1332: if(val < dpowers[c])
  7325  00081A  516B               	movf	sprintf@c& (0+255),w,b
  7326  00081C  0D04               	mullw	4
  7327  00081E  0E27               	movlw	low _dpowers
  7328  000820  24F3               	addwf	243,w,c
  7329  000822  6EF6               	movwf	tblptrl,c
  7330  000824  0E5E               	movlw	high _dpowers
  7331  000826  20F4               	addwfc	244,w,c
  7332  000828  6EF7               	movwf	tblptrh,c
  7333  00082A                     	if	0	;There are less than 3 active tblptr bytes
  7334  00082A                     	endif
  7335  00082A  0009               	tblrd		*+
  7336  00082C  50F5               	movf	tablat,w,c
  7337  00082E  5D62               	subwf	sprintf@val& (0+255),w,b
  7338  000830  0009               	tblrd		*+
  7339  000832  50F5               	movf	tablat,w,c
  7340  000834  5963               	subwfb	(sprintf@val+1)& (0+255),w,b
  7341  000836  0009               	tblrd		*+
  7342  000838  50F5               	movf	tablat,w,c
  7343  00083A  5964               	subwfb	(sprintf@val+2)& (0+255),w,b
  7344  00083C  0009               	tblrd		*+
  7345  00083E  50F5               	movf	tablat,w,c
  7346  000840  5965               	subwfb	(sprintf@val+3)& (0+255),w,b
  7347  000842  B0D8               	btfsc	status,0,c
  7348  000844  EF26  F004         	goto	u2701
  7349  000848  EF28  F004         	goto	u2700
  7350  00084C                     u2701:
  7351  00084C  EF2A  F004         	goto	l3682
  7352  000850                     u2700:
  7353  000850  EF34  F004         	goto	l3686
  7354  000854                     l3682:
  7355                           
  7356                           ; BSR set to: 0
  7357  000854  2B6B               	incf	sprintf@c& (0+255),f,b
  7358  000856                     
  7359                           ; BSR set to: 0
  7360  000856  0E0A               	movlw	10
  7361  000858  196B               	xorwf	sprintf@c& (0+255),w,b
  7362  00085A  A4D8               	btfss	status,2,c
  7363  00085C  EF32  F004         	goto	u2711
  7364  000860  EF34  F004         	goto	u2710
  7365  000864                     u2711:
  7366  000864  EF0D  F004         	goto	l3678
  7367  000868                     u2710:
  7368  000868                     l3686:
  7369                           
  7370                           ; BSR set to: 0
  7371                           ;doprnt.c: 1371: if(width && flag & 0x03)
  7372  000868  5169               	movf	sprintf@width& (0+255),w,b
  7373  00086A  116A               	iorwf	(sprintf@width+1)& (0+255),w,b
  7374  00086C  B4D8               	btfsc	status,2,c
  7375  00086E  EF3B  F004         	goto	u2721
  7376  000872  EF3D  F004         	goto	u2720
  7377  000876                     u2721:
  7378  000876  EF4B  F004         	goto	l3692
  7379  00087A                     u2720:
  7380  00087A                     
  7381                           ; BSR set to: 0
  7382  00087A  C068  F053         	movff	sprintf@flag,??_sprintf
  7383  00087E  0E03               	movlw	3
  7384  000880  1653               	andwf	??_sprintf^0,f,c
  7385  000882  B4D8               	btfsc	status,2,c
  7386  000884  EF46  F004         	goto	u2731
  7387  000888  EF48  F004         	goto	u2730
  7388  00088C                     u2731:
  7389  00088C  EF4B  F004         	goto	l3692
  7390  000890                     u2730:
  7391  000890                     
  7392                           ; BSR set to: 0
  7393                           ;doprnt.c: 1372: width--;
  7394  000890  0769               	decf	sprintf@width& (0+255),f,b
  7395  000892  A0D8               	btfss	status,0,c
  7396  000894  076A               	decf	(sprintf@width+1)& (0+255),f,b
  7397  000896                     l3692:
  7398                           
  7399                           ; BSR set to: 0
  7400                           ;doprnt.c: 1407: if(width > c)
  7401  000896  516B               	movf	sprintf@c& (0+255),w,b
  7402  000898  6E53               	movwf	??_sprintf^0,c
  7403  00089A  6A54               	clrf	(??_sprintf+1)^0,c
  7404  00089C  5169               	movf	sprintf@width& (0+255),w,b
  7405  00089E  5C53               	subwf	??_sprintf^0,w,c
  7406  0008A0  5054               	movf	(??_sprintf+1)^0,w,c
  7407  0008A2  0A80               	xorlw	128
  7408  0008A4  6E55               	movwf	(??_sprintf+2)^0,c
  7409  0008A6  516A               	movf	(sprintf@width+1)& (0+255),w,b
  7410  0008A8  0A80               	xorlw	128
  7411  0008AA  5855               	subwfb	(??_sprintf+2)^0,w,c
  7412  0008AC  B0D8               	btfsc	status,0,c
  7413  0008AE  EF5B  F004         	goto	u2741
  7414  0008B2  EF5D  F004         	goto	u2740
  7415  0008B6                     u2741:
  7416  0008B6  EF63  F004         	goto	l3696
  7417  0008BA                     u2740:
  7418  0008BA                     
  7419                           ; BSR set to: 0
  7420                           ;doprnt.c: 1408: width -= c;
  7421  0008BA  516B               	movf	sprintf@c& (0+255),w,b
  7422  0008BC  5F69               	subwf	sprintf@width& (0+255),f,b
  7423  0008BE  0E00               	movlw	0
  7424  0008C0  5B6A               	subwfb	(sprintf@width+1)& (0+255),f,b
  7425  0008C2  EF67  F004         	goto	l3698
  7426  0008C6                     l3696:
  7427                           
  7428                           ; BSR set to: 0
  7429                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  7430  0008C6  0E00               	movlw	0
  7431  0008C8  6F6A               	movwf	(sprintf@width+1)& (0+255),b
  7432  0008CA  0E00               	movlw	0
  7433  0008CC  6F69               	movwf	sprintf@width& (0+255),b
  7434  0008CE                     l3698:
  7435                           
  7436                           ; BSR set to: 0
  7437                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  7438  0008CE  5169               	movf	sprintf@width& (0+255),w,b
  7439  0008D0  116A               	iorwf	(sprintf@width+1)& (0+255),w,b
  7440  0008D2  B4D8               	btfsc	status,2,c
  7441  0008D4  EF6E  F004         	goto	u2751
  7442  0008D8  EF70  F004         	goto	u2750
  7443  0008DC                     u2751:
  7444  0008DC  EF84  F004         	goto	l3706
  7445  0008E0                     u2750:
  7446  0008E0                     l3700:
  7447                           
  7448                           ; BSR set to: 0
  7449                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  7450  0008E0  C04B  FFD9         	movff	sprintf@sp,fsr2l
  7451  0008E4  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  7452  0008E8  0E20               	movlw	32
  7453  0008EA  6EDF               	movwf	indf2,c
  7454  0008EC                     
  7455                           ; BSR set to: 0
  7456  0008EC  4A4B               	infsnz	sprintf@sp^0,f,c
  7457  0008EE  2A4C               	incf	(sprintf@sp+1)^0,f,c
  7458  0008F0                     
  7459                           ; BSR set to: 0
  7460                           ;doprnt.c: 1457: while(--width);
  7461  0008F0  0769               	decf	sprintf@width& (0+255),f,b
  7462  0008F2  A0D8               	btfss	status,0,c
  7463  0008F4  076A               	decf	(sprintf@width+1)& (0+255),f,b
  7464  0008F6  5169               	movf	sprintf@width& (0+255),w,b
  7465  0008F8  116A               	iorwf	(sprintf@width+1)& (0+255),w,b
  7466  0008FA  A4D8               	btfss	status,2,c
  7467  0008FC  EF82  F004         	goto	u2761
  7468  000900  EF84  F004         	goto	u2760
  7469  000904                     u2761:
  7470  000904  EF70  F004         	goto	l3700
  7471  000908                     u2760:
  7472  000908                     l3706:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;doprnt.c: 1464: if(flag & 0x03)
  7476  000908  C068  F053         	movff	sprintf@flag,??_sprintf
  7477  00090C  0E03               	movlw	3
  7478  00090E  1653               	andwf	??_sprintf^0,f,c
  7479  000910  B4D8               	btfsc	status,2,c
  7480  000912  EF8D  F004         	goto	u2771
  7481  000916  EF8F  F004         	goto	u2770
  7482  00091A                     u2771:
  7483  00091A  EF97  F004         	goto	l3712
  7484  00091E                     u2770:
  7485  00091E                     
  7486                           ; BSR set to: 0
  7487                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  7488  00091E  C04B  FFD9         	movff	sprintf@sp,fsr2l
  7489  000922  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  7490  000926  0E2D               	movlw	45
  7491  000928  6EDF               	movwf	indf2,c
  7492  00092A                     
  7493                           ; BSR set to: 0
  7494  00092A  4A4B               	infsnz	sprintf@sp^0,f,c
  7495  00092C  2A4C               	incf	(sprintf@sp+1)^0,f,c
  7496  00092E                     l3712:
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  7500  00092E  C06B  F060         	movff	sprintf@c,sprintf@prec
  7501  000932  6B61               	clrf	(sprintf@prec+1)& (0+255),b
  7502                           
  7503                           ;doprnt.c: 1500: while(prec--) {
  7504  000934  EFE0  F004         	goto	l3720
  7505  000938                     l3714:
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  7509  000938  C060  F053         	movff	sprintf@prec,??_sprintf
  7510  00093C  C061  F054         	movff	sprintf@prec+1,??_sprintf+1
  7511  000940  90D8               	bcf	status,0,c
  7512  000942  3653               	rlcf	??_sprintf^0,f,c
  7513  000944  3654               	rlcf	(??_sprintf+1)^0,f,c
  7514  000946  90D8               	bcf	status,0,c
  7515  000948  3653               	rlcf	??_sprintf^0,f,c
  7516  00094A  3654               	rlcf	(??_sprintf+1)^0,f,c
  7517  00094C  0E27               	movlw	low _dpowers
  7518  00094E  2453               	addwf	??_sprintf^0,w,c
  7519  000950  6EF6               	movwf	tblptrl,c
  7520  000952  0E5E               	movlw	high _dpowers
  7521  000954  2054               	addwfc	(??_sprintf+1)^0,w,c
  7522  000956  6EF7               	movwf	tblptrh,c
  7523  000958                     	if	0	;There are less than 3 active tblptr bytes
  7524  000958                     	endif
  7525  000958  0009               	tblrd		*+
  7526  00095A  CFF5 F009          	movff	tablat,___lldiv@divisor
  7527  00095E  0009               	tblrd		*+
  7528  000960  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  7529  000964  0009               	tblrd		*+
  7530  000966  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  7531  00096A  000A               	tblrd		*-
  7532  00096C  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  7533  000970  C062  F005         	movff	sprintf@val,___lldiv@dividend
  7534  000974  C063  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  7535  000978  C064  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  7536  00097C  C065  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  7537  000980  EC75  F00C         	call	___lldiv	;wreg free
  7538  000984  C005  F012         	movff	?___lldiv,___llmod@dividend
  7539  000988  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  7540  00098C  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  7541  000990  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  7542  000994  0E0A               	movlw	10
  7543  000996  6E16               	movwf	___llmod@divisor^0,c
  7544  000998  0E00               	movlw	0
  7545  00099A  6E17               	movwf	(___llmod@divisor+1)^0,c
  7546  00099C  0E00               	movlw	0
  7547  00099E  6E18               	movwf	(___llmod@divisor+2)^0,c
  7548  0009A0  0E00               	movlw	0
  7549  0009A2  6E19               	movwf	(___llmod@divisor+3)^0,c
  7550  0009A4  EC55  F00D         	call	___llmod	;wreg free
  7551  0009A8  5012               	movf	?___llmod^0,w,c
  7552  0009AA  0F30               	addlw	48
  7553  0009AC  0100               	movlb	0	; () banked
  7554  0009AE  6F6B               	movwf	sprintf@c& (0+255),b
  7555  0009B0                     
  7556                           ; BSR set to: 0
  7557                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  7558  0009B0  C04B  FFD9         	movff	sprintf@sp,fsr2l
  7559  0009B4  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  7560  0009B8  C06B  FFDF         	movff	sprintf@c,indf2
  7561  0009BC                     
  7562                           ; BSR set to: 0
  7563  0009BC  4A4B               	infsnz	sprintf@sp^0,f,c
  7564  0009BE  2A4C               	incf	(sprintf@sp+1)^0,f,c
  7565  0009C0                     l3720:
  7566                           
  7567                           ; BSR set to: 0
  7568  0009C0  0760               	decf	sprintf@prec& (0+255),f,b
  7569  0009C2  A0D8               	btfss	status,0,c
  7570  0009C4  0761               	decf	(sprintf@prec+1)& (0+255),f,b
  7571  0009C6  2960               	incf	sprintf@prec& (0+255),w,b
  7572  0009C8  E106               	bnz	u2781
  7573  0009CA  2961               	incf	(sprintf@prec+1)& (0+255),w,b
  7574  0009CC  A4D8               	btfss	status,2,c
  7575  0009CE  EFEB  F004         	goto	u2781
  7576  0009D2  EFED  F004         	goto	u2780
  7577  0009D6                     u2781:
  7578  0009D6  EF9C  F004         	goto	l3714
  7579  0009DA                     u2780:
  7580  0009DA                     l3722:
  7581                           
  7582                           ; BSR set to: 0
  7583  0009DA  C04D  FFF6         	movff	sprintf@f,tblptrl
  7584  0009DE  C04E  FFF7         	movff	sprintf@f+1,tblptrh
  7585  0009E2  4A4D               	infsnz	sprintf@f^0,f,c
  7586  0009E4  2A4E               	incf	(sprintf@f+1)^0,f,c
  7587  0009E6                     	if	0	;tblptru may be non-zero
  7588  0009E6                     	endif
  7589  0009E6                     	if	0	;tblptru may be non-zero
  7590  0009E6                     	endif
  7591  0009E6  0008               	tblrd		*
  7592  0009E8  CFF5 F06B          	movff	tablat,sprintf@c
  7593  0009EC  516B               	movf	sprintf@c& (0+255),w,b
  7594  0009EE  A4D8               	btfss	status,2,c
  7595  0009F0  EFFC  F004         	goto	u2791
  7596  0009F4  EFFE  F004         	goto	u2790
  7597  0009F8                     u2791:
  7598  0009F8  EF12  F003         	goto	l3620
  7599  0009FC                     u2790:
  7600  0009FC                     l3724:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;doprnt.c: 1564: *sp = 0;
  7604  0009FC  C04B  FFD9         	movff	sprintf@sp,fsr2l
  7605  000A00  C04C  FFDA         	movff	sprintf@sp+1,fsr2h
  7606  000A04  0E00               	movlw	0
  7607  000A06  6EDF               	movwf	indf2,c
  7608  000A08                     
  7609                           ; BSR set to: 0
  7610  000A08  0012               	return		;funcret
  7611  000A0A                     __end_of_sprintf:
  7612                           	opt callstack 0
  7613                           
  7614 ;; *************** function _isdigit *****************
  7615 ;; Defined at:
  7616 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  c               1    wreg     unsigned char 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  c               1    6[COMRAM] unsigned char 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;		None               void
  7623 ;; Registers used:
  7624 ;;		wreg, status,2, status,0
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7630 ;;      Params:         0       0       0       0       0       0       0       0       0
  7631 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7632 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7633 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7634 ;;Total ram usage:        3 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    2
  7637 ;; This function calls:
  7638 ;;		Nothing
  7639 ;; This function is called by:
  7640 ;;		_sprintf
  7641 ;;		_atol
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           	psect	text28
  7646  0025B6                     __ptext28:
  7647                           	opt callstack 0
  7648  0025B6                     _isdigit:
  7649                           	opt callstack 26
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;incstack = 0
  7653                           ;isdigit@c stored from wreg
  7654  0025B6  6E07               	movwf	isdigit@c^0,c
  7655  0025B8  0E00               	movlw	0
  7656  0025BA  6E06               	movwf	_isdigit$1881^0,c
  7657  0025BC  0E3A               	movlw	58
  7658  0025BE  6007               	cpfslt	isdigit@c^0,c
  7659  0025C0  EFE4  F012         	goto	u2121
  7660  0025C4  EFE6  F012         	goto	u2120
  7661  0025C8                     u2121:
  7662  0025C8  EFF0  F012         	goto	l3332
  7663  0025CC                     u2120:
  7664  0025CC  0E2F               	movlw	47
  7665  0025CE  6407               	cpfsgt	isdigit@c^0,c
  7666  0025D0  EFEC  F012         	goto	u2131
  7667  0025D4  EFEE  F012         	goto	u2130
  7668  0025D8                     u2131:
  7669  0025D8  EFF0  F012         	goto	l3332
  7670  0025DC                     u2130:
  7671  0025DC  0E01               	movlw	1
  7672  0025DE  6E06               	movwf	_isdigit$1881^0,c
  7673  0025E0                     l3332:
  7674  0025E0  C006  F005         	movff	_isdigit$1881,??_isdigit
  7675  0025E4  3005               	rrcf	??_isdigit^0,w,c
  7676  0025E6  0012               	return		;funcret
  7677  0025E8                     __end_of_isdigit:
  7678                           	opt callstack 0
  7679                           
  7680 ;; *************** function ___llmod *****************
  7681 ;; Defined at:
  7682 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  dividend        4   17[COMRAM] unsigned long 
  7685 ;;  divisor         4   21[COMRAM] unsigned long 
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;  counter         1   25[COMRAM] unsigned char 
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  4   17[COMRAM] unsigned long 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7697 ;;      Params:         8       0       0       0       0       0       0       0       0
  7698 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7700 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7701 ;;Total ram usage:        9 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:    2
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		_sprintf
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text29
  7712  001AAA                     __ptext29:
  7713                           	opt callstack 0
  7714  001AAA                     ___llmod:
  7715                           	opt callstack 26
  7716  001AAA  5016               	movf	___llmod@divisor^0,w,c
  7717  001AAC  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  7718  001AAE  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  7719  001AB0  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  7720  001AB2  B4D8               	btfsc	status,2,c
  7721  001AB4  EF5E  F00D         	goto	u2551
  7722  001AB8  EF60  F00D         	goto	u2550
  7723  001ABC                     u2551:
  7724  001ABC  EF90  F00D         	goto	l1070
  7725  001AC0                     u2550:
  7726  001AC0  0E01               	movlw	1
  7727  001AC2  6E1A               	movwf	___llmod@counter^0,c
  7728  001AC4  EF6A  F00D         	goto	l3574
  7729  001AC8                     l3572:
  7730  001AC8  90D8               	bcf	status,0,c
  7731  001ACA  3616               	rlcf	___llmod@divisor^0,f,c
  7732  001ACC  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  7733  001ACE  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  7734  001AD0  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  7735  001AD2  2A1A               	incf	___llmod@counter^0,f,c
  7736  001AD4                     l3574:
  7737  001AD4  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  7738  001AD6  EF6F  F00D         	goto	u2561
  7739  001ADA  EF71  F00D         	goto	u2560
  7740  001ADE                     u2561:
  7741  001ADE  EF64  F00D         	goto	l3572
  7742  001AE2                     u2560:
  7743  001AE2                     l3576:
  7744  001AE2  5016               	movf	___llmod@divisor^0,w,c
  7745  001AE4  5C12               	subwf	___llmod@dividend^0,w,c
  7746  001AE6  5017               	movf	(___llmod@divisor+1)^0,w,c
  7747  001AE8  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  7748  001AEA  5018               	movf	(___llmod@divisor+2)^0,w,c
  7749  001AEC  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  7750  001AEE  5019               	movf	(___llmod@divisor+3)^0,w,c
  7751  001AF0  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  7752  001AF2  A0D8               	btfss	status,0,c
  7753  001AF4  EF7E  F00D         	goto	u2571
  7754  001AF8  EF80  F00D         	goto	u2570
  7755  001AFC                     u2571:
  7756  001AFC  EF88  F00D         	goto	l3580
  7757  001B00                     u2570:
  7758  001B00  5016               	movf	___llmod@divisor^0,w,c
  7759  001B02  5E12               	subwf	___llmod@dividend^0,f,c
  7760  001B04  5017               	movf	(___llmod@divisor+1)^0,w,c
  7761  001B06  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  7762  001B08  5018               	movf	(___llmod@divisor+2)^0,w,c
  7763  001B0A  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  7764  001B0C  5019               	movf	(___llmod@divisor+3)^0,w,c
  7765  001B0E  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  7766  001B10                     l3580:
  7767  001B10  90D8               	bcf	status,0,c
  7768  001B12  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  7769  001B14  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  7770  001B16  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  7771  001B18  3216               	rrcf	___llmod@divisor^0,f,c
  7772  001B1A  2E1A               	decfsz	___llmod@counter^0,f,c
  7773  001B1C  EF71  F00D         	goto	l3576
  7774  001B20                     l1070:
  7775  001B20  C012  F012         	movff	___llmod@dividend,?___llmod
  7776  001B24  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  7777  001B28  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  7778  001B2C  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  7779  001B30  0012               	return		;funcret
  7780  001B32                     __end_of___llmod:
  7781                           	opt callstack 0
  7782                           
  7783 ;; *************** function _sleepMS *****************
  7784 ;; Defined at:
  7785 ;;		line 126 in file "main.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  ms              4    4[COMRAM] unsigned long 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;  t               4    8[COMRAM] unsigned long 
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  1    wreg      void 
  7792 ;; Registers used:
  7793 ;;		wreg, status,2, status,0
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7799 ;;      Params:         4       0       0       0       0       0       0       0       0
  7800 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7802 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7803 ;;Total ram usage:        8 bytes
  7804 ;; Hardware stack levels used:    1
  7805 ;; Hardware stack levels required when called:    2
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		_A6_Init
  7810 ;;		_A6_BaudRateGet
  7811 ;;		_A6_BaudRateSet
  7812 ;;		_A6_BaudRateAutoDetect
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           	psect	text30
  7817  0024D6                     __ptext30:
  7818                           	opt callstack 0
  7819  0024D6                     _sleepMS:
  7820                           	opt callstack 26
  7821  0024D6                     
  7822                           ;main.c: 127: uint32_t t = MILLISECONDS + ms;
  7823  0024D6  5005               	movf	sleepMS@ms^0,w,c
  7824  0024D8  0101               	movlb	1	; () banked
  7825  0024DA  25BC               	addwf	_MILLISECONDS& (0+255),w,b
  7826  0024DC  6E09               	movwf	sleepMS@t^0,c
  7827  0024DE  5006               	movf	(sleepMS@ms+1)^0,w,c
  7828  0024E0  21BD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  7829  0024E2  6E0A               	movwf	(sleepMS@t+1)^0,c
  7830  0024E4  5007               	movf	(sleepMS@ms+2)^0,w,c
  7831  0024E6  21BE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  7832  0024E8  6E0B               	movwf	(sleepMS@t+2)^0,c
  7833  0024EA  5008               	movf	(sleepMS@ms+3)^0,w,c
  7834  0024EC  21BF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  7835  0024EE  6E0C               	movwf	(sleepMS@t+3)^0,c
  7836  0024F0                     l3390:
  7837                           
  7838                           ; BSR set to: 1
  7839  0024F0  5009               	movf	sleepMS@t^0,w,c
  7840  0024F2  5DBC               	subwf	_MILLISECONDS& (0+255),w,b
  7841  0024F4  500A               	movf	(sleepMS@t+1)^0,w,c
  7842  0024F6  59BD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  7843  0024F8  500B               	movf	(sleepMS@t+2)^0,w,c
  7844  0024FA  59BE               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
  7845  0024FC  500C               	movf	(sleepMS@t+3)^0,w,c
  7846  0024FE  59BF               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
  7847  002500  A0D8               	btfss	status,0,c
  7848  002502  EF85  F012         	goto	u2251
  7849  002506  EF87  F012         	goto	u2250
  7850  00250A                     u2251:
  7851  00250A  EF78  F012         	goto	l3390
  7852  00250E                     u2250:
  7853  00250E                     
  7854                           ; BSR set to: 1
  7855  00250E  0012               	return		;funcret
  7856  002510                     __end_of_sleepMS:
  7857                           	opt callstack 0
  7858                           
  7859 ;; *************** function _printLine *****************
  7860 ;; Defined at:
  7861 ;;		line 131 in file "main.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  str             2   73[COMRAM] PTR const unsigned char 
  7864 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateAutoDetect@zzzz(32), STR_26(23), loop@response_155(32), 
  7865 ;;		 -> STR_14(19), loop@response_152(32), STR_12(13), loop@zzzz_149(32), 
  7866 ;;		 -> STR_10(16), loop@response(32), STR_8(11), STR_7(13), 
  7867 ;;		 -> STR_6(11), STR_5(23), STR_4(25), loop@zzzz(32), 
  7868 ;;  color           2   75[COMRAM] unsigned int 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;		None
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      void 
  7873 ;; Registers used:
  7874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7880 ;;      Params:         4       0       0       0       0       0       0       0       0
  7881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7883 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7884 ;;Total ram usage:        4 bytes
  7885 ;; Hardware stack levels used:    1
  7886 ;; Hardware stack levels required when called:    8
  7887 ;; This function calls:
  7888 ;;		_TFT_DrawFillRect
  7889 ;;		_TFT_DrawString
  7890 ;; This function is called by:
  7891 ;;		_loop
  7892 ;;		_A6_BaudRateAutoDetect
  7893 ;;		_A6_Process_Random_Comms
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text31
  7898  001B32                     __ptext31:
  7899                           	opt callstack 0
  7900  001B32                     _printLine:
  7901                           	opt callstack 21
  7902  001B32                     
  7903                           ;main.c: 132: consoleX += 10;
  7904  001B32  0E0A               	movlw	10
  7905  001B34  0100               	movlb	0	; () banked
  7906  001B36  27C4               	addwf	_consoleX& (0+255),f,b
  7907  001B38  0E00               	movlw	0
  7908  001B3A  23C5               	addwfc	(_consoleX+1)& (0+255),f,b
  7909  001B3C                     
  7910                           ; BSR set to: 0
  7911                           ;main.c: 133: TFT_DrawFillRect(consoleX, 0, 40, 400, 0x0000);
  7912  001B3C  C0C4  F01C         	movff	_consoleX,TFT_DrawFillRect@x
  7913  001B40  C0C5  F01D         	movff	_consoleX+1,TFT_DrawFillRect@x+1
  7914  001B44  0E00               	movlw	0
  7915  001B46  6E1F               	movwf	(TFT_DrawFillRect@y+1)^0,c
  7916  001B48  0E00               	movlw	0
  7917  001B4A  6E1E               	movwf	TFT_DrawFillRect@y^0,c
  7918  001B4C  0E00               	movlw	0
  7919  001B4E  6E21               	movwf	(TFT_DrawFillRect@w+1)^0,c
  7920  001B50  0E28               	movlw	40
  7921  001B52  6E20               	movwf	TFT_DrawFillRect@w^0,c
  7922  001B54  0E01               	movlw	1
  7923  001B56  6E23               	movwf	(TFT_DrawFillRect@h+1)^0,c
  7924  001B58  0E90               	movlw	144
  7925  001B5A  6E22               	movwf	TFT_DrawFillRect@h^0,c
  7926  001B5C  0E00               	movlw	0
  7927  001B5E  6E25               	movwf	(TFT_DrawFillRect@color+1)^0,c
  7928  001B60  0E00               	movlw	0
  7929  001B62  6E24               	movwf	TFT_DrawFillRect@color^0,c
  7930  001B64  EC1D  F00F         	call	_TFT_DrawFillRect	;wreg free
  7931  001B68                     
  7932                           ;main.c: 134: TFT_DrawString(consoleX, (400 - 1), str, color, 0x0000, 1);
  7933  001B68  C0C4  F03F         	movff	_consoleX,TFT_DrawString@x
  7934  001B6C  C0C5  F040         	movff	_consoleX+1,TFT_DrawString@x+1
  7935  001B70  0E01               	movlw	1
  7936  001B72  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  7937  001B74  0E8F               	movlw	143
  7938  001B76  6E41               	movwf	TFT_DrawString@y^0,c
  7939  001B78  C04A  F043         	movff	printLine@str,TFT_DrawString@str
  7940  001B7C  C04B  F044         	movff	printLine@str+1,TFT_DrawString@str+1
  7941  001B80  C04C  F045         	movff	printLine@color,TFT_DrawString@color
  7942  001B84  C04D  F046         	movff	printLine@color+1,TFT_DrawString@color+1
  7943  001B88  0E00               	movlw	0
  7944  001B8A  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  7945  001B8C  0E00               	movlw	0
  7946  001B8E  6E47               	movwf	TFT_DrawString@bg^0,c
  7947  001B90  0E01               	movlw	1
  7948  001B92  6E49               	movwf	TFT_DrawString@size^0,c
  7949  001B94  ECC7  F00C         	call	_TFT_DrawString	;wreg free
  7950  001B98                     
  7951                           ;main.c: 135: if(consoleX > (240 - 35)) consoleX = 0;
  7952  001B98  0100               	movlb	0	; () banked
  7953  001B9A  51C5               	movf	(_consoleX+1)& (0+255),w,b
  7954  001B9C  E109               	bnz	u2800
  7955  001B9E  0ECE               	movlw	206
  7956  001BA0  5DC4               	subwf	_consoleX& (0+255),w,b
  7957  001BA2  A0D8               	btfss	status,0,c
  7958  001BA4  EFD6  F00D         	goto	u2801
  7959  001BA8  EFD8  F00D         	goto	u2800
  7960  001BAC                     u2801:
  7961  001BAC  EFDC  F00D         	goto	l95
  7962  001BB0                     u2800:
  7963  001BB0                     
  7964                           ; BSR set to: 0
  7965  001BB0  0E00               	movlw	0
  7966  001BB2  6FC5               	movwf	(_consoleX+1)& (0+255),b
  7967  001BB4  0E00               	movlw	0
  7968  001BB6  6FC4               	movwf	_consoleX& (0+255),b
  7969  001BB8                     l95:
  7970                           
  7971                           ; BSR set to: 0
  7972  001BB8  0012               	return		;funcret
  7973  001BBA                     __end_of_printLine:
  7974                           	opt callstack 0
  7975                           
  7976 ;; *************** function _TFT_DrawString *****************
  7977 ;; Defined at:
  7978 ;;		line 213 in file "TFT.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  x               2   62[COMRAM] unsigned int 
  7981 ;;  y               2   64[COMRAM] unsigned int 
  7982 ;;  str             2   66[COMRAM] PTR const unsigned char 
  7983 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateAutoDetect@zzzz(32), STR_26(23), STR_18(28), 
  7984 ;;		 -> STR_17(11), Ecg_ProcessHeartRate@heartrateString(5), loop@response_155(32), STR_14(19), 
  7985 ;;		 -> loop@response_152(32), STR_12(13), loop@zzzz_149(32), STR_10(16), 
  7986 ;;		 -> loop@response(32), STR_8(11), STR_7(13), STR_6(11), 
  7987 ;;		 -> STR_5(23), STR_4(25), loop@zzzz(32), 
  7988 ;;  color           2   68[COMRAM] unsigned int 
  7989 ;;  bg              2   70[COMRAM] unsigned int 
  7990 ;;  size            1   72[COMRAM] unsigned char 
  7991 ;; Auto vars:     Size  Location     Type
  7992 ;;		None
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8002 ;;      Params:        11       0       0       0       0       0       0       0       0
  8003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8005 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8006 ;;Total ram usage:       11 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:    7
  8009 ;; This function calls:
  8010 ;;		_TFT_DrawChar
  8011 ;; This function is called by:
  8012 ;;		_printLine
  8013 ;;		_Ecg_Background_Leads_Ok
  8014 ;;		_Ecg_Background_Leads_Failure
  8015 ;;		_Ecg_ProcessHeartRate
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text32
  8020  00198E                     __ptext32:
  8021                           	opt callstack 0
  8022  00198E                     _TFT_DrawString:
  8023                           	opt callstack 21
  8024  00198E                     
  8025                           ;TFT.c: 214: while(*str) {
  8026  00198E  EFF6  F00C         	goto	l3400
  8027  001992                     l3394:
  8028                           
  8029                           ;TFT.c: 215: TFT_DrawChar(x, y, *str, color, bg, size);
  8030  001992  C03F  F02A         	movff	TFT_DrawString@x,TFT_DrawChar@x
  8031  001996  C040  F02B         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  8032  00199A  C041  F02C         	movff	TFT_DrawString@y,TFT_DrawChar@y
  8033  00199E  C042  F02D         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  8034  0019A2  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  8035  0019A6  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  8036  0019AA  6AF8               	clrf	tblptru,c
  8037  0019AC  0E07               	movlw	(high __ramtop+-1)
  8038  0019AE  64F7               	cpfsgt	tblptrh,c
  8039  0019B0  D003               	bra	u2267
  8040  0019B2  0008               	tblrd		*
  8041  0019B4  50F5               	movf	tablat,w,c
  8042  0019B6  D005               	bra	u2260
  8043  0019B8                     u2267:
  8044  0019B8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8045  0019BC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8046  0019C0  50EF               	movf	indf0,w,c
  8047  0019C2                     u2260:
  8048  0019C2  6E2E               	movwf	TFT_DrawChar@c^0,c
  8049  0019C4  C045  F02F         	movff	TFT_DrawString@color,TFT_DrawChar@color
  8050  0019C8  C046  F030         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  8051  0019CC  C047  F031         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  8052  0019D0  C048  F032         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  8053  0019D4  C049  F033         	movff	TFT_DrawString@size,TFT_DrawChar@size
  8054  0019D8  EC05  F005         	call	_TFT_DrawChar	;wreg free
  8055  0019DC                     
  8056                           ;TFT.c: 216: y -= (6 * size);
  8057  0019DC  5049               	movf	TFT_DrawString@size^0,w,c
  8058  0019DE  0D06               	mullw	6
  8059  0019E0  50F3               	movf	243,w,c
  8060  0019E2  5E41               	subwf	TFT_DrawString@y^0,f,c
  8061  0019E4  50F4               	movf	244,w,c
  8062  0019E6  5A42               	subwfb	(TFT_DrawString@y+1)^0,f,c
  8063  0019E8                     
  8064                           ;TFT.c: 217: str++;
  8065  0019E8  4A43               	infsnz	TFT_DrawString@str^0,f,c
  8066  0019EA  2A44               	incf	(TFT_DrawString@str+1)^0,f,c
  8067  0019EC                     l3400:
  8068  0019EC  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  8069  0019F0  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  8070  0019F4  6AF8               	clrf	tblptru,c
  8071  0019F6  0E07               	movlw	(high __ramtop+-1)
  8072  0019F8  64F7               	cpfsgt	tblptrh,c
  8073  0019FA  D003               	bra	u2277
  8074  0019FC  0008               	tblrd		*
  8075  0019FE  50F5               	movf	tablat,w,c
  8076  001A00  D005               	bra	u2270
  8077  001A02                     u2277:
  8078  001A02  CFF6 FFE9          	movff	tblptrl,fsr0l
  8079  001A06  CFF7 FFEA          	movff	tblptrh,fsr0h
  8080  001A0A  50EF               	movf	indf0,w,c
  8081  001A0C                     u2270:
  8082  001A0C  0900               	iorlw	0
  8083  001A0E  A4D8               	btfss	status,2,c
  8084  001A10  EF0C  F00D         	goto	u2281
  8085  001A14  EF0E  F00D         	goto	u2280
  8086  001A18                     u2281:
  8087  001A18  EFC9  F00C         	goto	l3394
  8088  001A1C                     u2280:
  8089  001A1C  0012               	return		;funcret
  8090  001A1E                     __end_of_TFT_DrawString:
  8091                           	opt callstack 0
  8092                           
  8093 ;; *************** function _TFT_DrawChar *****************
  8094 ;; Defined at:
  8095 ;;		line 192 in file "TFT.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  x               2   41[COMRAM] unsigned int 
  8098 ;;  y               2   43[COMRAM] unsigned int 
  8099 ;;  c               1   45[COMRAM] unsigned char 
  8100 ;;  color           2   46[COMRAM] unsigned int 
  8101 ;;  bg              2   48[COMRAM] unsigned int 
  8102 ;;  size            1   50[COMRAM] unsigned char 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;  j               1   60[COMRAM] char 
  8105 ;;  line            1   55[COMRAM] unsigned char 
  8106 ;;  i               1   61[COMRAM] char 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8116 ;;      Params:        10       0       0       0       0       0       0       0       0
  8117 ;;      Locals:         7       0       0       0       0       0       0       0       0
  8118 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8119 ;;      Totals:        21       0       0       0       0       0       0       0       0
  8120 ;;Total ram usage:       21 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:    6
  8123 ;; This function calls:
  8124 ;;		_TFT_DrawFillRect
  8125 ;;		_TFT_DrawPixel
  8126 ;;		___wmul
  8127 ;; This function is called by:
  8128 ;;		_TFT_DrawString
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           	psect	text33
  8133  000A0A                     __ptext33:
  8134                           	opt callstack 0
  8135  000A0A                     _TFT_DrawChar:
  8136                           	opt callstack 21
  8137  000A0A                     
  8138                           ;TFT.c: 193: for(int8_t i=0; i<5; i++ ) {
  8139  000A0A  0E00               	movlw	0
  8140  000A0C  6E3E               	movwf	TFT_DrawChar@i^0,c
  8141  000A0E                     l3238:
  8142                           
  8143                           ;TFT.c: 194: uint8_t line = TFT_Font[c * 5 + i];
  8144  000A0E  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  8145  000A12  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  8146  000A14  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  8147  000A16  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  8148  000A18  502E               	movf	TFT_DrawChar@c^0,w,c
  8149  000A1A  0D05               	mullw	5
  8150  000A1C  0E5B               	movlw	low _TFT_Font
  8151  000A1E  6E36               	movwf	(??_TFT_DrawChar+2)^0,c
  8152  000A20  0E58               	movlw	high _TFT_Font
  8153  000A22  6E37               	movwf	(??_TFT_DrawChar+3)^0,c
  8154  000A24  50F3               	movf	243,w,c
  8155  000A26  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  8156  000A28  50F4               	movf	244,w,c
  8157  000A2A  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  8158  000A2C  5034               	movf	??_TFT_DrawChar^0,w,c
  8159  000A2E  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  8160  000A30  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  8161  000A32  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  8162  000A34  C036  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  8163  000A38  C037  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  8164  000A3C                     	if	0	;tblptru may be non-zero
  8165  000A3C                     	endif
  8166  000A3C                     	if	0	;tblptru may be non-zero
  8167  000A3C                     	endif
  8168  000A3C  0008               	tblrd		*
  8169  000A3E  CFF5 F038          	movff	tablat,TFT_DrawChar@line
  8170  000A42                     
  8171                           ;TFT.c: 195: for(int8_t j=0; j<8; j++, line >>= 1) {
  8172  000A42  0E00               	movlw	0
  8173  000A44  6E3D               	movwf	TFT_DrawChar@j^0,c
  8174  000A46                     l270:
  8175                           
  8176                           ;TFT.c: 196: if(line & 1) {
  8177  000A46  A038               	btfss	TFT_DrawChar@line^0,0,c
  8178  000A48  EF28  F005         	goto	u1951
  8179  000A4C  EF2A  F005         	goto	u1950
  8180  000A50                     u1951:
  8181  000A50  EF83  F005         	goto	l3252
  8182  000A54                     u1950:
  8183  000A54                     
  8184                           ;TFT.c: 197: if(size == 1) {
  8185  000A54  0433               	decf	TFT_DrawChar@size^0,w,c
  8186  000A56  A4D8               	btfss	status,2,c
  8187  000A58  EF30  F005         	goto	u1961
  8188  000A5C  EF32  F005         	goto	u1960
  8189  000A60                     u1961:
  8190  000A60  EF4D  F005         	goto	l3250
  8191  000A64                     u1960:
  8192  000A64                     
  8193                           ;TFT.c: 198: TFT_DrawPixel((x + j), (y - i), color);
  8194  000A64  502A               	movf	TFT_DrawChar@x^0,w,c
  8195  000A66  243D               	addwf	TFT_DrawChar@j^0,w,c
  8196  000A68  6E0D               	movwf	TFT_DrawPixel@x^0,c
  8197  000A6A  0E00               	movlw	0
  8198  000A6C  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  8199  000A6E  0EFF               	movlw	255
  8200  000A70  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  8201  000A72  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  8202  000A74  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  8203  000A78  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  8204  000A7A  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  8205  000A7C  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  8206  000A7E  5034               	movf	??_TFT_DrawChar^0,w,c
  8207  000A80  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  8208  000A82  6E0F               	movwf	TFT_DrawPixel@y^0,c
  8209  000A84  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  8210  000A86  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  8211  000A88  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  8212  000A8A  C02F  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  8213  000A8E  C030  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  8214  000A92  EC2E  F012         	call	_TFT_DrawPixel	;wreg free
  8215                           
  8216                           ;TFT.c: 199: } else {
  8217  000A96  EFE6  F005         	goto	l3260
  8218  000A9A                     l3250:
  8219                           
  8220                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  8221  000A9A  503D               	movf	TFT_DrawChar@j^0,w,c
  8222  000A9C  6E05               	movwf	___wmul@multiplier^0,c
  8223  000A9E  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8224  000AA0  BE05               	btfsc	___wmul@multiplier^0,7,c
  8225  000AA2  0606               	decf	(___wmul@multiplier+1)^0,f,c
  8226  000AA4  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  8227  000AA8  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  8228  000AAA  EC0C  F013         	call	___wmul	;wreg free
  8229  000AAE  502A               	movf	TFT_DrawChar@x^0,w,c
  8230  000AB0  2405               	addwf	?___wmul^0,w,c
  8231  000AB2  6E39               	movwf	_TFT_DrawChar$2152^0,c
  8232  000AB4  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  8233  000AB6  2006               	addwfc	(?___wmul+1)^0,w,c
  8234  000AB8  6E3A               	movwf	(_TFT_DrawChar$2152+1)^0,c
  8235                           
  8236                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  8237  000ABA  503E               	movf	TFT_DrawChar@i^0,w,c
  8238  000ABC  6E05               	movwf	___wmul@multiplier^0,c
  8239  000ABE  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8240  000AC0  BE05               	btfsc	___wmul@multiplier^0,7,c
  8241  000AC2  0606               	decf	(___wmul@multiplier+1)^0,f,c
  8242  000AC4  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  8243  000AC8  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  8244  000ACA  EC0C  F013         	call	___wmul	;wreg free
  8245  000ACE  5005               	movf	?___wmul^0,w,c
  8246  000AD0  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  8247  000AD2  6E3B               	movwf	_TFT_DrawChar$2153^0,c
  8248  000AD4  5006               	movf	(?___wmul+1)^0,w,c
  8249  000AD6  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  8250  000AD8  6E3C               	movwf	(_TFT_DrawChar$2153+1)^0,c
  8251                           
  8252                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  8253  000ADA  C039  F01C         	movff	_TFT_DrawChar$2152,TFT_DrawFillRect@x
  8254  000ADE  C03A  F01D         	movff	_TFT_DrawChar$2152+1,TFT_DrawFillRect@x+1
  8255  000AE2  C03B  F01E         	movff	_TFT_DrawChar$2153,TFT_DrawFillRect@y
  8256  000AE6  C03C  F01F         	movff	_TFT_DrawChar$2153+1,TFT_DrawFillRect@y+1
  8257  000AEA  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  8258  000AEE  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  8259  000AF0  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  8260  000AF4  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  8261  000AF6  C02F  F024         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  8262  000AFA  C030  F025         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  8263  000AFE  EC1D  F00F         	call	_TFT_DrawFillRect	;wreg free
  8264  000B02  EFE6  F005         	goto	l3260
  8265  000B06                     l3252:
  8266  000B06  502F               	movf	TFT_DrawChar@color^0,w,c
  8267  000B08  1831               	xorwf	TFT_DrawChar@bg^0,w,c
  8268  000B0A  E109               	bnz	u1970
  8269  000B0C  5030               	movf	(TFT_DrawChar@color+1)^0,w,c
  8270  000B0E  1832               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  8271  000B10  B4D8               	btfsc	status,2,c
  8272  000B12  EF8D  F005         	goto	u1971
  8273  000B16  EF8F  F005         	goto	u1970
  8274  000B1A                     u1971:
  8275  000B1A  EFE6  F005         	goto	l3260
  8276  000B1E                     u1970:
  8277  000B1E                     
  8278                           ;TFT.c: 203: if(size == 1) {
  8279  000B1E  0433               	decf	TFT_DrawChar@size^0,w,c
  8280  000B20  A4D8               	btfss	status,2,c
  8281  000B22  EF95  F005         	goto	u1981
  8282  000B26  EF97  F005         	goto	u1980
  8283  000B2A                     u1981:
  8284  000B2A  EFB2  F005         	goto	l3258
  8285  000B2E                     u1980:
  8286  000B2E                     
  8287                           ;TFT.c: 204: TFT_DrawPixel((x + j), (y - i), bg);
  8288  000B2E  502A               	movf	TFT_DrawChar@x^0,w,c
  8289  000B30  243D               	addwf	TFT_DrawChar@j^0,w,c
  8290  000B32  6E0D               	movwf	TFT_DrawPixel@x^0,c
  8291  000B34  0E00               	movlw	0
  8292  000B36  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  8293  000B38  0EFF               	movlw	255
  8294  000B3A  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  8295  000B3C  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  8296  000B3E  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  8297  000B42  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  8298  000B44  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  8299  000B46  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  8300  000B48  5034               	movf	??_TFT_DrawChar^0,w,c
  8301  000B4A  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  8302  000B4C  6E0F               	movwf	TFT_DrawPixel@y^0,c
  8303  000B4E  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  8304  000B50  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  8305  000B52  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  8306  000B54  C031  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  8307  000B58  C032  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  8308  000B5C  EC2E  F012         	call	_TFT_DrawPixel	;wreg free
  8309                           
  8310                           ;TFT.c: 205: } else {
  8311  000B60  EFE6  F005         	goto	l3260
  8312  000B64                     l3258:
  8313                           
  8314                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  8315  000B64  503D               	movf	TFT_DrawChar@j^0,w,c
  8316  000B66  6E05               	movwf	___wmul@multiplier^0,c
  8317  000B68  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8318  000B6A  BE05               	btfsc	___wmul@multiplier^0,7,c
  8319  000B6C  0606               	decf	(___wmul@multiplier+1)^0,f,c
  8320  000B6E  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  8321  000B72  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  8322  000B74  EC0C  F013         	call	___wmul	;wreg free
  8323  000B78  502A               	movf	TFT_DrawChar@x^0,w,c
  8324  000B7A  2405               	addwf	?___wmul^0,w,c
  8325  000B7C  6E39               	movwf	_TFT_DrawChar$2152^0,c
  8326  000B7E  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  8327  000B80  2006               	addwfc	(?___wmul+1)^0,w,c
  8328  000B82  6E3A               	movwf	(_TFT_DrawChar$2152+1)^0,c
  8329                           
  8330                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  8331  000B84  503E               	movf	TFT_DrawChar@i^0,w,c
  8332  000B86  6E05               	movwf	___wmul@multiplier^0,c
  8333  000B88  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8334  000B8A  BE05               	btfsc	___wmul@multiplier^0,7,c
  8335  000B8C  0606               	decf	(___wmul@multiplier+1)^0,f,c
  8336  000B8E  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  8337  000B92  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  8338  000B94  EC0C  F013         	call	___wmul	;wreg free
  8339  000B98  5005               	movf	?___wmul^0,w,c
  8340  000B9A  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  8341  000B9C  6E3B               	movwf	_TFT_DrawChar$2153^0,c
  8342  000B9E  5006               	movf	(?___wmul+1)^0,w,c
  8343  000BA0  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  8344  000BA2  6E3C               	movwf	(_TFT_DrawChar$2153+1)^0,c
  8345                           
  8346                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  8347  000BA4  C039  F01C         	movff	_TFT_DrawChar$2152,TFT_DrawFillRect@x
  8348  000BA8  C03A  F01D         	movff	_TFT_DrawChar$2152+1,TFT_DrawFillRect@x+1
  8349  000BAC  C03B  F01E         	movff	_TFT_DrawChar$2153,TFT_DrawFillRect@y
  8350  000BB0  C03C  F01F         	movff	_TFT_DrawChar$2153+1,TFT_DrawFillRect@y+1
  8351  000BB4  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  8352  000BB8  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  8353  000BBA  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  8354  000BBE  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  8355  000BC0  C031  F024         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  8356  000BC4  C032  F025         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  8357  000BC8  EC1D  F00F         	call	_TFT_DrawFillRect	;wreg free
  8358  000BCC                     l3260:
  8359  000BCC  2A3D               	incf	TFT_DrawChar@j^0,f,c
  8360  000BCE  90D8               	bcf	status,0,c
  8361  000BD0  3238               	rrcf	TFT_DrawChar@line^0,f,c
  8362  000BD2  503D               	movf	TFT_DrawChar@j^0,w,c
  8363  000BD4  0A80               	xorlw	128
  8364  000BD6  0F78               	addlw	-136
  8365  000BD8  A0D8               	btfss	status,0,c
  8366  000BDA  EFF1  F005         	goto	u1991
  8367  000BDE  EFF3  F005         	goto	u1990
  8368  000BE2                     u1991:
  8369  000BE2  EF23  F005         	goto	l270
  8370  000BE6                     u1990:
  8371  000BE6  2A3E               	incf	TFT_DrawChar@i^0,f,c
  8372  000BE8  503E               	movf	TFT_DrawChar@i^0,w,c
  8373  000BEA  0A80               	xorlw	128
  8374  000BEC  0F7B               	addlw	-133
  8375  000BEE  A0D8               	btfss	status,0,c
  8376  000BF0  EFFC  F005         	goto	u2001
  8377  000BF4  EFFE  F005         	goto	u2000
  8378  000BF8                     u2001:
  8379  000BF8  EF07  F005         	goto	l3238
  8380  000BFC                     u2000:
  8381  000BFC  0012               	return		;funcret
  8382  000BFE                     __end_of_TFT_DrawChar:
  8383                           	opt callstack 0
  8384                           
  8385 ;; *************** function _TFT_DrawPixel *****************
  8386 ;; Defined at:
  8387 ;;		line 94 in file "TFT.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  x               2   12[COMRAM] unsigned int 
  8390 ;;  y               2   14[COMRAM] unsigned int 
  8391 ;;  color           2   16[COMRAM] unsigned int 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8403 ;;      Params:         6       0       0       0       0       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8406 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8407 ;;Total ram usage:        6 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    3
  8410 ;; This function calls:
  8411 ;;		_TFT_WriteRegister
  8412 ;; This function is called by:
  8413 ;;		_TFT_DrawLine
  8414 ;;		_TFT_DrawChar
  8415 ;;		_TFT_DrawBitmap
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text34
  8420  00245C                     __ptext34:
  8421                           	opt callstack 0
  8422  00245C                     _TFT_DrawPixel:
  8423                           	opt callstack 23
  8424  00245C                     
  8425                           ;TFT.c: 95: TFT_WriteRegister(0x0200, x);
  8426  00245C  0E02               	movlw	2
  8427  00245E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8428  002460  0E00               	movlw	0
  8429  002462  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8430  002464  C00D  F007         	movff	TFT_DrawPixel@x,TFT_WriteRegister@data
  8431  002468  C00E  F008         	movff	TFT_DrawPixel@x+1,TFT_WriteRegister@data+1
  8432  00246C  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8433                           
  8434                           ;TFT.c: 96: TFT_WriteRegister(0x0201, y);
  8435  002470  0E02               	movlw	2
  8436  002472  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8437  002474  0E01               	movlw	1
  8438  002476  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8439  002478  C00F  F007         	movff	TFT_DrawPixel@y,TFT_WriteRegister@data
  8440  00247C  C010  F008         	movff	TFT_DrawPixel@y+1,TFT_WriteRegister@data+1
  8441  002480  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8442                           
  8443                           ;TFT.c: 97: TFT_WriteRegister(0x0202, color);
  8444  002484  0E02               	movlw	2
  8445  002486  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8446  002488  0E02               	movlw	2
  8447  00248A  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8448  00248C  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  8449  002490  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  8450  002494  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8451  002498  0012               	return		;funcret
  8452  00249A                     __end_of_TFT_DrawPixel:
  8453                           	opt callstack 0
  8454                           
  8455 ;; *************** function _TFT_DrawFillRect *****************
  8456 ;; Defined at:
  8457 ;;		line 138 in file "TFT.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  x               2   27[COMRAM] unsigned int 
  8460 ;;  y               2   29[COMRAM] unsigned int 
  8461 ;;  w               2   31[COMRAM] unsigned int 
  8462 ;;  h               2   33[COMRAM] unsigned int 
  8463 ;;  color           2   35[COMRAM] unsigned int 
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;		None
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      void 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8475 ;;      Params:        10       0       0       0       0       0       0       0       0
  8476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8477 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8478 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8479 ;;Total ram usage:       14 bytes
  8480 ;; Hardware stack levels used:    1
  8481 ;; Hardware stack levels required when called:    5
  8482 ;; This function calls:
  8483 ;;		_TFT_Flood
  8484 ;;		_TFT_FullScreen
  8485 ;;		_TFT_SetAddrWindow
  8486 ;;		___wmul
  8487 ;; This function is called by:
  8488 ;;		_printLine
  8489 ;;		_TFT_DrawChar
  8490 ;;		_Ecg_ProcessHeartbeat
  8491 ;;		_Ecg_Draw
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text35
  8496  001E3A                     __ptext35:
  8497                           	opt callstack 0
  8498  001E3A                     _TFT_DrawFillRect:
  8499                           	opt callstack 21
  8500  001E3A                     
  8501                           ;TFT.c: 139: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h -1));
  8502  001E3A  C01C  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  8503  001E3E  C01D  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  8504  001E42  C01E  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  8505  001E46  C01F  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  8506  001E4A  5020               	movf	TFT_DrawFillRect@w^0,w,c
  8507  001E4C  241C               	addwf	TFT_DrawFillRect@x^0,w,c
  8508  001E4E  6E26               	movwf	??_TFT_DrawFillRect^0,c
  8509  001E50  5021               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  8510  001E52  201D               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  8511  001E54  6E27               	movwf	(??_TFT_DrawFillRect+1)^0,c
  8512  001E56  0EFF               	movlw	255
  8513  001E58  2426               	addwf	??_TFT_DrawFillRect^0,w,c
  8514  001E5A  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  8515  001E5C  0EFF               	movlw	255
  8516  001E5E  2027               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  8517  001E60  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  8518  001E62  5022               	movf	TFT_DrawFillRect@h^0,w,c
  8519  001E64  241E               	addwf	TFT_DrawFillRect@y^0,w,c
  8520  001E66  6E28               	movwf	(??_TFT_DrawFillRect+2)^0,c
  8521  001E68  5023               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  8522  001E6A  201F               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  8523  001E6C  6E29               	movwf	(??_TFT_DrawFillRect+3)^0,c
  8524  001E6E  0EFF               	movlw	255
  8525  001E70  2428               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  8526  001E72  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  8527  001E74  0EFF               	movlw	255
  8528  001E76  2029               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  8529  001E78  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  8530  001E7A  ECA4  F00E         	call	_TFT_SetAddrWindow	;wreg free
  8531  001E7E                     
  8532                           ;TFT.c: 140: TFT_Flood(color, (w * h));
  8533  001E7E  C024  F00D         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  8534  001E82  C025  F00E         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  8535  001E86  C020  F005         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  8536  001E8A  C021  F006         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  8537  001E8E  C022  F007         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  8538  001E92  C023  F008         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  8539  001E96  EC0C  F013         	call	___wmul	;wreg free
  8540  001E9A  C005  F00F         	movff	?___wmul,TFT_Flood@len
  8541  001E9E  C006  F010         	movff	?___wmul+1,TFT_Flood@len+1
  8542  001EA2  6A11               	clrf	(TFT_Flood@len+2)^0,c
  8543  001EA4  6A12               	clrf	(TFT_Flood@len+3)^0,c
  8544  001EA6  ECF3  F006         	call	_TFT_Flood	;wreg free
  8545  001EAA                     
  8546                           ;TFT.c: 141: TFT_FullScreen();
  8547  001EAA  EC1F  F013         	call	_TFT_FullScreen	;wreg free
  8548  001EAE  0012               	return		;funcret
  8549  001EB0                     __end_of_TFT_DrawFillRect:
  8550                           	opt callstack 0
  8551                           
  8552 ;; *************** function ___wmul *****************
  8553 ;; Defined at:
  8554 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  multiplier      2    4[COMRAM] unsigned int 
  8557 ;;  multiplicand    2    6[COMRAM] unsigned int 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  product         2    8[COMRAM] unsigned int 
  8560 ;; Return value:  Size  Location     Type
  8561 ;;                  2    4[COMRAM] unsigned int 
  8562 ;; Registers used:
  8563 ;;		wreg, status,2, status,0, prodl, prodh
  8564 ;; Tracked objects:
  8565 ;;		On entry : 0/0
  8566 ;;		On exit  : 0/0
  8567 ;;		Unchanged: 0/0
  8568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8569 ;;      Params:         4       0       0       0       0       0       0       0       0
  8570 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8572 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8573 ;;Total ram usage:        6 bytes
  8574 ;; Hardware stack levels used:    1
  8575 ;; Hardware stack levels required when called:    2
  8576 ;; This function calls:
  8577 ;;		Nothing
  8578 ;; This function is called by:
  8579 ;;		_TFT_DrawFillRect
  8580 ;;		_TFT_DrawChar
  8581 ;;		_sprintf
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584                           
  8585                           	psect	text36
  8586  002618                     __ptext36:
  8587                           	opt callstack 0
  8588  002618                     ___wmul:
  8589                           	opt callstack 26
  8590  002618  5005               	movf	___wmul@multiplier^0,w,c
  8591  00261A  0207               	mulwf	___wmul@multiplicand^0,c
  8592  00261C  CFF3 F009          	movff	prodl,___wmul@product
  8593  002620  CFF4 F00A          	movff	prodh,___wmul@product+1
  8594  002624  5005               	movf	___wmul@multiplier^0,w,c
  8595  002626  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  8596  002628  50F3               	movf	243,w,c
  8597  00262A  260A               	addwf	(___wmul@product+1)^0,f,c
  8598  00262C  5006               	movf	(___wmul@multiplier+1)^0,w,c
  8599  00262E  0207               	mulwf	___wmul@multiplicand^0,c
  8600  002630  50F3               	movf	243,w,c
  8601  002632  260A               	addwf	(___wmul@product+1)^0,f,c
  8602  002634  C009  F005         	movff	___wmul@product,?___wmul
  8603  002638  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  8604  00263C  0012               	return		;funcret
  8605  00263E                     __end_of___wmul:
  8606                           	opt callstack 0
  8607                           
  8608 ;; *************** function _TFT_FullScreen *****************
  8609 ;; Defined at:
  8610 ;;		line 68 in file "TFT.c"
  8611 ;; Parameters:    Size  Location     Type
  8612 ;;		None
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      void 
  8617 ;; Registers used:
  8618 ;;		wreg, status,2, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8624 ;;      Params:         0       0       0       0       0       0       0       0       0
  8625 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8627 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8628 ;;Total ram usage:        0 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    4
  8631 ;; This function calls:
  8632 ;;		_TFT_SetAddrWindow
  8633 ;; This function is called by:
  8634 ;;		_TFT_Init
  8635 ;;		_TFT_DrawFillRect
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           	psect	text37
  8640  00263E                     __ptext37:
  8641                           	opt callstack 0
  8642  00263E                     _TFT_FullScreen:
  8643                           	opt callstack 21
  8644  00263E                     
  8645                           ;TFT.c: 69: TFT_SetAddrWindow(0, 0, 240 - 1, 400 - 1);
  8646  00263E  0E00               	movlw	0
  8647  002640  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  8648  002642  0E00               	movlw	0
  8649  002644  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  8650  002646  0E00               	movlw	0
  8651  002648  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  8652  00264A  0E00               	movlw	0
  8653  00264C  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  8654  00264E  0E00               	movlw	0
  8655  002650  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  8656  002652  0EEF               	movlw	239
  8657  002654  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  8658  002656  0E01               	movlw	1
  8659  002658  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  8660  00265A  0E8F               	movlw	143
  8661  00265C  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  8662  00265E  ECA4  F00E         	call	_TFT_SetAddrWindow	;wreg free
  8663  002662  0012               	return		;funcret
  8664  002664                     __end_of_TFT_FullScreen:
  8665                           	opt callstack 0
  8666                           
  8667 ;; *************** function _TFT_SetAddrWindow *****************
  8668 ;; Defined at:
  8669 ;;		line 56 in file "TFT.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  x1              2   12[COMRAM] unsigned int 
  8672 ;;  y1              2   14[COMRAM] unsigned int 
  8673 ;;  x2              2   16[COMRAM] unsigned int 
  8674 ;;  y2              2   18[COMRAM] unsigned int 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2, cstack
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8686 ;;      Params:         8       0       0       0       0       0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8689 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8690 ;;Total ram usage:        8 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    3
  8693 ;; This function calls:
  8694 ;;		_TFT_WriteRegister
  8695 ;; This function is called by:
  8696 ;;		_TFT_FullScreen
  8697 ;;		_TFT_DrawFillRect
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           	psect	text38
  8702  001D48                     __ptext38:
  8703                           	opt callstack 0
  8704  001D48                     _TFT_SetAddrWindow:
  8705                           	opt callstack 22
  8706  001D48                     
  8707                           ;TFT.c: 58: TFT_WriteRegister(0x0210, x1);
  8708  001D48  0E02               	movlw	2
  8709  001D4A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8710  001D4C  0E10               	movlw	16
  8711  001D4E  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8712  001D50  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  8713  001D54  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  8714  001D58  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8715                           
  8716                           ;TFT.c: 59: TFT_WriteRegister(0x0211, x2);
  8717  001D5C  0E02               	movlw	2
  8718  001D5E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8719  001D60  0E11               	movlw	17
  8720  001D62  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8721  001D64  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  8722  001D68  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  8723  001D6C  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8724                           
  8725                           ;TFT.c: 60: TFT_WriteRegister(0x0212, y1);
  8726  001D70  0E02               	movlw	2
  8727  001D72  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8728  001D74  0E12               	movlw	18
  8729  001D76  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8730  001D78  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  8731  001D7C  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  8732  001D80  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8733                           
  8734                           ;TFT.c: 61: TFT_WriteRegister(0x0213, y2);
  8735  001D84  0E02               	movlw	2
  8736  001D86  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8737  001D88  0E13               	movlw	19
  8738  001D8A  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8739  001D8C  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  8740  001D90  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  8741  001D94  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8742                           
  8743                           ;TFT.c: 64: TFT_WriteRegister(0x0200, x1);
  8744  001D98  0E02               	movlw	2
  8745  001D9A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8746  001D9C  0E00               	movlw	0
  8747  001D9E  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8748  001DA0  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  8749  001DA4  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  8750  001DA8  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8751                           
  8752                           ;TFT.c: 65: TFT_WriteRegister(0x0201, y2);
  8753  001DAC  0E02               	movlw	2
  8754  001DAE  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8755  001DB0  0E01               	movlw	1
  8756  001DB2  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8757  001DB4  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  8758  001DB8  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  8759  001DBC  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8760  001DC0  0012               	return		;funcret
  8761  001DC2                     __end_of_TFT_SetAddrWindow:
  8762                           	opt callstack 0
  8763                           
  8764 ;; *************** function _TFT_Flood *****************
  8765 ;; Defined at:
  8766 ;;		line 144 in file "TFT.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;  color           2   12[COMRAM] unsigned int 
  8769 ;;  len             4   14[COMRAM] unsigned long 
  8770 ;; Auto vars:     Size  Location     Type
  8771 ;;  blocks          2   22[COMRAM] unsigned int 
  8772 ;;  color_lo        1   26[COMRAM] unsigned char 
  8773 ;;  color_hi        1   25[COMRAM] unsigned char 
  8774 ;;  i               1   24[COMRAM] unsigned char 
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  1    wreg      void 
  8777 ;; Registers used:
  8778 ;;		wreg, status,2, status,0, cstack
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8784 ;;      Params:         6       0       0       0       0       0       0       0       0
  8785 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8786 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8787 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8788 ;;Total ram usage:       15 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:    3
  8791 ;; This function calls:
  8792 ;;		_TFT_WriteRegister
  8793 ;; This function is called by:
  8794 ;;		_TFT_DrawFillRect
  8795 ;;		_TFT_FillScreen
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           	psect	text39
  8800  000DE6                     __ptext39:
  8801                           	opt callstack 0
  8802  000DE6                     _TFT_Flood:
  8803                           	opt callstack 22
  8804  000DE6                     
  8805                           ;TFT.c: 145: uint16_t blocks;;TFT.c: 146: uint8_t i;;TFT.c: 147: uint8_t color_hi = colo
      +                          r >> 8;
  8806  000DE6  500E               	movf	(TFT_Flood@color+1)^0,w,c
  8807  000DE8  6E1A               	movwf	TFT_Flood@color_hi^0,c
  8808  000DEA                     
  8809                           ;TFT.c: 148: uint8_t color_lo = color;
  8810  000DEA  C00D  F01B         	movff	TFT_Flood@color,TFT_Flood@color_lo
  8811  000DEE                     
  8812                           ;TFT.c: 151: TFT_WriteRegister(0x0202, color);
  8813  000DEE  0E02               	movlw	2
  8814  000DF0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8815  000DF2  0E02               	movlw	2
  8816  000DF4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8817  000DF6  C00D  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  8818  000DFA  C00E  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  8819  000DFE  ECEC  F011         	call	_TFT_WriteRegister	;wreg free
  8820  000E02                     
  8821                           ;TFT.c: 152: len--;
  8822  000E02  060F               	decf	TFT_Flood@len^0,f,c
  8823  000E04  0E00               	movlw	0
  8824  000E06  5A10               	subwfb	(TFT_Flood@len+1)^0,f,c
  8825  000E08  5A11               	subwfb	(TFT_Flood@len+2)^0,f,c
  8826  000E0A  5A12               	subwfb	(TFT_Flood@len+3)^0,f,c
  8827  000E0C                     
  8828                           ;TFT.c: 156: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  8829  000E0C  9082               	bcf	130,0,c	;volatile
  8830  000E0E  F000               	nop		;# 
  8831  000E10                     
  8832                           ;TFT.c: 157: blocks = (uint16_t)(len / 4);
  8833  000E10  C00F  F013         	movff	TFT_Flood@len,??_TFT_Flood
  8834  000E14  C010  F014         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  8835  000E18  C011  F015         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  8836  000E1C  C012  F016         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  8837  000E20  0E03               	movlw	3
  8838  000E22  EF18  F007         	goto	u1780
  8839  000E26                     u1785:
  8840  000E26  90D8               	bcf	status,0,c
  8841  000E28  3216               	rrcf	(??_TFT_Flood+3)^0,f,c
  8842  000E2A  3215               	rrcf	(??_TFT_Flood+2)^0,f,c
  8843  000E2C  3214               	rrcf	(??_TFT_Flood+1)^0,f,c
  8844  000E2E  3213               	rrcf	??_TFT_Flood^0,f,c
  8845  000E30                     u1780:
  8846  000E30  2EE8               	decfsz	wreg,f,c
  8847  000E32  EF13  F007         	goto	u1785
  8848  000E36  C013  F017         	movff	??_TFT_Flood,TFT_Flood@blocks
  8849  000E3A  C014  F018         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  8850  000E3E                     
  8851                           ;TFT.c: 158: if(color_hi == color_lo) {
  8852  000E3E  501B               	movf	TFT_Flood@color_lo^0,w,c
  8853  000E40  181A               	xorwf	TFT_Flood@color_hi^0,w,c
  8854  000E42  A4D8               	btfss	status,2,c
  8855  000E44  EF26  F007         	goto	u1791
  8856  000E48  EF28  F007         	goto	u1790
  8857  000E4C                     u1791:
  8858  000E4C  EF8D  F007         	goto	l3154
  8859  000E50                     u1790:
  8860  000E50  EF42  F007         	goto	l3148
  8861  000E54                     l247:
  8862                           
  8863                           ;TFT.c: 160: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8864  000E54  9A80               	bcf	128,5,c	;volatile
  8865  000E56  F000               	nop		;# 
  8866  000E58  8A80               	bsf	128,5,c	;volatile
  8867  000E5A  9A80               	bcf	128,5,c	;volatile
  8868  000E5C  F000               	nop		;# 
  8869  000E5E  8A80               	bsf	128,5,c	;volatile
  8870                           
  8871                           ;TFT.c: 161: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8872  000E60  9A80               	bcf	128,5,c	;volatile
  8873  000E62  F000               	nop		;# 
  8874  000E64  8A80               	bsf	128,5,c	;volatile
  8875  000E66  9A80               	bcf	128,5,c	;volatile
  8876  000E68  F000               	nop		;# 
  8877  000E6A  8A80               	bsf	128,5,c	;volatile
  8878                           
  8879                           ;TFT.c: 162: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8880  000E6C  9A80               	bcf	128,5,c	;volatile
  8881  000E6E  F000               	nop		;# 
  8882  000E70  8A80               	bsf	128,5,c	;volatile
  8883  000E72  9A80               	bcf	128,5,c	;volatile
  8884  000E74  F000               	nop		;# 
  8885  000E76  8A80               	bsf	128,5,c	;volatile
  8886                           
  8887                           ;TFT.c: 163: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8888  000E78  9A80               	bcf	128,5,c	;volatile
  8889  000E7A  F000               	nop		;# 
  8890  000E7C  8A80               	bsf	128,5,c	;volatile
  8891  000E7E  9A80               	bcf	128,5,c	;volatile
  8892  000E80  F000               	nop		;# 
  8893  000E82  8A80               	bsf	128,5,c	;volatile
  8894  000E84                     l3148:
  8895  000E84  0617               	decf	TFT_Flood@blocks^0,f,c
  8896  000E86  A0D8               	btfss	status,0,c
  8897  000E88  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  8898  000E8A  2817               	incf	TFT_Flood@blocks^0,w,c
  8899  000E8C  E106               	bnz	u1801
  8900  000E8E  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  8901  000E90  A4D8               	btfss	status,2,c
  8902  000E92  EF4D  F007         	goto	u1801
  8903  000E96  EF4F  F007         	goto	u1800
  8904  000E9A                     u1801:
  8905  000E9A  EF2A  F007         	goto	l247
  8906  000E9E                     u1800:
  8907  000E9E                     
  8908                           ;TFT.c: 164: };TFT.c: 165: for(i = (uint8_t)len & 3; i--; ) {
  8909  000E9E  500F               	movf	TFT_Flood@len^0,w,c
  8910  000EA0  0B03               	andlw	3
  8911  000EA2  6E19               	movwf	TFT_Flood@i^0,c
  8912  000EA4  EF5A  F007         	goto	l3152
  8913  000EA8                     l250:
  8914                           
  8915                           ;TFT.c: 166: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8916  000EA8  9A80               	bcf	128,5,c	;volatile
  8917  000EAA  F000               	nop		;# 
  8918  000EAC  8A80               	bsf	128,5,c	;volatile
  8919  000EAE  9A80               	bcf	128,5,c	;volatile
  8920  000EB0  F000               	nop		;# 
  8921  000EB2  8A80               	bsf	128,5,c	;volatile
  8922  000EB4                     l3152:
  8923  000EB4  0619               	decf	TFT_Flood@i^0,f,c
  8924  000EB6  2819               	incf	TFT_Flood@i^0,w,c
  8925  000EB8  A4D8               	btfss	status,2,c
  8926  000EBA  EF61  F007         	goto	u1811
  8927  000EBE  EF63  F007         	goto	u1810
  8928  000EC2                     u1811:
  8929  000EC2  EF54  F007         	goto	l250
  8930  000EC6                     u1810:
  8931  000EC6  EFB2  F007         	goto	l252
  8932  000ECA                     l254:
  8933                           
  8934                           ;TFT.c: 170: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8935  000ECA  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8936  000ECE  9A80               	bcf	128,5,c	;volatile
  8937  000ED0  F000               	nop		;# 
  8938  000ED2  8A80               	bsf	128,5,c	;volatile
  8939  000ED4  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8940  000ED8  9A80               	bcf	128,5,c	;volatile
  8941  000EDA  F000               	nop		;# 
  8942  000EDC  8A80               	bsf	128,5,c	;volatile
  8943                           
  8944                           ;TFT.c: 171: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8945  000EDE  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8946  000EE2  9A80               	bcf	128,5,c	;volatile
  8947  000EE4  F000               	nop		;# 
  8948  000EE6  8A80               	bsf	128,5,c	;volatile
  8949  000EE8  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8950  000EEC  9A80               	bcf	128,5,c	;volatile
  8951  000EEE  F000               	nop		;# 
  8952  000EF0  8A80               	bsf	128,5,c	;volatile
  8953                           
  8954                           ;TFT.c: 172: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8955  000EF2  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8956  000EF6  9A80               	bcf	128,5,c	;volatile
  8957  000EF8  F000               	nop		;# 
  8958  000EFA  8A80               	bsf	128,5,c	;volatile
  8959  000EFC  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8960  000F00  9A80               	bcf	128,5,c	;volatile
  8961  000F02  F000               	nop		;# 
  8962  000F04  8A80               	bsf	128,5,c	;volatile
  8963                           
  8964                           ;TFT.c: 173: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8965  000F06  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8966  000F0A  9A80               	bcf	128,5,c	;volatile
  8967  000F0C  F000               	nop		;# 
  8968  000F0E  8A80               	bsf	128,5,c	;volatile
  8969  000F10  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8970  000F14  9A80               	bcf	128,5,c	;volatile
  8971  000F16  F000               	nop		;# 
  8972  000F18  8A80               	bsf	128,5,c	;volatile
  8973  000F1A                     l3154:
  8974  000F1A  0617               	decf	TFT_Flood@blocks^0,f,c
  8975  000F1C  A0D8               	btfss	status,0,c
  8976  000F1E  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  8977  000F20  2817               	incf	TFT_Flood@blocks^0,w,c
  8978  000F22  E106               	bnz	u1821
  8979  000F24  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  8980  000F26  A4D8               	btfss	status,2,c
  8981  000F28  EF98  F007         	goto	u1821
  8982  000F2C  EF9A  F007         	goto	u1820
  8983  000F30                     u1821:
  8984  000F30  EF65  F007         	goto	l254
  8985  000F34                     u1820:
  8986  000F34                     
  8987                           ;TFT.c: 174: };TFT.c: 175: for(i = (uint8_t)len & 3; i--; ) {
  8988  000F34  500F               	movf	TFT_Flood@len^0,w,c
  8989  000F36  0B03               	andlw	3
  8990  000F38  6E19               	movwf	TFT_Flood@i^0,c
  8991  000F3A  EFA9  F007         	goto	l3158
  8992  000F3E                     l257:
  8993                           
  8994                           ;TFT.c: 176: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8995  000F3E  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8996  000F42  9A80               	bcf	128,5,c	;volatile
  8997  000F44  F000               	nop		;# 
  8998  000F46  8A80               	bsf	128,5,c	;volatile
  8999  000F48  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9000  000F4C  9A80               	bcf	128,5,c	;volatile
  9001  000F4E  F000               	nop		;# 
  9002  000F50  8A80               	bsf	128,5,c	;volatile
  9003  000F52                     l3158:
  9004  000F52  0619               	decf	TFT_Flood@i^0,f,c
  9005  000F54  2819               	incf	TFT_Flood@i^0,w,c
  9006  000F56  A4D8               	btfss	status,2,c
  9007  000F58  EFB0  F007         	goto	u1831
  9008  000F5C  EFB2  F007         	goto	u1830
  9009  000F60                     u1831:
  9010  000F60  EF9F  F007         	goto	l257
  9011  000F64                     u1830:
  9012  000F64                     l252:
  9013                           
  9014                           ;TFT.c: 177: };TFT.c: 178: };TFT.c: 179: PORTCbits.RC0 = 1;;
  9015  000F64  8082               	bsf	130,0,c	;volatile
  9016  000F66  0012               	return		;funcret
  9017  000F68                     __end_of_TFT_Flood:
  9018                           	opt callstack 0
  9019                           
  9020 ;; *************** function _TFT_WriteRegister *****************
  9021 ;; Defined at:
  9022 ;;		line 12 in file "TFT.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  reg             2    4[COMRAM] unsigned int 
  9025 ;;  data            2    6[COMRAM] unsigned int 
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  l               1   11[COMRAM] unsigned char 
  9028 ;;  h               1   10[COMRAM] unsigned char 
  9029 ;;  l               1    9[COMRAM] unsigned char 
  9030 ;;  h               1    8[COMRAM] unsigned char 
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		wreg, status,2
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 0/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9040 ;;      Params:         4       0       0       0       0       0       0       0       0
  9041 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9043 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9044 ;;Total ram usage:        8 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:    2
  9047 ;; This function calls:
  9048 ;;		Nothing
  9049 ;; This function is called by:
  9050 ;;		_TFT_SetAddrWindow
  9051 ;;		_TFT_Init
  9052 ;;		_TFT_DrawPixel
  9053 ;;		_TFT_Flood
  9054 ;;		_TFT_FillScreen
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           	psect	text40
  9059  0023D8                     __ptext40:
  9060                           	opt callstack 0
  9061  0023D8                     _TFT_WriteRegister:
  9062                           	opt callstack 23
  9063  0023D8                     
  9064                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  9065  0023D8  9082               	bcf	130,0,c	;volatile
  9066  0023DA  F000               	nop		;# 
  9067                           
  9068                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  9069  0023DC  9282               	bcf	130,1,c	;volatile
  9070  0023DE  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
  9071  0023E0  6E09               	movwf	TFT_WriteRegister@h^0,c
  9072  0023E2  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
  9073  0023E6  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
  9074  0023EA  9A80               	bcf	128,5,c	;volatile
  9075  0023EC  F000               	nop		;# 
  9076  0023EE  8A80               	bsf	128,5,c	;volatile
  9077  0023F0  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
  9078  0023F4  9A80               	bcf	128,5,c	;volatile
  9079  0023F6  F000               	nop		;# 
  9080  0023F8  8A80               	bsf	128,5,c	;volatile
  9081  0023FA                     
  9082                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  9083  0023FA  8282               	bsf	130,1,c	;volatile
  9084  0023FC  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
  9085  0023FE  6E0B               	movwf	TFT_WriteRegister@h_724^0,c
  9086  002400  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_725
  9087  002404  C00B  FF81         	movff	TFT_WriteRegister@h_724,3969	;volatile
  9088  002408  9A80               	bcf	128,5,c	;volatile
  9089  00240A  F000               	nop		;# 
  9090  00240C  8A80               	bsf	128,5,c	;volatile
  9091  00240E  C00C  FF81         	movff	TFT_WriteRegister@l_725,3969	;volatile
  9092  002412  9A80               	bcf	128,5,c	;volatile
  9093  002414  F000               	nop		;# 
  9094  002416  8A80               	bsf	128,5,c	;volatile
  9095  002418                     
  9096                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
  9097  002418  8082               	bsf	130,0,c	;volatile
  9098  00241A  0012               	return		;funcret
  9099  00241C                     __end_of_TFT_WriteRegister:
  9100                           	opt callstack 0
  9101                           
  9102 ;; *************** function _EUSART_BaudRateSet *****************
  9103 ;; Defined at:
  9104 ;;		line 41 in file "EUSART.c"
  9105 ;; Parameters:    Size  Location     Type
  9106 ;;  baudRate        4   17[COMRAM] const unsigned long 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;  tmp             4   25[COMRAM] unsigned long 
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, status,2, status,0, cstack
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9118 ;;      Params:         4       0       0       0       0       0       0       0       0
  9119 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9120 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9121 ;;      Totals:        12       0       0       0       0       0       0       0       0
  9122 ;;Total ram usage:       12 bytes
  9123 ;; Hardware stack levels used:    1
  9124 ;; Hardware stack levels required when called:    3
  9125 ;; This function calls:
  9126 ;;		___lldiv
  9127 ;; This function is called by:
  9128 ;;		_A6_BaudRateSet
  9129 ;;		_A6_BaudRateAutoDetect
  9130 ;; This function uses a non-reentrant model
  9131 ;;
  9132                           
  9133                           	psect	text41
  9134  001C42                     __ptext41:
  9135                           	opt callstack 0
  9136  001C42                     _EUSART_BaudRateSet:
  9137                           	opt callstack 25
  9138  001C42                     
  9139                           ;EUSART.c: 42: TXSTAbits.SYNC = 0;
  9140  001C42  98AC               	bcf	172,4,c	;volatile
  9141                           
  9142                           ;EUSART.c: 43: TXSTAbits.BRGH = 1;
  9143  001C44  84AC               	bsf	172,2,c	;volatile
  9144                           
  9145                           ;EUSART.c: 44: BAUDCONbits.BRG16 = 1;
  9146  001C46  86B8               	bsf	184,3,c	;volatile
  9147  001C48                     
  9148                           ;EUSART.c: 46: uint32_t tmp = (48000000 / baudRate);
  9149  001C48  0E00               	movlw	0
  9150  001C4A  6E05               	movwf	___lldiv@dividend^0,c
  9151  001C4C  0E6C               	movlw	108
  9152  001C4E  6E06               	movwf	(___lldiv@dividend+1)^0,c
  9153  001C50  0EDC               	movlw	220
  9154  001C52  6E07               	movwf	(___lldiv@dividend+2)^0,c
  9155  001C54  0E02               	movlw	2
  9156  001C56  6E08               	movwf	(___lldiv@dividend+3)^0,c
  9157  001C58  C012  F009         	movff	EUSART_BaudRateSet@baudRate,___lldiv@divisor
  9158  001C5C  C013  F00A         	movff	EUSART_BaudRateSet@baudRate+1,___lldiv@divisor+1
  9159  001C60  C014  F00B         	movff	EUSART_BaudRateSet@baudRate+2,___lldiv@divisor+2
  9160  001C64  C015  F00C         	movff	EUSART_BaudRateSet@baudRate+3,___lldiv@divisor+3
  9161  001C68  EC75  F00C         	call	___lldiv	;wreg free
  9162  001C6C  C005  F01A         	movff	?___lldiv,EUSART_BaudRateSet@tmp
  9163  001C70  C006  F01B         	movff	?___lldiv+1,EUSART_BaudRateSet@tmp+1
  9164  001C74  C007  F01C         	movff	?___lldiv+2,EUSART_BaudRateSet@tmp+2
  9165  001C78  C008  F01D         	movff	?___lldiv+3,EUSART_BaudRateSet@tmp+3
  9166  001C7C                     
  9167                           ;EUSART.c: 47: tmp = tmp / 4;
  9168  001C7C  C01A  F016         	movff	EUSART_BaudRateSet@tmp,??_EUSART_BaudRateSet
  9169  001C80  C01B  F017         	movff	EUSART_BaudRateSet@tmp+1,??_EUSART_BaudRateSet+1
  9170  001C84  C01C  F018         	movff	EUSART_BaudRateSet@tmp+2,??_EUSART_BaudRateSet+2
  9171  001C88  C01D  F019         	movff	EUSART_BaudRateSet@tmp+3,??_EUSART_BaudRateSet+3
  9172  001C8C  0E03               	movlw	3
  9173  001C8E  EF4E  F00E         	goto	u2910
  9174  001C92                     u2915:
  9175  001C92  90D8               	bcf	status,0,c
  9176  001C94  3219               	rrcf	(??_EUSART_BaudRateSet+3)^0,f,c
  9177  001C96  3218               	rrcf	(??_EUSART_BaudRateSet+2)^0,f,c
  9178  001C98  3217               	rrcf	(??_EUSART_BaudRateSet+1)^0,f,c
  9179  001C9A  3216               	rrcf	??_EUSART_BaudRateSet^0,f,c
  9180  001C9C                     u2910:
  9181  001C9C  2EE8               	decfsz	wreg,f,c
  9182  001C9E  EF49  F00E         	goto	u2915
  9183  001CA2  C016  F01A         	movff	??_EUSART_BaudRateSet,EUSART_BaudRateSet@tmp
  9184  001CA6  C017  F01B         	movff	??_EUSART_BaudRateSet+1,EUSART_BaudRateSet@tmp+1
  9185  001CAA  C018  F01C         	movff	??_EUSART_BaudRateSet+2,EUSART_BaudRateSet@tmp+2
  9186  001CAE  C019  F01D         	movff	??_EUSART_BaudRateSet+3,EUSART_BaudRateSet@tmp+3
  9187  001CB2                     
  9188                           ;EUSART.c: 48: tmp--;
  9189  001CB2  061A               	decf	EUSART_BaudRateSet@tmp^0,f,c
  9190  001CB4  0E00               	movlw	0
  9191  001CB6  5A1B               	subwfb	(EUSART_BaudRateSet@tmp+1)^0,f,c
  9192  001CB8  5A1C               	subwfb	(EUSART_BaudRateSet@tmp+2)^0,f,c
  9193  001CBA  5A1D               	subwfb	(EUSART_BaudRateSet@tmp+3)^0,f,c
  9194  001CBC                     
  9195                           ;EUSART.c: 50: SPBRG = (uint8_t) tmp;
  9196  001CBC  C01A  FFAF         	movff	EUSART_BaudRateSet@tmp,4015	;volatile
  9197  001CC0                     
  9198                           ;EUSART.c: 51: SPBRGH = (uint8_t) (tmp >> 8);
  9199  001CC0  C01B  FFB0         	movff	EUSART_BaudRateSet@tmp+1,4016	;volatile
  9200  001CC4  0012               	return		;funcret
  9201  001CC6                     __end_of_EUSART_BaudRateSet:
  9202                           	opt callstack 0
  9203                           
  9204 ;; *************** function ___lldiv *****************
  9205 ;; Defined at:
  9206 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;  dividend        4    4[COMRAM] unsigned long 
  9209 ;;  divisor         4    8[COMRAM] unsigned long 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;  quotient        4   12[COMRAM] unsigned long 
  9212 ;;  counter         1   16[COMRAM] unsigned char 
  9213 ;; Return value:  Size  Location     Type
  9214 ;;                  4    4[COMRAM] unsigned long 
  9215 ;; Registers used:
  9216 ;;		wreg, status,2, status,0
  9217 ;; Tracked objects:
  9218 ;;		On entry : 0/0
  9219 ;;		On exit  : 0/0
  9220 ;;		Unchanged: 0/0
  9221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9222 ;;      Params:         8       0       0       0       0       0       0       0       0
  9223 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9224 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9225 ;;      Totals:        13       0       0       0       0       0       0       0       0
  9226 ;;Total ram usage:       13 bytes
  9227 ;; Hardware stack levels used:    1
  9228 ;; Hardware stack levels required when called:    2
  9229 ;; This function calls:
  9230 ;;		Nothing
  9231 ;; This function is called by:
  9232 ;;		_EUSART_BaudRateSet
  9233 ;;		_sprintf
  9234 ;;		_Ecg_ProcessHeartRate
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text42
  9239  0018EA                     __ptext42:
  9240                           	opt callstack 0
  9241  0018EA                     ___lldiv:
  9242                           	opt callstack 26
  9243  0018EA  0E00               	movlw	0
  9244  0018EC  6E0D               	movwf	___lldiv@quotient^0,c
  9245  0018EE  0E00               	movlw	0
  9246  0018F0  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  9247  0018F2  0E00               	movlw	0
  9248  0018F4  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  9249  0018F6  0E00               	movlw	0
  9250  0018F8  6E10               	movwf	(___lldiv@quotient+3)^0,c
  9251  0018FA  5009               	movf	___lldiv@divisor^0,w,c
  9252  0018FC  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  9253  0018FE  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  9254  001900  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  9255  001902  B4D8               	btfsc	status,2,c
  9256  001904  EF86  F00C         	goto	u2461
  9257  001908  EF88  F00C         	goto	u2460
  9258  00190C                     u2461:
  9259  00190C  EFBE  F00C         	goto	l689
  9260  001910                     u2460:
  9261  001910  0E01               	movlw	1
  9262  001912  6E11               	movwf	___lldiv@counter^0,c
  9263  001914  EF92  F00C         	goto	l3510
  9264  001918                     l3508:
  9265  001918  90D8               	bcf	status,0,c
  9266  00191A  3609               	rlcf	___lldiv@divisor^0,f,c
  9267  00191C  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  9268  00191E  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  9269  001920  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  9270  001922  2A11               	incf	___lldiv@counter^0,f,c
  9271  001924                     l3510:
  9272  001924  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  9273  001926  EF97  F00C         	goto	u2471
  9274  00192A  EF99  F00C         	goto	u2470
  9275  00192E                     u2471:
  9276  00192E  EF8C  F00C         	goto	l3508
  9277  001932                     u2470:
  9278  001932                     l3512:
  9279  001932  90D8               	bcf	status,0,c
  9280  001934  360D               	rlcf	___lldiv@quotient^0,f,c
  9281  001936  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  9282  001938  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  9283  00193A  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  9284  00193C  5009               	movf	___lldiv@divisor^0,w,c
  9285  00193E  5C05               	subwf	___lldiv@dividend^0,w,c
  9286  001940  500A               	movf	(___lldiv@divisor+1)^0,w,c
  9287  001942  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  9288  001944  500B               	movf	(___lldiv@divisor+2)^0,w,c
  9289  001946  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  9290  001948  500C               	movf	(___lldiv@divisor+3)^0,w,c
  9291  00194A  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  9292  00194C  A0D8               	btfss	status,0,c
  9293  00194E  EFAB  F00C         	goto	u2481
  9294  001952  EFAD  F00C         	goto	u2480
  9295  001956                     u2481:
  9296  001956  EFB6  F00C         	goto	l3520
  9297  00195A                     u2480:
  9298  00195A  5009               	movf	___lldiv@divisor^0,w,c
  9299  00195C  5E05               	subwf	___lldiv@dividend^0,f,c
  9300  00195E  500A               	movf	(___lldiv@divisor+1)^0,w,c
  9301  001960  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  9302  001962  500B               	movf	(___lldiv@divisor+2)^0,w,c
  9303  001964  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  9304  001966  500C               	movf	(___lldiv@divisor+3)^0,w,c
  9305  001968  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  9306  00196A  800D               	bsf	___lldiv@quotient^0,0,c
  9307  00196C                     l3520:
  9308  00196C  90D8               	bcf	status,0,c
  9309  00196E  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  9310  001970  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  9311  001972  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  9312  001974  3209               	rrcf	___lldiv@divisor^0,f,c
  9313  001976  2E11               	decfsz	___lldiv@counter^0,f,c
  9314  001978  EF99  F00C         	goto	l3512
  9315  00197C                     l689:
  9316  00197C  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  9317  001980  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  9318  001984  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  9319  001988  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  9320  00198C  0012               	return		;funcret
  9321  00198E                     __end_of___lldiv:
  9322                           	opt callstack 0
  9323                           
  9324 ;; *************** function _A6_IsAlive *****************
  9325 ;; Defined at:
  9326 ;;		line 17 in file "A6Lib.c"
  9327 ;; Parameters:    Size  Location     Type
  9328 ;;		None
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  response       32   30[COMRAM] unsigned char [32]
  9331 ;;  loop            1   62[COMRAM] unsigned char 
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1    wreg      unsigned char 
  9334 ;; Registers used:
  9335 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9341 ;;      Params:         0       0       0       0       0       0       0       0       0
  9342 ;;      Locals:        33       0       0       0       0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9344 ;;      Totals:        33       0       0       0       0       0       0       0       0
  9345 ;;Total ram usage:       33 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:    6
  9348 ;; This function calls:
  9349 ;;		_A6_Command
  9350 ;;		_strcmp
  9351 ;; This function is called by:
  9352 ;;		_loop
  9353 ;;		_A6_BaudRateSet
  9354 ;;		_A6_BaudRateAutoDetect
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text43
  9359  002068                     __ptext43:
  9360                           	opt callstack 0
  9361  002068                     _A6_IsAlive:
  9362                           	opt callstack 23
  9363  002068                     
  9364                           ;A6Lib.c: 18: char response[32];;A6Lib.c: 20: uint8_t loop = 3;
  9365  002068  0E03               	movlw	3
  9366  00206A  6E3F               	movwf	A6_IsAlive@loop^0,c
  9367                           
  9368                           ;A6Lib.c: 21: while(loop--) {
  9369  00206C  EF5E  F010         	goto	l3748
  9370  002070                     l3740:
  9371                           
  9372                           ;A6Lib.c: 22: A6_Command("AT\r", 0, response, 32);
  9373  002070  0EEF               	movlw	low STR_19
  9374  002072  6E18               	movwf	A6_Command@command^0,c
  9375  002074  0E5F               	movlw	high STR_19
  9376  002076  6E19               	movwf	(A6_Command@command+1)^0,c
  9377  002078  0E00               	movlw	0
  9378  00207A  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  9379  00207C  0E00               	movlw	0
  9380  00207E  6E1A               	movwf	A6_Command@timeout^0,c
  9381  002080  0E1F               	movlw	low A6_IsAlive@response
  9382  002082  6E1C               	movwf	A6_Command@response^0,c
  9383  002084  0E00               	movlw	high A6_IsAlive@response
  9384  002086  6E1D               	movwf	(A6_Command@response+1)^0,c
  9385  002088  0E20               	movlw	32
  9386  00208A  6E1E               	movwf	A6_Command@responseLen^0,c
  9387  00208C  EC88  F012         	call	_A6_Command	;wreg free
  9388  002090                     
  9389                           ;A6Lib.c: 23: if(strcmp(response, "OK") == 0) {
  9390  002090  0E1F               	movlw	low A6_IsAlive@response
  9391  002092  6E05               	movwf	strcmp@s1^0,c
  9392  002094  0E00               	movlw	high A6_IsAlive@response
  9393  002096  6E06               	movwf	(strcmp@s1+1)^0,c
  9394  002098  0EFB               	movlw	low STR_20
  9395  00209A  6E07               	movwf	strcmp@s2^0,c
  9396  00209C  0E5F               	movlw	high STR_20
  9397  00209E  6E08               	movwf	(strcmp@s2+1)^0,c
  9398  0020A0  EC01  F011         	call	_strcmp	;wreg free
  9399  0020A4  5005               	movf	?_strcmp^0,w,c
  9400  0020A6  1006               	iorwf	(?_strcmp+1)^0,w,c
  9401  0020A8  A4D8               	btfss	status,2,c
  9402  0020AA  EF59  F010         	goto	u2811
  9403  0020AE  EF5B  F010         	goto	u2810
  9404  0020B2                     u2811:
  9405  0020B2  EF5E  F010         	goto	l3748
  9406  0020B6                     u2810:
  9407  0020B6                     
  9408                           ;A6Lib.c: 24: return 1;
  9409  0020B6  0E01               	movlw	1
  9410  0020B8  EF68  F010         	goto	l489
  9411  0020BC                     l3748:
  9412  0020BC  063F               	decf	A6_IsAlive@loop^0,f,c
  9413  0020BE  283F               	incf	A6_IsAlive@loop^0,w,c
  9414  0020C0  A4D8               	btfss	status,2,c
  9415  0020C2  EF65  F010         	goto	u2821
  9416  0020C6  EF67  F010         	goto	u2820
  9417  0020CA                     u2821:
  9418  0020CA  EF38  F010         	goto	l3740
  9419  0020CE                     u2820:
  9420  0020CE                     
  9421                           ;A6Lib.c: 25: };A6Lib.c: 26: };A6Lib.c: 27: return 0;
  9422  0020CE  0E00               	movlw	0
  9423  0020D0                     l489:
  9424  0020D0  0012               	return		;funcret
  9425  0020D2                     __end_of_A6_IsAlive:
  9426                           	opt callstack 0
  9427                           
  9428 ;; *************** function _strcmp *****************
  9429 ;; Defined at:
  9430 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
  9431 ;; Parameters:    Size  Location     Type
  9432 ;;  s1              2    4[COMRAM] PTR const unsigned char 
  9433 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_IsAlive@response(32), 
  9434 ;;  s2              2    6[COMRAM] PTR const unsigned char 
  9435 ;;		 -> STR_28(3), STR_25(3), STR_20(3), 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  r               1   10[COMRAM] char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  2    4[COMRAM] int 
  9440 ;; Registers used:
  9441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9447 ;;      Params:         4       0       0       0       0       0       0       0       0
  9448 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9449 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9450 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9451 ;;Total ram usage:        7 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    2
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_A6_IsAlive
  9458 ;;		_A6_BaudRateSet
  9459 ;;		_A6_Process_Random_Comms
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text44
  9464  002202                     __ptext44:
  9465                           	opt callstack 0
  9466  002202                     _strcmp:
  9467                           	opt callstack 26
  9468  002202  EF07  F011         	goto	l3410
  9469  002206                     l3408:
  9470  002206  4A05               	infsnz	strcmp@s1^0,f,c
  9471  002208  2A06               	incf	(strcmp@s1+1)^0,f,c
  9472  00220A  4A07               	infsnz	strcmp@s2^0,f,c
  9473  00220C  2A08               	incf	(strcmp@s2+1)^0,f,c
  9474  00220E                     l3410:
  9475  00220E  C007  FFF6         	movff	strcmp@s2,tblptrl
  9476  002212  C008  FFF7         	movff	strcmp@s2+1,tblptrh
  9477  002216                     	if	0	;tblptru may be non-zero
  9478  002216                     	endif
  9479  002216                     	if	0	;tblptru may be non-zero
  9480  002216                     	endif
  9481  002216  0008               	tblrd		*
  9482  002218  CFF5 F009          	movff	tablat,??_strcmp
  9483  00221C  C005  FFD9         	movff	strcmp@s1,fsr2l
  9484  002220  C006  FFDA         	movff	strcmp@s1+1,fsr2h
  9485  002224  50DF               	movf	indf2,w,c
  9486  002226  6E0A               	movwf	(??_strcmp+1)^0,c
  9487  002228  5009               	movf	??_strcmp^0,w,c
  9488  00222A  5C0A               	subwf	(??_strcmp+1)^0,w,c
  9489  00222C  6E0B               	movwf	strcmp@r^0,c
  9490  00222E  500B               	movf	strcmp@r^0,w,c
  9491  002230  A4D8               	btfss	status,2,c
  9492  002232  EF1D  F011         	goto	u2301
  9493  002236  EF1F  F011         	goto	u2300
  9494  00223A                     u2301:
  9495  00223A  EF2B  F011         	goto	l3414
  9496  00223E                     u2300:
  9497  00223E  C005  FFD9         	movff	strcmp@s1,fsr2l
  9498  002242  C006  FFDA         	movff	strcmp@s1+1,fsr2h
  9499  002246  50DF               	movf	indf2,w,c
  9500  002248  A4D8               	btfss	status,2,c
  9501  00224A  EF29  F011         	goto	u2311
  9502  00224E  EF2B  F011         	goto	u2310
  9503  002252                     u2311:
  9504  002252  EF03  F011         	goto	l3408
  9505  002256                     u2310:
  9506  002256                     l3414:
  9507  002256  500B               	movf	strcmp@r^0,w,c
  9508  002258  6E05               	movwf	?_strcmp^0,c
  9509  00225A  6A06               	clrf	(?_strcmp+1)^0,c
  9510  00225C  BE05               	btfsc	?_strcmp^0,7,c
  9511  00225E  0606               	decf	(?_strcmp+1)^0,f,c
  9512  002260  0012               	return		;funcret
  9513  002262                     __end_of_strcmp:
  9514                           	opt callstack 0
  9515                           
  9516 ;; *************** function _A6_Command *****************
  9517 ;; Defined at:
  9518 ;;		line 99 in file "A6Lib.c"
  9519 ;; Parameters:    Size  Location     Type
  9520 ;;  command         2   23[COMRAM] PTR const unsigned char 
  9521 ;;		 -> A6_BaudRateSet@request(20), STR_21(9), STR_19(4), STR_15(10), 
  9522 ;;		 -> STR_13(8), STR_9(10), 
  9523 ;;  timeout         2   25[COMRAM] int 
  9524 ;;  response        2   27[COMRAM] PTR unsigned char 
  9525 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response_155(32), 
  9526 ;;		 -> loop@response_152(32), loop@response(32), 
  9527 ;;  responseLen     1   29[COMRAM] unsigned char 
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;		None
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9539 ;;      Params:         7       0       0       0       0       0       0       0       0
  9540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9542 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9543 ;;Total ram usage:        7 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:    5
  9546 ;; This function calls:
  9547 ;;		_A6_ReadLine
  9548 ;;		_EUSART_RX_Flush
  9549 ;;		_EUSART_TX_String
  9550 ;;		_strlen
  9551 ;; This function is called by:
  9552 ;;		_loop
  9553 ;;		_A6_IsAlive
  9554 ;;		_A6_BaudRateGet
  9555 ;;		_A6_BaudRateSet
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text45
  9560  002510                     __ptext45:
  9561                           	opt callstack 0
  9562  002510                     _A6_Command:
  9563                           	opt callstack 23
  9564  002510                     
  9565                           ;A6Lib.c: 100: EUSART_RX_Flush();
  9566  002510  EC7D  F013         	call	_EUSART_RX_Flush	;wreg free
  9567  002514                     
  9568                           ;A6Lib.c: 101: EUSART_TX_String(command, strlen(command));
  9569  002514  C018  F009         	movff	A6_Command@command,EUSART_TX_String@str
  9570  002518  C019  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
  9571  00251C  C018  F005         	movff	A6_Command@command,strlen@s
  9572  002520  C019  F006         	movff	A6_Command@command+1,strlen@s+1
  9573  002524  EC58  F011         	call	_strlen	;wreg free
  9574  002528  5005               	movf	?_strlen^0,w,c
  9575  00252A  6E0B               	movwf	EUSART_TX_String@len^0,c
  9576  00252C  EC0E  F012         	call	_EUSART_TX_String	;wreg free
  9577  002530                     
  9578                           ;A6Lib.c: 102: A6_ReadLine(response, responseLen, timeout);
  9579  002530  C01C  F011         	movff	A6_Command@response,A6_ReadLine@response
  9580  002534  C01D  F012         	movff	A6_Command@response+1,A6_ReadLine@response+1
  9581  002538  C01E  F013         	movff	A6_Command@responseLen,A6_ReadLine@responseLen
  9582  00253C  C01A  F014         	movff	A6_Command@timeout,A6_ReadLine@timeout
  9583  002540  C01B  F015         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
  9584  002544  EC49  F00B         	call	_A6_ReadLine	;wreg free
  9585  002548  0012               	return		;funcret
  9586  00254A                     __end_of_A6_Command:
  9587                           	opt callstack 0
  9588                           
  9589 ;; *************** function _strlen *****************
  9590 ;; Defined at:
  9591 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;  s               2    4[COMRAM] PTR const unsigned char 
  9594 ;;		 -> A6_BaudRateSet@request(20), STR_22(7), STR_21(9), STR_19(4), 
  9595 ;;		 -> STR_15(10), STR_13(8), STR_9(10), 
  9596 ;; Auto vars:     Size  Location     Type
  9597 ;;  cp              2    6[COMRAM] PTR const unsigned char 
  9598 ;;		 -> A6_BaudRateSet@request(20), STR_22(7), STR_21(9), STR_19(4), 
  9599 ;;		 -> STR_15(10), STR_13(8), STR_9(10), 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  2    4[COMRAM] unsigned int 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9609 ;;      Params:         2       0       0       0       0       0       0       0       0
  9610 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9612 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9613 ;;Total ram usage:        4 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:    2
  9616 ;; This function calls:
  9617 ;;		Nothing
  9618 ;; This function is called by:
  9619 ;;		_A6_Command
  9620 ;;		_strstr
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           	psect	text46
  9625  0022B0                     __ptext46:
  9626                           	opt callstack 0
  9627  0022B0                     _strlen:
  9628                           	opt callstack 25
  9629  0022B0  C005  F007         	movff	strlen@s,strlen@cp
  9630  0022B4  C006  F008         	movff	strlen@s+1,strlen@cp+1
  9631  0022B8  EF60  F011         	goto	l3276
  9632  0022BC                     l3274:
  9633  0022BC  4A07               	infsnz	strlen@cp^0,f,c
  9634  0022BE  2A08               	incf	(strlen@cp+1)^0,f,c
  9635  0022C0                     l3276:
  9636  0022C0  C007  FFF6         	movff	strlen@cp,tblptrl
  9637  0022C4  C008  FFF7         	movff	strlen@cp+1,tblptrh
  9638  0022C8  6AF8               	clrf	tblptru,c
  9639  0022CA  0E07               	movlw	(high __ramtop+-1)
  9640  0022CC  64F7               	cpfsgt	tblptrh,c
  9641  0022CE  D003               	bra	u2017
  9642  0022D0  0008               	tblrd		*
  9643  0022D2  50F5               	movf	tablat,w,c
  9644  0022D4  D005               	bra	u2010
  9645  0022D6                     u2017:
  9646  0022D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  9647  0022DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  9648  0022DE  50EF               	movf	indf0,w,c
  9649  0022E0                     u2010:
  9650  0022E0  0900               	iorlw	0
  9651  0022E2  A4D8               	btfss	status,2,c
  9652  0022E4  EF76  F011         	goto	u2021
  9653  0022E8  EF78  F011         	goto	u2020
  9654  0022EC                     u2021:
  9655  0022EC  EF5E  F011         	goto	l3274
  9656  0022F0                     u2020:
  9657  0022F0  5005               	movf	strlen@s^0,w,c
  9658  0022F2  5C07               	subwf	strlen@cp^0,w,c
  9659  0022F4  6E05               	movwf	?_strlen^0,c
  9660  0022F6  5006               	movf	(strlen@s+1)^0,w,c
  9661  0022F8  5808               	subwfb	(strlen@cp+1)^0,w,c
  9662  0022FA  6E06               	movwf	(?_strlen+1)^0,c
  9663  0022FC  0012               	return		;funcret
  9664  0022FE                     __end_of_strlen:
  9665                           	opt callstack 0
  9666                           
  9667 ;; *************** function _EUSART_TX_String *****************
  9668 ;; Defined at:
  9669 ;;		line 62 in file "EUSART.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;  str             2    8[COMRAM] PTR const unsigned char 
  9672 ;;		 -> A6_BaudRateSet@request(20), STR_21(9), STR_19(4), STR_15(10), 
  9673 ;;		 -> STR_13(8), STR_9(10), 
  9674 ;;  len             1   10[COMRAM] unsigned char 
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1    wreg      void 
  9679 ;; Registers used:
  9680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9686 ;;      Params:         3       0       0       0       0       0       0       0       0
  9687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9689 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9690 ;;Total ram usage:        3 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:    3
  9693 ;; This function calls:
  9694 ;;		_EUSART_TX_Char
  9695 ;; This function is called by:
  9696 ;;		_A6_Command
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text47
  9701  00241C                     __ptext47:
  9702                           	opt callstack 0
  9703  00241C                     _EUSART_TX_String:
  9704                           	opt callstack 24
  9705  00241C                     
  9706                           ;EUSART.c: 63: while(len--) {
  9707  00241C  EF24  F012         	goto	l3288
  9708  002420                     l3284:
  9709                           
  9710                           ;EUSART.c: 64: EUSART_TX_Char(*str++);
  9711  002420  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
  9712  002424  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
  9713  002428  6AF8               	clrf	tblptru,c
  9714  00242A  0E07               	movlw	(high __ramtop+-1)
  9715  00242C  64F7               	cpfsgt	tblptrh,c
  9716  00242E  D003               	bra	u2037
  9717  002430  0008               	tblrd		*
  9718  002432  50F5               	movf	tablat,w,c
  9719  002434  D005               	bra	u2030
  9720  002436                     u2037:
  9721  002436  CFF6 FFE9          	movff	tblptrl,fsr0l
  9722  00243A  CFF7 FFEA          	movff	tblptrh,fsr0h
  9723  00243E  50EF               	movf	indf0,w,c
  9724  002440                     u2030:
  9725  002440  EC6E  F013         	call	_EUSART_TX_Char
  9726  002444  4A09               	infsnz	EUSART_TX_String@str^0,f,c
  9727  002446  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
  9728  002448                     l3288:
  9729  002448  060B               	decf	EUSART_TX_String@len^0,f,c
  9730  00244A  280B               	incf	EUSART_TX_String@len^0,w,c
  9731  00244C  A4D8               	btfss	status,2,c
  9732  00244E  EF2B  F012         	goto	u2041
  9733  002452  EF2D  F012         	goto	u2040
  9734  002456                     u2041:
  9735  002456  EF10  F012         	goto	l3284
  9736  00245A                     u2040:
  9737  00245A  0012               	return		;funcret
  9738  00245C                     __end_of_EUSART_TX_String:
  9739                           	opt callstack 0
  9740                           
  9741 ;; *************** function _EUSART_TX_Char *****************
  9742 ;; Defined at:
  9743 ;;		line 56 in file "EUSART.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;  c               1    wreg     unsigned char 
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;  c               1    4[COMRAM] unsigned char 
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9757 ;;      Params:         0       0       0       0       0       0       0       0       0
  9758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9761 ;;Total ram usage:        1 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    2
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_EUSART_TX_String
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text48
  9772  0026DC                     __ptext48:
  9773                           	opt callstack 0
  9774  0026DC                     _EUSART_TX_Char:
  9775                           	opt callstack 24
  9776                           
  9777                           ;incstack = 0
  9778                           ;EUSART_TX_Char@c stored from wreg
  9779  0026DC  6E05               	movwf	EUSART_TX_Char@c^0,c
  9780  0026DE                     l581:
  9781  0026DE  A89E               	btfss	3998,4,c	;volatile
  9782  0026E0  EF74  F013         	goto	u1901
  9783  0026E4  EF76  F013         	goto	u1900
  9784  0026E8                     u1901:
  9785  0026E8  EF6F  F013         	goto	l581
  9786  0026EC                     u1900:
  9787  0026EC                     
  9788                           ;EUSART.c: 58: TXREG = c;
  9789  0026EC  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
  9790  0026F0  F000               	nop		;# 
  9791  0026F2  0012               	return		;funcret
  9792  0026F4                     __end_of_EUSART_TX_Char:
  9793                           	opt callstack 0
  9794                           
  9795 ;; *************** function _EUSART_RX_Flush *****************
  9796 ;; Defined at:
  9797 ;;		line 82 in file "EUSART.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;		None
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;		None
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  1    wreg      void 
  9804 ;; Registers used:
  9805 ;;		None
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9811 ;;      Params:         0       0       0       0       0       0       0       0       0
  9812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9814 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9815 ;;Total ram usage:        0 bytes
  9816 ;; Hardware stack levels used:    1
  9817 ;; Hardware stack levels required when called:    2
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_A6_Command
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           	psect	text49
  9826  0026FA                     __ptext49:
  9827                           	opt callstack 0
  9828  0026FA                     _EUSART_RX_Flush:
  9829                           	opt callstack 25
  9830  0026FA                     
  9831                           ;EUSART.c: 83: EUSART_RX.iRead = EUSART_RX.iWrite;
  9832  0026FA  C201  F200         	movff	_EUSART_RX+1,_EUSART_RX
  9833  0026FE  0012               	return		;funcret
  9834  002700                     __end_of_EUSART_RX_Flush:
  9835                           	opt callstack 0
  9836                           
  9837 ;; *************** function _A6_ReadLine *****************
  9838 ;; Defined at:
  9839 ;;		line 106 in file "A6Lib.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  response        2   16[COMRAM] PTR unsigned char 
  9842 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@respo
      +nse(32), 
  9843 ;;		 -> loop@response_155(32), loop@response_152(32), loop@response(32), 
  9844 ;;  responseLen     1   18[COMRAM] unsigned char 
  9845 ;;  timeout         2   19[COMRAM] int 
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;  c               1   22[COMRAM] unsigned char 
  9848 ;;  iResponse       1   21[COMRAM] unsigned char 
  9849 ;; Return value:  Size  Location     Type
  9850 ;;                  1    wreg      unsigned char 
  9851 ;; Registers used:
  9852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9853 ;; Tracked objects:
  9854 ;;		On entry : 0/0
  9855 ;;		On exit  : 0/0
  9856 ;;		Unchanged: 0/0
  9857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9858 ;;      Params:         5       0       0       0       0       0       0       0       0
  9859 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9861 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9862 ;;Total ram usage:        7 bytes
  9863 ;; Hardware stack levels used:    1
  9864 ;; Hardware stack levels required when called:    4
  9865 ;; This function calls:
  9866 ;;		_EUSART_BufferGetChar
  9867 ;;		_memset
  9868 ;; This function is called by:
  9869 ;;		_A6_Command
  9870 ;;		_A6_Process_Random_Comms
  9871 ;; This function uses a non-reentrant model
  9872 ;;
  9873                           
  9874                           	psect	text50
  9875  001692                     __ptext50:
  9876                           	opt callstack 0
  9877  001692                     _A6_ReadLine:
  9878                           	opt callstack 24
  9879  001692                     
  9880                           ;A6Lib.c: 107: char c;;A6Lib.c: 108: memset(response, 0x00, responseLen);
  9881  001692  C011  F005         	movff	A6_ReadLine@response,memset@p1
  9882  001696  C012  F006         	movff	A6_ReadLine@response+1,memset@p1+1
  9883  00169A  0E00               	movlw	0
  9884  00169C  6E08               	movwf	(memset@c+1)^0,c
  9885  00169E  0E00               	movlw	0
  9886  0016A0  6E07               	movwf	memset@c^0,c
  9887  0016A2  C013  F009         	movff	A6_ReadLine@responseLen,memset@n
  9888  0016A6  6A0A               	clrf	(memset@n+1)^0,c
  9889  0016A8  ECA5  F012         	call	_memset	;wreg free
  9890  0016AC                     l519:
  9891                           
  9892                           ;A6Lib.c: 112: c = EUSART_BufferGetChar(timeout);
  9893  0016AC  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
  9894  0016B0  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
  9895  0016B4  EC7F  F011         	call	_EUSART_BufferGetChar	;wreg free
  9896  0016B8  6E17               	movwf	A6_ReadLine@c^0,c
  9897  0016BA                     
  9898                           ;A6Lib.c: 113: if(c == (0)) return 0;
  9899  0016BA  5017               	movf	A6_ReadLine@c^0,w,c
  9900  0016BC  A4D8               	btfss	status,2,c
  9901  0016BE  EF63  F00B         	goto	u2051
  9902  0016C2  EF65  F00B         	goto	u2050
  9903  0016C6                     u2051:
  9904  0016C6  EF68  F00B         	goto	l3298
  9905  0016CA                     u2050:
  9906  0016CA  0E00               	movlw	0
  9907  0016CC  EFB3  F00B         	goto	l521
  9908  0016D0                     l3298:
  9909                           
  9910                           ;A6Lib.c: 114: if((c != '\r') && (c != '\n')) break;
  9911  0016D0  0E0D               	movlw	13
  9912  0016D2  1817               	xorwf	A6_ReadLine@c^0,w,c
  9913  0016D4  B4D8               	btfsc	status,2,c
  9914  0016D6  EF6F  F00B         	goto	u2061
  9915  0016DA  EF71  F00B         	goto	u2060
  9916  0016DE                     u2061:
  9917  0016DE  EF56  F00B         	goto	l519
  9918  0016E2                     u2060:
  9919  0016E2  0E0A               	movlw	10
  9920  0016E4  1817               	xorwf	A6_ReadLine@c^0,w,c
  9921  0016E6  B4D8               	btfsc	status,2,c
  9922  0016E8  EF78  F00B         	goto	u2071
  9923  0016EC  EF7A  F00B         	goto	u2070
  9924  0016F0                     u2071:
  9925  0016F0  EF56  F00B         	goto	l519
  9926  0016F4                     u2070:
  9927  0016F4                     
  9928                           ;A6Lib.c: 115: };A6Lib.c: 118: uint8_t iResponse = 0;
  9929  0016F4  0E00               	movlw	0
  9930  0016F6  6E16               	movwf	A6_ReadLine@iResponse^0,c
  9931  0016F8                     l3306:
  9932                           
  9933                           ;A6Lib.c: 120: if((c == '\r') || (c == (0))) break;
  9934  0016F8  0E0D               	movlw	13
  9935  0016FA  1817               	xorwf	A6_ReadLine@c^0,w,c
  9936  0016FC  B4D8               	btfsc	status,2,c
  9937  0016FE  EF83  F00B         	goto	u2081
  9938  001702  EF85  F00B         	goto	u2080
  9939  001706                     u2081:
  9940  001706  EFB2  F00B         	goto	l3320
  9941  00170A                     u2080:
  9942  00170A  5017               	movf	A6_ReadLine@c^0,w,c
  9943  00170C  A4D8               	btfss	status,2,c
  9944  00170E  EF8B  F00B         	goto	u2091
  9945  001712  EF8D  F00B         	goto	u2090
  9946  001716                     u2091:
  9947  001716  EF8F  F00B         	goto	l3310
  9948  00171A                     u2090:
  9949  00171A  EFB2  F00B         	goto	l3320
  9950  00171E                     l3310:
  9951                           
  9952                           ;A6Lib.c: 121: response[iResponse] = c;
  9953  00171E  5016               	movf	A6_ReadLine@iResponse^0,w,c
  9954  001720  2411               	addwf	A6_ReadLine@response^0,w,c
  9955  001722  6ED9               	movwf	fsr2l,c
  9956  001724  0E00               	movlw	0
  9957  001726  2012               	addwfc	(A6_ReadLine@response+1)^0,w,c
  9958  001728  6EDA               	movwf	fsr2h,c
  9959  00172A  C017  FFDF         	movff	A6_ReadLine@c,indf2
  9960  00172E                     
  9961                           ;A6Lib.c: 122: iResponse++;
  9962  00172E  2A16               	incf	A6_ReadLine@iResponse^0,f,c
  9963  001730                     
  9964                           ;A6Lib.c: 123: if(iResponse == responseLen) break;
  9965  001730  5013               	movf	A6_ReadLine@responseLen^0,w,c
  9966  001732  1816               	xorwf	A6_ReadLine@iResponse^0,w,c
  9967  001734  A4D8               	btfss	status,2,c
  9968  001736  EF9F  F00B         	goto	u2101
  9969  00173A  EFA1  F00B         	goto	u2100
  9970  00173E                     u2101:
  9971  00173E  EFA3  F00B         	goto	l3318
  9972  001742                     u2100:
  9973  001742  EFB2  F00B         	goto	l3320
  9974  001746                     l3318:
  9975                           
  9976                           ;A6Lib.c: 124: } while(c = EUSART_BufferGetChar(timeout));
  9977  001746  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
  9978  00174A  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
  9979  00174E  EC7F  F011         	call	_EUSART_BufferGetChar	;wreg free
  9980  001752  6E17               	movwf	A6_ReadLine@c^0,c
  9981  001754  5017               	movf	A6_ReadLine@c^0,w,c
  9982  001756  A4D8               	btfss	status,2,c
  9983  001758  EFB0  F00B         	goto	u2111
  9984  00175C  EFB2  F00B         	goto	u2110
  9985  001760                     u2111:
  9986  001760  EF7C  F00B         	goto	l3306
  9987  001764                     u2110:
  9988  001764                     l3320:
  9989                           
  9990                           ;A6Lib.c: 126: return iResponse;
  9991  001764  5016               	movf	A6_ReadLine@iResponse^0,w,c
  9992  001766                     l521:
  9993  001766  0012               	return		;funcret
  9994  001768                     __end_of_A6_ReadLine:
  9995                           	opt callstack 0
  9996                           
  9997 ;; *************** function _memset *****************
  9998 ;; Defined at:
  9999 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  p1              2    4[COMRAM] PTR void 
 10002 ;;		 -> EUSART_RX(130), A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), 
 10003 ;;		 -> A6_IsAlive@response(32), loop@response_155(32), loop@response_152(32), loop@response(32), 
 10004 ;;  c               2    6[COMRAM] int 
 10005 ;;  n               2    8[COMRAM] unsigned int 
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;  p               2   10[COMRAM] PTR unsigned char 
 10008 ;;		 -> EUSART_RX(130), A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), 
 10009 ;;		 -> A6_IsAlive@response(32), loop@response_155(32), loop@response_152(32), loop@response(32), 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  2    4[COMRAM] PTR void 
 10012 ;; Registers used:
 10013 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10019 ;;      Params:         6       0       0       0       0       0       0       0       0
 10020 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10021 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10022 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10023 ;;Total ram usage:        8 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    2
 10026 ;; This function calls:
 10027 ;;		Nothing
 10028 ;; This function is called by:
 10029 ;;		_A6_ReadLine
 10030 ;;		_EUSART_Init
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text51
 10035  00254A                     __ptext51:
 10036                           	opt callstack 0
 10037  00254A                     _memset:
 10038                           	opt callstack 25
 10039  00254A  C005  F00B         	movff	memset@p1,memset@p
 10040  00254E  C006  F00C         	movff	memset@p1+1,memset@p+1
 10041  002552  EFB3  F012         	goto	l3198
 10042  002556                     l3194:
 10043  002556  C00B  FFD9         	movff	memset@p,fsr2l
 10044  00255A  C00C  FFDA         	movff	memset@p+1,fsr2h
 10045  00255E  C007  FFDF         	movff	memset@c,indf2
 10046  002562  4A0B               	infsnz	memset@p^0,f,c
 10047  002564  2A0C               	incf	(memset@p+1)^0,f,c
 10048  002566                     l3198:
 10049  002566  0609               	decf	memset@n^0,f,c
 10050  002568  A0D8               	btfss	status,0,c
 10051  00256A  060A               	decf	(memset@n+1)^0,f,c
 10052  00256C  2809               	incf	memset@n^0,w,c
 10053  00256E  E106               	bnz	u1871
 10054  002570  280A               	incf	(memset@n+1)^0,w,c
 10055  002572  A4D8               	btfss	status,2,c
 10056  002574  EFBE  F012         	goto	u1871
 10057  002578  EFC0  F012         	goto	u1870
 10058  00257C                     u1871:
 10059  00257C  EFAB  F012         	goto	l3194
 10060  002580                     u1870:
 10061  002580  0012               	return		;funcret
 10062  002582                     __end_of_memset:
 10063                           	opt callstack 0
 10064                           
 10065 ;; *************** function _EUSART_BufferGetChar *****************
 10066 ;; Defined at:
 10067 ;;		line 95 in file "EUSART.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  timeout         2   14[COMRAM] int 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;		None
 10072 ;; Return value:  Size  Location     Type
 10073 ;;                  1    wreg      unsigned char 
 10074 ;; Registers used:
 10075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10076 ;; Tracked objects:
 10077 ;;		On entry : 0/0
 10078 ;;		On exit  : 0/0
 10079 ;;		Unchanged: 0/0
 10080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10081 ;;      Params:         2       0       0       0       0       0       0       0       0
 10082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10084 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10085 ;;Total ram usage:        2 bytes
 10086 ;; Hardware stack levels used:    1
 10087 ;; Hardware stack levels required when called:    3
 10088 ;; This function calls:
 10089 ;;		_EUSART_RX_AvailableData
 10090 ;; This function is called by:
 10091 ;;		_A6_ReadLine
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text52
 10096  0022FE                     __ptext52:
 10097                           	opt callstack 0
 10098  0022FE                     _EUSART_BufferGetChar:
 10099                           	opt callstack 24
 10100  0022FE                     
 10101                           ;EUSART.c: 96: if(EUSART_RX_AvailableData(timeout) == 0) return (0);
 10102  0022FE  C00F  F005         	movff	EUSART_BufferGetChar@timeout,EUSART_RX_AvailableData@timeout
 10103  002302  C010  F006         	movff	EUSART_BufferGetChar@timeout+1,EUSART_RX_AvailableData@timeout+1
 10104  002306  ECDD  F00D         	call	_EUSART_RX_AvailableData	;wreg free
 10105  00230A  0900               	iorlw	0
 10106  00230C  A4D8               	btfss	status,2,c
 10107  00230E  EF8B  F011         	goto	u1881
 10108  002312  EF8D  F011         	goto	u1880
 10109  002316                     u1881:
 10110  002316  EF90  F011         	goto	l3206
 10111  00231A                     u1880:
 10112  00231A  0E00               	movlw	0
 10113  00231C  EFA4  F011         	goto	l610
 10114  002320                     l3206:
 10115                           
 10116                           ;EUSART.c: 97: EUSART_RX.iRead++;
 10117  002320  0102               	movlb	2	; () banked
 10118  002322  2B00               	incf	_EUSART_RX& (0+255),f,b
 10119  002324                     
 10120                           ; BSR set to: 2
 10121                           ;EUSART.c: 98: if(EUSART_RX.iRead == 128) EUSART_RX.iRead = 0;
 10122  002324  0E80               	movlw	128
 10123  002326  1900               	xorwf	_EUSART_RX& (0+255),w,b
 10124  002328  A4D8               	btfss	status,2,c
 10125  00232A  EF99  F011         	goto	u1891
 10126  00232E  EF9B  F011         	goto	u1890
 10127  002332                     u1891:
 10128  002332  EF9D  F011         	goto	l3212
 10129  002336                     u1890:
 10130  002336                     
 10131                           ; BSR set to: 2
 10132  002336  0E00               	movlw	0
 10133  002338  6F00               	movwf	_EUSART_RX& (0+255),b
 10134  00233A                     l3212:
 10135                           
 10136                           ; BSR set to: 2
 10137                           ;EUSART.c: 99: return EUSART_RX.buffer[EUSART_RX.iRead];
 10138  00233A  0E02               	movlw	low (_EUSART_RX+2)
 10139  00233C  2500               	addwf	_EUSART_RX& (0+255),w,b
 10140  00233E  6ED9               	movwf	fsr2l,c
 10141  002340  6ADA               	clrf	fsr2h,c
 10142  002342  0E02               	movlw	high (_EUSART_RX+2)
 10143  002344  22DA               	addwfc	fsr2h,f,c
 10144  002346  50DF               	movf	indf2,w,c
 10145  002348                     l610:
 10146  002348  0012               	return		;funcret
 10147  00234A                     __end_of_EUSART_BufferGetChar:
 10148                           	opt callstack 0
 10149                           
 10150 ;; *************** function _EUSART_RX_AvailableData *****************
 10151 ;; Defined at:
 10152 ;;		line 86 in file "EUSART.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;  timeout         2    4[COMRAM] int 
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;  t               4   10[COMRAM] unsigned long 
 10157 ;; Return value:  Size  Location     Type
 10158 ;;                  1    wreg      unsigned char 
 10159 ;; Registers used:
 10160 ;;		wreg, status,2, status,0
 10161 ;; Tracked objects:
 10162 ;;		On entry : 0/0
 10163 ;;		On exit  : 0/0
 10164 ;;		Unchanged: 0/0
 10165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10166 ;;      Params:         2       0       0       0       0       0       0       0       0
 10167 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10168 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10169 ;;      Totals:        10       0       0       0       0       0       0       0       0
 10170 ;;Total ram usage:       10 bytes
 10171 ;; Hardware stack levels used:    1
 10172 ;; Hardware stack levels required when called:    2
 10173 ;; This function calls:
 10174 ;;		Nothing
 10175 ;; This function is called by:
 10176 ;;		_A6_Process_Random_Comms
 10177 ;;		_EUSART_BufferGetChar
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text53
 10182  001BBA                     __ptext53:
 10183                           	opt callstack 0
 10184  001BBA                     _EUSART_RX_AvailableData:
 10185                           	opt callstack 26
 10186  001BBA                     
 10187                           ;EUSART.c: 87: if(timeout == 0) timeout = 1000;
 10188  001BBA  5005               	movf	EUSART_RX_AvailableData@timeout^0,w,c
 10189  001BBC  1006               	iorwf	(EUSART_RX_AvailableData@timeout+1)^0,w,c
 10190  001BBE  A4D8               	btfss	status,2,c
 10191  001BC0  EFE4  F00D         	goto	u1841
 10192  001BC4  EFE6  F00D         	goto	u1840
 10193  001BC8                     u1841:
 10194  001BC8  EFEA  F00D         	goto	l3164
 10195  001BCC                     u1840:
 10196  001BCC  0E03               	movlw	3
 10197  001BCE  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
 10198  001BD0  0EE8               	movlw	232
 10199  001BD2  6E05               	movwf	EUSART_RX_AvailableData@timeout^0,c
 10200  001BD4                     l3164:
 10201                           
 10202                           ;EUSART.c: 88: uint32_t t = MILLISECONDS + timeout;
 10203  001BD4  C005  F007         	movff	EUSART_RX_AvailableData@timeout,??_EUSART_RX_AvailableData
 10204  001BD8  C006  F008         	movff	EUSART_RX_AvailableData@timeout+1,??_EUSART_RX_AvailableData+1
 10205  001BDC  0E00               	movlw	0
 10206  001BDE  BE08               	btfsc	(??_EUSART_RX_AvailableData+1)^0,7,c
 10207  001BE0  0EFF               	movlw	255
 10208  001BE2  6E09               	movwf	(??_EUSART_RX_AvailableData+2)^0,c
 10209  001BE4  6E0A               	movwf	(??_EUSART_RX_AvailableData+3)^0,c
 10210  001BE6  0101               	movlb	1	; () banked
 10211  001BE8  51BC               	movf	_MILLISECONDS& (0+255),w,b
 10212  001BEA  2407               	addwf	??_EUSART_RX_AvailableData^0,w,c
 10213  001BEC  6E0B               	movwf	EUSART_RX_AvailableData@t^0,c
 10214  001BEE  51BD               	movf	(_MILLISECONDS+1)& (0+255),w,b
 10215  001BF0  2008               	addwfc	(??_EUSART_RX_AvailableData+1)^0,w,c
 10216  001BF2  6E0C               	movwf	(EUSART_RX_AvailableData@t+1)^0,c
 10217  001BF4  51BE               	movf	(_MILLISECONDS+2)& (0+255),w,b
 10218  001BF6  2009               	addwfc	(??_EUSART_RX_AvailableData+2)^0,w,c
 10219  001BF8  6E0D               	movwf	(EUSART_RX_AvailableData@t+2)^0,c
 10220  001BFA  51BF               	movf	(_MILLISECONDS+3)& (0+255),w,b
 10221  001BFC  200A               	addwfc	(??_EUSART_RX_AvailableData+3)^0,w,c
 10222  001BFE  6E0E               	movwf	(EUSART_RX_AvailableData@t+3)^0,c
 10223                           
 10224                           ;EUSART.c: 89: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
 10225  001C00  EF15  F00E         	goto	l3172
 10226  001C04                     l3166:
 10227                           
 10228                           ; BSR set to: 2
 10229                           ;EUSART.c: 90: if(t < MILLISECONDS) return 0;
 10230  001C04  0101               	movlb	1	; () banked
 10231  001C06  51BC               	movf	_MILLISECONDS& (0+255),w,b
 10232  001C08  5C0B               	subwf	EUSART_RX_AvailableData@t^0,w,c
 10233  001C0A  51BD               	movf	(_MILLISECONDS+1)& (0+255),w,b
 10234  001C0C  580C               	subwfb	(EUSART_RX_AvailableData@t+1)^0,w,c
 10235  001C0E  51BE               	movf	(_MILLISECONDS+2)& (0+255),w,b
 10236  001C10  580D               	subwfb	(EUSART_RX_AvailableData@t+2)^0,w,c
 10237  001C12  51BF               	movf	(_MILLISECONDS+3)& (0+255),w,b
 10238  001C14  580E               	subwfb	(EUSART_RX_AvailableData@t+3)^0,w,c
 10239  001C16  B0D8               	btfsc	status,0,c
 10240  001C18  EF10  F00E         	goto	u1851
 10241  001C1C  EF12  F00E         	goto	u1850
 10242  001C20                     u1851:
 10243  001C20  EF15  F00E         	goto	l3172
 10244  001C24                     u1850:
 10245  001C24                     
 10246                           ; BSR set to: 1
 10247  001C24  0E00               	movlw	0
 10248  001C26  EF20  F00E         	goto	l605
 10249  001C2A                     l3172:
 10250                           
 10251                           ; BSR set to: 1
 10252  001C2A  0102               	movlb	2	; () banked
 10253  001C2C  5100               	movf	_EUSART_RX& (0+255),w,b
 10254  001C2E  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 10255  001C30  B4D8               	btfsc	status,2,c
 10256  001C32  EF1D  F00E         	goto	u1861
 10257  001C36  EF1F  F00E         	goto	u1860
 10258  001C3A                     u1861:
 10259  001C3A  EF02  F00E         	goto	l3166
 10260  001C3E                     u1860:
 10261  001C3E                     
 10262                           ; BSR set to: 2
 10263                           ;EUSART.c: 91: };EUSART.c: 92: return 1;
 10264  001C3E  0E01               	movlw	1
 10265  001C40                     l605:
 10266  001C40  0012               	return		;funcret
 10267  001C42                     __end_of_EUSART_RX_AvailableData:
 10268                           	opt callstack 0
 10269                           
 10270 ;; *************** function _isr *****************
 10271 ;; Defined at:
 10272 ;;		line 90 in file "init.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;		None
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;		None
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  1    wreg      void 
 10279 ;; Registers used:
 10280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10286 ;;      Params:         0       0       0       0       0       0       0       0       0
 10287 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10288 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10289 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10290 ;;Total ram usage:        2 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:    1
 10293 ;; This function calls:
 10294 ;;		_EUSART_RX_Interrupt
 10295 ;;		_Ecg_Interrupt
 10296 ;; This function is called by:
 10297 ;;		Interrupt level 2
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           	psect	intcode
 10302  000008                     __pintcode:
 10303                           	opt callstack 0
 10304  000008                     _isr:
 10305                           	opt callstack 20
 10306                           
 10307                           ;incstack = 0
 10308  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10309  00000A  EDC8  F00F         	call	int_func,f	;refresh shadow registers
 10310                           
 10311                           	psect	intcode_body
 10312  001F90                     __pintcode_body:
 10313                           	opt callstack 20
 10314  001F90                     int_func:
 10315                           	opt callstack 20
 10316  001F90  0006               	pop		; remove dummy address from shadow register refresh
 10317  001F92  CFD9 F003          	movff	fsr2l,??_isr
 10318  001F96  CFDA F004          	movff	fsr2h,??_isr+1
 10319  001F9A                     
 10320                           ;init.c: 92: if(TMR3IE && TMR3IF) {
 10321  001F9A  A2A0               	btfss	4000,1,c	;volatile
 10322  001F9C  EFD2  F00F         	goto	i2u330_41
 10323  001FA0  EFD4  F00F         	goto	i2u330_40
 10324  001FA4                     i2u330_41:
 10325  001FA4  EFE9  F00F         	goto	i2l4198
 10326  001FA8                     i2u330_40:
 10327  001FA8  A2A1               	btfss	4001,1,c	;volatile
 10328  001FAA  EFD9  F00F         	goto	i2u331_41
 10329  001FAE  EFDB  F00F         	goto	i2u331_40
 10330  001FB2                     i2u331_41:
 10331  001FB2  EFE9  F00F         	goto	i2l4198
 10332  001FB6                     i2u331_40:
 10333  001FB6                     
 10334                           ;init.c: 93: MILLISECONDS += 5;
 10335  001FB6  0E05               	movlw	5
 10336  001FB8  0101               	movlb	1	; () banked
 10337  001FBA  27BC               	addwf	_MILLISECONDS& (0+255),f,b
 10338  001FBC  0E00               	movlw	0
 10339  001FBE  23BD               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
 10340  001FC0  23BE               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
 10341  001FC2  23BF               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
 10342  001FC4                     
 10343                           ; BSR set to: 1
 10344                           ;init.c: 94: Ecg_Interrupt();
 10345  001FC4  EC42  F013         	call	_Ecg_Interrupt	;wreg free
 10346  001FC8                     
 10347                           ;init.c: 97: TMR3H = 0x16;
 10348  001FC8  0E16               	movlw	22
 10349  001FCA  6EB3               	movwf	179,c	;volatile
 10350  001FCC                     
 10351                           ;init.c: 98: TMR3L = 0x00;
 10352  001FCC  0E00               	movlw	0
 10353  001FCE  6EB2               	movwf	178,c	;volatile
 10354  001FD0                     
 10355                           ;init.c: 99: TMR3IF = 0;
 10356  001FD0  92A1               	bcf	4001,1,c	;volatile
 10357  001FD2                     i2l4198:
 10358                           
 10359                           ;init.c: 100: };init.c: 103: if(RCIE && RCIF) {
 10360  001FD2  AA9D               	btfss	3997,5,c	;volatile
 10361  001FD4  EFEE  F00F         	goto	i2u332_41
 10362  001FD8  EFF0  F00F         	goto	i2u332_40
 10363  001FDC                     i2u332_41:
 10364  001FDC  EFF9  F00F         	goto	i2l167
 10365  001FE0                     i2u332_40:
 10366  001FE0  AA9E               	btfss	3998,5,c	;volatile
 10367  001FE2  EFF5  F00F         	goto	i2u333_41
 10368  001FE6  EFF7  F00F         	goto	i2u333_40
 10369  001FEA                     i2u333_41:
 10370  001FEA  EFF9  F00F         	goto	i2l167
 10371  001FEE                     i2u333_40:
 10372  001FEE                     
 10373                           ;init.c: 104: EUSART_RX_Interrupt();
 10374  001FEE  ECCF  F010         	call	_EUSART_RX_Interrupt	;wreg free
 10375  001FF2                     i2l167:
 10376  001FF2  C004  FFDA         	movff	??_isr+1,fsr2h
 10377  001FF6  C003  FFD9         	movff	??_isr,fsr2l
 10378  001FFA  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10379  001FFC  0011               	retfie		f
 10380  001FFE                     __end_of_isr:
 10381                           	opt callstack 0
 10382                           
 10383 ;; *************** function _Ecg_Interrupt *****************
 10384 ;; Defined at:
 10385 ;;		line 135 in file "ecg.c"
 10386 ;; Parameters:    Size  Location     Type
 10387 ;;		None
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;		None
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1    wreg      void 
 10392 ;; Registers used:
 10393 ;;		wreg, status,2, status,0
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10399 ;;      Params:         0       0       0       0       0       0       0       0       0
 10400 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10401 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10402 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10403 ;;Total ram usage:        2 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; This function calls:
 10406 ;;		Nothing
 10407 ;; This function is called by:
 10408 ;;		_isr
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           
 10412                           	psect	text55
 10413  002684                     __ptext55:
 10414                           	opt callstack 0
 10415  002684                     _Ecg_Interrupt:
 10416                           	opt callstack 20
 10417  002684                     
 10418                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
 10419  002684  0E01               	movlw	1
 10420  002686  6E01               	movwf	??_Ecg_Interrupt^0,c
 10421  002688  5058               	movf	(_ECG_FLAGS+1)^0,w,c
 10422  00268A  0B07               	andlw	7
 10423  00268C  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
 10424  00268E  5001               	movf	??_Ecg_Interrupt^0,w,c
 10425  002690  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
 10426  002692  5058               	movf	(_ECG_FLAGS+1)^0,w,c
 10427  002694  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 10428  002696  0BF8               	andlw	-8
 10429  002698  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 10430  00269A  6E58               	movwf	(_ECG_FLAGS+1)^0,c
 10431  00269C                     
 10432                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
 10433  00269C  0100               	movlb	0	; () banked
 10434  00269E  2BC1               	incf	(_ECG_HEARTRATE+3)& (0+255),f,b
 10435  0026A0                     
 10436                           ; BSR set to: 0
 10437                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
 10438  0026A0  8857               	bsf	_ECG_FLAGS^0,4,c
 10439  0026A2                     
 10440                           ; BSR set to: 0
 10441  0026A2  0012               	return		;funcret
 10442  0026A4                     __end_of_Ecg_Interrupt:
 10443                           	opt callstack 0
 10444                           
 10445 ;; *************** function _EUSART_RX_Interrupt *****************
 10446 ;; Defined at:
 10447 ;;		line 68 in file "EUSART.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;		None
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  c               1    1[COMRAM] unsigned char 
 10452 ;; Return value:  Size  Location     Type
 10453 ;;                  1    wreg      void 
 10454 ;; Registers used:
 10455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10456 ;; Tracked objects:
 10457 ;;		On entry : 0/0
 10458 ;;		On exit  : 0/0
 10459 ;;		Unchanged: 0/0
 10460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10461 ;;      Params:         0       0       0       0       0       0       0       0       0
 10462 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10463 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10464 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10465 ;;Total ram usage:        2 bytes
 10466 ;; Hardware stack levels used:    1
 10467 ;; This function calls:
 10468 ;;		Nothing
 10469 ;; This function is called by:
 10470 ;;		_isr
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           	psect	text56
 10475  00219E                     __ptext56:
 10476                           	opt callstack 0
 10477  00219E                     _EUSART_RX_Interrupt:
 10478                           	opt callstack 20
 10479  00219E                     
 10480                           ;EUSART.c: 69: uint8_t c = RCREG;
 10481  00219E  CFAE F002          	movff	4014,EUSART_RX_Interrupt@c	;volatile
 10482                           
 10483                           ;EUSART.c: 70: if(OERR == 1) {
 10484  0021A2  A2AB               	btfss	4011,1,c	;volatile
 10485  0021A4  EFD6  F010         	goto	i2u320_41
 10486  0021A8  EFD8  F010         	goto	i2u320_40
 10487  0021AC                     i2u320_41:
 10488  0021AC  EFEB  F010         	goto	i2l4104
 10489  0021B0                     i2u320_40:
 10490  0021B0                     
 10491                           ;EUSART.c: 71: CREN = 0;
 10492  0021B0  98AB               	bcf	4011,4,c	;volatile
 10493                           
 10494                           ;EUSART.c: 72: CREN = 1;
 10495  0021B2  88AB               	bsf	4011,4,c	;volatile
 10496  0021B4                     
 10497                           ;EUSART.c: 73: PORTAbits.RA2 = !PORTAbits.RA2;
 10498  0021B4  A480               	btfss	128,2,c	;volatile
 10499  0021B6  EFDF  F010         	goto	i2u321_41
 10500  0021BA  EFE3  F010         	goto	i2u321_40
 10501  0021BE                     i2u321_41:
 10502  0021BE  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 10503  0021C0  2A01               	incf	??_EUSART_RX_Interrupt^0,f,c
 10504  0021C2  EFE4  F010         	goto	i2u322_48
 10505  0021C6                     i2u321_40:
 10506  0021C6  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 10507  0021C8                     i2u322_48:
 10508  0021C8  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 10509  0021CA  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 10510  0021CC  5080               	movf	128,w,c	;volatile
 10511  0021CE  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 10512  0021D0  0BFB               	andlw	-5
 10513  0021D2  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 10514  0021D4  6E80               	movwf	128,c	;volatile
 10515  0021D6                     i2l4104:
 10516                           
 10517                           ;EUSART.c: 74: };EUSART.c: 76: EUSART_RX.iWrite++;
 10518  0021D6  0102               	movlb	2	; () banked
 10519  0021D8  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
 10520  0021DA                     
 10521                           ; BSR set to: 2
 10522                           ;EUSART.c: 77: if(EUSART_RX.iWrite == 128) EUSART_RX.iWrite = 0;
 10523  0021DA  0E80               	movlw	128
 10524  0021DC  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 10525  0021DE  A4D8               	btfss	status,2,c
 10526  0021E0  EFF4  F010         	goto	i2u323_41
 10527  0021E4  EFF6  F010         	goto	i2u323_40
 10528  0021E8                     i2u323_41:
 10529  0021E8  EFF8  F010         	goto	i2l4110
 10530  0021EC                     i2u323_40:
 10531  0021EC                     
 10532                           ; BSR set to: 2
 10533  0021EC  0E00               	movlw	0
 10534  0021EE  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
 10535  0021F0                     i2l4110:
 10536                           
 10537                           ; BSR set to: 2
 10538                           ;EUSART.c: 78: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
 10539  0021F0  0E02               	movlw	low (_EUSART_RX+2)
 10540  0021F2  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
 10541  0021F4  6ED9               	movwf	fsr2l,c
 10542  0021F6  6ADA               	clrf	fsr2h,c
 10543  0021F8  0E02               	movlw	high (_EUSART_RX+2)
 10544  0021FA  22DA               	addwfc	fsr2h,f,c
 10545  0021FC  C002  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
 10546  002200                     
 10547                           ; BSR set to: 2
 10548  002200  0012               	return		;funcret
 10549  002202                     __end_of_EUSART_RX_Interrupt:
 10550                           	opt callstack 0
 10551                           
 10552                           	psect	rparam
 10553  0000                     
 10554                           	psect	temp
 10555  00005B                     btemp:
 10556                           	opt callstack 0
 10557  00005B                     	ds	1
 10558  0000                     int$flags	set	btemp
 10559  0000                     wtemp8	set	btemp+1
 10560  0000                     ttemp5	set	btemp+1
 10561  0000                     ttemp6	set	btemp+4
 10562  0000                     ttemp7	set	btemp+8
 10563                           tosu	equ	0xFFF
 10564                           tosh	equ	0xFFE
 10565                           tosl	equ	0xFFD
 10566                           stkptr	equ	0xFFC
 10567                           pclatu	equ	0xFFB
 10568                           pclath	equ	0xFFA
 10569                           pcl	equ	0xFF9
 10570                           tblptru	equ	0xFF8
 10571                           tblptrh	equ	0xFF7
 10572                           tblptrl	equ	0xFF6
 10573                           tablat	equ	0xFF5
 10574                           prodh	equ	0xFF4
 10575                           prodl	equ	0xFF3
 10576                           indf0	equ	0xFEF
 10577                           postinc0	equ	0xFEE
 10578                           postdec0	equ	0xFED
 10579                           preinc0	equ	0xFEC
 10580                           plusw0	equ	0xFEB
 10581                           fsr0h	equ	0xFEA
 10582                           fsr0l	equ	0xFE9
 10583                           wreg	equ	0xFE8
 10584                           indf1	equ	0xFE7
 10585                           postinc1	equ	0xFE6
 10586                           postdec1	equ	0xFE5
 10587                           preinc1	equ	0xFE4
 10588                           plusw1	equ	0xFE3
 10589                           fsr1h	equ	0xFE2
 10590                           fsr1l	equ	0xFE1
 10591                           bsr	equ	0xFE0
 10592                           indf2	equ	0xFDF
 10593                           postinc2	equ	0xFDE
 10594                           postdec2	equ	0xFDD
 10595                           preinc2	equ	0xFDC
 10596                           plusw2	equ	0xFDB
 10597                           fsr2h	equ	0xFDA
 10598                           fsr2l	equ	0xFD9
 10599                           status	equ	0xFD8


Data Sizes:
    Strings     357
    Constant    1598
    Data        8
    BSS         182
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     76     108
    BANK1           256    168     192
    BANK2           256      0     130
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_22(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[2]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[2]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[2]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_22(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[2]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_BaudRateSet@request(BANK0[20]), STR_22(CODE[7]), STR_21(CODE[9]), STR_19(CODE[4]), 
		 -> STR_15(CODE[10]), STR_13(CODE[8]), STR_9(CODE[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_BaudRateSet@request(BANK0[20]), STR_22(CODE[7]), STR_21(CODE[9]), STR_19(CODE[4]), 
		 -> STR_15(CODE[10]), STR_13(CODE[8]), STR_9(CODE[10]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), STR_25(CODE[3]), STR_20(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), loop@response_155(BANK1[32]), loop@response_152(BANK1[32]), loop@response(BANK1[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), loop@response_155(BANK1[32]), loop@response_152(BANK1[32]), loop@response(BANK1[32]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_27(CODE[11]), STR_24(CODE[12]), STR_16(CODE[4]), STR_11(CODE[4]), 
		 -> STR_3(CODE[27]), STR_2(CODE[32]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_BaudRateAutoDetect@zzzz(BANK0[32]), A6_BaudRateSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@zzzz_149(BANK1[32]), 
		 -> loop@zzzz(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_BaudRateSet@request(BANK0[20]), STR_21(CODE[9]), STR_19(CODE[4]), STR_15(CODE[10]), 
		 -> STR_13(CODE[8]), STR_9(CODE[10]), 

    sp__memset	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), loop@response_155(BANK1[32]), loop@response_152(BANK1[32]), loop@response(BANK1[32]), 

    A6_ReadLine@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), 
		 -> loop@response_155(BANK1[32]), loop@response_152(BANK1[32]), loop@response(BANK1[32]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response_155(BANK1[32]), 
		 -> loop@response_152(BANK1[32]), loop@response(BANK1[32]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_BaudRateSet@request(BANK0[20]), STR_21(CODE[9]), STR_19(CODE[4]), STR_15(CODE[10]), 
		 -> STR_13(CODE[8]), STR_9(CODE[10]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    A6_BaudRateGet@baudRateToken	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_23(CODE[2]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateAutoDetect@zzzz(BANK0[32]), STR_26(CODE[23]), STR_18(CODE[28]), 
		 -> STR_17(CODE[11]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@response_155(BANK1[32]), STR_14(CODE[19]), 
		 -> loop@response_152(BANK1[32]), STR_12(CODE[13]), loop@zzzz_149(BANK1[32]), STR_10(CODE[16]), 
		 -> loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), STR_6(CODE[11]), 
		 -> STR_5(CODE[23]), STR_4(CODE[25]), loop@zzzz(BANK1[32]), 

    printLine@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateAutoDetect@zzzz(BANK0[32]), STR_26(CODE[23]), loop@response_155(BANK1[32]), 
		 -> STR_14(CODE[19]), loop@response_152(BANK1[32]), STR_12(CODE[13]), loop@zzzz_149(BANK1[32]), 
		 -> STR_10(CODE[16]), loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), 
		 -> STR_6(CODE[11]), STR_5(CODE[23]), STR_4(CODE[25]), loop@zzzz(BANK1[32]), 

    loop$144	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_7(CODE[13]), STR_6(CODE[11]), 

    loop$139	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_4(CODE[25]), loop@zzzz(BANK1[32]), 


Critical Paths under _main in COMRAM

    _loop->_sprintf
    _A6_Process_Random_Comms->_printLine
    _A6_BaudRateSet->_sprintf
    _A6_BaudRateGet->_A6_Command
    _A6_BaudRateGet->_atol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _atol->___lmul
    _TFT_Init->_TFT_FillScreen
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _TFT_DrawLine->_TFT_DrawPixel
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _TFT_FillScreen->_TFT_Flood
    _EUSART_Init->_memset
    _A6_BaudRateAutoDetect->_sprintf
    _sprintf->_A6_BaudRateGet
    ___llmod->___lldiv
    _printLine->_TFT_DrawString
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawFillRect
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_Flood
    _TFT_FullScreen->_TFT_SetAddrWindow
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister
    _EUSART_BaudRateSet->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen
    _A6_ReadLine->_EUSART_BufferGetChar
    _EUSART_BufferGetChar->_EUSART_RX_AvailableData

Critical Paths under _isr in COMRAM

    _isr->_EUSART_RX_Interrupt
    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_A6_BaudRateSet
    _A6_BaudRateSet->_sprintf
    _A6_Init->_A6_BaudRateAutoDetect
    _A6_BaudRateAutoDetect->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  274480
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               172   172      0  162404
                                             72 BANK0      4     4      0
                                              0 BANK1    168   168      0
              _A6_BaudRateAutoDetect
                     _A6_BaudRateGet
                     _A6_BaudRateSet
                         _A6_Command
                         _A6_IsAlive
            _A6_Process_Random_Comms
                          _printLine
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _A6_Process_Random_Comms                             33    33      0   36745
                                              0 BANK0     33    33      0
                        _A6_ReadLine
            _EUSART_RX_AvailableData
                          _printLine
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateSet                                      60    56      4   24495
                                             12 BANK0     60    56      4
                     _A6_BaudRateGet
                         _A6_Command
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _A6_BaudRateGet                                      44    40      4    9237
                                             30 COMRAM    44    40      4
                         _A6_Command
                               _atol
                            _sleepMS
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2078
                                             17 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strstr                                               4     0      4    1477
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              7     1      6     362
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     544
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4     834
                                             16 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            10    10      0   10568
                                             29 COMRAM    10    10      0
                     _TFT_FillScreen
                     _TFT_FullScreen
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0   56099
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (2) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Ok                              0     0      0   30938
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawLine                                        31    21     10    5824
                                             18 COMRAM    31    21     10
                      _TFT_DrawPixel
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     370
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Failure                         0     0      0   25114
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (2) _TFT_FillScreen                                       2     0      2    5356
                                             27 COMRAM     2     0      2
                          _TFT_Flood
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0     552
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              0     0      0   44857
              _A6_BaudRateAutoDetect
                            _sleepMS
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateAutoDetect                               33    33      0   44432
                                             12 BANK0     33    33      0
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                          _printLine
                            _sleepMS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    25      8    4022
                                             74 COMRAM    12     4      8
                                              0 BANK0     12    12      0
                     _A6_BaudRateGet (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     425
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _printLine                                            4     0      4   34145
                                             73 COMRAM     4     0      4
                   _TFT_DrawFillRect
                     _TFT_DrawString
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawString                                      11     0     11   19758
                                             62 COMRAM    11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawChar                                        21    11     10   17756
                                             41 COMRAM    21    11     10
                   _TFT_DrawFillRect
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawPixel                                        6     0      6    3362
                                             12 COMRAM     6     0      6
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawFillRect                                    14     4     10   11911
                                             27 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1071
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _TFT_FullScreen                                       0     0      0    2896
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (6) _TFT_SetAddrWindow                                    8     0      8    2896
                                             12 COMRAM     8     0      8
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (6) _TFT_Flood                                           15     9      6    2950
                                             12 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TFT_WriteRegister                                    8     4      4    2156
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateSet                                  12     8      4     937
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _A6_IsAlive                                          33    33      0    4751
                                             30 COMRAM    33    33      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     547
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _A6_Command                                           7     0      7    4131
                                             23 COMRAM     7     0      7
                        _A6_ReadLine
                    _EUSART_RX_Flush
                   _EUSART_TX_String
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_TX_String                                     3     0      3     219
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_Char                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_RX_Flush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _A6_ReadLine                                          7     2      5    1736
                                             16 COMRAM     7     2      5
               _EUSART_BufferGetChar
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     552
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _EUSART_BufferGetChar                                 2     0      2     394
                                             14 COMRAM     2     0      2
            _EUSART_RX_AvailableData
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_AvailableData                             10     8      2     220
                                              4 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (11) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_Interrupt                                 2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _sleepMS
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _sleepMS
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_WriteRegister
         ___awdiv
         _abs
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_FillScreen
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_WriteRegister
     _TFT_FullScreen
       _TFT_SetAddrWindow
         _TFT_WriteRegister
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _sleepMS
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _A6_BaudRateGet
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atol
         ___lmul
         _isdigit
       _sleepMS
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_BaudRateSet
       _A6_BaudRateGet
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _sleepMS
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _sleepMS
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
       _strcmp
     _A6_Command
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_Flush
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _strlen
     _A6_IsAlive
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _strcmp
     _A6_Process_Random_Comms
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_AvailableData
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _strcmp
     _printLine
       _TFT_DrawFillRect
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_FullScreen
           _TFT_SetAddrWindow
             _TFT_WriteRegister
         _TFT_SetAddrWindow
           _TFT_WriteRegister
         ___wmul
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
     _sprintf
       _A6_BaudRateGet (ARG)
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _sleepMS
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      82       9       50.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A8      C0       7       75.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4C      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     208      20        0.0%
DATA                 0      0     208       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 26 17:13:19 2019

             ?_A6_Process_Random_Comms 0001                 A6_BaudRateAutoDetect@i 008C  
                  __size_of_A6_IsAlive 006A                                     l91 250E  
                                   l85 0614                                     l95 1BB8  
                  __size_of_A6_Command 003A                           ___awdiv@sign 000A  
                  ___wmul@multiplicand 0007                            __CFG_BORV$0 000000  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                                    l212 1DC0  
                                  l215 2662                                    l231 0D46  
                                  l223 14DC                                    l160 1F20  
                                  l209 26C0                                    l250 0EA8  
                                  l242 1EAE                                    l226 2498  
                                  l252 0F64                                    l500 10B8  
                                  l421 22AE                                    l254 0ECA  
                                  l270 0A46                                    l262 23D6  
                                  l247 0E54                                    l239 0DE4  
                                  l521 1766                                    l257 0F3E  
                                  l513 1690                                    l505 131C  
                                  l610 2348                                    l194 241A  
                                  l370 2616                                    l259 0F66  
                                  l435 1E38                                    l516 2548  
                                  l605 1C40                                    l285 1A1C  
                                  l438 24D4                                    l534 1AA8  
                                  l519 16AC                                    l279 0BFC  
                                  l635 0738                                    l483 26DA  
                                  l581 26DE                                    l590 245A  
                                  l662 263C                                    l638 07C0  
                                  l575 2390                                    l584 26F2  
                                  l489 20D0                                    l673 2056  
                                  l578 1CC4                                    l674 2066  
                                  l659 0A08        __end_of_Ecg_Background_Leads_Ok 1E3A  
                                  l598 26FE                                    l696 198C  
                                  l689 197C                                    l893 182A  
                                  _GIE 007F97                           __CFG_CPB$OFF 000000  
                         printLine@str 004A                           __CFG_CPD$OFF 000000  
                         __CFG_BOR$OFF 000000                                    _abs 2582  
                                  _isr 0008                        __end_of_A6_Init 26DC  
                                  wreg 000FE8                   __size_of_A6_ReadLine 00D6  
                         TFT_Flood@len 000F                  EUSART_BaudRateSet@tmp 001A  
                         ?_EUSART_Init 0001                           __CFG_LVP$OFF 000000  
                         TFT_Init@data 0020                           __CFG_WDT$OFF 000000  
                                 ?_abs 0005                                   l1070 1B20  
                                 l1330 10BA                                   l3100 23EA  
                                 l1324 25AC                                   l2300 26AE  
                                 l1077 1B30                                   l1325 25B4  
                                 l1350 2580                                   l3110 23FA  
                                 l3102 23EE                                   l2302 26B0  
                                 l3200 22FE                                   l3120 240E  
                                 l3112 2400                                   l3104 23F0  
                                 l1344 25E6                                   l2304 26BE  
                                 l1408 2194                                   l4000 02B0  
                                 l1417 15B6                                   l1409 219C  
                                 l3210 2336                                   l3202 231A  
                                 l3122 2412                                   l3114 2404  
                                 l3106 23F4                                   l3130 263E  
                                 l1338 11E2                                   l4010 030E  
                                 l4002 02C4                                   l1339 11F2  
                                 l1427 212E                                   l3212 233A  
                                 l3300 16E2                                   l1364 22FC  
                                 l3124 2416                                   l3116 2408  
                                 l3108 23F8                                   l3140 0E0C  
                                 l3132 0DE6                                   l2340 1EBA  
                                 l3220 1CC6                                   l1428 2136  
                                 l4012 0360                                   l4020 03B8  
                                 l4004 02D2                                   l3206 2320  
                                 l3310 171E                                   l1358 2260  
                                 l3126 2418                                   l3118 240C  
                                 l3150 0E9E                                   l3142 0E10  
                                 l3134 0DEA                                   l2350 1EE0  
                                 l2342 1EC0                                   l3222 1CF6  
                                 l1390 13FE                                   l4030 0474  
                                 l4022 03D6                                   l4014 0370  
                                 l4006 02DC                                   l3160 1BBA  
                                 l3208 2324                                   l3312 172E  
                                 l3320 1764                                   l3304 16F4  
                                 l3216 26DE                                   l3152 0EB4  
                                 l3144 0E3E                                   l3136 0DEE  
                                 l3128 1D48                                   l3240 0A42  
                                 l3232 0A0A                                   l3400 19EC  
                                 l2360 1EF2                                   l2352 1EE4  
                                 l2344 1ED8                                   l2336 1EB0  
                                 l1376 18E8                                   l4040 051C  
                                 l4024 0428                                   l4032 0488  
                                 l4016 0384                                   l4008 02F0  
                                 l1393 13F6                                   l3162 1BCC  
                                 l3314 1730                                   l3306 16F8  
                                 l3218 26EC                                   l3410 220E  
                                 l3154 0F1A                                   l3138 0E02  
                                 l3250 0A9A                                   l3330 25DC  
                                 l3402 2582                                   l2370 1F06  
                                 l2362 1EF6                                   l2354 1EE6  
                                 l2346 1EDA                                   l2338 1EB2  
                                 l3226 1D02                                   l4050 05CE  
                                 l4042 053C                                   l4034 04A6  
                                 l4026 0438                                   l4018 03A4  
                                 l3172 1C2A                                   l3164 1BD4  
                                 l3308 170A                                   l3412 223E  
                                 l3092 23D8                                   l3156 0F34  
                                 l3148 0E84                                   l3180 2634  
                                 l3260 0BCC                                   l3252 0B06  
                                 l3332 25E0                                   l3324 25B8  
                                 l3404 2590                                   l2292 26A4  
                                 l2380 1F1A                                   l2372 1F0A  
                                 l2364 1EF8                                   l2356 1EEA  
                                 l2348 1EDC                                   l3340 201C  
                                 l3228 1D3E                                   l1396 1CC6  
                                 l3420 1830                                   l1388 1338  
                                 l4052 05E2                                   l4036 04F8  
                                 l4044 054E                                   l4028 044C  
                                 l3174 1C3E                                   l3166 1C04  
                                 l3318 1746                                   l3270 26FA  
                                 l3414 2256                                   l3406 2202  
                                 l3510 1924                                   l3502 18EA  
                                 l3094 23DE                                   l3158 0F52  
                                 l3190 245C                                   l3262 0BCE  
                                 l3254 0B1E                                   l3246 0A54  
                                 l3238 0A0E                                   l3326 25BC  
                                 l2294 26A8                                   l2382 1F1C  
                                 l2374 1F12                                   l2366 1EFC  
                                 l2358 1EEE                                   l3342 202C  
                                 l1398 1D46                                   l3350 1512  
                                 l3430 18B0                                   l3422 186A  
                                 l4054 0602                                   l4046 056C  
                                 l4038 0508                                   l3168 1C24  
                                 l3192 254A                                   l3272 22B0  
                                 l3408 2206                                   l3520 196C  
                                 l3512 1932                                   l3504 18FA  
                                 l3096 23E2                                   l3184 1E3A  
                                 l3264 0BD2                                   l3256 0B2E  
                                 l3248 0A64                                   l3328 25CC  
                                 l2296 26AA                                   l2384 1F1E  
                                 l2376 1F16                                   l2368 1F04  
                                 l3344 2036                                   l3336 1FFE  
                                 l3360 15AE                                   l3352 1550  
                                 l3432 18E0                                   l3440 134A  
                                 l4048 05BE                                   l3194 2556  
                                 l3290 1692                                   l3282 241C  
                                 l3274 22BC                                   l3522 1976  
                                 l3514 193C                                   l3506 1910  
                                 l3098 23E6                                   l3178 2618  
                                 l3186 1E7E                                   l3266 0BE6  
                                 l3258 0B64                                   l3530 1782  
                                 l2298 26AC                                   l2378 1F18  
                                 l3338 200E                                   l3346 14DE  
                                 l3426 1876                                   l3418 182C  
                                 l3370 20FE                                   l3602 1020  
                                 l3610 1082                                   l3196 2562  
                                 l3292 16BA                                   l3284 2420  
                                 l3276 22C0                                   l3380 2510  
                                 l3516 195A                                   l3508 1918  
                                 l3188 1EAA                                   l3268 0BE8  
                                 l3700 08E0                                   l3620 0624  
                                 l3540 17A8                                   l3532 1786  
                                 l3524 1768                                   l3356 158C  
                                 l3348 14E2                                   l3428 189E  
                                 l3372 2138                                   l3364 20D2  
                                 l3460 13EE                                   l3452 13A0  
                                 l3444 1356                                   l3436 131E  
                                 l3604 105C                                   l3612 1096  
                                 l4180 2674                                   l4172 2664  
                                 l3198 2566                                   l3294 16CA  
                                 l3286 2444                                   l3278 22F0  
                                 l3382 2514                                   l3518 196A  
                                 l3390 24F0                                   l3710 092A  
                                 l3702 08EC                                   l3630 0674  
                                 l3622 0636                                   l3550 17DE  
                                 l3542 17BA                                   l3534 1794  
                                 l3526 176C                                   l3470 10DC  
                                 l3358 1594                                   l3374 2144  
                                 l3366 20DE                                   l3454 13C2  
                                 l3446 1372                                   l3438 1330  
                                 l3614 10A8                                   l3606 1070  
                                 l4182 2678                                   l4174 2668  
                                 l3288 2448                                   l3384 2530  
                                 l3800 1CBC                                   l3392 198E  
                                 l3720 09C0                                   l3712 092E  
                                 l3704 08F0                                   l3640 06EA  
                                 l3632 067E                                   l3624 0642  
                                 l3552 17F4                                   l3544 17C2  
                                 l3560 180A                                   l3536 179C  
                                 l3528 177A                                   l3480 1122  
                                 l3472 10EE                                   l3464 10BA  
                                 l3376 214C                                   l3368 20E6  
                                 l3456 13DA                                   l3448 138A  
                                 l3608 1072                                   l4176 266C  
                                 l3298 16D0                                   l3802 1CC0  
                                 l3394 1992                                   l3730 1B3C  
                                 l3570 1AC0                                   l3714 0938  
                                 l3706 0908                                   l3650 0754  
                                 l3642 06F0                                   l3634 069A  
                                 l3626 064A                                   l3722 09DA  
                                 l3618 0616                                   l3562 181A  
                                 l3554 17FC                                   l3546 17CA  
                                 l3538 17A0                                   l3482 112A  
                                 l3474 1102                                   l3466 10C6  
                                 l3378 2164                                   l3458 13E6  
                                 l3810 1A3C                                   l4178 2670  
                                 l3740 2070                                   l3396 19DC  
                                 l3732 1B68                                   l3388 24D6  
                                 l3580 1B10                                   l3572 1AC8  
                                 l3716 09B0                                   l3708 091E  
                                 l3660 07A8                                   l3652 076C  
                                 l3724 09FC                                   l3636 06C4  
                                 l3628 0656                                   l3900 249A  
                                 l3564 1822                                   l3556 17FE  
                                 l3548 17D8                                   l3476 1114  
                                 l3468 10CA                                   l3820 1A96  
                                 l3812 1A58                                   l3750 20CE  
                                 l3742 2090                                   l3398 19E8  
                                 l3734 1B98                                   l3582 1B1A  
                                 l3574 1AD4                                   l3718 09BC  
                                 l3670 080E                                   l3662 07AC  
                                 l3654 0778                                   l3638 06C8  
                                 l3646 06F6                                   l3902 24A6  
                                 l3558 1804                                   l3910 1422  
                                 l3494 1188                                   l3478 1116  
                                 l3590 0FB6                                   l3830 1236  
                                 l3822 11F4                                   l3806 1A1E  
                                 l3744 20B6                                   l3736 1BB0  
                                 l3728 1B32                                   l3576 1AE2  
                                 l3568 1AAA                                   l3664 07CE  
                                 l3672 0816                                   l3656 0792  
                                 l3648 0746                                   l3760 0C4C  
                                 l3920 1486                                   l3912 142E  
                                 l3904 1400                                   l3496 119C  
                                 l3488 1140                                   l3592 0FEE  
                                 l3584 0F68                                   l3840 12DC  
                                 l3832 125A                                   l3824 1208  
                                 l3816 1A6C                                   l3738 2068  
                                 l3578 1B00                                   l3690 0890  
                                 l3682 0854                                   l3666 07E6  
                                 l3658 079A                                   l3850 15B8  
                                 l3930 234A                                   l3754 2392  
                                 l3770 0CE8                                   l3762 0C5E  
                                 l3922 14A0                                   l3914 144C  
                                 l3906 1404                                   l3498 11AC  
                                 l3594 1000                                   l3586 0F70  
                                 l3842 12F0                                   l3834 127A  
                                 l3826 1220                                   l4570 01E0  
                                 l4562 01BC                                   l3748 20BC  
                                 l3692 0896                                   l3684 0856  
                                 l3668 07F2                                   l3860 15FE  
                                 l3852 15CC                                   l3932 2360  
                                 l3756 23BA                                   l3780 0D80  
                                 l3772 0D00                                   l3764 0C8E  
                                 l3940 25FE                                   l3916 1450  
                                 l3924 14B4                                   l3908 141A  
                                 l3596 101C                                   l3588 0F90  
                                 l3844 1304                                   l3836 128E  
                                 l4572 01FC                                   l4564 01EE  
                                 l3694 08BA                                   l3686 0868  
                                 l3678 081A                                   l3870 167C  
                                 l3862 1612                                   l3950 26C2  
                                 l3934 2368                                   l3782 0D9C  
                                 l3790 0DC6                                   l3774 0D3A  
                                 l3766 0CAC                                   l3758 0BFE  
                                 l3942 2606                                   l3926 14CC  
                                 l3918 1472                                   l3838 12B4  
                                 l4566 020A                                   l3792 1C42  
                                 l3696 08C6                                   l3688 087A  
                                 l3872 1680                                   l3864 1650  
                                 l3952 26C6                                   l3936 2374  
                                 l3784 0DA4                                   l3776 0D4E  
                                 l3768 0CDC                                   l3880 2276  
                                 l3944 260A                                   l3928 14D0  
                                 l4568 01D2                                   l3960 0086  
                                 l3794 1C48                                   l3698 08CE  
                                 l3858 15D2                                   l3786 0DB2  
                                 l3778 0D60                                   l3890 1DC2  
                                 l3882 2284                                   l3874 2262  
                                 l3946 2610                                   l3938 25E8  
                                 l3970 0112                                   l3962 0096  
                                 l3954 0012                                   l3796 1C7C  
                                 l3868 1668                                   l3788 0DC2  
                                 l3892 1DCE                                   l3884 2286  
                                 l3876 2266                                   l3948 2614  
                                 l3972 013C                                   l3964 00BE  
                                 l3956 0016                                   l3798 1CB2  
                                 l3894 1DFC                                   l3886 22A8  
                                 l3878 2274                                   l3990 0268  
                                 l3974 0166                                   l3982 01AA  
                                 l3966 00D2                                   l3958 0034  
                                 l3896 1E26                                   l3992 0270  
                                 l3976 018E                                   l3984 0220  
                                 l3968 00E8                                   l3898 1E2E  
                                 l3994 0284                                   l3986 0244  
                                 l3978 01A2                                   l3996 0298  
                                 l3988 025C                                   ?_isr 0001  
                                 l3998 02AC                                   STR_1 5F20  
                                 STR_2 5E99                                   STR_3 5ED5  
                                 STR_4 5EF0                                   STR_5 5F37  
                                 STR_6 5FAD                                   STR_7 5F71  
                                 STR_8 5FB8                                   STR_9 5FCD  
                                 _CREN 007D5C                                   u2000 0BFC  
                                 u2001 0BF8                                   u2010 22E0  
                                 u2100 1742                                   u2020 22F0  
                                 u2101 173E                                   u2021 22EC  
                        TFT_DrawChar@c 002E                                   u2110 1764  
                                 u2030 2440                                   u2111 1760  
                                 u2040 245A                                   u2120 25CC  
                                 u3000 2274                                   u2200 15AE  
                                 u2041 2456                                   u2017 22D6  
                                 u2121 25C8                                   u3001 2270  
                                 u2201 15AA                                   u2050 16CA  
                                 u2130 25DC                                   u3010 2284  
                                 u2210 20FE                                   u2051 16C6  
                                 u2131 25D8                                   u3011 2280  
                                 u2211 20FA                          TFT_DrawChar@i 003E  
                                 u2060 16E2                                   u2300 223E  
                                 u3020 229A                                   u2140 201C  
                                 u2220 212E                                   u3100 0298  
                        TFT_DrawChar@j 003D                                   u2061 16DE  
                                 u2037 2436                                   u2301 223A  
                                 u3021 2292                                   u2141 2018  
                                 u2221 212A                                   u3101 0294  
                                 _LATA 000F89                                   u2070 16F4  
                                 u2310 2256                                   u2150 2056  
                                 u2230 2164                                   u3110 02C4  
                                 _LATB 000F8A                                   u2071 16F0  
                                 u2311 2252                                   u2151 2052  
                                 u2231 2160                                   u3111 02C0  
                                 _LATC 000F8B                                   u2080 170A  
                                 u3040 1486                                   u2400 10DC  
                                 u2160 1502                                   u2320 186A  
                                 u2240 2194                                   u3120 030E  
                                 u2081 1706                                   u3041 1482  
                                 u2401 10D8                                   u2321 1866  
                                 u2241 2190                                   u3121 030A  
                                 u2090 171A                                   u2250 250E  
                                 u3050 14CC                                   u2410 10EE  
                                 u2170 1512                                   u2330 18B0  
                                 u3130 0360                                   u2091 1716  
                                 u2251 250A                                   u3051 14C8  
                                 u2411 10EA                                   u2171 150E  
                                 u2331 18AC                                   u3131 035C  
                                 u2260 19C2                                   u2500 1794  
                                 u3060 25FE                                   u2420 1114  
                                 u2180 1550                                   u2340 18D0  
                                 u3140 03D6                                   u2501 1790  
                                 u3061 25FA                                   u2421 1110  
                                 u2181 154C                                   u3141 03D2  
                                 u2270 1A0C                                   u2510 17BA  
                                 u3038 229C                                   u2430 113C  
                                 u2190 1570                                   u2350 18E0  
                                 u3150 0428                                   u3070 0034  
                                 u2511 17B6                                   u2431 1138  
                                 u2167 14F8                                   u2351 18DC  
                                 u3151 0424                                   u3071 0030  
                                 u1800 0E9E                                   u2280 1A1C  
                                 u2520 17D8                                   u2440 119C  
                                 u2360 1330                                   u2600 105C  
                                 u3160 04A6                                   u3080 0086  
                                 u1801 0E9A                                   u2281 1A18  
                                 u2521 17D4                                   u2441 1198  
                                 u2185 1540                                   u2361 132C  
                                 u2601 1058                                   u3161 04A2  
                                 u3081 0082                                   u1810 0EC6  
                                 u2530 17F4                                   u2290 2590  
                                 u2450 11AC                                   u2370 134A  
                                 u2610 1082                                   u3170 04F8  
                                 u3090 025C                          TFT_DrawChar@x 002A  
                                 u1811 0EC2                                   u2267 19B8  
                                 u2531 17F0                                   u2291 258C  
                                 u2451 11A8                                   u2187 1536  
                                 u2347 18C6                                   u2371 1346  
                                 u2611 107E                                   u3171 04F4  
                                 u3091 0258                          TFT_DrawChar@y 002C  
                                 u1900 26EC                                   u2460 1910  
                                 u1820 0F34                                   u2700 0850  
                                 u2540 181A                                   u2380 138A  
                                 u2620 10A8                                   u3180 056C  
                                 u1901 26E8                                   u2461 190C  
                                 u1821 0F30                                   u2277 1A02  
                                 u2701 084C                                   u2541 1816  
                                 u2197 1566                                   u2381 1386  
                                 u2621 10A4                                   u3181 0568  
                                 u2470 1932                                   u1830 0F64  
                                 u2550 1AC0                                   u2710 0868  
                                 u2630 0636                                   u1910 1CE6  
                                 u2390 13DA                                   u3190 05BE  
                                 u2471 192E                                   u1831 0F60  
                                 u2551 1ABC                                   u2711 0864  
                                 u2631 0632                                   u2391 13D6  
                                 u3191 05BA                                   u1840 1BCC  
                                 u2480 195A                                   u2800 1BB0  
                                 u2560 1AE2                                   u2720 087A  
                                 u2640 0674                                   u1920 1CF6  
                                 u1841 1BC8                                   u2481 1956  
                                 u2801 1BAC                                   u2561 1ADE  
                                 u2721 0876                                   u2641 0670  
                                 u1921 1CF2                                   u1850 1C24  
                                 u2810 20B6                                   u2570 1B00  
                                 u2730 0890                                   u2650 06E6  
                                 u2490 177A                                   u1930 1D2E  
                                 u1851 1C20                                   u2811 20B2  
                                 u2571 1AFC                                   u2731 088C  
                                 u2651 06E2                                   u2491 1776  
                                 u1860 1C3E                                   u2820 20CE  
                                 u1780 0E30                                   u2740 08BA  
                                 u2660 0746                                   u2900 0DE4  
                                 u1940 1D3E                                   u2580 0FB6  
                                 u1861 1C3A                                   u2821 20CA  
                                 u2741 08B6                                   u2661 0742  
                                 u2901 0DE0                                   u1941 1D3A  
                                 u1917 1CDC                                   u2581 0FB2  
                                 u1870 2580                                   u2910 1C9C  
                                 u1790 0E50                                   u1950 0A54  
                                 u2750 08E0                                   u2670 0754  
                                 u2830 0C46                                   u2590 1000  
                                 u1871 257C                                   u1791 0E4C  
                                 u1951 0A50                                   u2751 08DC  
                                 u2671 0750                                   u2831 0C40  
                                 u3607 26B6                                   u2591 0FFC  
                                 u1880 231A                                   u1960 0A64  
                                 u2760 0908                                   u2680 07A8  
                                 u2840 0C48                                   u2920 1A38  
                                 u1881 2316                                   u1785 0E26  
                                 u1961 0A60                                   u2761 0904  
                                 u2681 07A4                                   u1937 1D24  
                                 u2921 1A34                                   u1890 2336  
                                 u1970 0B1E                                   u2770 091E  
                                 u2690 07CE                                   u2850 0C5E  
                                 u2930 1A68                                   u1891 2332  
                                 u2915 1C92                                   u1971 0B1A  
                                 u2771 091A                                   u2691 07CA  
                                 u2851 0C5A                                   u2931 1A64  
                                 _PEIE 007F96                                   u1980 0B2E  
                                 u2780 09DA                                   u2860 0CAC  
                                 u2940 1A92                                   u1981 0B2A  
                                 u2781 09D6                                   u2861 0CA8  
                                 u2941 1A8E                                   u1990 0BE6  
                                 u2790 09FC                                   u2870 0D3A  
                                 u2950 1220                                   u1991 0BE2  
                                 u2791 09F8                                   u2871 0D36  
                                 u2951 121C                                   u2880 0D60  
                                 u2960 12B4                                   u2881 0D5C  
                                 u3577 1ECA                                   u2961 12B0  
                                 u2890 0DB2                                   u2970 12F0  
                                 u2891 0DAE                                   u3587 140E  
                                 u2971 12EC                                   _RCIE 007CED  
                                 u2980 1612                                   _RCIF 007CF5  
                                 u2981 160E                                   u3597 1490  
                                 u2990 1690                                   u2991 168C  
                                 _OERR 007D59                                   _RBPU 007F8F  
              __size_of_A6_BaudRateGet 0152                __size_of_A6_BaudRateSet 012A  
                                 _TXIF 007CF4                          TFT_DrawLine@t 0020  
                                 abs@a 0005                                   _atol 10BA  
                                 _main 2664                        A6_BaudRateGet@j 004A  
                                 _init 1EB0                                   _tmp1 01B8  
                                 _tmp2 01B4                                   _tmp3 01B0  
                                 _tmp4 01AC                                   _tmp5 01A8  
                                 _loop 0012                                   fsr0h 000FEA  
                                 indf0 000FEF                                   fsr2h 000FDA  
                                 fsr0l 000FE9                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 005B                                   prodh 000FF4  
                                 prodl 000FF3                                   start 000E  
                    TFT_Flood@color_hi 001A                      TFT_Flood@color_lo 001B  
                        __CFG_IESO$OFF 000000            __size_of_EUSART_BaudRateSet 0084  
         __end_of_EUSART_BufferGetChar 234A                           ___param_bank 000000  
        ?_Ecg_Background_Leads_Failure 0001          A6_BaudRateSet@currentBaudRate 00A4  
                                ??_abs 0007                                  ??_isr 0003  
                        __CFG_PLLDIV$1 000000                        ??_TFT_DrawPixel 0013  
                       __CFG_CCP2MX$ON 000000                         printLine@color 004C  
                                ?_atol 0011                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 182C  
                                ?_loop 0001                                  STR_10 5F61  
                                STR_11 5FF7                                  STR_20 5FFB  
                                STR_12 5F7E                                  STR_13 5FE0  
                                STR_21 5FD7                                  STR_22 5FE8  
                                STR_14 5F4E                                  STR_23 5FED  
                                STR_15 5FC3                                  STR_16 5FF3  
                                STR_24 5F8B                                  STR_25 5FFB  
                                STR_17 5FA2                                  STR_26 5F09  
                                STR_18 5EB9                                  STR_19 5FEF  
                                STR_27 5F97                                  STR_28 5FFB  
                      __end_of___lldiv 198E                        ___awdiv@divisor 0007  
                      __end_of___llmod 1B32                         TFT_DrawChar@bg 0031  
                                i2l167 1FF2                                  i2l416 26A2  
                                i2l595 2200                        ___awdiv@counter 0009  
                                _RCREG 000FAE                                  _TMR3H 000FB3  
                                _TMR3L 000FB2                                  _SPBRG 000FAF  
                                _PORTB 000F81                          __CFG_USBDIV$2 000000  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TXREG 000FAD  
                                _Ecg_X 00CA                                  _Ecg_Y 0059  
                        __CFG_PWRT$OFF 000000                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0009                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                      ??_EUSART_RX_Flush 0005  
                       TFT_DrawLine@x0 0013                         TFT_DrawLine@x1 0017  
                       TFT_DrawLine@y0 0015                         TFT_DrawLine@y1 0019  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                       TFT_DrawLine@dx 0030                         TFT_DrawLine@dy 0028  
                        __CFG_WRTD$OFF 000000                         __CFG_EBTRB$OFF 000000  
              __size_of_Ecg_CheckLeads 004E                        __end_of_dpowers 5E4F  
                      __end_of_isdigit 25E8                       __end_of_TFT_Font 5D5B  
                     __end_of_TFT_Init 14DE                                  atol@a 001A  
                                atol@c 001E                                  atol@s 0011  
                       TFT_DrawPixel@x 000D                         TFT_DrawPixel@y 000F  
                   __size_of_TFT_Flood 0182                        __end_of_sleepMS 2510  
                     _TFT_DrawFillRect 1E3A                                  tablat 000FF5  
                   __size_of_TFT_Reset 001E                 __size_of_Ecg_Interrupt 0020  
                     __end_of_Ecg_Init 2618        A6_Process_Random_Comms@response 0060  
                                ttemp5 005C                                  ttemp6 005F  
                                ttemp7 0063                                  status 000FD8  
                                wtemp8 005C                        __end_of_sprintf 0A0A  
          EUSART_BufferGetChar@timeout 000F                        __end_of_strcspn 219E  
                      __end_of_strncmp 15B8        __end_of_A6_Process_Random_Comms 1AAA  
                       __CFG_MCLRE$OFF 000000                         TFT_Flood@color 000D  
                      __initialization 1F22                           __end_of_atol 11F4  
                         __end_of_main 2684                           __end_of_init 1F22  
                         __end_of_loop 0616                              ??_A6_Init 0057  
                               ??_atol 0015                                 ??_main 0057  
                     ??_TFT_FillScreen 001E                                 ??_init 0005  
                               ??_loop 00A8                          __activetblptr 000002  
                     ??_TFT_DrawString 004A                       loop@response_152 0120  
                     loop@response_155 0140                           ??_A6_IsAlive 001F  
                         ??_A6_Command 001F                         _EUSART_TX_Char 26DC  
                     ___llmod@dividend 0012                                 _ADRESH 000FC4  
                               _ADRESL 000FC3                       ___awdiv@dividend 0005  
                    _TFT_DrawChar$2152 0039                      _TFT_DrawChar$2153 003B  
                               i2l4100 21B0                                 i2l4110 21F0  
                               i2l4102 21B4                                 i2l4104 21D6  
                               i2l4200 1FE0                                 i2l4106 21DA  
                               i2l4202 1FEE                                 i2l4108 21EC  
                               i2l4092 2684                                 i2l4094 269C  
                               i2l4190 1FC4                                 i2l4096 26A0  
                               i2l4192 1FC8                                 i2l4184 1F9A  
                               i2l4098 219E                                 i2l4194 1FCC  
                               i2l4186 1FA8                                 i2l4196 1FD0  
                               i2l4188 1FB6                                 i2l4198 1FD2  
                _A6_BaudRateAutoDetect 15B8                                 _TMR3IE 007D01  
                               _TMR3IF 007D09                                 _SPBRGH 000FB0  
     __size_of_Ecg_Background_Leads_Ok 0078                         __CFG_XINST$OFF 000000  
                      TFT_DrawLine@err 002C                       ??_TFT_FullScreen 0015  
                               ___lmul 1FFE                                 ___wmul 2618  
               A6_BaudRateSet@baudRate 006C                              ??___awdiv 0009  
                            ??___lldiv 000D                              ??___llmod 001A  
                    ?_EUSART_TX_String 0009                     __end_of_A6_IsAlive 20D2  
                               _memset 254A                          _Ecg_Interrupt 2684  
                    __end_of_TFT_Flood 0F68                                 clear_0 1F60  
                               clear_1 1F6C                                 clear_2 1F78  
                   __end_of_A6_Command 254A                       ___awdiv@quotient 000B  
                    __end_of_TFT_Reset 26C2                     ??_EUSART_TX_String 000C  
                               _strchr 1CC6                                 _strcmp 2202  
                               _strlen 22B0                         A6_IsAlive@loop 003F  
                               _strtok 131E                                 _strspn 20D2  
                               _strstr 182C                           __pdataCOMRAM 0059  
                            ??_isdigit 0005                                 loop@zz 01A4  
                         __mediumconst 585A                 __end_of_EUSART_TX_Char 26F4  
                            ??_sleepMS 0009                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                 _EUSART_BufferGetChar 22FE                        TFT_DrawString@x 003F  
                      TFT_DrawString@y 0041                              ??_sprintf 0053  
                            ??_strcspn 000F                              ??_strncmp 000F  
                       _A6_BaudRateGet 0F68                         _A6_BaudRateSet 11F4  
                 __size_of_EUSART_Init 0048                             __accesstop 0060  
              __end_of__initialization 1F82                 A6_BaudRateSet@response 0070  
                      __CFG_PBADEN$OFF 000000                          ___rparam_used 000001  
                      TFT_Flood@blocks 0017                         __pcstackCOMRAM 0001  
                         __pidataBANK0 26F4                         ?_Ecg_Interrupt 0001  
                            ?_TFT_Init 0001                              ?_Ecg_Init 0001  
         __size_of_EUSART_RX_Interrupt 0064                        ?_EUSART_TX_Char 0001  
                ?_EUSART_BufferGetChar 000F                         _Ecg_CheckLeads 2262  
               __end_of_A6_BaudRateGet 10BA       __size_of_A6_Process_Random_Comms 008C  
               __end_of_A6_BaudRateSet 131E                           sprintf@width 0069  
               ?_A6_BaudRateAutoDetect 0001                             __pbssBANK0 00AC  
                           __pbssBANK1 01A8                             __pbssBANK2 0200  
                 A6_ReadLine@iResponse 0016                                ?___lmul 0005  
                              ?___wmul 0005             EUSART_BaudRateSet@baudRate 0012  
                      _EUSART_RX_Flush 26FA                             ??_TFT_Init 001E  
                              ?_memset 0005                                _A6_Init 26C2  
                       ___lmul@product 000D               __end_of_TFT_DrawFillRect 1EB0  
                              ?_strchr 0005                                ?_strcmp 0005  
                              ?_strlen 0005                          ??_A6_ReadLine 0016  
                              ?_strtok 0012                                ?_strspn 000B  
                              ?_strstr 0010                             ??_Ecg_Init 004A  
                   A6_ReadLine@timeout 0014                 TFT_WriteRegister@h_724 000B  
               TFT_WriteRegister@l_725 000C                 __end_of_Ecg_CheckLeads 22B0  
                     TFT_DrawChar@line 0038                       TFT_DrawChar@size 0033  
                   __size_of_printLine 0088                           A6_ReadLine@c 0017  
             ?_EUSART_RX_AvailableData 0005                        ?_A6_BaudRateGet 001F  
                      ?_A6_BaudRateSet 006C                              TFT_Init@i 0026  
                      __CFG_VREGEN$OFF 000000                  TFT_DrawFillRect@color 0024  
           __end_of_EUSART_BaudRateSet 1CC6                _Ecg_Background_Leads_Ok 1DC2  
                              __Hparam 0000                                __Lparam 0000  
                    A6_Command@command 0018                              _ECG_FLAGS 0057  
                      ??_Ecg_Interrupt 0001                                ___awdiv 1768  
                      __size_of___lmul 006A                                ___lldiv 18EA  
                      __size_of___wmul 0026                                ___llmod 1AAA  
                      __CFG_STVREN$OFF 000000                      A6_Command@timeout 001A  
                        _ECG_HEARTBEAT 00AC                                __pcinit 1F22  
                      __size_of_memset 0038                                __ramtop 0800  
                        _ECG_HEARTRATE 00BE                                __ptext0 2664  
                              __ptext1 0012                                __ptext2 1A1E  
                              __ptext3 11F4                                __ptext4 0F68  
                              __ptext5 131E                                __ptext6 20D2  
                              __ptext7 2138                                __ptext8 182C  
                              __ptext9 14DE                  __end_of_TFT_DrawPixel 249A  
                      __size_of_strchr 0082                        __size_of_strcmp 0060  
                      __size_of_strlen 004E                        __size_of_strtok 00E2  
                      __size_of_strspn 0066                        __size_of_strstr 00BE  
                              _dpowers 5E27                           __size_of_abs 0034  
                              _isdigit 25B6                           __size_of_isr 1FF6  
                   A6_BaudRateGet@loop 0043                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                 ??_EUSART_BufferGetChar 0011  
                              _sleepMS 24D6                    __end_of_A6_ReadLine 1768  
                              _sprintf 0616                                _strcspn 2138  
                              _strncmp 14DE                         __pintcode_body 1F90  
                            _EUSART_RX 0200                   end_of_initialization 1F82  
                              memset@c 0007                                memset@n 0009  
                              memset@p 000B                          __Lmediumconst 585A  
                              int_func 1F90                     TFT_WriteRegister@h 0009  
                   TFT_WriteRegister@l 000A                        ___lldiv@divisor 0009  
              __end_of_EUSART_RX_Flush 2700                        ___lldiv@counter 0011  
                    __end_of_printLine 1BBA              Ecg_CheckLeads@leadsStatus 0008  
                            _RCSTAbits 000FAB                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                       TFT_DrawString@bg 0047  
                        ?_TFT_DrawChar 002A                          ?_TFT_DrawLine 0013  
                              strcmp@r 000B                                strlen@s 0005  
                              strspn@i 0010                              _PORTAbits 000F80  
      __end_of_EUSART_RX_AvailableData 1C42                              _PORTCbits 000F82  
                            _TFT_Flood 0DE6                              _TFT_Reset 26A4  
              _A6_Process_Random_Comms 1A1E              __size_of_EUSART_TX_String 0040  
            ??_Ecg_Background_Leads_Ok 004A                            TFT_Init@cmd 0024  
                            _TXSTAbits 000FAC                    _EUSART_RX_Interrupt 219E  
                       ??_TFT_DrawChar 0034                         ??_TFT_DrawLine 001D  
             EUSART_RX_AvailableData@t 000B                         __end_of___lmul 2068  
                       __end_of___wmul 263E                            _BAUDCONbits 000FB8  
                   A6_IsAlive@response 001F                          __pidataCOMRAM 2700  
                     ??_EUSART_TX_Char 0005                         __end_of_memset 2582  
                    __size_of_TFT_Init 00DE                           _MILLISECONDS 01BC  
                          _A6_ReadLine 1692                             ?_TFT_Flood 000D  
                       __end_of_strchr 1D48                         __end_of_strcmp 2262  
                       __end_of_strlen 22FE                         __end_of_strtok 1400  
                       __end_of_strspn 2138                         __end_of_strstr 18EA  
                           ?_TFT_Reset 0001                    start_initialization 1F22  
                 ?_EUSART_RX_Interrupt 0001                ??_A6_BaudRateAutoDetect 0057  
                    __size_of_Ecg_Init 0030                            __end_of_abs 25B6  
                          __end_of_isr 1FFE                          ??_EUSART_Init 000D  
                  TFT_SetAddrWindow@x1 000D                    TFT_SetAddrWindow@x2 0011  
                  TFT_SetAddrWindow@y1 000F                    TFT_SetAddrWindow@y2 0013  
              __size_of_TFT_FillScreen 0046                    EUSART_TX_String@len 000B  
                  EUSART_TX_String@str 0009                        ___llmod@divisor 0016  
                      ___llmod@counter 001A                __size_of_TFT_DrawString 0090  
                     ?_EUSART_RX_Flush 0001                      _TFT_Init_Sequence 5D5B  
                             ??___lmul 000D                               ??___wmul 0009  
                A6_Command@responseLen 001E                            __pdataBANK0 00C6  
                     __CFG_LPT1OSC$OFF 000000                               ??_memset 000B  
                             ?_A6_Init 0001                      ?_TFT_DrawFillRect 001C  
       EUSART_RX_AvailableData@timeout 0005              ??_A6_Process_Random_Comms 004E  
                             ??_strchr 0009                               ??_strcmp 0009  
                             ??_strlen 0007                       ??_A6_BaudRateGet 0023  
                             ??_strtok 0016                               ??_strspn 000F  
                             ??_strstr 0014                       ??_A6_BaudRateSet 0057  
                A6_BaudRateSet@request 0090                     ??_TFT_DrawFillRect 0026  
                ??_EUSART_RX_Interrupt 0001         ??_Ecg_Background_Leads_Failure 004A  
              __size_of_TFT_FullScreen 0026                            __pbssCOMRAM 0057  
           A6_Process_Random_Comms@cnt 0080                          __pcstackBANK0 0060  
                        __pcstackBANK1 0100                           loop@response 0100  
                         _isdigit$1881 0006                            sprintf@flag 0068  
                          sprintf@prec 0060                    __end_of_EUSART_Init 2392  
     __size_of_EUSART_RX_AvailableData 0088              __end_of_TFT_Init_Sequence 5E27  
            A6_BaudRateAutoDetect@zzzz 006C                              __pintcode 0008  
                        __pmediumconst 585A                           loop@zzzz_149 0160  
                             ?___awdiv 0005                               ?___lldiv 0005  
                             ?___llmod 0012                       ??_Ecg_CheckLeads 0007  
                   _EUSART_BaudRateSet 1C42                  TFT_WriteRegister@data 0007  
               A6_ReadLine@responseLen 0013                            ??_TFT_Flood 0013  
                             ?_isdigit 0001                   EUSART_RX_Interrupt@c 0002  
                          ??_TFT_Reset 0005                    ?_EUSART_BaudRateSet 0012  
                             ?_sleepMS 0005                   __end_of_A6_BAUDRATES 5E5B  
                    _TFT_WriteRegister 23D8                       _EUSART_TX_String 241C  
                             ?_sprintf 004B                   __end_of_TFT_DrawChar 0BFE  
                             ?_strcspn 000B                               ?_strncmp 0009  
                 __end_of_TFT_DrawLine 0DE6                    A6_ReadLine@response 0011  
                   ?_TFT_WriteRegister 0005                         ___wmul@product 0009  
                    TFT_DrawChar@color 002F                    ??_TFT_WriteRegister 0009  
                 ??_EUSART_BaudRateSet 0016                               i2u320_40 21B0  
                             i2u320_41 21AC                               i2u321_40 21C6  
                             i2u321_41 21BE                               i2u330_40 1FA8  
                             i2u330_41 1FA4                               i2u323_40 21EC  
                             i2u322_48 21C8                               i2u331_40 1FB6  
                             i2u323_41 21E8                               i2u331_41 1FB2  
                             i2u332_40 1FE0                               i2u332_41 1FDC  
                             i2u333_40 1FEE                               i2u333_41 1FEA  
                             _GO_nDONE 007E11                               _UCFGbits 000F6F  
                     __CFG_WDTPS$32768 000000                               _UCONbits 000F6D  
                            _printLine 1B32                  __end_of_Ecg_Interrupt 26A4  
                             _TFT_Font 585B                               _TFT_Init 1400  
                     __size_of_A6_Init 001A                             _ADCON0bits 000FC2  
                           _ADCON1bits 000FC1                             _ADCON2bits 000FC0  
                    ___wmul@multiplier 0005                               _Ecg_Init 25E8  
                           TFT_Flood@i 0019                               _Ecg_Xold 00C8  
                             _Ecg_Yold 00C6              __end_of_TFT_WriteRegister 241C  
                   TFT_DrawPixel@color 0011          __size_of_EUSART_BufferGetChar 004C  
                           _A6_IsAlive 2068                        EUSART_TX_Char@c 0005  
                          _EUSART_Init 234A                      TFT_DrawFillRect@h 0022  
                           _A6_Command 2510                      TFT_DrawFillRect@w 0020  
                    TFT_DrawFillRect@x 001C                      TFT_DrawFillRect@y 001E  
                    ___lmul@multiplier 0005                         _TFT_FillScreen 2392  
                            copy_data0 1F36                      _TFT_SetAddrWindow 1D48  
                       _TFT_DrawString 198E                 __size_of_TFT_DrawPixel 003E  
                   ?_TFT_SetAddrWindow 000D                               __Hrparam 0000  
               A6_BaudRateGet@baudRate 0044                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0022                             _ECG_BUFFER 00B9  
                  TFT_DrawString@color 0045                             ?_printLine 004A  
                  ??_TFT_SetAddrWindow 0015                      TFT_DrawLine@t_770 0024  
                    TFT_DrawLine@t_771 0026                      TFT_DrawLine@t_769 0022  
                     __size_of___awdiv 00C4                       __size_of___lldiv 00A4  
                     __size_of___llmod 0088                      TFT_DrawLine@color 001B  
                    TFT_DrawLine@steep 002E                      TFT_DrawLine@ystep 002A  
                         ?_A6_ReadLine 0011                         _TFT_FullScreen 263E  
                   A6_Command@response 001C                             sprintf@val 0062  
                     __size_of_isdigit 0032                 __end_of_TFT_FillScreen 23D8  
                             __ptext10 1CC6                               __ptext11 10BA  
                             __ptext20 2582                               __ptext12 1FFE  
                             __ptext21 1768                               __ptext13 1EB0  
                             __ptext30 24D6                               __ptext22 249A  
                             __ptext14 1400                               __ptext31 1B32  
                             __ptext23 2392                               __ptext15 26A4  
                             __ptext40 23D8                               __ptext32 198E  
                             __ptext24 234A                               __ptext16 25E8  
                             __ptext41 1C42                               __ptext33 0A0A  
                             __ptext25 26C2                               __ptext17 2262  
                             __ptext50 1692                               __ptext42 18EA  
                             __ptext34 245C                               __ptext26 15B8  
                             __ptext18 1DC2                               __ptext51 254A  
                             __ptext43 2068                               __ptext35 1E3A  
                             __ptext27 0616                               __ptext19 0BFE  
                             __ptext52 22FE                               __ptext44 2202  
                             __ptext36 2618                               __ptext28 25B6  
                             __ptext53 1BBA                               __ptext45 2510  
                             __ptext37 263E                               __ptext29 1AAA  
                             __ptext46 22B0                               __ptext38 1D48  
                             __ptext55 2684                               __ptext47 241C  
                             __ptext39 0DE6                               __ptext56 219E  
                             __ptext48 26DC                               __ptext49 26FA  
                     __size_of_sleepMS 003A         __size_of_A6_BaudRateAutoDetect 00DA  
        __end_of_A6_BaudRateAutoDetect 1692                   TFT_WriteRegister@reg 0005  
            __end_of_TFT_SetAddrWindow 1DC2                 A6_BaudRateGet@response 0023  
                     __size_of_sprintf 03F4                               _consoleX 00C4  
                     __size_of_strcspn 0066                       __size_of_strncmp 00DA  
               __end_of_TFT_DrawString 1A1E                               _loop$144 01A2  
                             _loop$139 01A0                              sleepMS@ms 0005  
                        __size_of_atol 013A                          __size_of_main 0020  
                        __size_of_init 0072                          __size_of_loop 0604  
              _EUSART_RX_AvailableData 1BBA                             strncmp@len 000D  
                       _ECG_ICON_HEART 5E5B                               int$flags 005B  
                             atol@sign 0019                    TFT_FillScreen@color 001C  
               __end_of_TFT_FullScreen 2664                  __CFG_CPUDIV$OSC1_PLL2 000000  
                        _TFT_DrawPixel 245C                            _OSCTUNEbits 000F9B  
                __size_of_TFT_DrawChar 01F4                  __size_of_TFT_DrawLine 01E8  
           __size_of_TFT_WriteRegister 0044                        ?_TFT_FillScreen 001C  
             ?_Ecg_Background_Leads_Ok 0001                               isdigit@c 0007  
                             memset@p1 0005                            ?_A6_IsAlive 0001  
                   TFT_DrawString@size 0049                            ?_A6_Command 0018  
                             intlevel2 0000                              sprintf@ap 0066  
                            sprintf@sp 004B              __size_of_TFT_DrawFillRect 0076  
                      ?_TFT_DrawString 003F                              strchr@chr 0007  
                             loop@zzzz 0180                              strchr@ptr 0005  
                     ___lldiv@dividend 0005                 __end_of_ECG_ICON_HEART 5E99  
                            strcspn@s1 000B                              strcspn@s2 000D  
                             sleepMS@t 0009                              strncmp@s1 0009  
                            strncmp@s2 000B                             _OSCCONbits 000FD3  
                         _A6_BAUDRATES 5E4F               __end_of_EUSART_TX_String 245C  
                          ??_printLine 004E                           _TFT_DrawChar 0A0A  
                         _TFT_DrawLine 0BFE            __end_of_EUSART_RX_Interrupt 2202  
             __size_of_EUSART_RX_Flush 0006                        ?_TFT_FullScreen 0001  
                    TFT_DrawString@str 0043                         ?_TFT_DrawPixel 000D  
                             sprintf@c 006B                               sprintf@f 004D  
                             strcmp@s1 0005                               strcmp@s2 0007  
                     ___lldiv@quotient 000D                               strlen@cp 0007  
                             strcspn@i 0010            A6_BaudRateGet@baudRateToken 0048  
                             strtok@s1 0012                               strtok@s2 0014  
                             strspn@s1 000B                               strspn@s2 000D  
                             strtok@sp 00C2                               strstr@s1 0010  
                             strstr@s2 0012                __size_of_EUSART_TX_Char 0018  
           __size_of_TFT_SetAddrWindow 007A              ??_EUSART_RX_AvailableData 0007  
                   __CFG_FOSC$HSPLL_HS 000000   __end_of_Ecg_Background_Leads_Failure 24D6  
__size_of_Ecg_Background_Leads_Failure 003C           _Ecg_Background_Leads_Failure 249A  
