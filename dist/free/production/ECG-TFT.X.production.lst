

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 28 01:04:11 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           ; Version 2.10
    95                           ; Generated 31/07/2019 GMT
    96                           ; 
    97                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F2455 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataCOMRAM
   130  002FCA                     __pidataCOMRAM:
   131                           	opt callstack 0
   132                           
   133                           ;initializer for _Ecg_X
   134  002FCA  00EF               	dw	239
   135                           
   136                           	psect	idataBANK0
   137  002FBA                     __pidataBANK0:
   138                           	opt callstack 0
   139                           
   140                           ;initializer for _Ecg_Yold
   141  002FBA  018F               	dw	399
   142                           
   143                           ;initializer for _Ecg_Y
   144  002FBC  018F               	dw	399
   145                           
   146                           ;initializer for _Ecg_Xold
   147  002FBE  00EF               	dw	239
   148                           
   149                           	psect	mediumconst
   150  00592C                     __pmediumconst:
   151                           	opt callstack 0
   152  00592C  00                 	db	0
   153  00592D                     _TFT_Font:
   154                           	opt callstack 0
   155  00592D  00                 	db	0
   156  00592E  00                 	db	0
   157  00592F  00                 	db	0
   158  005930  00                 	db	0
   159  005931  00                 	db	0
   160  005932  3E                 	db	62
   161  005933  5B                 	db	91
   162  005934  4F                 	db	79
   163  005935  5B                 	db	91
   164  005936  3E                 	db	62
   165  005937  3E                 	db	62
   166  005938  6B                 	db	107
   167  005939  4F                 	db	79
   168  00593A  6B                 	db	107
   169  00593B  3E                 	db	62
   170  00593C  1C                 	db	28
   171  00593D  3E                 	db	62
   172  00593E  7C                 	db	124
   173  00593F  3E                 	db	62
   174  005940  1C                 	db	28
   175  005941  18                 	db	24
   176  005942  3C                 	db	60
   177  005943  7E                 	db	126
   178  005944  3C                 	db	60
   179  005945  18                 	db	24
   180  005946  1C                 	db	28
   181  005947  57                 	db	87
   182  005948  7D                 	db	125
   183  005949  57                 	db	87
   184  00594A  1C                 	db	28
   185  00594B  1C                 	db	28
   186  00594C  5E                 	db	94
   187  00594D  7F                 	db	127
   188  00594E  5E                 	db	94
   189  00594F  1C                 	db	28
   190  005950  00                 	db	0
   191  005951  18                 	db	24
   192  005952  3C                 	db	60
   193  005953  18                 	db	24
   194  005954  00                 	db	0
   195  005955  FF                 	db	255
   196  005956  E7                 	db	231
   197  005957  C3                 	db	195
   198  005958  E7                 	db	231
   199  005959  FF                 	db	255
   200  00595A  00                 	db	0
   201  00595B  18                 	db	24
   202  00595C  24                 	db	36
   203  00595D  18                 	db	24
   204  00595E  00                 	db	0
   205  00595F  FF                 	db	255
   206  005960  E7                 	db	231
   207  005961  DB                 	db	219
   208  005962  E7                 	db	231
   209  005963  FF                 	db	255
   210  005964  30                 	db	48
   211  005965  48                 	db	72
   212  005966  3A                 	db	58
   213  005967  06                 	db	6
   214  005968  0E                 	db	14
   215  005969  26                 	db	38
   216  00596A  29                 	db	41
   217  00596B  79                 	db	121
   218  00596C  29                 	db	41
   219  00596D  26                 	db	38
   220  00596E  40                 	db	64
   221  00596F  7F                 	db	127
   222  005970  05                 	db	5
   223  005971  05                 	db	5
   224  005972  07                 	db	7
   225  005973  40                 	db	64
   226  005974  7F                 	db	127
   227  005975  05                 	db	5
   228  005976  25                 	db	37
   229  005977  3F                 	db	63
   230  005978  5A                 	db	90
   231  005979  3C                 	db	60
   232  00597A  E7                 	db	231
   233  00597B  3C                 	db	60
   234  00597C  5A                 	db	90
   235  00597D  7F                 	db	127
   236  00597E  3E                 	db	62
   237  00597F  1C                 	db	28
   238  005980  1C                 	db	28
   239  005981  08                 	db	8
   240  005982  08                 	db	8
   241  005983  1C                 	db	28
   242  005984  1C                 	db	28
   243  005985  3E                 	db	62
   244  005986  7F                 	db	127
   245  005987  14                 	db	20
   246  005988  22                 	db	34
   247  005989  7F                 	db	127
   248  00598A  22                 	db	34
   249  00598B  14                 	db	20
   250  00598C  5F                 	db	95
   251  00598D  5F                 	db	95
   252  00598E  00                 	db	0
   253  00598F  5F                 	db	95
   254  005990  5F                 	db	95
   255  005991  06                 	db	6
   256  005992  09                 	db	9
   257  005993  7F                 	db	127
   258  005994  01                 	db	1
   259  005995  7F                 	db	127
   260  005996  00                 	db	0
   261  005997  66                 	db	102
   262  005998  89                 	db	137
   263  005999  95                 	db	149
   264  00599A  6A                 	db	106
   265  00599B  60                 	db	96
   266  00599C  60                 	db	96
   267  00599D  60                 	db	96
   268  00599E  60                 	db	96
   269  00599F  60                 	db	96
   270  0059A0  94                 	db	148
   271  0059A1  A2                 	db	162
   272  0059A2  FF                 	db	255
   273  0059A3  A2                 	db	162
   274  0059A4  94                 	db	148
   275  0059A5  08                 	db	8
   276  0059A6  04                 	db	4
   277  0059A7  7E                 	db	126
   278  0059A8  04                 	db	4
   279  0059A9  08                 	db	8
   280  0059AA  10                 	db	16
   281  0059AB  20                 	db	32
   282  0059AC  7E                 	db	126
   283  0059AD  20                 	db	32
   284  0059AE  10                 	db	16
   285  0059AF  08                 	db	8
   286  0059B0  08                 	db	8
   287  0059B1  2A                 	db	42
   288  0059B2  1C                 	db	28
   289  0059B3  08                 	db	8
   290  0059B4  08                 	db	8
   291  0059B5  1C                 	db	28
   292  0059B6  2A                 	db	42
   293  0059B7  08                 	db	8
   294  0059B8  08                 	db	8
   295  0059B9  1E                 	db	30
   296  0059BA  10                 	db	16
   297  0059BB  10                 	db	16
   298  0059BC  10                 	db	16
   299  0059BD  10                 	db	16
   300  0059BE  0C                 	db	12
   301  0059BF  1E                 	db	30
   302  0059C0  0C                 	db	12
   303  0059C1  1E                 	db	30
   304  0059C2  0C                 	db	12
   305  0059C3  30                 	db	48
   306  0059C4  38                 	db	56
   307  0059C5  3E                 	db	62
   308  0059C6  38                 	db	56
   309  0059C7  30                 	db	48
   310  0059C8  06                 	db	6
   311  0059C9  0E                 	db	14
   312  0059CA  3E                 	db	62
   313  0059CB  0E                 	db	14
   314  0059CC  06                 	db	6
   315  0059CD  00                 	db	0
   316  0059CE  00                 	db	0
   317  0059CF  00                 	db	0
   318  0059D0  00                 	db	0
   319  0059D1  00                 	db	0
   320  0059D2  00                 	db	0
   321  0059D3  00                 	db	0
   322  0059D4  5F                 	db	95
   323  0059D5  00                 	db	0
   324  0059D6  00                 	db	0
   325  0059D7  00                 	db	0
   326  0059D8  07                 	db	7
   327  0059D9  00                 	db	0
   328  0059DA  07                 	db	7
   329  0059DB  00                 	db	0
   330  0059DC  14                 	db	20
   331  0059DD  7F                 	db	127
   332  0059DE  14                 	db	20
   333  0059DF  7F                 	db	127
   334  0059E0  14                 	db	20
   335  0059E1  24                 	db	36
   336  0059E2  2A                 	db	42
   337  0059E3  7F                 	db	127
   338  0059E4  2A                 	db	42
   339  0059E5  12                 	db	18
   340  0059E6  23                 	db	35
   341  0059E7  13                 	db	19
   342  0059E8  08                 	db	8
   343  0059E9  64                 	db	100
   344  0059EA  62                 	db	98
   345  0059EB  36                 	db	54
   346  0059EC  49                 	db	73
   347  0059ED  56                 	db	86
   348  0059EE  20                 	db	32
   349  0059EF  50                 	db	80
   350  0059F0  00                 	db	0
   351  0059F1  08                 	db	8
   352  0059F2  07                 	db	7
   353  0059F3  03                 	db	3
   354  0059F4  00                 	db	0
   355  0059F5  00                 	db	0
   356  0059F6  1C                 	db	28
   357  0059F7  22                 	db	34
   358  0059F8  41                 	db	65
   359  0059F9  00                 	db	0
   360  0059FA  00                 	db	0
   361  0059FB  41                 	db	65
   362  0059FC  22                 	db	34
   363  0059FD  1C                 	db	28
   364  0059FE  00                 	db	0
   365  0059FF  2A                 	db	42
   366  005A00  1C                 	db	28
   367  005A01  7F                 	db	127
   368  005A02  1C                 	db	28
   369  005A03  2A                 	db	42
   370  005A04  08                 	db	8
   371  005A05  08                 	db	8
   372  005A06  3E                 	db	62
   373  005A07  08                 	db	8
   374  005A08  08                 	db	8
   375  005A09  00                 	db	0
   376  005A0A  80                 	db	128
   377  005A0B  70                 	db	112
   378  005A0C  30                 	db	48
   379  005A0D  00                 	db	0
   380  005A0E  08                 	db	8
   381  005A0F  08                 	db	8
   382  005A10  08                 	db	8
   383  005A11  08                 	db	8
   384  005A12  08                 	db	8
   385  005A13  00                 	db	0
   386  005A14  00                 	db	0
   387  005A15  60                 	db	96
   388  005A16  60                 	db	96
   389  005A17  00                 	db	0
   390  005A18  20                 	db	32
   391  005A19  10                 	db	16
   392  005A1A  08                 	db	8
   393  005A1B  04                 	db	4
   394  005A1C  02                 	db	2
   395  005A1D  3E                 	db	62
   396  005A1E  51                 	db	81
   397  005A1F  49                 	db	73
   398  005A20  45                 	db	69
   399  005A21  3E                 	db	62
   400  005A22  00                 	db	0
   401  005A23  42                 	db	66
   402  005A24  7F                 	db	127
   403  005A25  40                 	db	64
   404  005A26  00                 	db	0
   405  005A27  72                 	db	114
   406  005A28  49                 	db	73
   407  005A29  49                 	db	73
   408  005A2A  49                 	db	73
   409  005A2B  46                 	db	70
   410  005A2C  21                 	db	33
   411  005A2D  41                 	db	65
   412  005A2E  49                 	db	73
   413  005A2F  4D                 	db	77
   414  005A30  33                 	db	51
   415  005A31  18                 	db	24
   416  005A32  14                 	db	20
   417  005A33  12                 	db	18
   418  005A34  7F                 	db	127
   419  005A35  10                 	db	16
   420  005A36  27                 	db	39
   421  005A37  45                 	db	69
   422  005A38  45                 	db	69
   423  005A39  45                 	db	69
   424  005A3A  39                 	db	57
   425  005A3B  3C                 	db	60
   426  005A3C  4A                 	db	74
   427  005A3D  49                 	db	73
   428  005A3E  49                 	db	73
   429  005A3F  31                 	db	49
   430  005A40  41                 	db	65
   431  005A41  21                 	db	33
   432  005A42  11                 	db	17
   433  005A43  09                 	db	9
   434  005A44  07                 	db	7
   435  005A45  36                 	db	54
   436  005A46  49                 	db	73
   437  005A47  49                 	db	73
   438  005A48  49                 	db	73
   439  005A49  36                 	db	54
   440  005A4A  46                 	db	70
   441  005A4B  49                 	db	73
   442  005A4C  49                 	db	73
   443  005A4D  29                 	db	41
   444  005A4E  1E                 	db	30
   445  005A4F  00                 	db	0
   446  005A50  00                 	db	0
   447  005A51  14                 	db	20
   448  005A52  00                 	db	0
   449  005A53  00                 	db	0
   450  005A54  00                 	db	0
   451  005A55  40                 	db	64
   452  005A56  34                 	db	52
   453  005A57  00                 	db	0
   454  005A58  00                 	db	0
   455  005A59  00                 	db	0
   456  005A5A  08                 	db	8
   457  005A5B  14                 	db	20
   458  005A5C  22                 	db	34
   459  005A5D  41                 	db	65
   460  005A5E  14                 	db	20
   461  005A5F  14                 	db	20
   462  005A60  14                 	db	20
   463  005A61  14                 	db	20
   464  005A62  14                 	db	20
   465  005A63  00                 	db	0
   466  005A64  41                 	db	65
   467  005A65  22                 	db	34
   468  005A66  14                 	db	20
   469  005A67  08                 	db	8
   470  005A68  02                 	db	2
   471  005A69  01                 	db	1
   472  005A6A  59                 	db	89
   473  005A6B  09                 	db	9
   474  005A6C  06                 	db	6
   475  005A6D  3E                 	db	62
   476  005A6E  41                 	db	65
   477  005A6F  5D                 	db	93
   478  005A70  59                 	db	89
   479  005A71  4E                 	db	78
   480  005A72  7C                 	db	124
   481  005A73  12                 	db	18
   482  005A74  11                 	db	17
   483  005A75  12                 	db	18
   484  005A76  7C                 	db	124
   485  005A77  7F                 	db	127
   486  005A78  49                 	db	73
   487  005A79  49                 	db	73
   488  005A7A  49                 	db	73
   489  005A7B  36                 	db	54
   490  005A7C  3E                 	db	62
   491  005A7D  41                 	db	65
   492  005A7E  41                 	db	65
   493  005A7F  41                 	db	65
   494  005A80  22                 	db	34
   495  005A81  7F                 	db	127
   496  005A82  41                 	db	65
   497  005A83  41                 	db	65
   498  005A84  41                 	db	65
   499  005A85  3E                 	db	62
   500  005A86  7F                 	db	127
   501  005A87  49                 	db	73
   502  005A88  49                 	db	73
   503  005A89  49                 	db	73
   504  005A8A  41                 	db	65
   505  005A8B  7F                 	db	127
   506  005A8C  09                 	db	9
   507  005A8D  09                 	db	9
   508  005A8E  09                 	db	9
   509  005A8F  01                 	db	1
   510  005A90  3E                 	db	62
   511  005A91  41                 	db	65
   512  005A92  41                 	db	65
   513  005A93  51                 	db	81
   514  005A94  73                 	db	115
   515  005A95  7F                 	db	127
   516  005A96  08                 	db	8
   517  005A97  08                 	db	8
   518  005A98  08                 	db	8
   519  005A99  7F                 	db	127
   520  005A9A  00                 	db	0
   521  005A9B  41                 	db	65
   522  005A9C  7F                 	db	127
   523  005A9D  41                 	db	65
   524  005A9E  00                 	db	0
   525  005A9F  20                 	db	32
   526  005AA0  40                 	db	64
   527  005AA1  41                 	db	65
   528  005AA2  3F                 	db	63
   529  005AA3  01                 	db	1
   530  005AA4  7F                 	db	127
   531  005AA5  08                 	db	8
   532  005AA6  14                 	db	20
   533  005AA7  22                 	db	34
   534  005AA8  41                 	db	65
   535  005AA9  7F                 	db	127
   536  005AAA  40                 	db	64
   537  005AAB  40                 	db	64
   538  005AAC  40                 	db	64
   539  005AAD  40                 	db	64
   540  005AAE  7F                 	db	127
   541  005AAF  02                 	db	2
   542  005AB0  1C                 	db	28
   543  005AB1  02                 	db	2
   544  005AB2  7F                 	db	127
   545  005AB3  7F                 	db	127
   546  005AB4  04                 	db	4
   547  005AB5  08                 	db	8
   548  005AB6  10                 	db	16
   549  005AB7  7F                 	db	127
   550  005AB8  3E                 	db	62
   551  005AB9  41                 	db	65
   552  005ABA  41                 	db	65
   553  005ABB  41                 	db	65
   554  005ABC  3E                 	db	62
   555  005ABD  7F                 	db	127
   556  005ABE  09                 	db	9
   557  005ABF  09                 	db	9
   558  005AC0  09                 	db	9
   559  005AC1  06                 	db	6
   560  005AC2  3E                 	db	62
   561  005AC3  41                 	db	65
   562  005AC4  51                 	db	81
   563  005AC5  21                 	db	33
   564  005AC6  5E                 	db	94
   565  005AC7  7F                 	db	127
   566  005AC8  09                 	db	9
   567  005AC9  19                 	db	25
   568  005ACA  29                 	db	41
   569  005ACB  46                 	db	70
   570  005ACC  26                 	db	38
   571  005ACD  49                 	db	73
   572  005ACE  49                 	db	73
   573  005ACF  49                 	db	73
   574  005AD0  32                 	db	50
   575  005AD1  03                 	db	3
   576  005AD2  01                 	db	1
   577  005AD3  7F                 	db	127
   578  005AD4  01                 	db	1
   579  005AD5  03                 	db	3
   580  005AD6  3F                 	db	63
   581  005AD7  40                 	db	64
   582  005AD8  40                 	db	64
   583  005AD9  40                 	db	64
   584  005ADA  3F                 	db	63
   585  005ADB  1F                 	db	31
   586  005ADC  20                 	db	32
   587  005ADD  40                 	db	64
   588  005ADE  20                 	db	32
   589  005ADF  1F                 	db	31
   590  005AE0  3F                 	db	63
   591  005AE1  40                 	db	64
   592  005AE2  38                 	db	56
   593  005AE3  40                 	db	64
   594  005AE4  3F                 	db	63
   595  005AE5  63                 	db	99
   596  005AE6  14                 	db	20
   597  005AE7  08                 	db	8
   598  005AE8  14                 	db	20
   599  005AE9  63                 	db	99
   600  005AEA  03                 	db	3
   601  005AEB  04                 	db	4
   602  005AEC  78                 	db	120
   603  005AED  04                 	db	4
   604  005AEE  03                 	db	3
   605  005AEF  61                 	db	97
   606  005AF0  59                 	db	89
   607  005AF1  49                 	db	73
   608  005AF2  4D                 	db	77
   609  005AF3  43                 	db	67
   610  005AF4  00                 	db	0
   611  005AF5  7F                 	db	127
   612  005AF6  41                 	db	65
   613  005AF7  41                 	db	65
   614  005AF8  41                 	db	65
   615  005AF9  02                 	db	2
   616  005AFA  04                 	db	4
   617  005AFB  08                 	db	8
   618  005AFC  10                 	db	16
   619  005AFD  20                 	db	32
   620  005AFE  00                 	db	0
   621  005AFF  41                 	db	65
   622  005B00  41                 	db	65
   623  005B01  41                 	db	65
   624  005B02  7F                 	db	127
   625  005B03  04                 	db	4
   626  005B04  02                 	db	2
   627  005B05  01                 	db	1
   628  005B06  02                 	db	2
   629  005B07  04                 	db	4
   630  005B08  40                 	db	64
   631  005B09  40                 	db	64
   632  005B0A  40                 	db	64
   633  005B0B  40                 	db	64
   634  005B0C  40                 	db	64
   635  005B0D  00                 	db	0
   636  005B0E  03                 	db	3
   637  005B0F  07                 	db	7
   638  005B10  08                 	db	8
   639  005B11  00                 	db	0
   640  005B12  20                 	db	32
   641  005B13  54                 	db	84
   642  005B14  54                 	db	84
   643  005B15  78                 	db	120
   644  005B16  40                 	db	64
   645  005B17  7F                 	db	127
   646  005B18  28                 	db	40
   647  005B19  44                 	db	68
   648  005B1A  44                 	db	68
   649  005B1B  38                 	db	56
   650  005B1C  38                 	db	56
   651  005B1D  44                 	db	68
   652  005B1E  44                 	db	68
   653  005B1F  44                 	db	68
   654  005B20  28                 	db	40
   655  005B21  38                 	db	56
   656  005B22  44                 	db	68
   657  005B23  44                 	db	68
   658  005B24  28                 	db	40
   659  005B25  7F                 	db	127
   660  005B26  38                 	db	56
   661  005B27  54                 	db	84
   662  005B28  54                 	db	84
   663  005B29  54                 	db	84
   664  005B2A  18                 	db	24
   665  005B2B  00                 	db	0
   666  005B2C  08                 	db	8
   667  005B2D  7E                 	db	126
   668  005B2E  09                 	db	9
   669  005B2F  02                 	db	2
   670  005B30  18                 	db	24
   671  005B31  A4                 	db	164
   672  005B32  A4                 	db	164
   673  005B33  9C                 	db	156
   674  005B34  78                 	db	120
   675  005B35  7F                 	db	127
   676  005B36  08                 	db	8
   677  005B37  04                 	db	4
   678  005B38  04                 	db	4
   679  005B39  78                 	db	120
   680  005B3A  00                 	db	0
   681  005B3B  44                 	db	68
   682  005B3C  7D                 	db	125
   683  005B3D  40                 	db	64
   684  005B3E  00                 	db	0
   685  005B3F  20                 	db	32
   686  005B40  40                 	db	64
   687  005B41  40                 	db	64
   688  005B42  3D                 	db	61
   689  005B43  00                 	db	0
   690  005B44  7F                 	db	127
   691  005B45  10                 	db	16
   692  005B46  28                 	db	40
   693  005B47  44                 	db	68
   694  005B48  00                 	db	0
   695  005B49  00                 	db	0
   696  005B4A  41                 	db	65
   697  005B4B  7F                 	db	127
   698  005B4C  40                 	db	64
   699  005B4D  00                 	db	0
   700  005B4E  7C                 	db	124
   701  005B4F  04                 	db	4
   702  005B50  78                 	db	120
   703  005B51  04                 	db	4
   704  005B52  78                 	db	120
   705  005B53  7C                 	db	124
   706  005B54  08                 	db	8
   707  005B55  04                 	db	4
   708  005B56  04                 	db	4
   709  005B57  78                 	db	120
   710  005B58  38                 	db	56
   711  005B59  44                 	db	68
   712  005B5A  44                 	db	68
   713  005B5B  44                 	db	68
   714  005B5C  38                 	db	56
   715  005B5D  FC                 	db	252
   716  005B5E  18                 	db	24
   717  005B5F  24                 	db	36
   718  005B60  24                 	db	36
   719  005B61  18                 	db	24
   720  005B62  18                 	db	24
   721  005B63  24                 	db	36
   722  005B64  24                 	db	36
   723  005B65  18                 	db	24
   724  005B66  FC                 	db	252
   725  005B67  7C                 	db	124
   726  005B68  08                 	db	8
   727  005B69  04                 	db	4
   728  005B6A  04                 	db	4
   729  005B6B  08                 	db	8
   730  005B6C  48                 	db	72
   731  005B6D  54                 	db	84
   732  005B6E  54                 	db	84
   733  005B6F  54                 	db	84
   734  005B70  24                 	db	36
   735  005B71  04                 	db	4
   736  005B72  04                 	db	4
   737  005B73  3F                 	db	63
   738  005B74  44                 	db	68
   739  005B75  24                 	db	36
   740  005B76  3C                 	db	60
   741  005B77  40                 	db	64
   742  005B78  40                 	db	64
   743  005B79  20                 	db	32
   744  005B7A  7C                 	db	124
   745  005B7B  1C                 	db	28
   746  005B7C  20                 	db	32
   747  005B7D  40                 	db	64
   748  005B7E  20                 	db	32
   749  005B7F  1C                 	db	28
   750  005B80  3C                 	db	60
   751  005B81  40                 	db	64
   752  005B82  30                 	db	48
   753  005B83  40                 	db	64
   754  005B84  3C                 	db	60
   755  005B85  44                 	db	68
   756  005B86  28                 	db	40
   757  005B87  10                 	db	16
   758  005B88  28                 	db	40
   759  005B89  44                 	db	68
   760  005B8A  4C                 	db	76
   761  005B8B  90                 	db	144
   762  005B8C  90                 	db	144
   763  005B8D  90                 	db	144
   764  005B8E  7C                 	db	124
   765  005B8F  44                 	db	68
   766  005B90  64                 	db	100
   767  005B91  54                 	db	84
   768  005B92  4C                 	db	76
   769  005B93  44                 	db	68
   770  005B94  00                 	db	0
   771  005B95  08                 	db	8
   772  005B96  36                 	db	54
   773  005B97  41                 	db	65
   774  005B98  00                 	db	0
   775  005B99  00                 	db	0
   776  005B9A  00                 	db	0
   777  005B9B  77                 	db	119
   778  005B9C  00                 	db	0
   779  005B9D  00                 	db	0
   780  005B9E  00                 	db	0
   781  005B9F  41                 	db	65
   782  005BA0  36                 	db	54
   783  005BA1  08                 	db	8
   784  005BA2  00                 	db	0
   785  005BA3  02                 	db	2
   786  005BA4  01                 	db	1
   787  005BA5  02                 	db	2
   788  005BA6  04                 	db	4
   789  005BA7  02                 	db	2
   790  005BA8  3C                 	db	60
   791  005BA9  26                 	db	38
   792  005BAA  23                 	db	35
   793  005BAB  26                 	db	38
   794  005BAC  3C                 	db	60
   795  005BAD  1E                 	db	30
   796  005BAE  A1                 	db	161
   797  005BAF  A1                 	db	161
   798  005BB0  61                 	db	97
   799  005BB1  12                 	db	18
   800  005BB2  3A                 	db	58
   801  005BB3  40                 	db	64
   802  005BB4  40                 	db	64
   803  005BB5  20                 	db	32
   804  005BB6  7A                 	db	122
   805  005BB7  38                 	db	56
   806  005BB8  54                 	db	84
   807  005BB9  54                 	db	84
   808  005BBA  55                 	db	85
   809  005BBB  59                 	db	89
   810  005BBC  21                 	db	33
   811  005BBD  55                 	db	85
   812  005BBE  55                 	db	85
   813  005BBF  79                 	db	121
   814  005BC0  41                 	db	65
   815  005BC1  22                 	db	34
   816  005BC2  54                 	db	84
   817  005BC3  54                 	db	84
   818  005BC4  78                 	db	120
   819  005BC5  42                 	db	66
   820  005BC6  21                 	db	33
   821  005BC7  55                 	db	85
   822  005BC8  54                 	db	84
   823  005BC9  78                 	db	120
   824  005BCA  40                 	db	64
   825  005BCB  20                 	db	32
   826  005BCC  54                 	db	84
   827  005BCD  55                 	db	85
   828  005BCE  79                 	db	121
   829  005BCF  40                 	db	64
   830  005BD0  0C                 	db	12
   831  005BD1  1E                 	db	30
   832  005BD2  52                 	db	82
   833  005BD3  72                 	db	114
   834  005BD4  12                 	db	18
   835  005BD5  39                 	db	57
   836  005BD6  55                 	db	85
   837  005BD7  55                 	db	85
   838  005BD8  55                 	db	85
   839  005BD9  59                 	db	89
   840  005BDA  39                 	db	57
   841  005BDB  54                 	db	84
   842  005BDC  54                 	db	84
   843  005BDD  54                 	db	84
   844  005BDE  59                 	db	89
   845  005BDF  39                 	db	57
   846  005BE0  55                 	db	85
   847  005BE1  54                 	db	84
   848  005BE2  54                 	db	84
   849  005BE3  58                 	db	88
   850  005BE4  00                 	db	0
   851  005BE5  00                 	db	0
   852  005BE6  45                 	db	69
   853  005BE7  7C                 	db	124
   854  005BE8  41                 	db	65
   855  005BE9  00                 	db	0
   856  005BEA  02                 	db	2
   857  005BEB  45                 	db	69
   858  005BEC  7D                 	db	125
   859  005BED  42                 	db	66
   860  005BEE  00                 	db	0
   861  005BEF  01                 	db	1
   862  005BF0  45                 	db	69
   863  005BF1  7C                 	db	124
   864  005BF2  40                 	db	64
   865  005BF3  7D                 	db	125
   866  005BF4  12                 	db	18
   867  005BF5  11                 	db	17
   868  005BF6  12                 	db	18
   869  005BF7  7D                 	db	125
   870  005BF8  F0                 	db	240
   871  005BF9  28                 	db	40
   872  005BFA  25                 	db	37
   873  005BFB  28                 	db	40
   874  005BFC  F0                 	db	240
   875  005BFD  7C                 	db	124
   876  005BFE  54                 	db	84
   877  005BFF  55                 	db	85
   878  005C00  45                 	db	69
   879  005C01  00                 	db	0
   880  005C02  20                 	db	32
   881  005C03  54                 	db	84
   882  005C04  54                 	db	84
   883  005C05  7C                 	db	124
   884  005C06  54                 	db	84
   885  005C07  7C                 	db	124
   886  005C08  0A                 	db	10
   887  005C09  09                 	db	9
   888  005C0A  7F                 	db	127
   889  005C0B  49                 	db	73
   890  005C0C  32                 	db	50
   891  005C0D  49                 	db	73
   892  005C0E  49                 	db	73
   893  005C0F  49                 	db	73
   894  005C10  32                 	db	50
   895  005C11  3A                 	db	58
   896  005C12  44                 	db	68
   897  005C13  44                 	db	68
   898  005C14  44                 	db	68
   899  005C15  3A                 	db	58
   900  005C16  32                 	db	50
   901  005C17  4A                 	db	74
   902  005C18  48                 	db	72
   903  005C19  48                 	db	72
   904  005C1A  30                 	db	48
   905  005C1B  3A                 	db	58
   906  005C1C  41                 	db	65
   907  005C1D  41                 	db	65
   908  005C1E  21                 	db	33
   909  005C1F  7A                 	db	122
   910  005C20  3A                 	db	58
   911  005C21  42                 	db	66
   912  005C22  40                 	db	64
   913  005C23  20                 	db	32
   914  005C24  78                 	db	120
   915  005C25  00                 	db	0
   916  005C26  9D                 	db	157
   917  005C27  A0                 	db	160
   918  005C28  A0                 	db	160
   919  005C29  7D                 	db	125
   920  005C2A  3D                 	db	61
   921  005C2B  42                 	db	66
   922  005C2C  42                 	db	66
   923  005C2D  42                 	db	66
   924  005C2E  3D                 	db	61
   925  005C2F  3D                 	db	61
   926  005C30  40                 	db	64
   927  005C31  40                 	db	64
   928  005C32  40                 	db	64
   929  005C33  3D                 	db	61
   930  005C34  3C                 	db	60
   931  005C35  24                 	db	36
   932  005C36  FF                 	db	255
   933  005C37  24                 	db	36
   934  005C38  24                 	db	36
   935  005C39  48                 	db	72
   936  005C3A  7E                 	db	126
   937  005C3B  49                 	db	73
   938  005C3C  43                 	db	67
   939  005C3D  66                 	db	102
   940  005C3E  2B                 	db	43
   941  005C3F  2F                 	db	47
   942  005C40  FC                 	db	252
   943  005C41  2F                 	db	47
   944  005C42  2B                 	db	43
   945  005C43  FF                 	db	255
   946  005C44  09                 	db	9
   947  005C45  29                 	db	41
   948  005C46  F6                 	db	246
   949  005C47  20                 	db	32
   950  005C48  C0                 	db	192
   951  005C49  88                 	db	136
   952  005C4A  7E                 	db	126
   953  005C4B  09                 	db	9
   954  005C4C  03                 	db	3
   955  005C4D  20                 	db	32
   956  005C4E  54                 	db	84
   957  005C4F  54                 	db	84
   958  005C50  79                 	db	121
   959  005C51  41                 	db	65
   960  005C52  00                 	db	0
   961  005C53  00                 	db	0
   962  005C54  44                 	db	68
   963  005C55  7D                 	db	125
   964  005C56  41                 	db	65
   965  005C57  30                 	db	48
   966  005C58  48                 	db	72
   967  005C59  48                 	db	72
   968  005C5A  4A                 	db	74
   969  005C5B  32                 	db	50
   970  005C5C  38                 	db	56
   971  005C5D  40                 	db	64
   972  005C5E  40                 	db	64
   973  005C5F  22                 	db	34
   974  005C60  7A                 	db	122
   975  005C61  00                 	db	0
   976  005C62  7A                 	db	122
   977  005C63  0A                 	db	10
   978  005C64  0A                 	db	10
   979  005C65  72                 	db	114
   980  005C66  7D                 	db	125
   981  005C67  0D                 	db	13
   982  005C68  19                 	db	25
   983  005C69  31                 	db	49
   984  005C6A  7D                 	db	125
   985  005C6B  26                 	db	38
   986  005C6C  29                 	db	41
   987  005C6D  29                 	db	41
   988  005C6E  2F                 	db	47
   989  005C6F  28                 	db	40
   990  005C70  26                 	db	38
   991  005C71  29                 	db	41
   992  005C72  29                 	db	41
   993  005C73  29                 	db	41
   994  005C74  26                 	db	38
   995  005C75  30                 	db	48
   996  005C76  48                 	db	72
   997  005C77  4D                 	db	77
   998  005C78  40                 	db	64
   999  005C79  20                 	db	32
  1000  005C7A  38                 	db	56
  1001  005C7B  08                 	db	8
  1002  005C7C  08                 	db	8
  1003  005C7D  08                 	db	8
  1004  005C7E  08                 	db	8
  1005  005C7F  08                 	db	8
  1006  005C80  08                 	db	8
  1007  005C81  08                 	db	8
  1008  005C82  08                 	db	8
  1009  005C83  38                 	db	56
  1010  005C84  2F                 	db	47
  1011  005C85  10                 	db	16
  1012  005C86  C8                 	db	200
  1013  005C87  AC                 	db	172
  1014  005C88  BA                 	db	186
  1015  005C89  2F                 	db	47
  1016  005C8A  10                 	db	16
  1017  005C8B  28                 	db	40
  1018  005C8C  34                 	db	52
  1019  005C8D  FA                 	db	250
  1020  005C8E  00                 	db	0
  1021  005C8F  00                 	db	0
  1022  005C90  7B                 	db	123
  1023  005C91  00                 	db	0
  1024  005C92  00                 	db	0
  1025  005C93  08                 	db	8
  1026  005C94  14                 	db	20
  1027  005C95  2A                 	db	42
  1028  005C96  14                 	db	20
  1029  005C97  22                 	db	34
  1030  005C98  22                 	db	34
  1031  005C99  14                 	db	20
  1032  005C9A  2A                 	db	42
  1033  005C9B  14                 	db	20
  1034  005C9C  08                 	db	8
  1035  005C9D  55                 	db	85
  1036  005C9E  00                 	db	0
  1037  005C9F  55                 	db	85
  1038  005CA0  00                 	db	0
  1039  005CA1  55                 	db	85
  1040  005CA2  AA                 	db	170
  1041  005CA3  55                 	db	85
  1042  005CA4  AA                 	db	170
  1043  005CA5  55                 	db	85
  1044  005CA6  AA                 	db	170
  1045  005CA7  FF                 	db	255
  1046  005CA8  55                 	db	85
  1047  005CA9  FF                 	db	255
  1048  005CAA  55                 	db	85
  1049  005CAB  FF                 	db	255
  1050  005CAC  00                 	db	0
  1051  005CAD  00                 	db	0
  1052  005CAE  00                 	db	0
  1053  005CAF  FF                 	db	255
  1054  005CB0  00                 	db	0
  1055  005CB1  10                 	db	16
  1056  005CB2  10                 	db	16
  1057  005CB3  10                 	db	16
  1058  005CB4  FF                 	db	255
  1059  005CB5  00                 	db	0
  1060  005CB6  14                 	db	20
  1061  005CB7  14                 	db	20
  1062  005CB8  14                 	db	20
  1063  005CB9  FF                 	db	255
  1064  005CBA  00                 	db	0
  1065  005CBB  10                 	db	16
  1066  005CBC  10                 	db	16
  1067  005CBD  FF                 	db	255
  1068  005CBE  00                 	db	0
  1069  005CBF  FF                 	db	255
  1070  005CC0  10                 	db	16
  1071  005CC1  10                 	db	16
  1072  005CC2  F0                 	db	240
  1073  005CC3  10                 	db	16
  1074  005CC4  F0                 	db	240
  1075  005CC5  14                 	db	20
  1076  005CC6  14                 	db	20
  1077  005CC7  14                 	db	20
  1078  005CC8  FC                 	db	252
  1079  005CC9  00                 	db	0
  1080  005CCA  14                 	db	20
  1081  005CCB  14                 	db	20
  1082  005CCC  F7                 	db	247
  1083  005CCD  00                 	db	0
  1084  005CCE  FF                 	db	255
  1085  005CCF  00                 	db	0
  1086  005CD0  00                 	db	0
  1087  005CD1  FF                 	db	255
  1088  005CD2  00                 	db	0
  1089  005CD3  FF                 	db	255
  1090  005CD4  14                 	db	20
  1091  005CD5  14                 	db	20
  1092  005CD6  F4                 	db	244
  1093  005CD7  04                 	db	4
  1094  005CD8  FC                 	db	252
  1095  005CD9  14                 	db	20
  1096  005CDA  14                 	db	20
  1097  005CDB  17                 	db	23
  1098  005CDC  10                 	db	16
  1099  005CDD  1F                 	db	31
  1100  005CDE  10                 	db	16
  1101  005CDF  10                 	db	16
  1102  005CE0  1F                 	db	31
  1103  005CE1  10                 	db	16
  1104  005CE2  1F                 	db	31
  1105  005CE3  14                 	db	20
  1106  005CE4  14                 	db	20
  1107  005CE5  14                 	db	20
  1108  005CE6  1F                 	db	31
  1109  005CE7  00                 	db	0
  1110  005CE8  10                 	db	16
  1111  005CE9  10                 	db	16
  1112  005CEA  10                 	db	16
  1113  005CEB  F0                 	db	240
  1114  005CEC  00                 	db	0
  1115  005CED  00                 	db	0
  1116  005CEE  00                 	db	0
  1117  005CEF  00                 	db	0
  1118  005CF0  1F                 	db	31
  1119  005CF1  10                 	db	16
  1120  005CF2  10                 	db	16
  1121  005CF3  10                 	db	16
  1122  005CF4  10                 	db	16
  1123  005CF5  1F                 	db	31
  1124  005CF6  10                 	db	16
  1125  005CF7  10                 	db	16
  1126  005CF8  10                 	db	16
  1127  005CF9  10                 	db	16
  1128  005CFA  F0                 	db	240
  1129  005CFB  10                 	db	16
  1130  005CFC  00                 	db	0
  1131  005CFD  00                 	db	0
  1132  005CFE  00                 	db	0
  1133  005CFF  FF                 	db	255
  1134  005D00  10                 	db	16
  1135  005D01  10                 	db	16
  1136  005D02  10                 	db	16
  1137  005D03  10                 	db	16
  1138  005D04  10                 	db	16
  1139  005D05  10                 	db	16
  1140  005D06  10                 	db	16
  1141  005D07  10                 	db	16
  1142  005D08  10                 	db	16
  1143  005D09  FF                 	db	255
  1144  005D0A  10                 	db	16
  1145  005D0B  00                 	db	0
  1146  005D0C  00                 	db	0
  1147  005D0D  00                 	db	0
  1148  005D0E  FF                 	db	255
  1149  005D0F  14                 	db	20
  1150  005D10  00                 	db	0
  1151  005D11  00                 	db	0
  1152  005D12  FF                 	db	255
  1153  005D13  00                 	db	0
  1154  005D14  FF                 	db	255
  1155  005D15  00                 	db	0
  1156  005D16  00                 	db	0
  1157  005D17  1F                 	db	31
  1158  005D18  10                 	db	16
  1159  005D19  17                 	db	23
  1160  005D1A  00                 	db	0
  1161  005D1B  00                 	db	0
  1162  005D1C  FC                 	db	252
  1163  005D1D  04                 	db	4
  1164  005D1E  F4                 	db	244
  1165  005D1F  14                 	db	20
  1166  005D20  14                 	db	20
  1167  005D21  17                 	db	23
  1168  005D22  10                 	db	16
  1169  005D23  17                 	db	23
  1170  005D24  14                 	db	20
  1171  005D25  14                 	db	20
  1172  005D26  F4                 	db	244
  1173  005D27  04                 	db	4
  1174  005D28  F4                 	db	244
  1175  005D29  00                 	db	0
  1176  005D2A  00                 	db	0
  1177  005D2B  FF                 	db	255
  1178  005D2C  00                 	db	0
  1179  005D2D  F7                 	db	247
  1180  005D2E  14                 	db	20
  1181  005D2F  14                 	db	20
  1182  005D30  14                 	db	20
  1183  005D31  14                 	db	20
  1184  005D32  14                 	db	20
  1185  005D33  14                 	db	20
  1186  005D34  14                 	db	20
  1187  005D35  F7                 	db	247
  1188  005D36  00                 	db	0
  1189  005D37  F7                 	db	247
  1190  005D38  14                 	db	20
  1191  005D39  14                 	db	20
  1192  005D3A  14                 	db	20
  1193  005D3B  17                 	db	23
  1194  005D3C  14                 	db	20
  1195  005D3D  10                 	db	16
  1196  005D3E  10                 	db	16
  1197  005D3F  1F                 	db	31
  1198  005D40  10                 	db	16
  1199  005D41  1F                 	db	31
  1200  005D42  14                 	db	20
  1201  005D43  14                 	db	20
  1202  005D44  14                 	db	20
  1203  005D45  F4                 	db	244
  1204  005D46  14                 	db	20
  1205  005D47  10                 	db	16
  1206  005D48  10                 	db	16
  1207  005D49  F0                 	db	240
  1208  005D4A  10                 	db	16
  1209  005D4B  F0                 	db	240
  1210  005D4C  00                 	db	0
  1211  005D4D  00                 	db	0
  1212  005D4E  1F                 	db	31
  1213  005D4F  10                 	db	16
  1214  005D50  1F                 	db	31
  1215  005D51  00                 	db	0
  1216  005D52  00                 	db	0
  1217  005D53  00                 	db	0
  1218  005D54  1F                 	db	31
  1219  005D55  14                 	db	20
  1220  005D56  00                 	db	0
  1221  005D57  00                 	db	0
  1222  005D58  00                 	db	0
  1223  005D59  FC                 	db	252
  1224  005D5A  14                 	db	20
  1225  005D5B  00                 	db	0
  1226  005D5C  00                 	db	0
  1227  005D5D  F0                 	db	240
  1228  005D5E  10                 	db	16
  1229  005D5F  F0                 	db	240
  1230  005D60  10                 	db	16
  1231  005D61  10                 	db	16
  1232  005D62  FF                 	db	255
  1233  005D63  10                 	db	16
  1234  005D64  FF                 	db	255
  1235  005D65  14                 	db	20
  1236  005D66  14                 	db	20
  1237  005D67  14                 	db	20
  1238  005D68  FF                 	db	255
  1239  005D69  14                 	db	20
  1240  005D6A  10                 	db	16
  1241  005D6B  10                 	db	16
  1242  005D6C  10                 	db	16
  1243  005D6D  1F                 	db	31
  1244  005D6E  00                 	db	0
  1245  005D6F  00                 	db	0
  1246  005D70  00                 	db	0
  1247  005D71  00                 	db	0
  1248  005D72  F0                 	db	240
  1249  005D73  10                 	db	16
  1250  005D74  FF                 	db	255
  1251  005D75  FF                 	db	255
  1252  005D76  FF                 	db	255
  1253  005D77  FF                 	db	255
  1254  005D78  FF                 	db	255
  1255  005D79  F0                 	db	240
  1256  005D7A  F0                 	db	240
  1257  005D7B  F0                 	db	240
  1258  005D7C  F0                 	db	240
  1259  005D7D  F0                 	db	240
  1260  005D7E  FF                 	db	255
  1261  005D7F  FF                 	db	255
  1262  005D80  FF                 	db	255
  1263  005D81  00                 	db	0
  1264  005D82  00                 	db	0
  1265  005D83  00                 	db	0
  1266  005D84  00                 	db	0
  1267  005D85  00                 	db	0
  1268  005D86  FF                 	db	255
  1269  005D87  FF                 	db	255
  1270  005D88  0F                 	db	15
  1271  005D89  0F                 	db	15
  1272  005D8A  0F                 	db	15
  1273  005D8B  0F                 	db	15
  1274  005D8C  0F                 	db	15
  1275  005D8D  38                 	db	56
  1276  005D8E  44                 	db	68
  1277  005D8F  44                 	db	68
  1278  005D90  38                 	db	56
  1279  005D91  44                 	db	68
  1280  005D92  FC                 	db	252
  1281  005D93  4A                 	db	74
  1282  005D94  4A                 	db	74
  1283  005D95  4A                 	db	74
  1284  005D96  34                 	db	52
  1285  005D97  7E                 	db	126
  1286  005D98  02                 	db	2
  1287  005D99  02                 	db	2
  1288  005D9A  06                 	db	6
  1289  005D9B  06                 	db	6
  1290  005D9C  02                 	db	2
  1291  005D9D  7E                 	db	126
  1292  005D9E  02                 	db	2
  1293  005D9F  7E                 	db	126
  1294  005DA0  02                 	db	2
  1295  005DA1  63                 	db	99
  1296  005DA2  55                 	db	85
  1297  005DA3  49                 	db	73
  1298  005DA4  41                 	db	65
  1299  005DA5  63                 	db	99
  1300  005DA6  38                 	db	56
  1301  005DA7  44                 	db	68
  1302  005DA8  44                 	db	68
  1303  005DA9  3C                 	db	60
  1304  005DAA  04                 	db	4
  1305  005DAB  40                 	db	64
  1306  005DAC  7E                 	db	126
  1307  005DAD  20                 	db	32
  1308  005DAE  1E                 	db	30
  1309  005DAF  20                 	db	32
  1310  005DB0  06                 	db	6
  1311  005DB1  02                 	db	2
  1312  005DB2  7E                 	db	126
  1313  005DB3  02                 	db	2
  1314  005DB4  02                 	db	2
  1315  005DB5  99                 	db	153
  1316  005DB6  A5                 	db	165
  1317  005DB7  E7                 	db	231
  1318  005DB8  A5                 	db	165
  1319  005DB9  99                 	db	153
  1320  005DBA  1C                 	db	28
  1321  005DBB  2A                 	db	42
  1322  005DBC  49                 	db	73
  1323  005DBD  2A                 	db	42
  1324  005DBE  1C                 	db	28
  1325  005DBF  4C                 	db	76
  1326  005DC0  72                 	db	114
  1327  005DC1  01                 	db	1
  1328  005DC2  72                 	db	114
  1329  005DC3  4C                 	db	76
  1330  005DC4  30                 	db	48
  1331  005DC5  4A                 	db	74
  1332  005DC6  4D                 	db	77
  1333  005DC7  4D                 	db	77
  1334  005DC8  30                 	db	48
  1335  005DC9  30                 	db	48
  1336  005DCA  48                 	db	72
  1337  005DCB  78                 	db	120
  1338  005DCC  48                 	db	72
  1339  005DCD  30                 	db	48
  1340  005DCE  BC                 	db	188
  1341  005DCF  62                 	db	98
  1342  005DD0  5A                 	db	90
  1343  005DD1  46                 	db	70
  1344  005DD2  3D                 	db	61
  1345  005DD3  3E                 	db	62
  1346  005DD4  49                 	db	73
  1347  005DD5  49                 	db	73
  1348  005DD6  49                 	db	73
  1349  005DD7  00                 	db	0
  1350  005DD8  7E                 	db	126
  1351  005DD9  01                 	db	1
  1352  005DDA  01                 	db	1
  1353  005DDB  01                 	db	1
  1354  005DDC  7E                 	db	126
  1355  005DDD  2A                 	db	42
  1356  005DDE  2A                 	db	42
  1357  005DDF  2A                 	db	42
  1358  005DE0  2A                 	db	42
  1359  005DE1  2A                 	db	42
  1360  005DE2  44                 	db	68
  1361  005DE3  44                 	db	68
  1362  005DE4  5F                 	db	95
  1363  005DE5  44                 	db	68
  1364  005DE6  44                 	db	68
  1365  005DE7  40                 	db	64
  1366  005DE8  51                 	db	81
  1367  005DE9  4A                 	db	74
  1368  005DEA  44                 	db	68
  1369  005DEB  40                 	db	64
  1370  005DEC  40                 	db	64
  1371  005DED  44                 	db	68
  1372  005DEE  4A                 	db	74
  1373  005DEF  51                 	db	81
  1374  005DF0  40                 	db	64
  1375  005DF1  00                 	db	0
  1376  005DF2  00                 	db	0
  1377  005DF3  FF                 	db	255
  1378  005DF4  01                 	db	1
  1379  005DF5  03                 	db	3
  1380  005DF6  E0                 	db	224
  1381  005DF7  80                 	db	128
  1382  005DF8  FF                 	db	255
  1383  005DF9  00                 	db	0
  1384  005DFA  00                 	db	0
  1385  005DFB  08                 	db	8
  1386  005DFC  08                 	db	8
  1387  005DFD  6B                 	db	107
  1388  005DFE  6B                 	db	107
  1389  005DFF  08                 	db	8
  1390  005E00  36                 	db	54
  1391  005E01  12                 	db	18
  1392  005E02  36                 	db	54
  1393  005E03  24                 	db	36
  1394  005E04  36                 	db	54
  1395  005E05  06                 	db	6
  1396  005E06  0F                 	db	15
  1397  005E07  09                 	db	9
  1398  005E08  0F                 	db	15
  1399  005E09  06                 	db	6
  1400  005E0A  00                 	db	0
  1401  005E0B  00                 	db	0
  1402  005E0C  18                 	db	24
  1403  005E0D  18                 	db	24
  1404  005E0E  00                 	db	0
  1405  005E0F  00                 	db	0
  1406  005E10  00                 	db	0
  1407  005E11  10                 	db	16
  1408  005E12  10                 	db	16
  1409  005E13  00                 	db	0
  1410  005E14  30                 	db	48
  1411  005E15  40                 	db	64
  1412  005E16  FF                 	db	255
  1413  005E17  01                 	db	1
  1414  005E18  01                 	db	1
  1415  005E19  00                 	db	0
  1416  005E1A  1F                 	db	31
  1417  005E1B  01                 	db	1
  1418  005E1C  01                 	db	1
  1419  005E1D  1E                 	db	30
  1420  005E1E  00                 	db	0
  1421  005E1F  19                 	db	25
  1422  005E20  1D                 	db	29
  1423  005E21  17                 	db	23
  1424  005E22  12                 	db	18
  1425  005E23  00                 	db	0
  1426  005E24  3C                 	db	60
  1427  005E25  3C                 	db	60
  1428  005E26  3C                 	db	60
  1429  005E27  3C                 	db	60
  1430  005E28  00                 	db	0
  1431  005E29  00                 	db	0
  1432  005E2A  00                 	db	0
  1433  005E2B  00                 	db	0
  1434  005E2C  00                 	db	0
  1435  005E2D                     __end_of_TFT_Font:
  1436                           	opt callstack 0
  1437  005E2D                     _TFT_Init_Sequence:
  1438                           	opt callstack 0
  1439  005E2D  0702               	dw	1794
  1440  005E2F  3008               	dw	12296
  1441  005E31  0705               	dw	1797
  1442  005E33  0036               	dw	54
  1443  005E35  070B               	dw	1803
  1444  005E37  1213               	dw	4627
  1445  005E39  0001               	dw	1
  1446  005E3B  0100               	dw	256
  1447  005E3D  0002               	dw	2
  1448  005E3F  0100               	dw	256
  1449  005E41  0003               	dw	3
  1450  005E43  1030               	dw	4144
  1451  005E45  0008               	dw	8
  1452  005E47  0202               	dw	514
  1453  005E49  0009               	dw	9
  1454  005E4B  0000               	dw	0
  1455  005E4D  000C               	dw	12
  1456  005E4F  0000               	dw	0
  1457  005E51  000F               	dw	15
  1458  005E53  0000               	dw	0
  1459  005E55  0100               	dw	256
  1460  005E57  0000               	dw	0
  1461  005E59  0102               	dw	258
  1462  005E5B  0000               	dw	0
  1463  005E5D  0103               	dw	259
  1464  005E5F  0000               	dw	0
  1465  005E61  FFFF               	dw	65535
  1466  005E63  0001               	dw	1
  1467  005E65  0100               	dw	256
  1468  005E67  1190               	dw	4496
  1469  005E69  0101               	dw	257
  1470  005E6B  0227               	dw	551
  1471  005E6D  FFFF               	dw	65535
  1472  005E6F  0001               	dw	1
  1473  005E71  0102               	dw	258
  1474  005E73  01BD               	dw	445
  1475  005E75  FFFF               	dw	65535
  1476  005E77  0001               	dw	1
  1477  005E79  0103               	dw	259
  1478  005E7B  2D00               	dw	11520
  1479  005E7D  0281               	dw	641
  1480  005E7F  000E               	dw	14
  1481  005E81  FFFF               	dw	65535
  1482  005E83  0001               	dw	1
  1483  005E85  0200               	dw	512
  1484  005E87  0000               	dw	0
  1485  005E89  0201               	dw	513
  1486  005E8B  0000               	dw	0
  1487  005E8D  0300               	dw	768
  1488  005E8F  0000               	dw	0
  1489  005E91  0301               	dw	769
  1490  005E93  0707               	dw	1799
  1491  005E95  0302               	dw	770
  1492  005E97  0606               	dw	1542
  1493  005E99  0305               	dw	773
  1494  005E9B  0000               	dw	0
  1495  005E9D  0306               	dw	774
  1496  005E9F  0D00               	dw	3328
  1497  005EA1  0307               	dw	775
  1498  005EA3  0706               	dw	1798
  1499  005EA5  0308               	dw	776
  1500  005EA7  0005               	dw	5
  1501  005EA9  0309               	dw	777
  1502  005EAB  0007               	dw	7
  1503  005EAD  030C               	dw	780
  1504  005EAF  0000               	dw	0
  1505  005EB1  030D               	dw	781
  1506  005EB3  000A               	dw	10
  1507  005EB5  0210               	dw	528
  1508  005EB7  0000               	dw	0
  1509  005EB9  0211               	dw	529
  1510  005EBB  00EF               	dw	239
  1511  005EBD  0212               	dw	530
  1512  005EBF  0000               	dw	0
  1513  005EC1  0213               	dw	531
  1514  005EC3  018F               	dw	399
  1515  005EC5  0400               	dw	1024
  1516  005EC7  3100               	dw	12544
  1517  005EC9  0401               	dw	1025
  1518  005ECB  0001               	dw	1
  1519  005ECD  0404               	dw	1028
  1520  005ECF  0000               	dw	0
  1521  005ED1  0500               	dw	1280
  1522  005ED3  0000               	dw	0
  1523  005ED5  0501               	dw	1281
  1524  005ED7  0000               	dw	0
  1525  005ED9  0502               	dw	1282
  1526  005EDB  0000               	dw	0
  1527  005EDD  0503               	dw	1283
  1528  005EDF  0000               	dw	0
  1529  005EE1  0504               	dw	1284
  1530  005EE3  0000               	dw	0
  1531  005EE5  0505               	dw	1285
  1532  005EE7  0000               	dw	0
  1533  005EE9  0010               	dw	16
  1534  005EEB  0010               	dw	16
  1535  005EED  0011               	dw	17
  1536  005EEF  0600               	dw	1536
  1537  005EF1  0020               	dw	32
  1538  005EF3  0002               	dw	2
  1539  005EF5  0007               	dw	7
  1540  005EF7  0173               	dw	371
  1541  005EF9                     __end_of_TFT_Init_Sequence:
  1542                           	opt callstack 0
  1543  005EF9                     _dpowers:
  1544                           	opt callstack 0
  1545  005EF9  0001               	dw	1
  1546  005EFB  0000               	dw	0
  1547  005EFD  000A               	dw	10
  1548  005EFF  0000               	dw	0
  1549  005F01  0064               	dw	100
  1550  005F03  0000               	dw	0
  1551  005F05  03E8               	dw	1000
  1552  005F07  0000               	dw	0
  1553  005F09  2710               	dw	10000
  1554  005F0B  0000               	dw	0
  1555  005F0D  86A0               	dw	34464
  1556  005F0F  0001               	dw	1
  1557  005F11  4240               	dw	16960
  1558  005F13  000F               	dw	15
  1559  005F15  9680               	dw	38528
  1560  005F17  0098               	dw	152
  1561  005F19  E100               	dw	57600
  1562  005F1B  05F5               	dw	1525
  1563  005F1D  CA00               	dw	51712
  1564  005F1F  3B9A               	dw	15258
  1565  005F21                     __end_of_dpowers:
  1566                           	opt callstack 0
  1567  005F21                     _A6_BAUDRATES:
  1568                           	opt callstack 0
  1569  005F21  2580               	dw	9600
  1570  005F23  0000               	dw	0
  1571  005F25  E100               	dw	57600
  1572  005F27  0000               	dw	0
  1573  005F29  C200               	dw	49664
  1574  005F2B  0001               	dw	1
  1575  005F2D                     __end_of_A6_BAUDRATES:
  1576                           	opt callstack 0
  1577  005F2D                     _ECG_ICON_HEART:
  1578                           	opt callstack 0
  1579  005F2D  14                 	db	20
  1580  005F2E  14                 	db	20
  1581  005F2F  00                 	db	0
  1582  005F30  00                 	db	0
  1583  005F31  00                 	db	0
  1584  005F32  00                 	db	0
  1585  005F33  00                 	db	0
  1586  005F34  00                 	db	0
  1587  005F35  F8                 	db	248
  1588  005F36  F0                 	db	240
  1589  005F37  01                 	db	1
  1590  005F38  FC                 	db	252
  1591  005F39  F9                 	db	249
  1592  005F3A  03                 	db	3
  1593  005F3B  FC                 	db	252
  1594  005F3C  FF                 	db	255
  1595  005F3D  03                 	db	3
  1596  005F3E  FE                 	db	254
  1597  005F3F  FF                 	db	255
  1598  005F40  07                 	db	7
  1599  005F41  FE                 	db	254
  1600  005F42  FF                 	db	255
  1601  005F43  07                 	db	7
  1602  005F44  FE                 	db	254
  1603  005F45  FF                 	db	255
  1604  005F46  07                 	db	7
  1605  005F47  FE                 	db	254
  1606  005F48  FF                 	db	255
  1607  005F49  07                 	db	7
  1608  005F4A  FC                 	db	252
  1609  005F4B  FF                 	db	255
  1610  005F4C  03                 	db	3
  1611  005F4D  FC                 	db	252
  1612  005F4E  FF                 	db	255
  1613  005F4F  03                 	db	3
  1614  005F50  F8                 	db	248
  1615  005F51  FF                 	db	255
  1616  005F52  01                 	db	1
  1617  005F53  F0                 	db	240
  1618  005F54  FF                 	db	255
  1619  005F55  00                 	db	0
  1620  005F56  E0                 	db	224
  1621  005F57  7F                 	db	127
  1622  005F58  00                 	db	0
  1623  005F59  C0                 	db	192
  1624  005F5A  3F                 	db	63
  1625  005F5B  00                 	db	0
  1626  005F5C  80                 	db	128
  1627  005F5D  1F                 	db	31
  1628  005F5E  00                 	db	0
  1629  005F5F  00                 	db	0
  1630  005F60  0F                 	db	15
  1631  005F61  00                 	db	0
  1632  005F62  00                 	db	0
  1633  005F63  06                 	db	6
  1634  005F64  00                 	db	0
  1635  005F65  00                 	db	0
  1636  005F66  00                 	db	0
  1637  005F67  00                 	db	0
  1638  005F68  00                 	db	0
  1639  005F69  00                 	db	0
  1640  005F6A  00                 	db	0
  1641  005F6B                     __end_of_ECG_ICON_HEART:
  1642                           	opt callstack 0
  1643  0000                     _RCREG	set	4014
  1644  0000                     _TXREG	set	4013
  1645  0000                     _SPBRG	set	4015
  1646  0000                     _SPBRGH	set	4016
  1647  0000                     _BAUDCONbits	set	4024
  1648  0000                     _RCSTAbits	set	4011
  1649  0000                     _TXSTAbits	set	4012
  1650  0000                     _ADRESL	set	4035
  1651  0000                     _ADRESH	set	4036
  1652  0000                     _PORTAbits	set	3968
  1653  0000                     _PORTB	set	3969
  1654  0000                     _PORTCbits	set	3970
  1655  0000                     _TMR3L	set	4018
  1656  0000                     _TMR3H	set	4019
  1657  0000                     _T3CONbits	set	4017
  1658  0000                     _ADCON2bits	set	4032
  1659  0000                     _ADCON1bits	set	4033
  1660  0000                     _ADCON0bits	set	4034
  1661  0000                     _LATC	set	3979
  1662  0000                     _TRISC	set	3988
  1663  0000                     _LATB	set	3978
  1664  0000                     _TRISB	set	3987
  1665  0000                     _LATA	set	3977
  1666  0000                     _TRISA	set	3986
  1667  0000                     _UCFGbits	set	3951
  1668  0000                     _UCONbits	set	3949
  1669  0000                     _OSCTUNEbits	set	3995
  1670  0000                     _OSCCONbits	set	4051
  1671  0000                     _CREN	set	32092
  1672  0000                     _OERR	set	32089
  1673  0000                     _TXIF	set	31988
  1674  0000                     _GO_nDONE	set	32273
  1675  0000                     _RCIF	set	31989
  1676  0000                     _RCIE	set	31981
  1677  0000                     _TMR3IF	set	32009
  1678  0000                     _GIE	set	32663
  1679  0000                     _PEIE	set	32662
  1680  0000                     _TMR3IE	set	32001
  1681  0000                     _RBPU	set	32655
  1682  005F6B                     STR_3:
  1683                           
  1684                           ; BSR set to: 1
  1685  005F6B  2A                 	db	42
  1686  005F6C  2A                 	db	42
  1687  005F6D  2A                 	db	42
  1688  005F6E  20                 	db	32
  1689  005F6F  43                 	db	67	;'C'
  1690  005F70  6F                 	db	111	;'o'
  1691  005F71  6C                 	db	108	;'l'
  1692  005F72  6C                 	db	108	;'l'
  1693  005F73  65                 	db	101	;'e'
  1694  005F74  67                 	db	103	;'g'
  1695  005F75  61                 	db	97	;'a'
  1696  005F76  72                 	db	114	;'r'
  1697  005F77  65                 	db	101	;'e'
  1698  005F78  20                 	db	32
  1699  005F79  65                 	db	101	;'e'
  1700  005F7A  6C                 	db	108	;'l'
  1701  005F7B  65                 	db	101	;'e'
  1702  005F7C  74                 	db	116	;'t'
  1703  005F7D  74                 	db	116	;'t'
  1704  005F7E  72                 	db	114	;'r'
  1705  005F7F  6F                 	db	111	;'o'
  1706  005F80  64                 	db	100	;'d'
  1707  005F81  69                 	db	105	;'i'
  1708  005F82  20                 	db	32
  1709  005F83  2A                 	db	42
  1710  005F84  2A                 	db	42
  1711  005F85  2A                 	db	42
  1712  005F86  00                 	db	0
  1713  005F87                     STR_4:
  1714                           
  1715                           ; BSR set to: 1
  1716  005F87  41                 	db	65	;'A'
  1717  005F88  54                 	db	84	;'T'
  1718  005F89  2B                 	db	43
  1719  005F8A  43                 	db	67	;'C'
  1720  005F8B  4F                 	db	79	;'O'
  1721  005F8C  50                 	db	80	;'P'
  1722  005F8D  53                 	db	83	;'S'
  1723  005F8E  3D                 	db	61	;'='
  1724  005F8F  33                 	db	51	;'3'
  1725  005F90  2C                 	db	44
  1726  005F91  30                 	db	48	;'0'
  1727  005F92  0D                 	db	13
  1728  005F93  00                 	db	0
  1729  005F94                     STR_11:
  1730                           
  1731                           ; BSR set to: 1
  1732  005F94  41                 	db	65	;'A'
  1733  005F95  54                 	db	84	;'T'
  1734  005F96  2B                 	db	43
  1735  005F97  49                 	db	73	;'I'
  1736  005F98  50                 	db	80	;'P'
  1737  005F99  52                 	db	82	;'R'
  1738  005F9A  3D                 	db	61	;'='
  1739  005F9B  25                 	db	37
  1740  005F9C  6C                 	db	108	;'l'
  1741  005F9D  75                 	db	117	;'u'
  1742  005F9E  0D                 	db	13
  1743  005F9F  00                 	db	0
  1744  005FA0                     STR_2:
  1745                           
  1746                           ; BSR set to: 1
  1747  005FA0  46                 	db	70	;'F'
  1748  005FA1  72                 	db	114	;'r'
  1749  005FA2  65                 	db	101	;'e'
  1750  005FA3  71                 	db	113	;'q'
  1751  005FA4  75                 	db	117	;'u'
  1752  005FA5  65                 	db	101	;'e'
  1753  005FA6  6E                 	db	110	;'n'
  1754  005FA7  7A                 	db	122	;'z'
  1755  005FA8  61                 	db	97	;'a'
  1756  005FA9  3A                 	db	58	;':'
  1757  005FAA  00                 	db	0
  1758  005FAB                     
  1759                           ; BSR set to: 1
  1760  005FAB  41                 	db	65	;'A'
  1761  005FAC  54                 	db	84	;'T'
  1762  005FAD  2B                 	db	43
  1763  005FAE  43                 	db	67	;'C'
  1764  005FAF  52                 	db	82	;'R'
  1765  005FB0  45                 	db	69	;'E'
  1766  005FB1  47                 	db	71	;'G'
  1767  005FB2  3F                 	db	63	;'?'
  1768  005FB3  0D                 	db	13
  1769  005FB4  00                 	db	0
  1770  005FB5                     STR_25:
  1771                           
  1772                           ; BSR set to: 1
  1773  005FB5  41                 	db	65	;'A'
  1774  005FB6  54                 	db	84	;'T'
  1775  005FB7  2B                 	db	43
  1776  005FB8  43                 	db	67	;'C'
  1777  005FB9  4F                 	db	79	;'O'
  1778  005FBA  50                 	db	80	;'P'
  1779  005FBB  53                 	db	83	;'S'
  1780  005FBC  3F                 	db	63	;'?'
  1781  005FBD  0D                 	db	13
  1782  005FBE  00                 	db	0
  1783  005FBF                     STR_7:
  1784                           
  1785                           ; BSR set to: 1
  1786  005FBF  41                 	db	65	;'A'
  1787  005FC0  54                 	db	84	;'T'
  1788  005FC1  2B                 	db	43
  1789  005FC2  49                 	db	73	;'I'
  1790  005FC3  50                 	db	80	;'P'
  1791  005FC4  52                 	db	82	;'R'
  1792  005FC5  3F                 	db	63	;'?'
  1793  005FC6  0D                 	db	13
  1794  005FC7  00                 	db	0
  1795  005FC8                     STR_20:
  1796                           
  1797                           ; BSR set to: 1
  1798  005FC8  41                 	db	65	;'A'
  1799  005FC9  54                 	db	84	;'T'
  1800  005FCA  2B                 	db	43
  1801  005FCB  43                 	db	67	;'C'
  1802  005FCC  53                 	db	83	;'S'
  1803  005FCD  51                 	db	81	;'Q'
  1804  005FCE  0D                 	db	13
  1805  005FCF  00                 	db	0
  1806  005FD0                     STR_15:
  1807                           
  1808                           ; BSR set to: 1
  1809  005FD0  2B                 	db	43
  1810  005FD1  43                 	db	67	;'C'
  1811  005FD2  52                 	db	82	;'R'
  1812  005FD3  45                 	db	69	;'E'
  1813  005FD4  47                 	db	71	;'G'
  1814  005FD5  3A                 	db	58	;':'
  1815  005FD6  20                 	db	32
  1816  005FD7  00                 	db	0
  1817  005FD8                     STR_26:
  1818                           
  1819                           ; BSR set to: 1
  1820  005FD8  2B                 	db	43
  1821  005FD9  43                 	db	67	;'C'
  1822  005FDA  4F                 	db	79	;'O'
  1823  005FDB  50                 	db	80	;'P'
  1824  005FDC  53                 	db	83	;'S'
  1825  005FDD  3A                 	db	58	;':'
  1826  005FDE  20                 	db	32
  1827  005FDF  00                 	db	0
  1828  005FE0                     STR_21:
  1829                           
  1830                           ; BSR set to: 1
  1831  005FE0  2B                 	db	43
  1832  005FE1  43                 	db	67	;'C'
  1833  005FE2  53                 	db	83	;'S'
  1834  005FE3  51                 	db	81	;'Q'
  1835  005FE4  3A                 	db	58	;':'
  1836  005FE5  20                 	db	32
  1837  005FE6  00                 	db	0
  1838  005FE7                     STR_8:
  1839                           
  1840                           ; BSR set to: 1
  1841  005FE7  2B                 	db	43
  1842  005FE8  49                 	db	73	;'I'
  1843  005FE9  50                 	db	80	;'P'
  1844  005FEA  52                 	db	82	;'R'
  1845  005FEB  3A                 	db	58	;':'
  1846  005FEC  20                 	db	32
  1847  005FED  00                 	db	0
  1848  005FEE                     STR_5:
  1849                           
  1850                           ; BSR set to: 1
  1851  005FEE  41                 	db	65	;'A'
  1852  005FEF  54                 	db	84	;'T'
  1853  005FF0  0D                 	db	13
  1854  005FF1  00                 	db	0
  1855  005FF2                     STR_1:
  1856                           
  1857                           ; BSR set to: 1
  1858  005FF2  25                 	db	37
  1859  005FF3  33                 	db	51	;'3'
  1860  005FF4  64                 	db	100	;'d'
  1861  005FF5  00                 	db	0
  1862  005FF6                     STR_6:
  1863                           
  1864                           ; BSR set to: 1
  1865  005FF6  4F                 	db	79	;'O'
  1866  005FF7  4B                 	db	75	;'K'
  1867  005FF8  00                 	db	0
  1868  005FF9                     STR_32:
  1869                           
  1870                           ; BSR set to: 1
  1871  005FF9  22                 	db	34
  1872  005FFA  00                 	db	0
  1873  005FFB                     STR_18:
  1874                           
  1875                           ; BSR set to: 1
  1876  005FFB  2C                 	db	44
  1877  005FFC  00                 	db	0
  1878  005FFD                     STR_33:
  1879                           
  1880                           ; BSR set to: 1
  1881  005FFD  2D                 	db	45
  1882  005FFE  00                 	db	0
  1883  0000                     
  1884                           ; #config settings
  1885  005FFF  00                 	db	0	; dummy byte at the end
  1886  0000                     
  1887                           	psect	cinit
  1888  002804                     __pcinit:
  1889                           	opt callstack 0
  1890  002804                     start_initialization:
  1891                           	opt callstack 0
  1892  002804                     __initialization:
  1893                           	opt callstack 0
  1894                           
  1895                           ; Initialize objects allocated to BANK0 (6 bytes)
  1896                           ; load TBLPTR registers with __pidataBANK0
  1897  002804  0EBA               	movlw	low __pidataBANK0
  1898  002806  6EF6               	movwf	tblptrl,c
  1899  002808  0E2F               	movlw	high __pidataBANK0
  1900  00280A  6EF7               	movwf	tblptrh,c
  1901  00280C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1902  00280E  6EF8               	movwf	tblptru,c
  1903  002810  EE00  F0BE         	lfsr	0,__pdataBANK0
  1904  002814  EE10 F006          	lfsr	1,6
  1905  002818                     copy_data0:
  1906  002818  0009               	tblrd		*+
  1907  00281A  CFF5 FFEE          	movff	tablat,postinc0
  1908  00281E  50E5               	movf	postdec1,w,c
  1909  002820  50E1               	movf	fsr1l,w,c
  1910  002822  E1FA               	bnz	copy_data0
  1911                           
  1912                           ; Initialize objects allocated to COMRAM (2 bytes)
  1913                           ; load TBLPTR registers with __pidataCOMRAM
  1914  002824  0ECA               	movlw	low __pidataCOMRAM
  1915  002826  6EF6               	movwf	tblptrl,c
  1916  002828  0E2F               	movlw	high __pidataCOMRAM
  1917  00282A  6EF7               	movwf	tblptrh,c
  1918  00282C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1919  00282E  6EF8               	movwf	tblptru,c
  1920  002830  0009               	tblrd		*+	;fetch initializer
  1921  002832  CFF5 F055          	movff	tablat,__pdataCOMRAM
  1922  002836  0009               	tblrd		*+	;fetch initializer
  1923  002838  CFF5 F056          	movff	tablat,__pdataCOMRAM+1
  1924                           
  1925                           ; Clear objects allocated to BANK1 (130 bytes)
  1926  00283C  EE01  F000         	lfsr	0,__pbssBANK1
  1927  002840  0E82               	movlw	130
  1928  002842                     clear_0:
  1929  002842  6AEE               	clrf	postinc0,c
  1930  002844  06E8               	decf	wreg,f,c
  1931  002846  E1FD               	bnz	clear_0
  1932                           
  1933                           ; Clear objects allocated to BANK0 (38 bytes)
  1934  002848  EE00  F098         	lfsr	0,__pbssBANK0
  1935  00284C  0E26               	movlw	38
  1936  00284E                     clear_1:
  1937  00284E  6AEE               	clrf	postinc0,c
  1938  002850  06E8               	decf	wreg,f,c
  1939  002852  E1FD               	bnz	clear_1
  1940                           
  1941                           ; Clear objects allocated to COMRAM (3 bytes)
  1942  002854  6A54               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1943  002856  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1944  002858  6A52               	clrf	__pbssCOMRAM& (0+255),c
  1945  00285A                     end_of_initialization:
  1946                           	opt callstack 0
  1947  00285A                     __end_of__initialization:
  1948                           	opt callstack 0
  1949  00285A  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1950  00285C  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1951  00285E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1952  002860  6EF8               	movwf	tblptru,c
  1953  002862  0100               	movlb	0
  1954  002864  EFAD  F016         	goto	_main	;jump to C main() function
  1955                           
  1956                           	psect	bssCOMRAM
  1957  000052                     __pbssCOMRAM:
  1958                           	opt callstack 0
  1959  000052                     _TFT_ConsoleRow:
  1960                           	opt callstack 0
  1961  000052                     	ds	2
  1962  000054                     _TFT_Orientation:
  1963                           	opt callstack 0
  1964  000054                     	ds	1
  1965                           
  1966                           	psect	dataCOMRAM
  1967  000055                     __pdataCOMRAM:
  1968                           	opt callstack 0
  1969  000055                     _Ecg_X:
  1970                           	opt callstack 0
  1971  000055                     	ds	2
  1972                           
  1973                           	psect	bssBANK0
  1974  000098                     __pbssBANK0:
  1975                           	opt callstack 0
  1976  000098                     _ECG_HEARTBEAT:
  1977                           	opt callstack 0
  1978  000098                     	ds	13
  1979  0000A5                     _ECG_BUFFER:
  1980                           	opt callstack 0
  1981  0000A5                     	ds	5
  1982  0000AA                     _ECG_HEARTRATE:
  1983                           	opt callstack 0
  1984  0000AA                     	ds	4
  1985  0000AE                     _refreshGSMSleep:
  1986                           	opt callstack 0
  1987  0000AE                     	ds	4
  1988  0000B2                     _A6_LAST_COMMAND_MILLISECONDS:
  1989                           	opt callstack 0
  1990  0000B2                     	ds	4
  1991  0000B6                     _MILLISECONDS:
  1992                           	opt callstack 0
  1993  0000B6                     	ds	4
  1994  0000BA                     strtok@sp:
  1995                           	opt callstack 0
  1996  0000BA                     	ds	2
  1997  0000BC                     _ECG_FLAGS:
  1998                           	opt callstack 0
  1999  0000BC                     	ds	2
  2000                           
  2001                           	psect	dataBANK0
  2002  0000BE                     __pdataBANK0:
  2003                           	opt callstack 0
  2004  0000BE                     _Ecg_Yold:
  2005                           	opt callstack 0
  2006  0000BE                     	ds	2
  2007  0000C0                     _Ecg_Y:
  2008                           	opt callstack 0
  2009  0000C0                     	ds	2
  2010  0000C2                     _Ecg_Xold:
  2011                           	opt callstack 0
  2012  0000C2                     	ds	2
  2013                           
  2014                           	psect	bssBANK1
  2015  000100                     __pbssBANK1:
  2016                           	opt callstack 0
  2017  000100                     _EUSART_RX:
  2018                           	opt callstack 0
  2019  000100                     	ds	130
  2020                           
  2021                           	psect	cstackBANK0
  2022  000060                     __pcstackBANK0:
  2023                           	opt callstack 0
  2024  000060                     TFT_DrawString@x:
  2025                           	opt callstack 0
  2026  000060                     A6_BaudRateSet@response:
  2027                           	opt callstack 0
  2028                           
  2029                           ; 32 bytes @ 0x0
  2030  000060                     	ds	2
  2031  000062                     TFT_DrawString@y:
  2032                           	opt callstack 0
  2033                           
  2034                           ; 2 bytes @ 0x2
  2035  000062                     	ds	2
  2036  000064                     TFT_DrawString@str:
  2037                           	opt callstack 0
  2038                           
  2039                           ; 2 bytes @ 0x4
  2040  000064                     	ds	2
  2041  000066                     TFT_DrawString@color:
  2042                           	opt callstack 0
  2043                           
  2044                           ; 2 bytes @ 0x6
  2045  000066                     	ds	2
  2046  000068                     TFT_DrawString@bg:
  2047                           	opt callstack 0
  2048                           
  2049                           ; 2 bytes @ 0x8
  2050  000068                     	ds	2
  2051  00006A                     TFT_DrawString@size:
  2052                           	opt callstack 0
  2053                           
  2054                           ; 1 bytes @ 0xA
  2055  00006A                     	ds	1
  2056  00006B                     ??_Ecg_ProcessHeartRate:
  2057  00006B                     refreshGSM@operator:
  2058                           	opt callstack 0
  2059                           
  2060                           ; 32 bytes @ 0xB
  2061  00006B                     	ds	12
  2062  000077                     Ecg_ProcessHeartRate@heartrateString:
  2063                           	opt callstack 0
  2064                           
  2065                           ; 5 bytes @ 0x17
  2066  000077                     	ds	5
  2067  00007C                     _Ecg_ProcessHeartRate$1028:
  2068                           	opt callstack 0
  2069                           
  2070                           ; 2 bytes @ 0x1C
  2071  00007C                     	ds	2
  2072  00007E                     _Ecg_ProcessHeartRate$1029:
  2073                           	opt callstack 0
  2074                           
  2075                           ; 2 bytes @ 0x1E
  2076  00007E                     	ds	2
  2077  000080                     Ecg_ProcessHeartRate@heartbeatAverage:
  2078                           	opt callstack 0
  2079  000080                     A6_BaudRateSet@request:
  2080                           	opt callstack 0
  2081                           
  2082                           ; 20 bytes @ 0x20
  2083  000080                     	ds	4
  2084  000084                     Ecg_ProcessHeartRate@heartrate:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 1 bytes @ 0x24
  2088  000084                     	ds	1
  2089  000085                     Ecg_ProcessHeartRate@jPrev:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 1 bytes @ 0x25
  2093  000085                     	ds	1
  2094  000086                     Ecg_ProcessHeartRate@i:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 1 bytes @ 0x26
  2098  000086                     	ds	1
  2099  000087                     Ecg_ProcessHeartRate@j:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 1 bytes @ 0x27
  2103  000087                     	ds	4
  2104  00008B                     refreshGSM@RSSILevel:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 1 bytes @ 0x2B
  2108  00008B                     	ds	1
  2109  00008C                     refreshGSM@RSSIY:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 1 bytes @ 0x2C
  2113  00008C                     	ds	1
  2114  00008D                     refreshGSM@operatorX:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 2 bytes @ 0x2D
  2118  00008D                     	ds	2
  2119  00008F                     refreshGSM@operatorRSSIX:
  2120                           	opt callstack 0
  2121                           
  2122                           ; 2 bytes @ 0x2F
  2123  00008F                     	ds	2
  2124  000091                     refreshGSM@i:
  2125                           	opt callstack 0
  2126                           
  2127                           ; 1 bytes @ 0x31
  2128  000091                     	ds	3
  2129  000094                     A6_BaudRateSet@currentBaudRate:
  2130                           	opt callstack 0
  2131                           
  2132                           ; 4 bytes @ 0x34
  2133  000094                     	ds	4
  2134                           
  2135                           	psect	cstackCOMRAM
  2136  000001                     __pcstackCOMRAM:
  2137                           	opt callstack 0
  2138  000001                     ??_Ecg_Interrupt:
  2139  000001                     ??_EUSART_RX_Interrupt:
  2140  000001                     
  2141                           ; 4 bytes @ 0x0
  2142  000001                     	ds	1
  2143  000002                     EUSART_RX_Interrupt@c:
  2144                           	opt callstack 0
  2145                           
  2146                           ; 1 bytes @ 0x1
  2147  000002                     	ds	1
  2148  000003                     ??_isr:
  2149                           
  2150                           ; 1 bytes @ 0x2
  2151  000003                     	ds	2
  2152  000005                     ??_init:
  2153  000005                     ??_TFT_Reset:
  2154  000005                     ??_Ecg_ProcessInterrupt:
  2155  000005                     ??_isdigit:
  2156  000005                     ?_TFT_GetWidth:
  2157                           	opt callstack 0
  2158  000005                     ?_strlen:
  2159                           	opt callstack 0
  2160  000005                     ?_abs:
  2161                           	opt callstack 0
  2162  000005                     ?_Ecg_CheckLeads:
  2163                           	opt callstack 0
  2164  000005                     ?_strcmp:
  2165                           	opt callstack 0
  2166  000005                     ?_strchr:
  2167                           	opt callstack 0
  2168  000005                     ?_TFT_GetHeight:
  2169                           	opt callstack 0
  2170  000005                     ?_Ecg_Read:
  2171                           	opt callstack 0
  2172  000005                     ?___awdiv:
  2173                           	opt callstack 0
  2174  000005                     ?___lwdiv:
  2175                           	opt callstack 0
  2176  000005                     ?___lmul:
  2177                           	opt callstack 0
  2178  000005                     ?___lldiv:
  2179                           	opt callstack 0
  2180  000005                     EUSART_TX_Char@c:
  2181                           	opt callstack 0
  2182  000005                     TFT_WriteRegister@reg:
  2183                           	opt callstack 0
  2184  000005                     EUSART_RX_AvailableData@timeout:
  2185                           	opt callstack 0
  2186  000005                     ___awdiv@dividend:
  2187                           	opt callstack 0
  2188  000005                     ___lwdiv@dividend:
  2189                           	opt callstack 0
  2190  000005                     abs@a:
  2191                           	opt callstack 0
  2192  000005                     memset@p1:
  2193                           	opt callstack 0
  2194  000005                     strcmp@s1:
  2195                           	opt callstack 0
  2196  000005                     strcpy@to:
  2197                           	opt callstack 0
  2198  000005                     strlen@s:
  2199                           	opt callstack 0
  2200  000005                     strchr@ptr:
  2201                           	opt callstack 0
  2202  000005                     sleepMS@ms:
  2203                           	opt callstack 0
  2204  000005                     ___lmul@multiplier:
  2205                           	opt callstack 0
  2206  000005                     ___lldiv@dividend:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 4 bytes @ 0x4
  2210  000005                     	ds	1
  2211  000006                     _isdigit$1967:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 1 bytes @ 0x5
  2215  000006                     	ds	1
  2216  000007                     ??_abs:
  2217  000007                     ??_Ecg_CheckLeads:
  2218  000007                     ??_EUSART_RX_AvailableData:
  2219  000007                     ??_Ecg_Read:
  2220  000007                     isdigit@c:
  2221                           	opt callstack 0
  2222  000007                     TFT_WriteRegister@data:
  2223                           	opt callstack 0
  2224  000007                     ___awdiv@divisor:
  2225                           	opt callstack 0
  2226  000007                     ___lwdiv@divisor:
  2227                           	opt callstack 0
  2228  000007                     memset@c:
  2229                           	opt callstack 0
  2230  000007                     strcmp@s2:
  2231                           	opt callstack 0
  2232  000007                     strcpy@from:
  2233                           	opt callstack 0
  2234  000007                     strlen@cp:
  2235                           	opt callstack 0
  2236  000007                     strchr@chr:
  2237                           	opt callstack 0
  2238                           
  2239                           ; 2 bytes @ 0x6
  2240  000007                     	ds	1
  2241  000008                     Ecg_CheckLeads@leadsStatus:
  2242                           	opt callstack 0
  2243                           
  2244                           ; 1 bytes @ 0x7
  2245  000008                     	ds	1
  2246  000009                     ??_strcmp:
  2247  000009                     ??_strchr:
  2248  000009                     ?_strncmp:
  2249                           	opt callstack 0
  2250  000009                     ?___wmul:
  2251                           	opt callstack 0
  2252  000009                     TFT_WriteRegister@h:
  2253                           	opt callstack 0
  2254  000009                     ___awdiv@counter:
  2255                           	opt callstack 0
  2256  000009                     Ecg_Read@ecg:
  2257                           	opt callstack 0
  2258  000009                     EUSART_TX_String@str:
  2259                           	opt callstack 0
  2260  000009                     ___wmul@multiplier:
  2261                           	opt callstack 0
  2262  000009                     ___lwdiv@quotient:
  2263                           	opt callstack 0
  2264  000009                     memset@n:
  2265                           	opt callstack 0
  2266  000009                     strcpy@cp:
  2267                           	opt callstack 0
  2268  000009                     strncmp@s1:
  2269                           	opt callstack 0
  2270  000009                     sleepMS@t:
  2271                           	opt callstack 0
  2272  000009                     ___lmul@multiplicand:
  2273                           	opt callstack 0
  2274  000009                     ___lldiv@divisor:
  2275                           	opt callstack 0
  2276                           
  2277                           ; 4 bytes @ 0x8
  2278  000009                     	ds	1
  2279  00000A                     TFT_WriteRegister@l:
  2280                           	opt callstack 0
  2281  00000A                     ___awdiv@sign:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 1 bytes @ 0x9
  2285  00000A                     	ds	1
  2286  00000B                     ?_strspn:
  2287                           	opt callstack 0
  2288  00000B                     ?_strcspn:
  2289                           	opt callstack 0
  2290  00000B                     TFT_WriteRegister@h_719:
  2291                           	opt callstack 0
  2292  00000B                     EUSART_TX_String@len:
  2293                           	opt callstack 0
  2294  00000B                     ___lwdiv@counter:
  2295                           	opt callstack 0
  2296  00000B                     strcmp@r:
  2297                           	opt callstack 0
  2298  00000B                     ___wmul@multiplicand:
  2299                           	opt callstack 0
  2300  00000B                     ___awdiv@quotient:
  2301                           	opt callstack 0
  2302  00000B                     memset@p:
  2303                           	opt callstack 0
  2304  00000B                     strcspn@s1:
  2305                           	opt callstack 0
  2306  00000B                     strncmp@s2:
  2307                           	opt callstack 0
  2308  00000B                     strspn@s1:
  2309                           	opt callstack 0
  2310  00000B                     EUSART_RX_AvailableData@t:
  2311                           	opt callstack 0
  2312                           
  2313                           ; 4 bytes @ 0xA
  2314  00000B                     	ds	1
  2315  00000C                     TFT_WriteRegister@l_720:
  2316                           	opt callstack 0
  2317                           
  2318                           ; 1 bytes @ 0xB
  2319  00000C                     	ds	1
  2320  00000D                     TFT_SetAddrWindow@x1:
  2321                           	opt callstack 0
  2322  00000D                     TFT_DrawPixel@x:
  2323                           	opt callstack 0
  2324  00000D                     ___wmul@product:
  2325                           	opt callstack 0
  2326  00000D                     strcspn@s2:
  2327                           	opt callstack 0
  2328  00000D                     strncmp@len:
  2329                           	opt callstack 0
  2330  00000D                     strspn@s2:
  2331                           	opt callstack 0
  2332  00000D                     ___lmul@product:
  2333                           	opt callstack 0
  2334  00000D                     ___lldiv@quotient:
  2335                           	opt callstack 0
  2336                           
  2337                           ; 4 bytes @ 0xC
  2338  00000D                     	ds	2
  2339  00000F                     ??_strncmp:
  2340  00000F                     ??_strspn:
  2341  00000F                     ??_strcspn:
  2342  00000F                     ?_atoi:
  2343                           	opt callstack 0
  2344  00000F                     TFT_SetAddrWindow@y1:
  2345                           	opt callstack 0
  2346  00000F                     TFT_DrawPixel@y:
  2347                           	opt callstack 0
  2348  00000F                     TFT_Flood@color:
  2349                           	opt callstack 0
  2350  00000F                     EUSART_BufferGetChar@timeout:
  2351                           	opt callstack 0
  2352  00000F                     atoi@s:
  2353                           	opt callstack 0
  2354                           
  2355                           ; 2 bytes @ 0xE
  2356  00000F                     	ds	1
  2357  000010                     ?_strstr:
  2358                           	opt callstack 0
  2359  000010                     strstr@s1:
  2360                           	opt callstack 0
  2361  000010                     strcspn@i:
  2362                           	opt callstack 0
  2363  000010                     strspn@i:
  2364                           	opt callstack 0
  2365                           
  2366                           ; 2 bytes @ 0xF
  2367  000010                     	ds	1
  2368  000011                     ??_atoi:
  2369  000011                     ?_atol:
  2370                           	opt callstack 0
  2371  000011                     ___lldiv@counter:
  2372                           	opt callstack 0
  2373  000011                     TFT_SetAddrWindow@x2:
  2374                           	opt callstack 0
  2375  000011                     TFT_DrawPixel@color:
  2376                           	opt callstack 0
  2377  000011                     A6_ReadLine@line:
  2378                           	opt callstack 0
  2379  000011                     atol@s:
  2380                           	opt callstack 0
  2381  000011                     TFT_Flood@len:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 4 bytes @ 0x10
  2385  000011                     	ds	1
  2386  000012                     ?_strtok:
  2387                           	opt callstack 0
  2388  000012                     ?___llmod:
  2389                           	opt callstack 0
  2390  000012                     strstr@s2:
  2391                           	opt callstack 0
  2392  000012                     strtok@s1:
  2393                           	opt callstack 0
  2394  000012                     EUSART_BaudRateSet@baudRate:
  2395                           	opt callstack 0
  2396  000012                     ___llmod@dividend:
  2397                           	opt callstack 0
  2398                           
  2399                           ; 4 bytes @ 0x11
  2400  000012                     	ds	1
  2401  000013                     A6_ReadLine@lineLen:
  2402                           	opt callstack 0
  2403  000013                     atoi@sign:
  2404                           	opt callstack 0
  2405  000013                     TFT_SetAddrWindow@y2:
  2406                           	opt callstack 0
  2407  000013                     TFT_DrawPixel@h:
  2408                           	opt callstack 0
  2409                           
  2410                           ; 2 bytes @ 0x12
  2411  000013                     	ds	1
  2412  000014                     A6_ReadLine@timeout:
  2413                           	opt callstack 0
  2414  000014                     atoi@a:
  2415                           	opt callstack 0
  2416  000014                     strtok@s2:
  2417                           	opt callstack 0
  2418                           
  2419                           ; 2 bytes @ 0x13
  2420  000014                     	ds	1
  2421  000015                     ??_TFT_Flood:
  2422  000015                     ??_atol:
  2423  000015                     TFT_DrawPixel@v:
  2424                           	opt callstack 0
  2425                           
  2426                           ; 2 bytes @ 0x14
  2427  000015                     	ds	1
  2428  000016                     ??_EUSART_BaudRateSet:
  2429  000016                     A6_ReadLine@iResponse:
  2430                           	opt callstack 0
  2431  000016                     ___llmod@divisor:
  2432                           	opt callstack 0
  2433                           
  2434                           ; 4 bytes @ 0x15
  2435  000016                     	ds	1
  2436  000017                     A6_ReadLine@c:
  2437                           	opt callstack 0
  2438  000017                     TFT_DrawLine@x0:
  2439                           	opt callstack 0
  2440  000017                     TFT_DrawBitmap@x:
  2441                           	opt callstack 0
  2442                           
  2443                           ; 2 bytes @ 0x16
  2444  000017                     	ds	1
  2445  000018                     A6_Command@command:
  2446                           	opt callstack 0
  2447                           
  2448                           ; 2 bytes @ 0x17
  2449  000018                     	ds	1
  2450  000019                     atol@sign:
  2451                           	opt callstack 0
  2452  000019                     TFT_DrawLine@y0:
  2453                           	opt callstack 0
  2454  000019                     TFT_Flood@blocks:
  2455                           	opt callstack 0
  2456  000019                     TFT_DrawBitmap@y:
  2457                           	opt callstack 0
  2458                           
  2459                           ; 2 bytes @ 0x18
  2460  000019                     	ds	1
  2461  00001A                     ___llmod@counter:
  2462                           	opt callstack 0
  2463  00001A                     A6_Command@timeout:
  2464                           	opt callstack 0
  2465  00001A                     EUSART_BaudRateSet@tmp:
  2466                           	opt callstack 0
  2467  00001A                     atol@a:
  2468                           	opt callstack 0
  2469                           
  2470                           ; 4 bytes @ 0x19
  2471  00001A                     	ds	1
  2472  00001B                     ?_sprintf:
  2473                           	opt callstack 0
  2474  00001B                     TFT_Flood@i:
  2475                           	opt callstack 0
  2476  00001B                     TFT_DrawLine@x1:
  2477                           	opt callstack 0
  2478  00001B                     TFT_DrawBitmap@bitmap:
  2479                           	opt callstack 0
  2480  00001B                     sprintf@sp:
  2481                           	opt callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x1A
  2484  00001B                     	ds	1
  2485  00001C                     TFT_Flood@color_hi:
  2486                           	opt callstack 0
  2487  00001C                     A6_Command@response:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 2 bytes @ 0x1B
  2491  00001C                     	ds	1
  2492  00001D                     TFT_Flood@color_lo:
  2493                           	opt callstack 0
  2494  00001D                     TFT_DrawLine@y1:
  2495                           	opt callstack 0
  2496  00001D                     TFT_DrawBitmap@color:
  2497                           	opt callstack 0
  2498  00001D                     sprintf@f:
  2499                           	opt callstack 0
  2500                           
  2501                           ; 2 bytes @ 0x1C
  2502  00001D                     	ds	1
  2503  00001E                     A6_Command@responseLen:
  2504                           	opt callstack 0
  2505  00001E                     atol@c:
  2506                           	opt callstack 0
  2507  00001E                     TFT_FullScreen@color:
  2508                           	opt callstack 0
  2509                           
  2510                           ; 2 bytes @ 0x1D
  2511  00001E                     	ds	1
  2512  00001F                     ??_TFT_DrawBitmap:
  2513  00001F                     ?_A6_BaudRateGet:
  2514                           	opt callstack 0
  2515  00001F                     TFT_DrawLine@color:
  2516                           	opt callstack 0
  2517  00001F                     A6_NetworkGetOperator@operator:
  2518                           	opt callstack 0
  2519  00001F                     A6_IsAlive@response:
  2520                           	opt callstack 0
  2521  00001F                     A6_NetworkGetRSSI@response:
  2522                           	opt callstack 0
  2523                           
  2524                           ; 32 bytes @ 0x1E
  2525  00001F                     	ds	1
  2526  000020                     TFT_OrientationSet@color:
  2527                           	opt callstack 0
  2528  000020                     TFT_DrawFillRect@x:
  2529                           	opt callstack 0
  2530                           
  2531                           ; 2 bytes @ 0x1F
  2532  000020                     	ds	1
  2533  000021                     ??_TFT_DrawLine:
  2534  000021                     A6_NetworkGetOperator@operatorLen:
  2535                           	opt callstack 0
  2536  000021                     TFT_DrawBitmap@j:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x20
  2540  000021                     	ds	1
  2541  000022                     TFT_OrientationSet@orientation:
  2542                           	opt callstack 0
  2543  000022                     TFT_DrawFillRect@y:
  2544                           	opt callstack 0
  2545                           
  2546                           ; 2 bytes @ 0x21
  2547  000022                     	ds	1
  2548  000023                     ??_sprintf:
  2549  000023                     TFT_DrawBitmap@w:
  2550                           	opt callstack 0
  2551  000023                     TFT_Init@color:
  2552                           	opt callstack 0
  2553  000023                     A6_NetworkGetOperator@operatorToken:
  2554                           	opt callstack 0
  2555  000023                     A6_BaudRateGet@response:
  2556                           	opt callstack 0
  2557                           
  2558                           ; 32 bytes @ 0x22
  2559  000023                     	ds	1
  2560  000024                     TFT_DrawBitmap@h:
  2561                           	opt callstack 0
  2562  000024                     TFT_DrawLine@t:
  2563                           	opt callstack 0
  2564  000024                     TFT_DrawFillRect@w:
  2565                           	opt callstack 0
  2566                           
  2567                           ; 2 bytes @ 0x23
  2568  000024                     	ds	1
  2569  000025                     ??_TFT_Init:
  2570  000025                     TFT_DrawBitmap@byte:
  2571                           	opt callstack 0
  2572                           
  2573                           ; 1 bytes @ 0x24
  2574  000025                     	ds	1
  2575  000026                     TFT_DrawLine@t_778:
  2576                           	opt callstack 0
  2577  000026                     TFT_DrawFillRect@h:
  2578                           	opt callstack 0
  2579  000026                     TFT_DrawBitmap@i:
  2580                           	opt callstack 0
  2581                           
  2582                           ; 2 bytes @ 0x25
  2583  000026                     	ds	1
  2584  000027                     TFT_Init@data:
  2585                           	opt callstack 0
  2586  000027                     sprintf@prec:
  2587                           	opt callstack 0
  2588                           
  2589                           ; 2 bytes @ 0x26
  2590  000027                     	ds	1
  2591  000028                     TFT_DrawLine@t_779:
  2592                           	opt callstack 0
  2593  000028                     TFT_DrawFillRect@color:
  2594                           	opt callstack 0
  2595                           
  2596                           ; 2 bytes @ 0x27
  2597  000028                     	ds	1
  2598  000029                     TFT_Init@initSequenceSize:
  2599                           	opt callstack 0
  2600  000029                     sprintf@val:
  2601                           	opt callstack 0
  2602                           
  2603                           ; 4 bytes @ 0x28
  2604  000029                     	ds	1
  2605  00002A                     ??_TFT_DrawFillRect:
  2606  00002A                     TFT_DrawLine@t_780:
  2607                           	opt callstack 0
  2608                           
  2609                           ; 2 bytes @ 0x29
  2610  00002A                     	ds	1
  2611  00002B                     TFT_Init@orientation:
  2612                           	opt callstack 0
  2613                           
  2614                           ; 1 bytes @ 0x2A
  2615  00002B                     	ds	1
  2616  00002C                     TFT_Init@cmd:
  2617                           	opt callstack 0
  2618  00002C                     TFT_DrawLine@dy:
  2619                           	opt callstack 0
  2620                           
  2621                           ; 2 bytes @ 0x2B
  2622  00002C                     	ds	1
  2623  00002D                     sprintf@ap:
  2624                           	opt callstack 0
  2625                           
  2626                           ; 2 bytes @ 0x2C
  2627  00002D                     	ds	1
  2628  00002E                     ??_Ecg_ProcessHeartbeat:
  2629  00002E                     TFT_Init@i:
  2630                           	opt callstack 0
  2631  00002E                     TFT_DrawLine@ystep:
  2632                           	opt callstack 0
  2633                           
  2634                           ; 2 bytes @ 0x2D
  2635  00002E                     	ds	1
  2636  00002F                     sprintf@flag:
  2637                           	opt callstack 0
  2638                           
  2639                           ; 1 bytes @ 0x2E
  2640  00002F                     	ds	1
  2641  000030                     TFT_DrawLine@err:
  2642                           	opt callstack 0
  2643  000030                     Ecg_ProcessHeartbeat@ecgDeltaSum:
  2644                           	opt callstack 0
  2645  000030                     sprintf@width:
  2646                           	opt callstack 0
  2647                           
  2648                           ; 2 bytes @ 0x2F
  2649  000030                     	ds	2
  2650  000032                     sprintf@c:
  2651                           	opt callstack 0
  2652  000032                     TFT_DrawLine@steep:
  2653                           	opt callstack 0
  2654  000032                     Ecg_ProcessHeartbeat@ecgDeltaAbsSum:
  2655                           	opt callstack 0
  2656                           
  2657                           ; 2 bytes @ 0x31
  2658  000032                     	ds	2
  2659  000034                     TFT_DrawLine@dx:
  2660                           	opt callstack 0
  2661  000034                     Ecg_ProcessHeartbeat@ecgDeltaDiff:
  2662                           	opt callstack 0
  2663                           
  2664                           ; 2 bytes @ 0x33
  2665  000034                     	ds	2
  2666  000036                     TFT_DrawChar@x:
  2667                           	opt callstack 0
  2668  000036                     Ecg_ProcessHeartbeat@delta:
  2669                           	opt callstack 0
  2670  000036                     _Ecg_Draw$2255:
  2671                           	opt callstack 0
  2672                           
  2673                           ; 2 bytes @ 0x35
  2674  000036                     	ds	2
  2675  000038                     Ecg_ProcessHeartbeat@i:
  2676                           	opt callstack 0
  2677  000038                     TFT_DrawChar@y:
  2678                           	opt callstack 0
  2679  000038                     Ecg_Draw@ecg:
  2680                           	opt callstack 0
  2681                           
  2682                           ; 2 bytes @ 0x37
  2683  000038                     	ds	2
  2684  00003A                     TFT_DrawChar@c:
  2685                           	opt callstack 0
  2686                           
  2687                           ; 1 bytes @ 0x39
  2688  00003A                     	ds	1
  2689  00003B                     TFT_DrawChar@color:
  2690                           	opt callstack 0
  2691                           
  2692                           ; 2 bytes @ 0x3A
  2693  00003B                     	ds	2
  2694  00003D                     TFT_DrawChar@bg:
  2695                           	opt callstack 0
  2696                           
  2697                           ; 2 bytes @ 0x3C
  2698  00003D                     	ds	2
  2699  00003F                     TFT_DrawChar@size:
  2700                           	opt callstack 0
  2701  00003F                     A6_BaudRateAutoDetect@i:
  2702                           	opt callstack 0
  2703  00003F                     A6_NetworkGetRSSI@RSSIToken:
  2704                           	opt callstack 0
  2705                           
  2706                           ; 2 bytes @ 0x3E
  2707  00003F                     	ds	1
  2708  000040                     ??_TFT_DrawChar:
  2709                           
  2710                           ; 1 bytes @ 0x3F
  2711  000040                     	ds	1
  2712  000041                     A6_NetworkGetRSSILevel@RSSI:
  2713                           	opt callstack 0
  2714                           
  2715                           ; 1 bytes @ 0x40
  2716  000041                     	ds	2
  2717  000043                     A6_BaudRateGet@baudRate:
  2718                           	opt callstack 0
  2719                           
  2720                           ; 4 bytes @ 0x42
  2721  000043                     	ds	1
  2722  000044                     TFT_DrawChar@line:
  2723                           	opt callstack 0
  2724                           
  2725                           ; 1 bytes @ 0x43
  2726  000044                     	ds	1
  2727  000045                     TFT_DrawChar@xl:
  2728                           	opt callstack 0
  2729                           
  2730                           ; 2 bytes @ 0x44
  2731  000045                     	ds	2
  2732  000047                     A6_BaudRateGet@baudRateToken:
  2733                           	opt callstack 0
  2734  000047                     _TFT_DrawChar$2252:
  2735                           	opt callstack 0
  2736                           
  2737                           ; 2 bytes @ 0x46
  2738  000047                     	ds	2
  2739  000049                     A6_BaudRateGet@j:
  2740                           	opt callstack 0
  2741  000049                     _TFT_DrawChar$2253:
  2742                           	opt callstack 0
  2743                           
  2744                           ; 2 bytes @ 0x48
  2745  000049                     	ds	1
  2746  00004A                     A6_BaudRateSet@baudRate:
  2747                           	opt callstack 0
  2748                           
  2749                           ; 4 bytes @ 0x49
  2750  00004A                     	ds	1
  2751  00004B                     TFT_DrawChar@j:
  2752                           	opt callstack 0
  2753                           
  2754                           ; 1 bytes @ 0x4A
  2755  00004B                     	ds	1
  2756  00004C                     TFT_DrawChar@i:
  2757                           	opt callstack 0
  2758                           
  2759                           ; 1 bytes @ 0x4B
  2760  00004C                     	ds	1
  2761  00004D                     ??_refreshGSM:
  2762  00004D                     ??_Ecg_Background_Leads_Ok:
  2763  00004D                     
  2764                           ; 1 bytes @ 0x4C
  2765  00004D                     	ds	1
  2766  00004E                     A6_Init@baudRate:
  2767                           	opt callstack 0
  2768                           
  2769                           ; 4 bytes @ 0x4D
  2770  00004E                     	ds	1
  2771  00004F                     
  2772                           ; 1 bytes @ 0x4E
  2773  00004F                     	ds	3
  2774  000052                     
  2775                           ; 1 bytes @ 0x51
  2776 ;;
  2777 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2778 ;;
  2779 ;; *************** function _main *****************
  2780 ;; Defined at:
  2781 ;;		line 12 in file "main.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2795 ;;      Params:         0       0       0       0       0       0       0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2797 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2798 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2799 ;;Total ram usage:        0 bytes
  2800 ;; Hardware stack levels required when called:   12
  2801 ;; This function calls:
  2802 ;;		_A6_Init
  2803 ;;		_EUSART_Init
  2804 ;;		_Ecg_Init
  2805 ;;		_TFT_Init
  2806 ;;		_init
  2807 ;;		_loop
  2808 ;; This function is called by:
  2809 ;;		Startup code after reset
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text0
  2814  002D5A                     __ptext0:
  2815                           	opt callstack 0
  2816  002D5A                     _main:
  2817                           	opt callstack 19
  2818  002D5A                     
  2819                           ;main.c: 14: init();
  2820  002D5A  ECBF  F012         	call	_init	;wreg free
  2821  002D5E                     
  2822                           ;main.c: 15: TFT_Init(3, 0x0821);
  2823  002D5E  0E08               	movlw	8
  2824  002D60  6E24               	movwf	(TFT_Init@color+1)^0,c
  2825  002D62  0E21               	movlw	33
  2826  002D64  6E23               	movwf	TFT_Init@color^0,c
  2827  002D66  0E03               	movlw	3
  2828  002D68  ECC1  F00C         	call	_TFT_Init
  2829  002D6C                     
  2830                           ;main.c: 16: EUSART_Init();
  2831  002D6C  EC28  F016         	call	_EUSART_Init	;wreg free
  2832  002D70                     
  2833                           ;main.c: 17: Ecg_Init();
  2834  002D70  EC6E  F017         	call	_Ecg_Init	;wreg free
  2835  002D74                     
  2836                           ;main.c: 18: A6_Init(115200);
  2837  002D74  0E00               	movlw	0
  2838  002D76  6E4E               	movwf	A6_Init@baudRate^0,c
  2839  002D78  0EC2               	movlw	194
  2840  002D7A  6E4F               	movwf	(A6_Init@baudRate+1)^0,c
  2841  002D7C  0E01               	movlw	1
  2842  002D7E  6E50               	movwf	(A6_Init@baudRate+2)^0,c
  2843  002D80  0E00               	movlw	0
  2844  002D82  6E51               	movwf	(A6_Init@baudRate+3)^0,c
  2845  002D84  ECCA  F016         	call	_A6_Init	;wreg free
  2846  002D88                     l4756:
  2847  002D88  ECD8  F017         	call	_loop	;wreg free
  2848  002D8C  EFC4  F016         	goto	l4756
  2849  002D90  EF07  F000         	goto	start
  2850  002D94                     __end_of_main:
  2851                           	opt callstack 0
  2852                           
  2853 ;; *************** function _loop *****************
  2854 ;; Defined at:
  2855 ;;		line 28 in file "main.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2872 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:   11
  2876 ;; This function calls:
  2877 ;;		_Ecg_Process
  2878 ;;		_refreshGSM
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text1
  2885  002FB0                     __ptext1:
  2886                           	opt callstack 0
  2887  002FB0                     _loop:
  2888                           	opt callstack 19
  2889  002FB0                     
  2890                           ;main.c: 30: Ecg_Process();
  2891  002FB0  ECC4  F014         	call	_Ecg_Process	;wreg free
  2892                           
  2893                           ;main.c: 32: refreshGSM();
  2894  002FB4  EC78  F005         	call	_refreshGSM	;wreg free
  2895  002FB8  0012               	return		;funcret
  2896  002FBA                     __end_of_loop:
  2897                           	opt callstack 0
  2898                           
  2899 ;; *************** function _refreshGSM *****************
  2900 ;; Defined at:
  2901 ;;		line 101 in file "main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;  RSSIY           1   44[BANK0 ] unsigned char 
  2906 ;;  operatorRSSI    2   47[BANK0 ] unsigned int 
  2907 ;;  i               1   49[BANK0 ] unsigned char 
  2908 ;;  RSSILevel       1   43[BANK0 ] unsigned char 
  2909 ;;  operator       32   11[BANK0 ] unsigned char [32]
  2910 ;;  operatorX       2   45[BANK0 ] unsigned int 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2920 ;;      Params:         0       0       0       0       0       0       0       0       0
  2921 ;;      Locals:         0      39       0       0       0       0       0       0       0
  2922 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2923 ;;      Totals:         2      39       0       0       0       0       0       0       0
  2924 ;;Total ram usage:       41 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    8
  2927 ;; This function calls:
  2928 ;;		_A6_NetworkGetOperator
  2929 ;;		_A6_NetworkGetRSSILevel
  2930 ;;		_TFT_DrawFillRect
  2931 ;;		_TFT_DrawLine
  2932 ;;		_TFT_DrawString
  2933 ;;		_TFT_GetWidth
  2934 ;;		___wmul
  2935 ;;		_strlen
  2936 ;; This function is called by:
  2937 ;;		_loop
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941                           	psect	text2
  2942  000AF0                     __ptext2:
  2943                           	opt callstack 0
  2944  000AF0                     _refreshGSM:
  2945                           	opt callstack 21
  2946  000AF0                     
  2947                           ;main.c: 102: if(refreshGSMSleep > MILLISECONDS) return;
  2948  000AF0  0100               	movlb	0	; () banked
  2949  000AF2  51AE               	movf	_refreshGSMSleep& (0+255),w,b
  2950  000AF4  5DB6               	subwf	_MILLISECONDS& (0+255),w,b
  2951  000AF6  51AF               	movf	(_refreshGSMSleep+1)& (0+255),w,b
  2952  000AF8  59B7               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  2953  000AFA  51B0               	movf	(_refreshGSMSleep+2)& (0+255),w,b
  2954  000AFC  59B8               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
  2955  000AFE  51B1               	movf	(_refreshGSMSleep+3)& (0+255),w,b
  2956  000B00  59B9               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
  2957  000B02  B0D8               	btfsc	status,0,c
  2958  000B04  EF86  F005         	goto	u4011
  2959  000B08  EF88  F005         	goto	u4010
  2960  000B0C                     u4011:
  2961  000B0C  EF8A  F005         	goto	l4684
  2962  000B10                     u4010:
  2963  000B10  EF56  F006         	goto	l63
  2964  000B14                     l4684:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;main.c: 103: refreshGSMSleep = MILLISECONDS + 10000;
  2968  000B14  0E10               	movlw	16
  2969  000B16  25B6               	addwf	_MILLISECONDS& (0+255),w,b
  2970  000B18  6FAE               	movwf	_refreshGSMSleep& (0+255),b
  2971  000B1A  0E27               	movlw	39
  2972  000B1C  21B7               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  2973  000B1E  6FAF               	movwf	(_refreshGSMSleep+1)& (0+255),b
  2974  000B20  0E00               	movlw	0
  2975  000B22  21B8               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  2976  000B24  6FB0               	movwf	(_refreshGSMSleep+2)& (0+255),b
  2977  000B26  0E00               	movlw	0
  2978  000B28  21B9               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  2979  000B2A  6FB1               	movwf	(_refreshGSMSleep+3)& (0+255),b
  2980  000B2C                     
  2981                           ; BSR set to: 0
  2982                           ;main.c: 105: char operator[32];;main.c: 106: uint16_t operatorX = TFT_GetWidth() - 110;
  2983  000B2C  EC8D  F015         	call	_TFT_GetWidth	;wreg free
  2984  000B30  0E92               	movlw	146
  2985  000B32  2405               	addwf	?_TFT_GetWidth^0,w,c
  2986  000B34  0100               	movlb	0	; () banked
  2987  000B36  6F8D               	movwf	refreshGSM@operatorX& (0+255),b
  2988  000B38  0EFF               	movlw	255
  2989  000B3A  2006               	addwfc	(?_TFT_GetWidth+1)^0,w,c
  2990  000B3C  6F8E               	movwf	(refreshGSM@operatorX+1)& (0+255),b
  2991  000B3E                     
  2992                           ; BSR set to: 0
  2993                           ;main.c: 107: A6_NetworkGetOperator(operator, 32);
  2994  000B3E  0E6B               	movlw	low refreshGSM@operator
  2995  000B40  6E1F               	movwf	A6_NetworkGetOperator@operator^0,c
  2996  000B42  0E00               	movlw	high refreshGSM@operator
  2997  000B44  6E20               	movwf	(A6_NetworkGetOperator@operator+1)^0,c
  2998  000B46  0E20               	movlw	32
  2999  000B48  6E21               	movwf	A6_NetworkGetOperator@operatorLen^0,c
  3000  000B4A  EC8D  F008         	call	_A6_NetworkGetOperator	;wreg free
  3001  000B4E                     
  3002                           ;main.c: 108: TFT_DrawString(operatorX, 8, operator, 0xFFFF, 0x0821, 1);
  3003  000B4E  C08D  F060         	movff	refreshGSM@operatorX,TFT_DrawString@x
  3004  000B52  C08E  F061         	movff	refreshGSM@operatorX+1,TFT_DrawString@x+1
  3005  000B56  0E00               	movlw	0
  3006  000B58  0100               	movlb	0	; () banked
  3007  000B5A  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  3008  000B5C  0E08               	movlw	8
  3009  000B5E  6F62               	movwf	TFT_DrawString@y& (0+255),b
  3010  000B60  0E6B               	movlw	low refreshGSM@operator
  3011  000B62  6F64               	movwf	TFT_DrawString@str& (0+255),b
  3012  000B64  0E00               	movlw	high refreshGSM@operator
  3013  000B66  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  3014  000B68  0EFF               	movlw	255
  3015  000B6A  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  3016  000B6C  6966               	setf	TFT_DrawString@color& (0+255),b
  3017  000B6E  0E08               	movlw	8
  3018  000B70  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  3019  000B72  0E21               	movlw	33
  3020  000B74  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  3021  000B76  0E01               	movlw	1
  3022  000B78  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  3023  000B7A  EC36  F010         	call	_TFT_DrawString	;wreg free
  3024  000B7E                     
  3025                           ;main.c: 109: if(operator[0] != '-') {
  3026  000B7E  0E2D               	movlw	45
  3027  000B80  0100               	movlb	0	; () banked
  3028  000B82  196B               	xorwf	refreshGSM@operator& (0+255),w,b
  3029  000B84  B4D8               	btfsc	status,2,c
  3030  000B86  EFC7  F005         	goto	u4021
  3031  000B8A  EFC9  F005         	goto	u4020
  3032  000B8E                     u4021:
  3033  000B8E  EF56  F006         	goto	l63
  3034  000B92                     u4020:
  3035  000B92                     
  3036                           ; BSR set to: 0
  3037                           ;main.c: 110: uint8_t RSSILevel = A6_NetworkGetRSSILevel();
  3038  000B92  EC0C  F012         	call	_A6_NetworkGetRSSILevel	;wreg free
  3039  000B96  0100               	movlb	0	; () banked
  3040  000B98  6F8B               	movwf	refreshGSM@RSSILevel& (0+255),b
  3041  000B9A                     
  3042                           ; BSR set to: 0
  3043                           ;main.c: 111: operatorX += ((strlen(operator) + 1) * 6);
  3044  000B9A  0E6B               	movlw	low refreshGSM@operator
  3045  000B9C  6E05               	movwf	strlen@s^0,c
  3046  000B9E  0E00               	movlw	high refreshGSM@operator
  3047  000BA0  6E06               	movwf	(strlen@s+1)^0,c
  3048  000BA2  ECDB  F015         	call	_strlen	;wreg free
  3049  000BA6  0E01               	movlw	1
  3050  000BA8  2405               	addwf	?_strlen^0,w,c
  3051  000BAA  6E09               	movwf	___wmul@multiplier^0,c
  3052  000BAC  0E00               	movlw	0
  3053  000BAE  2006               	addwfc	(?_strlen+1)^0,w,c
  3054  000BB0  6E0A               	movwf	(___wmul@multiplier+1)^0,c
  3055  000BB2  0E00               	movlw	0
  3056  000BB4  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  3057  000BB6  0E06               	movlw	6
  3058  000BB8  6E0B               	movwf	___wmul@multiplicand^0,c
  3059  000BBA  EC9A  F017         	call	___wmul	;wreg free
  3060  000BBE  5009               	movf	?___wmul^0,w,c
  3061  000BC0  0100               	movlb	0	; () banked
  3062  000BC2  278D               	addwf	refreshGSM@operatorX& (0+255),f,b
  3063  000BC4  500A               	movf	(?___wmul+1)^0,w,c
  3064  000BC6  238E               	addwfc	(refreshGSM@operatorX+1)& (0+255),f,b
  3065  000BC8                     
  3066                           ; BSR set to: 0
  3067                           ;main.c: 112: for(uint8_t i=0; i<5; i++) {
  3068  000BC8  0E00               	movlw	0
  3069  000BCA  6F91               	movwf	refreshGSM@i& (0+255),b
  3070  000BCC                     l4704:
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;main.c: 113: uint16_t operatorRSSIX = operatorX + (i * 3);
  3074  000BCC  5191               	movf	refreshGSM@i& (0+255),w,b
  3075  000BCE  0D03               	mullw	3
  3076  000BD0  CFF3 F04D          	movff	prodl,??_refreshGSM
  3077  000BD4  CFF4 F04E          	movff	prodh,??_refreshGSM+1
  3078  000BD8  518D               	movf	refreshGSM@operatorX& (0+255),w,b
  3079  000BDA  244D               	addwf	??_refreshGSM^0,w,c
  3080  000BDC  6F8F               	movwf	refreshGSM@operatorRSSIX& (0+255),b
  3081  000BDE  518E               	movf	(refreshGSM@operatorX+1)& (0+255),w,b
  3082  000BE0  204E               	addwfc	(??_refreshGSM+1)^0,w,c
  3083  000BE2  6F90               	movwf	(refreshGSM@operatorRSSIX+1)& (0+255),b
  3084  000BE4                     
  3085                           ; BSR set to: 0
  3086                           ;main.c: 114: if(RSSILevel > i) {
  3087  000BE4  518B               	movf	refreshGSM@RSSILevel& (0+255),w,b
  3088  000BE6  5D91               	subwf	refreshGSM@i& (0+255),w,b
  3089  000BE8  B0D8               	btfsc	status,0,c
  3090  000BEA  EFF9  F005         	goto	u4031
  3091  000BEE  EFFB  F005         	goto	u4030
  3092  000BF2                     u4031:
  3093  000BF2  EF1E  F006         	goto	l4712
  3094  000BF6                     u4030:
  3095  000BF6                     
  3096                           ; BSR set to: 0
  3097                           ;main.c: 115: uint8_t RSSIY = (4 - i) * 2;
  3098  000BF6  5191               	movf	refreshGSM@i& (0+255),w,b
  3099  000BF8  0804               	sublw	4
  3100  000BFA  6E4D               	movwf	??_refreshGSM^0,c
  3101  000BFC  90D8               	bcf	status,0,c
  3102  000BFE  344D               	rlcf	??_refreshGSM^0,w,c
  3103  000C00  6F8C               	movwf	refreshGSM@RSSIY& (0+255),b
  3104  000C02                     
  3105                           ; BSR set to: 0
  3106                           ;main.c: 116: TFT_DrawFillRect(operatorRSSIX, (5 + RSSIY), 2, (10 - RSSIY), 0xFFFF);
  3107  000C02  C08F  F020         	movff	refreshGSM@operatorRSSIX,TFT_DrawFillRect@x
  3108  000C06  C090  F021         	movff	refreshGSM@operatorRSSIX+1,TFT_DrawFillRect@x+1
  3109  000C0A  0E05               	movlw	5
  3110  000C0C  258C               	addwf	refreshGSM@RSSIY& (0+255),w,b
  3111  000C0E  6E22               	movwf	TFT_DrawFillRect@y^0,c
  3112  000C10  6A23               	clrf	(TFT_DrawFillRect@y+1)^0,c
  3113  000C12  0E00               	movlw	0
  3114  000C14  2223               	addwfc	(TFT_DrawFillRect@y+1)^0,f,c
  3115  000C16  0E00               	movlw	0
  3116  000C18  6E25               	movwf	(TFT_DrawFillRect@w+1)^0,c
  3117  000C1A  0E02               	movlw	2
  3118  000C1C  6E24               	movwf	TFT_DrawFillRect@w^0,c
  3119  000C1E  518C               	movf	refreshGSM@RSSIY& (0+255),w,b
  3120  000C20  080A               	sublw	10
  3121  000C22  6E26               	movwf	TFT_DrawFillRect@h^0,c
  3122  000C24  0E00               	movlw	0
  3123  000C26  A0D8               	btfss	status,0,c
  3124  000C28  2AE8               	incf	wreg,f,c
  3125  000C2A  0800               	sublw	0
  3126  000C2C  6E27               	movwf	(TFT_DrawFillRect@h+1)^0,c
  3127  000C2E  0EFF               	movlw	255
  3128  000C30  6E29               	movwf	(TFT_DrawFillRect@color+1)^0,c
  3129  000C32  6828               	setf	TFT_DrawFillRect@color^0,c
  3130  000C34  ECCD  F011         	call	_TFT_DrawFillRect	;wreg free
  3131                           
  3132                           ;main.c: 117: } else {
  3133  000C38  EF4C  F006         	goto	l4716
  3134  000C3C                     l4712:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;main.c: 118: TFT_DrawFillRect(operatorRSSIX, 5, 2, 10, 0x0821);
  3138  000C3C  C08F  F020         	movff	refreshGSM@operatorRSSIX,TFT_DrawFillRect@x
  3139  000C40  C090  F021         	movff	refreshGSM@operatorRSSIX+1,TFT_DrawFillRect@x+1
  3140  000C44  0E00               	movlw	0
  3141  000C46  6E23               	movwf	(TFT_DrawFillRect@y+1)^0,c
  3142  000C48  0E05               	movlw	5
  3143  000C4A  6E22               	movwf	TFT_DrawFillRect@y^0,c
  3144  000C4C  0E00               	movlw	0
  3145  000C4E  6E25               	movwf	(TFT_DrawFillRect@w+1)^0,c
  3146  000C50  0E02               	movlw	2
  3147  000C52  6E24               	movwf	TFT_DrawFillRect@w^0,c
  3148  000C54  0E00               	movlw	0
  3149  000C56  6E27               	movwf	(TFT_DrawFillRect@h+1)^0,c
  3150  000C58  0E0A               	movlw	10
  3151  000C5A  6E26               	movwf	TFT_DrawFillRect@h^0,c
  3152  000C5C  0E08               	movlw	8
  3153  000C5E  6E29               	movwf	(TFT_DrawFillRect@color+1)^0,c
  3154  000C60  0E21               	movlw	33
  3155  000C62  6E28               	movwf	TFT_DrawFillRect@color^0,c
  3156  000C64  ECCD  F011         	call	_TFT_DrawFillRect	;wreg free
  3157  000C68                     
  3158                           ;main.c: 119: TFT_DrawLine(operatorRSSIX, 14, (operatorRSSIX + 2), 14, 0xFFFF);
  3159  000C68  C08F  F017         	movff	refreshGSM@operatorRSSIX,TFT_DrawLine@x0
  3160  000C6C  C090  F018         	movff	refreshGSM@operatorRSSIX+1,TFT_DrawLine@x0+1
  3161  000C70  0E00               	movlw	0
  3162  000C72  6E1A               	movwf	(TFT_DrawLine@y0+1)^0,c
  3163  000C74  0E0E               	movlw	14
  3164  000C76  6E19               	movwf	TFT_DrawLine@y0^0,c
  3165  000C78  0E02               	movlw	2
  3166  000C7A  0100               	movlb	0	; () banked
  3167  000C7C  258F               	addwf	refreshGSM@operatorRSSIX& (0+255),w,b
  3168  000C7E  6E1B               	movwf	TFT_DrawLine@x1^0,c
  3169  000C80  0E00               	movlw	0
  3170  000C82  2190               	addwfc	(refreshGSM@operatorRSSIX+1)& (0+255),w,b
  3171  000C84  6E1C               	movwf	(TFT_DrawLine@x1+1)^0,c
  3172  000C86  0E00               	movlw	0
  3173  000C88  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  3174  000C8A  0E0E               	movlw	14
  3175  000C8C  6E1D               	movwf	TFT_DrawLine@y1^0,c
  3176  000C8E  0EFF               	movlw	255
  3177  000C90  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  3178  000C92  681F               	setf	TFT_DrawLine@color^0,c
  3179  000C94  EC84  F004         	call	_TFT_DrawLine	;wreg free
  3180  000C98                     l4716:
  3181  000C98  0100               	movlb	0	; () banked
  3182  000C9A  2B91               	incf	refreshGSM@i& (0+255),f,b
  3183  000C9C                     
  3184                           ; BSR set to: 0
  3185  000C9C  0E04               	movlw	4
  3186  000C9E  6591               	cpfsgt	refreshGSM@i& (0+255),b
  3187  000CA0  EF54  F006         	goto	u4041
  3188  000CA4  EF56  F006         	goto	u4040
  3189  000CA8                     u4041:
  3190  000CA8  EFE6  F005         	goto	l4704
  3191  000CAC                     u4040:
  3192  000CAC                     l63:
  3193                           
  3194                           ; BSR set to: 0
  3195  000CAC  0012               	return		;funcret
  3196  000CAE                     __end_of_refreshGSM:
  3197                           	opt callstack 0
  3198                           
  3199 ;; *************** function _A6_NetworkGetRSSILevel *****************
  3200 ;; Defined at:
  3201 ;;		line 168 in file "A6Lib.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;		None
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  RSSI            1   64[COMRAM] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      char 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0
  3216 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3218 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3219 ;;Total ram usage:        1 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    7
  3222 ;; This function calls:
  3223 ;;		_A6_NetworkGetRSSI
  3224 ;; This function is called by:
  3225 ;;		_refreshGSM
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text3
  3230  002418                     __ptext3:
  3231                           	opt callstack 0
  3232  002418                     _A6_NetworkGetRSSILevel:
  3233                           	opt callstack 21
  3234  002418                     
  3235                           ;A6Lib.c: 169: uint8_t RSSI = A6_NetworkGetRSSI();
  3236  002418  ECD7  F00E         	call	_A6_NetworkGetRSSI	;wreg free
  3237  00241C  6E41               	movwf	A6_NetworkGetRSSILevel@RSSI^0,c
  3238  00241E                     
  3239                           ;A6Lib.c: 170: if(RSSI == 99) return -1;
  3240  00241E  0E63               	movlw	99
  3241  002420  1841               	xorwf	A6_NetworkGetRSSILevel@RSSI^0,w,c
  3242  002422  A4D8               	btfss	status,2,c
  3243  002424  EF16  F012         	goto	u3371
  3244  002428  EF18  F012         	goto	u3370
  3245  00242C                     u3371:
  3246  00242C  EF1B  F012         	goto	l4164
  3247  002430                     u3370:
  3248  002430  0EFF               	movlw	255
  3249  002432  EF48  F012         	goto	l614
  3250  002436                     l4164:
  3251                           
  3252                           ;A6Lib.c: 171: if(RSSI < 3) return 0;
  3253  002436  0E03               	movlw	3
  3254  002438  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  3255  00243A  EF21  F012         	goto	u3381
  3256  00243E  EF23  F012         	goto	u3380
  3257  002442                     u3381:
  3258  002442  EF26  F012         	goto	l4170
  3259  002446                     u3380:
  3260  002446  0E00               	movlw	0
  3261  002448  EF48  F012         	goto	l614
  3262  00244C                     l4170:
  3263                           
  3264                           ;A6Lib.c: 172: if(RSSI < 10) return 1;
  3265  00244C  0E0A               	movlw	10
  3266  00244E  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  3267  002450  EF2C  F012         	goto	u3391
  3268  002454  EF2E  F012         	goto	u3390
  3269  002458                     u3391:
  3270  002458  EF31  F012         	goto	l4176
  3271  00245C                     u3390:
  3272  00245C  0E01               	movlw	1
  3273  00245E  EF48  F012         	goto	l614
  3274  002462                     l4176:
  3275                           
  3276                           ;A6Lib.c: 173: if(RSSI < 15) return 2;
  3277  002462  0E0F               	movlw	15
  3278  002464  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  3279  002466  EF37  F012         	goto	u3401
  3280  00246A  EF39  F012         	goto	u3400
  3281  00246E                     u3401:
  3282  00246E  EF3C  F012         	goto	l4182
  3283  002472                     u3400:
  3284  002472  0E02               	movlw	2
  3285  002474  EF48  F012         	goto	l614
  3286  002478                     l4182:
  3287                           
  3288                           ;A6Lib.c: 174: if(RSSI < 20) return 3;
  3289  002478  0E14               	movlw	20
  3290  00247A  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  3291  00247C  EF42  F012         	goto	u3411
  3292  002480  EF44  F012         	goto	u3410
  3293  002484                     u3411:
  3294  002484  EF47  F012         	goto	l4188
  3295  002488                     u3410:
  3296  002488  0E03               	movlw	3
  3297  00248A  EF48  F012         	goto	l614
  3298  00248E                     l4188:
  3299                           
  3300                           ;A6Lib.c: 175: return 4;
  3301  00248E  0E04               	movlw	4
  3302  002490                     l614:
  3303  002490  0012               	return		;funcret
  3304  002492                     __end_of_A6_NetworkGetRSSILevel:
  3305                           	opt callstack 0
  3306                           
  3307 ;; *************** function _A6_NetworkGetRSSI *****************
  3308 ;; Defined at:
  3309 ;;		line 151 in file "A6Lib.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;		None
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  response       32   30[COMRAM] unsigned char [32]
  3314 ;;  RSSIToken       2   62[COMRAM] PTR unsigned char 
  3315 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  3316 ;;		 -> refreshGSM@operator(32), 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      unsigned char 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0
  3327 ;;      Locals:        34       0       0       0       0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3329 ;;      Totals:        34       0       0       0       0       0       0       0       0
  3330 ;;Total ram usage:       34 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    6
  3333 ;; This function calls:
  3334 ;;		_A6_Command
  3335 ;;		_atoi
  3336 ;;		_strstr
  3337 ;;		_strtok
  3338 ;; This function is called by:
  3339 ;;		_A6_NetworkGetRSSILevel
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text4
  3344  001DAE                     __ptext4:
  3345                           	opt callstack 0
  3346  001DAE                     _A6_NetworkGetRSSI:
  3347                           	opt callstack 21
  3348  001DAE                     
  3349                           ;A6Lib.c: 152: char *RSSIToken;;A6Lib.c: 153: char response[32];;A6Lib.c: 155: A6_Comman
      +                          d("AT+CSQ\r", 0, response, 32);
  3350  001DAE  0EC8               	movlw	low STR_20
  3351  001DB0  6E18               	movwf	A6_Command@command^0,c
  3352  001DB2  0E5F               	movlw	high STR_20
  3353  001DB4  6E19               	movwf	(A6_Command@command+1)^0,c
  3354  001DB6  0E00               	movlw	0
  3355  001DB8  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3356  001DBA  0E00               	movlw	0
  3357  001DBC  6E1A               	movwf	A6_Command@timeout^0,c
  3358  001DBE  0E1F               	movlw	low A6_NetworkGetRSSI@response
  3359  001DC0  6E1C               	movwf	A6_Command@response^0,c
  3360  001DC2  0E00               	movlw	high A6_NetworkGetRSSI@response
  3361  001DC4  6E1D               	movwf	(A6_Command@response+1)^0,c
  3362  001DC6  0E20               	movlw	32
  3363  001DC8  6E1E               	movwf	A6_Command@responseLen^0,c
  3364  001DCA  EC07  F011         	call	_A6_Command	;wreg free
  3365  001DCE                     
  3366                           ;A6Lib.c: 156: if(strstr(response, "+CSQ: ") != (0)) {
  3367  001DCE  0E1F               	movlw	low A6_NetworkGetRSSI@response
  3368  001DD0  6E10               	movwf	strstr@s1^0,c
  3369  001DD2  0E00               	movlw	high A6_NetworkGetRSSI@response
  3370  001DD4  6E11               	movwf	(strstr@s1+1)^0,c
  3371  001DD6  0EE0               	movlw	low STR_21
  3372  001DD8  6E12               	movwf	strstr@s2^0,c
  3373  001DDA  0E5F               	movlw	high STR_21
  3374  001DDC  6E13               	movwf	(strstr@s2+1)^0,c
  3375  001DDE  EC38  F00F         	call	_strstr	;wreg free
  3376  001DE2  5010               	movf	?_strstr^0,w,c
  3377  001DE4  1011               	iorwf	(?_strstr+1)^0,w,c
  3378  001DE6  B4D8               	btfsc	status,2,c
  3379  001DE8  EFF8  F00E         	goto	u3311
  3380  001DEC  EFFA  F00E         	goto	u3310
  3381  001DF0                     u3311:
  3382  001DF0  EF36  F00F         	goto	l4132
  3383  001DF4                     u3310:
  3384  001DF4                     
  3385                           ;A6Lib.c: 157: RSSIToken = strtok(response, " ");
  3386  001DF4  0E1F               	movlw	low A6_NetworkGetRSSI@response
  3387  001DF6  6E12               	movwf	strtok@s1^0,c
  3388  001DF8  0E00               	movlw	high A6_NetworkGetRSSI@response
  3389  001DFA  6E13               	movwf	(strtok@s1+1)^0,c
  3390  001DFC  0ED6               	movlw	low (STR_15+6)
  3391  001DFE  6E14               	movwf	strtok@s2^0,c
  3392  001E00  0E5F               	movlw	high (STR_15+6)
  3393  001E02  6E15               	movwf	(strtok@s2+1)^0,c
  3394  001E04  EC50  F00C         	call	_strtok	;wreg free
  3395  001E08  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  3396  001E0C  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  3397                           
  3398                           ;A6Lib.c: 158: RSSIToken = strtok((0), " ");
  3399  001E10  0E00               	movlw	0
  3400  001E12  6E12               	movwf	strtok@s1^0,c
  3401  001E14  0E00               	movlw	0
  3402  001E16  6E13               	movwf	(strtok@s1+1)^0,c
  3403  001E18  0ED6               	movlw	low (STR_15+6)
  3404  001E1A  6E14               	movwf	strtok@s2^0,c
  3405  001E1C  0E5F               	movlw	high (STR_15+6)
  3406  001E1E  6E15               	movwf	(strtok@s2+1)^0,c
  3407  001E20  EC50  F00C         	call	_strtok	;wreg free
  3408  001E24  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  3409  001E28  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  3410  001E2C                     
  3411                           ;A6Lib.c: 159: if(RSSIToken != (0)) {
  3412  001E2C  503F               	movf	A6_NetworkGetRSSI@RSSIToken^0,w,c
  3413  001E2E  1040               	iorwf	(A6_NetworkGetRSSI@RSSIToken+1)^0,w,c
  3414  001E30  B4D8               	btfsc	status,2,c
  3415  001E32  EF1D  F00F         	goto	u3321
  3416  001E36  EF1F  F00F         	goto	u3320
  3417  001E3A                     u3321:
  3418  001E3A  EF36  F00F         	goto	l4132
  3419  001E3E                     u3320:
  3420  001E3E                     
  3421                           ;A6Lib.c: 160: RSSIToken = strtok(RSSIToken, ",");
  3422  001E3E  C03F  F012         	movff	A6_NetworkGetRSSI@RSSIToken,strtok@s1
  3423  001E42  C040  F013         	movff	A6_NetworkGetRSSI@RSSIToken+1,strtok@s1+1
  3424  001E46  0EFB               	movlw	low STR_18
  3425  001E48  6E14               	movwf	strtok@s2^0,c
  3426  001E4A  0E5F               	movlw	high STR_18
  3427  001E4C  6E15               	movwf	(strtok@s2+1)^0,c
  3428  001E4E  EC50  F00C         	call	_strtok	;wreg free
  3429  001E52  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  3430  001E56  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  3431  001E5A                     
  3432                           ;A6Lib.c: 161: return atoi(RSSIToken);
  3433  001E5A  C03F  F00F         	movff	A6_NetworkGetRSSI@RSSIToken,atoi@s
  3434  001E5E  C040  F010         	movff	A6_NetworkGetRSSI@RSSIToken+1,atoi@s+1
  3435  001E62  EC59  F00A         	call	_atoi	;wreg free
  3436  001E66  500F               	movf	?_atoi^0,w,c
  3437  001E68  EF37  F00F         	goto	l610
  3438  001E6C                     l4132:
  3439                           
  3440                           ;A6Lib.c: 162: };A6Lib.c: 163: };A6Lib.c: 165: return 0;
  3441  001E6C  0E00               	movlw	0
  3442  001E6E                     l610:
  3443  001E6E  0012               	return		;funcret
  3444  001E70                     __end_of_A6_NetworkGetRSSI:
  3445                           	opt callstack 0
  3446                           
  3447 ;; *************** function _atoi *****************
  3448 ;; Defined at:
  3449 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atoi.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3452 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  3453 ;;		 -> refreshGSM@operator(32), 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  a               2   19[COMRAM] int 
  3456 ;;  sign            1   18[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  2   14[COMRAM] int 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3466 ;;      Params:         2       0       0       0       0       0       0       0       0
  3467 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3468 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3469 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3470 ;;Total ram usage:        7 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    3
  3473 ;; This function calls:
  3474 ;;		___wmul
  3475 ;;		_isdigit
  3476 ;; This function is called by:
  3477 ;;		_A6_NetworkGetRSSI
  3478 ;;		_A6_NetworkGetStatus
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482                           	psect	text5
  3483  0014B2                     __ptext5:
  3484                           	opt callstack 0
  3485  0014B2                     _atoi:
  3486                           	opt callstack 23
  3487  0014B2  EF5D  F00A         	goto	l3756
  3488  0014B6                     l3754:
  3489  0014B6  4A0F               	infsnz	atoi@s^0,f,c
  3490  0014B8  2A10               	incf	(atoi@s+1)^0,f,c
  3491  0014BA                     l3756:
  3492  0014BA  C00F  FFD9         	movff	atoi@s,fsr2l
  3493  0014BE  C010  FFDA         	movff	atoi@s+1,fsr2h
  3494  0014C2  0E20               	movlw	32
  3495  0014C4  18DE               	xorwf	postinc2,w,c
  3496  0014C6  B4D8               	btfsc	status,2,c
  3497  0014C8  EF68  F00A         	goto	u2771
  3498  0014CC  EF6A  F00A         	goto	u2770
  3499  0014D0                     u2771:
  3500  0014D0  EF5B  F00A         	goto	l3754
  3501  0014D4                     u2770:
  3502  0014D4  C00F  FFD9         	movff	atoi@s,fsr2l
  3503  0014D8  C010  FFDA         	movff	atoi@s+1,fsr2h
  3504  0014DC  0E09               	movlw	9
  3505  0014DE  18DE               	xorwf	postinc2,w,c
  3506  0014E0  B4D8               	btfsc	status,2,c
  3507  0014E2  EF75  F00A         	goto	u2781
  3508  0014E6  EF77  F00A         	goto	u2780
  3509  0014EA                     u2781:
  3510  0014EA  EF5B  F00A         	goto	l3754
  3511  0014EE                     u2780:
  3512  0014EE  0E00               	movlw	0
  3513  0014F0  6E15               	movwf	(atoi@a+1)^0,c
  3514  0014F2  0E00               	movlw	0
  3515  0014F4  6E14               	movwf	atoi@a^0,c
  3516  0014F6  0E00               	movlw	0
  3517  0014F8  6E13               	movwf	atoi@sign^0,c
  3518  0014FA  C00F  FFD9         	movff	atoi@s,fsr2l
  3519  0014FE  C010  FFDA         	movff	atoi@s+1,fsr2h
  3520  001502  0E2D               	movlw	45
  3521  001504  18DE               	xorwf	postinc2,w,c
  3522  001506  A4D8               	btfss	status,2,c
  3523  001508  EF88  F00A         	goto	u2791
  3524  00150C  EF8A  F00A         	goto	u2790
  3525  001510                     u2791:
  3526  001510  EF8F  F00A         	goto	l3766
  3527  001514                     u2790:
  3528  001514  2A13               	incf	atoi@sign^0,f,c
  3529  001516  4A0F               	infsnz	atoi@s^0,f,c
  3530  001518  2A10               	incf	(atoi@s+1)^0,f,c
  3531  00151A  EFBC  F00A         	goto	l3774
  3532  00151E                     l3766:
  3533  00151E  C00F  FFD9         	movff	atoi@s,fsr2l
  3534  001522  C010  FFDA         	movff	atoi@s+1,fsr2h
  3535  001526  0E2B               	movlw	43
  3536  001528  18DE               	xorwf	postinc2,w,c
  3537  00152A  A4D8               	btfss	status,2,c
  3538  00152C  EF9A  F00A         	goto	u2801
  3539  001530  EF9C  F00A         	goto	u2800
  3540  001534                     u2801:
  3541  001534  EFBC  F00A         	goto	l3774
  3542  001538                     u2800:
  3543  001538                     l3768:
  3544  001538  4A0F               	infsnz	atoi@s^0,f,c
  3545  00153A  2A10               	incf	(atoi@s+1)^0,f,c
  3546  00153C  EFBC  F00A         	goto	l3774
  3547  001540                     l3770:
  3548  001540  C014  F009         	movff	atoi@a,___wmul@multiplier
  3549  001544  C015  F00A         	movff	atoi@a+1,___wmul@multiplier+1
  3550  001548  0E00               	movlw	0
  3551  00154A  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  3552  00154C  0E0A               	movlw	10
  3553  00154E  6E0B               	movwf	___wmul@multiplicand^0,c
  3554  001550  EC9A  F017         	call	___wmul	;wreg free
  3555  001554  C00F  FFD9         	movff	atoi@s,fsr2l
  3556  001558  C010  FFDA         	movff	atoi@s+1,fsr2h
  3557  00155C  50DF               	movf	indf2,w,c
  3558  00155E  6E11               	movwf	??_atoi^0,c
  3559  001560  5011               	movf	??_atoi^0,w,c
  3560  001562  2609               	addwf	?___wmul^0,f,c
  3561  001564  0E00               	movlw	0
  3562  001566  220A               	addwfc	(?___wmul+1)^0,f,c
  3563  001568  0ED0               	movlw	208
  3564  00156A  2409               	addwf	?___wmul^0,w,c
  3565  00156C  6E14               	movwf	atoi@a^0,c
  3566  00156E  0EFF               	movlw	255
  3567  001570  200A               	addwfc	(?___wmul+1)^0,w,c
  3568  001572  6E15               	movwf	(atoi@a+1)^0,c
  3569  001574  EF9C  F00A         	goto	l3768
  3570  001578                     l3774:
  3571  001578  C00F  FFD9         	movff	atoi@s,fsr2l
  3572  00157C  C010  FFDA         	movff	atoi@s+1,fsr2h
  3573  001580  50DF               	movf	indf2,w,c
  3574  001582  EC55  F017         	call	_isdigit
  3575  001586  B0D8               	btfsc	status,0,c
  3576  001588  EFC8  F00A         	goto	u2811
  3577  00158C  EFCA  F00A         	goto	u2810
  3578  001590                     u2811:
  3579  001590  EFA0  F00A         	goto	l3770
  3580  001594                     u2810:
  3581  001594  5013               	movf	atoi@sign^0,w,c
  3582  001596  B4D8               	btfsc	status,2,c
  3583  001598  EFD0  F00A         	goto	u2821
  3584  00159C  EFD2  F00A         	goto	u2820
  3585  0015A0                     u2821:
  3586  0015A0  EFE0  F00A         	goto	l1432
  3587  0015A4                     u2820:
  3588  0015A4  C014  F011         	movff	atoi@a,??_atoi
  3589  0015A8  C015  F012         	movff	atoi@a+1,??_atoi+1
  3590  0015AC  1E11               	comf	??_atoi^0,f,c
  3591  0015AE  1E12               	comf	(??_atoi+1)^0,f,c
  3592  0015B0  4A11               	infsnz	??_atoi^0,f,c
  3593  0015B2  2A12               	incf	(??_atoi+1)^0,f,c
  3594  0015B4  C011  F00F         	movff	??_atoi,?_atoi
  3595  0015B8  C012  F010         	movff	??_atoi+1,?_atoi+1
  3596  0015BC  EFE4  F00A         	goto	l1433
  3597  0015C0                     l1432:
  3598  0015C0  C014  F00F         	movff	atoi@a,?_atoi
  3599  0015C4  C015  F010         	movff	atoi@a+1,?_atoi+1
  3600  0015C8                     l1433:
  3601  0015C8  0012               	return		;funcret
  3602  0015CA                     __end_of_atoi:
  3603                           	opt callstack 0
  3604                           
  3605 ;; *************** function _A6_NetworkGetOperator *****************
  3606 ;; Defined at:
  3607 ;;		line 178 in file "A6Lib.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  operator        2   30[COMRAM] PTR unsigned char 
  3610 ;;		 -> refreshGSM@operator(32), 
  3611 ;;  operatorLen     1   32[COMRAM] unsigned char 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  operatorToke    2   34[COMRAM] PTR unsigned char 
  3614 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  3615 ;;		 -> refreshGSM@operator(32), 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3625 ;;      Params:         3       0       0       0       0       0       0       0       0
  3626 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3627 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3628 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3629 ;;Total ram usage:        6 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    6
  3632 ;; This function calls:
  3633 ;;		_A6_Command
  3634 ;;		_strcpy
  3635 ;;		_strstr
  3636 ;;		_strtok
  3637 ;; This function is called by:
  3638 ;;		_refreshGSM
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text6
  3643  00111A                     __ptext6:
  3644                           	opt callstack 0
  3645  00111A                     _A6_NetworkGetOperator:
  3646                           	opt callstack 22
  3647  00111A                     
  3648                           ;A6Lib.c: 179: char *operatorToken;;A6Lib.c: 181: A6_Command("AT+COPS?\r", 0, operator, 
      +                          32);
  3649  00111A  0EB5               	movlw	low STR_25
  3650  00111C  6E18               	movwf	A6_Command@command^0,c
  3651  00111E  0E5F               	movlw	high STR_25
  3652  001120  6E19               	movwf	(A6_Command@command+1)^0,c
  3653  001122  0E00               	movlw	0
  3654  001124  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3655  001126  0E00               	movlw	0
  3656  001128  6E1A               	movwf	A6_Command@timeout^0,c
  3657  00112A  C01F  F01C         	movff	A6_NetworkGetOperator@operator,A6_Command@response
  3658  00112E  C020  F01D         	movff	A6_NetworkGetOperator@operator+1,A6_Command@response+1
  3659  001132  0E20               	movlw	32
  3660  001134  6E1E               	movwf	A6_Command@responseLen^0,c
  3661  001136  EC07  F011         	call	_A6_Command	;wreg free
  3662  00113A                     
  3663                           ;A6Lib.c: 182: if(strstr(operator, "+COPS: ") != (0)) {
  3664  00113A  C01F  F010         	movff	A6_NetworkGetOperator@operator,strstr@s1
  3665  00113E  C020  F011         	movff	A6_NetworkGetOperator@operator+1,strstr@s1+1
  3666  001142  0ED8               	movlw	low STR_26
  3667  001144  6E12               	movwf	strstr@s2^0,c
  3668  001146  0E5F               	movlw	high STR_26
  3669  001148  6E13               	movwf	(strstr@s2+1)^0,c
  3670  00114A  EC38  F00F         	call	_strstr	;wreg free
  3671  00114E  5010               	movf	?_strstr^0,w,c
  3672  001150  1011               	iorwf	(?_strstr+1)^0,w,c
  3673  001152  B4D8               	btfsc	status,2,c
  3674  001154  EFAE  F008         	goto	u3351
  3675  001158  EFB0  F008         	goto	u3350
  3676  00115C                     u3351:
  3677  00115C  EF1F  F009         	goto	l4154
  3678  001160                     u3350:
  3679  001160                     
  3680                           ;A6Lib.c: 183: operatorToken = strtok(operator, " ");
  3681  001160  C01F  F012         	movff	A6_NetworkGetOperator@operator,strtok@s1
  3682  001164  C020  F013         	movff	A6_NetworkGetOperator@operator+1,strtok@s1+1
  3683  001168  0ED6               	movlw	low (STR_15+6)
  3684  00116A  6E14               	movwf	strtok@s2^0,c
  3685  00116C  0E5F               	movlw	high (STR_15+6)
  3686  00116E  6E15               	movwf	(strtok@s2+1)^0,c
  3687  001170  EC50  F00C         	call	_strtok	;wreg free
  3688  001174  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3689  001178  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3690                           
  3691                           ;A6Lib.c: 184: operatorToken = strtok((0), " ");
  3692  00117C  0E00               	movlw	0
  3693  00117E  6E12               	movwf	strtok@s1^0,c
  3694  001180  0E00               	movlw	0
  3695  001182  6E13               	movwf	(strtok@s1+1)^0,c
  3696  001184  0ED6               	movlw	low (STR_15+6)
  3697  001186  6E14               	movwf	strtok@s2^0,c
  3698  001188  0E5F               	movlw	high (STR_15+6)
  3699  00118A  6E15               	movwf	(strtok@s2+1)^0,c
  3700  00118C  EC50  F00C         	call	_strtok	;wreg free
  3701  001190  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3702  001194  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3703                           
  3704                           ;A6Lib.c: 185: operatorToken = strtok(operatorToken, ",");
  3705  001198  C023  F012         	movff	A6_NetworkGetOperator@operatorToken,strtok@s1
  3706  00119C  C024  F013         	movff	A6_NetworkGetOperator@operatorToken+1,strtok@s1+1
  3707  0011A0  0EFB               	movlw	low STR_18
  3708  0011A2  6E14               	movwf	strtok@s2^0,c
  3709  0011A4  0E5F               	movlw	high STR_18
  3710  0011A6  6E15               	movwf	(strtok@s2+1)^0,c
  3711  0011A8  EC50  F00C         	call	_strtok	;wreg free
  3712  0011AC  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3713  0011B0  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3714  0011B4                     
  3715                           ;A6Lib.c: 186: if(operatorToken[0] == '0') {
  3716  0011B4  C023  FFD9         	movff	A6_NetworkGetOperator@operatorToken,fsr2l
  3717  0011B8  C024  FFDA         	movff	A6_NetworkGetOperator@operatorToken+1,fsr2h
  3718  0011BC  0E30               	movlw	48
  3719  0011BE  18DE               	xorwf	postinc2,w,c
  3720  0011C0  A4D8               	btfss	status,2,c
  3721  0011C2  EFE5  F008         	goto	u3361
  3722  0011C6  EFE7  F008         	goto	u3360
  3723  0011CA                     u3361:
  3724  0011CA  EF1F  F009         	goto	l4154
  3725  0011CE                     u3360:
  3726  0011CE                     
  3727                           ;A6Lib.c: 187: operatorToken = strtok((0), ",");
  3728  0011CE  0E00               	movlw	0
  3729  0011D0  6E12               	movwf	strtok@s1^0,c
  3730  0011D2  0E00               	movlw	0
  3731  0011D4  6E13               	movwf	(strtok@s1+1)^0,c
  3732  0011D6  0EFB               	movlw	low STR_18
  3733  0011D8  6E14               	movwf	strtok@s2^0,c
  3734  0011DA  0E5F               	movlw	high STR_18
  3735  0011DC  6E15               	movwf	(strtok@s2+1)^0,c
  3736  0011DE  EC50  F00C         	call	_strtok	;wreg free
  3737  0011E2  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3738  0011E6  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3739                           
  3740                           ;A6Lib.c: 188: operatorToken = strtok((0), ",");
  3741  0011EA  0E00               	movlw	0
  3742  0011EC  6E12               	movwf	strtok@s1^0,c
  3743  0011EE  0E00               	movlw	0
  3744  0011F0  6E13               	movwf	(strtok@s1+1)^0,c
  3745  0011F2  0EFB               	movlw	low STR_18
  3746  0011F4  6E14               	movwf	strtok@s2^0,c
  3747  0011F6  0E5F               	movlw	high STR_18
  3748  0011F8  6E15               	movwf	(strtok@s2+1)^0,c
  3749  0011FA  EC50  F00C         	call	_strtok	;wreg free
  3750  0011FE  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3751  001202  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3752                           
  3753                           ;A6Lib.c: 189: operatorToken = strtok(++operatorToken, "\"");
  3754  001206  4A23               	infsnz	A6_NetworkGetOperator@operatorToken^0,f,c
  3755  001208  2A24               	incf	(A6_NetworkGetOperator@operatorToken+1)^0,f,c
  3756  00120A  C023  F012         	movff	A6_NetworkGetOperator@operatorToken,strtok@s1
  3757  00120E  C024  F013         	movff	A6_NetworkGetOperator@operatorToken+1,strtok@s1+1
  3758  001212  0EF9               	movlw	low STR_32
  3759  001214  6E14               	movwf	strtok@s2^0,c
  3760  001216  0E5F               	movlw	high STR_32
  3761  001218  6E15               	movwf	(strtok@s2+1)^0,c
  3762  00121A  EC50  F00C         	call	_strtok	;wreg free
  3763  00121E  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3764  001222  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3765                           
  3766                           ;A6Lib.c: 190: strcpy(operator, operatorToken);
  3767  001226  C01F  F005         	movff	A6_NetworkGetOperator@operator,strcpy@to
  3768  00122A  C020  F006         	movff	A6_NetworkGetOperator@operator+1,strcpy@to+1
  3769  00122E  C023  F007         	movff	A6_NetworkGetOperator@operatorToken,strcpy@from
  3770  001232  C024  F008         	movff	A6_NetworkGetOperator@operatorToken+1,strcpy@from+1
  3771  001236  ECEE  F014         	call	_strcpy	;wreg free
  3772  00123A  EF29  F009         	goto	l623
  3773  00123E                     l4154:
  3774                           
  3775                           ;A6Lib.c: 192: };A6Lib.c: 193: };A6Lib.c: 194: strcpy(operator, "-");
  3776  00123E  C01F  F005         	movff	A6_NetworkGetOperator@operator,strcpy@to
  3777  001242  C020  F006         	movff	A6_NetworkGetOperator@operator+1,strcpy@to+1
  3778  001246  0EFD               	movlw	low STR_33
  3779  001248  6E07               	movwf	strcpy@from^0,c
  3780  00124A  0E5F               	movlw	high STR_33
  3781  00124C  6E08               	movwf	(strcpy@from+1)^0,c
  3782  00124E  ECEE  F014         	call	_strcpy	;wreg free
  3783  001252                     l623:
  3784  001252  0012               	return		;funcret
  3785  001254                     __end_of_A6_NetworkGetOperator:
  3786                           	opt callstack 0
  3787                           
  3788 ;; *************** function _strcpy *****************
  3789 ;; Defined at:
  3790 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcpy.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  to              2    4[COMRAM] PTR unsigned char 
  3793 ;;		 -> refreshGSM@operator(32), 
  3794 ;;  from            2    6[COMRAM] PTR const unsigned char 
  3795 ;;		 -> STR_33(2), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), 
  3796 ;;		 -> NULL(0), refreshGSM@operator(32), 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  cp              2    8[COMRAM] PTR unsigned char 
  3799 ;;		 -> refreshGSM@operator(32), 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  2    4[COMRAM] PTR unsigned char 
  3802 ;; Registers used:
  3803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3809 ;;      Params:         4       0       0       0       0       0       0       0       0
  3810 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3812 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3813 ;;Total ram usage:        6 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    2
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_A6_NetworkGetOperator
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text7
  3824  0029DC                     __ptext7:
  3825                           	opt callstack 0
  3826  0029DC                     _strcpy:
  3827                           	opt callstack 25
  3828  0029DC  C005  F009         	movff	strcpy@to,strcpy@cp
  3829  0029E0  C006  F00A         	movff	strcpy@to+1,strcpy@cp+1
  3830  0029E4  EFF8  F014         	goto	l4140
  3831  0029E8                     l4138:
  3832  0029E8  4A09               	infsnz	strcpy@cp^0,f,c
  3833  0029EA  2A0A               	incf	(strcpy@cp+1)^0,f,c
  3834  0029EC  4A07               	infsnz	strcpy@from^0,f,c
  3835  0029EE  2A08               	incf	(strcpy@from+1)^0,f,c
  3836  0029F0                     l4140:
  3837  0029F0  C007  FFF6         	movff	strcpy@from,tblptrl
  3838  0029F4  C008  FFF7         	movff	strcpy@from+1,tblptrh
  3839  0029F8  6AF8               	clrf	tblptru,c
  3840  0029FA  C009  FFD9         	movff	strcpy@cp,fsr2l
  3841  0029FE  C00A  FFDA         	movff	strcpy@cp+1,fsr2h
  3842  002A02  0E07               	movlw	(high __ramtop+-1)
  3843  002A04  64F7               	cpfsgt	tblptrh,c
  3844  002A06  D003               	bra	u3337
  3845  002A08  0008               	tblrd		*
  3846  002A0A  50F5               	movf	tablat,w,c
  3847  002A0C  D005               	bra	u3330
  3848  002A0E                     u3337:
  3849  002A0E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3850  002A12  CFF7 FFE2          	movff	tblptrh,fsr1h
  3851  002A16  50E7               	movf	indf1,w,c
  3852  002A18                     u3330:
  3853  002A18  6EDF               	movwf	indf2,c
  3854  002A1A  50DF               	movf	indf2,w,c
  3855  002A1C  A4D8               	btfss	status,2,c
  3856  002A1E  EF13  F015         	goto	u3341
  3857  002A22  EF15  F015         	goto	u3340
  3858  002A26                     u3341:
  3859  002A26  EFF4  F014         	goto	l4138
  3860  002A2A                     u3340:
  3861  002A2A  0012               	return		;funcret
  3862  002A2C                     __end_of_strcpy:
  3863                           	opt callstack 0
  3864                           
  3865 ;; *************** function _Ecg_Process *****************
  3866 ;; Defined at:
  3867 ;;		line 23 in file "ecg.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;		None
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  1    wreg      void 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3881 ;;      Params:         0       0       0       0       0       0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3884 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3885 ;;Total ram usage:        0 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; Hardware stack levels required when called:   10
  3888 ;; This function calls:
  3889 ;;		_Ecg_ProcessEcg
  3890 ;;		_Ecg_ProcessHeartRate
  3891 ;;		_Ecg_ProcessInterrupt
  3892 ;; This function is called by:
  3893 ;;		_loop
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text8
  3898  002988                     __ptext8:
  3899                           	opt callstack 0
  3900  002988                     _Ecg_Process:
  3901                           	opt callstack 19
  3902  002988                     
  3903                           ;ecg.c: 24: if(ECG_FLAGS.processInterrupt) {
  3904  002988  0100               	movlb	0	; () banked
  3905  00298A  A9BC               	btfss	_ECG_FLAGS& (0+255),4,b
  3906  00298C  EFCA  F014         	goto	u3971
  3907  002990  EFCC  F014         	goto	u3970
  3908  002994                     u3971:
  3909  002994  EFD0  F014         	goto	l4666
  3910  002998                     u3970:
  3911  002998                     
  3912                           ; BSR set to: 0
  3913                           ;ecg.c: 25: Ecg_ProcessInterrupt();
  3914  002998  EC20  F017         	call	_Ecg_ProcessInterrupt	;wreg free
  3915  00299C                     
  3916                           ;ecg.c: 26: ECG_FLAGS.processInterrupt = 0;
  3917  00299C  0100               	movlb	0	; () banked
  3918  00299E  99BC               	bcf	_ECG_FLAGS& (0+255),4,b
  3919  0029A0                     l4666:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;ecg.c: 27: };ecg.c: 29: if(ECG_FLAGS.processEcg) {
  3923  0029A0  ABBC               	btfss	_ECG_FLAGS& (0+255),5,b
  3924  0029A2  EFD5  F014         	goto	u3981
  3925  0029A6  EFD7  F014         	goto	u3980
  3926  0029AA                     u3981:
  3927  0029AA  EFDB  F014         	goto	l4672
  3928  0029AE                     u3980:
  3929  0029AE                     
  3930                           ; BSR set to: 0
  3931                           ;ecg.c: 30: Ecg_ProcessEcg();
  3932  0029AE  EC66  F015         	call	_Ecg_ProcessEcg	;wreg free
  3933  0029B2                     
  3934                           ;ecg.c: 31: ECG_FLAGS.processEcg = 0;
  3935  0029B2  0100               	movlb	0	; () banked
  3936  0029B4  9BBC               	bcf	_ECG_FLAGS& (0+255),5,b
  3937  0029B6                     l4672:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;ecg.c: 32: };ecg.c: 34: if(ECG_FLAGS.processHeartRate && ECG_FLAGS.leadsOk) {
  3941  0029B6  A7BC               	btfss	_ECG_FLAGS& (0+255),3,b
  3942  0029B8  EFE0  F014         	goto	u3991
  3943  0029BC  EFE2  F014         	goto	u3990
  3944  0029C0                     u3991:
  3945  0029C0  EFED  F014         	goto	l428
  3946  0029C4                     u3990:
  3947  0029C4                     
  3948                           ; BSR set to: 0
  3949  0029C4  A3BC               	btfss	_ECG_FLAGS& (0+255),1,b
  3950  0029C6  EFE7  F014         	goto	u4001
  3951  0029CA  EFE9  F014         	goto	u4000
  3952  0029CE                     u4001:
  3953  0029CE  EFED  F014         	goto	l428
  3954  0029D2                     u4000:
  3955  0029D2                     
  3956                           ; BSR set to: 0
  3957                           ;ecg.c: 35: Ecg_ProcessHeartRate();
  3958  0029D2  ECD6  F007         	call	_Ecg_ProcessHeartRate	;wreg free
  3959  0029D6                     
  3960                           ;ecg.c: 36: ECG_FLAGS.processHeartRate = 0;
  3961  0029D6  0100               	movlb	0	; () banked
  3962  0029D8  97BC               	bcf	_ECG_FLAGS& (0+255),3,b
  3963  0029DA                     l428:
  3964                           
  3965                           ; BSR set to: 0
  3966  0029DA  0012               	return		;funcret
  3967  0029DC                     __end_of_Ecg_Process:
  3968                           	opt callstack 0
  3969                           
  3970 ;; *************** function _Ecg_ProcessInterrupt *****************
  3971 ;; Defined at:
  3972 ;;		line 40 in file "ecg.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3988 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3989 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3990 ;;Total ram usage:        1 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    2
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_Ecg_Process
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text9
  4001  002E40                     __ptext9:
  4002                           	opt callstack 0
  4003  002E40                     _Ecg_ProcessInterrupt:
  4004                           	opt callstack 26
  4005  002E40                     
  4006                           ;ecg.c: 41: if(ECG_FLAGS.msecDelay >= (10 / 5)) {
  4007  002E40  0100               	movlb	0	; () banked
  4008  002E42  51BD               	movf	(_ECG_FLAGS+1)& (0+255),w,b
  4009  002E44  0B07               	andlw	7
  4010  002E46  6E05               	movwf	??_Ecg_ProcessInterrupt^0,c
  4011  002E48  0E01               	movlw	1
  4012  002E4A  6405               	cpfsgt	??_Ecg_ProcessInterrupt^0,c
  4013  002E4C  EF2A  F017         	goto	u3431
  4014  002E50  EF2C  F017         	goto	u3430
  4015  002E54                     u3431:
  4016  002E54  EF2F  F017         	goto	l4202
  4017  002E58                     u3430:
  4018  002E58                     
  4019                           ; BSR set to: 0
  4020                           ;ecg.c: 42: ECG_FLAGS.processEcg = 1;
  4021  002E58  8BBC               	bsf	_ECG_FLAGS& (0+255),5,b
  4022  002E5A                     
  4023                           ; BSR set to: 0
  4024                           ;ecg.c: 43: ECG_FLAGS.msecDelay = 0;
  4025  002E5A  0EF8               	movlw	-8
  4026  002E5C  17BD               	andwf	(_ECG_FLAGS+1)& (0+255),f,b
  4027  002E5E                     l4202:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;ecg.c: 44: };ecg.c: 45: if(ECG_HEARTRATE.msecDelay >= (1200 / 5)) {
  4031  002E5E  0EEF               	movlw	239
  4032  002E60  65AD               	cpfsgt	(_ECG_HEARTRATE+3)& (0+255),b
  4033  002E62  EF35  F017         	goto	u3441
  4034  002E66  EF37  F017         	goto	u3440
  4035  002E6A                     u3441:
  4036  002E6A  EF3A  F017         	goto	l433
  4037  002E6E                     u3440:
  4038  002E6E                     
  4039                           ; BSR set to: 0
  4040                           ;ecg.c: 46: ECG_FLAGS.processHeartRate = 1;
  4041  002E6E  87BC               	bsf	_ECG_FLAGS& (0+255),3,b
  4042  002E70                     
  4043                           ; BSR set to: 0
  4044                           ;ecg.c: 47: ECG_HEARTRATE.msecDelay = 0;
  4045  002E70  0E00               	movlw	0
  4046  002E72  6FAD               	movwf	(_ECG_HEARTRATE+3)& (0+255),b
  4047  002E74                     l433:
  4048                           
  4049                           ; BSR set to: 0
  4050  002E74  0012               	return		;funcret
  4051  002E76                     __end_of_Ecg_ProcessInterrupt:
  4052                           	opt callstack 0
  4053                           
  4054 ;; *************** function _Ecg_ProcessHeartRate *****************
  4055 ;; Defined at:
  4056 ;;		line 75 in file "ecg.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  j               1   39[BANK0 ] unsigned char 
  4061 ;;  i               1   38[BANK0 ] unsigned char 
  4062 ;;  jPrev           1   37[BANK0 ] unsigned char 
  4063 ;;  heartrateStr    5   23[BANK0 ] unsigned char [5]
  4064 ;;  heartbeatAve    4   32[BANK0 ] unsigned long 
  4065 ;;  heartrate       1   36[BANK0 ] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0
  4076 ;;      Locals:         0      17       0       0       0       0       0       0       0
  4077 ;;      Temps:          0      12       0       0       0       0       0       0       0
  4078 ;;      Totals:         0      29       0       0       0       0       0       0       0
  4079 ;;Total ram usage:       29 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    8
  4082 ;; This function calls:
  4083 ;;		_TFT_DrawString
  4084 ;;		___lldiv
  4085 ;;		_sprintf
  4086 ;; This function is called by:
  4087 ;;		_Ecg_Process
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text10
  4092  000FAC                     __ptext10:
  4093                           	opt callstack 0
  4094  000FAC                     _Ecg_ProcessHeartRate:
  4095                           	opt callstack 20
  4096  000FAC                     
  4097                           ;ecg.c: 77: char heartrateString[5];;ecg.c: 78: uint32_t heartbeatAverage = 0;
  4098  000FAC  0E00               	movlw	0
  4099  000FAE  0100               	movlb	0	; () banked
  4100  000FB0  6F80               	movwf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),b
  4101  000FB2  0E00               	movlw	0
  4102  000FB4  6F81               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),b
  4103  000FB6  0E00               	movlw	0
  4104  000FB8  6F82               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),b
  4105  000FBA  0E00               	movlw	0
  4106  000FBC  6F83               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),b
  4107                           
  4108                           ;ecg.c: 80: for(uint8_t i=0, j=ECG_HEARTBEAT.i, jPrev=0; i<(3 - 1); i++) {
  4109  000FBE  0E00               	movlw	0
  4110  000FC0  6F86               	movwf	Ecg_ProcessHeartRate@i& (0+255),b
  4111  000FC2                     
  4112                           ; BSR set to: 0
  4113  000FC2  C0A4  F087         	movff	_ECG_HEARTBEAT+12,Ecg_ProcessHeartRate@j
  4114  000FC6                     l4632:
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;ecg.c: 81: j = (j == 0) ? (3 - 1) : (j - 1);
  4118  000FC6  5187               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4119  000FC8  B4D8               	btfsc	status,2,c
  4120  000FCA  EFE9  F007         	goto	u3941
  4121  000FCE  EFEB  F007         	goto	u3940
  4122  000FD2                     u3941:
  4123  000FD2  EFF3  F007         	goto	l4636
  4124  000FD6                     u3940:
  4125  000FD6                     
  4126                           ; BSR set to: 0
  4127  000FD6  0EFF               	movlw	255
  4128  000FD8  2587               	addwf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4129  000FDA  6F7C               	movwf	_Ecg_ProcessHeartRate$1028& (0+255),b
  4130  000FDC  6B7D               	clrf	(_Ecg_ProcessHeartRate$1028+1)& (0+255),b
  4131  000FDE  0EFF               	movlw	255
  4132  000FE0  237D               	addwfc	(_Ecg_ProcessHeartRate$1028+1)& (0+255),f,b
  4133  000FE2  EFF7  F007         	goto	l4638
  4134  000FE6                     l4636:
  4135                           
  4136                           ; BSR set to: 0
  4137  000FE6  0E00               	movlw	0
  4138  000FE8  6F7D               	movwf	(_Ecg_ProcessHeartRate$1028+1)& (0+255),b
  4139  000FEA  0E02               	movlw	2
  4140  000FEC  6F7C               	movwf	_Ecg_ProcessHeartRate$1028& (0+255),b
  4141  000FEE                     l4638:
  4142                           
  4143                           ; BSR set to: 0
  4144  000FEE  C07C  F087         	movff	_Ecg_ProcessHeartRate$1028,Ecg_ProcessHeartRate@j
  4145                           
  4146                           ;ecg.c: 82: jPrev = (j == 0) ? (3 - 1) : (j - 1);
  4147  000FF2  5187               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4148  000FF4  B4D8               	btfsc	status,2,c
  4149  000FF6  EFFF  F007         	goto	u3951
  4150  000FFA  EF01  F008         	goto	u3950
  4151  000FFE                     u3951:
  4152  000FFE  EF09  F008         	goto	l4642
  4153  001002                     u3950:
  4154  001002                     
  4155                           ; BSR set to: 0
  4156  001002  0EFF               	movlw	255
  4157  001004  2587               	addwf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4158  001006  6F7E               	movwf	_Ecg_ProcessHeartRate$1029& (0+255),b
  4159  001008  6B7F               	clrf	(_Ecg_ProcessHeartRate$1029+1)& (0+255),b
  4160  00100A  0EFF               	movlw	255
  4161  00100C  237F               	addwfc	(_Ecg_ProcessHeartRate$1029+1)& (0+255),f,b
  4162  00100E  EF0D  F008         	goto	l4644
  4163  001012                     l4642:
  4164                           
  4165                           ; BSR set to: 0
  4166  001012  0E00               	movlw	0
  4167  001014  6F7F               	movwf	(_Ecg_ProcessHeartRate$1029+1)& (0+255),b
  4168  001016  0E02               	movlw	2
  4169  001018  6F7E               	movwf	_Ecg_ProcessHeartRate$1029& (0+255),b
  4170  00101A                     l4644:
  4171                           
  4172                           ; BSR set to: 0
  4173  00101A  C07E  F085         	movff	_Ecg_ProcessHeartRate$1029,Ecg_ProcessHeartRate@jPrev
  4174  00101E                     
  4175                           ; BSR set to: 0
  4176                           ;ecg.c: 83: heartbeatAverage += (ECG_HEARTBEAT.data[j] - ECG_HEARTBEAT.data[jPrev]);
  4177  00101E  5185               	movf	Ecg_ProcessHeartRate@jPrev& (0+255),w,b
  4178  001020  0D04               	mullw	4
  4179  001022  0E98               	movlw	low _ECG_HEARTBEAT
  4180  001024  24F3               	addwf	243,w,c
  4181  001026  6ED9               	movwf	fsr2l,c
  4182  001028  0E00               	movlw	high _ECG_HEARTBEAT
  4183  00102A  20F4               	addwfc	prodh,w,c
  4184  00102C  6EDA               	movwf	fsr2h,c
  4185  00102E  CFDE F06B          	movff	postinc2,??_Ecg_ProcessHeartRate
  4186  001032  CFDE F06C          	movff	postinc2,??_Ecg_ProcessHeartRate+1
  4187  001036  CFDE F06D          	movff	postinc2,??_Ecg_ProcessHeartRate+2
  4188  00103A  CFDE F06E          	movff	postinc2,??_Ecg_ProcessHeartRate+3
  4189  00103E  5187               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4190  001040  0D04               	mullw	4
  4191  001042  0E98               	movlw	low _ECG_HEARTBEAT
  4192  001044  24F3               	addwf	243,w,c
  4193  001046  6ED9               	movwf	fsr2l,c
  4194  001048  0E00               	movlw	high _ECG_HEARTBEAT
  4195  00104A  20F4               	addwfc	prodh,w,c
  4196  00104C  6EDA               	movwf	fsr2h,c
  4197  00104E  CFDE F06F          	movff	postinc2,??_Ecg_ProcessHeartRate+4
  4198  001052  CFDE F070          	movff	postinc2,??_Ecg_ProcessHeartRate+5
  4199  001056  CFDE F071          	movff	postinc2,??_Ecg_ProcessHeartRate+6
  4200  00105A  CFDE F072          	movff	postinc2,??_Ecg_ProcessHeartRate+7
  4201  00105E  516B               	movf	??_Ecg_ProcessHeartRate& (0+255),w,b
  4202  001060  5D6F               	subwf	(??_Ecg_ProcessHeartRate+4)& (0+255),w,b
  4203  001062  6F73               	movwf	(??_Ecg_ProcessHeartRate+8)& (0+255),b
  4204  001064  516C               	movf	(??_Ecg_ProcessHeartRate+1)& (0+255),w,b
  4205  001066  5970               	subwfb	(??_Ecg_ProcessHeartRate+5)& (0+255),w,b
  4206  001068  6F74               	movwf	(??_Ecg_ProcessHeartRate+9)& (0+255),b
  4207  00106A  516D               	movf	(??_Ecg_ProcessHeartRate+2)& (0+255),w,b
  4208  00106C  5971               	subwfb	(??_Ecg_ProcessHeartRate+6)& (0+255),w,b
  4209  00106E  6F75               	movwf	(??_Ecg_ProcessHeartRate+10)& (0+255),b
  4210  001070  516E               	movf	(??_Ecg_ProcessHeartRate+3)& (0+255),w,b
  4211  001072  5972               	subwfb	(??_Ecg_ProcessHeartRate+7)& (0+255),w,b
  4212  001074  6F76               	movwf	(??_Ecg_ProcessHeartRate+11)& (0+255),b
  4213  001076  5173               	movf	(??_Ecg_ProcessHeartRate+8)& (0+255),w,b
  4214  001078  2780               	addwf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),f,b
  4215  00107A  5174               	movf	(??_Ecg_ProcessHeartRate+9)& (0+255),w,b
  4216  00107C  2381               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),f,b
  4217  00107E  5175               	movf	(??_Ecg_ProcessHeartRate+10)& (0+255),w,b
  4218  001080  2382               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),f,b
  4219  001082  5176               	movf	(??_Ecg_ProcessHeartRate+11)& (0+255),w,b
  4220  001084  2383               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),f,b
  4221  001086                     
  4222                           ; BSR set to: 0
  4223  001086  2B86               	incf	Ecg_ProcessHeartRate@i& (0+255),f,b
  4224  001088                     
  4225                           ; BSR set to: 0
  4226  001088  0E01               	movlw	1
  4227  00108A  6586               	cpfsgt	Ecg_ProcessHeartRate@i& (0+255),b
  4228  00108C  EF4A  F008         	goto	u3961
  4229  001090  EF4C  F008         	goto	u3960
  4230  001094                     u3961:
  4231  001094  EFE3  F007         	goto	l4632
  4232  001098                     u3960:
  4233  001098                     
  4234                           ; BSR set to: 0
  4235                           ;ecg.c: 84: };ecg.c: 85: heartbeatAverage /= (3 - 1);
  4236  001098  90D8               	bcf	status,0,c
  4237  00109A  3383               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),f,b
  4238  00109C  3382               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),f,b
  4239  00109E  3381               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),f,b
  4240  0010A0  3380               	rrcf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),f,b
  4241  0010A2                     
  4242                           ; BSR set to: 0
  4243                           ;ecg.c: 86: heartrate = (uint8_t)(60000 / heartbeatAverage);
  4244  0010A2  0E60               	movlw	96
  4245  0010A4  6E05               	movwf	___lldiv@dividend^0,c
  4246  0010A6  0EEA               	movlw	234
  4247  0010A8  6E06               	movwf	(___lldiv@dividend+1)^0,c
  4248  0010AA  0E00               	movlw	0
  4249  0010AC  6E07               	movwf	(___lldiv@dividend+2)^0,c
  4250  0010AE  0E00               	movlw	0
  4251  0010B0  6E08               	movwf	(___lldiv@dividend+3)^0,c
  4252  0010B2  C080  F009         	movff	Ecg_ProcessHeartRate@heartbeatAverage,___lldiv@divisor
  4253  0010B6  C081  F00A         	movff	Ecg_ProcessHeartRate@heartbeatAverage+1,___lldiv@divisor+1
  4254  0010BA  C082  F00B         	movff	Ecg_ProcessHeartRate@heartbeatAverage+2,___lldiv@divisor+2
  4255  0010BE  C083  F00C         	movff	Ecg_ProcessHeartRate@heartbeatAverage+3,___lldiv@divisor+3
  4256  0010C2  EC97  F00F         	call	___lldiv	;wreg free
  4257  0010C6  5005               	movf	?___lldiv^0,w,c
  4258  0010C8  0100               	movlb	0	; () banked
  4259  0010CA  6F84               	movwf	Ecg_ProcessHeartRate@heartrate& (0+255),b
  4260  0010CC                     
  4261                           ; BSR set to: 0
  4262                           ;ecg.c: 87: sprintf(heartrateString, "%3d", heartrate);
  4263  0010CC  0E77               	movlw	low Ecg_ProcessHeartRate@heartrateString
  4264  0010CE  6E1B               	movwf	sprintf@sp^0,c
  4265  0010D0  0E00               	movlw	high Ecg_ProcessHeartRate@heartrateString
  4266  0010D2  6E1C               	movwf	(sprintf@sp+1)^0,c
  4267  0010D4  0EF2               	movlw	low STR_1
  4268  0010D6  6E1D               	movwf	sprintf@f^0,c
  4269  0010D8  0E5F               	movlw	high STR_1
  4270  0010DA  6E1E               	movwf	(sprintf@f+1)^0,c
  4271  0010DC  C084  F01F         	movff	Ecg_ProcessHeartRate@heartrate,?_sprintf+4
  4272  0010E0  6A20               	clrf	(?_sprintf+5)^0,c
  4273  0010E2  EC09  F000         	call	_sprintf	;wreg free
  4274  0010E6                     
  4275                           ;ecg.c: 88: TFT_DrawString(135, 10, heartrateString, 0x07E0, 0x0821, 2);
  4276  0010E6  0E00               	movlw	0
  4277  0010E8  0100               	movlb	0	; () banked
  4278  0010EA  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  4279  0010EC  0E87               	movlw	135
  4280  0010EE  6F60               	movwf	TFT_DrawString@x& (0+255),b
  4281  0010F0  0E00               	movlw	0
  4282  0010F2  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  4283  0010F4  0E0A               	movlw	10
  4284  0010F6  6F62               	movwf	TFT_DrawString@y& (0+255),b
  4285  0010F8  0E77               	movlw	low Ecg_ProcessHeartRate@heartrateString
  4286  0010FA  6F64               	movwf	TFT_DrawString@str& (0+255),b
  4287  0010FC  0E00               	movlw	high Ecg_ProcessHeartRate@heartrateString
  4288  0010FE  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  4289  001100  0E07               	movlw	7
  4290  001102  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  4291  001104  0EE0               	movlw	224
  4292  001106  6F66               	movwf	TFT_DrawString@color& (0+255),b
  4293  001108  0E08               	movlw	8
  4294  00110A  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  4295  00110C  0E21               	movlw	33
  4296  00110E  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  4297  001110  0E02               	movlw	2
  4298  001112  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  4299  001114  EC36  F010         	call	_TFT_DrawString	;wreg free
  4300  001118  0012               	return		;funcret
  4301  00111A                     __end_of_Ecg_ProcessHeartRate:
  4302                           	opt callstack 0
  4303                           
  4304 ;; *************** function _Ecg_ProcessEcg *****************
  4305 ;; Defined at:
  4306 ;;		line 51 in file "ecg.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      void 
  4313 ;; Registers used:
  4314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4320 ;;      Params:         0       0       0       0       0       0       0       0       0
  4321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4323 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4324 ;;Total ram usage:        0 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    9
  4327 ;; This function calls:
  4328 ;;		_Ecg_Background_Leads_Failure
  4329 ;;		_Ecg_Background_Leads_Ok
  4330 ;;		_Ecg_CheckLeads
  4331 ;;		_Ecg_Draw
  4332 ;;		_Ecg_ProcessHeartbeat
  4333 ;; This function is called by:
  4334 ;;		_Ecg_Process
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text11
  4339  002ACC                     __ptext11:
  4340                           	opt callstack 0
  4341  002ACC                     _Ecg_ProcessEcg:
  4342                           	opt callstack 19
  4343  002ACC                     
  4344                           ;ecg.c: 52: Ecg_CheckLeads();
  4345  002ACC  EC16  F015         	call	_Ecg_CheckLeads	;wreg free
  4346  002AD0                     
  4347                           ;ecg.c: 54: if(ECG_FLAGS.leadsOk) {
  4348  002AD0  0100               	movlb	0	; () banked
  4349  002AD2  A3BC               	btfss	_ECG_FLAGS& (0+255),1,b
  4350  002AD4  EF6E  F015         	goto	u3911
  4351  002AD8  EF70  F015         	goto	u3910
  4352  002ADC                     u3911:
  4353  002ADC  EF81  F015         	goto	l436
  4354  002AE0                     u3910:
  4355  002AE0                     
  4356                           ; BSR set to: 0
  4357                           ;ecg.c: 56: if(ECG_FLAGS.leadsOkFlag == 0) {
  4358  002AE0  B5BC               	btfsc	_ECG_FLAGS& (0+255),2,b
  4359  002AE2  EF75  F015         	goto	u3921
  4360  002AE6  EF77  F015         	goto	u3920
  4361  002AEA                     u3921:
  4362  002AEA  EF7B  F015         	goto	l4616
  4363  002AEE                     u3920:
  4364  002AEE                     
  4365                           ; BSR set to: 0
  4366                           ;ecg.c: 57: Ecg_Background_Leads_Ok();
  4367  002AEE  ECE9  F00F         	call	_Ecg_Background_Leads_Ok	;wreg free
  4368  002AF2                     
  4369                           ;ecg.c: 58: ECG_FLAGS.leadsOkFlag = 1;
  4370  002AF2  0100               	movlb	0	; () banked
  4371  002AF4  85BC               	bsf	_ECG_FLAGS& (0+255),2,b
  4372  002AF6                     l4616:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;ecg.c: 59: };ecg.c: 62: Ecg_Draw();
  4376  002AF6  ECDD  F00B         	call	_Ecg_Draw	;wreg free
  4377  002AFA                     
  4378                           ;ecg.c: 65: Ecg_ProcessHeartbeat();
  4379  002AFA  EC18  F007         	call	_Ecg_ProcessHeartbeat	;wreg free
  4380                           
  4381                           ;ecg.c: 66: } else {
  4382  002AFE  EF8C  F015         	goto	l440
  4383  002B02                     l436:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;ecg.c: 68: if(ECG_FLAGS.leadsOkFlag == 1) {
  4387  002B02  A5BC               	btfss	_ECG_FLAGS& (0+255),2,b
  4388  002B04  EF86  F015         	goto	u3931
  4389  002B08  EF88  F015         	goto	u3930
  4390  002B0C                     u3931:
  4391  002B0C  EF8C  F015         	goto	l440
  4392  002B10                     u3930:
  4393  002B10                     
  4394                           ; BSR set to: 0
  4395                           ;ecg.c: 69: Ecg_Background_Leads_Failure();
  4396  002B10  EC8E  F016         	call	_Ecg_Background_Leads_Failure	;wreg free
  4397  002B14                     
  4398                           ;ecg.c: 70: ECG_FLAGS.leadsOkFlag = 0;
  4399  002B14  0100               	movlb	0	; () banked
  4400  002B16  95BC               	bcf	_ECG_FLAGS& (0+255),2,b
  4401  002B18                     l440:
  4402  002B18  0012               	return		;funcret
  4403  002B1A                     __end_of_Ecg_ProcessEcg:
  4404                           	opt callstack 0
  4405                           
  4406 ;; *************** function _Ecg_ProcessHeartbeat *****************
  4407 ;; Defined at:
  4408 ;;		line 91 in file "ecg.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  delta           2   53[COMRAM] int 
  4413 ;;  i               1   55[COMRAM] unsigned char 
  4414 ;;  ecgDeltaDiff    2   51[COMRAM] int 
  4415 ;;  ecgDeltaAbsS    2   49[COMRAM] int 
  4416 ;;  ecgDeltaSum     2   47[COMRAM] int 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4426 ;;      Params:         0       0       0       0       0       0       0       0       0
  4427 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4428 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4429 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4430 ;;Total ram usage:       11 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    6
  4433 ;; This function calls:
  4434 ;;		_TFT_DrawBitmap
  4435 ;;		_TFT_DrawFillRect
  4436 ;;		_abs
  4437 ;; This function is called by:
  4438 ;;		_Ecg_ProcessEcg
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text12
  4443  000E30                     __ptext12:
  4444                           	opt callstack 0
  4445  000E30                     _Ecg_ProcessHeartbeat:
  4446                           	opt callstack 21
  4447  000E30                     
  4448                           ;ecg.c: 92: if(ECG_HEARTRATE.processHeartbeat == 1) {
  4449  000E30  0100               	movlb	0	; () banked
  4450  000E32  ADAA               	btfss	_ECG_HEARTRATE& (0+255),6,b
  4451  000E34  EF1E  F007         	goto	u2991
  4452  000E38  EF20  F007         	goto	u2990
  4453  000E3C                     u2991:
  4454  000E3C  EFA3  F007         	goto	l456
  4455  000E40                     u2990:
  4456  000E40                     
  4457                           ; BSR set to: 0
  4458                           ;ecg.c: 94: int16_t ecgDeltaSum=0, ecgDeltaAbsSum=0, ecgDeltaDiff=0;
  4459  000E40  0E00               	movlw	0
  4460  000E42  6E31               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,c
  4461  000E44  0E00               	movlw	0
  4462  000E46  6E30               	movwf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,c
  4463  000E48  0E00               	movlw	0
  4464  000E4A  6E33               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,c
  4465  000E4C  0E00               	movlw	0
  4466  000E4E  6E32               	movwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,c
  4467                           
  4468                           ;ecg.c: 95: for(uint8_t i=1; i<4; i++) {
  4469  000E50  0E01               	movlw	1
  4470  000E52  6E38               	movwf	Ecg_ProcessHeartbeat@i^0,c
  4471  000E54                     l3914:
  4472                           
  4473                           ;ecg.c: 96: int16_t delta = ECG_BUFFER.data[i] - ECG_BUFFER.data[i - 1];
  4474  000E54  0EA5               	movlw	low _ECG_BUFFER
  4475  000E56  2438               	addwf	Ecg_ProcessHeartbeat@i^0,w,c
  4476  000E58  6ED9               	movwf	fsr2l,c
  4477  000E5A  6ADA               	clrf	fsr2h,c
  4478  000E5C  0E00               	movlw	high _ECG_BUFFER
  4479  000E5E  22DA               	addwfc	fsr2h,f,c
  4480  000E60  50DF               	movf	indf2,w,c
  4481  000E62  6E2E               	movwf	??_Ecg_ProcessHeartbeat^0,c
  4482  000E64  0EA4               	movlw	low (_ECG_BUFFER+65535)
  4483  000E66  2438               	addwf	Ecg_ProcessHeartbeat@i^0,w,c
  4484  000E68  6ED9               	movwf	fsr2l,c
  4485  000E6A  6ADA               	clrf	fsr2h,c
  4486  000E6C  0E00               	movlw	high (_ECG_BUFFER+65535)
  4487  000E6E  22DA               	addwfc	fsr2h,f,c
  4488  000E70  50DF               	movf	indf2,w,c
  4489  000E72  6E2F               	movwf	(??_Ecg_ProcessHeartbeat+1)^0,c
  4490  000E74  502F               	movf	(??_Ecg_ProcessHeartbeat+1)^0,w,c
  4491  000E76  5C2E               	subwf	??_Ecg_ProcessHeartbeat^0,w,c
  4492  000E78  6E36               	movwf	Ecg_ProcessHeartbeat@delta^0,c
  4493  000E7A  6A37               	clrf	(Ecg_ProcessHeartbeat@delta+1)^0,c
  4494  000E7C  A0D8               	btfss	status,0,c
  4495  000E7E  0637               	decf	(Ecg_ProcessHeartbeat@delta+1)^0,f,c
  4496  000E80                     
  4497                           ;ecg.c: 97: ecgDeltaSum += delta;
  4498  000E80  5036               	movf	Ecg_ProcessHeartbeat@delta^0,w,c
  4499  000E82  2630               	addwf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,f,c
  4500  000E84  5037               	movf	(Ecg_ProcessHeartbeat@delta+1)^0,w,c
  4501  000E86  2231               	addwfc	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,f,c
  4502  000E88                     
  4503                           ;ecg.c: 98: ecgDeltaAbsSum += abs(delta);
  4504  000E88  C036  F005         	movff	Ecg_ProcessHeartbeat@delta,abs@a
  4505  000E8C  C037  F006         	movff	Ecg_ProcessHeartbeat@delta+1,abs@a+1
  4506  000E90  EC3B  F017         	call	_abs	;wreg free
  4507  000E94  5005               	movf	?_abs^0,w,c
  4508  000E96  2632               	addwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,f,c
  4509  000E98  5006               	movf	(?_abs+1)^0,w,c
  4510  000E9A  2233               	addwfc	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,f,c
  4511  000E9C  2A38               	incf	Ecg_ProcessHeartbeat@i^0,f,c
  4512  000E9E  0E03               	movlw	3
  4513  000EA0  6438               	cpfsgt	Ecg_ProcessHeartbeat@i^0,c
  4514  000EA2  EF55  F007         	goto	u3001
  4515  000EA6  EF57  F007         	goto	u3000
  4516  000EAA                     u3001:
  4517  000EAA  EF2A  F007         	goto	l3914
  4518  000EAE                     u3000:
  4519  000EAE                     
  4520                           ;ecg.c: 99: };ecg.c: 100: ecgDeltaDiff = ecgDeltaAbsSum - ecgDeltaSum;
  4521  000EAE  5030               	movf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,w,c
  4522  000EB0  5C32               	subwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,w,c
  4523  000EB2  6E34               	movwf	Ecg_ProcessHeartbeat@ecgDeltaDiff^0,c
  4524  000EB4  5031               	movf	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,w,c
  4525  000EB6  5833               	subwfb	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,w,c
  4526  000EB8  6E35               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,c
  4527                           
  4528                           ;ecg.c: 103: if(ecgDeltaDiff > 60) {
  4529  000EBA  BE35               	btfsc	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,7,c
  4530  000EBC  EF69  F007         	goto	u3011
  4531  000EC0  5035               	movf	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,w,c
  4532  000EC2  E109               	bnz	u3010
  4533  000EC4  0E3D               	movlw	61
  4534  000EC6  5C34               	subwf	Ecg_ProcessHeartbeat@ecgDeltaDiff^0,w,c
  4535  000EC8  A0D8               	btfss	status,0,c
  4536  000ECA  EF69  F007         	goto	u3011
  4537  000ECE  EF6B  F007         	goto	u3010
  4538  000ED2                     u3011:
  4539  000ED2  EFD5  F007         	goto	l465
  4540  000ED6                     u3010:
  4541  000ED6                     
  4542                           ;ecg.c: 105: ECG_HEARTBEAT.data[ECG_HEARTBEAT.i++] = MILLISECONDS;
  4543  000ED6  0100               	movlb	0	; () banked
  4544  000ED8  51A4               	movf	(_ECG_HEARTBEAT+12)& (0+255),w,b
  4545  000EDA  0D04               	mullw	4
  4546  000EDC  0E98               	movlw	low _ECG_HEARTBEAT
  4547  000EDE  24F3               	addwf	243,w,c
  4548  000EE0  6ED9               	movwf	fsr2l,c
  4549  000EE2  0E00               	movlw	high _ECG_HEARTBEAT
  4550  000EE4  20F4               	addwfc	prodh,w,c
  4551  000EE6  6EDA               	movwf	fsr2h,c
  4552  000EE8  C0B6  FFDE         	movff	_MILLISECONDS,postinc2
  4553  000EEC  C0B7  FFDE         	movff	_MILLISECONDS+1,postinc2
  4554  000EF0  C0B8  FFDE         	movff	_MILLISECONDS+2,postinc2
  4555  000EF4  C0B9  FFDE         	movff	_MILLISECONDS+3,postinc2
  4556  000EF8                     
  4557                           ; BSR set to: 0
  4558  000EF8  2BA4               	incf	(_ECG_HEARTBEAT+12)& (0+255),f,b
  4559  000EFA                     
  4560                           ; BSR set to: 0
  4561                           ;ecg.c: 106: if(ECG_HEARTBEAT.i == 3) ECG_HEARTBEAT.i = 0;
  4562  000EFA  0E03               	movlw	3
  4563  000EFC  19A4               	xorwf	(_ECG_HEARTBEAT+12)& (0+255),w,b
  4564  000EFE  A4D8               	btfss	status,2,c
  4565  000F00  EF84  F007         	goto	u3021
  4566  000F04  EF86  F007         	goto	u3020
  4567  000F08                     u3021:
  4568  000F08  EF88  F007         	goto	l3934
  4569  000F0C                     u3020:
  4570  000F0C                     
  4571                           ; BSR set to: 0
  4572  000F0C  0E00               	movlw	0
  4573  000F0E  6FA4               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  4574  000F10                     l3934:
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;ecg.c: 109: TFT_DrawBitmap(180, 7, ECG_ICON_HEART, 0xF800);
  4578  000F10  0E00               	movlw	0
  4579  000F12  6E18               	movwf	(TFT_DrawBitmap@x+1)^0,c
  4580  000F14  0EB4               	movlw	180
  4581  000F16  6E17               	movwf	TFT_DrawBitmap@x^0,c
  4582  000F18  0E00               	movlw	0
  4583  000F1A  6E1A               	movwf	(TFT_DrawBitmap@y+1)^0,c
  4584  000F1C  0E07               	movlw	7
  4585  000F1E  6E19               	movwf	TFT_DrawBitmap@y^0,c
  4586  000F20  0E2D               	movlw	low _ECG_ICON_HEART
  4587  000F22  6E1B               	movwf	TFT_DrawBitmap@bitmap^0,c
  4588  000F24  0E5F               	movlw	high _ECG_ICON_HEART
  4589  000F26  6E1C               	movwf	(TFT_DrawBitmap@bitmap+1)^0,c
  4590  000F28  0EF8               	movlw	248
  4591  000F2A  6E1E               	movwf	(TFT_DrawBitmap@color+1)^0,c
  4592  000F2C  0E00               	movlw	0
  4593  000F2E  6E1D               	movwf	TFT_DrawBitmap@color^0,c
  4594  000F30  EC67  F00B         	call	_TFT_DrawBitmap	;wreg free
  4595  000F34                     
  4596                           ;ecg.c: 110: ECG_HEARTRATE.heartIconMsecDelay = 100 / 5;
  4597  000F34  0E14               	movlw	20
  4598  000F36  0100               	movlb	0	; () banked
  4599  000F38  6FAB               	movwf	(_ECG_HEARTRATE+1)& (0+255),b
  4600  000F3A                     
  4601                           ; BSR set to: 0
  4602                           ;ecg.c: 111: ECG_HEARTRATE.heartIconShown = 1;
  4603  000F3A  8FAA               	bsf	_ECG_HEARTRATE& (0+255),7,b
  4604  000F3C                     
  4605                           ; BSR set to: 0
  4606                           ;ecg.c: 114: ECG_HEARTRATE.heartbeatMsecDelay = 250 / 5;
  4607  000F3C  0E32               	movlw	50
  4608  000F3E  6FAC               	movwf	(_ECG_HEARTRATE+2)& (0+255),b
  4609  000F40                     
  4610                           ; BSR set to: 0
  4611                           ;ecg.c: 115: ECG_HEARTRATE.processHeartbeat = 0;
  4612  000F40  9DAA               	bcf	_ECG_HEARTRATE& (0+255),6,b
  4613  000F42  EFD5  F007         	goto	l465
  4614  000F46                     l456:
  4615                           
  4616                           ; BSR set to: 0
  4617                           ;ecg.c: 119: if(ECG_HEARTRATE.heartIconShown == 1) {
  4618  000F46  AFAA               	btfss	_ECG_HEARTRATE& (0+255),7,b
  4619  000F48  EFA8  F007         	goto	u3031
  4620  000F4C  EFAA  F007         	goto	u3030
  4621  000F50                     u3031:
  4622  000F50  EFCB  F007         	goto	l3952
  4623  000F54                     u3030:
  4624  000F54                     
  4625                           ; BSR set to: 0
  4626                           ;ecg.c: 120: ECG_HEARTRATE.heartIconMsecDelay--;
  4627  000F54  07AB               	decf	(_ECG_HEARTRATE+1)& (0+255),f,b
  4628  000F56                     
  4629                           ; BSR set to: 0
  4630                           ;ecg.c: 121: if(ECG_HEARTRATE.heartIconMsecDelay == 0) {
  4631  000F56  51AB               	movf	(_ECG_HEARTRATE+1)& (0+255),w,b
  4632  000F58  A4D8               	btfss	status,2,c
  4633  000F5A  EFB1  F007         	goto	u3041
  4634  000F5E  EFB3  F007         	goto	u3040
  4635  000F62                     u3041:
  4636  000F62  EFCB  F007         	goto	l3952
  4637  000F66                     u3040:
  4638  000F66                     
  4639                           ; BSR set to: 0
  4640                           ;ecg.c: 122: TFT_DrawFillRect(180, 7, 20, 20, 0x0821);
  4641  000F66  0E00               	movlw	0
  4642  000F68  6E21               	movwf	(TFT_DrawFillRect@x+1)^0,c
  4643  000F6A  0EB4               	movlw	180
  4644  000F6C  6E20               	movwf	TFT_DrawFillRect@x^0,c
  4645  000F6E  0E00               	movlw	0
  4646  000F70  6E23               	movwf	(TFT_DrawFillRect@y+1)^0,c
  4647  000F72  0E07               	movlw	7
  4648  000F74  6E22               	movwf	TFT_DrawFillRect@y^0,c
  4649  000F76  0E00               	movlw	0
  4650  000F78  6E25               	movwf	(TFT_DrawFillRect@w+1)^0,c
  4651  000F7A  0E14               	movlw	20
  4652  000F7C  6E24               	movwf	TFT_DrawFillRect@w^0,c
  4653  000F7E  0E00               	movlw	0
  4654  000F80  6E27               	movwf	(TFT_DrawFillRect@h+1)^0,c
  4655  000F82  0E14               	movlw	20
  4656  000F84  6E26               	movwf	TFT_DrawFillRect@h^0,c
  4657  000F86  0E08               	movlw	8
  4658  000F88  6E29               	movwf	(TFT_DrawFillRect@color+1)^0,c
  4659  000F8A  0E21               	movlw	33
  4660  000F8C  6E28               	movwf	TFT_DrawFillRect@color^0,c
  4661  000F8E  ECCD  F011         	call	_TFT_DrawFillRect	;wreg free
  4662  000F92                     
  4663                           ;ecg.c: 123: ECG_HEARTRATE.heartIconShown = 0;
  4664  000F92  0100               	movlb	0	; () banked
  4665  000F94  9FAA               	bcf	_ECG_HEARTRATE& (0+255),7,b
  4666  000F96                     l3952:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;ecg.c: 124: };ecg.c: 125: };ecg.c: 128: ECG_HEARTRATE.heartbeatMsecDelay--;
  4670  000F96  07AC               	decf	(_ECG_HEARTRATE+2)& (0+255),f,b
  4671  000F98                     
  4672                           ; BSR set to: 0
  4673                           ;ecg.c: 129: if(ECG_HEARTRATE.heartbeatMsecDelay == 0) {
  4674  000F98  51AC               	movf	(_ECG_HEARTRATE+2)& (0+255),w,b
  4675  000F9A  A4D8               	btfss	status,2,c
  4676  000F9C  EFD2  F007         	goto	u3051
  4677  000FA0  EFD4  F007         	goto	u3050
  4678  000FA4                     u3051:
  4679  000FA4  EFD5  F007         	goto	l465
  4680  000FA8                     u3050:
  4681  000FA8                     
  4682                           ; BSR set to: 0
  4683                           ;ecg.c: 130: ECG_HEARTRATE.processHeartbeat = 1;
  4684  000FA8  8DAA               	bsf	_ECG_HEARTRATE& (0+255),6,b
  4685  000FAA                     l465:
  4686  000FAA  0012               	return		;funcret
  4687  000FAC                     __end_of_Ecg_ProcessHeartbeat:
  4688                           	opt callstack 0
  4689                           
  4690 ;; *************** function _TFT_DrawBitmap *****************
  4691 ;; Defined at:
  4692 ;;		line 311 in file "TFT.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  x               2   22[COMRAM] unsigned int 
  4695 ;;  y               2   24[COMRAM] unsigned int 
  4696 ;;  bitmap          2   26[COMRAM] PTR const unsigned char 
  4697 ;;		 -> ECG_ICON_HEART(62), 
  4698 ;;  color           2   28[COMRAM] unsigned int 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  i               2   37[COMRAM] unsigned int 
  4701 ;;  j               2   32[COMRAM] unsigned int 
  4702 ;;  byte            1   36[COMRAM] unsigned char 
  4703 ;;  h               1   35[COMRAM] unsigned char 
  4704 ;;  w               1   34[COMRAM] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  1    wreg      void 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4714 ;;      Params:         8       0       0       0       0       0       0       0       0
  4715 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4716 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4717 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4718 ;;Total ram usage:       17 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    4
  4721 ;; This function calls:
  4722 ;;		_TFT_DrawPixel
  4723 ;; This function is called by:
  4724 ;;		_Ecg_ProcessHeartbeat
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text13
  4729  0016CE                     __ptext13:
  4730                           	opt callstack 0
  4731  0016CE                     _TFT_DrawBitmap:
  4732                           	opt callstack 22
  4733  0016CE                     
  4734                           ;TFT.c: 312: uint8_t w = *bitmap++;
  4735  0016CE  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4736  0016D2  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4737  0016D6                     	if	0	;tblptru may be non-zero
  4738  0016D6                     	endif
  4739  0016D6                     	if	0	;tblptru may be non-zero
  4740  0016D6                     	endif
  4741  0016D6  0008               	tblrd		*
  4742  0016D8  CFF5 F023          	movff	tablat,TFT_DrawBitmap@w
  4743  0016DC  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4744  0016DE  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4745  0016E0                     
  4746                           ;TFT.c: 313: uint8_t h = *bitmap++;
  4747  0016E0  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4748  0016E4  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4749  0016E8                     	if	0	;tblptru may be non-zero
  4750  0016E8                     	endif
  4751  0016E8                     	if	0	;tblptru may be non-zero
  4752  0016E8                     	endif
  4753  0016E8  0008               	tblrd		*
  4754  0016EA  CFF5 F024          	movff	tablat,TFT_DrawBitmap@h
  4755  0016EE  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4756  0016F0  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4757  0016F2                     
  4758                           ;TFT.c: 314: uint8_t byte = 0;
  4759  0016F2  0E00               	movlw	0
  4760  0016F4  6E25               	movwf	TFT_DrawBitmap@byte^0,c
  4761  0016F6                     
  4762                           ;TFT.c: 316: for(uint16_t j=0; j<h; j++, y++) {
  4763  0016F6  0E00               	movlw	0
  4764  0016F8  6E22               	movwf	(TFT_DrawBitmap@j+1)^0,c
  4765  0016FA  0E00               	movlw	0
  4766  0016FC  6E21               	movwf	TFT_DrawBitmap@j^0,c
  4767  0016FE  EFCE  F00B         	goto	l3664
  4768  001702                     l3644:
  4769                           
  4770                           ;TFT.c: 317: for(uint16_t i=0; i<w; i++) {
  4771  001702  0E00               	movlw	0
  4772  001704  6E27               	movwf	(TFT_DrawBitmap@i+1)^0,c
  4773  001706  0E00               	movlw	0
  4774  001708  6E26               	movwf	TFT_DrawBitmap@i^0,c
  4775  00170A  EFBC  F00B         	goto	l3660
  4776  00170E                     l3646:
  4777                           
  4778                           ;TFT.c: 318: if(i & 7) {
  4779  00170E  0E07               	movlw	7
  4780  001710  1426               	andwf	TFT_DrawBitmap@i^0,w,c
  4781  001712  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4782  001714  0E00               	movlw	0
  4783  001716  1427               	andwf	(TFT_DrawBitmap@i+1)^0,w,c
  4784  001718  6E20               	movwf	(??_TFT_DrawBitmap+1)^0,c
  4785  00171A  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4786  00171C  1020               	iorwf	(??_TFT_DrawBitmap+1)^0,w,c
  4787  00171E  B4D8               	btfsc	status,2,c
  4788  001720  EF94  F00B         	goto	u2611
  4789  001724  EF96  F00B         	goto	u2610
  4790  001728                     u2611:
  4791  001728  EF9A  F00B         	goto	l3650
  4792  00172C                     u2610:
  4793  00172C                     
  4794                           ;TFT.c: 319: byte >>= 1;
  4795  00172C  90D8               	bcf	status,0,c
  4796  00172E  3225               	rrcf	TFT_DrawBitmap@byte^0,f,c
  4797                           
  4798                           ;TFT.c: 320: } else {
  4799  001730  EFA3  F00B         	goto	l3654
  4800  001734                     l3650:
  4801                           
  4802                           ;TFT.c: 321: byte = *bitmap++;
  4803  001734  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4804  001738  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4805  00173C                     	if	0	;tblptru may be non-zero
  4806  00173C                     	endif
  4807  00173C                     	if	0	;tblptru may be non-zero
  4808  00173C                     	endif
  4809  00173C  0008               	tblrd		*
  4810  00173E  CFF5 F025          	movff	tablat,TFT_DrawBitmap@byte
  4811  001742  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4812  001744  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4813  001746                     l3654:
  4814                           
  4815                           ;TFT.c: 322: };TFT.c: 323: if(byte & 0x01) TFT_DrawPixel((x + i), y, color);
  4816  001746  A025               	btfss	TFT_DrawBitmap@byte^0,0,c
  4817  001748  EFA8  F00B         	goto	u2621
  4818  00174C  EFAA  F00B         	goto	u2620
  4819  001750                     u2621:
  4820  001750  EFBA  F00B         	goto	l3658
  4821  001754                     u2620:
  4822  001754  5026               	movf	TFT_DrawBitmap@i^0,w,c
  4823  001756  2417               	addwf	TFT_DrawBitmap@x^0,w,c
  4824  001758  6E0D               	movwf	TFT_DrawPixel@x^0,c
  4825  00175A  5027               	movf	(TFT_DrawBitmap@i+1)^0,w,c
  4826  00175C  2018               	addwfc	(TFT_DrawBitmap@x+1)^0,w,c
  4827  00175E  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  4828  001760  C019  F00F         	movff	TFT_DrawBitmap@y,TFT_DrawPixel@y
  4829  001764  C01A  F010         	movff	TFT_DrawBitmap@y+1,TFT_DrawPixel@y+1
  4830  001768  C01D  F011         	movff	TFT_DrawBitmap@color,TFT_DrawPixel@color
  4831  00176C  C01E  F012         	movff	TFT_DrawBitmap@color+1,TFT_DrawPixel@color+1
  4832  001770  EC30  F00D         	call	_TFT_DrawPixel	;wreg free
  4833  001774                     l3658:
  4834  001774  4A26               	infsnz	TFT_DrawBitmap@i^0,f,c
  4835  001776  2A27               	incf	(TFT_DrawBitmap@i+1)^0,f,c
  4836  001778                     l3660:
  4837  001778  5023               	movf	TFT_DrawBitmap@w^0,w,c
  4838  00177A  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4839  00177C  6A20               	clrf	(??_TFT_DrawBitmap+1)^0,c
  4840  00177E  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4841  001780  5C26               	subwf	TFT_DrawBitmap@i^0,w,c
  4842  001782  5020               	movf	(??_TFT_DrawBitmap+1)^0,w,c
  4843  001784  5827               	subwfb	(TFT_DrawBitmap@i+1)^0,w,c
  4844  001786  A0D8               	btfss	status,0,c
  4845  001788  EFC8  F00B         	goto	u2631
  4846  00178C  EFCA  F00B         	goto	u2630
  4847  001790                     u2631:
  4848  001790  EF87  F00B         	goto	l3646
  4849  001794                     u2630:
  4850  001794  4A21               	infsnz	TFT_DrawBitmap@j^0,f,c
  4851  001796  2A22               	incf	(TFT_DrawBitmap@j+1)^0,f,c
  4852  001798  4A19               	infsnz	TFT_DrawBitmap@y^0,f,c
  4853  00179A  2A1A               	incf	(TFT_DrawBitmap@y+1)^0,f,c
  4854  00179C                     l3664:
  4855  00179C  5024               	movf	TFT_DrawBitmap@h^0,w,c
  4856  00179E  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4857  0017A0  6A20               	clrf	(??_TFT_DrawBitmap+1)^0,c
  4858  0017A2  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4859  0017A4  5C21               	subwf	TFT_DrawBitmap@j^0,w,c
  4860  0017A6  5020               	movf	(??_TFT_DrawBitmap+1)^0,w,c
  4861  0017A8  5822               	subwfb	(TFT_DrawBitmap@j+1)^0,w,c
  4862  0017AA  A0D8               	btfss	status,0,c
  4863  0017AC  EFDA  F00B         	goto	u2641
  4864  0017B0  EFDC  F00B         	goto	u2640
  4865  0017B4                     u2641:
  4866  0017B4  EF81  F00B         	goto	l3644
  4867  0017B8                     u2640:
  4868  0017B8  0012               	return		;funcret
  4869  0017BA                     __end_of_TFT_DrawBitmap:
  4870                           	opt callstack 0
  4871                           
  4872 ;; *************** function _Ecg_Draw *****************
  4873 ;; Defined at:
  4874 ;;		line 165 in file "ecg.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;  ecg             2   55[COMRAM] unsigned int 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0
  4889 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4891 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4892 ;;Total ram usage:        4 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    6
  4895 ;; This function calls:
  4896 ;;		_Ecg_Read
  4897 ;;		_TFT_DrawFillRect
  4898 ;;		_TFT_DrawLine
  4899 ;;		_TFT_GetHeight
  4900 ;;		_TFT_GetWidth
  4901 ;;		___lwdiv
  4902 ;; This function is called by:
  4903 ;;		_Ecg_ProcessEcg
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text14
  4908  0017BA                     __ptext14:
  4909                           	opt callstack 0
  4910  0017BA                     _Ecg_Draw:
  4911                           	opt callstack 21
  4912  0017BA                     
  4913                           ;ecg.c: 166: uint16_t ecg = Ecg_Read();
  4914  0017BA  EC49  F012         	call	_Ecg_Read	;wreg free
  4915  0017BE  C005  F038         	movff	?_Ecg_Read,Ecg_Draw@ecg
  4916  0017C2  C006  F039         	movff	?_Ecg_Read+1,Ecg_Draw@ecg+1
  4917  0017C6                     
  4918                           ;ecg.c: 167: ecg /= 5;
  4919  0017C6  C038  F005         	movff	Ecg_Draw@ecg,___lwdiv@dividend
  4920  0017CA  C039  F006         	movff	Ecg_Draw@ecg+1,___lwdiv@dividend+1
  4921  0017CE  0E00               	movlw	0
  4922  0017D0  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  4923  0017D2  0E05               	movlw	5
  4924  0017D4  6E07               	movwf	___lwdiv@divisor^0,c
  4925  0017D6  EC85  F012         	call	___lwdiv	;wreg free
  4926  0017DA  C005  F038         	movff	?___lwdiv,Ecg_Draw@ecg
  4927  0017DE  C006  F039         	movff	?___lwdiv+1,Ecg_Draw@ecg+1
  4928  0017E2                     
  4929                           ;ecg.c: 168: Ecg_Y = TFT_GetHeight() - ecg;
  4930  0017E2  ECB4  F015         	call	_TFT_GetHeight	;wreg free
  4931  0017E6  5038               	movf	Ecg_Draw@ecg^0,w,c
  4932  0017E8  5C05               	subwf	?_TFT_GetHeight^0,w,c
  4933  0017EA  0100               	movlb	0	; () banked
  4934  0017EC  6FC0               	movwf	_Ecg_Y& (0+255),b
  4935  0017EE  5039               	movf	(Ecg_Draw@ecg+1)^0,w,c
  4936  0017F0  5806               	subwfb	(?_TFT_GetHeight+1)^0,w,c
  4937  0017F2  6FC1               	movwf	(_Ecg_Y+1)& (0+255),b
  4938  0017F4                     
  4939                           ; BSR set to: 0
  4940                           ;ecg.c: 169: TFT_DrawFillRect(Ecg_X, 33, 20, (TFT_GetHeight() - 33), 0x0821);
  4941  0017F4  ECB4  F015         	call	_TFT_GetHeight	;wreg free
  4942  0017F8  0EDF               	movlw	223
  4943  0017FA  2405               	addwf	?_TFT_GetHeight^0,w,c
  4944  0017FC  6E36               	movwf	_Ecg_Draw$2255^0,c
  4945  0017FE  0EFF               	movlw	255
  4946  001800  2006               	addwfc	(?_TFT_GetHeight+1)^0,w,c
  4947  001802  6E37               	movwf	(_Ecg_Draw$2255+1)^0,c
  4948  001804                     
  4949                           ;ecg.c: 169: TFT_DrawFillRect(Ecg_X, 33, 20, (TFT_GetHeight() - 33), 0x0821);
  4950  001804  C055  F020         	movff	_Ecg_X,TFT_DrawFillRect@x
  4951  001808  C056  F021         	movff	_Ecg_X+1,TFT_DrawFillRect@x+1
  4952  00180C  0E00               	movlw	0
  4953  00180E  6E23               	movwf	(TFT_DrawFillRect@y+1)^0,c
  4954  001810  0E21               	movlw	33
  4955  001812  6E22               	movwf	TFT_DrawFillRect@y^0,c
  4956  001814  0E00               	movlw	0
  4957  001816  6E25               	movwf	(TFT_DrawFillRect@w+1)^0,c
  4958  001818  0E14               	movlw	20
  4959  00181A  6E24               	movwf	TFT_DrawFillRect@w^0,c
  4960  00181C  C036  F026         	movff	_Ecg_Draw$2255,TFT_DrawFillRect@h
  4961  001820  C037  F027         	movff	_Ecg_Draw$2255+1,TFT_DrawFillRect@h+1
  4962  001824  0E08               	movlw	8
  4963  001826  6E29               	movwf	(TFT_DrawFillRect@color+1)^0,c
  4964  001828  0E21               	movlw	33
  4965  00182A  6E28               	movwf	TFT_DrawFillRect@color^0,c
  4966  00182C  ECCD  F011         	call	_TFT_DrawFillRect	;wreg free
  4967  001830                     
  4968                           ;ecg.c: 170: TFT_DrawLine(Ecg_Xold, Ecg_Yold, Ecg_X, Ecg_Y, 0x07E0);
  4969  001830  C0C2  F017         	movff	_Ecg_Xold,TFT_DrawLine@x0
  4970  001834  C0C3  F018         	movff	_Ecg_Xold+1,TFT_DrawLine@x0+1
  4971  001838  C0BE  F019         	movff	_Ecg_Yold,TFT_DrawLine@y0
  4972  00183C  C0BF  F01A         	movff	_Ecg_Yold+1,TFT_DrawLine@y0+1
  4973  001840  C055  F01B         	movff	_Ecg_X,TFT_DrawLine@x1
  4974  001844  C056  F01C         	movff	_Ecg_X+1,TFT_DrawLine@x1+1
  4975  001848  C0C0  F01D         	movff	_Ecg_Y,TFT_DrawLine@y1
  4976  00184C  C0C1  F01E         	movff	_Ecg_Y+1,TFT_DrawLine@y1+1
  4977  001850  0E07               	movlw	7
  4978  001852  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  4979  001854  0EE0               	movlw	224
  4980  001856  6E1F               	movwf	TFT_DrawLine@color^0,c
  4981  001858  EC84  F004         	call	_TFT_DrawLine	;wreg free
  4982  00185C                     
  4983                           ;ecg.c: 171: Ecg_Xold = Ecg_X;
  4984  00185C  C055  F0C2         	movff	_Ecg_X,_Ecg_Xold
  4985  001860  C056  F0C3         	movff	_Ecg_X+1,_Ecg_Xold+1
  4986  001864                     
  4987                           ;ecg.c: 172: Ecg_Yold = Ecg_Y;
  4988  001864  C0C0  F0BE         	movff	_Ecg_Y,_Ecg_Yold
  4989  001868  C0C1  F0BF         	movff	_Ecg_Y+1,_Ecg_Yold+1
  4990  00186C                     
  4991                           ;ecg.c: 173: Ecg_X++;
  4992  00186C  4A55               	infsnz	_Ecg_X^0,f,c
  4993  00186E  2A56               	incf	(_Ecg_X+1)^0,f,c
  4994  001870                     
  4995                           ;ecg.c: 174: if(Ecg_X == TFT_GetWidth()) {
  4996  001870  EC8D  F015         	call	_TFT_GetWidth	;wreg free
  4997  001874  5055               	movf	_Ecg_X^0,w,c
  4998  001876  1805               	xorwf	?_TFT_GetWidth^0,w,c
  4999  001878  E107               	bnz	u2981
  5000  00187A  5056               	movf	(_Ecg_X+1)^0,w,c
  5001  00187C  1806               	xorwf	(?_TFT_GetWidth+1)^0,w,c
  5002  00187E  A4D8               	btfss	status,2,c
  5003  001880  EF44  F00C         	goto	u2981
  5004  001884  EF46  F00C         	goto	u2980
  5005  001888                     u2981:
  5006  001888  EF4F  F00C         	goto	l484
  5007  00188C                     u2980:
  5008  00188C                     
  5009                           ;ecg.c: 175: Ecg_X = 0;
  5010  00188C  0E00               	movlw	0
  5011  00188E  6E56               	movwf	(_Ecg_X+1)^0,c
  5012  001890  0E00               	movlw	0
  5013  001892  6E55               	movwf	_Ecg_X^0,c
  5014                           
  5015                           ;ecg.c: 176: Ecg_Xold = 0;
  5016  001894  0E00               	movlw	0
  5017  001896  0100               	movlb	0	; () banked
  5018  001898  6FC3               	movwf	(_Ecg_Xold+1)& (0+255),b
  5019  00189A  0E00               	movlw	0
  5020  00189C  6FC2               	movwf	_Ecg_Xold& (0+255),b
  5021  00189E                     l484:
  5022  00189E  0012               	return		;funcret
  5023  0018A0                     __end_of_Ecg_Draw:
  5024                           	opt callstack 0
  5025                           
  5026 ;; *************** function ___lwdiv *****************
  5027 ;; Defined at:
  5028 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/lwdiv.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  dividend        2    4[COMRAM] unsigned int 
  5031 ;;  divisor         2    6[COMRAM] unsigned int 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  quotient        2    8[COMRAM] unsigned int 
  5034 ;;  counter         1   10[COMRAM] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  2    4[COMRAM] unsigned int 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5044 ;;      Params:         4       0       0       0       0       0       0       0       0
  5045 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5047 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5048 ;;Total ram usage:        7 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    2
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_Ecg_Draw
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text15
  5059  00250A                     __ptext15:
  5060                           	opt callstack 0
  5061  00250A                     ___lwdiv:
  5062                           	opt callstack 24
  5063  00250A  0E00               	movlw	0
  5064  00250C  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
  5065  00250E  0E00               	movlw	0
  5066  002510  6E09               	movwf	___lwdiv@quotient^0,c
  5067  002512  5007               	movf	___lwdiv@divisor^0,w,c
  5068  002514  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5069  002516  B4D8               	btfsc	status,2,c
  5070  002518  EF90  F012         	goto	u2911
  5071  00251C  EF92  F012         	goto	u2910
  5072  002520                     u2911:
  5073  002520  EFBA  F012         	goto	l1234
  5074  002524                     u2910:
  5075  002524  0E01               	movlw	1
  5076  002526  6E0B               	movwf	___lwdiv@counter^0,c
  5077  002528  EF9A  F012         	goto	l3836
  5078  00252C                     l3834:
  5079  00252C  90D8               	bcf	status,0,c
  5080  00252E  3607               	rlcf	___lwdiv@divisor^0,f,c
  5081  002530  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5082  002532  2A0B               	incf	___lwdiv@counter^0,f,c
  5083  002534                     l3836:
  5084  002534  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
  5085  002536  EF9F  F012         	goto	u2921
  5086  00253A  EFA1  F012         	goto	u2920
  5087  00253E                     u2921:
  5088  00253E  EF96  F012         	goto	l3834
  5089  002542                     u2920:
  5090  002542                     l3838:
  5091  002542  90D8               	bcf	status,0,c
  5092  002544  3609               	rlcf	___lwdiv@quotient^0,f,c
  5093  002546  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5094  002548  5007               	movf	___lwdiv@divisor^0,w,c
  5095  00254A  5C05               	subwf	___lwdiv@dividend^0,w,c
  5096  00254C  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  5097  00254E  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5098  002550  A0D8               	btfss	status,0,c
  5099  002552  EFAD  F012         	goto	u2931
  5100  002556  EFAF  F012         	goto	u2930
  5101  00255A                     u2931:
  5102  00255A  EFB4  F012         	goto	l3846
  5103  00255E                     u2930:
  5104  00255E  5007               	movf	___lwdiv@divisor^0,w,c
  5105  002560  5E05               	subwf	___lwdiv@dividend^0,f,c
  5106  002562  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  5107  002564  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5108  002566  8009               	bsf	___lwdiv@quotient^0,0,c
  5109  002568                     l3846:
  5110  002568  90D8               	bcf	status,0,c
  5111  00256A  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5112  00256C  3207               	rrcf	___lwdiv@divisor^0,f,c
  5113  00256E  2E0B               	decfsz	___lwdiv@counter^0,f,c
  5114  002570  EFA1  F012         	goto	l3838
  5115  002574                     l1234:
  5116  002574  C009  F005         	movff	___lwdiv@quotient,?___lwdiv
  5117  002578  C00A  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5118  00257C  0012               	return		;funcret
  5119  00257E                     __end_of___lwdiv:
  5120                           	opt callstack 0
  5121                           
  5122 ;; *************** function _Ecg_Read *****************
  5123 ;; Defined at:
  5124 ;;		line 149 in file "ecg.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  ecg             2    8[COMRAM] unsigned int 
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  2    4[COMRAM] unsigned int 
  5131 ;; Registers used:
  5132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5138 ;;      Params:         2       0       0       0       0       0       0       0       0
  5139 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5140 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5141 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5142 ;;Total ram usage:        6 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:    2
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_Ecg_Draw
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text16
  5153  002492                     __ptext16:
  5154                           	opt callstack 0
  5155  002492                     _Ecg_Read:
  5156                           	opt callstack 24
  5157  002492                     
  5158                           ;ecg.c: 150: uint16_t ecg;;ecg.c: 151: ADCON0bits.CHS = 0b0000;
  5159  002492  0EC3               	movlw	-61
  5160  002494  16C2               	andwf	194,f,c	;volatile
  5161  002496                     
  5162                           ;ecg.c: 152: ADCON0bits.ADON = 1;
  5163  002496  80C2               	bsf	194,0,c	;volatile
  5164  002498                     
  5165                           ;ecg.c: 153: GO_nDONE = 1;
  5166  002498  82C2               	bsf	4034,1,c	;volatile
  5167  00249A                     l476:
  5168  00249A  B2C2               	btfsc	4034,1,c	;volatile
  5169  00249C  EF52  F012         	goto	u2651
  5170  0024A0  EF54  F012         	goto	u2650
  5171  0024A4                     u2651:
  5172  0024A4  EF4D  F012         	goto	l476
  5173  0024A8                     u2650:
  5174  0024A8                     
  5175                           ;ecg.c: 155: ecg = ADRESH;
  5176  0024A8  CFC4 F009          	movff	4036,Ecg_Read@ecg	;volatile
  5177  0024AC  6A0A               	clrf	(Ecg_Read@ecg+1)^0,c
  5178  0024AE                     
  5179                           ;ecg.c: 156: ecg = ecg << 8;
  5180  0024AE  5009               	movf	Ecg_Read@ecg^0,w,c
  5181  0024B0  6E0A               	movwf	(Ecg_Read@ecg+1)^0,c
  5182  0024B2  6A09               	clrf	Ecg_Read@ecg^0,c
  5183  0024B4                     
  5184                           ;ecg.c: 157: ecg &= 0xFF00;
  5185  0024B4  0E00               	movlw	0
  5186  0024B6  1609               	andwf	Ecg_Read@ecg^0,f,c
  5187  0024B8  0EFF               	movlw	255
  5188  0024BA  160A               	andwf	(Ecg_Read@ecg+1)^0,f,c
  5189  0024BC                     
  5190                           ;ecg.c: 158: ecg |= ADRESL;
  5191  0024BC  50C3               	movf	195,w,c	;volatile
  5192  0024BE  1209               	iorwf	Ecg_Read@ecg^0,f,c
  5193  0024C0                     
  5194                           ;ecg.c: 159: ADCON0bits.ADON = 0;
  5195  0024C0  90C2               	bcf	194,0,c	;volatile
  5196  0024C2                     
  5197                           ;ecg.c: 160: ECG_BUFFER.data[ECG_BUFFER.i++] = (uint8_t)(ecg >> 2);
  5198  0024C2  0EA5               	movlw	low _ECG_BUFFER
  5199  0024C4  0100               	movlb	0	; () banked
  5200  0024C6  25A9               	addwf	(_ECG_BUFFER+4)& (0+255),w,b
  5201  0024C8  6ED9               	movwf	fsr2l,c
  5202  0024CA  6ADA               	clrf	fsr2h,c
  5203  0024CC  0E00               	movlw	high _ECG_BUFFER
  5204  0024CE  22DA               	addwfc	fsr2h,f,c
  5205  0024D0  C009  F007         	movff	Ecg_Read@ecg,??_Ecg_Read
  5206  0024D4  C00A  F008         	movff	Ecg_Read@ecg+1,??_Ecg_Read+1
  5207  0024D8  90D8               	bcf	status,0,c
  5208  0024DA  3208               	rrcf	(??_Ecg_Read+1)^0,f,c
  5209  0024DC  3207               	rrcf	??_Ecg_Read^0,f,c
  5210  0024DE  90D8               	bcf	status,0,c
  5211  0024E0  3208               	rrcf	(??_Ecg_Read+1)^0,f,c
  5212  0024E2  3207               	rrcf	??_Ecg_Read^0,f,c
  5213  0024E4  5007               	movf	??_Ecg_Read^0,w,c
  5214  0024E6  6EDF               	movwf	indf2,c
  5215  0024E8                     
  5216                           ; BSR set to: 0
  5217  0024E8  2BA9               	incf	(_ECG_BUFFER+4)& (0+255),f,b
  5218  0024EA                     
  5219                           ; BSR set to: 0
  5220                           ;ecg.c: 161: if(ECG_BUFFER.i == 4) ECG_BUFFER.i = 0;
  5221  0024EA  0E04               	movlw	4
  5222  0024EC  19A9               	xorwf	(_ECG_BUFFER+4)& (0+255),w,b
  5223  0024EE  A4D8               	btfss	status,2,c
  5224  0024F0  EF7C  F012         	goto	u2661
  5225  0024F4  EF7E  F012         	goto	u2660
  5226  0024F8                     u2661:
  5227  0024F8  EF80  F012         	goto	l3688
  5228  0024FC                     u2660:
  5229  0024FC                     
  5230                           ; BSR set to: 0
  5231  0024FC  0E00               	movlw	0
  5232  0024FE  6FA9               	movwf	(_ECG_BUFFER+4)& (0+255),b
  5233  002500                     l3688:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;ecg.c: 162: return ecg;
  5237  002500  C009  F005         	movff	Ecg_Read@ecg,?_Ecg_Read
  5238  002504  C00A  F006         	movff	Ecg_Read@ecg+1,?_Ecg_Read+1
  5239  002508                     
  5240                           ; BSR set to: 0
  5241  002508  0012               	return		;funcret
  5242  00250A                     __end_of_Ecg_Read:
  5243                           	opt callstack 0
  5244                           
  5245 ;; *************** function _init *****************
  5246 ;; Defined at:
  5247 ;;		line 15 in file "init.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5263 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5264 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5265 ;;Total ram usage:        2 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    2
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_main
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text17
  5276  00257E                     __ptext17:
  5277                           	opt callstack 0
  5278  00257E                     _init:
  5279                           	opt callstack 28
  5280  00257E                     
  5281                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  5282  00257E  9ED3               	bcf	211,7,c	;volatile
  5283  002580                     
  5284                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  5285  002580  0E70               	movlw	112
  5286  002582  12D3               	iorwf	211,f,c	;volatile
  5287                           
  5288                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  5289  002584  0EFC               	movlw	-4
  5290  002586  16D3               	andwf	211,f,c	;volatile
  5291  002588                     
  5292                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  5293  002588  8E9B               	bsf	155,7,c	;volatile
  5294                           
  5295                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  5296  00258A  0EE0               	movlw	-32
  5297  00258C  169B               	andwf	155,f,c	;volatile
  5298  00258E                     
  5299                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  5300  00258E  0E07               	movlw	7
  5301  002590  6E06               	movwf	(??_init+1)^0,c
  5302  002592  0E17               	movlw	23
  5303  002594  6E05               	movwf	??_init^0,c
  5304  002596  0E6A               	movlw	106
  5305  002598                     u4107:
  5306  002598  2EE8               	decfsz	wreg,f,c
  5307  00259A  D7FE               	bra	u4107
  5308  00259C  2E05               	decfsz	??_init^0,f,c
  5309  00259E  D7FC               	bra	u4107
  5310  0025A0  2E06               	decfsz	(??_init+1)^0,f,c
  5311  0025A2  D7FA               	bra	u4107
  5312  0025A4  D000               	nop2	
  5313  0025A6                     
  5314                           ;init.c: 27: UCONbits.USBEN = 0;
  5315  0025A6  966D               	bcf	109,3,c	;volatile
  5316  0025A8                     
  5317                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  5318  0025A8  866F               	bsf	111,3,c	;volatile
  5319  0025AA                     
  5320                           ;init.c: 41: TRISA = 0b00001011;
  5321  0025AA  0E0B               	movlw	11
  5322  0025AC  6E92               	movwf	146,c	;volatile
  5323  0025AE                     
  5324                           ;init.c: 42: LATA = 0x00;
  5325  0025AE  0E00               	movlw	0
  5326  0025B0  6E89               	movwf	137,c	;volatile
  5327  0025B2                     
  5328                           ;init.c: 48: RBPU = 1;
  5329  0025B2  8EF1               	bsf	4081,7,c	;volatile
  5330  0025B4                     
  5331                           ;init.c: 49: TRISB = 0x00;
  5332  0025B4  0E00               	movlw	0
  5333  0025B6  6E93               	movwf	147,c	;volatile
  5334  0025B8                     
  5335                           ;init.c: 50: LATB = 0x00;
  5336  0025B8  0E00               	movlw	0
  5337  0025BA  6E8A               	movwf	138,c	;volatile
  5338  0025BC                     
  5339                           ;init.c: 63: TRISC = 0b11110000;
  5340  0025BC  0EF0               	movlw	240
  5341  0025BE  6E94               	movwf	148,c	;volatile
  5342  0025C0                     
  5343                           ;init.c: 64: LATC = 0x00;
  5344  0025C0  0E00               	movlw	0
  5345  0025C2  6E8B               	movwf	139,c	;volatile
  5346  0025C4                     
  5347                           ;init.c: 67: ADCON0bits.ADON = 0;
  5348  0025C4  90C2               	bcf	194,0,c	;volatile
  5349  0025C6                     
  5350                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  5351  0025C6  0ECF               	movlw	-49
  5352  0025C8  16C1               	andwf	193,f,c	;volatile
  5353  0025CA                     
  5354                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  5355  0025CA  50C1               	movf	193,w,c	;volatile
  5356  0025CC  0BF0               	andlw	-16
  5357  0025CE  090E               	iorlw	14
  5358  0025D0  6EC1               	movwf	193,c	;volatile
  5359  0025D2                     
  5360                           ;init.c: 70: ADCON2bits.ADFM = 1;
  5361  0025D2  8EC0               	bsf	192,7,c	;volatile
  5362  0025D4                     
  5363                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  5364  0025D4  0EC7               	movlw	-57
  5365  0025D6  16C0               	andwf	192,f,c	;volatile
  5366  0025D8                     
  5367                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  5368  0025D8  50C0               	movf	192,w,c	;volatile
  5369  0025DA  0BF8               	andlw	-8
  5370  0025DC  0902               	iorlw	2
  5371  0025DE  6EC0               	movwf	192,c	;volatile
  5372  0025E0                     
  5373                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  5374  0025E0  0ECF               	movlw	-49
  5375  0025E2  16B1               	andwf	177,f,c	;volatile
  5376  0025E4                     
  5377                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  5378  0025E4  92B1               	bcf	177,1,c	;volatile
  5379  0025E6                     
  5380                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  5381  0025E6  80B1               	bsf	177,0,c	;volatile
  5382  0025E8                     
  5383                           ;init.c: 78: TMR3IE = 1;
  5384  0025E8  82A0               	bsf	4000,1,c	;volatile
  5385  0025EA                     
  5386                           ;init.c: 81: PEIE = 1;
  5387  0025EA  8CF2               	bsf	4082,6,c	;volatile
  5388  0025EC                     
  5389                           ;init.c: 82: GIE = 1;
  5390  0025EC  8EF2               	bsf	4082,7,c	;volatile
  5391  0025EE  0012               	return		;funcret
  5392  0025F0                     __end_of_init:
  5393                           	opt callstack 0
  5394                           
  5395 ;; *************** function _TFT_Init *****************
  5396 ;; Defined at:
  5397 ;;		line 46 in file "TFT.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  orientation     1    wreg     unsigned char 
  5400 ;;  color           2   34[COMRAM] unsigned int 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  orientation     1   42[COMRAM] unsigned char 
  5403 ;;  i               2   45[COMRAM] unsigned int 
  5404 ;;  cmd             2   43[COMRAM] unsigned int 
  5405 ;;  initSequence    2   40[COMRAM] unsigned int 
  5406 ;;  data            2   38[COMRAM] unsigned int 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  1    wreg      void 
  5409 ;; Registers used:
  5410 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5416 ;;      Params:         2       0       0       0       0       0       0       0       0
  5417 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5418 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5419 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5420 ;;Total ram usage:       13 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:    6
  5423 ;; This function calls:
  5424 ;;		_TFT_OrientationSet
  5425 ;;		_TFT_Reset
  5426 ;;		_TFT_WriteRegister
  5427 ;; This function is called by:
  5428 ;;		_main
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text18
  5433  001982                     __ptext18:
  5434                           	opt callstack 0
  5435  001982                     _TFT_Init:
  5436                           	opt callstack 24
  5437                           
  5438                           ;incstack = 0
  5439                           ;TFT_Init@orientation stored from wreg
  5440  001982  6E2B               	movwf	TFT_Init@orientation^0,c
  5441  001984                     
  5442                           ;TFT.c: 47: TFT_Reset();
  5443  001984  ECBD  F017         	call	_TFT_Reset	;wreg free
  5444  001988                     
  5445                           ;TFT.c: 48: _delay((unsigned long)((200)*(48000000/4000.0)));
  5446  001988  0E0D               	movlw	13
  5447  00198A  6E26               	movwf	(??_TFT_Init+1)^0,c
  5448  00198C  0E2D               	movlw	45
  5449  00198E  6E25               	movwf	??_TFT_Init^0,c
  5450  001990  0ED8               	movlw	216
  5451  001992                     u4117:
  5452  001992  2EE8               	decfsz	wreg,f,c
  5453  001994  D7FE               	bra	u4117
  5454  001996  2E25               	decfsz	??_TFT_Init^0,f,c
  5455  001998  D7FC               	bra	u4117
  5456  00199A  2E26               	decfsz	(??_TFT_Init+1)^0,f,c
  5457  00199C  D7FA               	bra	u4117
  5458  00199E                     
  5459                           ;TFT.c: 51: uint16_t i=0, cmd, data;
  5460  00199E  0E00               	movlw	0
  5461  0019A0  6E2F               	movwf	(TFT_Init@i+1)^0,c
  5462  0019A2  0E00               	movlw	0
  5463  0019A4  6E2E               	movwf	TFT_Init@i^0,c
  5464  0019A6                     
  5465                           ;TFT.c: 52: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  5466  0019A6  0E00               	movlw	0
  5467  0019A8  6E2A               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  5468  0019AA  0E66               	movlw	102
  5469  0019AC  6E29               	movwf	TFT_Init@initSequenceSize^0,c
  5470                           
  5471                           ;TFT.c: 53: while(i != initSequenceSize) {
  5472  0019AE  EF1C  F00D         	goto	l4446
  5473  0019B2                     l4434:
  5474                           
  5475                           ;TFT.c: 54: cmd = TFT_Init_Sequence[i++];
  5476  0019B2  90D8               	bcf	status,0,c
  5477  0019B4  342E               	rlcf	TFT_Init@i^0,w,c
  5478  0019B6  6EF6               	movwf	tblptrl,c
  5479  0019B8  342F               	rlcf	(TFT_Init@i+1)^0,w,c
  5480  0019BA  6EF7               	movwf	tblptrh,c
  5481  0019BC  0E2D               	movlw	low _TFT_Init_Sequence
  5482  0019BE  26F6               	addwf	tblptrl,f,c
  5483  0019C0  0E5E               	movlw	high _TFT_Init_Sequence
  5484  0019C2  22F7               	addwfc	tblptrh,f,c
  5485  0019C4                     	if	0	;There are less than 3 active tblptr bytes
  5486  0019C4                     	endif
  5487  0019C4  0009               	tblrd		*+
  5488  0019C6  CFF5 F02C          	movff	tablat,TFT_Init@cmd
  5489  0019CA  000A               	tblrd		*-
  5490  0019CC  CFF5 F02D          	movff	tablat,TFT_Init@cmd+1
  5491  0019D0  4A2E               	infsnz	TFT_Init@i^0,f,c
  5492  0019D2  2A2F               	incf	(TFT_Init@i+1)^0,f,c
  5493  0019D4                     
  5494                           ;TFT.c: 55: data = TFT_Init_Sequence[i++];
  5495  0019D4  90D8               	bcf	status,0,c
  5496  0019D6  342E               	rlcf	TFT_Init@i^0,w,c
  5497  0019D8  6EF6               	movwf	tblptrl,c
  5498  0019DA  342F               	rlcf	(TFT_Init@i+1)^0,w,c
  5499  0019DC  6EF7               	movwf	tblptrh,c
  5500  0019DE  0E2D               	movlw	low _TFT_Init_Sequence
  5501  0019E0  26F6               	addwf	tblptrl,f,c
  5502  0019E2  0E5E               	movlw	high _TFT_Init_Sequence
  5503  0019E4  22F7               	addwfc	tblptrh,f,c
  5504  0019E6                     	if	0	;There are less than 3 active tblptr bytes
  5505  0019E6                     	endif
  5506  0019E6  0009               	tblrd		*+
  5507  0019E8  CFF5 F027          	movff	tablat,TFT_Init@data
  5508  0019EC  000A               	tblrd		*-
  5509  0019EE  CFF5 F028          	movff	tablat,TFT_Init@data+1
  5510  0019F2  4A2E               	infsnz	TFT_Init@i^0,f,c
  5511  0019F4  2A2F               	incf	(TFT_Init@i+1)^0,f,c
  5512  0019F6                     
  5513                           ;TFT.c: 56: if(cmd == 0xFFFF) {
  5514  0019F6  282C               	incf	TFT_Init@cmd^0,w,c
  5515  0019F8  E106               	bnz	u3711
  5516  0019FA  282D               	incf	(TFT_Init@cmd+1)^0,w,c
  5517  0019FC  A4D8               	btfss	status,2,c
  5518  0019FE  EF03  F00D         	goto	u3711
  5519  001A02  EF05  F00D         	goto	u3710
  5520  001A06                     u3711:
  5521  001A06  EF12  F00D         	goto	l4444
  5522  001A0A                     u3710:
  5523  001A0A                     
  5524                           ;TFT.c: 57: _delay((unsigned long)((200)*(48000000/4000.0)));
  5525  001A0A  0E0D               	movlw	13
  5526  001A0C  6E26               	movwf	(??_TFT_Init+1)^0,c
  5527  001A0E  0E2D               	movlw	45
  5528  001A10  6E25               	movwf	??_TFT_Init^0,c
  5529  001A12  0ED8               	movlw	216
  5530  001A14                     u4127:
  5531  001A14  2EE8               	decfsz	wreg,f,c
  5532  001A16  D7FE               	bra	u4127
  5533  001A18  2E25               	decfsz	??_TFT_Init^0,f,c
  5534  001A1A  D7FC               	bra	u4127
  5535  001A1C  2E26               	decfsz	(??_TFT_Init+1)^0,f,c
  5536  001A1E  D7FA               	bra	u4127
  5537                           
  5538                           ;TFT.c: 58: } else {
  5539  001A20  EF1C  F00D         	goto	l4446
  5540  001A24                     l4444:
  5541                           
  5542                           ;TFT.c: 59: TFT_WriteRegister(cmd, data);
  5543  001A24  C02C  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  5544  001A28  C02D  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  5545  001A2C  C027  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  5546  001A30  C028  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  5547  001A34  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  5548  001A38                     l4446:
  5549  001A38  5029               	movf	TFT_Init@initSequenceSize^0,w,c
  5550  001A3A  182E               	xorwf	TFT_Init@i^0,w,c
  5551  001A3C  E107               	bnz	u3721
  5552  001A3E  502A               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  5553  001A40  182F               	xorwf	(TFT_Init@i+1)^0,w,c
  5554  001A42  A4D8               	btfss	status,2,c
  5555  001A44  EF26  F00D         	goto	u3721
  5556  001A48  EF28  F00D         	goto	u3720
  5557  001A4C                     u3721:
  5558  001A4C  EFD9  F00C         	goto	l4434
  5559  001A50                     u3720:
  5560  001A50                     
  5561                           ;TFT.c: 60: };TFT.c: 61: };TFT.c: 64: TFT_OrientationSet(orientation, color);
  5562  001A50  C023  F020         	movff	TFT_Init@color,TFT_OrientationSet@color
  5563  001A54  C024  F021         	movff	TFT_Init@color+1,TFT_OrientationSet@color+1
  5564  001A58  502B               	movf	TFT_Init@orientation^0,w,c
  5565  001A5A  EC86  F017         	call	_TFT_OrientationSet
  5566  001A5E  0012               	return		;funcret
  5567  001A60                     __end_of_TFT_Init:
  5568                           	opt callstack 0
  5569                           
  5570 ;; *************** function _TFT_Reset *****************
  5571 ;; Defined at:
  5572 ;;		line 67 in file "TFT.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;		None
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;		None
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      void 
  5579 ;; Registers used:
  5580 ;;		wreg, status,2
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5586 ;;      Params:         0       0       0       0       0       0       0       0       0
  5587 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5588 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5589 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5590 ;;Total ram usage:        1 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    2
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_TFT_Init
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text19
  5601  002F7A                     __ptext19:
  5602                           	opt callstack 0
  5603  002F7A                     _TFT_Reset:
  5604                           	opt callstack 27
  5605  002F7A                     
  5606                           ;TFT.c: 68: TRISB = 0x00;;
  5607  002F7A  0E00               	movlw	0
  5608  002F7C  6E93               	movwf	147,c	;volatile
  5609  002F7E                     
  5610                           ;TFT.c: 69: PORTCbits.RC0 = 1;;
  5611  002F7E  8082               	bsf	130,0,c	;volatile
  5612  002F80                     
  5613                           ;TFT.c: 70: PORTAbits.RA5 = 1;;
  5614  002F80  8A80               	bsf	128,5,c	;volatile
  5615  002F82                     
  5616                           ;TFT.c: 71: PORTAbits.RA4 = 1;;
  5617  002F82  8880               	bsf	128,4,c	;volatile
  5618  002F84                     
  5619                           ;TFT.c: 72: PORTCbits.RC2 = 0;;
  5620  002F84  9482               	bcf	130,2,c	;volatile
  5621  002F86                     
  5622                           ;TFT.c: 73: _delay((unsigned long)((2)*(48000000/4000.0)));
  5623  002F86  0E20               	movlw	32
  5624  002F88  6E05               	movwf	??_TFT_Reset^0,c
  5625  002F8A  0E2A               	movlw	42
  5626  002F8C                     u4137:
  5627  002F8C  2EE8               	decfsz	wreg,f,c
  5628  002F8E  D7FE               	bra	u4137
  5629  002F90  2E05               	decfsz	??_TFT_Reset^0,f,c
  5630  002F92  D7FC               	bra	u4137
  5631  002F94                     
  5632                           ;TFT.c: 74: PORTCbits.RC2 = 1;;
  5633  002F94  8482               	bsf	130,2,c	;volatile
  5634  002F96  0012               	return		;funcret
  5635  002F98                     __end_of_TFT_Reset:
  5636                           	opt callstack 0
  5637                           
  5638 ;; *************** function _TFT_OrientationSet *****************
  5639 ;; Defined at:
  5640 ;;		line 109 in file "TFT.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;  orientation     1    wreg     unsigned char 
  5643 ;;  color           2   31[COMRAM] unsigned int 
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;  orientation     1   33[COMRAM] unsigned char 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      void 
  5648 ;; Registers used:
  5649 ;;		wreg, status,2, status,0, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5655 ;;      Params:         2       0       0       0       0       0       0       0       0
  5656 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5658 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5659 ;;Total ram usage:        3 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; Hardware stack levels required when called:    5
  5662 ;; This function calls:
  5663 ;;		_TFT_FullScreen
  5664 ;; This function is called by:
  5665 ;;		_TFT_Init
  5666 ;;		_TFT_ConsoleInit
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text20
  5671  002F0C                     __ptext20:
  5672                           	opt callstack 0
  5673  002F0C                     _TFT_OrientationSet:
  5674                           	opt callstack 24
  5675                           
  5676                           ;incstack = 0
  5677                           ;TFT_OrientationSet@orientation stored from wreg
  5678  002F0C  6E22               	movwf	TFT_OrientationSet@orientation^0,c
  5679  002F0E                     
  5680                           ;TFT.c: 110: if(orientation > 3) orientation = 0;
  5681  002F0E  0E03               	movlw	3
  5682  002F10  6422               	cpfsgt	TFT_OrientationSet@orientation^0,c
  5683  002F12  EF8D  F017         	goto	u3651
  5684  002F16  EF8F  F017         	goto	u3650
  5685  002F1A                     u3651:
  5686  002F1A  EF91  F017         	goto	l4380
  5687  002F1E                     u3650:
  5688  002F1E  0E00               	movlw	0
  5689  002F20  6E22               	movwf	TFT_OrientationSet@orientation^0,c
  5690  002F22                     l4380:
  5691                           
  5692                           ;TFT.c: 111: TFT_Orientation = orientation;
  5693  002F22  C022  F054         	movff	TFT_OrientationSet@orientation,_TFT_Orientation
  5694  002F26                     
  5695                           ;TFT.c: 112: TFT_FullScreen(color);
  5696  002F26  C020  F01E         	movff	TFT_OrientationSet@color,TFT_FullScreen@color
  5697  002F2A  C021  F01F         	movff	TFT_OrientationSet@color+1,TFT_FullScreen@color+1
  5698  002F2E  EC96  F014         	call	_TFT_FullScreen	;wreg free
  5699  002F32  0012               	return		;funcret
  5700  002F34                     __end_of_TFT_OrientationSet:
  5701                           	opt callstack 0
  5702                           
  5703 ;; *************** function _Ecg_Init *****************
  5704 ;; Defined at:
  5705 ;;		line 12 in file "ecg.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5722 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5723 ;;Total ram usage:        0 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    9
  5726 ;; This function calls:
  5727 ;;		_Ecg_Background_Leads_Failure
  5728 ;;		_Ecg_Background_Leads_Ok
  5729 ;;		_Ecg_CheckLeads
  5730 ;; This function is called by:
  5731 ;;		_main
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text21
  5736  002EDC                     __ptext21:
  5737                           	opt callstack 0
  5738  002EDC                     _Ecg_Init:
  5739                           	opt callstack 21
  5740  002EDC                     
  5741                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  5742  002EDC  EC16  F015         	call	_Ecg_CheckLeads	;wreg free
  5743  002EE0  5005               	movf	?_Ecg_CheckLeads^0,w,c
  5744  002EE2  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  5745  002EE4  A4D8               	btfss	status,2,c
  5746  002EE6  EF77  F017         	goto	u4051
  5747  002EEA  EF79  F017         	goto	u4050
  5748  002EEE                     u4051:
  5749  002EEE  EF7D  F017         	goto	l4724
  5750  002EF2                     u4050:
  5751  002EF2                     
  5752                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  5753  002EF2  ECE9  F00F         	call	_Ecg_Background_Leads_Ok	;wreg free
  5754                           
  5755                           ;ecg.c: 15: } else {
  5756  002EF6  EF7F  F017         	goto	l4726
  5757  002EFA                     l4724:
  5758                           
  5759                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  5760  002EFA  EC8E  F016         	call	_Ecg_Background_Leads_Failure	;wreg free
  5761  002EFE                     l4726:
  5762                           
  5763                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  5764  002EFE  0E00               	movlw	0
  5765  002F00  0100               	movlb	0	; () banked
  5766  002F02  6FA4               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  5767  002F04                     
  5768                           ; BSR set to: 0
  5769                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  5770  002F04  0E00               	movlw	0
  5771  002F06  6FA9               	movwf	(_ECG_BUFFER+4)& (0+255),b
  5772  002F08                     
  5773                           ; BSR set to: 0
  5774                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  5775  002F08  8DAA               	bsf	_ECG_HEARTRATE& (0+255),6,b
  5776  002F0A                     
  5777                           ; BSR set to: 0
  5778  002F0A  0012               	return		;funcret
  5779  002F0C                     __end_of_Ecg_Init:
  5780                           	opt callstack 0
  5781                           
  5782 ;; *************** function _Ecg_CheckLeads *****************
  5783 ;; Defined at:
  5784 ;;		line 141 in file "ecg.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  2    4[COMRAM] unsigned int 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5798 ;;      Params:         2       0       0       0       0       0       0       0       0
  5799 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5800 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5801 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5802 ;;Total ram usage:        4 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    2
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_Ecg_Init
  5809 ;;		_Ecg_ProcessEcg
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text22
  5814  002A2C                     __ptext22:
  5815                           	opt callstack 0
  5816  002A2C                     _Ecg_CheckLeads:
  5817                           	opt callstack 25
  5818  002A2C                     
  5819                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  5820  002A2C  0E00               	movlw	0
  5821  002A2E  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  5822  002A30                     
  5823                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  5824  002A30  AA82               	btfss	130,5,c	;volatile
  5825  002A32  EF1D  F015         	goto	u2941
  5826  002A36  EF1F  F015         	goto	u2940
  5827  002A3A                     u2941:
  5828  002A3A  EF20  F015         	goto	l3856
  5829  002A3E                     u2940:
  5830  002A3E  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  5831  002A40                     l3856:
  5832                           
  5833                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  5834  002A40  A882               	btfss	130,4,c	;volatile
  5835  002A42  EF25  F015         	goto	u2951
  5836  002A46  EF27  F015         	goto	u2950
  5837  002A4A                     u2951:
  5838  002A4A  EF28  F015         	goto	l3860
  5839  002A4E                     u2950:
  5840  002A4E  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  5841  002A50                     l3860:
  5842                           
  5843                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  5844  002A50  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  5845  002A52  B4D8               	btfsc	status,2,c
  5846  002A54  EF2E  F015         	goto	u2961
  5847  002A58  EF32  F015         	goto	u2960
  5848  002A5C                     u2961:
  5849  002A5C  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5850  002A5E  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  5851  002A60  EF33  F015         	goto	u2978
  5852  002A64                     u2960:
  5853  002A64  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5854  002A66                     u2978:
  5855  002A66  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  5856  002A68  0100               	movlb	0	; () banked
  5857  002A6A  51BC               	movf	_ECG_FLAGS& (0+255),w,b
  5858  002A6C  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5859  002A6E  0BFD               	andlw	-3
  5860  002A70  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5861  002A72  6FBC               	movwf	_ECG_FLAGS& (0+255),b
  5862  002A74                     
  5863                           ; BSR set to: 0
  5864                           ;ecg.c: 146: return leadsStatus;
  5865  002A74  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  5866  002A78  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  5867  002A7A                     
  5868                           ; BSR set to: 0
  5869  002A7A  0012               	return		;funcret
  5870  002A7C                     __end_of_Ecg_CheckLeads:
  5871                           	opt callstack 0
  5872                           
  5873 ;; *************** function _Ecg_Background_Leads_Ok *****************
  5874 ;; Defined at:
  5875 ;;		line 180 in file "ecg.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5891 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5892 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5893 ;;Total ram usage:        2 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    8
  5896 ;; This function calls:
  5897 ;;		_TFT_DrawLine
  5898 ;;		_TFT_DrawString
  5899 ;;		_TFT_FullScreen
  5900 ;;		_TFT_GetHeight
  5901 ;;		_TFT_GetWidth
  5902 ;; This function is called by:
  5903 ;;		_Ecg_Init
  5904 ;;		_Ecg_ProcessEcg
  5905 ;; This function uses a non-reentrant model
  5906 ;;
  5907                           
  5908                           	psect	text23
  5909  001FD2                     __ptext23:
  5910                           	opt callstack 0
  5911  001FD2                     _Ecg_Background_Leads_Ok:
  5912                           	opt callstack 19
  5913  001FD2                     
  5914                           ;ecg.c: 181: TFT_FullScreen(0x0821);
  5915  001FD2  0E08               	movlw	8
  5916  001FD4  6E1F               	movwf	(TFT_FullScreen@color+1)^0,c
  5917  001FD6  0E21               	movlw	33
  5918  001FD8  6E1E               	movwf	TFT_FullScreen@color^0,c
  5919  001FDA  EC96  F014         	call	_TFT_FullScreen	;wreg free
  5920  001FDE                     
  5921                           ;ecg.c: 182: TFT_DrawString(8, 10, "Frequenza:", 0xFFFF, 0x0821, 2);
  5922  001FDE  0E00               	movlw	0
  5923  001FE0  0100               	movlb	0	; () banked
  5924  001FE2  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  5925  001FE4  0E08               	movlw	8
  5926  001FE6  6F60               	movwf	TFT_DrawString@x& (0+255),b
  5927  001FE8  0E00               	movlw	0
  5928  001FEA  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  5929  001FEC  0E0A               	movlw	10
  5930  001FEE  6F62               	movwf	TFT_DrawString@y& (0+255),b
  5931  001FF0  0EA0               	movlw	low STR_2
  5932  001FF2  6F64               	movwf	TFT_DrawString@str& (0+255),b
  5933  001FF4  0E5F               	movlw	high STR_2
  5934  001FF6  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  5935  001FF8  0EFF               	movlw	255
  5936  001FFA  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  5937  001FFC  6966               	setf	TFT_DrawString@color& (0+255),b
  5938  001FFE  0E08               	movlw	8
  5939  002000  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  5940  002002  0E21               	movlw	33
  5941  002004  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  5942  002006  0E02               	movlw	2
  5943  002008  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  5944  00200A  EC36  F010         	call	_TFT_DrawString	;wreg free
  5945  00200E                     
  5946                           ;ecg.c: 183: TFT_DrawLine(0, (33 - 1), TFT_GetWidth(), (33 - 1), 0xFFFF);
  5947  00200E  0E00               	movlw	0
  5948  002010  6E18               	movwf	(TFT_DrawLine@x0+1)^0,c
  5949  002012  0E00               	movlw	0
  5950  002014  6E17               	movwf	TFT_DrawLine@x0^0,c
  5951  002016  0E00               	movlw	0
  5952  002018  6E1A               	movwf	(TFT_DrawLine@y0+1)^0,c
  5953  00201A  0E20               	movlw	32
  5954  00201C  6E19               	movwf	TFT_DrawLine@y0^0,c
  5955  00201E  EC8D  F015         	call	_TFT_GetWidth	;wreg free
  5956  002022  C005  F01B         	movff	?_TFT_GetWidth,TFT_DrawLine@x1
  5957  002026  C006  F01C         	movff	?_TFT_GetWidth+1,TFT_DrawLine@x1+1
  5958  00202A  0E00               	movlw	0
  5959  00202C  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  5960  00202E  0E20               	movlw	32
  5961  002030  6E1D               	movwf	TFT_DrawLine@y1^0,c
  5962  002032  0EFF               	movlw	255
  5963  002034  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  5964  002036  681F               	setf	TFT_DrawLine@color^0,c
  5965  002038  EC84  F004         	call	_TFT_DrawLine	;wreg free
  5966  00203C                     
  5967                           ;ecg.c: 184: Ecg_X = 0;
  5968  00203C  0E00               	movlw	0
  5969  00203E  6E56               	movwf	(_Ecg_X+1)^0,c
  5970  002040  0E00               	movlw	0
  5971  002042  6E55               	movwf	_Ecg_X^0,c
  5972  002044                     
  5973                           ;ecg.c: 185: Ecg_Xold = 0;
  5974  002044  0E00               	movlw	0
  5975  002046  0100               	movlb	0	; () banked
  5976  002048  6FC3               	movwf	(_Ecg_Xold+1)& (0+255),b
  5977  00204A  0E00               	movlw	0
  5978  00204C  6FC2               	movwf	_Ecg_Xold& (0+255),b
  5979  00204E                     
  5980                           ; BSR set to: 0
  5981                           ;ecg.c: 186: Ecg_Y = TFT_GetHeight() >> 1;
  5982  00204E  ECB4  F015         	call	_TFT_GetHeight	;wreg free
  5983  002052  90D8               	bcf	status,0,c
  5984  002054  3006               	rrcf	(?_TFT_GetHeight+1)^0,w,c
  5985  002056  6E4D               	movwf	??_Ecg_Background_Leads_Ok^0,c
  5986  002058  3005               	rrcf	?_TFT_GetHeight^0,w,c
  5987  00205A  0100               	movlb	0	; () banked
  5988  00205C  6FC0               	movwf	_Ecg_Y& (0+255),b
  5989  00205E  C04D  F0C1         	movff	??_Ecg_Background_Leads_Ok,_Ecg_Y+1
  5990  002062                     
  5991                           ; BSR set to: 0
  5992                           ;ecg.c: 187: Ecg_Yold = Ecg_Y;
  5993  002062  C0C0  F0BE         	movff	_Ecg_Y,_Ecg_Yold
  5994  002066  C0C1  F0BF         	movff	_Ecg_Y+1,_Ecg_Yold+1
  5995  00206A                     
  5996                           ; BSR set to: 0
  5997  00206A  0012               	return		;funcret
  5998  00206C                     __end_of_Ecg_Background_Leads_Ok:
  5999                           	opt callstack 0
  6000                           
  6001 ;; *************** function _Ecg_Background_Leads_Failure *****************
  6002 ;; Defined at:
  6003 ;;		line 190 in file "ecg.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;		None
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;		None
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  1    wreg      void 
  6010 ;; Registers used:
  6011 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6017 ;;      Params:         0       0       0       0       0       0       0       0       0
  6018 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6020 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6021 ;;Total ram usage:        0 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    8
  6024 ;; This function calls:
  6025 ;;		_TFT_DrawString
  6026 ;;		_TFT_FullScreen
  6027 ;; This function is called by:
  6028 ;;		_Ecg_Init
  6029 ;;		_Ecg_ProcessEcg
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text24
  6034  002D1C                     __ptext24:
  6035                           	opt callstack 0
  6036  002D1C                     _Ecg_Background_Leads_Failure:
  6037                           	opt callstack 19
  6038  002D1C                     
  6039                           ;ecg.c: 191: TFT_FullScreen(0x0821);
  6040  002D1C  0E08               	movlw	8
  6041  002D1E  6E1F               	movwf	(TFT_FullScreen@color+1)^0,c
  6042  002D20  0E21               	movlw	33
  6043  002D22  6E1E               	movwf	TFT_FullScreen@color^0,c
  6044  002D24  EC96  F014         	call	_TFT_FullScreen	;wreg free
  6045  002D28                     
  6046                           ;ecg.c: 192: TFT_DrawString(36, 75, "*** Collegare elettrodi ***", 0xFFFF, 0x0821, 2);
  6047  002D28  0E00               	movlw	0
  6048  002D2A  0100               	movlb	0	; () banked
  6049  002D2C  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  6050  002D2E  0E24               	movlw	36
  6051  002D30  6F60               	movwf	TFT_DrawString@x& (0+255),b
  6052  002D32  0E00               	movlw	0
  6053  002D34  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  6054  002D36  0E4B               	movlw	75
  6055  002D38  6F62               	movwf	TFT_DrawString@y& (0+255),b
  6056  002D3A  0E6B               	movlw	low STR_3
  6057  002D3C  6F64               	movwf	TFT_DrawString@str& (0+255),b
  6058  002D3E  0E5F               	movlw	high STR_3
  6059  002D40  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  6060  002D42  0EFF               	movlw	255
  6061  002D44  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  6062  002D46  6966               	setf	TFT_DrawString@color& (0+255),b
  6063  002D48  0E08               	movlw	8
  6064  002D4A  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  6065  002D4C  0E21               	movlw	33
  6066  002D4E  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  6067  002D50  0E02               	movlw	2
  6068  002D52  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  6069  002D54  EC36  F010         	call	_TFT_DrawString	;wreg free
  6070  002D58  0012               	return		;funcret
  6071  002D5A                     __end_of_Ecg_Background_Leads_Failure:
  6072                           	opt callstack 0
  6073                           
  6074 ;; *************** function _TFT_DrawString *****************
  6075 ;; Defined at:
  6076 ;;		line 303 in file "TFT.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  x               2    0[BANK0 ] unsigned int 
  6079 ;;  y               2    2[BANK0 ] unsigned int 
  6080 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  6081 ;;		 -> A6_Process_Random_Comms@response(32), STR_3(28), STR_2(11), Ecg_ProcessHeartRate@heartrateString(5), 
  6082 ;;		 -> refreshGSM@operator(32), 
  6083 ;;  color           2    6[BANK0 ] unsigned int 
  6084 ;;  bg              2    8[BANK0 ] unsigned int 
  6085 ;;  size            1   10[BANK0 ] unsigned char 
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  1    wreg      void 
  6090 ;; Registers used:
  6091 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6097 ;;      Params:         0      11       0       0       0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6100 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6101 ;;Total ram usage:       11 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    7
  6104 ;; This function calls:
  6105 ;;		_TFT_DrawChar
  6106 ;; This function is called by:
  6107 ;;		_refreshGSM
  6108 ;;		_Ecg_ProcessHeartRate
  6109 ;;		_Ecg_Background_Leads_Ok
  6110 ;;		_Ecg_Background_Leads_Failure
  6111 ;;		_TFT_ConsolePrintLine
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text25
  6116  00206C                     __ptext25:
  6117                           	opt callstack 0
  6118  00206C                     _TFT_DrawString:
  6119                           	opt callstack 21
  6120  00206C                     
  6121                           ;TFT.c: 304: while(*str) {
  6122  00206C  EF66  F010         	goto	l4586
  6123  002070                     l4580:
  6124                           
  6125                           ;TFT.c: 305: TFT_DrawChar(x, y, *str, color, bg, size);
  6126  002070  C060  F036         	movff	TFT_DrawString@x,TFT_DrawChar@x
  6127  002074  C061  F037         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  6128  002078  C062  F038         	movff	TFT_DrawString@y,TFT_DrawChar@y
  6129  00207C  C063  F039         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  6130  002080  C064  FFF6         	movff	TFT_DrawString@str,tblptrl
  6131  002084  C065  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  6132  002088  6AF8               	clrf	tblptru,c
  6133  00208A  0E07               	movlw	(high __ramtop+-1)
  6134  00208C  64F7               	cpfsgt	tblptrh,c
  6135  00208E  D003               	bra	u3887
  6136  002090  0008               	tblrd		*
  6137  002092  50F5               	movf	tablat,w,c
  6138  002094  D005               	bra	u3880
  6139  002096                     u3887:
  6140  002096  CFF6 FFE1          	movff	tblptrl,fsr1l
  6141  00209A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6142  00209E  50E7               	movf	indf1,w,c
  6143  0020A0                     u3880:
  6144  0020A0  6E3A               	movwf	TFT_DrawChar@c^0,c
  6145  0020A2  C066  F03B         	movff	TFT_DrawString@color,TFT_DrawChar@color
  6146  0020A6  C067  F03C         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  6147  0020AA  C068  F03D         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  6148  0020AE  C069  F03E         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  6149  0020B2  C06A  F03F         	movff	TFT_DrawString@size,TFT_DrawChar@size
  6150  0020B6  ECFE  F001         	call	_TFT_DrawChar	;wreg free
  6151  0020BA                     
  6152                           ;TFT.c: 306: x += (6 * size);
  6153  0020BA  0100               	movlb	0	; () banked
  6154  0020BC  516A               	movf	TFT_DrawString@size& (0+255),w,b
  6155  0020BE  0D06               	mullw	6
  6156  0020C0  50F3               	movf	243,w,c
  6157  0020C2  2760               	addwf	TFT_DrawString@x& (0+255),f,b
  6158  0020C4  50F4               	movf	244,w,c
  6159  0020C6  2361               	addwfc	(TFT_DrawString@x+1)& (0+255),f,b
  6160  0020C8                     
  6161                           ; BSR set to: 0
  6162                           ;TFT.c: 307: str++;
  6163  0020C8  4B64               	infsnz	TFT_DrawString@str& (0+255),f,b
  6164  0020CA  2B65               	incf	(TFT_DrawString@str+1)& (0+255),f,b
  6165  0020CC                     l4586:
  6166  0020CC  C064  FFF6         	movff	TFT_DrawString@str,tblptrl
  6167  0020D0  C065  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  6168  0020D4  6AF8               	clrf	tblptru,c
  6169  0020D6  0E07               	movlw	(high __ramtop+-1)
  6170  0020D8  64F7               	cpfsgt	tblptrh,c
  6171  0020DA  D003               	bra	u3897
  6172  0020DC  0008               	tblrd		*
  6173  0020DE  50F5               	movf	tablat,w,c
  6174  0020E0  D005               	bra	u3890
  6175  0020E2                     u3897:
  6176  0020E2  CFF6 FFE1          	movff	tblptrl,fsr1l
  6177  0020E6  CFF7 FFE2          	movff	tblptrh,fsr1h
  6178  0020EA  50E7               	movf	indf1,w,c
  6179  0020EC                     u3890:
  6180  0020EC  0900               	iorlw	0
  6181  0020EE  A4D8               	btfss	status,2,c
  6182  0020F0  EF7C  F010         	goto	u3901
  6183  0020F4  EF7E  F010         	goto	u3900
  6184  0020F8                     u3901:
  6185  0020F8  EF38  F010         	goto	l4580
  6186  0020FC                     u3900:
  6187  0020FC  0012               	return		;funcret
  6188  0020FE                     __end_of_TFT_DrawString:
  6189                           	opt callstack 0
  6190                           
  6191 ;; *************** function _TFT_DrawChar *****************
  6192 ;; Defined at:
  6193 ;;		line 274 in file "TFT.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  x               2   53[COMRAM] unsigned int 
  6196 ;;  y               2   55[COMRAM] unsigned int 
  6197 ;;  c               1   57[COMRAM] unsigned char 
  6198 ;;  color           2   58[COMRAM] unsigned int 
  6199 ;;  bg              2   60[COMRAM] unsigned int 
  6200 ;;  size            1   62[COMRAM] unsigned char 
  6201 ;; Auto vars:     Size  Location     Type
  6202 ;;  j               1   74[COMRAM] char 
  6203 ;;  xl              2   68[COMRAM] unsigned int 
  6204 ;;  line            1   67[COMRAM] unsigned char 
  6205 ;;  i               1   75[COMRAM] char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      void 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6215 ;;      Params:        10       0       0       0       0       0       0       0       0
  6216 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6217 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6218 ;;      Totals:        23       0       0       0       0       0       0       0       0
  6219 ;;Total ram usage:       23 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    6
  6222 ;; This function calls:
  6223 ;;		_TFT_DrawFillRect
  6224 ;;		_TFT_DrawLine
  6225 ;;		_TFT_DrawPixel
  6226 ;;		___wmul
  6227 ;; This function is called by:
  6228 ;;		_TFT_DrawString
  6229 ;; This function uses a non-reentrant model
  6230 ;;
  6231                           
  6232                           	psect	text26
  6233  0003FC                     __ptext26:
  6234                           	opt callstack 0
  6235  0003FC                     _TFT_DrawChar:
  6236                           	opt callstack 21
  6237  0003FC                     
  6238                           ;TFT.c: 275: for(int8_t i=0; i<5; i++ ) {
  6239  0003FC  0E00               	movlw	0
  6240  0003FE  6E4C               	movwf	TFT_DrawChar@i^0,c
  6241  000400                     l3492:
  6242                           
  6243                           ;TFT.c: 276: uint8_t line = TFT_Font[c * 5 + i];
  6244  000400  C04C  F040         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  6245  000404  6A41               	clrf	(??_TFT_DrawChar+1)^0,c
  6246  000406  BE40               	btfsc	??_TFT_DrawChar^0,7,c
  6247  000408  0641               	decf	(??_TFT_DrawChar+1)^0,f,c
  6248  00040A  503A               	movf	TFT_DrawChar@c^0,w,c
  6249  00040C  0D05               	mullw	5
  6250  00040E  0E2D               	movlw	low _TFT_Font
  6251  000410  6E42               	movwf	(??_TFT_DrawChar+2)^0,c
  6252  000412  0E59               	movlw	high _TFT_Font
  6253  000414  6E43               	movwf	(??_TFT_DrawChar+3)^0,c
  6254  000416  50F3               	movf	243,w,c
  6255  000418  2642               	addwf	(??_TFT_DrawChar+2)^0,f,c
  6256  00041A  50F4               	movf	244,w,c
  6257  00041C  2243               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  6258  00041E  5040               	movf	??_TFT_DrawChar^0,w,c
  6259  000420  2642               	addwf	(??_TFT_DrawChar+2)^0,f,c
  6260  000422  5041               	movf	(??_TFT_DrawChar+1)^0,w,c
  6261  000424  2243               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  6262  000426  C042  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  6263  00042A  C043  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  6264  00042E                     	if	0	;tblptru may be non-zero
  6265  00042E                     	endif
  6266  00042E                     	if	0	;tblptru may be non-zero
  6267  00042E                     	endif
  6268  00042E  0008               	tblrd		*
  6269  000430  CFF5 F044          	movff	tablat,TFT_DrawChar@line
  6270  000434                     
  6271                           ;TFT.c: 277: for(int8_t j=0; j<8; j++, line >>= 1) {
  6272  000434  0E00               	movlw	0
  6273  000436  6E4B               	movwf	TFT_DrawChar@j^0,c
  6274  000438                     l302:
  6275                           
  6276                           ;TFT.c: 278: if(line & 1) {
  6277  000438  A044               	btfss	TFT_DrawChar@line^0,0,c
  6278  00043A  EF21  F002         	goto	u2301
  6279  00043E  EF23  F002         	goto	u2300
  6280  000442                     u2301:
  6281  000442  EF79  F002         	goto	l3506
  6282  000446                     u2300:
  6283  000446                     
  6284                           ;TFT.c: 279: if(size == 1) {
  6285  000446  043F               	decf	TFT_DrawChar@size^0,w,c
  6286  000448  A4D8               	btfss	status,2,c
  6287  00044A  EF29  F002         	goto	u2311
  6288  00044E  EF2B  F002         	goto	u2310
  6289  000452                     u2311:
  6290  000452  EF43  F002         	goto	l3504
  6291  000456                     u2310:
  6292  000456                     
  6293                           ;TFT.c: 280: TFT_DrawPixel((x + i), (y + j), color);
  6294  000456  5036               	movf	TFT_DrawChar@x^0,w,c
  6295  000458  244C               	addwf	TFT_DrawChar@i^0,w,c
  6296  00045A  6E0D               	movwf	TFT_DrawPixel@x^0,c
  6297  00045C  0E00               	movlw	0
  6298  00045E  BE4C               	btfsc	TFT_DrawChar@i^0,7,c
  6299  000460  0EFF               	movlw	255
  6300  000462  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6301  000464  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  6302  000466  5038               	movf	TFT_DrawChar@y^0,w,c
  6303  000468  244B               	addwf	TFT_DrawChar@j^0,w,c
  6304  00046A  6E0F               	movwf	TFT_DrawPixel@y^0,c
  6305  00046C  0E00               	movlw	0
  6306  00046E  BE4B               	btfsc	TFT_DrawChar@j^0,7,c
  6307  000470  0EFF               	movlw	255
  6308  000472  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6309  000474  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  6310  000476  C03B  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  6311  00047A  C03C  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  6312  00047E  EC30  F00D         	call	_TFT_DrawPixel	;wreg free
  6313                           
  6314                           ;TFT.c: 281: } else {
  6315  000482  EFD9  F002         	goto	l3514
  6316  000486                     l3504:
  6317                           
  6318                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6319  000486  504C               	movf	TFT_DrawChar@i^0,w,c
  6320  000488  6E09               	movwf	___wmul@multiplier^0,c
  6321  00048A  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6322  00048C  BE09               	btfsc	___wmul@multiplier^0,7,c
  6323  00048E  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6324  000490  C03F  F00B         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6325  000494  6A0C               	clrf	(___wmul@multiplicand+1)^0,c
  6326  000496  EC9A  F017         	call	___wmul	;wreg free
  6327  00049A  5036               	movf	TFT_DrawChar@x^0,w,c
  6328  00049C  2409               	addwf	?___wmul^0,w,c
  6329  00049E  6E47               	movwf	_TFT_DrawChar$2252^0,c
  6330  0004A0  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6331  0004A2  200A               	addwfc	(?___wmul+1)^0,w,c
  6332  0004A4  6E48               	movwf	(_TFT_DrawChar$2252+1)^0,c
  6333                           
  6334                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6335  0004A6  504B               	movf	TFT_DrawChar@j^0,w,c
  6336  0004A8  6E09               	movwf	___wmul@multiplier^0,c
  6337  0004AA  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6338  0004AC  BE09               	btfsc	___wmul@multiplier^0,7,c
  6339  0004AE  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6340  0004B0  C03F  F00B         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6341  0004B4  6A0C               	clrf	(___wmul@multiplicand+1)^0,c
  6342  0004B6  EC9A  F017         	call	___wmul	;wreg free
  6343  0004BA  5038               	movf	TFT_DrawChar@y^0,w,c
  6344  0004BC  2409               	addwf	?___wmul^0,w,c
  6345  0004BE  6E49               	movwf	_TFT_DrawChar$2253^0,c
  6346  0004C0  5039               	movf	(TFT_DrawChar@y+1)^0,w,c
  6347  0004C2  200A               	addwfc	(?___wmul+1)^0,w,c
  6348  0004C4  6E4A               	movwf	(_TFT_DrawChar$2253+1)^0,c
  6349                           
  6350                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6351  0004C6  C047  F020         	movff	_TFT_DrawChar$2252,TFT_DrawFillRect@x
  6352  0004CA  C048  F021         	movff	_TFT_DrawChar$2252+1,TFT_DrawFillRect@x+1
  6353  0004CE  C049  F022         	movff	_TFT_DrawChar$2253,TFT_DrawFillRect@y
  6354  0004D2  C04A  F023         	movff	_TFT_DrawChar$2253+1,TFT_DrawFillRect@y+1
  6355  0004D6  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6356  0004DA  6A25               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6357  0004DC  C03F  F026         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6358  0004E0  6A27               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6359  0004E2  C03B  F028         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  6360  0004E6  C03C  F029         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  6361  0004EA  ECCD  F011         	call	_TFT_DrawFillRect	;wreg free
  6362  0004EE  EFD9  F002         	goto	l3514
  6363  0004F2                     l3506:
  6364  0004F2  503B               	movf	TFT_DrawChar@color^0,w,c
  6365  0004F4  183D               	xorwf	TFT_DrawChar@bg^0,w,c
  6366  0004F6  E109               	bnz	u2320
  6367  0004F8  503C               	movf	(TFT_DrawChar@color+1)^0,w,c
  6368  0004FA  183E               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  6369  0004FC  B4D8               	btfsc	status,2,c
  6370  0004FE  EF83  F002         	goto	u2321
  6371  000502  EF85  F002         	goto	u2320
  6372  000506                     u2321:
  6373  000506  EFD9  F002         	goto	l3514
  6374  00050A                     u2320:
  6375  00050A                     
  6376                           ;TFT.c: 285: if(size == 1) {
  6377  00050A  043F               	decf	TFT_DrawChar@size^0,w,c
  6378  00050C  A4D8               	btfss	status,2,c
  6379  00050E  EF8B  F002         	goto	u2331
  6380  000512  EF8D  F002         	goto	u2330
  6381  000516                     u2331:
  6382  000516  EFA5  F002         	goto	l3512
  6383  00051A                     u2330:
  6384  00051A                     
  6385                           ;TFT.c: 286: TFT_DrawPixel((x + i), (y + j), bg);
  6386  00051A  5036               	movf	TFT_DrawChar@x^0,w,c
  6387  00051C  244C               	addwf	TFT_DrawChar@i^0,w,c
  6388  00051E  6E0D               	movwf	TFT_DrawPixel@x^0,c
  6389  000520  0E00               	movlw	0
  6390  000522  BE4C               	btfsc	TFT_DrawChar@i^0,7,c
  6391  000524  0EFF               	movlw	255
  6392  000526  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6393  000528  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  6394  00052A  5038               	movf	TFT_DrawChar@y^0,w,c
  6395  00052C  244B               	addwf	TFT_DrawChar@j^0,w,c
  6396  00052E  6E0F               	movwf	TFT_DrawPixel@y^0,c
  6397  000530  0E00               	movlw	0
  6398  000532  BE4B               	btfsc	TFT_DrawChar@j^0,7,c
  6399  000534  0EFF               	movlw	255
  6400  000536  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6401  000538  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  6402  00053A  C03D  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  6403  00053E  C03E  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  6404  000542  EC30  F00D         	call	_TFT_DrawPixel	;wreg free
  6405                           
  6406                           ;TFT.c: 287: } else {
  6407  000546  EFD9  F002         	goto	l3514
  6408  00054A                     l3512:
  6409                           
  6410                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6411  00054A  504C               	movf	TFT_DrawChar@i^0,w,c
  6412  00054C  6E09               	movwf	___wmul@multiplier^0,c
  6413  00054E  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6414  000550  BE09               	btfsc	___wmul@multiplier^0,7,c
  6415  000552  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6416  000554  C03F  F00B         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6417  000558  6A0C               	clrf	(___wmul@multiplicand+1)^0,c
  6418  00055A  EC9A  F017         	call	___wmul	;wreg free
  6419  00055E  5036               	movf	TFT_DrawChar@x^0,w,c
  6420  000560  2409               	addwf	?___wmul^0,w,c
  6421  000562  6E47               	movwf	_TFT_DrawChar$2252^0,c
  6422  000564  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6423  000566  200A               	addwfc	(?___wmul+1)^0,w,c
  6424  000568  6E48               	movwf	(_TFT_DrawChar$2252+1)^0,c
  6425                           
  6426                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6427  00056A  504B               	movf	TFT_DrawChar@j^0,w,c
  6428  00056C  6E09               	movwf	___wmul@multiplier^0,c
  6429  00056E  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6430  000570  BE09               	btfsc	___wmul@multiplier^0,7,c
  6431  000572  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6432  000574  C03F  F00B         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6433  000578  6A0C               	clrf	(___wmul@multiplicand+1)^0,c
  6434  00057A  EC9A  F017         	call	___wmul	;wreg free
  6435  00057E  5038               	movf	TFT_DrawChar@y^0,w,c
  6436  000580  2409               	addwf	?___wmul^0,w,c
  6437  000582  6E49               	movwf	_TFT_DrawChar$2253^0,c
  6438  000584  5039               	movf	(TFT_DrawChar@y+1)^0,w,c
  6439  000586  200A               	addwfc	(?___wmul+1)^0,w,c
  6440  000588  6E4A               	movwf	(_TFT_DrawChar$2253+1)^0,c
  6441                           
  6442                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6443  00058A  C047  F020         	movff	_TFT_DrawChar$2252,TFT_DrawFillRect@x
  6444  00058E  C048  F021         	movff	_TFT_DrawChar$2252+1,TFT_DrawFillRect@x+1
  6445  000592  C049  F022         	movff	_TFT_DrawChar$2253,TFT_DrawFillRect@y
  6446  000596  C04A  F023         	movff	_TFT_DrawChar$2253+1,TFT_DrawFillRect@y+1
  6447  00059A  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6448  00059E  6A25               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6449  0005A0  C03F  F026         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6450  0005A4  6A27               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6451  0005A6  C03D  F028         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  6452  0005AA  C03E  F029         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  6453  0005AE  ECCD  F011         	call	_TFT_DrawFillRect	;wreg free
  6454  0005B2                     l3514:
  6455  0005B2  2A4B               	incf	TFT_DrawChar@j^0,f,c
  6456  0005B4  90D8               	bcf	status,0,c
  6457  0005B6  3244               	rrcf	TFT_DrawChar@line^0,f,c
  6458  0005B8  504B               	movf	TFT_DrawChar@j^0,w,c
  6459  0005BA  0A80               	xorlw	128
  6460  0005BC  0F78               	addlw	-136
  6461  0005BE  A0D8               	btfss	status,0,c
  6462  0005C0  EFE4  F002         	goto	u2341
  6463  0005C4  EFE6  F002         	goto	u2340
  6464  0005C8                     u2341:
  6465  0005C8  EF1C  F002         	goto	l302
  6466  0005CC                     u2340:
  6467  0005CC  2A4C               	incf	TFT_DrawChar@i^0,f,c
  6468  0005CE  504C               	movf	TFT_DrawChar@i^0,w,c
  6469  0005D0  0A80               	xorlw	128
  6470  0005D2  0F7B               	addlw	-133
  6471  0005D4  A0D8               	btfss	status,0,c
  6472  0005D6  EFEF  F002         	goto	u2351
  6473  0005DA  EFF1  F002         	goto	u2350
  6474  0005DE                     u2351:
  6475  0005DE  EF00  F002         	goto	l3492
  6476  0005E2                     u2350:
  6477  0005E2                     
  6478                           ;TFT.c: 289: };TFT.c: 290: };TFT.c: 291: };TFT.c: 292: };TFT.c: 293: if(bg != color) {
  6479  0005E2  503B               	movf	TFT_DrawChar@color^0,w,c
  6480  0005E4  183D               	xorwf	TFT_DrawChar@bg^0,w,c
  6481  0005E6  E109               	bnz	u2360
  6482  0005E8  503C               	movf	(TFT_DrawChar@color+1)^0,w,c
  6483  0005EA  183E               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  6484  0005EC  B4D8               	btfsc	status,2,c
  6485  0005EE  EFFB  F002         	goto	u2361
  6486  0005F2  EFFD  F002         	goto	u2360
  6487  0005F6                     u2361:
  6488  0005F6  EF44  F003         	goto	l314
  6489  0005FA                     u2360:
  6490  0005FA                     
  6491                           ;TFT.c: 294: if(size == 1) {
  6492  0005FA  043F               	decf	TFT_DrawChar@size^0,w,c
  6493  0005FC  A4D8               	btfss	status,2,c
  6494  0005FE  EF03  F003         	goto	u2371
  6495  000602  EF05  F003         	goto	u2370
  6496  000606                     u2371:
  6497  000606  EF25  F003         	goto	l3532
  6498  00060A                     u2370:
  6499  00060A                     
  6500                           ;TFT.c: 295: uint16_t xl = x + 5;
  6501  00060A  0E05               	movlw	5
  6502  00060C  2436               	addwf	TFT_DrawChar@x^0,w,c
  6503  00060E  6E45               	movwf	TFT_DrawChar@xl^0,c
  6504  000610  0E00               	movlw	0
  6505  000612  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6506  000614  6E46               	movwf	(TFT_DrawChar@xl+1)^0,c
  6507  000616                     
  6508                           ;TFT.c: 296: TFT_DrawLine(xl, y, xl, y + 7, bg);
  6509  000616  C045  F017         	movff	TFT_DrawChar@xl,TFT_DrawLine@x0
  6510  00061A  C046  F018         	movff	TFT_DrawChar@xl+1,TFT_DrawLine@x0+1
  6511  00061E  C038  F019         	movff	TFT_DrawChar@y,TFT_DrawLine@y0
  6512  000622  C039  F01A         	movff	TFT_DrawChar@y+1,TFT_DrawLine@y0+1
  6513  000626  C045  F01B         	movff	TFT_DrawChar@xl,TFT_DrawLine@x1
  6514  00062A  C046  F01C         	movff	TFT_DrawChar@xl+1,TFT_DrawLine@x1+1
  6515  00062E  0E07               	movlw	7
  6516  000630  2438               	addwf	TFT_DrawChar@y^0,w,c
  6517  000632  6E1D               	movwf	TFT_DrawLine@y1^0,c
  6518  000634  0E00               	movlw	0
  6519  000636  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6520  000638  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  6521  00063A  C03D  F01F         	movff	TFT_DrawChar@bg,TFT_DrawLine@color
  6522  00063E  C03E  F020         	movff	TFT_DrawChar@bg+1,TFT_DrawLine@color+1
  6523  000642  EC84  F004         	call	_TFT_DrawLine	;wreg free
  6524                           
  6525                           ;TFT.c: 297: } else {
  6526  000646  EF44  F003         	goto	l314
  6527  00064A                     l3532:
  6528                           
  6529                           ;TFT.c: 298: TFT_DrawFillRect((x + 5 * size), y, size, 8 * size, bg);
  6530  00064A  503F               	movf	TFT_DrawChar@size^0,w,c
  6531  00064C  0D05               	mullw	5
  6532  00064E  CFF3 F040          	movff	prodl,??_TFT_DrawChar
  6533  000652  CFF4 F041          	movff	prodh,??_TFT_DrawChar+1
  6534  000656  5036               	movf	TFT_DrawChar@x^0,w,c
  6535  000658  2440               	addwf	??_TFT_DrawChar^0,w,c
  6536  00065A  6E20               	movwf	TFT_DrawFillRect@x^0,c
  6537  00065C  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6538  00065E  2041               	addwfc	(??_TFT_DrawChar+1)^0,w,c
  6539  000660  6E21               	movwf	(TFT_DrawFillRect@x+1)^0,c
  6540  000662  C038  F022         	movff	TFT_DrawChar@y,TFT_DrawFillRect@y
  6541  000666  C039  F023         	movff	TFT_DrawChar@y+1,TFT_DrawFillRect@y+1
  6542  00066A  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6543  00066E  6A25               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6544  000670  503F               	movf	TFT_DrawChar@size^0,w,c
  6545  000672  0D08               	mullw	8
  6546  000674  CFF3 F026          	movff	prodl,TFT_DrawFillRect@h
  6547  000678  CFF4 F027          	movff	prodh,TFT_DrawFillRect@h+1
  6548  00067C  C03D  F028         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  6549  000680  C03E  F029         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  6550  000684  ECCD  F011         	call	_TFT_DrawFillRect	;wreg free
  6551  000688                     l314:
  6552  000688  0012               	return		;funcret
  6553  00068A                     __end_of_TFT_DrawChar:
  6554                           	opt callstack 0
  6555                           
  6556 ;; *************** function _TFT_DrawLine *****************
  6557 ;; Defined at:
  6558 ;;		line 192 in file "TFT.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  x0              2   22[COMRAM] int 
  6561 ;;  y0              2   24[COMRAM] int 
  6562 ;;  x1              2   26[COMRAM] int 
  6563 ;;  y1              2   28[COMRAM] int 
  6564 ;;  color           2   30[COMRAM] unsigned int 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  t               2   41[COMRAM] int 
  6567 ;;  t               2   39[COMRAM] int 
  6568 ;;  t               2   37[COMRAM] int 
  6569 ;;  t               2   35[COMRAM] int 
  6570 ;;  dx              2   51[COMRAM] int 
  6571 ;;  steep           2   49[COMRAM] int 
  6572 ;;  err             2   47[COMRAM] int 
  6573 ;;  ystep           2   45[COMRAM] int 
  6574 ;;  dy              2   43[COMRAM] int 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      void 
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6584 ;;      Params:        10       0       0       0       0       0       0       0       0
  6585 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6586 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6587 ;;      Totals:        31       0       0       0       0       0       0       0       0
  6588 ;;Total ram usage:       31 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:    4
  6591 ;; This function calls:
  6592 ;;		_TFT_DrawPixel
  6593 ;;		___awdiv
  6594 ;;		_abs
  6595 ;; This function is called by:
  6596 ;;		_refreshGSM
  6597 ;;		_TFT_DrawChar
  6598 ;;		_Ecg_Draw
  6599 ;;		_Ecg_Background_Leads_Ok
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text27
  6604  000908                     __ptext27:
  6605                           	opt callstack 0
  6606  000908                     _TFT_DrawLine:
  6607                           	opt callstack 22
  6608  000908                     
  6609                           ;TFT.c: 193: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  6610  000908  5017               	movf	TFT_DrawLine@x0^0,w,c
  6611  00090A  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6612  00090C  6E05               	movwf	abs@a^0,c
  6613  00090E  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6614  000910  581C               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6615  000912  6E06               	movwf	(abs@a+1)^0,c
  6616  000914  EC3B  F017         	call	_abs	;wreg free
  6617  000918  C005  F021         	movff	?_abs,??_TFT_DrawLine
  6618  00091C  C006  F022         	movff	?_abs+1,??_TFT_DrawLine+1
  6619  000920  5019               	movf	TFT_DrawLine@y0^0,w,c
  6620  000922  5C1D               	subwf	TFT_DrawLine@y1^0,w,c
  6621  000924  6E05               	movwf	abs@a^0,c
  6622  000926  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6623  000928  581E               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6624  00092A  6E06               	movwf	(abs@a+1)^0,c
  6625  00092C  EC3B  F017         	call	_abs	;wreg free
  6626  000930  5005               	movf	?_abs^0,w,c
  6627  000932  5C21               	subwf	??_TFT_DrawLine^0,w,c
  6628  000934  5022               	movf	(??_TFT_DrawLine+1)^0,w,c
  6629  000936  0A80               	xorlw	128
  6630  000938  6E23               	movwf	(??_TFT_DrawLine+2)^0,c
  6631  00093A  5006               	movf	(?_abs+1)^0,w,c
  6632  00093C  0A80               	xorlw	128
  6633  00093E  5823               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  6634  000940  A0D8               	btfss	status,0,c
  6635  000942  EFA5  F004         	goto	u2121
  6636  000946  EFA8  F004         	goto	u2120
  6637  00094A                     u2121:
  6638  00094A  0E01               	movlw	1
  6639  00094C  EFA9  F004         	goto	u2130
  6640  000950                     u2120:
  6641  000950  0E00               	movlw	0
  6642  000952                     u2130:
  6643  000952  6E32               	movwf	TFT_DrawLine@steep^0,c
  6644  000954  6A33               	clrf	(TFT_DrawLine@steep+1)^0,c
  6645  000956                     
  6646                           ;TFT.c: 194: if(steep) {
  6647  000956  5032               	movf	TFT_DrawLine@steep^0,w,c
  6648  000958  1033               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6649  00095A  B4D8               	btfsc	status,2,c
  6650  00095C  EFB2  F004         	goto	u2141
  6651  000960  EFB4  F004         	goto	u2140
  6652  000964                     u2141:
  6653  000964  EFCC  F004         	goto	l3408
  6654  000968                     u2140:
  6655  000968                     
  6656                           ;TFT.c: 195: { int16_t t = x0; x0 = y0; y0 = t; };
  6657  000968  C017  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  6658  00096C  C018  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  6659  000970  C019  F017         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  6660  000974  C01A  F018         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  6661  000978  C024  F019         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  6662  00097C  C025  F01A         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  6663                           
  6664                           ;TFT.c: 196: { int16_t t = x1; x1 = y1; y1 = t; };
  6665  000980  C01B  F026         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_778
  6666  000984  C01C  F027         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_778+1
  6667  000988  C01D  F01B         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  6668  00098C  C01E  F01C         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  6669  000990  C026  F01D         	movff	TFT_DrawLine@t_778,TFT_DrawLine@y1
  6670  000994  C027  F01E         	movff	TFT_DrawLine@t_778+1,TFT_DrawLine@y1+1
  6671  000998                     l3408:
  6672                           
  6673                           ;TFT.c: 197: };TFT.c: 198: if(x0 > x1) {
  6674  000998  5017               	movf	TFT_DrawLine@x0^0,w,c
  6675  00099A  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6676  00099C  501C               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6677  00099E  0A80               	xorlw	128
  6678  0009A0  6E21               	movwf	??_TFT_DrawLine^0,c
  6679  0009A2  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6680  0009A4  0A80               	xorlw	128
  6681  0009A6  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6682  0009A8  B0D8               	btfsc	status,0,c
  6683  0009AA  EFD9  F004         	goto	u2151
  6684  0009AE  EFDB  F004         	goto	u2150
  6685  0009B2                     u2151:
  6686  0009B2  EFF3  F004         	goto	l3412
  6687  0009B6                     u2150:
  6688  0009B6                     
  6689                           ;TFT.c: 199: { int16_t t = x0; x0 = x1; x1 = t; };
  6690  0009B6  C017  F028         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_779
  6691  0009BA  C018  F029         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_779+1
  6692  0009BE  C01B  F017         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  6693  0009C2  C01C  F018         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  6694  0009C6  C028  F01B         	movff	TFT_DrawLine@t_779,TFT_DrawLine@x1
  6695  0009CA  C029  F01C         	movff	TFT_DrawLine@t_779+1,TFT_DrawLine@x1+1
  6696                           
  6697                           ;TFT.c: 200: { int16_t t = y0; y0 = y1; y1 = t; };
  6698  0009CE  C019  F02A         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_780
  6699  0009D2  C01A  F02B         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_780+1
  6700  0009D6  C01D  F019         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  6701  0009DA  C01E  F01A         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  6702  0009DE  C02A  F01D         	movff	TFT_DrawLine@t_780,TFT_DrawLine@y1
  6703  0009E2  C02B  F01E         	movff	TFT_DrawLine@t_780+1,TFT_DrawLine@y1+1
  6704  0009E6                     l3412:
  6705                           
  6706                           ;TFT.c: 201: };TFT.c: 203: int16_t dx, dy;;TFT.c: 204: dx = x1 - x0;
  6707  0009E6  5017               	movf	TFT_DrawLine@x0^0,w,c
  6708  0009E8  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6709  0009EA  6E34               	movwf	TFT_DrawLine@dx^0,c
  6710  0009EC  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6711  0009EE  581C               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6712  0009F0  6E35               	movwf	(TFT_DrawLine@dx+1)^0,c
  6713  0009F2                     
  6714                           ;TFT.c: 205: dy = abs(y1 - y0);
  6715  0009F2  5019               	movf	TFT_DrawLine@y0^0,w,c
  6716  0009F4  5C1D               	subwf	TFT_DrawLine@y1^0,w,c
  6717  0009F6  6E05               	movwf	abs@a^0,c
  6718  0009F8  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6719  0009FA  581E               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6720  0009FC  6E06               	movwf	(abs@a+1)^0,c
  6721  0009FE  EC3B  F017         	call	_abs	;wreg free
  6722  000A02  C005  F02C         	movff	?_abs,TFT_DrawLine@dy
  6723  000A06  C006  F02D         	movff	?_abs+1,TFT_DrawLine@dy+1
  6724  000A0A                     
  6725                           ;TFT.c: 207: int16_t err = dx / 2;
  6726  000A0A  C034  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  6727  000A0E  C035  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  6728  000A12  0E00               	movlw	0
  6729  000A14  6E08               	movwf	(___awdiv@divisor+1)^0,c
  6730  000A16  0E02               	movlw	2
  6731  000A18  6E07               	movwf	___awdiv@divisor^0,c
  6732  000A1A  EC75  F00E         	call	___awdiv	;wreg free
  6733  000A1E  C005  F030         	movff	?___awdiv,TFT_DrawLine@err
  6734  000A22  C006  F031         	movff	?___awdiv+1,TFT_DrawLine@err+1
  6735                           
  6736                           ;TFT.c: 208: int16_t ystep;;TFT.c: 210: if(y0 < y1) {
  6737  000A26  501D               	movf	TFT_DrawLine@y1^0,w,c
  6738  000A28  5C19               	subwf	TFT_DrawLine@y0^0,w,c
  6739  000A2A  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6740  000A2C  0A80               	xorlw	128
  6741  000A2E  6E21               	movwf	??_TFT_DrawLine^0,c
  6742  000A30  501E               	movf	(TFT_DrawLine@y1+1)^0,w,c
  6743  000A32  0A80               	xorlw	128
  6744  000A34  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6745  000A36  B0D8               	btfsc	status,0,c
  6746  000A38  EF20  F005         	goto	u2161
  6747  000A3C  EF22  F005         	goto	u2160
  6748  000A40                     u2161:
  6749  000A40  EF28  F005         	goto	l269
  6750  000A44                     u2160:
  6751  000A44                     
  6752                           ;TFT.c: 211: ystep = 1;
  6753  000A44  0E00               	movlw	0
  6754  000A46  6E2F               	movwf	(TFT_DrawLine@ystep+1)^0,c
  6755  000A48  0E01               	movlw	1
  6756  000A4A  6E2E               	movwf	TFT_DrawLine@ystep^0,c
  6757                           
  6758                           ;TFT.c: 212: } else {
  6759  000A4C  EF68  F005         	goto	l3434
  6760  000A50                     l269:
  6761                           
  6762                           ;TFT.c: 213: ystep = -1;
  6763  000A50  682E               	setf	TFT_DrawLine@ystep^0,c
  6764  000A52  682F               	setf	(TFT_DrawLine@ystep+1)^0,c
  6765  000A54  EF68  F005         	goto	l3434
  6766  000A58                     l3420:
  6767                           
  6768                           ;TFT.c: 217: if(steep) {
  6769  000A58  5032               	movf	TFT_DrawLine@steep^0,w,c
  6770  000A5A  1033               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6771  000A5C  B4D8               	btfsc	status,2,c
  6772  000A5E  EF33  F005         	goto	u2171
  6773  000A62  EF35  F005         	goto	u2170
  6774  000A66                     u2171:
  6775  000A66  EF45  F005         	goto	l3424
  6776  000A6A                     u2170:
  6777  000A6A                     
  6778                           ;TFT.c: 218: TFT_DrawPixel(y0, x0, color);
  6779  000A6A  C019  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  6780  000A6E  C01A  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  6781  000A72  C017  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  6782  000A76  C018  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  6783  000A7A  C01F  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6784  000A7E  C020  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6785  000A82  EC30  F00D         	call	_TFT_DrawPixel	;wreg free
  6786                           
  6787                           ;TFT.c: 219: } else {
  6788  000A86  EF53  F005         	goto	l3426
  6789  000A8A                     l3424:
  6790                           
  6791                           ;TFT.c: 220: TFT_DrawPixel(x0, y0, color);
  6792  000A8A  C017  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  6793  000A8E  C018  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  6794  000A92  C019  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  6795  000A96  C01A  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  6796  000A9A  C01F  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6797  000A9E  C020  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6798  000AA2  EC30  F00D         	call	_TFT_DrawPixel	;wreg free
  6799  000AA6                     l3426:
  6800                           
  6801                           ;TFT.c: 221: };TFT.c: 222: err -= dy;
  6802  000AA6  502C               	movf	TFT_DrawLine@dy^0,w,c
  6803  000AA8  5E30               	subwf	TFT_DrawLine@err^0,f,c
  6804  000AAA  502D               	movf	(TFT_DrawLine@dy+1)^0,w,c
  6805  000AAC  5A31               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  6806  000AAE                     
  6807                           ;TFT.c: 223: if(err < 0) {
  6808  000AAE  BE31               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  6809  000AB0  EF5E  F005         	goto	u2180
  6810  000AB4  EF5C  F005         	goto	u2181
  6811  000AB8                     u2181:
  6812  000AB8  EF66  F005         	goto	l3432
  6813  000ABC                     u2180:
  6814  000ABC                     
  6815                           ;TFT.c: 224: y0 += ystep;
  6816  000ABC  502E               	movf	TFT_DrawLine@ystep^0,w,c
  6817  000ABE  2619               	addwf	TFT_DrawLine@y0^0,f,c
  6818  000AC0  502F               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  6819  000AC2  221A               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  6820                           
  6821                           ;TFT.c: 225: err += dx;
  6822  000AC4  5034               	movf	TFT_DrawLine@dx^0,w,c
  6823  000AC6  2630               	addwf	TFT_DrawLine@err^0,f,c
  6824  000AC8  5035               	movf	(TFT_DrawLine@dx+1)^0,w,c
  6825  000ACA  2231               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  6826  000ACC                     l3432:
  6827  000ACC  4A17               	infsnz	TFT_DrawLine@x0^0,f,c
  6828  000ACE  2A18               	incf	(TFT_DrawLine@x0+1)^0,f,c
  6829  000AD0                     l3434:
  6830  000AD0  501B               	movf	TFT_DrawLine@x1^0,w,c
  6831  000AD2  5C17               	subwf	TFT_DrawLine@x0^0,w,c
  6832  000AD4  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6833  000AD6  0A80               	xorlw	128
  6834  000AD8  6E21               	movwf	??_TFT_DrawLine^0,c
  6835  000ADA  501C               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6836  000ADC  0A80               	xorlw	128
  6837  000ADE  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6838  000AE0  A0D8               	btfss	status,0,c
  6839  000AE2  EF75  F005         	goto	u2191
  6840  000AE6  EF77  F005         	goto	u2190
  6841  000AEA                     u2191:
  6842  000AEA  EF2C  F005         	goto	l3420
  6843  000AEE                     u2190:
  6844  000AEE  0012               	return		;funcret
  6845  000AF0                     __end_of_TFT_DrawLine:
  6846                           	opt callstack 0
  6847                           
  6848 ;; *************** function _abs *****************
  6849 ;; Defined at:
  6850 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  a               2    4[COMRAM] int 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  2    4[COMRAM] int 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2, status,0
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6864 ;;      Params:         2       0       0       0       0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6866 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6867 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6868 ;;Total ram usage:        4 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:    2
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_TFT_DrawLine
  6875 ;;		_Ecg_ProcessHeartbeat
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           	psect	text28
  6880  002E76                     __ptext28:
  6881                           	opt callstack 0
  6882  002E76                     _abs:
  6883                           	opt callstack 23
  6884  002E76  BE06               	btfsc	(abs@a+1)^0,7,c
  6885  002E78  EF42  F017         	goto	u2020
  6886  002E7C  EF40  F017         	goto	u2021
  6887  002E80                     u2021:
  6888  002E80  EF50  F017         	goto	l1417
  6889  002E84                     u2020:
  6890  002E84  C005  F007         	movff	abs@a,??_abs
  6891  002E88  C006  F008         	movff	abs@a+1,??_abs+1
  6892  002E8C  1E07               	comf	??_abs^0,f,c
  6893  002E8E  1E08               	comf	(??_abs+1)^0,f,c
  6894  002E90  4A07               	infsnz	??_abs^0,f,c
  6895  002E92  2A08               	incf	(??_abs+1)^0,f,c
  6896  002E94  C007  F005         	movff	??_abs,?_abs
  6897  002E98  C008  F006         	movff	??_abs+1,?_abs+1
  6898  002E9C  EF54  F017         	goto	l1418
  6899  002EA0                     l1417:
  6900  002EA0  C005  F005         	movff	abs@a,?_abs
  6901  002EA4  C006  F006         	movff	abs@a+1,?_abs+1
  6902  002EA8                     l1418:
  6903  002EA8  0012               	return		;funcret
  6904  002EAA                     __end_of_abs:
  6905                           	opt callstack 0
  6906                           
  6907 ;; *************** function ___awdiv *****************
  6908 ;; Defined at:
  6909 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  dividend        2    4[COMRAM] int 
  6912 ;;  divisor         2    6[COMRAM] int 
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;  quotient        2   10[COMRAM] int 
  6915 ;;  sign            1    9[COMRAM] unsigned char 
  6916 ;;  counter         1    8[COMRAM] unsigned char 
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  2    4[COMRAM] int 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6926 ;;      Params:         4       0       0       0       0       0       0       0       0
  6927 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6929 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6930 ;;Total ram usage:        8 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    2
  6933 ;; This function calls:
  6934 ;;		Nothing
  6935 ;; This function is called by:
  6936 ;;		_TFT_DrawLine
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text29
  6941  001CEA                     __ptext29:
  6942                           	opt callstack 0
  6943  001CEA                     ___awdiv:
  6944                           	opt callstack 23
  6945  001CEA  0E00               	movlw	0
  6946  001CEC  6E0A               	movwf	___awdiv@sign^0,c
  6947  001CEE  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6948  001CF0  EF7E  F00E         	goto	u2060
  6949  001CF4  EF7C  F00E         	goto	u2061
  6950  001CF8                     u2061:
  6951  001CF8  EF84  F00E         	goto	l3360
  6952  001CFC                     u2060:
  6953  001CFC  6C07               	negf	___awdiv@divisor^0,c
  6954  001CFE  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6955  001D00  B0D8               	btfsc	status,0,c
  6956  001D02  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6957  001D04  0E01               	movlw	1
  6958  001D06  6E0A               	movwf	___awdiv@sign^0,c
  6959  001D08                     l3360:
  6960  001D08  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6961  001D0A  EF8B  F00E         	goto	u2070
  6962  001D0E  EF89  F00E         	goto	u2071
  6963  001D12                     u2071:
  6964  001D12  EF91  F00E         	goto	l3366
  6965  001D16                     u2070:
  6966  001D16  6C05               	negf	___awdiv@dividend^0,c
  6967  001D18  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6968  001D1A  B0D8               	btfsc	status,0,c
  6969  001D1C  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6970  001D1E  0E01               	movlw	1
  6971  001D20  1A0A               	xorwf	___awdiv@sign^0,f,c
  6972  001D22                     l3366:
  6973  001D22  0E00               	movlw	0
  6974  001D24  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6975  001D26  0E00               	movlw	0
  6976  001D28  6E0B               	movwf	___awdiv@quotient^0,c
  6977  001D2A  5007               	movf	___awdiv@divisor^0,w,c
  6978  001D2C  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6979  001D2E  B4D8               	btfsc	status,2,c
  6980  001D30  EF9C  F00E         	goto	u2081
  6981  001D34  EF9E  F00E         	goto	u2080
  6982  001D38                     u2081:
  6983  001D38  EFC6  F00E         	goto	l3388
  6984  001D3C                     u2080:
  6985  001D3C  0E01               	movlw	1
  6986  001D3E  6E09               	movwf	___awdiv@counter^0,c
  6987  001D40  EFA6  F00E         	goto	l3374
  6988  001D44                     l3372:
  6989  001D44  90D8               	bcf	status,0,c
  6990  001D46  3607               	rlcf	___awdiv@divisor^0,f,c
  6991  001D48  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6992  001D4A  2A09               	incf	___awdiv@counter^0,f,c
  6993  001D4C                     l3374:
  6994  001D4C  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6995  001D4E  EFAB  F00E         	goto	u2091
  6996  001D52  EFAD  F00E         	goto	u2090
  6997  001D56                     u2091:
  6998  001D56  EFA2  F00E         	goto	l3372
  6999  001D5A                     u2090:
  7000  001D5A                     l3376:
  7001  001D5A  90D8               	bcf	status,0,c
  7002  001D5C  360B               	rlcf	___awdiv@quotient^0,f,c
  7003  001D5E  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7004  001D60  5007               	movf	___awdiv@divisor^0,w,c
  7005  001D62  5C05               	subwf	___awdiv@dividend^0,w,c
  7006  001D64  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7007  001D66  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7008  001D68  A0D8               	btfss	status,0,c
  7009  001D6A  EFB9  F00E         	goto	u2101
  7010  001D6E  EFBB  F00E         	goto	u2100
  7011  001D72                     u2101:
  7012  001D72  EFC0  F00E         	goto	l3384
  7013  001D76                     u2100:
  7014  001D76  5007               	movf	___awdiv@divisor^0,w,c
  7015  001D78  5E05               	subwf	___awdiv@dividend^0,f,c
  7016  001D7A  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7017  001D7C  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7018  001D7E  800B               	bsf	___awdiv@quotient^0,0,c
  7019  001D80                     l3384:
  7020  001D80  90D8               	bcf	status,0,c
  7021  001D82  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7022  001D84  3207               	rrcf	___awdiv@divisor^0,f,c
  7023  001D86  2E09               	decfsz	___awdiv@counter^0,f,c
  7024  001D88  EFAD  F00E         	goto	l3376
  7025  001D8C                     l3388:
  7026  001D8C  500A               	movf	___awdiv@sign^0,w,c
  7027  001D8E  B4D8               	btfsc	status,2,c
  7028  001D90  EFCC  F00E         	goto	u2111
  7029  001D94  EFCE  F00E         	goto	u2110
  7030  001D98                     u2111:
  7031  001D98  EFD2  F00E         	goto	l3392
  7032  001D9C                     u2110:
  7033  001D9C  6C0B               	negf	___awdiv@quotient^0,c
  7034  001D9E  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7035  001DA0  B0D8               	btfsc	status,0,c
  7036  001DA2  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7037  001DA4                     l3392:
  7038  001DA4  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7039  001DA8  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7040  001DAC  0012               	return		;funcret
  7041  001DAE                     __end_of___awdiv:
  7042                           	opt callstack 0
  7043                           
  7044 ;; *************** function _TFT_DrawPixel *****************
  7045 ;; Defined at:
  7046 ;;		line 167 in file "TFT.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  x               2   12[COMRAM] unsigned int 
  7049 ;;  y               2   14[COMRAM] unsigned int 
  7050 ;;  color           2   16[COMRAM] unsigned int 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  v               2   20[COMRAM] unsigned int 
  7053 ;;  h               2   18[COMRAM] unsigned int 
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  1    wreg      void 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0, cstack
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7063 ;;      Params:         6       0       0       0       0       0       0       0       0
  7064 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7066 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7067 ;;Total ram usage:       10 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; Hardware stack levels required when called:    3
  7070 ;; This function calls:
  7071 ;;		_TFT_OrientationGet
  7072 ;;		_TFT_WriteRegister
  7073 ;; This function is called by:
  7074 ;;		_TFT_DrawLine
  7075 ;;		_TFT_DrawChar
  7076 ;;		_TFT_DrawBitmap
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text30
  7081  001A60                     __ptext30:
  7082                           	opt callstack 0
  7083  001A60                     _TFT_DrawPixel:
  7084                           	opt callstack 23
  7085  001A60                     
  7086                           ;TFT.c: 168: uint16_t h, v;;TFT.c: 169: switch(TFT_OrientationGet()) {
  7087  001A60  EF6A  F00D         	goto	l3320
  7088  001A64                     l259:
  7089                           
  7090                           ;TFT.c: 171: h = x;
  7091  001A64  C00D  F013         	movff	TFT_DrawPixel@x,TFT_DrawPixel@h
  7092  001A68  C00E  F014         	movff	TFT_DrawPixel@x+1,TFT_DrawPixel@h+1
  7093                           
  7094                           ;TFT.c: 172: v = y;
  7095  001A6C  C00F  F015         	movff	TFT_DrawPixel@y,TFT_DrawPixel@v
  7096  001A70  C010  F016         	movff	TFT_DrawPixel@y+1,TFT_DrawPixel@v+1
  7097                           
  7098                           ;TFT.c: 173: break;
  7099  001A74  EF7E  F00D         	goto	l3322
  7100  001A78                     l3310:
  7101                           
  7102                           ;TFT.c: 175: h = 240 - y - 1;
  7103  001A78  500F               	movf	TFT_DrawPixel@y^0,w,c
  7104  001A7A  08EF               	sublw	239
  7105  001A7C  6E13               	movwf	TFT_DrawPixel@h^0,c
  7106  001A7E  5010               	movf	(TFT_DrawPixel@y+1)^0,w,c
  7107  001A80  A0D8               	btfss	status,0,c
  7108  001A82  2AE8               	incf	wreg,f,c
  7109  001A84  0800               	sublw	0
  7110  001A86  6E14               	movwf	(TFT_DrawPixel@h+1)^0,c
  7111  001A88                     
  7112                           ;TFT.c: 176: v = x;
  7113  001A88  C00D  F015         	movff	TFT_DrawPixel@x,TFT_DrawPixel@v
  7114  001A8C  C00E  F016         	movff	TFT_DrawPixel@x+1,TFT_DrawPixel@v+1
  7115                           
  7116                           ;TFT.c: 177: break;
  7117  001A90  EF7E  F00D         	goto	l3322
  7118  001A94                     l3314:
  7119                           
  7120                           ;TFT.c: 179: h = 240 - x - 1;
  7121  001A94  500D               	movf	TFT_DrawPixel@x^0,w,c
  7122  001A96  08EF               	sublw	239
  7123  001A98  6E13               	movwf	TFT_DrawPixel@h^0,c
  7124  001A9A  500E               	movf	(TFT_DrawPixel@x+1)^0,w,c
  7125  001A9C  A0D8               	btfss	status,0,c
  7126  001A9E  2AE8               	incf	wreg,f,c
  7127  001AA0  0800               	sublw	0
  7128  001AA2  6E14               	movwf	(TFT_DrawPixel@h+1)^0,c
  7129                           
  7130                           ;TFT.c: 180: v = 400 - y - 1;
  7131  001AA4  500F               	movf	TFT_DrawPixel@y^0,w,c
  7132  001AA6  088F               	sublw	143
  7133  001AA8  6E15               	movwf	TFT_DrawPixel@v^0,c
  7134  001AAA  5010               	movf	(TFT_DrawPixel@y+1)^0,w,c
  7135  001AAC  A0D8               	btfss	status,0,c
  7136  001AAE  2AE8               	incf	wreg,f,c
  7137  001AB0  0801               	sublw	1
  7138  001AB2  6E16               	movwf	(TFT_DrawPixel@v+1)^0,c
  7139                           
  7140                           ;TFT.c: 181: break;
  7141  001AB4  EF7E  F00D         	goto	l3322
  7142  001AB8                     l263:
  7143                           
  7144                           ;TFT.c: 183: h = y;
  7145  001AB8  C00F  F013         	movff	TFT_DrawPixel@y,TFT_DrawPixel@h
  7146  001ABC  C010  F014         	movff	TFT_DrawPixel@y+1,TFT_DrawPixel@h+1
  7147  001AC0                     
  7148                           ;TFT.c: 184: v = 400 - x - 1;
  7149  001AC0  500D               	movf	TFT_DrawPixel@x^0,w,c
  7150  001AC2  088F               	sublw	143
  7151  001AC4  6E15               	movwf	TFT_DrawPixel@v^0,c
  7152  001AC6  500E               	movf	(TFT_DrawPixel@x+1)^0,w,c
  7153  001AC8  A0D8               	btfss	status,0,c
  7154  001ACA  2AE8               	incf	wreg,f,c
  7155  001ACC  0801               	sublw	1
  7156  001ACE  6E16               	movwf	(TFT_DrawPixel@v+1)^0,c
  7157                           
  7158                           ;TFT.c: 185: break;
  7159  001AD0  EF7E  F00D         	goto	l3322
  7160  001AD4                     l3320:
  7161  001AD4  ECE3  F017         	call	_TFT_OrientationGet	;wreg free
  7162                           
  7163                           ; Switch size 1, requested type "simple"
  7164                           ; Number of cases is 4, Range of values is 0 to 3
  7165                           ; switch strategies available:
  7166                           ; Name         Instructions Cycles
  7167                           ; simple_byte           13     7 (average)
  7168                           ;	Chosen strategy is simple_byte
  7169  001AD8  0A00               	xorlw	0	; case 0
  7170  001ADA  B4D8               	btfsc	status,2,c
  7171  001ADC  EF32  F00D         	goto	l259
  7172  001AE0  0A01               	xorlw	1	; case 1
  7173  001AE2  B4D8               	btfsc	status,2,c
  7174  001AE4  EF3C  F00D         	goto	l3310
  7175  001AE8  0A03               	xorlw	3	; case 2
  7176  001AEA  B4D8               	btfsc	status,2,c
  7177  001AEC  EF4A  F00D         	goto	l3314
  7178  001AF0  0A01               	xorlw	1	; case 3
  7179  001AF2  B4D8               	btfsc	status,2,c
  7180  001AF4  EF5C  F00D         	goto	l263
  7181  001AF8  EF7E  F00D         	goto	l3322
  7182  001AFC                     l3322:
  7183                           
  7184                           ;TFT.c: 187: TFT_WriteRegister(0x0200, h);
  7185  001AFC  0E02               	movlw	2
  7186  001AFE  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7187  001B00  0E00               	movlw	0
  7188  001B02  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7189  001B04  C013  F007         	movff	TFT_DrawPixel@h,TFT_WriteRegister@data
  7190  001B08  C014  F008         	movff	TFT_DrawPixel@h+1,TFT_WriteRegister@data+1
  7191  001B0C  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7192                           
  7193                           ;TFT.c: 188: TFT_WriteRegister(0x0201, v);
  7194  001B10  0E02               	movlw	2
  7195  001B12  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7196  001B14  0E01               	movlw	1
  7197  001B16  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7198  001B18  C015  F007         	movff	TFT_DrawPixel@v,TFT_WriteRegister@data
  7199  001B1C  C016  F008         	movff	TFT_DrawPixel@v+1,TFT_WriteRegister@data+1
  7200  001B20  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7201                           
  7202                           ;TFT.c: 189: TFT_WriteRegister(0x0202, color);
  7203  001B24  0E02               	movlw	2
  7204  001B26  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7205  001B28  0E02               	movlw	2
  7206  001B2A  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7207  001B2C  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  7208  001B30  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  7209  001B34  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7210  001B38  0012               	return		;funcret
  7211  001B3A                     __end_of_TFT_DrawPixel:
  7212                           	opt callstack 0
  7213                           
  7214 ;; *************** function _TFT_DrawFillRect *****************
  7215 ;; Defined at:
  7216 ;;		line 230 in file "TFT.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;  x               2   31[COMRAM] unsigned int 
  7219 ;;  y               2   33[COMRAM] unsigned int 
  7220 ;;  w               2   35[COMRAM] unsigned int 
  7221 ;;  h               2   37[COMRAM] unsigned int 
  7222 ;;  color           2   39[COMRAM] unsigned int 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;		None
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7234 ;;      Params:        10       0       0       0       0       0       0       0       0
  7235 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7236 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7237 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7238 ;;Total ram usage:       14 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:    5
  7241 ;; This function calls:
  7242 ;;		_TFT_Flood
  7243 ;;		_TFT_FullScreen
  7244 ;;		_TFT_SetAddrWindow
  7245 ;;		___wmul
  7246 ;; This function is called by:
  7247 ;;		_refreshGSM
  7248 ;;		_TFT_DrawChar
  7249 ;;		_Ecg_ProcessHeartbeat
  7250 ;;		_Ecg_Draw
  7251 ;;		_TFT_ConsolePrintLine
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255                           	psect	text31
  7256  00239A                     __ptext31:
  7257                           	opt callstack 0
  7258  00239A                     _TFT_DrawFillRect:
  7259                           	opt callstack 21
  7260  00239A                     
  7261                           ;TFT.c: 231: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h - 1));
  7262  00239A  C020  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  7263  00239E  C021  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  7264  0023A2  C022  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  7265  0023A6  C023  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  7266  0023AA  5024               	movf	TFT_DrawFillRect@w^0,w,c
  7267  0023AC  2420               	addwf	TFT_DrawFillRect@x^0,w,c
  7268  0023AE  6E2A               	movwf	??_TFT_DrawFillRect^0,c
  7269  0023B0  5025               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  7270  0023B2  2021               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  7271  0023B4  6E2B               	movwf	(??_TFT_DrawFillRect+1)^0,c
  7272  0023B6  0EFF               	movlw	255
  7273  0023B8  242A               	addwf	??_TFT_DrawFillRect^0,w,c
  7274  0023BA  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  7275  0023BC  0EFF               	movlw	255
  7276  0023BE  202B               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  7277  0023C0  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  7278  0023C2  5026               	movf	TFT_DrawFillRect@h^0,w,c
  7279  0023C4  2422               	addwf	TFT_DrawFillRect@y^0,w,c
  7280  0023C6  6E2C               	movwf	(??_TFT_DrawFillRect+2)^0,c
  7281  0023C8  5027               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  7282  0023CA  2023               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  7283  0023CC  6E2D               	movwf	(??_TFT_DrawFillRect+3)^0,c
  7284  0023CE  0EFF               	movlw	255
  7285  0023D0  242C               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  7286  0023D2  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  7287  0023D4  0EFF               	movlw	255
  7288  0023D6  202D               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  7289  0023D8  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  7290  0023DA  EC45  F003         	call	_TFT_SetAddrWindow	;wreg free
  7291  0023DE                     
  7292                           ;TFT.c: 232: TFT_Flood(color, (w * h));
  7293  0023DE  C028  F00F         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  7294  0023E2  C029  F010         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  7295  0023E6  C024  F009         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  7296  0023EA  C025  F00A         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  7297  0023EE  C026  F00B         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  7298  0023F2  C027  F00C         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  7299  0023F6  EC9A  F017         	call	___wmul	;wreg free
  7300  0023FA  C009  F011         	movff	?___wmul,TFT_Flood@len
  7301  0023FE  C00A  F012         	movff	?___wmul+1,TFT_Flood@len+1
  7302  002402  6A13               	clrf	(TFT_Flood@len+2)^0,c
  7303  002404  6A14               	clrf	(TFT_Flood@len+3)^0,c
  7304  002406  EC57  F006         	call	_TFT_Flood	;wreg free
  7305  00240A                     
  7306                           ;TFT.c: 233: TFT_FullScreen(0);
  7307  00240A  0E00               	movlw	0
  7308  00240C  6E1F               	movwf	(TFT_FullScreen@color+1)^0,c
  7309  00240E  0E00               	movlw	0
  7310  002410  6E1E               	movwf	TFT_FullScreen@color^0,c
  7311  002412  EC96  F014         	call	_TFT_FullScreen	;wreg free
  7312  002416  0012               	return		;funcret
  7313  002418                     __end_of_TFT_DrawFillRect:
  7314                           	opt callstack 0
  7315                           
  7316 ;; *************** function _TFT_FullScreen *****************
  7317 ;; Defined at:
  7318 ;;		line 160 in file "TFT.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  color           2   29[COMRAM] unsigned int 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7332 ;;      Params:         2       0       0       0       0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7335 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7336 ;;Total ram usage:        2 bytes
  7337 ;; Hardware stack levels used:    1
  7338 ;; Hardware stack levels required when called:    4
  7339 ;; This function calls:
  7340 ;;		_TFT_Flood
  7341 ;;		_TFT_GetHeight
  7342 ;;		_TFT_GetWidth
  7343 ;;		_TFT_SetAddrWindow
  7344 ;; This function is called by:
  7345 ;;		_TFT_OrientationSet
  7346 ;;		_TFT_DrawFillRect
  7347 ;;		_Ecg_Background_Leads_Ok
  7348 ;;		_Ecg_Background_Leads_Failure
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text32
  7353  00292C                     __ptext32:
  7354                           	opt callstack 0
  7355  00292C                     _TFT_FullScreen:
  7356                           	opt callstack 21
  7357  00292C                     
  7358                           ;TFT.c: 161: TFT_SetAddrWindow(0, 0, TFT_GetWidth(), TFT_GetHeight());
  7359  00292C  0E00               	movlw	0
  7360  00292E  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  7361  002930  0E00               	movlw	0
  7362  002932  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  7363  002934  0E00               	movlw	0
  7364  002936  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  7365  002938  0E00               	movlw	0
  7366  00293A  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  7367  00293C  EC8D  F015         	call	_TFT_GetWidth	;wreg free
  7368  002940  C005  F011         	movff	?_TFT_GetWidth,TFT_SetAddrWindow@x2
  7369  002944  C006  F012         	movff	?_TFT_GetWidth+1,TFT_SetAddrWindow@x2+1
  7370  002948  ECB4  F015         	call	_TFT_GetHeight	;wreg free
  7371  00294C  C005  F013         	movff	?_TFT_GetHeight,TFT_SetAddrWindow@y2
  7372  002950  C006  F014         	movff	?_TFT_GetHeight+1,TFT_SetAddrWindow@y2+1
  7373  002954  EC45  F003         	call	_TFT_SetAddrWindow	;wreg free
  7374  002958                     
  7375                           ;TFT.c: 162: if(color != 0) {
  7376  002958  501E               	movf	TFT_FullScreen@color^0,w,c
  7377  00295A  101F               	iorwf	(TFT_FullScreen@color+1)^0,w,c
  7378  00295C  B4D8               	btfsc	status,2,c
  7379  00295E  EFB3  F014         	goto	u2011
  7380  002962  EFB5  F014         	goto	u2010
  7381  002966                     u2011:
  7382  002966  EFC3  F014         	goto	l255
  7383  00296A                     u2010:
  7384  00296A                     
  7385                           ;TFT.c: 163: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  7386  00296A  C01E  F00F         	movff	TFT_FullScreen@color,TFT_Flood@color
  7387  00296E  C01F  F010         	movff	TFT_FullScreen@color+1,TFT_Flood@color+1
  7388  002972  0E00               	movlw	0
  7389  002974  6E11               	movwf	TFT_Flood@len^0,c
  7390  002976  0E77               	movlw	119
  7391  002978  6E12               	movwf	(TFT_Flood@len+1)^0,c
  7392  00297A  0E01               	movlw	1
  7393  00297C  6E13               	movwf	(TFT_Flood@len+2)^0,c
  7394  00297E  0E00               	movlw	0
  7395  002980  6E14               	movwf	(TFT_Flood@len+3)^0,c
  7396  002982  EC57  F006         	call	_TFT_Flood	;wreg free
  7397  002986                     l255:
  7398  002986  0012               	return		;funcret
  7399  002988                     __end_of_TFT_FullScreen:
  7400                           	opt callstack 0
  7401                           
  7402 ;; *************** function _TFT_SetAddrWindow *****************
  7403 ;; Defined at:
  7404 ;;		line 115 in file "TFT.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  x1              2   12[COMRAM] unsigned int 
  7407 ;;  y1              2   14[COMRAM] unsigned int 
  7408 ;;  x2              2   16[COMRAM] unsigned int 
  7409 ;;  y2              2   18[COMRAM] unsigned int 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7421 ;;      Params:         8       0       0       0       0       0       0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7424 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7425 ;;Total ram usage:        8 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    3
  7428 ;; This function calls:
  7429 ;;		_TFT_OrientationGet
  7430 ;;		_TFT_WriteRegister
  7431 ;; This function is called by:
  7432 ;;		_TFT_FullScreen
  7433 ;;		_TFT_DrawFillRect
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text33
  7438  00068A                     __ptext33:
  7439                           	opt callstack 0
  7440  00068A                     _TFT_SetAddrWindow:
  7441                           	opt callstack 22
  7442  00068A                     
  7443                           ;TFT.c: 116: switch(TFT_OrientationGet()) {
  7444  00068A  EF6F  F004         	goto	l3272
  7445  00068E                     l3250:
  7446                           
  7447                           ;TFT.c: 119: TFT_WriteRegister(0x0210, x1);
  7448  00068E  0E02               	movlw	2
  7449  000690  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7450  000692  0E10               	movlw	16
  7451  000694  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7452  000696  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7453  00069A  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7454  00069E  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7455                           
  7456                           ;TFT.c: 120: TFT_WriteRegister(0x0211, x2);
  7457  0006A2  0E02               	movlw	2
  7458  0006A4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7459  0006A6  0E11               	movlw	17
  7460  0006A8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7461  0006AA  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  7462  0006AE  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  7463  0006B2  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7464                           
  7465                           ;TFT.c: 121: TFT_WriteRegister(0x0212, y1);
  7466  0006B6  0E02               	movlw	2
  7467  0006B8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7468  0006BA  0E12               	movlw	18
  7469  0006BC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7470  0006BE  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7471  0006C2  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7472  0006C6  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7473                           
  7474                           ;TFT.c: 122: TFT_WriteRegister(0x0213, y2);
  7475  0006CA  0E02               	movlw	2
  7476  0006CC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7477  0006CE  0E13               	movlw	19
  7478  0006D0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7479  0006D2  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7480  0006D6  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7481  0006DA  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7482                           
  7483                           ;TFT.c: 124: TFT_WriteRegister(0x0200, x1);
  7484  0006DE  0E02               	movlw	2
  7485  0006E0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7486  0006E2  0E00               	movlw	0
  7487  0006E4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7488  0006E6  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7489  0006EA  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7490  0006EE  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7491                           
  7492                           ;TFT.c: 125: TFT_WriteRegister(0x0201, y2);
  7493  0006F2  0E02               	movlw	2
  7494  0006F4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7495  0006F6  0E01               	movlw	1
  7496  0006F8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7497  0006FA  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7498  0006FE  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7499  000702  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7500                           
  7501                           ;TFT.c: 126: break;
  7502  000706  EF83  F004         	goto	l251
  7503  00070A                     l3252:
  7504                           
  7505                           ;TFT.c: 129: TFT_WriteRegister(0x0210, 240 - 1 - y2);
  7506  00070A  0E02               	movlw	2
  7507  00070C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7508  00070E  0E10               	movlw	16
  7509  000710  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7510  000712  5013               	movf	TFT_SetAddrWindow@y2^0,w,c
  7511  000714  08EF               	sublw	239
  7512  000716  6E07               	movwf	TFT_WriteRegister@data^0,c
  7513  000718  5014               	movf	(TFT_SetAddrWindow@y2+1)^0,w,c
  7514  00071A  A0D8               	btfss	status,0,c
  7515  00071C  2AE8               	incf	wreg,f,c
  7516  00071E  0800               	sublw	0
  7517  000720  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7518  000722  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7519                           
  7520                           ;TFT.c: 130: TFT_WriteRegister(0x0211, 240 - 1 - y1);
  7521  000726  0E02               	movlw	2
  7522  000728  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7523  00072A  0E11               	movlw	17
  7524  00072C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7525  00072E  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7526  000730  08EF               	sublw	239
  7527  000732  6E07               	movwf	TFT_WriteRegister@data^0,c
  7528  000734  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7529  000736  A0D8               	btfss	status,0,c
  7530  000738  2AE8               	incf	wreg,f,c
  7531  00073A  0800               	sublw	0
  7532  00073C  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7533  00073E  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7534  000742                     
  7535                           ;TFT.c: 131: TFT_WriteRegister(0x0212, x1);
  7536  000742  0E02               	movlw	2
  7537  000744  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7538  000746  0E12               	movlw	18
  7539  000748  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7540  00074A  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7541  00074E  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7542  000752  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7543  000756                     
  7544                           ;TFT.c: 132: TFT_WriteRegister(0x0213, x2);
  7545  000756  0E02               	movlw	2
  7546  000758  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7547  00075A  0E13               	movlw	19
  7548  00075C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7549  00075E  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  7550  000762  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  7551  000766  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7552                           
  7553                           ;TFT.c: 134: TFT_WriteRegister(0x0200, 240 - 1 - y1);
  7554  00076A  0E02               	movlw	2
  7555  00076C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7556  00076E  0E00               	movlw	0
  7557  000770  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7558  000772  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7559  000774  08EF               	sublw	239
  7560  000776  6E07               	movwf	TFT_WriteRegister@data^0,c
  7561  000778  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7562  00077A  A0D8               	btfss	status,0,c
  7563  00077C  2AE8               	incf	wreg,f,c
  7564  00077E  0800               	sublw	0
  7565  000780  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7566  000782  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7567  000786                     
  7568                           ;TFT.c: 135: TFT_WriteRegister(0x0201, x1);
  7569  000786  0E02               	movlw	2
  7570  000788  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7571  00078A  0E01               	movlw	1
  7572  00078C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7573  00078E  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7574  000792  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7575  000796  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7576                           
  7577                           ;TFT.c: 136: break;
  7578  00079A  EF83  F004         	goto	l251
  7579  00079E                     l3260:
  7580                           
  7581                           ;TFT.c: 139: TFT_WriteRegister(0x0210, 240 - 1 - x2);
  7582  00079E  0E02               	movlw	2
  7583  0007A0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7584  0007A2  0E10               	movlw	16
  7585  0007A4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7586  0007A6  5011               	movf	TFT_SetAddrWindow@x2^0,w,c
  7587  0007A8  08EF               	sublw	239
  7588  0007AA  6E07               	movwf	TFT_WriteRegister@data^0,c
  7589  0007AC  5012               	movf	(TFT_SetAddrWindow@x2+1)^0,w,c
  7590  0007AE  A0D8               	btfss	status,0,c
  7591  0007B0  2AE8               	incf	wreg,f,c
  7592  0007B2  0800               	sublw	0
  7593  0007B4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7594  0007B6  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7595                           
  7596                           ;TFT.c: 140: TFT_WriteRegister(0x0211, 240 - 1 - x1);
  7597  0007BA  0E02               	movlw	2
  7598  0007BC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7599  0007BE  0E11               	movlw	17
  7600  0007C0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7601  0007C2  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7602  0007C4  08EF               	sublw	239
  7603  0007C6  6E07               	movwf	TFT_WriteRegister@data^0,c
  7604  0007C8  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7605  0007CA  A0D8               	btfss	status,0,c
  7606  0007CC  2AE8               	incf	wreg,f,c
  7607  0007CE  0800               	sublw	0
  7608  0007D0  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7609  0007D2  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7610                           
  7611                           ;TFT.c: 141: TFT_WriteRegister(0x0212, 400 - 1 - y2);
  7612  0007D6  0E02               	movlw	2
  7613  0007D8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7614  0007DA  0E12               	movlw	18
  7615  0007DC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7616  0007DE  5013               	movf	TFT_SetAddrWindow@y2^0,w,c
  7617  0007E0  088F               	sublw	143
  7618  0007E2  6E07               	movwf	TFT_WriteRegister@data^0,c
  7619  0007E4  5014               	movf	(TFT_SetAddrWindow@y2+1)^0,w,c
  7620  0007E6  A0D8               	btfss	status,0,c
  7621  0007E8  2AE8               	incf	wreg,f,c
  7622  0007EA  0801               	sublw	1
  7623  0007EC  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7624  0007EE  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7625                           
  7626                           ;TFT.c: 142: TFT_WriteRegister(0x0213, 400 - 1 - y1);
  7627  0007F2  0E02               	movlw	2
  7628  0007F4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7629  0007F6  0E13               	movlw	19
  7630  0007F8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7631  0007FA  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7632  0007FC  088F               	sublw	143
  7633  0007FE  6E07               	movwf	TFT_WriteRegister@data^0,c
  7634  000800  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7635  000802  A0D8               	btfss	status,0,c
  7636  000804  2AE8               	incf	wreg,f,c
  7637  000806  0801               	sublw	1
  7638  000808  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7639  00080A  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7640                           
  7641                           ;TFT.c: 144: TFT_WriteRegister(0x0200, 240 - 1 - x1);
  7642  00080E  0E02               	movlw	2
  7643  000810  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7644  000812  0E00               	movlw	0
  7645  000814  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7646  000816  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7647  000818  08EF               	sublw	239
  7648  00081A  6E07               	movwf	TFT_WriteRegister@data^0,c
  7649  00081C  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7650  00081E  A0D8               	btfss	status,0,c
  7651  000820  2AE8               	incf	wreg,f,c
  7652  000822  0800               	sublw	0
  7653  000824  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7654  000826  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7655                           
  7656                           ;TFT.c: 145: TFT_WriteRegister(0x0201, 400 - 1 - y1);
  7657  00082A  0E02               	movlw	2
  7658  00082C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7659  00082E  0E01               	movlw	1
  7660  000830  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7661  000832  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7662  000834  088F               	sublw	143
  7663  000836  6E07               	movwf	TFT_WriteRegister@data^0,c
  7664  000838  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7665  00083A  A0D8               	btfss	status,0,c
  7666  00083C  2AE8               	incf	wreg,f,c
  7667  00083E  0801               	sublw	1
  7668  000840  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7669  000842  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7670                           
  7671                           ;TFT.c: 146: break;
  7672  000846  EF83  F004         	goto	l251
  7673  00084A                     l3262:
  7674                           
  7675                           ;TFT.c: 149: TFT_WriteRegister(0x0210, y1);
  7676  00084A  0E02               	movlw	2
  7677  00084C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7678  00084E  0E10               	movlw	16
  7679  000850  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7680  000852  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7681  000856  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7682  00085A  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7683                           
  7684                           ;TFT.c: 150: TFT_WriteRegister(0x0211, y2);
  7685  00085E  0E02               	movlw	2
  7686  000860  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7687  000862  0E11               	movlw	17
  7688  000864  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7689  000866  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7690  00086A  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7691  00086E  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7692  000872                     
  7693                           ;TFT.c: 151: TFT_WriteRegister(0x0212, 400 - 1 - x2);
  7694  000872  0E02               	movlw	2
  7695  000874  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7696  000876  0E12               	movlw	18
  7697  000878  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7698  00087A  5011               	movf	TFT_SetAddrWindow@x2^0,w,c
  7699  00087C  088F               	sublw	143
  7700  00087E  6E07               	movwf	TFT_WriteRegister@data^0,c
  7701  000880  5012               	movf	(TFT_SetAddrWindow@x2+1)^0,w,c
  7702  000882  A0D8               	btfss	status,0,c
  7703  000884  2AE8               	incf	wreg,f,c
  7704  000886  0801               	sublw	1
  7705  000888  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7706  00088A  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7707  00088E                     
  7708                           ;TFT.c: 152: TFT_WriteRegister(0x0213, 400 - 1 - x1);
  7709  00088E  0E02               	movlw	2
  7710  000890  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7711  000892  0E13               	movlw	19
  7712  000894  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7713  000896  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7714  000898  088F               	sublw	143
  7715  00089A  6E07               	movwf	TFT_WriteRegister@data^0,c
  7716  00089C  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7717  00089E  A0D8               	btfss	status,0,c
  7718  0008A0  2AE8               	incf	wreg,f,c
  7719  0008A2  0801               	sublw	1
  7720  0008A4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7721  0008A6  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7722                           
  7723                           ;TFT.c: 154: TFT_WriteRegister(0x0200, y1);
  7724  0008AA  0E02               	movlw	2
  7725  0008AC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7726  0008AE  0E00               	movlw	0
  7727  0008B0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7728  0008B2  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7729  0008B6  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7730  0008BA  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7731  0008BE                     
  7732                           ;TFT.c: 155: TFT_WriteRegister(0x0201, 400 - 1 - x1);
  7733  0008BE  0E02               	movlw	2
  7734  0008C0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7735  0008C2  0E01               	movlw	1
  7736  0008C4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7737  0008C6  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7738  0008C8  088F               	sublw	143
  7739  0008CA  6E07               	movwf	TFT_WriteRegister@data^0,c
  7740  0008CC  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7741  0008CE  A0D8               	btfss	status,0,c
  7742  0008D0  2AE8               	incf	wreg,f,c
  7743  0008D2  0801               	sublw	1
  7744  0008D4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7745  0008D6  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  7746                           
  7747                           ;TFT.c: 156: break;
  7748  0008DA  EF83  F004         	goto	l251
  7749  0008DE                     l3272:
  7750  0008DE  ECE3  F017         	call	_TFT_OrientationGet	;wreg free
  7751                           
  7752                           ; Switch size 1, requested type "simple"
  7753                           ; Number of cases is 4, Range of values is 0 to 3
  7754                           ; switch strategies available:
  7755                           ; Name         Instructions Cycles
  7756                           ; simple_byte           13     7 (average)
  7757                           ;	Chosen strategy is simple_byte
  7758  0008E2  0A00               	xorlw	0	; case 0
  7759  0008E4  B4D8               	btfsc	status,2,c
  7760  0008E6  EF47  F003         	goto	l3250
  7761  0008EA  0A01               	xorlw	1	; case 1
  7762  0008EC  B4D8               	btfsc	status,2,c
  7763  0008EE  EF85  F003         	goto	l3252
  7764  0008F2  0A03               	xorlw	3	; case 2
  7765  0008F4  B4D8               	btfsc	status,2,c
  7766  0008F6  EFCF  F003         	goto	l3260
  7767  0008FA  0A01               	xorlw	1	; case 3
  7768  0008FC  B4D8               	btfsc	status,2,c
  7769  0008FE  EF25  F004         	goto	l3262
  7770  000902  EF83  F004         	goto	l251
  7771  000906                     l251:
  7772  000906  0012               	return		;funcret
  7773  000908                     __end_of_TFT_SetAddrWindow:
  7774                           	opt callstack 0
  7775                           
  7776 ;; *************** function _TFT_GetWidth *****************
  7777 ;; Defined at:
  7778 ;;		line 81 in file "TFT.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;		None
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;		None
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  2    4[COMRAM] unsigned int 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0, cstack
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7792 ;;      Params:         2       0       0       0       0       0       0       0       0
  7793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7795 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7796 ;;Total ram usage:        2 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:    3
  7799 ;; This function calls:
  7800 ;;		_TFT_OrientationGet
  7801 ;; This function is called by:
  7802 ;;		_refreshGSM
  7803 ;;		_TFT_FullScreen
  7804 ;;		_Ecg_Draw
  7805 ;;		_Ecg_Background_Leads_Ok
  7806 ;;		_TFT_ConsolePrintLine
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text34
  7811  002B1A                     __ptext34:
  7812                           	opt callstack 0
  7813  002B1A                     _TFT_GetWidth:
  7814                           	opt callstack 25
  7815  002B1A                     
  7816                           ;TFT.c: 82: switch(TFT_OrientationGet()) {
  7817  002B1A  EF9B  F015         	goto	l3224
  7818  002B1E                     l3214:
  7819                           
  7820                           ;TFT.c: 84: case 2:;TFT.c: 85: return 240 - 1;
  7821  002B1E  0E00               	movlw	0
  7822  002B20  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7823  002B22  0EEF               	movlw	239
  7824  002B24  6E05               	movwf	?_TFT_GetWidth^0,c
  7825  002B26  EFB3  F015         	goto	l223
  7826  002B2A                     l3218:
  7827                           
  7828                           ;TFT.c: 87: case 3:;TFT.c: 88: return 400 - 1;
  7829  002B2A  0E01               	movlw	1
  7830  002B2C  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7831  002B2E  0E8F               	movlw	143
  7832  002B30  6E05               	movwf	?_TFT_GetWidth^0,c
  7833  002B32  EFB3  F015         	goto	l223
  7834  002B36                     l3224:
  7835  002B36  ECE3  F017         	call	_TFT_OrientationGet	;wreg free
  7836                           
  7837                           ; Switch size 1, requested type "simple"
  7838                           ; Number of cases is 4, Range of values is 0 to 3
  7839                           ; switch strategies available:
  7840                           ; Name         Instructions Cycles
  7841                           ; simple_byte           13     7 (average)
  7842                           ;	Chosen strategy is simple_byte
  7843  002B3A  0A00               	xorlw	0	; case 0
  7844  002B3C  B4D8               	btfsc	status,2,c
  7845  002B3E  EF8F  F015         	goto	l3214
  7846  002B42  0A01               	xorlw	1	; case 1
  7847  002B44  B4D8               	btfsc	status,2,c
  7848  002B46  EF95  F015         	goto	l3218
  7849  002B4A  0A03               	xorlw	3	; case 2
  7850  002B4C  B4D8               	btfsc	status,2,c
  7851  002B4E  EF8F  F015         	goto	l3214
  7852  002B52  0A01               	xorlw	1	; case 3
  7853  002B54  B4D8               	btfsc	status,2,c
  7854  002B56  EF95  F015         	goto	l3218
  7855  002B5A  EFAF  F015         	goto	l3226
  7856  002B5E                     l3226:
  7857                           
  7858                           ;TFT.c: 90: return 0;
  7859  002B5E  0E00               	movlw	0
  7860  002B60  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7861  002B62  0E00               	movlw	0
  7862  002B64  6E05               	movwf	?_TFT_GetWidth^0,c
  7863  002B66                     l223:
  7864  002B66  0012               	return		;funcret
  7865  002B68                     __end_of_TFT_GetWidth:
  7866                           	opt callstack 0
  7867                           
  7868 ;; *************** function _TFT_GetHeight *****************
  7869 ;; Defined at:
  7870 ;;		line 93 in file "TFT.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;		None
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  2    4[COMRAM] unsigned int 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7884 ;;      Params:         2       0       0       0       0       0       0       0       0
  7885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7887 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7888 ;;Total ram usage:        2 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; Hardware stack levels required when called:    3
  7891 ;; This function calls:
  7892 ;;		_TFT_OrientationGet
  7893 ;; This function is called by:
  7894 ;;		_TFT_FullScreen
  7895 ;;		_Ecg_Draw
  7896 ;;		_Ecg_Background_Leads_Ok
  7897 ;;		_TFT_ConsolePrintLine
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text35
  7902  002B68                     __ptext35:
  7903                           	opt callstack 0
  7904  002B68                     _TFT_GetHeight:
  7905                           	opt callstack 21
  7906  002B68                     
  7907                           ;TFT.c: 94: switch(TFT_OrientationGet()) {
  7908  002B68  EFC2  F015         	goto	l3242
  7909  002B6C                     l3232:
  7910                           
  7911                           ;TFT.c: 96: case 2:;TFT.c: 97: return 400 - 1;
  7912  002B6C  0E01               	movlw	1
  7913  002B6E  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  7914  002B70  0E8F               	movlw	143
  7915  002B72  6E05               	movwf	?_TFT_GetHeight^0,c
  7916  002B74  EFDA  F015         	goto	l232
  7917  002B78                     l3236:
  7918                           
  7919                           ;TFT.c: 99: case 3:;TFT.c: 100: return 240 - 1;
  7920  002B78  0E00               	movlw	0
  7921  002B7A  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  7922  002B7C  0EEF               	movlw	239
  7923  002B7E  6E05               	movwf	?_TFT_GetHeight^0,c
  7924  002B80  EFDA  F015         	goto	l232
  7925  002B84                     l3242:
  7926  002B84  ECE3  F017         	call	_TFT_OrientationGet	;wreg free
  7927                           
  7928                           ; Switch size 1, requested type "simple"
  7929                           ; Number of cases is 4, Range of values is 0 to 3
  7930                           ; switch strategies available:
  7931                           ; Name         Instructions Cycles
  7932                           ; simple_byte           13     7 (average)
  7933                           ;	Chosen strategy is simple_byte
  7934  002B88  0A00               	xorlw	0	; case 0
  7935  002B8A  B4D8               	btfsc	status,2,c
  7936  002B8C  EFB6  F015         	goto	l3232
  7937  002B90  0A01               	xorlw	1	; case 1
  7938  002B92  B4D8               	btfsc	status,2,c
  7939  002B94  EFBC  F015         	goto	l3236
  7940  002B98  0A03               	xorlw	3	; case 2
  7941  002B9A  B4D8               	btfsc	status,2,c
  7942  002B9C  EFB6  F015         	goto	l3232
  7943  002BA0  0A01               	xorlw	1	; case 3
  7944  002BA2  B4D8               	btfsc	status,2,c
  7945  002BA4  EFBC  F015         	goto	l3236
  7946  002BA8  EFD6  F015         	goto	l3244
  7947  002BAC                     l3244:
  7948                           
  7949                           ;TFT.c: 102: return 0;
  7950  002BAC  0E00               	movlw	0
  7951  002BAE  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  7952  002BB0  0E00               	movlw	0
  7953  002BB2  6E05               	movwf	?_TFT_GetHeight^0,c
  7954  002BB4                     l232:
  7955  002BB4  0012               	return		;funcret
  7956  002BB6                     __end_of_TFT_GetHeight:
  7957                           	opt callstack 0
  7958                           
  7959 ;; *************** function _TFT_OrientationGet *****************
  7960 ;; Defined at:
  7961 ;;		line 105 in file "TFT.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;		None
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      unsigned char 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7975 ;;      Params:         0       0       0       0       0       0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7978 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7979 ;;Total ram usage:        0 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    2
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_TFT_GetWidth
  7986 ;;		_TFT_GetHeight
  7987 ;;		_TFT_SetAddrWindow
  7988 ;;		_TFT_DrawPixel
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text36
  7993  002FC6                     __ptext36:
  7994                           	opt callstack 0
  7995  002FC6                     _TFT_OrientationGet:
  7996                           	opt callstack 25
  7997  002FC6                     
  7998                           ;TFT.c: 106: return TFT_Orientation;
  7999  002FC6  5054               	movf	_TFT_Orientation^0,w,c
  8000  002FC8  0012               	return		;funcret
  8001  002FCA                     __end_of_TFT_OrientationGet:
  8002                           	opt callstack 0
  8003                           
  8004 ;; *************** function _TFT_Flood *****************
  8005 ;; Defined at:
  8006 ;;		line 236 in file "TFT.c"
  8007 ;; Parameters:    Size  Location     Type
  8008 ;;  color           2   14[COMRAM] unsigned int 
  8009 ;;  len             4   16[COMRAM] unsigned long 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  blocks          2   24[COMRAM] unsigned int 
  8012 ;;  color_lo        1   28[COMRAM] unsigned char 
  8013 ;;  color_hi        1   27[COMRAM] unsigned char 
  8014 ;;  i               1   26[COMRAM] unsigned char 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  1    wreg      void 
  8017 ;; Registers used:
  8018 ;;		wreg, status,2, status,0, cstack
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8024 ;;      Params:         6       0       0       0       0       0       0       0       0
  8025 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8026 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8027 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8028 ;;Total ram usage:       15 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    3
  8031 ;; This function calls:
  8032 ;;		_TFT_WriteRegister
  8033 ;; This function is called by:
  8034 ;;		_TFT_FullScreen
  8035 ;;		_TFT_DrawFillRect
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           	psect	text37
  8040  000CAE                     __ptext37:
  8041                           	opt callstack 0
  8042  000CAE                     _TFT_Flood:
  8043                           	opt callstack 21
  8044  000CAE                     
  8045                           ;TFT.c: 237: uint16_t blocks;;TFT.c: 238: uint8_t i;;TFT.c: 239: uint8_t color_hi = colo
      +                          r >> 8;
  8046  000CAE  5010               	movf	(TFT_Flood@color+1)^0,w,c
  8047  000CB0  6E1C               	movwf	TFT_Flood@color_hi^0,c
  8048  000CB2                     
  8049                           ;TFT.c: 240: uint8_t color_lo = color;
  8050  000CB2  C00F  F01D         	movff	TFT_Flood@color,TFT_Flood@color_lo
  8051  000CB6                     
  8052                           ;TFT.c: 243: TFT_WriteRegister(0x0202, color);
  8053  000CB6  0E02               	movlw	2
  8054  000CB8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8055  000CBA  0E02               	movlw	2
  8056  000CBC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8057  000CBE  C00F  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  8058  000CC2  C010  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  8059  000CC6  EC4C  F016         	call	_TFT_WriteRegister	;wreg free
  8060  000CCA                     
  8061                           ;TFT.c: 244: len--;
  8062  000CCA  0611               	decf	TFT_Flood@len^0,f,c
  8063  000CCC  0E00               	movlw	0
  8064  000CCE  5A12               	subwfb	(TFT_Flood@len+1)^0,f,c
  8065  000CD0  5A13               	subwfb	(TFT_Flood@len+2)^0,f,c
  8066  000CD2  5A14               	subwfb	(TFT_Flood@len+3)^0,f,c
  8067  000CD4                     
  8068                           ;TFT.c: 248: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  8069  000CD4  9082               	bcf	130,0,c	;volatile
  8070  000CD6  F000               	nop		;# 
  8071  000CD8                     
  8072                           ;TFT.c: 249: blocks = (uint16_t)(len / 4);
  8073  000CD8  C011  F015         	movff	TFT_Flood@len,??_TFT_Flood
  8074  000CDC  C012  F016         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  8075  000CE0  C013  F017         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  8076  000CE4  C014  F018         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  8077  000CE8  0E03               	movlw	3
  8078  000CEA  EF7C  F006         	goto	u1950
  8079  000CEE                     u1955:
  8080  000CEE  90D8               	bcf	status,0,c
  8081  000CF0  3218               	rrcf	(??_TFT_Flood+3)^0,f,c
  8082  000CF2  3217               	rrcf	(??_TFT_Flood+2)^0,f,c
  8083  000CF4  3216               	rrcf	(??_TFT_Flood+1)^0,f,c
  8084  000CF6  3215               	rrcf	??_TFT_Flood^0,f,c
  8085  000CF8                     u1950:
  8086  000CF8  2EE8               	decfsz	wreg,f,c
  8087  000CFA  EF77  F006         	goto	u1955
  8088  000CFE  C015  F019         	movff	??_TFT_Flood,TFT_Flood@blocks
  8089  000D02  C016  F01A         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  8090  000D06                     
  8091                           ;TFT.c: 250: if(color_hi == color_lo) {
  8092  000D06  501D               	movf	TFT_Flood@color_lo^0,w,c
  8093  000D08  181C               	xorwf	TFT_Flood@color_hi^0,w,c
  8094  000D0A  A4D8               	btfss	status,2,c
  8095  000D0C  EF8A  F006         	goto	u1961
  8096  000D10  EF8C  F006         	goto	u1960
  8097  000D14                     u1961:
  8098  000D14  EFF1  F006         	goto	l3296
  8099  000D18                     u1960:
  8100  000D18  EFA6  F006         	goto	l3290
  8101  000D1C                     l285:
  8102                           
  8103                           ;TFT.c: 252: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8104  000D1C  9A80               	bcf	128,5,c	;volatile
  8105  000D1E  F000               	nop		;# 
  8106  000D20  8A80               	bsf	128,5,c	;volatile
  8107  000D22  9A80               	bcf	128,5,c	;volatile
  8108  000D24  F000               	nop		;# 
  8109  000D26  8A80               	bsf	128,5,c	;volatile
  8110                           
  8111                           ;TFT.c: 253: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8112  000D28  9A80               	bcf	128,5,c	;volatile
  8113  000D2A  F000               	nop		;# 
  8114  000D2C  8A80               	bsf	128,5,c	;volatile
  8115  000D2E  9A80               	bcf	128,5,c	;volatile
  8116  000D30  F000               	nop		;# 
  8117  000D32  8A80               	bsf	128,5,c	;volatile
  8118                           
  8119                           ;TFT.c: 254: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8120  000D34  9A80               	bcf	128,5,c	;volatile
  8121  000D36  F000               	nop		;# 
  8122  000D38  8A80               	bsf	128,5,c	;volatile
  8123  000D3A  9A80               	bcf	128,5,c	;volatile
  8124  000D3C  F000               	nop		;# 
  8125  000D3E  8A80               	bsf	128,5,c	;volatile
  8126                           
  8127                           ;TFT.c: 255: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8128  000D40  9A80               	bcf	128,5,c	;volatile
  8129  000D42  F000               	nop		;# 
  8130  000D44  8A80               	bsf	128,5,c	;volatile
  8131  000D46  9A80               	bcf	128,5,c	;volatile
  8132  000D48  F000               	nop		;# 
  8133  000D4A  8A80               	bsf	128,5,c	;volatile
  8134  000D4C                     l3290:
  8135  000D4C  0619               	decf	TFT_Flood@blocks^0,f,c
  8136  000D4E  A0D8               	btfss	status,0,c
  8137  000D50  061A               	decf	(TFT_Flood@blocks+1)^0,f,c
  8138  000D52  2819               	incf	TFT_Flood@blocks^0,w,c
  8139  000D54  E106               	bnz	u1971
  8140  000D56  281A               	incf	(TFT_Flood@blocks+1)^0,w,c
  8141  000D58  A4D8               	btfss	status,2,c
  8142  000D5A  EFB1  F006         	goto	u1971
  8143  000D5E  EFB3  F006         	goto	u1970
  8144  000D62                     u1971:
  8145  000D62  EF8E  F006         	goto	l285
  8146  000D66                     u1970:
  8147  000D66                     
  8148                           ;TFT.c: 256: };TFT.c: 257: for(i = (uint8_t)len & 3; i--; ) {
  8149  000D66  5011               	movf	TFT_Flood@len^0,w,c
  8150  000D68  0B03               	andlw	3
  8151  000D6A  6E1B               	movwf	TFT_Flood@i^0,c
  8152  000D6C  EFBE  F006         	goto	l3294
  8153  000D70                     l288:
  8154                           
  8155                           ;TFT.c: 258: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8156  000D70  9A80               	bcf	128,5,c	;volatile
  8157  000D72  F000               	nop		;# 
  8158  000D74  8A80               	bsf	128,5,c	;volatile
  8159  000D76  9A80               	bcf	128,5,c	;volatile
  8160  000D78  F000               	nop		;# 
  8161  000D7A  8A80               	bsf	128,5,c	;volatile
  8162  000D7C                     l3294:
  8163  000D7C  061B               	decf	TFT_Flood@i^0,f,c
  8164  000D7E  281B               	incf	TFT_Flood@i^0,w,c
  8165  000D80  A4D8               	btfss	status,2,c
  8166  000D82  EFC5  F006         	goto	u1981
  8167  000D86  EFC7  F006         	goto	u1980
  8168  000D8A                     u1981:
  8169  000D8A  EFB8  F006         	goto	l288
  8170  000D8E                     u1980:
  8171  000D8E  EF16  F007         	goto	l290
  8172  000D92                     l292:
  8173                           
  8174                           ;TFT.c: 262: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8175  000D92  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8176  000D96  9A80               	bcf	128,5,c	;volatile
  8177  000D98  F000               	nop		;# 
  8178  000D9A  8A80               	bsf	128,5,c	;volatile
  8179  000D9C  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8180  000DA0  9A80               	bcf	128,5,c	;volatile
  8181  000DA2  F000               	nop		;# 
  8182  000DA4  8A80               	bsf	128,5,c	;volatile
  8183                           
  8184                           ;TFT.c: 263: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8185  000DA6  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8186  000DAA  9A80               	bcf	128,5,c	;volatile
  8187  000DAC  F000               	nop		;# 
  8188  000DAE  8A80               	bsf	128,5,c	;volatile
  8189  000DB0  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8190  000DB4  9A80               	bcf	128,5,c	;volatile
  8191  000DB6  F000               	nop		;# 
  8192  000DB8  8A80               	bsf	128,5,c	;volatile
  8193                           
  8194                           ;TFT.c: 264: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8195  000DBA  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8196  000DBE  9A80               	bcf	128,5,c	;volatile
  8197  000DC0  F000               	nop		;# 
  8198  000DC2  8A80               	bsf	128,5,c	;volatile
  8199  000DC4  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8200  000DC8  9A80               	bcf	128,5,c	;volatile
  8201  000DCA  F000               	nop		;# 
  8202  000DCC  8A80               	bsf	128,5,c	;volatile
  8203                           
  8204                           ;TFT.c: 265: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8205  000DCE  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8206  000DD2  9A80               	bcf	128,5,c	;volatile
  8207  000DD4  F000               	nop		;# 
  8208  000DD6  8A80               	bsf	128,5,c	;volatile
  8209  000DD8  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8210  000DDC  9A80               	bcf	128,5,c	;volatile
  8211  000DDE  F000               	nop		;# 
  8212  000DE0  8A80               	bsf	128,5,c	;volatile
  8213  000DE2                     l3296:
  8214  000DE2  0619               	decf	TFT_Flood@blocks^0,f,c
  8215  000DE4  A0D8               	btfss	status,0,c
  8216  000DE6  061A               	decf	(TFT_Flood@blocks+1)^0,f,c
  8217  000DE8  2819               	incf	TFT_Flood@blocks^0,w,c
  8218  000DEA  E106               	bnz	u1991
  8219  000DEC  281A               	incf	(TFT_Flood@blocks+1)^0,w,c
  8220  000DEE  A4D8               	btfss	status,2,c
  8221  000DF0  EFFC  F006         	goto	u1991
  8222  000DF4  EFFE  F006         	goto	u1990
  8223  000DF8                     u1991:
  8224  000DF8  EFC9  F006         	goto	l292
  8225  000DFC                     u1990:
  8226  000DFC                     
  8227                           ;TFT.c: 266: };TFT.c: 267: for(i = (uint8_t)len & 3; i--; ) {
  8228  000DFC  5011               	movf	TFT_Flood@len^0,w,c
  8229  000DFE  0B03               	andlw	3
  8230  000E00  6E1B               	movwf	TFT_Flood@i^0,c
  8231  000E02  EF0D  F007         	goto	l3300
  8232  000E06                     l295:
  8233                           
  8234                           ;TFT.c: 268: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8235  000E06  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8236  000E0A  9A80               	bcf	128,5,c	;volatile
  8237  000E0C  F000               	nop		;# 
  8238  000E0E  8A80               	bsf	128,5,c	;volatile
  8239  000E10  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8240  000E14  9A80               	bcf	128,5,c	;volatile
  8241  000E16  F000               	nop		;# 
  8242  000E18  8A80               	bsf	128,5,c	;volatile
  8243  000E1A                     l3300:
  8244  000E1A  061B               	decf	TFT_Flood@i^0,f,c
  8245  000E1C  281B               	incf	TFT_Flood@i^0,w,c
  8246  000E1E  A4D8               	btfss	status,2,c
  8247  000E20  EF14  F007         	goto	u2001
  8248  000E24  EF16  F007         	goto	u2000
  8249  000E28                     u2001:
  8250  000E28  EF03  F007         	goto	l295
  8251  000E2C                     u2000:
  8252  000E2C                     l290:
  8253                           
  8254                           ;TFT.c: 269: };TFT.c: 270: };TFT.c: 271: PORTCbits.RC0 = 1;;
  8255  000E2C  8082               	bsf	130,0,c	;volatile
  8256  000E2E  0012               	return		;funcret
  8257  000E30                     __end_of_TFT_Flood:
  8258                           	opt callstack 0
  8259                           
  8260 ;; *************** function _TFT_WriteRegister *****************
  8261 ;; Defined at:
  8262 ;;		line 12 in file "TFT.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  reg             2    4[COMRAM] unsigned int 
  8265 ;;  data            2    6[COMRAM] unsigned int 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  l               1   11[COMRAM] unsigned char 
  8268 ;;  h               1   10[COMRAM] unsigned char 
  8269 ;;  l               1    9[COMRAM] unsigned char 
  8270 ;;  h               1    8[COMRAM] unsigned char 
  8271 ;; Return value:  Size  Location     Type
  8272 ;;                  1    wreg      void 
  8273 ;; Registers used:
  8274 ;;		wreg, status,2
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8280 ;;      Params:         4       0       0       0       0       0       0       0       0
  8281 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8283 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8284 ;;Total ram usage:        8 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:    2
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_TFT_Init
  8291 ;;		_TFT_SetAddrWindow
  8292 ;;		_TFT_DrawPixel
  8293 ;;		_TFT_Flood
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           	psect	text38
  8298  002C98                     __ptext38:
  8299                           	opt callstack 0
  8300  002C98                     _TFT_WriteRegister:
  8301                           	opt callstack 23
  8302  002C98                     
  8303                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  8304  002C98  9082               	bcf	130,0,c	;volatile
  8305  002C9A  F000               	nop		;# 
  8306                           
  8307                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  8308  002C9C  9282               	bcf	130,1,c	;volatile
  8309  002C9E  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
  8310  002CA0  6E09               	movwf	TFT_WriteRegister@h^0,c
  8311  002CA2  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
  8312  002CA6  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
  8313  002CAA  9A80               	bcf	128,5,c	;volatile
  8314  002CAC  F000               	nop		;# 
  8315  002CAE  8A80               	bsf	128,5,c	;volatile
  8316  002CB0  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
  8317  002CB4  9A80               	bcf	128,5,c	;volatile
  8318  002CB6  F000               	nop		;# 
  8319  002CB8  8A80               	bsf	128,5,c	;volatile
  8320  002CBA                     
  8321                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  8322  002CBA  8282               	bsf	130,1,c	;volatile
  8323  002CBC  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
  8324  002CBE  6E0B               	movwf	TFT_WriteRegister@h_719^0,c
  8325  002CC0  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_720
  8326  002CC4  C00B  FF81         	movff	TFT_WriteRegister@h_719,3969	;volatile
  8327  002CC8  9A80               	bcf	128,5,c	;volatile
  8328  002CCA  F000               	nop		;# 
  8329  002CCC  8A80               	bsf	128,5,c	;volatile
  8330  002CCE  C00C  FF81         	movff	TFT_WriteRegister@l_720,3969	;volatile
  8331  002CD2  9A80               	bcf	128,5,c	;volatile
  8332  002CD4  F000               	nop		;# 
  8333  002CD6  8A80               	bsf	128,5,c	;volatile
  8334  002CD8                     
  8335                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
  8336  002CD8  8082               	bsf	130,0,c	;volatile
  8337  002CDA  0012               	return		;funcret
  8338  002CDC                     __end_of_TFT_WriteRegister:
  8339                           	opt callstack 0
  8340                           
  8341 ;; *************** function _EUSART_Init *****************
  8342 ;; Defined at:
  8343 ;;		line 12 in file "EUSART.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;		None
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1    wreg      void 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0
  8358 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8360 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8361 ;;Total ram usage:        0 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    3
  8364 ;; This function calls:
  8365 ;;		_memset
  8366 ;; This function is called by:
  8367 ;;		_main
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text39
  8372  002C50                     __ptext39:
  8373                           	opt callstack 0
  8374  002C50                     _EUSART_Init:
  8375                           	opt callstack 27
  8376  002C50                     
  8377                           ;EUSART.c: 14: TXSTAbits.TX9 = 0;
  8378  002C50  9CAC               	bcf	172,6,c	;volatile
  8379                           
  8380                           ;EUSART.c: 15: TXSTAbits.TXEN = 1;
  8381  002C52  8AAC               	bsf	172,5,c	;volatile
  8382                           
  8383                           ;EUSART.c: 16: TXSTAbits.SYNC = 0;
  8384  002C54  98AC               	bcf	172,4,c	;volatile
  8385                           
  8386                           ;EUSART.c: 17: TXSTAbits.SENDB = 0;
  8387  002C56  96AC               	bcf	172,3,c	;volatile
  8388                           
  8389                           ;EUSART.c: 18: TXSTAbits.BRGH = 1;
  8390  002C58  84AC               	bsf	172,2,c	;volatile
  8391                           
  8392                           ;EUSART.c: 21: RCSTAbits.SPEN = 1;
  8393  002C5A  8EAB               	bsf	171,7,c	;volatile
  8394                           
  8395                           ;EUSART.c: 22: RCSTAbits.RX9 = 0;
  8396  002C5C  9CAB               	bcf	171,6,c	;volatile
  8397                           
  8398                           ;EUSART.c: 23: RCSTAbits.CREN = 1;
  8399  002C5E  88AB               	bsf	171,4,c	;volatile
  8400                           
  8401                           ;EUSART.c: 26: BAUDCONbits.BRG16 = 1;
  8402  002C60  86B8               	bsf	184,3,c	;volatile
  8403                           
  8404                           ;EUSART.c: 27: BAUDCONbits.WUE = 0;
  8405  002C62  92B8               	bcf	184,1,c	;volatile
  8406                           
  8407                           ;EUSART.c: 28: BAUDCONbits.ABDEN = 0;
  8408  002C64  90B8               	bcf	184,0,c	;volatile
  8409  002C66                     
  8410                           ;EUSART.c: 29: SPBRGH = 0x04;
  8411  002C66  0E04               	movlw	4
  8412  002C68  6EB0               	movwf	176,c	;volatile
  8413                           
  8414                           ;EUSART.c: 30: SPBRG = 0xE1;
  8415  002C6A  0EE1               	movlw	225
  8416  002C6C  6EAF               	movwf	175,c	;volatile
  8417  002C6E                     
  8418                           ;EUSART.c: 33: RCIE = 1;
  8419  002C6E  8A9D               	bsf	3997,5,c	;volatile
  8420                           
  8421                           ;EUSART.c: 36: EUSART_RX.iRead = 0;
  8422  002C70  0E00               	movlw	0
  8423  002C72  0101               	movlb	1	; () banked
  8424  002C74  6F00               	movwf	_EUSART_RX& (0+255),b
  8425                           
  8426                           ;EUSART.c: 37: EUSART_RX.iWrite = 0;
  8427  002C76  0E00               	movlw	0
  8428  002C78  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
  8429  002C7A                     
  8430                           ; BSR set to: 1
  8431                           ;EUSART.c: 38: memset(EUSART_RX.buffer, 0x00, 128);
  8432  002C7A  0E02               	movlw	low (_EUSART_RX+2)
  8433  002C7C  6E05               	movwf	memset@p1^0,c
  8434  002C7E  0E01               	movlw	high (_EUSART_RX+2)
  8435  002C80  6E06               	movwf	(memset@p1+1)^0,c
  8436  002C82  0E00               	movlw	0
  8437  002C84  6E08               	movwf	(memset@c+1)^0,c
  8438  002C86  0E00               	movlw	0
  8439  002C88  6E07               	movwf	memset@c^0,c
  8440  002C8A  0E00               	movlw	0
  8441  002C8C  6E0A               	movwf	(memset@n+1)^0,c
  8442  002C8E  0E80               	movlw	128
  8443  002C90  6E09               	movwf	memset@n^0,c
  8444  002C92  EC04  F017         	call	_memset	;wreg free
  8445  002C96  0012               	return		;funcret
  8446  002C98                     __end_of_EUSART_Init:
  8447                           	opt callstack 0
  8448                           
  8449 ;; *************** function _A6_Init *****************
  8450 ;; Defined at:
  8451 ;;		line 12 in file "A6Lib.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  baudRate        4   77[COMRAM] const unsigned long 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;		None
  8456 ;; Return value:  Size  Location     Type
  8457 ;;                  1    wreg      void 
  8458 ;; Registers used:
  8459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8460 ;; Tracked objects:
  8461 ;;		On entry : 0/0
  8462 ;;		On exit  : 0/0
  8463 ;;		Unchanged: 0/0
  8464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8465 ;;      Params:         4       0       0       0       0       0       0       0       0
  8466 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8468 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8469 ;;Total ram usage:        4 bytes
  8470 ;; Hardware stack levels used:    1
  8471 ;; Hardware stack levels required when called:    8
  8472 ;; This function calls:
  8473 ;;		_A6_BaudRateAutoDetect
  8474 ;;		_A6_BaudRateSet
  8475 ;;		_A6_Command
  8476 ;; This function is called by:
  8477 ;;		_main
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text40
  8482  002D94                     __ptext40:
  8483                           	opt callstack 0
  8484  002D94                     _A6_Init:
  8485                           	opt callstack 22
  8486  002D94                     
  8487                           ;A6Lib.c: 13: A6_BaudRateAutoDetect();
  8488  002D94  ECF8  F012         	call	_A6_BaudRateAutoDetect	;wreg free
  8489                           
  8490                           ;A6Lib.c: 14: A6_BaudRateSet(baudRate);
  8491  002D98  C04E  F04A         	movff	A6_Init@baudRate,A6_BaudRateSet@baudRate
  8492  002D9C  C04F  F04B         	movff	A6_Init@baudRate+1,A6_BaudRateSet@baudRate+1
  8493  002DA0  C050  F04C         	movff	A6_Init@baudRate+2,A6_BaudRateSet@baudRate+2
  8494  002DA4  C051  F04D         	movff	A6_Init@baudRate+3,A6_BaudRateSet@baudRate+3
  8495  002DA8  ECE5  F00A         	call	_A6_BaudRateSet	;wreg free
  8496  002DAC                     
  8497                           ;A6Lib.c: 15: A6_Command("AT+COPS=3,0\r", 0, (0), 0);
  8498  002DAC  0E87               	movlw	low STR_4
  8499  002DAE  6E18               	movwf	A6_Command@command^0,c
  8500  002DB0  0E5F               	movlw	high STR_4
  8501  002DB2  6E19               	movwf	(A6_Command@command+1)^0,c
  8502  002DB4  0E00               	movlw	0
  8503  002DB6  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  8504  002DB8  0E00               	movlw	0
  8505  002DBA  6E1A               	movwf	A6_Command@timeout^0,c
  8506  002DBC  0E00               	movlw	0
  8507  002DBE  6E1C               	movwf	A6_Command@response^0,c
  8508  002DC0  0E00               	movlw	0
  8509  002DC2  6E1D               	movwf	(A6_Command@response+1)^0,c
  8510  002DC4  0E00               	movlw	0
  8511  002DC6  6E1E               	movwf	A6_Command@responseLen^0,c
  8512  002DC8  EC07  F011         	call	_A6_Command	;wreg free
  8513  002DCC  0012               	return		;funcret
  8514  002DCE                     __end_of_A6_Init:
  8515                           	opt callstack 0
  8516                           
  8517 ;; *************** function _A6_BaudRateSet *****************
  8518 ;; Defined at:
  8519 ;;		line 85 in file "A6Lib.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  baudRate        4   73[COMRAM] const unsigned long 
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;  response       32    0[BANK0 ] unsigned char [32]
  8524 ;;  request        20   32[BANK0 ] unsigned char [20]
  8525 ;;  currentBaudR    4   52[BANK0 ] unsigned long 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  4   73[COMRAM] unsigned long 
  8528 ;; Registers used:
  8529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8535 ;;      Params:         4       0       0       0       0       0       0       0       0
  8536 ;;      Locals:         0      56       0       0       0       0       0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8538 ;;      Totals:         4      56       0       0       0       0       0       0       0
  8539 ;;Total ram usage:       60 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; Hardware stack levels required when called:    7
  8542 ;; This function calls:
  8543 ;;		_A6_BaudRateGet
  8544 ;;		_A6_Command
  8545 ;;		_A6_IsAlive
  8546 ;;		_EUSART_BaudRateSet
  8547 ;;		_sleepMS
  8548 ;;		_sprintf
  8549 ;;		_strcmp
  8550 ;; This function is called by:
  8551 ;;		_A6_Init
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text41
  8556  0015CA                     __ptext41:
  8557                           	opt callstack 0
  8558  0015CA                     _A6_BaudRateSet:
  8559                           	opt callstack 22
  8560  0015CA                     
  8561                           ;A6Lib.c: 86: char request[20];;A6Lib.c: 87: char response[32];;A6Lib.c: 88: uint32_t cu
      +                          rrentBaudRate = A6_BaudRateGet();
  8562  0015CA  ECC7  F009         	call	_A6_BaudRateGet	;wreg free
  8563  0015CE  C01F  F094         	movff	?_A6_BaudRateGet,A6_BaudRateSet@currentBaudRate
  8564  0015D2  C020  F095         	movff	?_A6_BaudRateGet+1,A6_BaudRateSet@currentBaudRate+1
  8565  0015D6  C021  F096         	movff	?_A6_BaudRateGet+2,A6_BaudRateSet@currentBaudRate+2
  8566  0015DA  C022  F097         	movff	?_A6_BaudRateGet+3,A6_BaudRateSet@currentBaudRate+3
  8567  0015DE                     
  8568                           ;A6Lib.c: 91: if(currentBaudRate == 0) return 0;
  8569  0015DE  0100               	movlb	0	; () banked
  8570  0015E0  5194               	movf	A6_BaudRateSet@currentBaudRate& (0+255),w,b
  8571  0015E2  1195               	iorwf	(A6_BaudRateSet@currentBaudRate+1)& (0+255),w,b
  8572  0015E4  1196               	iorwf	(A6_BaudRateSet@currentBaudRate+2)& (0+255),w,b
  8573  0015E6  1197               	iorwf	(A6_BaudRateSet@currentBaudRate+3)& (0+255),w,b
  8574  0015E8  A4D8               	btfss	status,2,c
  8575  0015EA  EFF9  F00A         	goto	u3681
  8576  0015EE  EFFB  F00A         	goto	u3680
  8577  0015F2                     u3681:
  8578  0015F2  EFFD  F00A         	goto	l4408
  8579  0015F6                     u3680:
  8580  0015F6  EF66  F00B         	goto	l586
  8581  0015FA                     l4408:
  8582                           
  8583                           ; BSR set to: 0
  8584                           ;A6Lib.c: 94: sprintf(request, "AT+IPR=%lu\r", baudRate);
  8585  0015FA  0E80               	movlw	low A6_BaudRateSet@request
  8586  0015FC  6E1B               	movwf	sprintf@sp^0,c
  8587  0015FE  0E00               	movlw	high A6_BaudRateSet@request
  8588  001600  6E1C               	movwf	(sprintf@sp+1)^0,c
  8589  001602  0E94               	movlw	low STR_11
  8590  001604  6E1D               	movwf	sprintf@f^0,c
  8591  001606  0E5F               	movlw	high STR_11
  8592  001608  6E1E               	movwf	(sprintf@f+1)^0,c
  8593  00160A  C04A  F01F         	movff	A6_BaudRateSet@baudRate,?_sprintf+4
  8594  00160E  C04B  F020         	movff	A6_BaudRateSet@baudRate+1,?_sprintf+5
  8595  001612  C04C  F021         	movff	A6_BaudRateSet@baudRate+2,?_sprintf+6
  8596  001616  C04D  F022         	movff	A6_BaudRateSet@baudRate+3,?_sprintf+7
  8597  00161A  EC09  F000         	call	_sprintf	;wreg free
  8598  00161E                     
  8599                           ;A6Lib.c: 95: A6_Command(request, 0, response, 32);
  8600  00161E  0E80               	movlw	low A6_BaudRateSet@request
  8601  001620  6E18               	movwf	A6_Command@command^0,c
  8602  001622  0E00               	movlw	high A6_BaudRateSet@request
  8603  001624  6E19               	movwf	(A6_Command@command+1)^0,c
  8604  001626  0E00               	movlw	0
  8605  001628  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  8606  00162A  0E00               	movlw	0
  8607  00162C  6E1A               	movwf	A6_Command@timeout^0,c
  8608  00162E  0E60               	movlw	low A6_BaudRateSet@response
  8609  001630  6E1C               	movwf	A6_Command@response^0,c
  8610  001632  0E00               	movlw	high A6_BaudRateSet@response
  8611  001634  6E1D               	movwf	(A6_Command@response+1)^0,c
  8612  001636  0E20               	movlw	32
  8613  001638  6E1E               	movwf	A6_Command@responseLen^0,c
  8614  00163A  EC07  F011         	call	_A6_Command	;wreg free
  8615  00163E                     
  8616                           ;A6Lib.c: 96: sleepMS(250);
  8617  00163E  0EFA               	movlw	250
  8618  001640  6E05               	movwf	sleepMS@ms^0,c
  8619  001642  0E00               	movlw	0
  8620  001644  6E06               	movwf	(sleepMS@ms+1)^0,c
  8621  001646  0E00               	movlw	0
  8622  001648  6E07               	movwf	(sleepMS@ms+2)^0,c
  8623  00164A  0E00               	movlw	0
  8624  00164C  6E08               	movwf	(sleepMS@ms+3)^0,c
  8625  00164E  ECE7  F016         	call	_sleepMS	;wreg free
  8626  001652                     
  8627                           ;A6Lib.c: 97: if(strcmp(response, "OK") == 0) {
  8628  001652  0E60               	movlw	low A6_BaudRateSet@response
  8629  001654  6E05               	movwf	strcmp@s1^0,c
  8630  001656  0E00               	movlw	high A6_BaudRateSet@response
  8631  001658  6E06               	movwf	(strcmp@s1+1)^0,c
  8632  00165A  0EF6               	movlw	low STR_6
  8633  00165C  6E07               	movwf	strcmp@s2^0,c
  8634  00165E  0E5F               	movlw	high STR_6
  8635  001660  6E08               	movwf	(strcmp@s2+1)^0,c
  8636  001662  EC66  F014         	call	_strcmp	;wreg free
  8637  001666  5005               	movf	?_strcmp^0,w,c
  8638  001668  1006               	iorwf	(?_strcmp+1)^0,w,c
  8639  00166A  A4D8               	btfss	status,2,c
  8640  00166C  EF3A  F00B         	goto	u3691
  8641  001670  EF3C  F00B         	goto	u3690
  8642  001674                     u3691:
  8643  001674  EF5C  F00B         	goto	l4422
  8644  001678                     u3690:
  8645  001678                     
  8646                           ;A6Lib.c: 99: EUSART_BaudRateSet(baudRate);
  8647  001678  C04A  F012         	movff	A6_BaudRateSet@baudRate,EUSART_BaudRateSet@baudRate
  8648  00167C  C04B  F013         	movff	A6_BaudRateSet@baudRate+1,EUSART_BaudRateSet@baudRate+1
  8649  001680  C04C  F014         	movff	A6_BaudRateSet@baudRate+2,EUSART_BaudRateSet@baudRate+2
  8650  001684  C04D  F015         	movff	A6_BaudRateSet@baudRate+3,EUSART_BaudRateSet@baudRate+3
  8651  001688  EC4A  F011         	call	_EUSART_BaudRateSet	;wreg free
  8652                           
  8653                           ;A6Lib.c: 100: sleepMS(150);
  8654  00168C  0E96               	movlw	150
  8655  00168E  6E05               	movwf	sleepMS@ms^0,c
  8656  001690  0E00               	movlw	0
  8657  001692  6E06               	movwf	(sleepMS@ms+1)^0,c
  8658  001694  0E00               	movlw	0
  8659  001696  6E07               	movwf	(sleepMS@ms+2)^0,c
  8660  001698  0E00               	movlw	0
  8661  00169A  6E08               	movwf	(sleepMS@ms+3)^0,c
  8662  00169C  ECE7  F016         	call	_sleepMS	;wreg free
  8663  0016A0                     
  8664                           ;A6Lib.c: 101: if(A6_IsAlive() == 1) {
  8665  0016A0  EC3E  F015         	call	_A6_IsAlive	;wreg free
  8666  0016A4  06E8               	decf	wreg,f,c
  8667  0016A6  A4D8               	btfss	status,2,c
  8668  0016A8  EF58  F00B         	goto	u3701
  8669  0016AC  EF5A  F00B         	goto	u3700
  8670  0016B0                     u3701:
  8671  0016B0  EF5C  F00B         	goto	l4422
  8672  0016B4                     u3700:
  8673  0016B4  EF66  F00B         	goto	l586
  8674  0016B8                     l4422:
  8675                           
  8676                           ;A6Lib.c: 103: };A6Lib.c: 104: };A6Lib.c: 107: EUSART_BaudRateSet(currentBaudRate);
  8677  0016B8  C094  F012         	movff	A6_BaudRateSet@currentBaudRate,EUSART_BaudRateSet@baudRate
  8678  0016BC  C095  F013         	movff	A6_BaudRateSet@currentBaudRate+1,EUSART_BaudRateSet@baudRate+1
  8679  0016C0  C096  F014         	movff	A6_BaudRateSet@currentBaudRate+2,EUSART_BaudRateSet@baudRate+2
  8680  0016C4  C097  F015         	movff	A6_BaudRateSet@currentBaudRate+3,EUSART_BaudRateSet@baudRate+3
  8681  0016C8  EC4A  F011         	call	_EUSART_BaudRateSet	;wreg free
  8682  0016CC                     l586:
  8683  0016CC  0012               	return		;funcret
  8684  0016CE                     __end_of_A6_BaudRateSet:
  8685                           	opt callstack 0
  8686                           
  8687 ;; *************** function _sprintf *****************
  8688 ;; Defined at:
  8689 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;  sp              2   26[COMRAM] PTR unsigned char 
  8692 ;;		 -> A6_BaudRateSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), 
  8693 ;;  f               2   28[COMRAM] PTR const unsigned char 
  8694 ;;		 -> STR_11(12), STR_1(4), 
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;  val             4   40[COMRAM] unsigned long 
  8697 ;;  tmpval          4    0        struct .
  8698 ;;  cp              3    0        PTR const unsigned char 
  8699 ;;  width           2   47[COMRAM] int 
  8700 ;;  ap              2   44[COMRAM] PTR void [1]
  8701 ;;		 -> ?_sprintf(2), 
  8702 ;;  prec            2   38[COMRAM] int 
  8703 ;;  len             2    0        unsigned int 
  8704 ;;  c               1   49[COMRAM] unsigned char 
  8705 ;;  flag            1   46[COMRAM] unsigned char 
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  2   26[COMRAM] int 
  8708 ;; Registers used:
  8709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8715 ;;      Params:         8       0       0       0       0       0       0       0       0
  8716 ;;      Locals:        12       0       0       0       0       0       0       0       0
  8717 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8718 ;;      Totals:        24       0       0       0       0       0       0       0       0
  8719 ;;Total ram usage:       24 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    3
  8722 ;; This function calls:
  8723 ;;		___lldiv
  8724 ;;		___llmod
  8725 ;;		___wmul
  8726 ;;		_isdigit
  8727 ;; This function is called by:
  8728 ;;		_Ecg_ProcessHeartRate
  8729 ;;		_A6_BaudRateSet
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           	psect	text42
  8734  000012                     __ptext42:
  8735                           	opt callstack 0
  8736  000012                     _sprintf:
  8737                           	opt callstack 24
  8738  000012                     
  8739                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  8740  000012  0E1F               	movlw	low (?_sprintf+4)
  8741  000014  6E2D               	movwf	sprintf@ap^0,c
  8742  000016  0E00               	movlw	high (?_sprintf+4)
  8743  000018  6E2E               	movwf	(sprintf@ap+1)^0,c
  8744                           
  8745                           ;doprnt.c: 553: while((c = *f++)) {
  8746  00001A  EFE6  F001         	goto	l4062
  8747  00001E                     l3960:
  8748                           
  8749                           ;doprnt.c: 555: if(c != '%')
  8750  00001E  0E25               	movlw	37
  8751  000020  1832               	xorwf	sprintf@c^0,w,c
  8752  000022  B4D8               	btfsc	status,2,c
  8753  000024  EF16  F000         	goto	u3061
  8754  000028  EF18  F000         	goto	u3060
  8755  00002C                     u3061:
  8756  00002C  EF22  F000         	goto	l3966
  8757  000030                     u3060:
  8758  000030                     
  8759                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  8760  000030  C01B  FFD9         	movff	sprintf@sp,fsr2l
  8761  000034  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  8762  000038  C032  FFDF         	movff	sprintf@c,indf2
  8763  00003C  4A1B               	infsnz	sprintf@sp^0,f,c
  8764  00003E  2A1C               	incf	(sprintf@sp+1)^0,f,c
  8765                           
  8766                           ;doprnt.c: 559: continue;
  8767  000040  EFE6  F001         	goto	l4062
  8768  000044                     l3966:
  8769                           
  8770                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  8771  000044  0E00               	movlw	0
  8772  000046  6E31               	movwf	(sprintf@width+1)^0,c
  8773  000048  0E00               	movlw	0
  8774  00004A  6E30               	movwf	sprintf@width^0,c
  8775                           
  8776                           ;doprnt.c: 565: flag = 0;
  8777  00004C  0E00               	movlw	0
  8778  00004E  6E2F               	movwf	sprintf@flag^0,c
  8779  000050                     
  8780                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  8781  000050  C01D  FFF6         	movff	sprintf@f,tblptrl
  8782  000054  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8783  000058                     	if	0	;tblptru may be non-zero
  8784  000058                     	endif
  8785  000058                     	if	0	;tblptru may be non-zero
  8786  000058                     	endif
  8787  000058  0008               	tblrd		*
  8788  00005A  50F5               	movf	tablat,w,c
  8789  00005C  EC55  F017         	call	_isdigit
  8790  000060  A0D8               	btfss	status,0,c
  8791  000062  EF35  F000         	goto	u3071
  8792  000066  EF37  F000         	goto	u3070
  8793  00006A                     u3071:
  8794  00006A  EF76  F000         	goto	l3986
  8795  00006E                     u3070:
  8796  00006E                     
  8797                           ;doprnt.c: 615: width = 0;
  8798  00006E  0E00               	movlw	0
  8799  000070  6E31               	movwf	(sprintf@width+1)^0,c
  8800  000072  0E00               	movlw	0
  8801  000074  6E30               	movwf	sprintf@width^0,c
  8802  000076                     l3972:
  8803                           
  8804                           ;doprnt.c: 617: width *= 10;
  8805  000076  C030  F009         	movff	sprintf@width,___wmul@multiplier
  8806  00007A  C031  F00A         	movff	sprintf@width+1,___wmul@multiplier+1
  8807  00007E  0E00               	movlw	0
  8808  000080  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  8809  000082  0E0A               	movlw	10
  8810  000084  6E0B               	movwf	___wmul@multiplicand^0,c
  8811  000086  EC9A  F017         	call	___wmul	;wreg free
  8812  00008A  C009  F030         	movff	?___wmul,sprintf@width
  8813  00008E  C00A  F031         	movff	?___wmul+1,sprintf@width+1
  8814  000092                     
  8815                           ;doprnt.c: 618: width += *f++ - '0';
  8816  000092  0ED0               	movlw	208
  8817  000094  6E23               	movwf	??_sprintf^0,c
  8818  000096  0EFF               	movlw	255
  8819  000098  6E24               	movwf	(??_sprintf+1)^0,c
  8820  00009A  C01D  FFF6         	movff	sprintf@f,tblptrl
  8821  00009E  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8822  0000A2                     	if	0	;tblptru may be non-zero
  8823  0000A2                     	endif
  8824  0000A2                     	if	0	;tblptru may be non-zero
  8825  0000A2                     	endif
  8826  0000A2  0008               	tblrd		*
  8827  0000A4  50F5               	movf	tablat,w,c
  8828  0000A6  6E25               	movwf	(??_sprintf+2)^0,c
  8829  0000A8  6A26               	clrf	(??_sprintf+3)^0,c
  8830  0000AA  5023               	movf	??_sprintf^0,w,c
  8831  0000AC  2625               	addwf	(??_sprintf+2)^0,f,c
  8832  0000AE  5024               	movf	(??_sprintf+1)^0,w,c
  8833  0000B0  2226               	addwfc	(??_sprintf+3)^0,f,c
  8834  0000B2  5025               	movf	(??_sprintf+2)^0,w,c
  8835  0000B4  2630               	addwf	sprintf@width^0,f,c
  8836  0000B6  5026               	movf	(??_sprintf+3)^0,w,c
  8837  0000B8  2231               	addwfc	(sprintf@width+1)^0,f,c
  8838  0000BA  4A1D               	infsnz	sprintf@f^0,f,c
  8839  0000BC  2A1E               	incf	(sprintf@f+1)^0,f,c
  8840  0000BE                     
  8841                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  8842  0000BE  C01D  FFF6         	movff	sprintf@f,tblptrl
  8843  0000C2  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8844  0000C6                     	if	0	;tblptru may be non-zero
  8845  0000C6                     	endif
  8846  0000C6                     	if	0	;tblptru may be non-zero
  8847  0000C6                     	endif
  8848  0000C6  0008               	tblrd		*
  8849  0000C8  50F5               	movf	tablat,w,c
  8850  0000CA  EC55  F017         	call	_isdigit
  8851  0000CE  B0D8               	btfsc	status,0,c
  8852  0000D0  EF6C  F000         	goto	u3081
  8853  0000D4  EF6E  F000         	goto	u3080
  8854  0000D8                     u3081:
  8855  0000D8  EF3B  F000         	goto	l3972
  8856  0000DC                     u3080:
  8857  0000DC  EF76  F000         	goto	l3986
  8858  0000E0                     l3980:
  8859                           
  8860                           ;doprnt.c: 669: flag |= 0x10;
  8861  0000E0  882F               	bsf	sprintf@flag^0,4,c
  8862                           
  8863                           ;doprnt.c: 670: goto loop;
  8864  0000E2  EF76  F000         	goto	l3986
  8865  0000E6                     l3982:
  8866                           
  8867                           ;doprnt.c: 844: flag |= 0x40;
  8868  0000E6  8C2F               	bsf	sprintf@flag^0,6,c
  8869                           
  8870                           ;doprnt.c: 845: break;
  8871  0000E8  EF96  F000         	goto	l728
  8872  0000EC                     l3986:
  8873  0000EC  C01D  FFF6         	movff	sprintf@f,tblptrl
  8874  0000F0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8875  0000F4  4A1D               	infsnz	sprintf@f^0,f,c
  8876  0000F6  2A1E               	incf	(sprintf@f+1)^0,f,c
  8877  0000F8                     	if	0	;tblptru may be non-zero
  8878  0000F8                     	endif
  8879  0000F8                     	if	0	;tblptru may be non-zero
  8880  0000F8                     	endif
  8881  0000F8  0008               	tblrd		*
  8882  0000FA  CFF5 F032          	movff	tablat,sprintf@c
  8883  0000FE  5032               	movf	sprintf@c^0,w,c
  8884                           
  8885                           ; Switch size 1, requested type "simple"
  8886                           ; Number of cases is 5, Range of values is 0 to 117
  8887                           ; switch strategies available:
  8888                           ; Name         Instructions Cycles
  8889                           ; simple_byte           16     9 (average)
  8890                           ;	Chosen strategy is simple_byte
  8891  000100  0A00               	xorlw	0	; case 0
  8892  000102  B4D8               	btfsc	status,2,c
  8893  000104  EFF7  F001         	goto	l4064
  8894  000108  0A64               	xorlw	100	; case 100
  8895  00010A  B4D8               	btfsc	status,2,c
  8896  00010C  EF96  F000         	goto	l728
  8897  000110  0A0D               	xorlw	13	; case 105
  8898  000112  B4D8               	btfsc	status,2,c
  8899  000114  EF96  F000         	goto	l728
  8900  000118  0A05               	xorlw	5	; case 108
  8901  00011A  B4D8               	btfsc	status,2,c
  8902  00011C  EF70  F000         	goto	l3980
  8903  000120  0A19               	xorlw	25	; case 117
  8904  000122  B4D8               	btfsc	status,2,c
  8905  000124  EF73  F000         	goto	l3982
  8906  000128  EFE6  F001         	goto	l4062
  8907  00012C                     l728:
  8908                           
  8909                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  8910  00012C  BC2F               	btfsc	sprintf@flag^0,6,c
  8911  00012E  EF9B  F000         	goto	u3091
  8912  000132  EF9D  F000         	goto	u3090
  8913  000136                     u3091:
  8914  000136  EFDA  F000         	goto	l731
  8915  00013A                     u3090:
  8916  00013A                     
  8917                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  8918  00013A  A82F               	btfss	sprintf@flag^0,4,c
  8919  00013C  EFA2  F000         	goto	u3101
  8920  000140  EFA4  F000         	goto	u3100
  8921  000144                     u3101:
  8922  000144  EFB6  F000         	goto	l3994
  8923  000148                     u3100:
  8924  000148                     
  8925                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  8926  000148  C02D  FFD9         	movff	sprintf@ap,fsr2l
  8927  00014C  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  8928  000150  CFDE F029          	movff	postinc2,sprintf@val
  8929  000154  CFDE F02A          	movff	postinc2,sprintf@val+1
  8930  000158  CFDE F02B          	movff	postinc2,sprintf@val+2
  8931  00015C  CFDE F02C          	movff	postinc2,sprintf@val+3
  8932  000160  0E04               	movlw	4
  8933  000162  262D               	addwf	sprintf@ap^0,f,c
  8934  000164  0E00               	movlw	0
  8935  000166  222E               	addwfc	(sprintf@ap+1)^0,f,c
  8936  000168  EFC7  F000         	goto	l3998
  8937  00016C                     l3994:
  8938                           
  8939                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  8940  00016C  C02D  FFD9         	movff	sprintf@ap,fsr2l
  8941  000170  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  8942  000174  CFDE F029          	movff	postinc2,sprintf@val
  8943  000178  CFDD F02A          	movff	postdec2,sprintf@val+1
  8944  00017C  0E00               	movlw	0
  8945  00017E  BE2A               	btfsc	(sprintf@val+1)^0,7,c
  8946  000180  0EFF               	movlw	-1
  8947  000182  6E2B               	movwf	(sprintf@val+2)^0,c
  8948  000184  6E2C               	movwf	(sprintf@val+3)^0,c
  8949  000186  0E02               	movlw	2
  8950  000188  262D               	addwf	sprintf@ap^0,f,c
  8951  00018A  0E00               	movlw	0
  8952  00018C  222E               	addwfc	(sprintf@ap+1)^0,f,c
  8953  00018E                     l3998:
  8954                           
  8955                           ;doprnt.c: 1287: if((long)val < 0) {
  8956  00018E  BE2C               	btfsc	(sprintf@val+3)^0,7,c
  8957  000190  EFCE  F000         	goto	u3110
  8958  000194  EFCC  F000         	goto	u3111
  8959  000198                     u3111:
  8960  000198  EF05  F001         	goto	l4012
  8961  00019C                     u3110:
  8962  00019C                     
  8963                           ;doprnt.c: 1288: flag |= 0x03;
  8964  00019C  0E03               	movlw	3
  8965  00019E  122F               	iorwf	sprintf@flag^0,f,c
  8966  0001A0                     
  8967                           ;doprnt.c: 1289: val = -val;
  8968  0001A0  1E2C               	comf	(sprintf@val+3)^0,f,c
  8969  0001A2  1E2B               	comf	(sprintf@val+2)^0,f,c
  8970  0001A4  1E2A               	comf	(sprintf@val+1)^0,f,c
  8971  0001A6  6C29               	negf	sprintf@val^0,c
  8972  0001A8  0E00               	movlw	0
  8973  0001AA  222A               	addwfc	(sprintf@val+1)^0,f,c
  8974  0001AC  222B               	addwfc	(sprintf@val+2)^0,f,c
  8975  0001AE  222C               	addwfc	(sprintf@val+3)^0,f,c
  8976  0001B0  EF05  F001         	goto	l4012
  8977  0001B4                     l731:
  8978                           
  8979                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  8980  0001B4  A82F               	btfss	sprintf@flag^0,4,c
  8981  0001B6  EFDF  F000         	goto	u3121
  8982  0001BA  EFE1  F000         	goto	u3120
  8983  0001BE                     u3121:
  8984  0001BE  EFF3  F000         	goto	l4008
  8985  0001C2                     u3120:
  8986  0001C2                     
  8987                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  8988  0001C2  C02D  FFD9         	movff	sprintf@ap,fsr2l
  8989  0001C6  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  8990  0001CA  CFDE F029          	movff	postinc2,sprintf@val
  8991  0001CE  CFDE F02A          	movff	postinc2,sprintf@val+1
  8992  0001D2  CFDE F02B          	movff	postinc2,sprintf@val+2
  8993  0001D6  CFDE F02C          	movff	postinc2,sprintf@val+3
  8994  0001DA  0E04               	movlw	4
  8995  0001DC  262D               	addwf	sprintf@ap^0,f,c
  8996  0001DE  0E00               	movlw	0
  8997  0001E0  222E               	addwfc	(sprintf@ap+1)^0,f,c
  8998  0001E2  EF05  F001         	goto	l4012
  8999  0001E6                     l4008:
  9000                           
  9001                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  9002  0001E6  C02D  FFD9         	movff	sprintf@ap,fsr2l
  9003  0001EA  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  9004  0001EE  CFDE F023          	movff	postinc2,??_sprintf
  9005  0001F2  CFDD F024          	movff	postdec2,??_sprintf+1
  9006  0001F6  C023  F029         	movff	??_sprintf,sprintf@val
  9007  0001FA  C024  F02A         	movff	??_sprintf+1,sprintf@val+1
  9008  0001FE  6A2B               	clrf	(sprintf@val+2)^0,c
  9009  000200  6A2C               	clrf	(sprintf@val+3)^0,c
  9010  000202  0E02               	movlw	2
  9011  000204  262D               	addwf	sprintf@ap^0,f,c
  9012  000206  0E00               	movlw	0
  9013  000208  222E               	addwfc	(sprintf@ap+1)^0,f,c
  9014  00020A                     l4012:
  9015                           
  9016                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  9017  00020A  0E01               	movlw	1
  9018  00020C  6E32               	movwf	sprintf@c^0,c
  9019  00020E                     l4018:
  9020                           
  9021                           ;doprnt.c: 1332: if(val < dpowers[c])
  9022  00020E  5032               	movf	sprintf@c^0,w,c
  9023  000210  0D04               	mullw	4
  9024  000212  0EF9               	movlw	low _dpowers
  9025  000214  24F3               	addwf	243,w,c
  9026  000216  6EF6               	movwf	tblptrl,c
  9027  000218  0E5E               	movlw	high _dpowers
  9028  00021A  20F4               	addwfc	244,w,c
  9029  00021C  6EF7               	movwf	tblptrh,c
  9030  00021E                     	if	0	;There are less than 3 active tblptr bytes
  9031  00021E                     	endif
  9032  00021E  0009               	tblrd		*+
  9033  000220  50F5               	movf	tablat,w,c
  9034  000222  5C29               	subwf	sprintf@val^0,w,c
  9035  000224  0009               	tblrd		*+
  9036  000226  50F5               	movf	tablat,w,c
  9037  000228  582A               	subwfb	(sprintf@val+1)^0,w,c
  9038  00022A  0009               	tblrd		*+
  9039  00022C  50F5               	movf	tablat,w,c
  9040  00022E  582B               	subwfb	(sprintf@val+2)^0,w,c
  9041  000230  0009               	tblrd		*+
  9042  000232  50F5               	movf	tablat,w,c
  9043  000234  582C               	subwfb	(sprintf@val+3)^0,w,c
  9044  000236  B0D8               	btfsc	status,0,c
  9045  000238  EF20  F001         	goto	u3131
  9046  00023C  EF22  F001         	goto	u3130
  9047  000240                     u3131:
  9048  000240  EF24  F001         	goto	l4022
  9049  000244                     u3130:
  9050  000244  EF2E  F001         	goto	l4026
  9051  000248                     l4022:
  9052  000248  2A32               	incf	sprintf@c^0,f,c
  9053  00024A  0E0A               	movlw	10
  9054  00024C  1832               	xorwf	sprintf@c^0,w,c
  9055  00024E  A4D8               	btfss	status,2,c
  9056  000250  EF2C  F001         	goto	u3141
  9057  000254  EF2E  F001         	goto	u3140
  9058  000258                     u3141:
  9059  000258  EF07  F001         	goto	l4018
  9060  00025C                     u3140:
  9061  00025C                     l4026:
  9062                           
  9063                           ;doprnt.c: 1371: if(width && flag & 0x03)
  9064  00025C  5030               	movf	sprintf@width^0,w,c
  9065  00025E  1031               	iorwf	(sprintf@width+1)^0,w,c
  9066  000260  B4D8               	btfsc	status,2,c
  9067  000262  EF35  F001         	goto	u3151
  9068  000266  EF37  F001         	goto	u3150
  9069  00026A                     u3151:
  9070  00026A  EF45  F001         	goto	l4032
  9071  00026E                     u3150:
  9072  00026E  C02F  F023         	movff	sprintf@flag,??_sprintf
  9073  000272  0E03               	movlw	3
  9074  000274  1623               	andwf	??_sprintf^0,f,c
  9075  000276  B4D8               	btfsc	status,2,c
  9076  000278  EF40  F001         	goto	u3161
  9077  00027C  EF42  F001         	goto	u3160
  9078  000280                     u3161:
  9079  000280  EF45  F001         	goto	l4032
  9080  000284                     u3160:
  9081  000284                     
  9082                           ;doprnt.c: 1372: width--;
  9083  000284  0630               	decf	sprintf@width^0,f,c
  9084  000286  A0D8               	btfss	status,0,c
  9085  000288  0631               	decf	(sprintf@width+1)^0,f,c
  9086  00028A                     l4032:
  9087                           
  9088                           ;doprnt.c: 1407: if(width > c)
  9089  00028A  5032               	movf	sprintf@c^0,w,c
  9090  00028C  6E23               	movwf	??_sprintf^0,c
  9091  00028E  6A24               	clrf	(??_sprintf+1)^0,c
  9092  000290  5030               	movf	sprintf@width^0,w,c
  9093  000292  5C23               	subwf	??_sprintf^0,w,c
  9094  000294  5024               	movf	(??_sprintf+1)^0,w,c
  9095  000296  0A80               	xorlw	128
  9096  000298  6E25               	movwf	(??_sprintf+2)^0,c
  9097  00029A  5031               	movf	(sprintf@width+1)^0,w,c
  9098  00029C  0A80               	xorlw	128
  9099  00029E  5825               	subwfb	(??_sprintf+2)^0,w,c
  9100  0002A0  B0D8               	btfsc	status,0,c
  9101  0002A2  EF55  F001         	goto	u3171
  9102  0002A6  EF57  F001         	goto	u3170
  9103  0002AA                     u3171:
  9104  0002AA  EF5D  F001         	goto	l4036
  9105  0002AE                     u3170:
  9106  0002AE                     
  9107                           ;doprnt.c: 1408: width -= c;
  9108  0002AE  5032               	movf	sprintf@c^0,w,c
  9109  0002B0  5E30               	subwf	sprintf@width^0,f,c
  9110  0002B2  0E00               	movlw	0
  9111  0002B4  5A31               	subwfb	(sprintf@width+1)^0,f,c
  9112  0002B6  EF61  F001         	goto	l4038
  9113  0002BA                     l4036:
  9114                           
  9115                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  9116  0002BA  0E00               	movlw	0
  9117  0002BC  6E31               	movwf	(sprintf@width+1)^0,c
  9118  0002BE  0E00               	movlw	0
  9119  0002C0  6E30               	movwf	sprintf@width^0,c
  9120  0002C2                     l4038:
  9121                           
  9122                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  9123  0002C2  5030               	movf	sprintf@width^0,w,c
  9124  0002C4  1031               	iorwf	(sprintf@width+1)^0,w,c
  9125  0002C6  B4D8               	btfsc	status,2,c
  9126  0002C8  EF68  F001         	goto	u3181
  9127  0002CC  EF6A  F001         	goto	u3180
  9128  0002D0                     u3181:
  9129  0002D0  EF7E  F001         	goto	l4046
  9130  0002D4                     u3180:
  9131  0002D4                     l4040:
  9132                           
  9133                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  9134  0002D4  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9135  0002D8  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9136  0002DC  0E20               	movlw	32
  9137  0002DE  6EDF               	movwf	indf2,c
  9138  0002E0  4A1B               	infsnz	sprintf@sp^0,f,c
  9139  0002E2  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9140  0002E4                     
  9141                           ;doprnt.c: 1457: while(--width);
  9142  0002E4  0630               	decf	sprintf@width^0,f,c
  9143  0002E6  A0D8               	btfss	status,0,c
  9144  0002E8  0631               	decf	(sprintf@width+1)^0,f,c
  9145  0002EA  5030               	movf	sprintf@width^0,w,c
  9146  0002EC  1031               	iorwf	(sprintf@width+1)^0,w,c
  9147  0002EE  A4D8               	btfss	status,2,c
  9148  0002F0  EF7C  F001         	goto	u3191
  9149  0002F4  EF7E  F001         	goto	u3190
  9150  0002F8                     u3191:
  9151  0002F8  EF6A  F001         	goto	l4040
  9152  0002FC                     u3190:
  9153  0002FC                     l4046:
  9154                           
  9155                           ;doprnt.c: 1464: if(flag & 0x03)
  9156  0002FC  C02F  F023         	movff	sprintf@flag,??_sprintf
  9157  000300  0E03               	movlw	3
  9158  000302  1623               	andwf	??_sprintf^0,f,c
  9159  000304  B4D8               	btfsc	status,2,c
  9160  000306  EF87  F001         	goto	u3201
  9161  00030A  EF89  F001         	goto	u3200
  9162  00030E                     u3201:
  9163  00030E  EF91  F001         	goto	l4052
  9164  000312                     u3200:
  9165  000312                     
  9166                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  9167  000312  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9168  000316  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9169  00031A  0E2D               	movlw	45
  9170  00031C  6EDF               	movwf	indf2,c
  9171  00031E  4A1B               	infsnz	sprintf@sp^0,f,c
  9172  000320  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9173  000322                     l4052:
  9174                           
  9175                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  9176  000322  C032  F027         	movff	sprintf@c,sprintf@prec
  9177  000326  6A28               	clrf	(sprintf@prec+1)^0,c
  9178                           
  9179                           ;doprnt.c: 1500: while(prec--) {
  9180  000328  EFD9  F001         	goto	l4060
  9181  00032C                     l4054:
  9182                           
  9183                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  9184  00032C  C027  F023         	movff	sprintf@prec,??_sprintf
  9185  000330  C028  F024         	movff	sprintf@prec+1,??_sprintf+1
  9186  000334  90D8               	bcf	status,0,c
  9187  000336  3623               	rlcf	??_sprintf^0,f,c
  9188  000338  3624               	rlcf	(??_sprintf+1)^0,f,c
  9189  00033A  90D8               	bcf	status,0,c
  9190  00033C  3623               	rlcf	??_sprintf^0,f,c
  9191  00033E  3624               	rlcf	(??_sprintf+1)^0,f,c
  9192  000340  0EF9               	movlw	low _dpowers
  9193  000342  2423               	addwf	??_sprintf^0,w,c
  9194  000344  6EF6               	movwf	tblptrl,c
  9195  000346  0E5E               	movlw	high _dpowers
  9196  000348  2024               	addwfc	(??_sprintf+1)^0,w,c
  9197  00034A  6EF7               	movwf	tblptrh,c
  9198  00034C                     	if	0	;There are less than 3 active tblptr bytes
  9199  00034C                     	endif
  9200  00034C  0009               	tblrd		*+
  9201  00034E  CFF5 F009          	movff	tablat,___lldiv@divisor
  9202  000352  0009               	tblrd		*+
  9203  000354  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  9204  000358  0009               	tblrd		*+
  9205  00035A  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  9206  00035E  000A               	tblrd		*-
  9207  000360  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  9208  000364  C029  F005         	movff	sprintf@val,___lldiv@dividend
  9209  000368  C02A  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  9210  00036C  C02B  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  9211  000370  C02C  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  9212  000374  EC97  F00F         	call	___lldiv	;wreg free
  9213  000378  C005  F012         	movff	?___lldiv,___llmod@dividend
  9214  00037C  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  9215  000380  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  9216  000384  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  9217  000388  0E0A               	movlw	10
  9218  00038A  6E16               	movwf	___llmod@divisor^0,c
  9219  00038C  0E00               	movlw	0
  9220  00038E  6E17               	movwf	(___llmod@divisor+1)^0,c
  9221  000390  0E00               	movlw	0
  9222  000392  6E18               	movwf	(___llmod@divisor+2)^0,c
  9223  000394  0E00               	movlw	0
  9224  000396  6E19               	movwf	(___llmod@divisor+3)^0,c
  9225  000398  EC7F  F010         	call	___llmod	;wreg free
  9226  00039C  5012               	movf	?___llmod^0,w,c
  9227  00039E  0F30               	addlw	48
  9228  0003A0  6E32               	movwf	sprintf@c^0,c
  9229  0003A2                     
  9230                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  9231  0003A2  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9232  0003A6  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9233  0003AA  C032  FFDF         	movff	sprintf@c,indf2
  9234  0003AE  4A1B               	infsnz	sprintf@sp^0,f,c
  9235  0003B0  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9236  0003B2                     l4060:
  9237  0003B2  0627               	decf	sprintf@prec^0,f,c
  9238  0003B4  A0D8               	btfss	status,0,c
  9239  0003B6  0628               	decf	(sprintf@prec+1)^0,f,c
  9240  0003B8  2827               	incf	sprintf@prec^0,w,c
  9241  0003BA  E106               	bnz	u3211
  9242  0003BC  2828               	incf	(sprintf@prec+1)^0,w,c
  9243  0003BE  A4D8               	btfss	status,2,c
  9244  0003C0  EFE4  F001         	goto	u3211
  9245  0003C4  EFE6  F001         	goto	u3210
  9246  0003C8                     u3211:
  9247  0003C8  EF96  F001         	goto	l4054
  9248  0003CC                     u3210:
  9249  0003CC                     l4062:
  9250  0003CC  C01D  FFF6         	movff	sprintf@f,tblptrl
  9251  0003D0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  9252  0003D4  4A1D               	infsnz	sprintf@f^0,f,c
  9253  0003D6  2A1E               	incf	(sprintf@f+1)^0,f,c
  9254  0003D8                     	if	0	;tblptru may be non-zero
  9255  0003D8                     	endif
  9256  0003D8                     	if	0	;tblptru may be non-zero
  9257  0003D8                     	endif
  9258  0003D8  0008               	tblrd		*
  9259  0003DA  CFF5 F032          	movff	tablat,sprintf@c
  9260  0003DE  5032               	movf	sprintf@c^0,w,c
  9261  0003E0  A4D8               	btfss	status,2,c
  9262  0003E2  EFF5  F001         	goto	u3221
  9263  0003E6  EFF7  F001         	goto	u3220
  9264  0003EA                     u3221:
  9265  0003EA  EF0F  F000         	goto	l3960
  9266  0003EE                     u3220:
  9267  0003EE                     l4064:
  9268                           
  9269                           ;doprnt.c: 1564: *sp = 0;
  9270  0003EE  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9271  0003F2  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9272  0003F6  0E00               	movlw	0
  9273  0003F8  6EDF               	movwf	indf2,c
  9274  0003FA  0012               	return		;funcret
  9275  0003FC                     __end_of_sprintf:
  9276                           	opt callstack 0
  9277                           
  9278 ;; *************** function ___wmul *****************
  9279 ;; Defined at:
  9280 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;  multiplier      2    8[COMRAM] unsigned int 
  9283 ;;  multiplicand    2   10[COMRAM] unsigned int 
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;  product         2   12[COMRAM] unsigned int 
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  2    8[COMRAM] unsigned int 
  9288 ;; Registers used:
  9289 ;;		wreg, status,2, status,0, prodl, prodh
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9295 ;;      Params:         4       0       0       0       0       0       0       0       0
  9296 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9298 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9299 ;;Total ram usage:        6 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; Hardware stack levels required when called:    2
  9302 ;; This function calls:
  9303 ;;		Nothing
  9304 ;; This function is called by:
  9305 ;;		_refreshGSM
  9306 ;;		_TFT_DrawFillRect
  9307 ;;		_TFT_DrawChar
  9308 ;;		_sprintf
  9309 ;;		_atoi
  9310 ;; This function uses a non-reentrant model
  9311 ;;
  9312                           
  9313                           	psect	text43
  9314  002F34                     __ptext43:
  9315                           	opt callstack 0
  9316  002F34                     ___wmul:
  9317                           	opt callstack 26
  9318  002F34  5009               	movf	___wmul@multiplier^0,w,c
  9319  002F36  020B               	mulwf	___wmul@multiplicand^0,c
  9320  002F38  CFF3 F00D          	movff	prodl,___wmul@product
  9321  002F3C  CFF4 F00E          	movff	prodh,___wmul@product+1
  9322  002F40  5009               	movf	___wmul@multiplier^0,w,c
  9323  002F42  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  9324  002F44  50F3               	movf	243,w,c
  9325  002F46  260E               	addwf	(___wmul@product+1)^0,f,c
  9326  002F48  500A               	movf	(___wmul@multiplier+1)^0,w,c
  9327  002F4A  020B               	mulwf	___wmul@multiplicand^0,c
  9328  002F4C  50F3               	movf	243,w,c
  9329  002F4E  260E               	addwf	(___wmul@product+1)^0,f,c
  9330  002F50  C00D  F009         	movff	___wmul@product,?___wmul
  9331  002F54  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  9332  002F58  0012               	return		;funcret
  9333  002F5A                     __end_of___wmul:
  9334                           	opt callstack 0
  9335                           
  9336 ;; *************** function ___llmod *****************
  9337 ;; Defined at:
  9338 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;  dividend        4   17[COMRAM] unsigned long 
  9341 ;;  divisor         4   21[COMRAM] unsigned long 
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;  counter         1   25[COMRAM] unsigned char 
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  4   17[COMRAM] unsigned long 
  9346 ;; Registers used:
  9347 ;;		wreg, status,2, status,0
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9353 ;;      Params:         8       0       0       0       0       0       0       0       0
  9354 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9356 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9357 ;;Total ram usage:        9 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:    2
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_sprintf
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           	psect	text44
  9368  0020FE                     __ptext44:
  9369                           	opt callstack 0
  9370  0020FE                     ___llmod:
  9371                           	opt callstack 24
  9372  0020FE  5016               	movf	___llmod@divisor^0,w,c
  9373  002100  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  9374  002102  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  9375  002104  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  9376  002106  B4D8               	btfsc	status,2,c
  9377  002108  EF88  F010         	goto	u2881
  9378  00210C  EF8A  F010         	goto	u2880
  9379  002110                     u2881:
  9380  002110  EFBA  F010         	goto	l1163
  9381  002114                     u2880:
  9382  002114  0E01               	movlw	1
  9383  002116  6E1A               	movwf	___llmod@counter^0,c
  9384  002118  EF94  F010         	goto	l3818
  9385  00211C                     l3816:
  9386  00211C  90D8               	bcf	status,0,c
  9387  00211E  3616               	rlcf	___llmod@divisor^0,f,c
  9388  002120  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  9389  002122  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  9390  002124  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  9391  002126  2A1A               	incf	___llmod@counter^0,f,c
  9392  002128                     l3818:
  9393  002128  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  9394  00212A  EF99  F010         	goto	u2891
  9395  00212E  EF9B  F010         	goto	u2890
  9396  002132                     u2891:
  9397  002132  EF8E  F010         	goto	l3816
  9398  002136                     u2890:
  9399  002136                     l3820:
  9400  002136  5016               	movf	___llmod@divisor^0,w,c
  9401  002138  5C12               	subwf	___llmod@dividend^0,w,c
  9402  00213A  5017               	movf	(___llmod@divisor+1)^0,w,c
  9403  00213C  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  9404  00213E  5018               	movf	(___llmod@divisor+2)^0,w,c
  9405  002140  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  9406  002142  5019               	movf	(___llmod@divisor+3)^0,w,c
  9407  002144  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  9408  002146  A0D8               	btfss	status,0,c
  9409  002148  EFA8  F010         	goto	u2901
  9410  00214C  EFAA  F010         	goto	u2900
  9411  002150                     u2901:
  9412  002150  EFB2  F010         	goto	l3824
  9413  002154                     u2900:
  9414  002154  5016               	movf	___llmod@divisor^0,w,c
  9415  002156  5E12               	subwf	___llmod@dividend^0,f,c
  9416  002158  5017               	movf	(___llmod@divisor+1)^0,w,c
  9417  00215A  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  9418  00215C  5018               	movf	(___llmod@divisor+2)^0,w,c
  9419  00215E  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  9420  002160  5019               	movf	(___llmod@divisor+3)^0,w,c
  9421  002162  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  9422  002164                     l3824:
  9423  002164  90D8               	bcf	status,0,c
  9424  002166  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  9425  002168  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  9426  00216A  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  9427  00216C  3216               	rrcf	___llmod@divisor^0,f,c
  9428  00216E  2E1A               	decfsz	___llmod@counter^0,f,c
  9429  002170  EF9B  F010         	goto	l3820
  9430  002174                     l1163:
  9431  002174  C012  F012         	movff	___llmod@dividend,?___llmod
  9432  002178  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  9433  00217C  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  9434  002180  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  9435  002184  0012               	return		;funcret
  9436  002186                     __end_of___llmod:
  9437                           	opt callstack 0
  9438                           
  9439 ;; *************** function _A6_BaudRateGet *****************
  9440 ;; Defined at:
  9441 ;;		line 63 in file "A6Lib.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;		None
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;  j               1   72[COMRAM] unsigned char 
  9446 ;;  response       32   34[COMRAM] unsigned char [32]
  9447 ;;  baudRate        4   66[COMRAM] unsigned long 
  9448 ;;  baudRateToke    2   70[COMRAM] PTR unsigned char 
  9449 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9450 ;;		 -> refreshGSM@operator(32), 
  9451 ;; Return value:  Size  Location     Type
  9452 ;;                  4   30[COMRAM] unsigned long 
  9453 ;; Registers used:
  9454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9455 ;; Tracked objects:
  9456 ;;		On entry : 0/0
  9457 ;;		On exit  : 0/0
  9458 ;;		Unchanged: 0/0
  9459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9460 ;;      Params:         4       0       0       0       0       0       0       0       0
  9461 ;;      Locals:        39       0       0       0       0       0       0       0       0
  9462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9463 ;;      Totals:        43       0       0       0       0       0       0       0       0
  9464 ;;Total ram usage:       43 bytes
  9465 ;; Hardware stack levels used:    1
  9466 ;; Hardware stack levels required when called:    6
  9467 ;; This function calls:
  9468 ;;		_A6_Command
  9469 ;;		_atol
  9470 ;;		_strstr
  9471 ;;		_strtok
  9472 ;; This function is called by:
  9473 ;;		_A6_BaudRateSet
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text45
  9478  00138E                     __ptext45:
  9479                           	opt callstack 0
  9480  00138E                     _A6_BaudRateGet:
  9481                           	opt callstack 22
  9482  00138E                     
  9483                           ;A6Lib.c: 64: uint32_t baudRate;;A6Lib.c: 65: char *baudRateToken;;A6Lib.c: 66: char res
      +                          ponse[32];;A6Lib.c: 68: A6_Command("AT+IPR?\r", 0, response, 32);
  9484  00138E  0EBF               	movlw	low STR_7
  9485  001390  6E18               	movwf	A6_Command@command^0,c
  9486  001392  0E5F               	movlw	high STR_7
  9487  001394  6E19               	movwf	(A6_Command@command+1)^0,c
  9488  001396  0E00               	movlw	0
  9489  001398  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  9490  00139A  0E00               	movlw	0
  9491  00139C  6E1A               	movwf	A6_Command@timeout^0,c
  9492  00139E  0E23               	movlw	low A6_BaudRateGet@response
  9493  0013A0  6E1C               	movwf	A6_Command@response^0,c
  9494  0013A2  0E00               	movlw	high A6_BaudRateGet@response
  9495  0013A4  6E1D               	movwf	(A6_Command@response+1)^0,c
  9496  0013A6  0E20               	movlw	32
  9497  0013A8  6E1E               	movwf	A6_Command@responseLen^0,c
  9498  0013AA  EC07  F011         	call	_A6_Command	;wreg free
  9499  0013AE                     
  9500                           ;A6Lib.c: 69: if(strstr(response, "+IPR: ") != (0)) {
  9501  0013AE  0E23               	movlw	low A6_BaudRateGet@response
  9502  0013B0  6E10               	movwf	strstr@s1^0,c
  9503  0013B2  0E00               	movlw	high A6_BaudRateGet@response
  9504  0013B4  6E11               	movwf	(strstr@s1+1)^0,c
  9505  0013B6  0EE7               	movlw	low STR_8
  9506  0013B8  6E12               	movwf	strstr@s2^0,c
  9507  0013BA  0E5F               	movlw	high STR_8
  9508  0013BC  6E13               	movwf	(strstr@s2+1)^0,c
  9509  0013BE  EC38  F00F         	call	_strstr	;wreg free
  9510  0013C2  5010               	movf	?_strstr^0,w,c
  9511  0013C4  1011               	iorwf	(?_strstr+1)^0,w,c
  9512  0013C6  B4D8               	btfsc	status,2,c
  9513  0013C8  EFE8  F009         	goto	u3521
  9514  0013CC  EFEA  F009         	goto	u3520
  9515  0013D0                     u3521:
  9516  0013D0  EF50  F00A         	goto	l4298
  9517  0013D4                     u3520:
  9518  0013D4                     
  9519                           ;A6Lib.c: 70: baudRateToken = strtok(response, " ");
  9520  0013D4  0E23               	movlw	low A6_BaudRateGet@response
  9521  0013D6  6E12               	movwf	strtok@s1^0,c
  9522  0013D8  0E00               	movlw	high A6_BaudRateGet@response
  9523  0013DA  6E13               	movwf	(strtok@s1+1)^0,c
  9524  0013DC  0ED6               	movlw	low (STR_15+6)
  9525  0013DE  6E14               	movwf	strtok@s2^0,c
  9526  0013E0  0E5F               	movlw	high (STR_15+6)
  9527  0013E2  6E15               	movwf	(strtok@s2+1)^0,c
  9528  0013E4  EC50  F00C         	call	_strtok	;wreg free
  9529  0013E8  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  9530  0013EC  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  9531                           
  9532                           ;A6Lib.c: 71: baudRateToken = strtok((0), " ");
  9533  0013F0  0E00               	movlw	0
  9534  0013F2  6E12               	movwf	strtok@s1^0,c
  9535  0013F4  0E00               	movlw	0
  9536  0013F6  6E13               	movwf	(strtok@s1+1)^0,c
  9537  0013F8  0ED6               	movlw	low (STR_15+6)
  9538  0013FA  6E14               	movwf	strtok@s2^0,c
  9539  0013FC  0E5F               	movlw	high (STR_15+6)
  9540  0013FE  6E15               	movwf	(strtok@s2+1)^0,c
  9541  001400  EC50  F00C         	call	_strtok	;wreg free
  9542  001404  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  9543  001408  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  9544  00140C                     
  9545                           ;A6Lib.c: 72: if(baudRateToken != (0)) {
  9546  00140C  5047               	movf	A6_BaudRateGet@baudRateToken^0,w,c
  9547  00140E  1048               	iorwf	(A6_BaudRateGet@baudRateToken+1)^0,w,c
  9548  001410  B4D8               	btfsc	status,2,c
  9549  001412  EF0D  F00A         	goto	u3531
  9550  001416  EF0F  F00A         	goto	u3530
  9551  00141A                     u3531:
  9552  00141A  EF50  F00A         	goto	l4298
  9553  00141E                     u3530:
  9554  00141E                     
  9555                           ;A6Lib.c: 73: baudRate = atol(baudRateToken);
  9556  00141E  C047  F011         	movff	A6_BaudRateGet@baudRateToken,atol@s
  9557  001422  C048  F012         	movff	A6_BaudRateGet@baudRateToken+1,atol@s+1
  9558  001426  EC2A  F009         	call	_atol	;wreg free
  9559  00142A  C011  F043         	movff	?_atol,A6_BaudRateGet@baudRate
  9560  00142E  C012  F044         	movff	?_atol+1,A6_BaudRateGet@baudRate+1
  9561  001432  C013  F045         	movff	?_atol+2,A6_BaudRateGet@baudRate+2
  9562  001436  C014  F046         	movff	?_atol+3,A6_BaudRateGet@baudRate+3
  9563  00143A                     
  9564                           ;A6Lib.c: 74: for(uint8_t j=0; j<3; j++) {
  9565  00143A  0E00               	movlw	0
  9566  00143C  6E49               	movwf	A6_BaudRateGet@j^0,c
  9567  00143E                     l4290:
  9568                           
  9569                           ;A6Lib.c: 75: if(baudRate == A6_BAUDRATES[j]) {
  9570  00143E  5049               	movf	A6_BaudRateGet@j^0,w,c
  9571  001440  0D04               	mullw	4
  9572  001442  0E21               	movlw	low _A6_BAUDRATES
  9573  001444  24F3               	addwf	243,w,c
  9574  001446  6EF6               	movwf	tblptrl,c
  9575  001448  0E5F               	movlw	high _A6_BAUDRATES
  9576  00144A  20F4               	addwfc	244,w,c
  9577  00144C  6EF7               	movwf	tblptrh,c
  9578  00144E                     	if	0	;There are less than 3 active tblptr bytes
  9579  00144E                     	endif
  9580  00144E  5043               	movf	A6_BaudRateGet@baudRate^0,w,c
  9581  001450  0009               	tblrd		*+
  9582  001452  18F5               	xorwf	tablat,w,c
  9583  001454  E110               	bnz	u3541
  9584  001456  5044               	movf	(A6_BaudRateGet@baudRate+1)^0,w,c
  9585  001458  0009               	tblrd		*+
  9586  00145A  18F5               	xorwf	tablat,w,c
  9587  00145C  E10C               	bnz	u3541
  9588  00145E  5045               	movf	(A6_BaudRateGet@baudRate+2)^0,w,c
  9589  001460  0009               	tblrd		*+
  9590  001462  18F5               	xorwf	tablat,w,c
  9591  001464  E108               	bnz	u3541
  9592  001466  5046               	movf	(A6_BaudRateGet@baudRate+3)^0,w,c
  9593  001468  0009               	tblrd		*+
  9594  00146A  18F5               	xorwf	tablat,w,c
  9595  00146C  A4D8               	btfss	status,2,c
  9596  00146E  EF3B  F00A         	goto	u3541
  9597  001472  EF3D  F00A         	goto	u3540
  9598  001476                     u3541:
  9599  001476  EF47  F00A         	goto	l4294
  9600  00147A                     u3540:
  9601  00147A                     
  9602                           ;A6Lib.c: 76: return baudRate;
  9603  00147A  C043  F01F         	movff	A6_BaudRateGet@baudRate,?_A6_BaudRateGet
  9604  00147E  C044  F020         	movff	A6_BaudRateGet@baudRate+1,?_A6_BaudRateGet+1
  9605  001482  C045  F021         	movff	A6_BaudRateGet@baudRate+2,?_A6_BaudRateGet+2
  9606  001486  C046  F022         	movff	A6_BaudRateGet@baudRate+3,?_A6_BaudRateGet+3
  9607  00148A  EF58  F00A         	goto	l582
  9608  00148E                     l4294:
  9609  00148E  2A49               	incf	A6_BaudRateGet@j^0,f,c
  9610  001490  0E02               	movlw	2
  9611  001492  6449               	cpfsgt	A6_BaudRateGet@j^0,c
  9612  001494  EF4E  F00A         	goto	u3551
  9613  001498  EF50  F00A         	goto	u3550
  9614  00149C                     u3551:
  9615  00149C  EF1F  F00A         	goto	l4290
  9616  0014A0                     u3550:
  9617  0014A0                     l4298:
  9618                           
  9619                           ;A6Lib.c: 77: };A6Lib.c: 78: };A6Lib.c: 79: };A6Lib.c: 80: };A6Lib.c: 82: return 0;
  9620  0014A0  0E00               	movlw	0
  9621  0014A2  6E1F               	movwf	?_A6_BaudRateGet^0,c
  9622  0014A4  0E00               	movlw	0
  9623  0014A6  6E20               	movwf	(?_A6_BaudRateGet+1)^0,c
  9624  0014A8  0E00               	movlw	0
  9625  0014AA  6E21               	movwf	(?_A6_BaudRateGet+2)^0,c
  9626  0014AC  0E00               	movlw	0
  9627  0014AE  6E22               	movwf	(?_A6_BaudRateGet+3)^0,c
  9628  0014B0                     l582:
  9629  0014B0  0012               	return		;funcret
  9630  0014B2                     __end_of_A6_BaudRateGet:
  9631                           	opt callstack 0
  9632                           
  9633 ;; *************** function _strtok *****************
  9634 ;; Defined at:
  9635 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strtok.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  s1              2   17[COMRAM] PTR unsigned char 
  9638 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9639 ;;		 -> refreshGSM@operator(32), 
  9640 ;;  s2              2   19[COMRAM] PTR const unsigned char 
  9641 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
  9642 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
  9643 ;;		 -> STR_22(2), STR_19(2), STR_18(2), STR_17(2), 
  9644 ;;		 -> STR_16(2), STR_10(2), STR_9(2), 
  9645 ;; Auto vars:     Size  Location     Type
  9646 ;;		None
  9647 ;; Return value:  Size  Location     Type
  9648 ;;                  2   17[COMRAM] PTR unsigned char 
  9649 ;; Registers used:
  9650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9651 ;; Tracked objects:
  9652 ;;		On entry : 0/0
  9653 ;;		On exit  : 0/0
  9654 ;;		Unchanged: 0/0
  9655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9656 ;;      Params:         4       0       0       0       0       0       0       0       0
  9657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9659 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9660 ;;Total ram usage:        4 bytes
  9661 ;; Hardware stack levels used:    1
  9662 ;; Hardware stack levels required when called:    4
  9663 ;; This function calls:
  9664 ;;		_strcspn
  9665 ;;		_strspn
  9666 ;; This function is called by:
  9667 ;;		_A6_BaudRateGet
  9668 ;;		_A6_NetworkGetRSSI
  9669 ;;		_A6_NetworkGetOperator
  9670 ;;		_A6_NetworkGetStatus
  9671 ;; This function uses a non-reentrant model
  9672 ;;
  9673                           
  9674                           	psect	text46
  9675  0018A0                     __ptext46:
  9676                           	opt callstack 0
  9677  0018A0                     _strtok:
  9678                           	opt callstack 22
  9679  0018A0  5012               	movf	strtok@s1^0,w,c
  9680  0018A2  1013               	iorwf	(strtok@s1+1)^0,w,c
  9681  0018A4  A4D8               	btfss	status,2,c
  9682  0018A6  EF57  F00C         	goto	u2731
  9683  0018AA  EF59  F00C         	goto	u2730
  9684  0018AE                     u2731:
  9685  0018AE  EF5D  F00C         	goto	l1502
  9686  0018B2                     u2730:
  9687  0018B2  C0BA  F012         	movff	strtok@sp,strtok@s1
  9688  0018B6  C0BB  F013         	movff	strtok@sp+1,strtok@s1+1
  9689  0018BA                     l1502:
  9690  0018BA  5012               	movf	strtok@s1^0,w,c
  9691  0018BC  1013               	iorwf	(strtok@s1+1)^0,w,c
  9692  0018BE  A4D8               	btfss	status,2,c
  9693  0018C0  EF64  F00C         	goto	u2741
  9694  0018C4  EF66  F00C         	goto	u2740
  9695  0018C8                     u2741:
  9696  0018C8  EF6C  F00C         	goto	l3732
  9697  0018CC                     u2740:
  9698  0018CC  0E00               	movlw	0
  9699  0018CE  6E12               	movwf	?_strtok^0,c
  9700  0018D0  0E00               	movlw	0
  9701  0018D2  6E13               	movwf	(?_strtok+1)^0,c
  9702  0018D4  EFC0  F00C         	goto	l1504
  9703  0018D8                     l3732:
  9704  0018D8  C012  F00B         	movff	strtok@s1,strspn@s1
  9705  0018DC  C013  F00C         	movff	strtok@s1+1,strspn@s1+1
  9706  0018E0  C014  F00D         	movff	strtok@s2,strspn@s2
  9707  0018E4  C015  F00E         	movff	strtok@s2+1,strspn@s2+1
  9708  0018E8  EC9C  F013         	call	_strspn	;wreg free
  9709  0018EC  500B               	movf	?_strspn^0,w,c
  9710  0018EE  2612               	addwf	strtok@s1^0,f,c
  9711  0018F0  500C               	movf	(?_strspn+1)^0,w,c
  9712  0018F2  2213               	addwfc	(strtok@s1+1)^0,f,c
  9713  0018F4  C012  FFD9         	movff	strtok@s1,fsr2l
  9714  0018F8  C013  FFDA         	movff	strtok@s1+1,fsr2h
  9715  0018FC  50DF               	movf	indf2,w,c
  9716  0018FE  A4D8               	btfss	status,2,c
  9717  001900  EF84  F00C         	goto	u2751
  9718  001904  EF86  F00C         	goto	u2750
  9719  001908                     u2751:
  9720  001908  EF91  F00C         	goto	l3740
  9721  00190C                     u2750:
  9722  00190C  0E00               	movlw	0
  9723  00190E  0100               	movlb	0	; () banked
  9724  001910  6FBA               	movwf	strtok@sp& (0+255),b
  9725  001912  0E00               	movlw	0
  9726  001914  6FBB               	movwf	(strtok@sp+1)& (0+255),b
  9727  001916  C0BA  F012         	movff	strtok@sp,?_strtok
  9728  00191A  C0BB  F013         	movff	strtok@sp+1,?_strtok+1
  9729  00191E  EFC0  F00C         	goto	l1504
  9730  001922                     l3740:
  9731  001922  C012  F00B         	movff	strtok@s1,strcspn@s1
  9732  001926  C013  F00C         	movff	strtok@s1+1,strcspn@s1+1
  9733  00192A  C014  F00D         	movff	strtok@s2,strcspn@s2
  9734  00192E  C015  F00E         	movff	strtok@s2+1,strcspn@s2+1
  9735  001932  ECCF  F013         	call	_strcspn	;wreg free
  9736  001936  500B               	movf	?_strcspn^0,w,c
  9737  001938  2412               	addwf	strtok@s1^0,w,c
  9738  00193A  0100               	movlb	0	; () banked
  9739  00193C  6FBA               	movwf	strtok@sp& (0+255),b
  9740  00193E  500C               	movf	(?_strcspn+1)^0,w,c
  9741  001940  2013               	addwfc	(strtok@s1+1)^0,w,c
  9742  001942  6FBB               	movwf	(strtok@sp+1)& (0+255),b
  9743  001944                     
  9744                           ; BSR set to: 0
  9745  001944  C0BA  FFD9         	movff	strtok@sp,fsr2l
  9746  001948  C0BB  FFDA         	movff	strtok@sp+1,fsr2h
  9747  00194C  50DF               	movf	indf2,w,c
  9748  00194E  B4D8               	btfsc	status,2,c
  9749  001950  EFAC  F00C         	goto	u2761
  9750  001954  EFAE  F00C         	goto	u2760
  9751  001958                     u2761:
  9752  001958  EFB8  F00C         	goto	l3748
  9753  00195C                     u2760:
  9754  00195C                     
  9755                           ; BSR set to: 0
  9756  00195C  C0BA  FFD9         	movff	strtok@sp,fsr2l
  9757  001960  C0BB  FFDA         	movff	strtok@sp+1,fsr2h
  9758  001964  0E00               	movlw	0
  9759  001966  6EDF               	movwf	indf2,c
  9760  001968                     
  9761                           ; BSR set to: 0
  9762  001968  4BBA               	infsnz	strtok@sp& (0+255),f,b
  9763  00196A  2BBB               	incf	(strtok@sp+1)& (0+255),f,b
  9764  00196C  EFBC  F00C         	goto	l1507
  9765  001970                     l3748:
  9766                           
  9767                           ; BSR set to: 0
  9768  001970  0E00               	movlw	0
  9769  001972  6FBA               	movwf	strtok@sp& (0+255),b
  9770  001974  0E00               	movlw	0
  9771  001976  6FBB               	movwf	(strtok@sp+1)& (0+255),b
  9772  001978                     l1507:
  9773                           
  9774                           ; BSR set to: 0
  9775  001978  C012  F012         	movff	strtok@s1,?_strtok
  9776  00197C  C013  F013         	movff	strtok@s1+1,?_strtok+1
  9777  001980                     l1504:
  9778  001980  0012               	return		;funcret
  9779  001982                     __end_of_strtok:
  9780                           	opt callstack 0
  9781                           
  9782 ;; *************** function _strspn *****************
  9783 ;; Defined at:
  9784 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strspn.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  9787 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9788 ;;		 -> refreshGSM@operator(32), 
  9789 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  9790 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
  9791 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
  9792 ;;		 -> STR_22(2), STR_19(2), STR_18(2), STR_17(2), 
  9793 ;;		 -> STR_16(2), STR_10(2), STR_9(2), 
  9794 ;; Auto vars:     Size  Location     Type
  9795 ;;  i               2   15[COMRAM] unsigned int 
  9796 ;; Return value:  Size  Location     Type
  9797 ;;                  2   10[COMRAM] unsigned int 
  9798 ;; Registers used:
  9799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9800 ;; Tracked objects:
  9801 ;;		On entry : 0/0
  9802 ;;		On exit  : 0/0
  9803 ;;		Unchanged: 0/0
  9804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9805 ;;      Params:         4       0       0       0       0       0       0       0       0
  9806 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9807 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9808 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9809 ;;Total ram usage:        7 bytes
  9810 ;; Hardware stack levels used:    1
  9811 ;; Hardware stack levels required when called:    3
  9812 ;; This function calls:
  9813 ;;		_strchr
  9814 ;; This function is called by:
  9815 ;;		_strtok
  9816 ;; This function uses a non-reentrant model
  9817 ;;
  9818                           
  9819                           	psect	text47
  9820  002738                     __ptext47:
  9821                           	opt callstack 0
  9822  002738                     _strspn:
  9823                           	opt callstack 22
  9824  002738  0E00               	movlw	0
  9825  00273A  6E11               	movwf	(strspn@i+1)^0,c
  9826  00273C  0E00               	movlw	0
  9827  00273E  6E10               	movwf	strspn@i^0,c
  9828  002740  EFA6  F013         	goto	l3612
  9829  002744                     l3610:
  9830  002744  4A0B               	infsnz	strspn@s1^0,f,c
  9831  002746  2A0C               	incf	(strspn@s1+1)^0,f,c
  9832  002748  4A10               	infsnz	strspn@i^0,f,c
  9833  00274A  2A11               	incf	(strspn@i+1)^0,f,c
  9834  00274C                     l3612:
  9835  00274C  C00B  FFD9         	movff	strspn@s1,fsr2l
  9836  002750  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  9837  002754  50DF               	movf	indf2,w,c
  9838  002756  B4D8               	btfsc	status,2,c
  9839  002758  EFB0  F013         	goto	u2541
  9840  00275C  EFB2  F013         	goto	u2540
  9841  002760                     u2541:
  9842  002760  EFCA  F013         	goto	l1541
  9843  002764                     u2540:
  9844  002764  C00D  F005         	movff	strspn@s2,strchr@ptr
  9845  002768  C00E  F006         	movff	strspn@s2+1,strchr@ptr+1
  9846  00276C  C00B  FFD9         	movff	strspn@s1,fsr2l
  9847  002770  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  9848  002774  50DF               	movf	indf2,w,c
  9849  002776  6E0F               	movwf	??_strspn^0,c
  9850  002778  500F               	movf	??_strspn^0,w,c
  9851  00277A  6E07               	movwf	strchr@chr^0,c
  9852  00277C  6A08               	clrf	(strchr@chr+1)^0,c
  9853  00277E  EC8C  F011         	call	_strchr	;wreg free
  9854  002782  5005               	movf	?_strchr^0,w,c
  9855  002784  1006               	iorwf	(?_strchr+1)^0,w,c
  9856  002786  A4D8               	btfss	status,2,c
  9857  002788  EFC8  F013         	goto	u2551
  9858  00278C  EFCA  F013         	goto	u2550
  9859  002790                     u2551:
  9860  002790  EFA2  F013         	goto	l3610
  9861  002794                     u2550:
  9862  002794                     l1541:
  9863  002794  C010  F00B         	movff	strspn@i,?_strspn
  9864  002798  C011  F00C         	movff	strspn@i+1,?_strspn+1
  9865  00279C  0012               	return		;funcret
  9866  00279E                     __end_of_strspn:
  9867                           	opt callstack 0
  9868                           
  9869 ;; *************** function _strcspn *****************
  9870 ;; Defined at:
  9871 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcspn.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  9874 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9875 ;;		 -> refreshGSM@operator(32), 
  9876 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  9877 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
  9878 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
  9879 ;;		 -> STR_22(2), STR_19(2), STR_18(2), STR_17(2), 
  9880 ;;		 -> STR_16(2), STR_10(2), STR_9(2), 
  9881 ;; Auto vars:     Size  Location     Type
  9882 ;;  i               2   15[COMRAM] unsigned int 
  9883 ;; Return value:  Size  Location     Type
  9884 ;;                  2   10[COMRAM] unsigned int 
  9885 ;; Registers used:
  9886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9887 ;; Tracked objects:
  9888 ;;		On entry : 0/0
  9889 ;;		On exit  : 0/0
  9890 ;;		Unchanged: 0/0
  9891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9892 ;;      Params:         4       0       0       0       0       0       0       0       0
  9893 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9894 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9895 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9896 ;;Total ram usage:        7 bytes
  9897 ;; Hardware stack levels used:    1
  9898 ;; Hardware stack levels required when called:    3
  9899 ;; This function calls:
  9900 ;;		_strchr
  9901 ;; This function is called by:
  9902 ;;		_strtok
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           	psect	text48
  9907  00279E                     __ptext48:
  9908                           	opt callstack 0
  9909  00279E                     _strcspn:
  9910                           	opt callstack 22
  9911  00279E  0E00               	movlw	0
  9912  0027A0  6E11               	movwf	(strcspn@i+1)^0,c
  9913  0027A2  0E00               	movlw	0
  9914  0027A4  6E10               	movwf	strcspn@i^0,c
  9915  0027A6  EFD9  F013         	goto	l3620
  9916  0027AA                     l3618:
  9917  0027AA  4A0B               	infsnz	strcspn@s1^0,f,c
  9918  0027AC  2A0C               	incf	(strcspn@s1+1)^0,f,c
  9919  0027AE  4A10               	infsnz	strcspn@i^0,f,c
  9920  0027B0  2A11               	incf	(strcspn@i+1)^0,f,c
  9921  0027B2                     l3620:
  9922  0027B2  C00B  FFD9         	movff	strcspn@s1,fsr2l
  9923  0027B6  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  9924  0027BA  50DF               	movf	indf2,w,c
  9925  0027BC  B4D8               	btfsc	status,2,c
  9926  0027BE  EFE3  F013         	goto	u2561
  9927  0027C2  EFE5  F013         	goto	u2560
  9928  0027C6                     u2561:
  9929  0027C6  EFFD  F013         	goto	l1522
  9930  0027CA                     u2560:
  9931  0027CA  C00D  F005         	movff	strcspn@s2,strchr@ptr
  9932  0027CE  C00E  F006         	movff	strcspn@s2+1,strchr@ptr+1
  9933  0027D2  C00B  FFD9         	movff	strcspn@s1,fsr2l
  9934  0027D6  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  9935  0027DA  50DF               	movf	indf2,w,c
  9936  0027DC  6E0F               	movwf	??_strcspn^0,c
  9937  0027DE  500F               	movf	??_strcspn^0,w,c
  9938  0027E0  6E07               	movwf	strchr@chr^0,c
  9939  0027E2  6A08               	clrf	(strchr@chr+1)^0,c
  9940  0027E4  EC8C  F011         	call	_strchr	;wreg free
  9941  0027E8  5005               	movf	?_strchr^0,w,c
  9942  0027EA  1006               	iorwf	(?_strchr+1)^0,w,c
  9943  0027EC  B4D8               	btfsc	status,2,c
  9944  0027EE  EFFB  F013         	goto	u2571
  9945  0027F2  EFFD  F013         	goto	u2570
  9946  0027F6                     u2571:
  9947  0027F6  EFD5  F013         	goto	l3618
  9948  0027FA                     u2570:
  9949  0027FA                     l1522:
  9950  0027FA  C010  F00B         	movff	strcspn@i,?_strcspn
  9951  0027FE  C011  F00C         	movff	strcspn@i+1,?_strcspn+1
  9952  002802  0012               	return		;funcret
  9953  002804                     __end_of_strcspn:
  9954                           	opt callstack 0
  9955                           
  9956 ;; *************** function _strstr *****************
  9957 ;; Defined at:
  9958 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strstr.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  9961 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
  9962 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
  9963 ;;		 -> STR_22(2), A6_NetworkGetRSSI@response(32), STR_19(2), STR_18(2), 
  9964 ;;		 -> STR_17(2), STR_16(2), A6_NetworkGetStatus@response(32), STR_10(2), 
  9965 ;;		 -> STR_9(2), A6_BaudRateGet@response(32), NULL(0), refreshGSM@operator(32), 
  9966 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  9967 ;;		 -> STR_26(8), STR_21(7), STR_15(8), STR_8(7), 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;		None
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  2   15[COMRAM] PTR unsigned char 
  9972 ;; Registers used:
  9973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9979 ;;      Params:         4       0       0       0       0       0       0       0       0
  9980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9982 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9983 ;;Total ram usage:        4 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    3
  9986 ;; This function calls:
  9987 ;;		_strchr
  9988 ;;		_strlen
  9989 ;;		_strncmp
  9990 ;; This function is called by:
  9991 ;;		_A6_BaudRateGet
  9992 ;;		_A6_NetworkGetRSSI
  9993 ;;		_A6_NetworkGetOperator
  9994 ;;		_A6_NetworkGetStatus
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           	psect	text49
  9999  001E70                     __ptext49:
 10000                           	opt callstack 0
 10001  001E70                     _strstr:
 10002                           	opt callstack 23
 10003  001E70  EF71  F00F         	goto	l3716
 10004  001E74                     l3708:
 10005  001E74  C010  F009         	movff	strstr@s1,strncmp@s1
 10006  001E78  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
 10007  001E7C  C012  F00B         	movff	strstr@s2,strncmp@s2
 10008  001E80  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
 10009  001E84  C012  F005         	movff	strstr@s2,strlen@s
 10010  001E88  C013  F006         	movff	strstr@s2+1,strlen@s+1
 10011  001E8C  ECDB  F015         	call	_strlen	;wreg free
 10012  001E90  C005  F00D         	movff	?_strlen,strncmp@len
 10013  001E94  C006  F00E         	movff	?_strlen+1,strncmp@len+1
 10014  001E98  EC9D  F00D         	call	_strncmp	;wreg free
 10015  001E9C  5009               	movf	?_strncmp^0,w,c
 10016  001E9E  100A               	iorwf	(?_strncmp+1)^0,w,c
 10017  001EA0  A4D8               	btfss	status,2,c
 10018  001EA2  EF55  F00F         	goto	u2691
 10019  001EA6  EF57  F00F         	goto	u2690
 10020  001EAA                     u2691:
 10021  001EAA  EF5D  F00F         	goto	l3714
 10022  001EAE                     u2690:
 10023  001EAE  C010  F010         	movff	strstr@s1,?_strstr
 10024  001EB2  C011  F011         	movff	strstr@s1+1,?_strstr+1
 10025  001EB6  EF96  F00F         	goto	l1490
 10026  001EBA                     l3714:
 10027  001EBA  0E01               	movlw	1
 10028  001EBC  2410               	addwf	strstr@s1^0,w,c
 10029  001EBE  6E05               	movwf	strchr@ptr^0,c
 10030  001EC0  0E00               	movlw	0
 10031  001EC2  2011               	addwfc	(strstr@s1+1)^0,w,c
 10032  001EC4  6E06               	movwf	(strchr@ptr+1)^0,c
 10033  001EC6  C012  FFF6         	movff	strstr@s2,tblptrl
 10034  001ECA  C013  FFF7         	movff	strstr@s2+1,tblptrh
 10035  001ECE                     	if	0	;tblptru may be non-zero
 10036  001ECE                     	endif
 10037  001ECE                     	if	0	;tblptru may be non-zero
 10038  001ECE                     	endif
 10039  001ECE  0008               	tblrd		*
 10040  001ED0  50F5               	movf	tablat,w,c
 10041  001ED2  6E07               	movwf	strchr@chr^0,c
 10042  001ED4  6A08               	clrf	(strchr@chr+1)^0,c
 10043  001ED6  EC8C  F011         	call	_strchr	;wreg free
 10044  001EDA  C005  F010         	movff	?_strchr,strstr@s1
 10045  001EDE  C006  F011         	movff	?_strchr+1,strstr@s1+1
 10046  001EE2                     l3716:
 10047  001EE2  5010               	movf	strstr@s1^0,w,c
 10048  001EE4  1011               	iorwf	(strstr@s1+1)^0,w,c
 10049  001EE6  B4D8               	btfsc	status,2,c
 10050  001EE8  EF78  F00F         	goto	u2701
 10051  001EEC  EF7A  F00F         	goto	u2700
 10052  001EF0                     u2701:
 10053  001EF0  EF92  F00F         	goto	l3720
 10054  001EF4                     u2700:
 10055  001EF4  C010  FFF6         	movff	strstr@s1,tblptrl
 10056  001EF8  C011  FFF7         	movff	strstr@s1+1,tblptrh
 10057  001EFC  6AF8               	clrf	tblptru,c
 10058  001EFE  0E07               	movlw	(high __ramtop+-1)
 10059  001F00  64F7               	cpfsgt	tblptrh,c
 10060  001F02  D003               	bra	u2717
 10061  001F04  0008               	tblrd		*
 10062  001F06  50F5               	movf	tablat,w,c
 10063  001F08  D005               	bra	u2710
 10064  001F0A                     u2717:
 10065  001F0A  CFF6 FFE1          	movff	tblptrl,fsr1l
 10066  001F0E  CFF7 FFE2          	movff	tblptrh,fsr1h
 10067  001F12  50E7               	movf	indf1,w,c
 10068  001F14                     u2710:
 10069  001F14  0900               	iorlw	0
 10070  001F16  A4D8               	btfss	status,2,c
 10071  001F18  EF90  F00F         	goto	u2721
 10072  001F1C  EF92  F00F         	goto	u2720
 10073  001F20                     u2721:
 10074  001F20  EF3A  F00F         	goto	l3708
 10075  001F24                     u2720:
 10076  001F24                     l3720:
 10077  001F24  0E00               	movlw	0
 10078  001F26  6E10               	movwf	?_strstr^0,c
 10079  001F28  0E00               	movlw	0
 10080  001F2A  6E11               	movwf	(?_strstr+1)^0,c
 10081  001F2C                     l1490:
 10082  001F2C  0012               	return		;funcret
 10083  001F2E                     __end_of_strstr:
 10084                           	opt callstack 0
 10085                           
 10086 ;; *************** function _strncmp *****************
 10087 ;; Defined at:
 10088 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strncmp.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;  s1              2    8[COMRAM] PTR const unsigned char 
 10091 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
 10092 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
 10093 ;;		 -> STR_22(2), A6_NetworkGetRSSI@response(32), STR_19(2), STR_18(2), 
 10094 ;;		 -> STR_17(2), STR_16(2), A6_NetworkGetStatus@response(32), STR_10(2), 
 10095 ;;		 -> STR_9(2), A6_BaudRateGet@response(32), NULL(0), refreshGSM@operator(32), 
 10096 ;;  s2              2   10[COMRAM] PTR const unsigned char 
 10097 ;;		 -> STR_26(8), STR_21(7), STR_15(8), STR_8(7), 
 10098 ;;  len             2   12[COMRAM] unsigned int 
 10099 ;; Auto vars:     Size  Location     Type
 10100 ;;		None
 10101 ;; Return value:  Size  Location     Type
 10102 ;;                  2    8[COMRAM] int 
 10103 ;; Registers used:
 10104 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10105 ;; Tracked objects:
 10106 ;;		On entry : 0/0
 10107 ;;		On exit  : 0/0
 10108 ;;		Unchanged: 0/0
 10109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10110 ;;      Params:         6       0       0       0       0       0       0       0       0
 10111 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10112 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10113 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10114 ;;Total ram usage:        7 bytes
 10115 ;; Hardware stack levels used:    1
 10116 ;; Hardware stack levels required when called:    2
 10117 ;; This function calls:
 10118 ;;		Nothing
 10119 ;; This function is called by:
 10120 ;;		_strstr
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text50
 10125  001B3A                     __ptext50:
 10126                           	opt callstack 0
 10127  001B3A                     _strncmp:
 10128                           	opt callstack 23
 10129  001B3A  EFF8  F00D         	goto	l3602
 10130  001B3E                     l3592:
 10131  001B3E  C009  FFF6         	movff	strncmp@s1,tblptrl
 10132  001B42  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10133  001B46  6AF8               	clrf	tblptru,c
 10134  001B48  0E07               	movlw	(high __ramtop+-1)
 10135  001B4A  64F7               	cpfsgt	tblptrh,c
 10136  001B4C  D003               	bra	u2497
 10137  001B4E  0008               	tblrd		*
 10138  001B50  50F5               	movf	tablat,w,c
 10139  001B52  D005               	bra	u2490
 10140  001B54                     u2497:
 10141  001B54  CFF6 FFE1          	movff	tblptrl,fsr1l
 10142  001B58  CFF7 FFE2          	movff	tblptrh,fsr1h
 10143  001B5C  50E7               	movf	indf1,w,c
 10144  001B5E                     u2490:
 10145  001B5E  0900               	iorlw	0
 10146  001B60  B4D8               	btfsc	status,2,c
 10147  001B62  EFB5  F00D         	goto	u2501
 10148  001B66  EFB7  F00D         	goto	u2500
 10149  001B6A                     u2501:
 10150  001B6A  EFD6  F00D         	goto	l3596
 10151  001B6E                     u2500:
 10152  001B6E  C00B  FFF6         	movff	strncmp@s2,tblptrl
 10153  001B72  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
 10154  001B76                     	if	0	;tblptru may be non-zero
 10155  001B76                     	endif
 10156  001B76                     	if	0	;tblptru may be non-zero
 10157  001B76                     	endif
 10158  001B76  0008               	tblrd		*
 10159  001B78  CFF5 F00F          	movff	tablat,??_strncmp
 10160  001B7C  C009  FFF6         	movff	strncmp@s1,tblptrl
 10161  001B80  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10162  001B84  6AF8               	clrf	tblptru,c
 10163  001B86  0E07               	movlw	(high __ramtop+-1)
 10164  001B88  64F7               	cpfsgt	tblptrh,c
 10165  001B8A  D003               	bra	u2517
 10166  001B8C  0008               	tblrd		*
 10167  001B8E  50F5               	movf	tablat,w,c
 10168  001B90  D005               	bra	u2515
 10169  001B92                     u2517:
 10170  001B92  CFF6 FFE1          	movff	tblptrl,fsr1l
 10171  001B96  CFF7 FFE2          	movff	tblptrh,fsr1h
 10172  001B9A  50E7               	movf	indf1,w,c
 10173  001B9C                     u2515:
 10174  001B9C  180F               	xorwf	??_strncmp^0,w,c
 10175  001B9E  B4D8               	btfsc	status,2,c
 10176  001BA0  EFD4  F00D         	goto	u2511
 10177  001BA4  EFD6  F00D         	goto	u2510
 10178  001BA8                     u2511:
 10179  001BA8  EFF4  F00D         	goto	l3600
 10180  001BAC                     u2510:
 10181  001BAC                     l3596:
 10182  001BAC  C009  FFF6         	movff	strncmp@s1,tblptrl
 10183  001BB0  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10184  001BB4  6AF8               	clrf	tblptru,c
 10185  001BB6  0E07               	movlw	(high __ramtop+-1)
 10186  001BB8  64F7               	cpfsgt	tblptrh,c
 10187  001BBA  D003               	bra	u2527
 10188  001BBC  0008               	tblrd		*
 10189  001BBE  50F5               	movf	tablat,w,c
 10190  001BC0  D005               	bra	u2520
 10191  001BC2                     u2527:
 10192  001BC2  CFF6 FFE1          	movff	tblptrl,fsr1l
 10193  001BC6  CFF7 FFE2          	movff	tblptrh,fsr1h
 10194  001BCA  50E7               	movf	indf1,w,c
 10195  001BCC                     u2520:
 10196  001BCC  6E0F               	movwf	??_strncmp^0,c
 10197  001BCE  C00B  FFF6         	movff	strncmp@s2,tblptrl
 10198  001BD2  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
 10199  001BD6                     	if	0	;tblptru may be non-zero
 10200  001BD6                     	endif
 10201  001BD6                     	if	0	;tblptru may be non-zero
 10202  001BD6                     	endif
 10203  001BD6  0008               	tblrd		*
 10204  001BD8  50F5               	movf	tablat,w,c
 10205  001BDA  5C0F               	subwf	??_strncmp^0,w,c
 10206  001BDC  6E09               	movwf	?_strncmp^0,c
 10207  001BDE  6A0A               	clrf	(?_strncmp+1)^0,c
 10208  001BE0  A0D8               	btfss	status,0,c
 10209  001BE2  060A               	decf	(?_strncmp+1)^0,f,c
 10210  001BE4  EF09  F00E         	goto	l1531
 10211  001BE8                     l3600:
 10212  001BE8  4A09               	infsnz	strncmp@s1^0,f,c
 10213  001BEA  2A0A               	incf	(strncmp@s1+1)^0,f,c
 10214  001BEC  4A0B               	infsnz	strncmp@s2^0,f,c
 10215  001BEE  2A0C               	incf	(strncmp@s2+1)^0,f,c
 10216  001BF0                     l3602:
 10217  001BF0  060D               	decf	strncmp@len^0,f,c
 10218  001BF2  A0D8               	btfss	status,0,c
 10219  001BF4  060E               	decf	(strncmp@len+1)^0,f,c
 10220  001BF6  280D               	incf	strncmp@len^0,w,c
 10221  001BF8  E106               	bnz	u2531
 10222  001BFA  280E               	incf	(strncmp@len+1)^0,w,c
 10223  001BFC  A4D8               	btfss	status,2,c
 10224  001BFE  EF03  F00E         	goto	u2531
 10225  001C02  EF05  F00E         	goto	u2530
 10226  001C06                     u2531:
 10227  001C06  EF9F  F00D         	goto	l3592
 10228  001C0A                     u2530:
 10229  001C0A  0E00               	movlw	0
 10230  001C0C  6E0A               	movwf	(?_strncmp+1)^0,c
 10231  001C0E  0E00               	movlw	0
 10232  001C10  6E09               	movwf	?_strncmp^0,c
 10233  001C12                     l1531:
 10234  001C12  0012               	return		;funcret
 10235  001C14                     __end_of_strncmp:
 10236                           	opt callstack 0
 10237                           
 10238 ;; *************** function _strchr *****************
 10239 ;; Defined at:
 10240 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strchr.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
 10243 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
 10244 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
 10245 ;;		 -> STR_22(2), A6_NetworkGetRSSI@response(32), STR_19(2), STR_18(2), 
 10246 ;;		 -> STR_17(2), STR_16(2), A6_NetworkGetStatus@response(32), STR_10(2), 
 10247 ;;		 -> STR_9(2), A6_BaudRateGet@response(32), NULL(0), refreshGSM@operator(32), 
 10248 ;;  chr             2    6[COMRAM] int 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  2    4[COMRAM] PTR unsigned char 
 10253 ;; Registers used:
 10254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10260 ;;      Params:         4       0       0       0       0       0       0       0       0
 10261 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10262 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10263 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10264 ;;Total ram usage:        6 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    2
 10267 ;; This function calls:
 10268 ;;		Nothing
 10269 ;; This function is called by:
 10270 ;;		_strstr
 10271 ;;		_strcspn
 10272 ;;		_strspn
 10273 ;; This function uses a non-reentrant model
 10274 ;;
 10275                           
 10276                           	psect	text51
 10277  002318                     __ptext51:
 10278                           	opt callstack 0
 10279  002318                     _strchr:
 10280                           	opt callstack 22
 10281  002318                     l1510:
 10282  002318  C005  FFF6         	movff	strchr@ptr,tblptrl
 10283  00231C  C006  FFF7         	movff	strchr@ptr+1,tblptrh
 10284  002320  6AF8               	clrf	tblptru,c
 10285  002322  0E07               	movlw	(high __ramtop+-1)
 10286  002324  64F7               	cpfsgt	tblptrh,c
 10287  002326  D003               	bra	u2247
 10288  002328  0008               	tblrd		*
 10289  00232A  50F5               	movf	tablat,w,c
 10290  00232C  D005               	bra	u2240
 10291  00232E                     u2247:
 10292  00232E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10293  002332  CFF7 FFE2          	movff	tblptrh,fsr1h
 10294  002336  50E7               	movf	indf1,w,c
 10295  002338                     u2240:
 10296  002338  1807               	xorwf	strchr@chr^0,w,c
 10297  00233A  A4D8               	btfss	status,2,c
 10298  00233C  EFA2  F011         	goto	u2251
 10299  002340  EFA4  F011         	goto	u2250
 10300  002344                     u2251:
 10301  002344  EFAA  F011         	goto	l3470
 10302  002348                     u2250:
 10303  002348  C005  F005         	movff	strchr@ptr,?_strchr
 10304  00234C  C006  F006         	movff	strchr@ptr+1,?_strchr+1
 10305  002350  EFCC  F011         	goto	l1512
 10306  002354                     l3470:
 10307  002354  5005               	movf	strchr@ptr^0,w,c
 10308  002356  6E09               	movwf	??_strchr^0,c
 10309  002358  5006               	movf	(strchr@ptr+1)^0,w,c
 10310  00235A  6E0A               	movwf	(??_strchr+1)^0,c
 10311  00235C  4A05               	infsnz	strchr@ptr^0,f,c
 10312  00235E  2A06               	incf	(strchr@ptr+1)^0,f,c
 10313  002360  C009  FFF6         	movff	??_strchr,tblptrl
 10314  002364  C00A  FFF7         	movff	??_strchr+1,tblptrh
 10315  002368  6AF8               	clrf	tblptru,c
 10316  00236A  0E07               	movlw	(high __ramtop+-1)
 10317  00236C  64F7               	cpfsgt	tblptrh,c
 10318  00236E  D003               	bra	u2267
 10319  002370  0008               	tblrd		*
 10320  002372  50F5               	movf	tablat,w,c
 10321  002374  D005               	bra	u2260
 10322  002376                     u2267:
 10323  002376  CFF6 FFE1          	movff	tblptrl,fsr1l
 10324  00237A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10325  00237E  50E7               	movf	indf1,w,c
 10326  002380                     u2260:
 10327  002380  0900               	iorlw	0
 10328  002382  A4D8               	btfss	status,2,c
 10329  002384  EFC6  F011         	goto	u2271
 10330  002388  EFC8  F011         	goto	u2270
 10331  00238C                     u2271:
 10332  00238C  EF8C  F011         	goto	l1510
 10333  002390                     u2270:
 10334  002390  0E00               	movlw	0
 10335  002392  6E05               	movwf	?_strchr^0,c
 10336  002394  0E00               	movlw	0
 10337  002396  6E06               	movwf	(?_strchr+1)^0,c
 10338  002398                     l1512:
 10339  002398  0012               	return		;funcret
 10340  00239A                     __end_of_strchr:
 10341                           	opt callstack 0
 10342                           
 10343 ;; *************** function _atol *****************
 10344 ;; Defined at:
 10345 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atol.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;  s               2   16[COMRAM] PTR const unsigned char 
 10348 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
 10349 ;;		 -> refreshGSM@operator(32), 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;  a               4   25[COMRAM] long 
 10352 ;;  c               1   29[COMRAM] unsigned char 
 10353 ;;  sign            1   24[COMRAM] unsigned char 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  4   16[COMRAM] long 
 10356 ;; Registers used:
 10357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10363 ;;      Params:         4       0       0       0       0       0       0       0       0
 10364 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10365 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10366 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10367 ;;Total ram usage:       14 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    3
 10370 ;; This function calls:
 10371 ;;		___lmul
 10372 ;;		_isdigit
 10373 ;; This function is called by:
 10374 ;;		_A6_BaudRateGet
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           	psect	text52
 10379  001254                     __ptext52:
 10380                           	opt callstack 0
 10381  001254                     _atol:
 10382                           	opt callstack 24
 10383  001254                     l1438:
 10384  001254  C011  FFD9         	movff	atol@s,fsr2l
 10385  001258  C012  FFDA         	movff	atol@s+1,fsr2h
 10386  00125C  50DF               	movf	indf2,w,c
 10387  00125E  6E1E               	movwf	atol@c^0,c
 10388  001260  4A11               	infsnz	atol@s^0,f,c
 10389  001262  2A12               	incf	(atol@s+1)^0,f,c
 10390  001264  0E20               	movlw	32
 10391  001266  181E               	xorwf	atol@c^0,w,c
 10392  001268  B4D8               	btfsc	status,2,c
 10393  00126A  EF39  F009         	goto	u3251
 10394  00126E  EF3B  F009         	goto	u3250
 10395  001272                     u3251:
 10396  001272  EF2A  F009         	goto	l1438
 10397  001276                     u3250:
 10398  001276  0E09               	movlw	9
 10399  001278  181E               	xorwf	atol@c^0,w,c
 10400  00127A  B4D8               	btfsc	status,2,c
 10401  00127C  EF42  F009         	goto	u3261
 10402  001280  EF44  F009         	goto	u3260
 10403  001284                     u3261:
 10404  001284  EF2A  F009         	goto	l1438
 10405  001288                     u3260:
 10406  001288  0E00               	movlw	0
 10407  00128A  6E1A               	movwf	atol@a^0,c
 10408  00128C  0E00               	movlw	0
 10409  00128E  6E1B               	movwf	(atol@a+1)^0,c
 10410  001290  0E00               	movlw	0
 10411  001292  6E1C               	movwf	(atol@a+2)^0,c
 10412  001294  0E00               	movlw	0
 10413  001296  6E1D               	movwf	(atol@a+3)^0,c
 10414  001298  0E00               	movlw	0
 10415  00129A  6E19               	movwf	atol@sign^0,c
 10416  00129C  0E2D               	movlw	45
 10417  00129E  181E               	xorwf	atol@c^0,w,c
 10418  0012A0  A4D8               	btfss	status,2,c
 10419  0012A2  EF55  F009         	goto	u3271
 10420  0012A6  EF57  F009         	goto	u3270
 10421  0012AA                     u3271:
 10422  0012AA  EF62  F009         	goto	l4098
 10423  0012AE                     u3270:
 10424  0012AE  2A19               	incf	atol@sign^0,f,c
 10425  0012B0                     l4094:
 10426  0012B0  C011  FFD9         	movff	atol@s,fsr2l
 10427  0012B4  C012  FFDA         	movff	atol@s+1,fsr2h
 10428  0012B8  50DF               	movf	indf2,w,c
 10429  0012BA  6E1E               	movwf	atol@c^0,c
 10430  0012BC  4A11               	infsnz	atol@s^0,f,c
 10431  0012BE  2A12               	incf	(atol@s+1)^0,f,c
 10432  0012C0  EF91  F009         	goto	l4110
 10433  0012C4                     l4098:
 10434  0012C4  0E2B               	movlw	43
 10435  0012C6  181E               	xorwf	atol@c^0,w,c
 10436  0012C8  A4D8               	btfss	status,2,c
 10437  0012CA  EF69  F009         	goto	u3281
 10438  0012CE  EF6B  F009         	goto	u3280
 10439  0012D2                     u3281:
 10440  0012D2  EF91  F009         	goto	l4110
 10441  0012D6                     u3280:
 10442  0012D6  EF58  F009         	goto	l4094
 10443  0012DA                     l4104:
 10444  0012DA  C01A  F005         	movff	atol@a,___lmul@multiplier
 10445  0012DE  C01B  F006         	movff	atol@a+1,___lmul@multiplier+1
 10446  0012E2  C01C  F007         	movff	atol@a+2,___lmul@multiplier+2
 10447  0012E6  C01D  F008         	movff	atol@a+3,___lmul@multiplier+3
 10448  0012EA  0E0A               	movlw	10
 10449  0012EC  6E09               	movwf	___lmul@multiplicand^0,c
 10450  0012EE  0E00               	movlw	0
 10451  0012F0  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
 10452  0012F2  0E00               	movlw	0
 10453  0012F4  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
 10454  0012F6  0E00               	movlw	0
 10455  0012F8  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
 10456  0012FA  EC67  F013         	call	___lmul	;wreg free
 10457  0012FE  C01E  F015         	movff	atol@c,??_atol
 10458  001302  0ED0               	movlw	208
 10459  001304  2615               	addwf	??_atol^0,f,c
 10460  001306  5015               	movf	??_atol^0,w,c
 10461  001308  2405               	addwf	?___lmul^0,w,c
 10462  00130A  6E1A               	movwf	atol@a^0,c
 10463  00130C  0E00               	movlw	0
 10464  00130E  2006               	addwfc	(?___lmul+1)^0,w,c
 10465  001310  6E1B               	movwf	(atol@a+1)^0,c
 10466  001312  0E00               	movlw	0
 10467  001314  2007               	addwfc	(?___lmul+2)^0,w,c
 10468  001316  6E1C               	movwf	(atol@a+2)^0,c
 10469  001318  0E00               	movlw	0
 10470  00131A  2008               	addwfc	(?___lmul+3)^0,w,c
 10471  00131C  6E1D               	movwf	(atol@a+3)^0,c
 10472  00131E  EF58  F009         	goto	l4094
 10473  001322                     l4110:
 10474  001322  501E               	movf	atol@c^0,w,c
 10475  001324  EC55  F017         	call	_isdigit
 10476  001328  B0D8               	btfsc	status,0,c
 10477  00132A  EF99  F009         	goto	u3291
 10478  00132E  EF9B  F009         	goto	u3290
 10479  001332                     u3291:
 10480  001332  EF6D  F009         	goto	l4104
 10481  001336                     u3290:
 10482  001336  5019               	movf	atol@sign^0,w,c
 10483  001338  B4D8               	btfsc	status,2,c
 10484  00133A  EFA1  F009         	goto	u3301
 10485  00133E  EFA3  F009         	goto	u3300
 10486  001342                     u3301:
 10487  001342  EFBE  F009         	goto	l1446
 10488  001346                     u3300:
 10489  001346  C01A  F015         	movff	atol@a,??_atol
 10490  00134A  C01B  F016         	movff	atol@a+1,??_atol+1
 10491  00134E  C01C  F017         	movff	atol@a+2,??_atol+2
 10492  001352  C01D  F018         	movff	atol@a+3,??_atol+3
 10493  001356  1E15               	comf	??_atol^0,f,c
 10494  001358  1E16               	comf	(??_atol+1)^0,f,c
 10495  00135A  1E17               	comf	(??_atol+2)^0,f,c
 10496  00135C  1E18               	comf	(??_atol+3)^0,f,c
 10497  00135E  2A15               	incf	??_atol^0,f,c
 10498  001360  0E00               	movlw	0
 10499  001362  2216               	addwfc	(??_atol+1)^0,f,c
 10500  001364  2217               	addwfc	(??_atol+2)^0,f,c
 10501  001366  2218               	addwfc	(??_atol+3)^0,f,c
 10502  001368  C015  F011         	movff	??_atol,?_atol
 10503  00136C  C016  F012         	movff	??_atol+1,?_atol+1
 10504  001370  C017  F013         	movff	??_atol+2,?_atol+2
 10505  001374  C018  F014         	movff	??_atol+3,?_atol+3
 10506  001378  EFC6  F009         	goto	l1447
 10507  00137C                     l1446:
 10508  00137C  C01A  F011         	movff	atol@a,?_atol
 10509  001380  C01B  F012         	movff	atol@a+1,?_atol+1
 10510  001384  C01C  F013         	movff	atol@a+2,?_atol+2
 10511  001388  C01D  F014         	movff	atol@a+3,?_atol+3
 10512  00138C                     l1447:
 10513  00138C  0012               	return		;funcret
 10514  00138E                     __end_of_atol:
 10515                           	opt callstack 0
 10516                           
 10517 ;; *************** function _isdigit *****************
 10518 ;; Defined at:
 10519 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
 10520 ;; Parameters:    Size  Location     Type
 10521 ;;  c               1    wreg     unsigned char 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  c               1    6[COMRAM] unsigned char 
 10524 ;; Return value:  Size  Location     Type
 10525 ;;		None               void
 10526 ;; Registers used:
 10527 ;;		wreg, status,2, status,0
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10533 ;;      Params:         0       0       0       0       0       0       0       0       0
 10534 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10535 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10536 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10537 ;;Total ram usage:        3 bytes
 10538 ;; Hardware stack levels used:    1
 10539 ;; Hardware stack levels required when called:    2
 10540 ;; This function calls:
 10541 ;;		Nothing
 10542 ;; This function is called by:
 10543 ;;		_sprintf
 10544 ;;		_atoi
 10545 ;;		_atol
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           	psect	text53
 10550  002EAA                     __ptext53:
 10551                           	opt callstack 0
 10552  002EAA                     _isdigit:
 10553                           	opt callstack 23
 10554                           
 10555                           ;incstack = 0
 10556                           ;isdigit@c stored from wreg
 10557  002EAA  6E07               	movwf	isdigit@c^0,c
 10558  002EAC  0E00               	movlw	0
 10559  002EAE  6E06               	movwf	_isdigit$1967^0,c
 10560  002EB0  0E3A               	movlw	58
 10561  002EB2  6007               	cpfslt	isdigit@c^0,c
 10562  002EB4  EF5E  F017         	goto	u2471
 10563  002EB8  EF60  F017         	goto	u2470
 10564  002EBC                     u2471:
 10565  002EBC  EF6A  F017         	goto	l3586
 10566  002EC0                     u2470:
 10567  002EC0  0E2F               	movlw	47
 10568  002EC2  6407               	cpfsgt	isdigit@c^0,c
 10569  002EC4  EF66  F017         	goto	u2481
 10570  002EC8  EF68  F017         	goto	u2480
 10571  002ECC                     u2481:
 10572  002ECC  EF6A  F017         	goto	l3586
 10573  002ED0                     u2480:
 10574  002ED0  0E01               	movlw	1
 10575  002ED2  6E06               	movwf	_isdigit$1967^0,c
 10576  002ED4                     l3586:
 10577  002ED4  C006  F005         	movff	_isdigit$1967,??_isdigit
 10578  002ED8  3005               	rrcf	??_isdigit^0,w,c
 10579  002EDA  0012               	return		;funcret
 10580  002EDC                     __end_of_isdigit:
 10581                           	opt callstack 0
 10582                           
 10583 ;; *************** function ___lmul *****************
 10584 ;; Defined at:
 10585 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
 10586 ;; Parameters:    Size  Location     Type
 10587 ;;  multiplier      4    4[COMRAM] unsigned long 
 10588 ;;  multiplicand    4    8[COMRAM] unsigned long 
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;  product         4   12[COMRAM] unsigned long 
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  4    4[COMRAM] unsigned long 
 10593 ;; Registers used:
 10594 ;;		wreg, status,2, status,0
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10600 ;;      Params:         8       0       0       0       0       0       0       0       0
 10601 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10603 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10604 ;;Total ram usage:       12 bytes
 10605 ;; Hardware stack levels used:    1
 10606 ;; Hardware stack levels required when called:    2
 10607 ;; This function calls:
 10608 ;;		Nothing
 10609 ;; This function is called by:
 10610 ;;		_atol
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text54
 10615  0026CE                     __ptext54:
 10616                           	opt callstack 0
 10617  0026CE                     ___lmul:
 10618                           	opt callstack 24
 10619  0026CE  0E00               	movlw	0
 10620  0026D0  6E0D               	movwf	___lmul@product^0,c
 10621  0026D2  0E00               	movlw	0
 10622  0026D4  6E0E               	movwf	(___lmul@product+1)^0,c
 10623  0026D6  0E00               	movlw	0
 10624  0026D8  6E0F               	movwf	(___lmul@product+2)^0,c
 10625  0026DA  0E00               	movlw	0
 10626  0026DC  6E10               	movwf	(___lmul@product+3)^0,c
 10627  0026DE                     l3782:
 10628  0026DE  A005               	btfss	___lmul@multiplier^0,0,c
 10629  0026E0  EF74  F013         	goto	u2831
 10630  0026E4  EF76  F013         	goto	u2830
 10631  0026E8                     u2831:
 10632  0026E8  EF7E  F013         	goto	l3786
 10633  0026EC                     u2830:
 10634  0026EC  5009               	movf	___lmul@multiplicand^0,w,c
 10635  0026EE  260D               	addwf	___lmul@product^0,f,c
 10636  0026F0  500A               	movf	(___lmul@multiplicand+1)^0,w,c
 10637  0026F2  220E               	addwfc	(___lmul@product+1)^0,f,c
 10638  0026F4  500B               	movf	(___lmul@multiplicand+2)^0,w,c
 10639  0026F6  220F               	addwfc	(___lmul@product+2)^0,f,c
 10640  0026F8  500C               	movf	(___lmul@multiplicand+3)^0,w,c
 10641  0026FA  2210               	addwfc	(___lmul@product+3)^0,f,c
 10642  0026FC                     l3786:
 10643  0026FC  90D8               	bcf	status,0,c
 10644  0026FE  3609               	rlcf	___lmul@multiplicand^0,f,c
 10645  002700  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
 10646  002702  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
 10647  002704  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
 10648  002706  90D8               	bcf	status,0,c
 10649  002708  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
 10650  00270A  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
 10651  00270C  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
 10652  00270E  3205               	rrcf	___lmul@multiplier^0,f,c
 10653  002710  5005               	movf	___lmul@multiplier^0,w,c
 10654  002712  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
 10655  002714  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
 10656  002716  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
 10657  002718  A4D8               	btfss	status,2,c
 10658  00271A  EF91  F013         	goto	u2841
 10659  00271E  EF93  F013         	goto	u2840
 10660  002722                     u2841:
 10661  002722  EF6F  F013         	goto	l3782
 10662  002726                     u2840:
 10663  002726  C00D  F005         	movff	___lmul@product,?___lmul
 10664  00272A  C00E  F006         	movff	___lmul@product+1,?___lmul+1
 10665  00272E  C00F  F007         	movff	___lmul@product+2,?___lmul+2
 10666  002732  C010  F008         	movff	___lmul@product+3,?___lmul+3
 10667  002736  0012               	return		;funcret
 10668  002738                     __end_of___lmul:
 10669                           	opt callstack 0
 10670                           
 10671 ;; *************** function _A6_BaudRateAutoDetect *****************
 10672 ;; Defined at:
 10673 ;;		line 111 in file "A6Lib.c"
 10674 ;; Parameters:    Size  Location     Type
 10675 ;;		None
 10676 ;; Auto vars:     Size  Location     Type
 10677 ;;  i               1   62[COMRAM] unsigned char 
 10678 ;; Return value:  Size  Location     Type
 10679 ;;                  4  492[None  ] unsigned long 
 10680 ;; Registers used:
 10681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10682 ;; Tracked objects:
 10683 ;;		On entry : 0/0
 10684 ;;		On exit  : 0/0
 10685 ;;		Unchanged: 0/0
 10686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10687 ;;      Params:         0       0       0       0       0       0       0       0       0
 10688 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10689 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10690 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10691 ;;Total ram usage:        1 bytes
 10692 ;; Hardware stack levels used:    1
 10693 ;; Hardware stack levels required when called:    7
 10694 ;; This function calls:
 10695 ;;		_A6_IsAlive
 10696 ;;		_EUSART_BaudRateSet
 10697 ;;		_sleepMS
 10698 ;; This function is called by:
 10699 ;;		_A6_Init
 10700 ;; This function uses a non-reentrant model
 10701 ;;
 10702                           
 10703                           	psect	text55
 10704  0025F0                     __ptext55:
 10705                           	opt callstack 0
 10706  0025F0                     _A6_BaudRateAutoDetect:
 10707                           	opt callstack 22
 10708  0025F0                     
 10709                           ;A6Lib.c: 112: for(uint8_t i=0; i<3; i++) {
 10710  0025F0  0E00               	movlw	0
 10711  0025F2  6E3F               	movwf	A6_BaudRateAutoDetect@i^0,c
 10712  0025F4                     l4390:
 10713                           
 10714                           ;A6Lib.c: 113: EUSART_BaudRateSet(A6_BAUDRATES[i]);
 10715  0025F4  503F               	movf	A6_BaudRateAutoDetect@i^0,w,c
 10716  0025F6  0D04               	mullw	4
 10717  0025F8  0E21               	movlw	low _A6_BAUDRATES
 10718  0025FA  24F3               	addwf	243,w,c
 10719  0025FC  6EF6               	movwf	tblptrl,c
 10720  0025FE  0E5F               	movlw	high _A6_BAUDRATES
 10721  002600  20F4               	addwfc	244,w,c
 10722  002602  6EF7               	movwf	tblptrh,c
 10723  002604                     	if	0	;There are less than 3 active tblptr bytes
 10724  002604                     	endif
 10725  002604  0009               	tblrd		*+
 10726  002606  CFF5 F012          	movff	tablat,EUSART_BaudRateSet@baudRate
 10727  00260A  0009               	tblrd		*+
 10728  00260C  CFF5 F013          	movff	tablat,EUSART_BaudRateSet@baudRate+1
 10729  002610  0009               	tblrd		*+
 10730  002612  CFF5 F014          	movff	tablat,EUSART_BaudRateSet@baudRate+2
 10731  002616  000A               	tblrd		*-
 10732  002618  CFF5 F015          	movff	tablat,EUSART_BaudRateSet@baudRate+3
 10733  00261C  EC4A  F011         	call	_EUSART_BaudRateSet	;wreg free
 10734  002620                     
 10735                           ;A6Lib.c: 114: if(A6_IsAlive() == 1) {
 10736  002620  EC3E  F015         	call	_A6_IsAlive	;wreg free
 10737  002624  06E8               	decf	wreg,f,c
 10738  002626  A4D8               	btfss	status,2,c
 10739  002628  EF18  F013         	goto	u3661
 10740  00262C  EF1A  F013         	goto	u3660
 10741  002630                     u3661:
 10742  002630  EF1C  F013         	goto	l4396
 10743  002634                     u3660:
 10744  002634  EF2F  F013         	goto	l594
 10745  002638                     l4396:
 10746                           
 10747                           ;A6Lib.c: 116: };A6Lib.c: 117: sleepMS(100);
 10748  002638  0E64               	movlw	100
 10749  00263A  6E05               	movwf	sleepMS@ms^0,c
 10750  00263C  0E00               	movlw	0
 10751  00263E  6E06               	movwf	(sleepMS@ms+1)^0,c
 10752  002640  0E00               	movlw	0
 10753  002642  6E07               	movwf	(sleepMS@ms+2)^0,c
 10754  002644  0E00               	movlw	0
 10755  002646  6E08               	movwf	(sleepMS@ms+3)^0,c
 10756  002648  ECE7  F016         	call	_sleepMS	;wreg free
 10757  00264C  2A3F               	incf	A6_BaudRateAutoDetect@i^0,f,c
 10758  00264E  0E02               	movlw	2
 10759  002650  643F               	cpfsgt	A6_BaudRateAutoDetect@i^0,c
 10760  002652  EF2D  F013         	goto	u3671
 10761  002656  EF2F  F013         	goto	u3670
 10762  00265A                     u3671:
 10763  00265A  EFFA  F012         	goto	l4390
 10764  00265E                     u3670:
 10765  00265E                     l594:
 10766  00265E  0012               	return		;funcret
 10767  002660                     __end_of_A6_BaudRateAutoDetect:
 10768                           	opt callstack 0
 10769                           
 10770 ;; *************** function _sleepMS *****************
 10771 ;; Defined at:
 10772 ;;		line 91 in file "init.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  ms              4    4[COMRAM] unsigned long 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  t               4    8[COMRAM] unsigned long 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10786 ;;      Params:         4       0       0       0       0       0       0       0       0
 10787 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10789 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10790 ;;Total ram usage:        8 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    2
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_A6_BaudRateSet
 10797 ;;		_A6_BaudRateAutoDetect
 10798 ;; This function uses a non-reentrant model
 10799 ;;
 10800                           
 10801                           	psect	text56
 10802  002DCE                     __ptext56:
 10803                           	opt callstack 0
 10804  002DCE                     _sleepMS:
 10805                           	opt callstack 26
 10806  002DCE                     
 10807                           ;init.c: 92: uint32_t t = MILLISECONDS + ms;
 10808  002DCE  5005               	movf	sleepMS@ms^0,w,c
 10809  002DD0  0100               	movlb	0	; () banked
 10810  002DD2  25B6               	addwf	_MILLISECONDS& (0+255),w,b
 10811  002DD4  6E09               	movwf	sleepMS@t^0,c
 10812  002DD6  5006               	movf	(sleepMS@ms+1)^0,w,c
 10813  002DD8  21B7               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
 10814  002DDA  6E0A               	movwf	(sleepMS@t+1)^0,c
 10815  002DDC  5007               	movf	(sleepMS@ms+2)^0,w,c
 10816  002DDE  21B8               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
 10817  002DE0  6E0B               	movwf	(sleepMS@t+2)^0,c
 10818  002DE2  5008               	movf	(sleepMS@ms+3)^0,w,c
 10819  002DE4  21B9               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
 10820  002DE6  6E0C               	movwf	(sleepMS@t+3)^0,c
 10821  002DE8                     l4194:
 10822                           
 10823                           ; BSR set to: 0
 10824  002DE8  5009               	movf	sleepMS@t^0,w,c
 10825  002DEA  5DB6               	subwf	_MILLISECONDS& (0+255),w,b
 10826  002DEC  500A               	movf	(sleepMS@t+1)^0,w,c
 10827  002DEE  59B7               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
 10828  002DF0  500B               	movf	(sleepMS@t+2)^0,w,c
 10829  002DF2  59B8               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
 10830  002DF4  500C               	movf	(sleepMS@t+3)^0,w,c
 10831  002DF6  59B9               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
 10832  002DF8  A0D8               	btfss	status,0,c
 10833  002DFA  EF01  F017         	goto	u3421
 10834  002DFE  EF03  F017         	goto	u3420
 10835  002E02                     u3421:
 10836  002E02  EFF4  F016         	goto	l4194
 10837  002E06                     u3420:
 10838  002E06                     
 10839                           ; BSR set to: 0
 10840  002E06  0012               	return		;funcret
 10841  002E08                     __end_of_sleepMS:
 10842                           	opt callstack 0
 10843                           
 10844 ;; *************** function _EUSART_BaudRateSet *****************
 10845 ;; Defined at:
 10846 ;;		line 41 in file "EUSART.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  baudRate        4   17[COMRAM] const unsigned long 
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;  tmp             4   25[COMRAM] unsigned long 
 10851 ;; Return value:  Size  Location     Type
 10852 ;;                  1    wreg      void 
 10853 ;; Registers used:
 10854 ;;		wreg, status,2, status,0, cstack
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10860 ;;      Params:         4       0       0       0       0       0       0       0       0
 10861 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10862 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10863 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10864 ;;Total ram usage:       12 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    3
 10867 ;; This function calls:
 10868 ;;		___lldiv
 10869 ;; This function is called by:
 10870 ;;		_A6_BaudRateSet
 10871 ;;		_A6_BaudRateAutoDetect
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text57
 10876  002294                     __ptext57:
 10877                           	opt callstack 0
 10878  002294                     _EUSART_BaudRateSet:
 10879                           	opt callstack 25
 10880  002294                     
 10881                           ;EUSART.c: 42: TXSTAbits.SYNC = 0;
 10882  002294  98AC               	bcf	172,4,c	;volatile
 10883                           
 10884                           ;EUSART.c: 43: TXSTAbits.BRGH = 1;
 10885  002296  84AC               	bsf	172,2,c	;volatile
 10886                           
 10887                           ;EUSART.c: 44: BAUDCONbits.BRG16 = 1;
 10888  002298  86B8               	bsf	184,3,c	;volatile
 10889  00229A                     
 10890                           ;EUSART.c: 46: uint32_t tmp = (48000000 / baudRate);
 10891  00229A  0E00               	movlw	0
 10892  00229C  6E05               	movwf	___lldiv@dividend^0,c
 10893  00229E  0E6C               	movlw	108
 10894  0022A0  6E06               	movwf	(___lldiv@dividend+1)^0,c
 10895  0022A2  0EDC               	movlw	220
 10896  0022A4  6E07               	movwf	(___lldiv@dividend+2)^0,c
 10897  0022A6  0E02               	movlw	2
 10898  0022A8  6E08               	movwf	(___lldiv@dividend+3)^0,c
 10899  0022AA  C012  F009         	movff	EUSART_BaudRateSet@baudRate,___lldiv@divisor
 10900  0022AE  C013  F00A         	movff	EUSART_BaudRateSet@baudRate+1,___lldiv@divisor+1
 10901  0022B2  C014  F00B         	movff	EUSART_BaudRateSet@baudRate+2,___lldiv@divisor+2
 10902  0022B6  C015  F00C         	movff	EUSART_BaudRateSet@baudRate+3,___lldiv@divisor+3
 10903  0022BA  EC97  F00F         	call	___lldiv	;wreg free
 10904  0022BE  C005  F01A         	movff	?___lldiv,EUSART_BaudRateSet@tmp
 10905  0022C2  C006  F01B         	movff	?___lldiv+1,EUSART_BaudRateSet@tmp+1
 10906  0022C6  C007  F01C         	movff	?___lldiv+2,EUSART_BaudRateSet@tmp+2
 10907  0022CA  C008  F01D         	movff	?___lldiv+3,EUSART_BaudRateSet@tmp+3
 10908  0022CE                     
 10909                           ;EUSART.c: 47: tmp = tmp / 4;
 10910  0022CE  C01A  F016         	movff	EUSART_BaudRateSet@tmp,??_EUSART_BaudRateSet
 10911  0022D2  C01B  F017         	movff	EUSART_BaudRateSet@tmp+1,??_EUSART_BaudRateSet+1
 10912  0022D6  C01C  F018         	movff	EUSART_BaudRateSet@tmp+2,??_EUSART_BaudRateSet+2
 10913  0022DA  C01D  F019         	movff	EUSART_BaudRateSet@tmp+3,??_EUSART_BaudRateSet+3
 10914  0022DE  0E03               	movlw	3
 10915  0022E0  EF77  F011         	goto	u3560
 10916  0022E4                     u3565:
 10917  0022E4  90D8               	bcf	status,0,c
 10918  0022E6  3219               	rrcf	(??_EUSART_BaudRateSet+3)^0,f,c
 10919  0022E8  3218               	rrcf	(??_EUSART_BaudRateSet+2)^0,f,c
 10920  0022EA  3217               	rrcf	(??_EUSART_BaudRateSet+1)^0,f,c
 10921  0022EC  3216               	rrcf	??_EUSART_BaudRateSet^0,f,c
 10922  0022EE                     u3560:
 10923  0022EE  2EE8               	decfsz	wreg,f,c
 10924  0022F0  EF72  F011         	goto	u3565
 10925  0022F4  C016  F01A         	movff	??_EUSART_BaudRateSet,EUSART_BaudRateSet@tmp
 10926  0022F8  C017  F01B         	movff	??_EUSART_BaudRateSet+1,EUSART_BaudRateSet@tmp+1
 10927  0022FC  C018  F01C         	movff	??_EUSART_BaudRateSet+2,EUSART_BaudRateSet@tmp+2
 10928  002300  C019  F01D         	movff	??_EUSART_BaudRateSet+3,EUSART_BaudRateSet@tmp+3
 10929  002304                     
 10930                           ;EUSART.c: 48: tmp--;
 10931  002304  061A               	decf	EUSART_BaudRateSet@tmp^0,f,c
 10932  002306  0E00               	movlw	0
 10933  002308  5A1B               	subwfb	(EUSART_BaudRateSet@tmp+1)^0,f,c
 10934  00230A  5A1C               	subwfb	(EUSART_BaudRateSet@tmp+2)^0,f,c
 10935  00230C  5A1D               	subwfb	(EUSART_BaudRateSet@tmp+3)^0,f,c
 10936  00230E                     
 10937                           ;EUSART.c: 50: SPBRG = (uint8_t) tmp;
 10938  00230E  C01A  FFAF         	movff	EUSART_BaudRateSet@tmp,4015	;volatile
 10939  002312                     
 10940                           ;EUSART.c: 51: SPBRGH = (uint8_t) (tmp >> 8);
 10941  002312  C01B  FFB0         	movff	EUSART_BaudRateSet@tmp+1,4016	;volatile
 10942  002316  0012               	return		;funcret
 10943  002318                     __end_of_EUSART_BaudRateSet:
 10944                           	opt callstack 0
 10945                           
 10946 ;; *************** function ___lldiv *****************
 10947 ;; Defined at:
 10948 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
 10949 ;; Parameters:    Size  Location     Type
 10950 ;;  dividend        4    4[COMRAM] unsigned long 
 10951 ;;  divisor         4    8[COMRAM] unsigned long 
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  quotient        4   12[COMRAM] unsigned long 
 10954 ;;  counter         1   16[COMRAM] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  4    4[COMRAM] unsigned long 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10964 ;;      Params:         8       0       0       0       0       0       0       0       0
 10965 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10966 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10967 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10968 ;;Total ram usage:       13 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    2
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_Ecg_ProcessHeartRate
 10975 ;;		_EUSART_BaudRateSet
 10976 ;;		_sprintf
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980                           	psect	text58
 10981  001F2E                     __ptext58:
 10982                           	opt callstack 0
 10983  001F2E                     ___lldiv:
 10984                           	opt callstack 24
 10985  001F2E  0E00               	movlw	0
 10986  001F30  6E0D               	movwf	___lldiv@quotient^0,c
 10987  001F32  0E00               	movlw	0
 10988  001F34  6E0E               	movwf	(___lldiv@quotient+1)^0,c
 10989  001F36  0E00               	movlw	0
 10990  001F38  6E0F               	movwf	(___lldiv@quotient+2)^0,c
 10991  001F3A  0E00               	movlw	0
 10992  001F3C  6E10               	movwf	(___lldiv@quotient+3)^0,c
 10993  001F3E  5009               	movf	___lldiv@divisor^0,w,c
 10994  001F40  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
 10995  001F42  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
 10996  001F44  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
 10997  001F46  B4D8               	btfsc	status,2,c
 10998  001F48  EFA8  F00F         	goto	u2851
 10999  001F4C  EFAA  F00F         	goto	u2850
 11000  001F50                     u2851:
 11001  001F50  EFE0  F00F         	goto	l782
 11002  001F54                     u2850:
 11003  001F54  0E01               	movlw	1
 11004  001F56  6E11               	movwf	___lldiv@counter^0,c
 11005  001F58  EFB4  F00F         	goto	l3798
 11006  001F5C                     l3796:
 11007  001F5C  90D8               	bcf	status,0,c
 11008  001F5E  3609               	rlcf	___lldiv@divisor^0,f,c
 11009  001F60  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
 11010  001F62  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
 11011  001F64  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
 11012  001F66  2A11               	incf	___lldiv@counter^0,f,c
 11013  001F68                     l3798:
 11014  001F68  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
 11015  001F6A  EFB9  F00F         	goto	u2861
 11016  001F6E  EFBB  F00F         	goto	u2860
 11017  001F72                     u2861:
 11018  001F72  EFAE  F00F         	goto	l3796
 11019  001F76                     u2860:
 11020  001F76                     l3800:
 11021  001F76  90D8               	bcf	status,0,c
 11022  001F78  360D               	rlcf	___lldiv@quotient^0,f,c
 11023  001F7A  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
 11024  001F7C  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
 11025  001F7E  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
 11026  001F80  5009               	movf	___lldiv@divisor^0,w,c
 11027  001F82  5C05               	subwf	___lldiv@dividend^0,w,c
 11028  001F84  500A               	movf	(___lldiv@divisor+1)^0,w,c
 11029  001F86  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
 11030  001F88  500B               	movf	(___lldiv@divisor+2)^0,w,c
 11031  001F8A  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
 11032  001F8C  500C               	movf	(___lldiv@divisor+3)^0,w,c
 11033  001F8E  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
 11034  001F90  A0D8               	btfss	status,0,c
 11035  001F92  EFCD  F00F         	goto	u2871
 11036  001F96  EFCF  F00F         	goto	u2870
 11037  001F9A                     u2871:
 11038  001F9A  EFD8  F00F         	goto	l3808
 11039  001F9E                     u2870:
 11040  001F9E  5009               	movf	___lldiv@divisor^0,w,c
 11041  001FA0  5E05               	subwf	___lldiv@dividend^0,f,c
 11042  001FA2  500A               	movf	(___lldiv@divisor+1)^0,w,c
 11043  001FA4  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
 11044  001FA6  500B               	movf	(___lldiv@divisor+2)^0,w,c
 11045  001FA8  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
 11046  001FAA  500C               	movf	(___lldiv@divisor+3)^0,w,c
 11047  001FAC  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
 11048  001FAE  800D               	bsf	___lldiv@quotient^0,0,c
 11049  001FB0                     l3808:
 11050  001FB0  90D8               	bcf	status,0,c
 11051  001FB2  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
 11052  001FB4  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
 11053  001FB6  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
 11054  001FB8  3209               	rrcf	___lldiv@divisor^0,f,c
 11055  001FBA  2E11               	decfsz	___lldiv@counter^0,f,c
 11056  001FBC  EFBB  F00F         	goto	l3800
 11057  001FC0                     l782:
 11058  001FC0  C00D  F005         	movff	___lldiv@quotient,?___lldiv
 11059  001FC4  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
 11060  001FC8  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
 11061  001FCC  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
 11062  001FD0  0012               	return		;funcret
 11063  001FD2                     __end_of___lldiv:
 11064                           	opt callstack 0
 11065                           
 11066 ;; *************** function _A6_IsAlive *****************
 11067 ;; Defined at:
 11068 ;;		line 54 in file "A6Lib.c"
 11069 ;; Parameters:    Size  Location     Type
 11070 ;;		None
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;  response       32   30[COMRAM] unsigned char [32]
 11073 ;; Return value:  Size  Location     Type
 11074 ;;                  1    wreg      unsigned char 
 11075 ;; Registers used:
 11076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11077 ;; Tracked objects:
 11078 ;;		On entry : 0/0
 11079 ;;		On exit  : 0/0
 11080 ;;		Unchanged: 0/0
 11081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11082 ;;      Params:         0       0       0       0       0       0       0       0       0
 11083 ;;      Locals:        32       0       0       0       0       0       0       0       0
 11084 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11085 ;;      Totals:        32       0       0       0       0       0       0       0       0
 11086 ;;Total ram usage:       32 bytes
 11087 ;; Hardware stack levels used:    1
 11088 ;; Hardware stack levels required when called:    6
 11089 ;; This function calls:
 11090 ;;		_A6_Command
 11091 ;;		_strcmp
 11092 ;; This function is called by:
 11093 ;;		_A6_BaudRateSet
 11094 ;;		_A6_BaudRateAutoDetect
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           
 11098                           	psect	text59
 11099  002A7C                     __ptext59:
 11100                           	opt callstack 0
 11101  002A7C                     _A6_IsAlive:
 11102                           	opt callstack 22
 11103  002A7C                     
 11104                           ;A6Lib.c: 55: char response[32];;A6Lib.c: 56: A6_Command("AT\r", 0, response, 32);
 11105  002A7C  0EEE               	movlw	low STR_5
 11106  002A7E  6E18               	movwf	A6_Command@command^0,c
 11107  002A80  0E5F               	movlw	high STR_5
 11108  002A82  6E19               	movwf	(A6_Command@command+1)^0,c
 11109  002A84  0E00               	movlw	0
 11110  002A86  6E1B               	movwf	(A6_Command@timeout+1)^0,c
 11111  002A88  0E00               	movlw	0
 11112  002A8A  6E1A               	movwf	A6_Command@timeout^0,c
 11113  002A8C  0E1F               	movlw	low A6_IsAlive@response
 11114  002A8E  6E1C               	movwf	A6_Command@response^0,c
 11115  002A90  0E00               	movlw	high A6_IsAlive@response
 11116  002A92  6E1D               	movwf	(A6_Command@response+1)^0,c
 11117  002A94  0E20               	movlw	32
 11118  002A96  6E1E               	movwf	A6_Command@responseLen^0,c
 11119  002A98  EC07  F011         	call	_A6_Command	;wreg free
 11120  002A9C                     
 11121                           ;A6Lib.c: 57: if(strcmp(response, "OK") == 0) {
 11122  002A9C  0E1F               	movlw	low A6_IsAlive@response
 11123  002A9E  6E05               	movwf	strcmp@s1^0,c
 11124  002AA0  0E00               	movlw	high A6_IsAlive@response
 11125  002AA2  6E06               	movwf	(strcmp@s1+1)^0,c
 11126  002AA4  0EF6               	movlw	low STR_6
 11127  002AA6  6E07               	movwf	strcmp@s2^0,c
 11128  002AA8  0E5F               	movlw	high STR_6
 11129  002AAA  6E08               	movwf	(strcmp@s2+1)^0,c
 11130  002AAC  EC66  F014         	call	_strcmp	;wreg free
 11131  002AB0  5005               	movf	?_strcmp^0,w,c
 11132  002AB2  1006               	iorwf	(?_strcmp+1)^0,w,c
 11133  002AB4  A4D8               	btfss	status,2,c
 11134  002AB6  EF5F  F015         	goto	u3511
 11135  002ABA  EF61  F015         	goto	u3510
 11136  002ABE                     u3511:
 11137  002ABE  EF64  F015         	goto	l4270
 11138  002AC2                     u3510:
 11139  002AC2                     
 11140                           ;A6Lib.c: 58: return 1;
 11141  002AC2  0E01               	movlw	1
 11142  002AC4  EF65  F015         	goto	l574
 11143  002AC8                     l4270:
 11144                           
 11145                           ;A6Lib.c: 59: };A6Lib.c: 60: return 0;
 11146  002AC8  0E00               	movlw	0
 11147  002ACA                     l574:
 11148  002ACA  0012               	return		;funcret
 11149  002ACC                     __end_of_A6_IsAlive:
 11150                           	opt callstack 0
 11151                           
 11152 ;; *************** function _strcmp *****************
 11153 ;; Defined at:
 11154 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;  s1              2    4[COMRAM] PTR const unsigned char 
 11157 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_IsAlive@response(32), 
 11158 ;;  s2              2    6[COMRAM] PTR const unsigned char 
 11159 ;;		 -> STR_13(3), STR_12(3), STR_6(3), 
 11160 ;; Auto vars:     Size  Location     Type
 11161 ;;  r               1   10[COMRAM] char 
 11162 ;; Return value:  Size  Location     Type
 11163 ;;                  2    4[COMRAM] int 
 11164 ;; Registers used:
 11165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11166 ;; Tracked objects:
 11167 ;;		On entry : 0/0
 11168 ;;		On exit  : 0/0
 11169 ;;		Unchanged: 0/0
 11170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11171 ;;      Params:         4       0       0       0       0       0       0       0       0
 11172 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11173 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11174 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11175 ;;Total ram usage:        7 bytes
 11176 ;; Hardware stack levels used:    1
 11177 ;; Hardware stack levels required when called:    2
 11178 ;; This function calls:
 11179 ;;		Nothing
 11180 ;; This function is called by:
 11181 ;;		_A6_IsAlive
 11182 ;;		_A6_BaudRateSet
 11183 ;;		_A6_Process_Random_Comms
 11184 ;; This function uses a non-reentrant model
 11185 ;;
 11186                           
 11187                           	psect	text60
 11188  0028CC                     __ptext60:
 11189                           	opt callstack 0
 11190  0028CC                     _strcmp:
 11191                           	opt callstack 26
 11192  0028CC  EF6C  F014         	goto	l4072
 11193  0028D0                     l4070:
 11194  0028D0  4A05               	infsnz	strcmp@s1^0,f,c
 11195  0028D2  2A06               	incf	(strcmp@s1+1)^0,f,c
 11196  0028D4  4A07               	infsnz	strcmp@s2^0,f,c
 11197  0028D6  2A08               	incf	(strcmp@s2+1)^0,f,c
 11198  0028D8                     l4072:
 11199  0028D8  C007  FFF6         	movff	strcmp@s2,tblptrl
 11200  0028DC  C008  FFF7         	movff	strcmp@s2+1,tblptrh
 11201  0028E0                     	if	0	;tblptru may be non-zero
 11202  0028E0                     	endif
 11203  0028E0                     	if	0	;tblptru may be non-zero
 11204  0028E0                     	endif
 11205  0028E0  0008               	tblrd		*
 11206  0028E2  CFF5 F009          	movff	tablat,??_strcmp
 11207  0028E6  C005  FFD9         	movff	strcmp@s1,fsr2l
 11208  0028EA  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 11209  0028EE  50DF               	movf	indf2,w,c
 11210  0028F0  6E0A               	movwf	(??_strcmp+1)^0,c
 11211  0028F2  5009               	movf	??_strcmp^0,w,c
 11212  0028F4  5C0A               	subwf	(??_strcmp+1)^0,w,c
 11213  0028F6  6E0B               	movwf	strcmp@r^0,c
 11214  0028F8  500B               	movf	strcmp@r^0,w,c
 11215  0028FA  A4D8               	btfss	status,2,c
 11216  0028FC  EF82  F014         	goto	u3231
 11217  002900  EF84  F014         	goto	u3230
 11218  002904                     u3231:
 11219  002904  EF90  F014         	goto	l4076
 11220  002908                     u3230:
 11221  002908  C005  FFD9         	movff	strcmp@s1,fsr2l
 11222  00290C  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 11223  002910  50DF               	movf	indf2,w,c
 11224  002912  A4D8               	btfss	status,2,c
 11225  002914  EF8E  F014         	goto	u3241
 11226  002918  EF90  F014         	goto	u3240
 11227  00291C                     u3241:
 11228  00291C  EF68  F014         	goto	l4070
 11229  002920                     u3240:
 11230  002920                     l4076:
 11231  002920  500B               	movf	strcmp@r^0,w,c
 11232  002922  6E05               	movwf	?_strcmp^0,c
 11233  002924  6A06               	clrf	(?_strcmp+1)^0,c
 11234  002926  BE05               	btfsc	?_strcmp^0,7,c
 11235  002928  0606               	decf	(?_strcmp+1)^0,f,c
 11236  00292A  0012               	return		;funcret
 11237  00292C                     __end_of_strcmp:
 11238                           	opt callstack 0
 11239                           
 11240 ;; *************** function _A6_Command *****************
 11241 ;; Defined at:
 11242 ;;		line 18 in file "A6Lib.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;  command         2   23[COMRAM] PTR const unsigned char 
 11245 ;;		 -> STR_25(10), STR_20(8), STR_14(10), A6_BaudRateSet@request(20), 
 11246 ;;		 -> STR_7(9), STR_5(4), STR_4(13), 
 11247 ;;  timeout         2   25[COMRAM] int 
 11248 ;;  response        2   27[COMRAM] PTR unsigned char 
 11249 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@re
      +sponse(32), 
 11250 ;;		 -> A6_IsAlive@response(32), NULL(0), refreshGSM@operator(32), 
 11251 ;;  responseLen     1   29[COMRAM] unsigned char 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;		None
 11254 ;; Return value:  Size  Location     Type
 11255 ;;                  1    wreg      void 
 11256 ;; Registers used:
 11257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11258 ;; Tracked objects:
 11259 ;;		On entry : 0/0
 11260 ;;		On exit  : 0/0
 11261 ;;		Unchanged: 0/0
 11262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11263 ;;      Params:         7       0       0       0       0       0       0       0       0
 11264 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11265 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11266 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11267 ;;Total ram usage:        7 bytes
 11268 ;; Hardware stack levels used:    1
 11269 ;; Hardware stack levels required when called:    5
 11270 ;; This function calls:
 11271 ;;		_A6_ReadLine
 11272 ;;		_EUSART_RX_Flush
 11273 ;;		_EUSART_TX_String
 11274 ;;		_strlen
 11275 ;; This function is called by:
 11276 ;;		_A6_Init
 11277 ;;		_A6_IsAlive
 11278 ;;		_A6_BaudRateGet
 11279 ;;		_A6_BaudRateSet
 11280 ;;		_A6_NetworkGetRSSI
 11281 ;;		_A6_NetworkGetOperator
 11282 ;;		_A6_NetworkGetStatus
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text61
 11287  00220E                     __ptext61:
 11288                           	opt callstack 0
 11289  00220E                     _A6_Command:
 11290                           	opt callstack 21
 11291  00220E                     
 11292                           ;A6Lib.c: 19: A6_LAST_COMMAND_MILLISECONDS += 75;
 11293  00220E  0E4B               	movlw	75
 11294  002210  0100               	movlb	0	; () banked
 11295  002212  27B2               	addwf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),f,b
 11296  002214  0E00               	movlw	0
 11297  002216  23B3               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),f,b
 11298  002218  23B4               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),f,b
 11299  00221A  23B5               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),f,b
 11300  00221C                     l3694:
 11301                           
 11302                           ; BSR set to: 0
 11303  00221C  51B2               	movf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),w,b
 11304  00221E  5DB6               	subwf	_MILLISECONDS& (0+255),w,b
 11305  002220  51B3               	movf	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),w,b
 11306  002222  59B7               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
 11307  002224  51B4               	movf	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),w,b
 11308  002226  59B8               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
 11309  002228  51B5               	movf	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),w,b
 11310  00222A  59B9               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
 11311  00222C  A0D8               	btfss	status,0,c
 11312  00222E  EF1B  F011         	goto	u2671
 11313  002232  EF1D  F011         	goto	u2670
 11314  002236                     u2671:
 11315  002236  EF0E  F011         	goto	l3694
 11316  00223A                     u2670:
 11317  00223A                     
 11318                           ; BSR set to: 0
 11319                           ;A6Lib.c: 21: A6_LAST_COMMAND_MILLISECONDS = MILLISECONDS;
 11320  00223A  C0B6  F0B2         	movff	_MILLISECONDS,_A6_LAST_COMMAND_MILLISECONDS
 11321  00223E  C0B7  F0B3         	movff	_MILLISECONDS+1,_A6_LAST_COMMAND_MILLISECONDS+1
 11322  002242  C0B8  F0B4         	movff	_MILLISECONDS+2,_A6_LAST_COMMAND_MILLISECONDS+2
 11323  002246  C0B9  F0B5         	movff	_MILLISECONDS+3,_A6_LAST_COMMAND_MILLISECONDS+3
 11324  00224A                     
 11325                           ; BSR set to: 0
 11326                           ;A6Lib.c: 23: EUSART_RX_Flush();
 11327  00224A  ECE0  F017         	call	_EUSART_RX_Flush	;wreg free
 11328  00224E                     
 11329                           ;A6Lib.c: 24: EUSART_TX_String(command, strlen(command));
 11330  00224E  C018  F009         	movff	A6_Command@command,EUSART_TX_String@str
 11331  002252  C019  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
 11332  002256  C018  F005         	movff	A6_Command@command,strlen@s
 11333  00225A  C019  F006         	movff	A6_Command@command+1,strlen@s+1
 11334  00225E  ECDB  F015         	call	_strlen	;wreg free
 11335  002262  5005               	movf	?_strlen^0,w,c
 11336  002264  6E0B               	movwf	EUSART_TX_String@len^0,c
 11337  002266  EC6E  F016         	call	_EUSART_TX_String	;wreg free
 11338  00226A                     
 11339                           ;A6Lib.c: 25: if(responseLen != 0) {
 11340  00226A  501E               	movf	A6_Command@responseLen^0,w,c
 11341  00226C  B4D8               	btfsc	status,2,c
 11342  00226E  EF3B  F011         	goto	u2681
 11343  002272  EF3D  F011         	goto	u2680
 11344  002276                     u2681:
 11345  002276  EF49  F011         	goto	l556
 11346  00227A                     u2680:
 11347  00227A                     
 11348                           ;A6Lib.c: 26: A6_ReadLine(response, responseLen, timeout);
 11349  00227A  C01C  F011         	movff	A6_Command@response,A6_ReadLine@line
 11350  00227E  C01D  F012         	movff	A6_Command@response+1,A6_ReadLine@line+1
 11351  002282  C01E  F013         	movff	A6_Command@responseLen,A6_ReadLine@lineLen
 11352  002286  C01A  F014         	movff	A6_Command@timeout,A6_ReadLine@timeout
 11353  00228A  C01B  F015         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
 11354  00228E  EC0A  F00E         	call	_A6_ReadLine	;wreg free
 11355  002292                     l556:
 11356  002292  0012               	return		;funcret
 11357  002294                     __end_of_A6_Command:
 11358                           	opt callstack 0
 11359                           
 11360 ;; *************** function _strlen *****************
 11361 ;; Defined at:
 11362 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
 11363 ;; Parameters:    Size  Location     Type
 11364 ;;  s               2    4[COMRAM] PTR const unsigned char 
 11365 ;;		 -> STR_26(8), STR_25(10), STR_21(7), STR_20(8), 
 11366 ;;		 -> STR_15(8), STR_14(10), A6_BaudRateSet@request(20), STR_8(7), 
 11367 ;;		 -> STR_7(9), STR_5(4), STR_4(13), refreshGSM@operator(32), 
 11368 ;; Auto vars:     Size  Location     Type
 11369 ;;  cp              2    6[COMRAM] PTR const unsigned char 
 11370 ;;		 -> STR_26(8), STR_25(10), STR_21(7), STR_20(8), 
 11371 ;;		 -> STR_15(8), STR_14(10), A6_BaudRateSet@request(20), STR_8(7), 
 11372 ;;		 -> STR_7(9), STR_5(4), STR_4(13), refreshGSM@operator(32), 
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  2    4[COMRAM] unsigned int 
 11375 ;; Registers used:
 11376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11377 ;; Tracked objects:
 11378 ;;		On entry : 0/0
 11379 ;;		On exit  : 0/0
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11382 ;;      Params:         2       0       0       0       0       0       0       0       0
 11383 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11384 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11385 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11386 ;;Total ram usage:        4 bytes
 11387 ;; Hardware stack levels used:    1
 11388 ;; Hardware stack levels required when called:    2
 11389 ;; This function calls:
 11390 ;;		Nothing
 11391 ;; This function is called by:
 11392 ;;		_refreshGSM
 11393 ;;		_A6_Command
 11394 ;;		_strstr
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text62
 11399  002BB6                     __ptext62:
 11400                           	opt callstack 0
 11401  002BB6                     _strlen:
 11402                           	opt callstack 26
 11403  002BB6  C005  F007         	movff	strlen@s,strlen@cp
 11404  002BBA  C006  F008         	movff	strlen@s+1,strlen@cp+1
 11405  002BBE  EFE3  F015         	goto	l3480
 11406  002BC2                     l3478:
 11407  002BC2  4A07               	infsnz	strlen@cp^0,f,c
 11408  002BC4  2A08               	incf	(strlen@cp+1)^0,f,c
 11409  002BC6                     l3480:
 11410  002BC6  C007  FFF6         	movff	strlen@cp,tblptrl
 11411  002BCA  C008  FFF7         	movff	strlen@cp+1,tblptrh
 11412  002BCE  6AF8               	clrf	tblptru,c
 11413  002BD0  0E07               	movlw	(high __ramtop+-1)
 11414  002BD2  64F7               	cpfsgt	tblptrh,c
 11415  002BD4  D003               	bra	u2287
 11416  002BD6  0008               	tblrd		*
 11417  002BD8  50F5               	movf	tablat,w,c
 11418  002BDA  D005               	bra	u2280
 11419  002BDC                     u2287:
 11420  002BDC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11421  002BE0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11422  002BE4  50E7               	movf	indf1,w,c
 11423  002BE6                     u2280:
 11424  002BE6  0900               	iorlw	0
 11425  002BE8  A4D8               	btfss	status,2,c
 11426  002BEA  EFF9  F015         	goto	u2291
 11427  002BEE  EFFB  F015         	goto	u2290
 11428  002BF2                     u2291:
 11429  002BF2  EFE1  F015         	goto	l3478
 11430  002BF6                     u2290:
 11431  002BF6  5005               	movf	strlen@s^0,w,c
 11432  002BF8  5C07               	subwf	strlen@cp^0,w,c
 11433  002BFA  6E05               	movwf	?_strlen^0,c
 11434  002BFC  5006               	movf	(strlen@s+1)^0,w,c
 11435  002BFE  5808               	subwfb	(strlen@cp+1)^0,w,c
 11436  002C00  6E06               	movwf	(?_strlen+1)^0,c
 11437  002C02  0012               	return		;funcret
 11438  002C04                     __end_of_strlen:
 11439                           	opt callstack 0
 11440                           
 11441 ;; *************** function _EUSART_TX_String *****************
 11442 ;; Defined at:
 11443 ;;		line 62 in file "EUSART.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  str             2    8[COMRAM] PTR const unsigned char 
 11446 ;;		 -> STR_25(10), STR_20(8), STR_14(10), A6_BaudRateSet@request(20), 
 11447 ;;		 -> STR_7(9), STR_5(4), STR_4(13), 
 11448 ;;  len             1   10[COMRAM] unsigned char 
 11449 ;; Auto vars:     Size  Location     Type
 11450 ;;		None
 11451 ;; Return value:  Size  Location     Type
 11452 ;;                  1    wreg      void 
 11453 ;; Registers used:
 11454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11455 ;; Tracked objects:
 11456 ;;		On entry : 0/0
 11457 ;;		On exit  : 0/0
 11458 ;;		Unchanged: 0/0
 11459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11460 ;;      Params:         3       0       0       0       0       0       0       0       0
 11461 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11462 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11463 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11464 ;;Total ram usage:        3 bytes
 11465 ;; Hardware stack levels used:    1
 11466 ;; Hardware stack levels required when called:    3
 11467 ;; This function calls:
 11468 ;;		_EUSART_TX_Char
 11469 ;; This function is called by:
 11470 ;;		_A6_Command
 11471 ;; This function uses a non-reentrant model
 11472 ;;
 11473                           
 11474                           	psect	text63
 11475  002CDC                     __ptext63:
 11476                           	opt callstack 0
 11477  002CDC                     _EUSART_TX_String:
 11478                           	opt callstack 22
 11479  002CDC                     
 11480                           ;EUSART.c: 63: while(len--) {
 11481  002CDC  EF84  F016         	goto	l3542
 11482  002CE0                     l3538:
 11483                           
 11484                           ;EUSART.c: 64: EUSART_TX_Char(*str++);
 11485  002CE0  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
 11486  002CE4  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
 11487  002CE8  6AF8               	clrf	tblptru,c
 11488  002CEA  0E07               	movlw	(high __ramtop+-1)
 11489  002CEC  64F7               	cpfsgt	tblptrh,c
 11490  002CEE  D003               	bra	u2387
 11491  002CF0  0008               	tblrd		*
 11492  002CF2  50F5               	movf	tablat,w,c
 11493  002CF4  D005               	bra	u2380
 11494  002CF6                     u2387:
 11495  002CF6  CFF6 FFE1          	movff	tblptrl,fsr1l
 11496  002CFA  CFF7 FFE2          	movff	tblptrh,fsr1h
 11497  002CFE  50E7               	movf	indf1,w,c
 11498  002D00                     u2380:
 11499  002D00  ECCC  F017         	call	_EUSART_TX_Char
 11500  002D04  4A09               	infsnz	EUSART_TX_String@str^0,f,c
 11501  002D06  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
 11502  002D08                     l3542:
 11503  002D08  060B               	decf	EUSART_TX_String@len^0,f,c
 11504  002D0A  280B               	incf	EUSART_TX_String@len^0,w,c
 11505  002D0C  A4D8               	btfss	status,2,c
 11506  002D0E  EF8B  F016         	goto	u2391
 11507  002D12  EF8D  F016         	goto	u2390
 11508  002D16                     u2391:
 11509  002D16  EF70  F016         	goto	l3538
 11510  002D1A                     u2390:
 11511  002D1A  0012               	return		;funcret
 11512  002D1C                     __end_of_EUSART_TX_String:
 11513                           	opt callstack 0
 11514                           
 11515 ;; *************** function _EUSART_TX_Char *****************
 11516 ;; Defined at:
 11517 ;;		line 56 in file "EUSART.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  c               1    wreg     unsigned char 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  c               1    4[COMRAM] unsigned char 
 11522 ;; Return value:  Size  Location     Type
 11523 ;;                  1    wreg      void 
 11524 ;; Registers used:
 11525 ;;		wreg
 11526 ;; Tracked objects:
 11527 ;;		On entry : 0/0
 11528 ;;		On exit  : 0/0
 11529 ;;		Unchanged: 0/0
 11530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11531 ;;      Params:         0       0       0       0       0       0       0       0       0
 11532 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11533 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11534 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11535 ;;Total ram usage:        1 bytes
 11536 ;; Hardware stack levels used:    1
 11537 ;; Hardware stack levels required when called:    2
 11538 ;; This function calls:
 11539 ;;		Nothing
 11540 ;; This function is called by:
 11541 ;;		_EUSART_TX_String
 11542 ;; This function uses a non-reentrant model
 11543 ;;
 11544                           
 11545                           	psect	text64
 11546  002F98                     __ptext64:
 11547                           	opt callstack 0
 11548  002F98                     _EUSART_TX_Char:
 11549                           	opt callstack 22
 11550                           
 11551                           ;incstack = 0
 11552                           ;EUSART_TX_Char@c stored from wreg
 11553  002F98  6E05               	movwf	EUSART_TX_Char@c^0,c
 11554  002F9A                     l674:
 11555  002F9A  A89E               	btfss	3998,4,c	;volatile
 11556  002F9C  EFD2  F017         	goto	u2231
 11557  002FA0  EFD4  F017         	goto	u2230
 11558  002FA4                     u2231:
 11559  002FA4  EFCD  F017         	goto	l674
 11560  002FA8                     u2230:
 11561  002FA8                     
 11562                           ;EUSART.c: 58: TXREG = c;
 11563  002FA8  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
 11564  002FAC  F000               	nop		;# 
 11565  002FAE  0012               	return		;funcret
 11566  002FB0                     __end_of_EUSART_TX_Char:
 11567                           	opt callstack 0
 11568                           
 11569 ;; *************** function _EUSART_RX_Flush *****************
 11570 ;; Defined at:
 11571 ;;		line 82 in file "EUSART.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;		None
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;		None
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  1    wreg      void 
 11578 ;; Registers used:
 11579 ;;		None
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/0
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11585 ;;      Params:         0       0       0       0       0       0       0       0       0
 11586 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11587 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11588 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11589 ;;Total ram usage:        0 bytes
 11590 ;; Hardware stack levels used:    1
 11591 ;; Hardware stack levels required when called:    2
 11592 ;; This function calls:
 11593 ;;		Nothing
 11594 ;; This function is called by:
 11595 ;;		_A6_Command
 11596 ;; This function uses a non-reentrant model
 11597 ;;
 11598                           
 11599                           	psect	text65
 11600  002FC0                     __ptext65:
 11601                           	opt callstack 0
 11602  002FC0                     _EUSART_RX_Flush:
 11603                           	opt callstack 23
 11604  002FC0                     
 11605                           ;EUSART.c: 83: EUSART_RX.iRead = EUSART_RX.iWrite;
 11606  002FC0  C101  F100         	movff	_EUSART_RX+1,_EUSART_RX
 11607  002FC4  0012               	return		;funcret
 11608  002FC6                     __end_of_EUSART_RX_Flush:
 11609                           	opt callstack 0
 11610                           
 11611 ;; *************** function _A6_ReadLine *****************
 11612 ;; Defined at:
 11613 ;;		line 31 in file "A6Lib.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  line            2   16[COMRAM] PTR unsigned char 
 11616 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@response(32), A6_BaudR
      +ateSet@response(32), 
 11617 ;;		 -> A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), refreshGSM@operator(32), 
 11618 ;;  lineLen         1   18[COMRAM] unsigned char 
 11619 ;;  timeout         2   19[COMRAM] int 
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;  c               1   22[COMRAM] unsigned char 
 11622 ;;  iResponse       1   21[COMRAM] unsigned char 
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  1    wreg      unsigned char 
 11625 ;; Registers used:
 11626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11632 ;;      Params:         5       0       0       0       0       0       0       0       0
 11633 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11635 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11636 ;;Total ram usage:        7 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:    4
 11639 ;; This function calls:
 11640 ;;		_EUSART_BufferGetChar
 11641 ;;		_memset
 11642 ;; This function is called by:
 11643 ;;		_A6_Command
 11644 ;;		_A6_Process_Random_Comms
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           	psect	text66
 11649  001C14                     __ptext66:
 11650                           	opt callstack 0
 11651  001C14                     _A6_ReadLine:
 11652                           	opt callstack 21
 11653  001C14                     
 11654                           ;A6Lib.c: 32: char c;;A6Lib.c: 33: memset(line, 0x00, lineLen);
 11655  001C14  C011  F005         	movff	A6_ReadLine@line,memset@p1
 11656  001C18  C012  F006         	movff	A6_ReadLine@line+1,memset@p1+1
 11657  001C1C  0E00               	movlw	0
 11658  001C1E  6E08               	movwf	(memset@c+1)^0,c
 11659  001C20  0E00               	movlw	0
 11660  001C22  6E07               	movwf	memset@c^0,c
 11661  001C24  C013  F009         	movff	A6_ReadLine@lineLen,memset@n
 11662  001C28  6A0A               	clrf	(memset@n+1)^0,c
 11663  001C2A  EC04  F017         	call	_memset	;wreg free
 11664  001C2E                     l559:
 11665                           
 11666                           ;A6Lib.c: 37: c = EUSART_BufferGetChar(timeout);
 11667  001C2E  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 11668  001C32  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 11669  001C36  EC02  F016         	call	_EUSART_BufferGetChar	;wreg free
 11670  001C3A  6E17               	movwf	A6_ReadLine@c^0,c
 11671  001C3C                     
 11672                           ;A6Lib.c: 38: if(c == (0)) return 0;
 11673  001C3C  5017               	movf	A6_ReadLine@c^0,w,c
 11674  001C3E  A4D8               	btfss	status,2,c
 11675  001C40  EF24  F00E         	goto	u2401
 11676  001C44  EF26  F00E         	goto	u2400
 11677  001C48                     u2401:
 11678  001C48  EF29  F00E         	goto	l3552
 11679  001C4C                     u2400:
 11680  001C4C  0E00               	movlw	0
 11681  001C4E  EF74  F00E         	goto	l561
 11682  001C52                     l3552:
 11683                           
 11684                           ;A6Lib.c: 39: if((c != '\r') && (c != '\n')) break;
 11685  001C52  0E0D               	movlw	13
 11686  001C54  1817               	xorwf	A6_ReadLine@c^0,w,c
 11687  001C56  B4D8               	btfsc	status,2,c
 11688  001C58  EF30  F00E         	goto	u2411
 11689  001C5C  EF32  F00E         	goto	u2410
 11690  001C60                     u2411:
 11691  001C60  EF17  F00E         	goto	l559
 11692  001C64                     u2410:
 11693  001C64  0E0A               	movlw	10
 11694  001C66  1817               	xorwf	A6_ReadLine@c^0,w,c
 11695  001C68  B4D8               	btfsc	status,2,c
 11696  001C6A  EF39  F00E         	goto	u2421
 11697  001C6E  EF3B  F00E         	goto	u2420
 11698  001C72                     u2421:
 11699  001C72  EF17  F00E         	goto	l559
 11700  001C76                     u2420:
 11701  001C76                     
 11702                           ;A6Lib.c: 40: };A6Lib.c: 43: uint8_t iResponse = 0;
 11703  001C76  0E00               	movlw	0
 11704  001C78  6E16               	movwf	A6_ReadLine@iResponse^0,c
 11705  001C7A                     l3560:
 11706                           
 11707                           ;A6Lib.c: 45: if((c == '\r') || (c == (0))) break;
 11708  001C7A  0E0D               	movlw	13
 11709  001C7C  1817               	xorwf	A6_ReadLine@c^0,w,c
 11710  001C7E  B4D8               	btfsc	status,2,c
 11711  001C80  EF44  F00E         	goto	u2431
 11712  001C84  EF46  F00E         	goto	u2430
 11713  001C88                     u2431:
 11714  001C88  EF73  F00E         	goto	l3574
 11715  001C8C                     u2430:
 11716  001C8C  5017               	movf	A6_ReadLine@c^0,w,c
 11717  001C8E  A4D8               	btfss	status,2,c
 11718  001C90  EF4C  F00E         	goto	u2441
 11719  001C94  EF4E  F00E         	goto	u2440
 11720  001C98                     u2441:
 11721  001C98  EF50  F00E         	goto	l3564
 11722  001C9C                     u2440:
 11723  001C9C  EF73  F00E         	goto	l3574
 11724  001CA0                     l3564:
 11725                           
 11726                           ;A6Lib.c: 46: line[iResponse] = c;
 11727  001CA0  5016               	movf	A6_ReadLine@iResponse^0,w,c
 11728  001CA2  2411               	addwf	A6_ReadLine@line^0,w,c
 11729  001CA4  6ED9               	movwf	fsr2l,c
 11730  001CA6  0E00               	movlw	0
 11731  001CA8  2012               	addwfc	(A6_ReadLine@line+1)^0,w,c
 11732  001CAA  6EDA               	movwf	fsr2h,c
 11733  001CAC  C017  FFDF         	movff	A6_ReadLine@c,indf2
 11734  001CB0                     
 11735                           ;A6Lib.c: 47: iResponse++;
 11736  001CB0  2A16               	incf	A6_ReadLine@iResponse^0,f,c
 11737  001CB2                     
 11738                           ;A6Lib.c: 48: if(iResponse == lineLen) break;
 11739  001CB2  5013               	movf	A6_ReadLine@lineLen^0,w,c
 11740  001CB4  1816               	xorwf	A6_ReadLine@iResponse^0,w,c
 11741  001CB6  A4D8               	btfss	status,2,c
 11742  001CB8  EF60  F00E         	goto	u2451
 11743  001CBC  EF62  F00E         	goto	u2450
 11744  001CC0                     u2451:
 11745  001CC0  EF64  F00E         	goto	l3572
 11746  001CC4                     u2450:
 11747  001CC4  EF73  F00E         	goto	l3574
 11748  001CC8                     l3572:
 11749                           
 11750                           ;A6Lib.c: 49: } while(c = EUSART_BufferGetChar(timeout));
 11751  001CC8  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 11752  001CCC  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 11753  001CD0  EC02  F016         	call	_EUSART_BufferGetChar	;wreg free
 11754  001CD4  6E17               	movwf	A6_ReadLine@c^0,c
 11755  001CD6  5017               	movf	A6_ReadLine@c^0,w,c
 11756  001CD8  A4D8               	btfss	status,2,c
 11757  001CDA  EF71  F00E         	goto	u2461
 11758  001CDE  EF73  F00E         	goto	u2460
 11759  001CE2                     u2461:
 11760  001CE2  EF3D  F00E         	goto	l3560
 11761  001CE6                     u2460:
 11762  001CE6                     l3574:
 11763                           
 11764                           ;A6Lib.c: 51: return iResponse;
 11765  001CE6  5016               	movf	A6_ReadLine@iResponse^0,w,c
 11766  001CE8                     l561:
 11767  001CE8  0012               	return		;funcret
 11768  001CEA                     __end_of_A6_ReadLine:
 11769                           	opt callstack 0
 11770                           
 11771 ;; *************** function _memset *****************
 11772 ;; Defined at:
 11773 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
 11774 ;; Parameters:    Size  Location     Type
 11775 ;;  p1              2    4[COMRAM] PTR void 
 11776 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 11777 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), 
 11778 ;;		 -> refreshGSM@operator(32), 
 11779 ;;  c               2    6[COMRAM] int 
 11780 ;;  n               2    8[COMRAM] unsigned int 
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;  p               2   10[COMRAM] PTR unsigned char 
 11783 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 11784 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), 
 11785 ;;		 -> refreshGSM@operator(32), 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  2    4[COMRAM] PTR void 
 11788 ;; Registers used:
 11789 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11795 ;;      Params:         6       0       0       0       0       0       0       0       0
 11796 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11798 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11799 ;;Total ram usage:        8 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    2
 11802 ;; This function calls:
 11803 ;;		Nothing
 11804 ;; This function is called by:
 11805 ;;		_A6_ReadLine
 11806 ;;		_EUSART_Init
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           	psect	text67
 11811  002E08                     __ptext67:
 11812                           	opt callstack 0
 11813  002E08                     _memset:
 11814                           	opt callstack 22
 11815  002E08  C005  F00B         	movff	memset@p1,memset@p
 11816  002E0C  C006  F00C         	movff	memset@p1+1,memset@p+1
 11817  002E10  EF12  F017         	goto	l3442
 11818  002E14                     l3438:
 11819  002E14  C00B  FFD9         	movff	memset@p,fsr2l
 11820  002E18  C00C  FFDA         	movff	memset@p+1,fsr2h
 11821  002E1C  C007  FFDF         	movff	memset@c,indf2
 11822  002E20  4A0B               	infsnz	memset@p^0,f,c
 11823  002E22  2A0C               	incf	(memset@p+1)^0,f,c
 11824  002E24                     l3442:
 11825  002E24  0609               	decf	memset@n^0,f,c
 11826  002E26  A0D8               	btfss	status,0,c
 11827  002E28  060A               	decf	(memset@n+1)^0,f,c
 11828  002E2A  2809               	incf	memset@n^0,w,c
 11829  002E2C  E106               	bnz	u2201
 11830  002E2E  280A               	incf	(memset@n+1)^0,w,c
 11831  002E30  A4D8               	btfss	status,2,c
 11832  002E32  EF1D  F017         	goto	u2201
 11833  002E36  EF1F  F017         	goto	u2200
 11834  002E3A                     u2201:
 11835  002E3A  EF0A  F017         	goto	l3438
 11836  002E3E                     u2200:
 11837  002E3E  0012               	return		;funcret
 11838  002E40                     __end_of_memset:
 11839                           	opt callstack 0
 11840                           
 11841 ;; *************** function _EUSART_BufferGetChar *****************
 11842 ;; Defined at:
 11843 ;;		line 95 in file "EUSART.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;  timeout         2   14[COMRAM] int 
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;		None
 11848 ;; Return value:  Size  Location     Type
 11849 ;;                  1    wreg      unsigned char 
 11850 ;; Registers used:
 11851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11852 ;; Tracked objects:
 11853 ;;		On entry : 0/0
 11854 ;;		On exit  : 0/0
 11855 ;;		Unchanged: 0/0
 11856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11857 ;;      Params:         2       0       0       0       0       0       0       0       0
 11858 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11859 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11860 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11861 ;;Total ram usage:        2 bytes
 11862 ;; Hardware stack levels used:    1
 11863 ;; Hardware stack levels required when called:    3
 11864 ;; This function calls:
 11865 ;;		_EUSART_RX_AvailableData
 11866 ;; This function is called by:
 11867 ;;		_A6_ReadLine
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           	psect	text68
 11872  002C04                     __ptext68:
 11873                           	opt callstack 0
 11874  002C04                     _EUSART_BufferGetChar:
 11875                           	opt callstack 21
 11876  002C04                     
 11877                           ;EUSART.c: 96: if(EUSART_RX_AvailableData(timeout) == 0) return (0);
 11878  002C04  C00F  F005         	movff	EUSART_BufferGetChar@timeout,EUSART_RX_AvailableData@timeout
 11879  002C08  C010  F006         	movff	EUSART_BufferGetChar@timeout+1,EUSART_RX_AvailableData@timeout+1
 11880  002C0C  ECC3  F010         	call	_EUSART_RX_AvailableData	;wreg free
 11881  002C10  0900               	iorlw	0
 11882  002C12  A4D8               	btfss	status,2,c
 11883  002C14  EF0E  F016         	goto	u2211
 11884  002C18  EF10  F016         	goto	u2210
 11885  002C1C                     u2211:
 11886  002C1C  EF13  F016         	goto	l3450
 11887  002C20                     u2210:
 11888  002C20  0E00               	movlw	0
 11889  002C22  EF27  F016         	goto	l703
 11890  002C26                     l3450:
 11891                           
 11892                           ;EUSART.c: 97: EUSART_RX.iRead++;
 11893  002C26  0101               	movlb	1	; () banked
 11894  002C28  2B00               	incf	_EUSART_RX& (0+255),f,b
 11895  002C2A                     
 11896                           ; BSR set to: 1
 11897                           ;EUSART.c: 98: if(EUSART_RX.iRead == 128) EUSART_RX.iRead = 0;
 11898  002C2A  0E80               	movlw	128
 11899  002C2C  1900               	xorwf	_EUSART_RX& (0+255),w,b
 11900  002C2E  A4D8               	btfss	status,2,c
 11901  002C30  EF1C  F016         	goto	u2221
 11902  002C34  EF1E  F016         	goto	u2220
 11903  002C38                     u2221:
 11904  002C38  EF20  F016         	goto	l3456
 11905  002C3C                     u2220:
 11906  002C3C                     
 11907                           ; BSR set to: 1
 11908  002C3C  0E00               	movlw	0
 11909  002C3E  6F00               	movwf	_EUSART_RX& (0+255),b
 11910  002C40                     l3456:
 11911                           
 11912                           ; BSR set to: 1
 11913                           ;EUSART.c: 99: return EUSART_RX.buffer[EUSART_RX.iRead];
 11914  002C40  0E02               	movlw	low (_EUSART_RX+2)
 11915  002C42  2500               	addwf	_EUSART_RX& (0+255),w,b
 11916  002C44  6ED9               	movwf	fsr2l,c
 11917  002C46  6ADA               	clrf	fsr2h,c
 11918  002C48  0E01               	movlw	high (_EUSART_RX+2)
 11919  002C4A  22DA               	addwfc	fsr2h,f,c
 11920  002C4C  50DF               	movf	indf2,w,c
 11921  002C4E                     l703:
 11922  002C4E  0012               	return		;funcret
 11923  002C50                     __end_of_EUSART_BufferGetChar:
 11924                           	opt callstack 0
 11925                           
 11926 ;; *************** function _EUSART_RX_AvailableData *****************
 11927 ;; Defined at:
 11928 ;;		line 86 in file "EUSART.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;  timeout         2    4[COMRAM] int 
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;  t               4   10[COMRAM] unsigned long 
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  1    wreg      unsigned char 
 11935 ;; Registers used:
 11936 ;;		wreg, status,2, status,0
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11942 ;;      Params:         2       0       0       0       0       0       0       0       0
 11943 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11944 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11945 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11946 ;;Total ram usage:       10 bytes
 11947 ;; Hardware stack levels used:    1
 11948 ;; Hardware stack levels required when called:    2
 11949 ;; This function calls:
 11950 ;;		Nothing
 11951 ;; This function is called by:
 11952 ;;		_EUSART_BufferGetChar
 11953 ;;		_A6_Process_Random_Comms
 11954 ;; This function uses a non-reentrant model
 11955 ;;
 11956                           
 11957                           	psect	text69
 11958  002186                     __ptext69:
 11959                           	opt callstack 0
 11960  002186                     _EUSART_RX_AvailableData:
 11961                           	opt callstack 21
 11962  002186                     
 11963                           ;EUSART.c: 87: if(timeout == 0) timeout = 1000;
 11964  002186  5005               	movf	EUSART_RX_AvailableData@timeout^0,w,c
 11965  002188  1006               	iorwf	(EUSART_RX_AvailableData@timeout+1)^0,w,c
 11966  00218A  A4D8               	btfss	status,2,c
 11967  00218C  EFCA  F010         	goto	u2031
 11968  002190  EFCC  F010         	goto	u2030
 11969  002194                     u2031:
 11970  002194  EFD0  F010         	goto	l3332
 11971  002198                     u2030:
 11972  002198  0E03               	movlw	3
 11973  00219A  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
 11974  00219C  0EE8               	movlw	232
 11975  00219E  6E05               	movwf	EUSART_RX_AvailableData@timeout^0,c
 11976  0021A0                     l3332:
 11977                           
 11978                           ;EUSART.c: 88: uint32_t t = MILLISECONDS + timeout;
 11979  0021A0  C005  F007         	movff	EUSART_RX_AvailableData@timeout,??_EUSART_RX_AvailableData
 11980  0021A4  C006  F008         	movff	EUSART_RX_AvailableData@timeout+1,??_EUSART_RX_AvailableData+1
 11981  0021A8  0E00               	movlw	0
 11982  0021AA  BE08               	btfsc	(??_EUSART_RX_AvailableData+1)^0,7,c
 11983  0021AC  0EFF               	movlw	255
 11984  0021AE  6E09               	movwf	(??_EUSART_RX_AvailableData+2)^0,c
 11985  0021B0  6E0A               	movwf	(??_EUSART_RX_AvailableData+3)^0,c
 11986  0021B2  0100               	movlb	0	; () banked
 11987  0021B4  51B6               	movf	_MILLISECONDS& (0+255),w,b
 11988  0021B6  2407               	addwf	??_EUSART_RX_AvailableData^0,w,c
 11989  0021B8  6E0B               	movwf	EUSART_RX_AvailableData@t^0,c
 11990  0021BA  51B7               	movf	(_MILLISECONDS+1)& (0+255),w,b
 11991  0021BC  2008               	addwfc	(??_EUSART_RX_AvailableData+1)^0,w,c
 11992  0021BE  6E0C               	movwf	(EUSART_RX_AvailableData@t+1)^0,c
 11993  0021C0  51B8               	movf	(_MILLISECONDS+2)& (0+255),w,b
 11994  0021C2  2009               	addwfc	(??_EUSART_RX_AvailableData+2)^0,w,c
 11995  0021C4  6E0D               	movwf	(EUSART_RX_AvailableData@t+2)^0,c
 11996  0021C6  51B9               	movf	(_MILLISECONDS+3)& (0+255),w,b
 11997  0021C8  200A               	addwfc	(??_EUSART_RX_AvailableData+3)^0,w,c
 11998  0021CA  6E0E               	movwf	(EUSART_RX_AvailableData@t+3)^0,c
 11999                           
 12000                           ;EUSART.c: 89: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
 12001  0021CC  EFFB  F010         	goto	l3340
 12002  0021D0                     l3334:
 12003                           
 12004                           ; BSR set to: 1
 12005                           ;EUSART.c: 90: if(t < MILLISECONDS) return 0;
 12006  0021D0  0100               	movlb	0	; () banked
 12007  0021D2  51B6               	movf	_MILLISECONDS& (0+255),w,b
 12008  0021D4  5C0B               	subwf	EUSART_RX_AvailableData@t^0,w,c
 12009  0021D6  51B7               	movf	(_MILLISECONDS+1)& (0+255),w,b
 12010  0021D8  580C               	subwfb	(EUSART_RX_AvailableData@t+1)^0,w,c
 12011  0021DA  51B8               	movf	(_MILLISECONDS+2)& (0+255),w,b
 12012  0021DC  580D               	subwfb	(EUSART_RX_AvailableData@t+2)^0,w,c
 12013  0021DE  51B9               	movf	(_MILLISECONDS+3)& (0+255),w,b
 12014  0021E0  580E               	subwfb	(EUSART_RX_AvailableData@t+3)^0,w,c
 12015  0021E2  B0D8               	btfsc	status,0,c
 12016  0021E4  EFF6  F010         	goto	u2041
 12017  0021E8  EFF8  F010         	goto	u2040
 12018  0021EC                     u2041:
 12019  0021EC  EFFB  F010         	goto	l3340
 12020  0021F0                     u2040:
 12021  0021F0                     
 12022                           ; BSR set to: 0
 12023  0021F0  0E00               	movlw	0
 12024  0021F2  EF06  F011         	goto	l698
 12025  0021F6                     l3340:
 12026                           
 12027                           ; BSR set to: 0
 12028  0021F6  0101               	movlb	1	; () banked
 12029  0021F8  5100               	movf	_EUSART_RX& (0+255),w,b
 12030  0021FA  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 12031  0021FC  B4D8               	btfsc	status,2,c
 12032  0021FE  EF03  F011         	goto	u2051
 12033  002202  EF05  F011         	goto	u2050
 12034  002206                     u2051:
 12035  002206  EFE8  F010         	goto	l3334
 12036  00220A                     u2050:
 12037  00220A                     
 12038                           ; BSR set to: 1
 12039                           ;EUSART.c: 91: };EUSART.c: 92: return 1;
 12040  00220A  0E01               	movlw	1
 12041  00220C                     l698:
 12042  00220C  0012               	return		;funcret
 12043  00220E                     __end_of_EUSART_RX_AvailableData:
 12044                           	opt callstack 0
 12045                           
 12046 ;; *************** function _isr *****************
 12047 ;; Defined at:
 12048 ;;		line 100 in file "init.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;		None
 12051 ;; Auto vars:     Size  Location     Type
 12052 ;;		None
 12053 ;; Return value:  Size  Location     Type
 12054 ;;                  1    wreg      void 
 12055 ;; Registers used:
 12056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12057 ;; Tracked objects:
 12058 ;;		On entry : 0/0
 12059 ;;		On exit  : 0/0
 12060 ;;		Unchanged: 0/0
 12061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12062 ;;      Params:         0       0       0       0       0       0       0       0       0
 12063 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12064 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12065 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12066 ;;Total ram usage:        2 bytes
 12067 ;; Hardware stack levels used:    1
 12068 ;; Hardware stack levels required when called:    1
 12069 ;; This function calls:
 12070 ;;		_EUSART_RX_Interrupt
 12071 ;;		_Ecg_Interrupt
 12072 ;; This function is called by:
 12073 ;;		Interrupt level 2
 12074 ;; This function uses a non-reentrant model
 12075 ;;
 12076                           
 12077                           	psect	intcode
 12078  000008                     __pintcode:
 12079                           	opt callstack 0
 12080  000008                     _isr:
 12081                           	opt callstack 19
 12082                           
 12083                           ;incstack = 0
 12084  000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12085  00000A  ED30  F013         	call	int_func,f	;refresh shadow registers
 12086                           
 12087                           	psect	intcode_body
 12088  002660                     __pintcode_body:
 12089                           	opt callstack 19
 12090  002660                     int_func:
 12091                           	opt callstack 19
 12092  002660  0006               	pop		; remove dummy address from shadow register refresh
 12093  002662  CFD9 F003          	movff	fsr2l,??_isr
 12094  002666  CFDA F004          	movff	fsr2h,??_isr+1
 12095  00266A                     
 12096                           ;init.c: 102: if(TMR3IE && TMR3IF) {
 12097  00266A  A2A0               	btfss	4000,1,c	;volatile
 12098  00266C  EF3A  F013         	goto	i2u379_41
 12099  002670  EF3C  F013         	goto	i2u379_40
 12100  002674                     i2u379_41:
 12101  002674  EF51  F013         	goto	i2l4536
 12102  002678                     i2u379_40:
 12103  002678  A2A1               	btfss	4001,1,c	;volatile
 12104  00267A  EF41  F013         	goto	i2u380_41
 12105  00267E  EF43  F013         	goto	i2u380_40
 12106  002682                     i2u380_41:
 12107  002682  EF51  F013         	goto	i2l4536
 12108  002686                     i2u380_40:
 12109  002686                     
 12110                           ;init.c: 103: MILLISECONDS += 5;
 12111  002686  0E05               	movlw	5
 12112  002688  0100               	movlb	0	; () banked
 12113  00268A  27B6               	addwf	_MILLISECONDS& (0+255),f,b
 12114  00268C  0E00               	movlw	0
 12115  00268E  23B7               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
 12116  002690  23B8               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
 12117  002692  23B9               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
 12118  002694                     
 12119                           ; BSR set to: 0
 12120                           ;init.c: 104: Ecg_Interrupt();
 12121  002694  ECAD  F017         	call	_Ecg_Interrupt	;wreg free
 12122  002698                     
 12123                           ;init.c: 107: TMR3H = 0x16;
 12124  002698  0E16               	movlw	22
 12125  00269A  6EB3               	movwf	179,c	;volatile
 12126  00269C                     
 12127                           ;init.c: 108: TMR3L = 0x00;
 12128  00269C  0E00               	movlw	0
 12129  00269E  6EB2               	movwf	178,c	;volatile
 12130  0026A0                     
 12131                           ;init.c: 109: TMR3IF = 0;
 12132  0026A0  92A1               	bcf	4001,1,c	;volatile
 12133  0026A2                     i2l4536:
 12134                           
 12135                           ;init.c: 110: };init.c: 113: if(RCIE && RCIF) {
 12136  0026A2  AA9D               	btfss	3997,5,c	;volatile
 12137  0026A4  EF56  F013         	goto	i2u381_41
 12138  0026A8  EF58  F013         	goto	i2u381_40
 12139  0026AC                     i2u381_41:
 12140  0026AC  EF61  F013         	goto	i2l152
 12141  0026B0                     i2u381_40:
 12142  0026B0  AA9E               	btfss	3998,5,c	;volatile
 12143  0026B2  EF5D  F013         	goto	i2u382_41
 12144  0026B6  EF5F  F013         	goto	i2u382_40
 12145  0026BA                     i2u382_41:
 12146  0026BA  EF61  F013         	goto	i2l152
 12147  0026BE                     i2u382_40:
 12148  0026BE                     
 12149                           ;init.c: 114: EUSART_RX_Interrupt();
 12150  0026BE  EC34  F014         	call	_EUSART_RX_Interrupt	;wreg free
 12151  0026C2                     i2l152:
 12152  0026C2  C004  FFDA         	movff	??_isr+1,fsr2h
 12153  0026C6  C003  FFD9         	movff	??_isr,fsr2l
 12154  0026CA  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12155  0026CC  0011               	retfie		f
 12156  0026CE                     __end_of_isr:
 12157                           	opt callstack 0
 12158                           
 12159 ;; *************** function _Ecg_Interrupt *****************
 12160 ;; Defined at:
 12161 ;;		line 135 in file "ecg.c"
 12162 ;; Parameters:    Size  Location     Type
 12163 ;;		None
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;		None
 12166 ;; Return value:  Size  Location     Type
 12167 ;;                  1    wreg      void 
 12168 ;; Registers used:
 12169 ;;		wreg, status,2, status,0
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12175 ;;      Params:         0       0       0       0       0       0       0       0       0
 12176 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12177 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12178 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12179 ;;Total ram usage:        2 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; This function calls:
 12182 ;;		Nothing
 12183 ;; This function is called by:
 12184 ;;		_isr
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           	psect	text71
 12189  002F5A                     __ptext71:
 12190                           	opt callstack 0
 12191  002F5A                     _Ecg_Interrupt:
 12192                           	opt callstack 19
 12193  002F5A                     
 12194                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
 12195  002F5A  0E01               	movlw	1
 12196  002F5C  6E01               	movwf	??_Ecg_Interrupt^0,c
 12197  002F5E  0100               	movlb	0	; () banked
 12198  002F60  51BD               	movf	(_ECG_FLAGS+1)& (0+255),w,b
 12199  002F62  0B07               	andlw	7
 12200  002F64  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
 12201  002F66  5001               	movf	??_Ecg_Interrupt^0,w,c
 12202  002F68  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
 12203  002F6A  51BD               	movf	(_ECG_FLAGS+1)& (0+255),w,b
 12204  002F6C  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 12205  002F6E  0BF8               	andlw	-8
 12206  002F70  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 12207  002F72  6FBD               	movwf	(_ECG_FLAGS+1)& (0+255),b
 12208  002F74                     
 12209                           ; BSR set to: 0
 12210                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
 12211  002F74  2BAD               	incf	(_ECG_HEARTRATE+3)& (0+255),f,b
 12212  002F76                     
 12213                           ; BSR set to: 0
 12214                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
 12215  002F76  89BC               	bsf	_ECG_FLAGS& (0+255),4,b
 12216  002F78                     
 12217                           ; BSR set to: 0
 12218  002F78  0012               	return		;funcret
 12219  002F7A                     __end_of_Ecg_Interrupt:
 12220                           	opt callstack 0
 12221                           
 12222 ;; *************** function _EUSART_RX_Interrupt *****************
 12223 ;; Defined at:
 12224 ;;		line 68 in file "EUSART.c"
 12225 ;; Parameters:    Size  Location     Type
 12226 ;;		None
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;  c               1    1[COMRAM] unsigned char 
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  1    wreg      void 
 12231 ;; Registers used:
 12232 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/0
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12238 ;;      Params:         0       0       0       0       0       0       0       0       0
 12239 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12240 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12241 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12242 ;;Total ram usage:        2 bytes
 12243 ;; Hardware stack levels used:    1
 12244 ;; This function calls:
 12245 ;;		Nothing
 12246 ;; This function is called by:
 12247 ;;		_isr
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           	psect	text72
 12252  002868                     __ptext72:
 12253                           	opt callstack 0
 12254  002868                     _EUSART_RX_Interrupt:
 12255                           	opt callstack 19
 12256  002868                     
 12257                           ;EUSART.c: 69: uint8_t c = RCREG;
 12258  002868  CFAE F002          	movff	4014,EUSART_RX_Interrupt@c	;volatile
 12259                           
 12260                           ;EUSART.c: 70: if(OERR == 1) {
 12261  00286C  A2AB               	btfss	4011,1,c	;volatile
 12262  00286E  EF3B  F014         	goto	i2u374_41
 12263  002872  EF3D  F014         	goto	i2u374_40
 12264  002876                     i2u374_41:
 12265  002876  EF50  F014         	goto	i2l4488
 12266  00287A                     i2u374_40:
 12267  00287A                     
 12268                           ;EUSART.c: 71: CREN = 0;
 12269  00287A  98AB               	bcf	4011,4,c	;volatile
 12270                           
 12271                           ;EUSART.c: 72: CREN = 1;
 12272  00287C  88AB               	bsf	4011,4,c	;volatile
 12273  00287E                     
 12274                           ;EUSART.c: 73: PORTAbits.RA2 = !PORTAbits.RA2;
 12275  00287E  A480               	btfss	128,2,c	;volatile
 12276  002880  EF44  F014         	goto	i2u375_41
 12277  002884  EF48  F014         	goto	i2u375_40
 12278  002888                     i2u375_41:
 12279  002888  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 12280  00288A  2A01               	incf	??_EUSART_RX_Interrupt^0,f,c
 12281  00288C  EF49  F014         	goto	i2u376_48
 12282  002890                     i2u375_40:
 12283  002890  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 12284  002892                     i2u376_48:
 12285  002892  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 12286  002894  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 12287  002896  5080               	movf	128,w,c	;volatile
 12288  002898  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 12289  00289A  0BFB               	andlw	-5
 12290  00289C  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 12291  00289E  6E80               	movwf	128,c	;volatile
 12292  0028A0                     i2l4488:
 12293                           
 12294                           ;EUSART.c: 74: };EUSART.c: 76: EUSART_RX.iWrite++;
 12295  0028A0  0101               	movlb	1	; () banked
 12296  0028A2  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
 12297  0028A4                     
 12298                           ; BSR set to: 1
 12299                           ;EUSART.c: 77: if(EUSART_RX.iWrite == 128) EUSART_RX.iWrite = 0;
 12300  0028A4  0E80               	movlw	128
 12301  0028A6  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 12302  0028A8  A4D8               	btfss	status,2,c
 12303  0028AA  EF59  F014         	goto	i2u377_41
 12304  0028AE  EF5B  F014         	goto	i2u377_40
 12305  0028B2                     i2u377_41:
 12306  0028B2  EF5D  F014         	goto	i2l4494
 12307  0028B6                     i2u377_40:
 12308  0028B6                     
 12309                           ; BSR set to: 1
 12310  0028B6  0E00               	movlw	0
 12311  0028B8  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
 12312  0028BA                     i2l4494:
 12313                           
 12314                           ; BSR set to: 1
 12315                           ;EUSART.c: 78: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
 12316  0028BA  0E02               	movlw	low (_EUSART_RX+2)
 12317  0028BC  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
 12318  0028BE  6ED9               	movwf	fsr2l,c
 12319  0028C0  6ADA               	clrf	fsr2h,c
 12320  0028C2  0E01               	movlw	high (_EUSART_RX+2)
 12321  0028C4  22DA               	addwfc	fsr2h,f,c
 12322  0028C6  C002  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
 12323  0028CA                     
 12324                           ; BSR set to: 1
 12325  0028CA  0012               	return		;funcret
 12326  0028CC                     __end_of_EUSART_RX_Interrupt:
 12327                           	opt callstack 0
 12328                           
 12329                           	psect	rparam
 12330  0000                     
 12331                           	psect	temp
 12332  000057                     btemp:
 12333                           	opt callstack 0
 12334  000057                     	ds	1
 12335  0000                     int$flags	set	btemp
 12336  0000                     wtemp8	set	btemp+1
 12337  0000                     ttemp5	set	btemp+1
 12338  0000                     ttemp6	set	btemp+4
 12339  0000                     ttemp7	set	btemp+8
 12340                           tosu	equ	0xFFF
 12341                           tosh	equ	0xFFE
 12342                           tosl	equ	0xFFD
 12343                           stkptr	equ	0xFFC
 12344                           pclatu	equ	0xFFB
 12345                           pclath	equ	0xFFA
 12346                           pcl	equ	0xFF9
 12347                           tblptru	equ	0xFF8
 12348                           tblptrh	equ	0xFF7
 12349                           tblptrl	equ	0xFF6
 12350                           tablat	equ	0xFF5
 12351                           prodh	equ	0xFF4
 12352                           prodl	equ	0xFF3
 12353                           indf0	equ	0xFEF
 12354                           postinc0	equ	0xFEE
 12355                           postdec0	equ	0xFED
 12356                           preinc0	equ	0xFEC
 12357                           plusw0	equ	0xFEB
 12358                           fsr0h	equ	0xFEA
 12359                           fsr0l	equ	0xFE9
 12360                           wreg	equ	0xFE8
 12361                           indf1	equ	0xFE7
 12362                           postinc1	equ	0xFE6
 12363                           postdec1	equ	0xFE5
 12364                           preinc1	equ	0xFE4
 12365                           plusw1	equ	0xFE3
 12366                           fsr1h	equ	0xFE2
 12367                           fsr1l	equ	0xFE1
 12368                           bsr	equ	0xFE0
 12369                           indf2	equ	0xFDF
 12370                           postinc2	equ	0xFDE
 12371                           postdec2	equ	0xFDD
 12372                           preinc2	equ	0xFDC
 12373                           plusw2	equ	0xFDB
 12374                           fsr2h	equ	0xFDA
 12375                           fsr2l	equ	0xFD9
 12376                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    1598
    Data        8
    BSS         171
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      86
    BANK0           160     56     100
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_26(CODE[8]), STR_21(CODE[7]), STR_15(CODE[8]), STR_8(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), refreshGSM@operator(BANK0[32]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), refreshGSM@operator(BANK0[32]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), refreshGSM@operator(BANK0[32]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_26(CODE[8]), STR_21(CODE[7]), STR_15(CODE[8]), STR_8(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), refreshGSM@operator(BANK0[32]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_26(CODE[8]), STR_25(CODE[10]), STR_21(CODE[7]), STR_20(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_8(CODE[7]), 
		 -> STR_7(CODE[9]), STR_5(CODE[4]), STR_4(CODE[13]), refreshGSM@operator(BANK0[32]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_26(CODE[8]), STR_25(CODE[10]), STR_21(CODE[7]), STR_20(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_8(CODE[7]), 
		 -> STR_7(CODE[9]), STR_5(CODE[4]), STR_4(CODE[13]), refreshGSM@operator(BANK0[32]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_33(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> NULL(NULL[0]), refreshGSM@operator(BANK0[32]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 32
		 -> refreshGSM@operator(BANK0[32]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 32
		 -> refreshGSM@operator(BANK0[32]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_6(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[12]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> A6_BaudRateSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_25(CODE[10]), STR_20(CODE[8]), STR_14(CODE[10]), A6_BaudRateSet@request(BANK0[20]), 
		 -> STR_7(CODE[9]), STR_5(CODE[4]), STR_4(CODE[13]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 32
		 -> refreshGSM@operator(BANK0[32]), 

    A6_NetworkGetOperator@operatorToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    A6_NetworkGetOperator@operator	PTR unsigned char  size(2) Largest target is 32
		 -> refreshGSM@operator(BANK0[32]), 

    A6_NetworkGetRSSI@RSSIToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    A6_BaudRateGet@baudRateToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), refreshGSM@operator(BANK0[32]), 

    sp__memset	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> refreshGSM@operator(BANK0[32]), 

    A6_ReadLine@line	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), refreshGSM@operator(BANK0[32]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), refreshGSM@operator(BANK0[32]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_25(CODE[10]), STR_20(CODE[8]), STR_14(CODE[10]), A6_BaudRateSet@request(BANK0[20]), 
		 -> STR_7(CODE[9]), STR_5(CODE[4]), STR_4(CODE[13]), 

    TFT_DrawBitmap@bitmap	PTR const unsigned char  size(2) Largest target is 62
		 -> ECG_ICON_HEART(CODE[62]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(COMRAM[32]), STR_3(CODE[28]), STR_2(CODE[11]), Ecg_ProcessHeartRate@heartrateString(BANK0[5]), 
		 -> refreshGSM@operator(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_A6_Init
    _loop->_refreshGSM
    _A6_NetworkGetRSSILevel->_A6_NetworkGetRSSI
    _A6_NetworkGetRSSI->_A6_Command
    _atoi->___wmul
    _A6_NetworkGetOperator->_A6_Command
    _Ecg_ProcessEcg->_Ecg_Background_Leads_Ok
    _Ecg_ProcessHeartbeat->_TFT_DrawFillRect
    _TFT_DrawBitmap->_TFT_DrawPixel
    _Ecg_Draw->_TFT_DrawLine
    _TFT_Init->_TFT_OrientationSet
    _TFT_OrientationSet->_TFT_FullScreen
    _Ecg_Init->_Ecg_Background_Leads_Ok
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawLine
    _TFT_DrawLine->_TFT_DrawPixel
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_FullScreen
    _TFT_FullScreen->_TFT_Flood
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->___wmul
    _EUSART_Init->_memset
    _A6_Init->_A6_BaudRateSet
    _A6_BaudRateSet->_A6_BaudRateGet
    _sprintf->___llmod
    ___wmul->_strlen
    ___llmod->___lldiv
    _A6_BaudRateGet->_A6_Command
    _A6_BaudRateGet->_atol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _atol->___lmul
    _A6_BaudRateAutoDetect->_A6_IsAlive
    _EUSART_BaudRateSet->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen
    _A6_ReadLine->_EUSART_BufferGetChar
    _EUSART_BufferGetChar->_EUSART_RX_AvailableData

Critical Paths under _isr in COMRAM

    _isr->_EUSART_RX_Interrupt
    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _loop->_refreshGSM
    _refreshGSM->_TFT_DrawString
    _Ecg_Process->_Ecg_ProcessHeartRate
    _Ecg_ProcessHeartRate->_TFT_DrawString
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _A6_Init->_A6_BaudRateSet

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  548566
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  364479
                        _Ecg_Process
                         _refreshGSM
 ---------------------------------------------------------------------------------
 (2) _refreshGSM                                          41    41      0  111199
                                             76 COMRAM     2     2      0
                                             11 BANK0     39    39      0
              _A6_NetworkGetOperator
             _A6_NetworkGetRSSILevel
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                     _TFT_DrawString
                       _TFT_GetWidth
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _A6_NetworkGetRSSILevel                               1     1      0   12695
                                             64 COMRAM     1     1      0
                  _A6_NetworkGetRSSI
 ---------------------------------------------------------------------------------
 (4) _A6_NetworkGetRSSI                                   34    34      0   12584
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 7     5      2    1823
                                             14 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _A6_NetworkGetOperator                                6     3      3   11331
                                             30 COMRAM     6     3      3
                         _A6_Command
                             _strcpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4     379
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Ecg_Process                                          0     0      0  253280
                     _Ecg_ProcessEcg
               _Ecg_ProcessHeartRate
               _Ecg_ProcessInterrupt
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessInterrupt                                 1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessHeartRate                                29    29      0   53122
                                             11 BANK0     29    29      0
                     _TFT_DrawString
                            ___lldiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessEcg                                       0     0      0  200158
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
                           _Ecg_Draw
               _Ecg_ProcessHeartbeat
 ---------------------------------------------------------------------------------
 (4) _Ecg_ProcessHeartbeat                                11    11      0   34331
                                             45 COMRAM    11    11      0
                     _TFT_DrawBitmap
                   _TFT_DrawFillRect
                                _abs
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawBitmap                                      17     9      8    6581
                                             22 COMRAM    17     9      8
                      _TFT_DrawPixel
 ---------------------------------------------------------------------------------
 (4) _Ecg_Draw                                             4     4      0   36826
                                             53 COMRAM     4     4      0
                           _Ecg_Read
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                      _TFT_GetHeight
                       _TFT_GetWidth
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _Ecg_Read                                             6     4      2      70
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            13    11      2   16541
                                             34 COMRAM    13    11      2
                 _TFT_OrientationSet
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TFT_OrientationSet                                   3     1      2   11673
                                             31 COMRAM     3     1      2
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0  129001
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (4) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Ecg_Background_Leads_Ok                              2     2      0   69077
                                             76 COMRAM     2     2      0
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FullScreen
                      _TFT_GetHeight
                       _TFT_GetWidth
 ---------------------------------------------------------------------------------
 (4) _Ecg_Background_Leads_Failure                         0     0      0   59877
                     _TFT_DrawString
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawString                                      11     0     11   48423
                                              0 BANK0     11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawChar                                        23    13     10   45469
                                             53 COMRAM    23    13     10
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawLine                                        31    21     10    9200
                                             22 COMRAM    31    21     10
                      _TFT_DrawPixel
                       _TFT_GetWidth (ARG)
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     370
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawPixel                                       10     4      6    5978
                                             12 COMRAM    10     4      6
                 _TFT_OrientationGet
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawFillRect                                    14     4     10   27173
                                             31 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _TFT_FullScreen                                       2     0      2   11454
                                             29 COMRAM     2     0      2
                          _TFT_Flood
                      _TFT_GetHeight
                       _TFT_GetWidth
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (6) _TFT_SetAddrWindow                                    8     0      8    5724
                                             12 COMRAM     8     0      8
                      _TFT_GetHeight (ARG)
                       _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (3) _TFT_GetWidth                                         2     0      2       0
                                              4 COMRAM     2     0      2
                 _TFT_OrientationGet
 ---------------------------------------------------------------------------------
 (7) _TFT_GetHeight                                        2     0      2       0
                                              4 COMRAM     2     0      2
                 _TFT_OrientationGet
 ---------------------------------------------------------------------------------
 (4) _TFT_OrientationGet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TFT_Flood                                           15     9      6    5382
                                             14 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TFT_WriteRegister                                    8     4      4    4588
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0     552
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              4     0      4   37993
                                             77 COMRAM     4     0      4
              _A6_BaudRateAutoDetect
                     _A6_BaudRateSet
                         _A6_Command
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateSet                                      60    56      4   26948
                                             73 COMRAM     4     0      4
                                              0 BANK0     56    56      0
                     _A6_BaudRateGet
                         _A6_Command
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             33    25      8    3566
                                             26 COMRAM    24    16      8
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1375
                                              8 COMRAM     6     2      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _A6_BaudRateGet                                      43    39      4   11685
                                             30 COMRAM    43    39      4
                         _A6_Command
                               _atol
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _strtok                                               4     0      4    4054
                                             17 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (6) _strspn                                               7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (6) _strcspn                                              7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               4     0      4    2009
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     362
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (7) _strchr                                               6     2      4     544
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4     834
                                             16 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateAutoDetect                                1     1      0    6414
                                             62 COMRAM     1     1      0
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     273
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateSet                                  12     8      4     937
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _A6_IsAlive                                          32    32      0    5130
                                             30 COMRAM    32    32      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     547
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _A6_Command                                           7     0      7    4533
                                             23 COMRAM     7     0      7
                        _A6_ReadLine
                    _EUSART_RX_Flush
                   _EUSART_TX_String
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     318
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _EUSART_TX_String                                     3     0      3     219
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (7) _EUSART_TX_Char                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_RX_Flush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _A6_ReadLine                                          7     2      5    1736
                                             16 COMRAM     7     2      5
               _EUSART_BufferGetChar
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6     552
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _EUSART_BufferGetChar                                 2     0      2     394
                                             14 COMRAM     2     0      2
            _EUSART_RX_AvailableData
 ---------------------------------------------------------------------------------
 (8) _EUSART_RX_AvailableData                             10     8      2     220
                                              4 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (12) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_RX_Interrupt                                 2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
     _A6_BaudRateSet
       _A6_BaudRateGet
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
           _strlen (ARG)
         _isdigit
       _strcmp
     _A6_Command
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_Flush
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _strlen
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
             _strlen (ARG)
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
             _strlen (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_OrientationGet
           _TFT_WriteRegister
         _TFT_GetWidth (ARG)
           _TFT_OrientationGet
         ___awdiv (ARG)
         _abs (ARG)
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
             _strlen (ARG)
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
             _strlen (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
       _TFT_GetHeight
         _TFT_OrientationGet
       _TFT_GetWidth
         _TFT_OrientationGet
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_OrientationSet
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
             _strlen (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _Ecg_Process
       _Ecg_ProcessEcg
         _Ecg_Background_Leads_Failure
           _TFT_DrawString
             _TFT_DrawChar
               _TFT_DrawFillRect
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                     _strlen (ARG)
                 _TFT_FullScreen
                   _TFT_Flood
                     _TFT_WriteRegister
                     ___wmul (ARG)
                       _strlen (ARG)
                   _TFT_GetHeight
                     _TFT_OrientationGet
                   _TFT_GetWidth
                     _TFT_OrientationGet
                   _TFT_SetAddrWindow
                     _TFT_GetHeight (ARG)
                       _TFT_OrientationGet
                     _TFT_GetWidth (ARG)
                       _TFT_OrientationGet
                     _TFT_OrientationGet (ARG)
                     _TFT_WriteRegister (ARG)
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
                 ___wmul
                   _strlen (ARG)
               _TFT_DrawLine
                 _TFT_DrawPixel
                   _TFT_OrientationGet
                   _TFT_WriteRegister
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 ___awdiv (ARG)
                 _abs (ARG)
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___wmul
                 _strlen (ARG)
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
         _Ecg_Background_Leads_Ok
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawString
             _TFT_DrawChar
               _TFT_DrawFillRect
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                     _strlen (ARG)
                 _TFT_FullScreen
                   _TFT_Flood
                     _TFT_WriteRegister
                     ___wmul (ARG)
                       _strlen (ARG)
                   _TFT_GetHeight
                     _TFT_OrientationGet
                   _TFT_GetWidth
                     _TFT_OrientationGet
                   _TFT_SetAddrWindow
                     _TFT_GetHeight (ARG)
                       _TFT_OrientationGet
                     _TFT_GetWidth (ARG)
                       _TFT_OrientationGet
                     _TFT_OrientationGet (ARG)
                     _TFT_WriteRegister (ARG)
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
                 ___wmul
                   _strlen (ARG)
               _TFT_DrawLine
                 _TFT_DrawPixel
                   _TFT_OrientationGet
                   _TFT_WriteRegister
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 ___awdiv (ARG)
                 _abs (ARG)
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___wmul
                 _strlen (ARG)
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
         _Ecg_CheckLeads
         _Ecg_Draw
           _Ecg_Read
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
           ___lwdiv
         _Ecg_ProcessHeartbeat
           _TFT_DrawBitmap
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _abs
       _Ecg_ProcessHeartRate
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_FullScreen
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                     _strlen (ARG)
                 _TFT_GetHeight
                   _TFT_OrientationGet
                 _TFT_GetWidth
                   _TFT_OrientationGet
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
               ___wmul
                 _strlen (ARG)
             _TFT_DrawLine
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               ___awdiv (ARG)
               _abs (ARG)
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___wmul
               _strlen (ARG)
         ___lldiv
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
             _strlen (ARG)
           _isdigit
       _Ecg_ProcessInterrupt
     _refreshGSM
       _A6_NetworkGetOperator
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcpy
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_NetworkGetRSSILevel
         _A6_NetworkGetRSSI
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
               _strlen (ARG)
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
       _TFT_DrawFillRect
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
             _strlen (ARG)
         _TFT_FullScreen
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
               _strlen (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
           _TFT_SetAddrWindow
             _TFT_GetHeight (ARG)
               _TFT_OrientationGet
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             _TFT_OrientationGet (ARG)
             _TFT_WriteRegister (ARG)
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
         ___wmul
           _strlen (ARG)
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_OrientationGet
           _TFT_WriteRegister
         _TFT_GetWidth (ARG)
           _TFT_OrientationGet
         ___awdiv (ARG)
         _abs (ARG)
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
             _strlen (ARG)
       _TFT_GetWidth
         _TFT_OrientationGet
       ___wmul
         _strlen (ARG)
       _strlen

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      56       1       91.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13C      20        0.0%
DATA                 0      0     13C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 28 01:04:11 2019

               A6_BaudRateAutoDetect@i 003F                    __size_of_A6_IsAlive 0050  
  Ecg_ProcessHeartRate@heartrateString 0077                                     l63 0CAC  
                                   l59 2FB8                    __size_of_A6_Command 0086  
                         ___awdiv@sign 000A                ??_A6_NetworkGetOperator 0022  
                  ___wmul@multiplicand 000B                            __CFG_BORV$0 000000  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                                    l211 1A5E  
                                  l302 0438                                    l214 2F96  
                                  l223 2B66                                    l232 2BB4  
                                  l320 20FC                                    l145 2E06  
                                  l314 0688                                    l242 2F32  
                                  l251 0906                                    l139 25EE  
                                  l332 17B8                                    l238 2FC8  
                                  l422 2F0A                                    l191 2CDA  
                                  l255 2986                                    l263 1AB8  
                                  l280 2416                                    l264 1B38  
                                  l440 2B18                                    l433 2E74  
                                  l290 0E2C                                    l610 1E6E  
                                  l259 1A64                                    l292 0D92  
                                  l436 2B02                                    l428 29DA  
                                  l285 0D1C                                    l277 0AEE  
                                  l269 0A50                                    l453 1118  
                                  l614 2490                                    l703 2C4E  
                                  l295 0E06                                    l623 1252  
                                  l288 0D70                                    l480 2508  
                                  l456 0F46                                    l561 1CE8  
                                  l297 0E2E                                    l473 2A7A  
                                  l465 0FAA                                    l554 223A  
                                  l490 2D58                                    l731 01B4  
                                  l556 2292                                    l476 249A  
                                  l484 189E                                    l549 2DCC  
                                  l574 2ACA                                    l582 14B0  
                                  l478 24A8                                    l559 1C2E  
                                  l671 2316                                    l487 206A  
                                  l752 03FA                                    l728 012C  
                                  l674 2F9A                                    l594 265E  
                                  l586 16CC                                    l691 2FC4  
                                  l683 2D1A                                    l755 2F58  
                                  l668 2C96        __end_of_Ecg_Background_Leads_Ok 206C  
                                  l677 2FAE                                    l782 1FC0  
                                  l766 2726                                    l767 2736  
                                  l698 220C                                    l789 1FD0  
                                  l986 1DAC                                    _GIE 007F97  
                         __CFG_CPB$OFF 000000                           __CFG_CPD$OFF 000000  
                         __CFG_BOR$OFF 000000                                    _abs 2E76  
                                  _isr 0008                        __end_of_A6_Init 2DCE  
                                  prod 000FF3                                    wreg 000FE8  
                 __size_of_A6_ReadLine 00D6                           TFT_Flood@len 0011  
                EUSART_BaudRateSet@tmp 001A                           ?_EUSART_Init 0001  
                         __CFG_LVP$OFF 000000                           TFT_Init@data 0027  
                         __CFG_WDT$OFF 000000                                   ?_abs 0005  
                                 l1241 257C                                   l1170 2184  
                                 l1234 2574                                   l1163 2174  
                                 l1510 2318                                   l1502 18BA  
                                 l1512 2398                                   l1504 1980  
                                 l4000 019C                                   l3200 2CCE  
                                 l1432 15C0                                   l1417 2EA0  
                                 l1433 15C8                                   l1522 27FA  
                                 l4010 0202                                   l4002 01A0  
                                 l3202 2CD2                                   l1418 2EA8  
                                 l1531 1C12                                   l1523 2802  
                                 l1507 1978                                   l1452 2EDA  
                                 l4004 01C2                                   l4012 020A  
                                 l3204 2CD6                                   l3300 0E1A  
                                 l3212 2B1A                                   l1541 2794  
                                 l1446 137C                                   l4110 1322  
                                 l1438 1254                                   l1542 279C  
                                 l4030 0284                                   l4022 0248  
                                 l4006 01DA                                   l3206 2CD8  
                                 l3230 2B68                                   l3214 2B1E  
                                 l3302 292C                                   l3310 1A78  
                                 l1447 138C                                   l4112 1336  
                                 l4104 12DA                                   l4040 02D4  
                                 l4032 028A                                   l4024 024A  
                                 l4008 01E6                                   l3208 2FC6  
                                 l3232 2B6C                                   l3224 2B36  
                                 l3304 2958                                   l3400 240A  
                                 l3312 1A88                                   l3320 1AD4  
                                 l4200 2E5A                                   l1472 2A2A  
                                 l4120 1DCE                                   l3330 2198  
                                 l1458 2E3E                                   l1466 292A  
                                 l4114 1346                                   l1490 1F2C  
                                 l4050 031E                                   l4042 02E0  
                                 l4034 02AE                                   l4026 025C  
                                 l4018 020E                                   l3242 2B84  
                                 l3226 2B5E                                   l3218 2B2A  
                                 l3250 068E                                   l3306 296A  
                                 l3314 1A94                                   l3322 1AFC  
                                 l3410 09B6                                   l3402 0908  
                                 l4202 2E5E                                   l4122 1DF4  
                                 l3340 21F6                                   l3332 21A0  
                                 l4060 03B2                                   l4052 0322  
                                 l4044 02E4                                   l4036 02BA  
                                 l4028 026E                                   l3180 2CAA  
                                 l3172 2C98                                   l3244 2BAC  
                                 l3236 2B78                                   l3260 079E  
                                 l3252 070A                                   l3316 1AC0  
                                 l3308 1A60                                   l3324 2E76  
                                 l3420 0A58                                   l3412 09E6  
                                 l3404 0956                                   l3500 0446  
                                 l4204 2E6E                                   l4140 29F0  
                                 l4124 1E2C                                   l4132 1E6C  
                                 l3342 220A                                   l3334 21D0  
                                 l1478 2C02                                   l4070 28D0  
                                 l4310 230E                                   l4302 2294  
                                 l4054 032C                                   l4046 02FC  
                                 l4038 02C2                                   l4062 03CC  
                                 l3190 2CBA                                   l3182 2CAE  
                                 l3174 2C9E                                   l3262 084A  
                                 l3254 0742                                   l3326 2E84  
                                 l3430 0ABC                                   l3422 0A6A  
                                 l3414 09F2                                   l3406 0968  
                                 l3510 051A                                   l3502 0456  
                                 l4206 2E70                                   l4150 11CE  
                                 l4142 111A                                   l4126 1E3E  
                                 l4118 1DAE                                   l3336 21F0  
                                 l3328 2186                                   l3440 2E20  
                                 l4072 28D8                                   l4312 2312  
                                 l4304 229A                                   l4400 264E  
                                 l4080 1254                                   l3600 1BE8  
                                 l4056 03A2                                   l4048 0312  
                                 l4064 03EE                                   l3192 2CC0  
                                 l3184 2CB0                                   l3176 2CA2  
                                 l3280 0CCA                                   l3264 0872  
                                 l3256 0756                                   l3272 08DE  
                                 l3248 068A                                   l3360 1D08  
                                 l3352 1CEA                                   l3432 0ACC  
                                 l3424 0A8A                                   l3416 0A0A  
                                 l3408 0998                                   l3520 05CC  
                                 l3512 054A                                   l3504 0486  
                                 l4136 29DC                                   l4144 113A  
                                 l4128 1E5A                                   l4160 2430  
                                 l3450 2C26                                   l3442 2E24  
                                 l4074 2908                                   l4306 22CE  
                                 l4090 129C                                   l4082 1260  
                                 l3602 1BF0                                   l3610 2744  
                                 l3346 2F34                                   l4058 03AE  
                                 l4410 161E                                   l4402 15CA  
                                 l3194 2CC4                                   l3186 2CB4  
                                 l3178 2CA6                                   l3290 0D4C  
                                 l3282 0CD4                                   l3274 0CAE  
                                 l3266 088E                                   l3258 0786  
                                 l3370 1D3C                                   l3362 1D16  
                                 l3354 1CEE                                   l3426 0AA6  
                                 l3434 0AD0                                   l3418 0A44  
                                 l3530 0616                                   l3522 05CE  
                                 l3514 05B2                                   l3506 04F2  
                                 l4138 29E8                                   l4146 1160  
                                 l4154 123E                                   l4170 244C  
                                 l3452 2C2A                                   l3444 2C04  
                                 l3436 2E08                                   l3460 2F9A  
                                 l3540 2D04                                   l3700 226A  
                                 l4076 2920                                   l4068 28CC  
                                 l4308 2304                                   l4092 12AE  
                                 l4084 1264                                   l3604 1C0A  
                                 l3620 27B2                                   l3612 274C  
                                 l3348 2F50                                   l4412 163E  
                                 l4404 15DE                                   l3196 2CC8  
                                 l3188 2CB8                                   l3292 0D66  
                                 l3284 0CD8                                   l3276 0CB2  
                                 l3268 08BE                                   l3380 1D76  
                                 l3372 1D44                                   l3364 1D1E  
                                 l3356 1CFC                                   l3428 0AAE  
                                 l3532 064A                                   l3524 05E2  
                                 l3516 05B4                                   l3508 050A  
                                 l2900 25A8                                   l4148 11B4  
                                 l4172 245C                                   l4164 2436  
                                 l4156 2418                                   l3454 2C3C  
                                 l3446 2C20                                   l3438 2E14  
                                 l3534 2FC0                                   l3462 2FA8  
                                 l3542 2D08                                   l3702 227A  
                                 l4270 2AC8                                   l4262 2A7C  
                                 l4094 12B0                                   l4086 1276  
                                 l3470 2354                                   l3710 1EAE  
                                 l3622 27CA                                   l3614 2764  
                                 l4422 16B8                                   l4414 1652  
                                 l3198 2CCC                                   l3294 0D7C  
                                 l3286 0D06                                   l3278 0CB6  
                                 l3390 1D9C                                   l3382 1D7E  
                                 l3374 1D4C                                   l3366 1D22  
                                 l3358 1D04                                   l3526 05FA  
                                 l3518 05B8                                   l2830 2F82  
                                 l4430 199E                                   l2910 25B8  
                                 l2902 25AA                                   l4182 2478  
                                 l4166 2446                                   l4158 241E  
                                 l3456 2C40                                   l3560 1C7A  
                                 l3552 1C52                                   l3544 1C14  
                                 l3536 2CDC                                   l3480 2BC6  
                                 l4264 2A9C                                   l3800 1F76  
                                 l4192 2DCE                                   l4096 12BC  
                                 l4088 1288                                   l3472 2390  
                                 l3464 2318                                   l3720 1F24  
                                 l3616 279E                                   l3608 2738  
                                 l4280 140C                                   l4416 1678  
                                 l4408 15FA                                   l3296 0DE2  
                                 l3392 1DA4                                   l3384 1D80  
                                 l3376 1D5A                                   l3368 1D2A  
                                 l3528 060A                                   l4600 2062  
                                 l2832 2F84                                   l2824 2F7A  
                                 l4440 19F6                                   l4432 19A6  
                                 l2920 25CA                                   l2912 25BC  
                                 l2904 25AE                                   l3640 16F2  
                                 l4184 2488                                   l4176 2462  
                                 l3562 1C8C                                   l3554 1C64  
                                 l3546 1C3C                                   l3538 2CE0  
                                 l3482 2BF6                                   l4266 2AC2  
                                 l3810 1FBA                                   l3802 1F80  
                                 l4194 2DE8                                   l4098 12C4  
                                 l3466 2348                                   l3714 1EBA  
                                 l3706 1E70                                   l3618 27AA  
                                 l4290 143E                                   l4282 141E  
                                 l4274 138E                                   l4418 16A0  
                                 l4450 2C50                                   l3298 0DFC  
                                 l3386 1D86                                   l3378 1D60  
                                 l4602 2D1C                                   l2834 2F86  
                                 l2826 2F7E                                   l4442 1A0A  
                                 l4434 19B2                                   l4426 1984  
                                 l2930 25E4                                   l2922 25D2  
                                 l2914 25C0                                   l2906 25B2  
                                 l3650 1734                                   l3642 16F6  
                                 l3634 16CE                                   l4610 2AE0  
                                 l4178 2472                                   l3572 1CC8  
                                 l3564 1CA0                                   l3548 1C4C  
                                 l3476 2BB6                                   l3804 1F9E  
                                 l3580 2EB0                                   l3708 1E74  
                                 l3716 1EE2                                   l3740 1922  
                                 l3732 18D8                                   l3724 18A0  
                                 l4292 147A                                   l4284 143A  
                                 l4276 13AE                                   l3820 2136  
                                 l3812 20FE                                   l4452 2C66  
                                 l3396 239A                                   l3388 1D8C  
                                 l3492 0400                                   l4604 2D28  
                                 l4380 2F22                                   l2836 2F94  
                                 l2828 2F80                                   l4444 1A24  
                                 l4436 19D0                                   l4428 1988  
                                 l2932 25E6                                   l2924 25D4  
                                 l2916 25C4                                   l2908 25B4  
                                 l3900 186C                                   l3652 1742  
                                 l3660 1778                                   l3644 1702  
                                 l3636 16DC                                   l4620 2B10  
                                 l4612 2AEE                                   l4196 2E40  
                                 l4188 248E                                   l3566 1CB0  
                                 l3574 1CE6                                   l3558 1C76  
                                 l3478 2BC2                                   l3806 1FAE  
                                 l4390 25F4                                   l3582 2EC0  
                                 l3590 1B3A                                   l3718 1EF4  
                                 l3742 1944                                   l3734 18F4  
                                 l3726 18B2                                   l4294 148E  
                                 l4278 13D4                                   l3822 2154  
                                 l3814 2114                                   l4470 2D94  
                                 l4454 2C6E                                   l3398 23DE  
                                 l3494 0434                                   l3486 03FC  
                                 l4382 2F26                                   l4438 19D4  
                                 l4446 1A38                                   l2934 25E8  
                                 l2926 25D8                                   l2918 25C6  
                                 l3670 2498                                   l3830 2512  
                                 l3902 1870                                   l3662 1794  
                                 l3654 1746                                   l3646 170E  
                                 l3638 16E0                                   l4622 2B14  
                                 l4614 2AF2                                   l4606 2ACC  
                                 l4198 2E58                                   l4710 0C02  
                                 l3568 1CB2                                   l3808 1FB0  
                                 l4392 2620                                   l4384 25F0  
                                 l3584 2ED0                                   l3592 1B3E  
                                 l3744 195C                                   l3736 190C  
                                 l3728 18CC                                   l4296 1490  
                                 l3824 2164                                   l3816 211C  
                                 l4472 2DAC                                   l4456 2C7A  
                                 l4720 2EDC                                   l4376 2F0E  
                                 l4448 1A50                                   l2936 25EA  
                                 l2928 25E0                                   l3680 24C2  
                                 l3672 24AE                                   l3840 2548  
                                 l3832 2524                                   l3904 188C  
                                 l3656 1754                                   l3648 172C  
                                 l3664 179C                                   l3920 0E9C  
                                 l4616 2AF6                                   l4608 2AD0  
                                 l4640 1002                                   l4632 0FC6  
                                 l4624 0FAC                                   l3760 14EE  
                                 l3752 14B2                                   l4712 0C3C  
                                 l4704 0BCC                                   l3586 2ED4  
                                 l3578 2EAC                                   l3594 1B6E  
                                 l3746 1968                                   l4298 14A0  
                                 l3826 216E                                   l3818 2128  
                                 l3850 2A2C                                   l4730 2F08  
                                 l4722 2EF2                                   l4378 2F1E  
                                 l2938 25EC                                   l2890 257E  
                                 l3682 24E8                                   l3674 24B4  
                                 l3666 2492                                   l3842 255E  
                                 l3834 252C                                   l3658 1774  
                                 l3930 0EFA                                   l3922 0E9E  
                                 l3914 0E54                                   l3906 0E30  
                                 l4618 2AFA                                   l4650 1088  
                                 l4642 1012                                   l4634 0FD6  
                                 l4626 0FC2                                   l3770 1540  
                                 l3762 14FA                                   l3754 14B6  
                                 l4714 0C68                                   l4706 0BE4  
                                 l3692 220E                                   l4396 2638  
                                 l3780 26CE                                   l3596 1BAC  
                                 l3748 1970                                   l4580 2070  
                                 l3860 2A50                                   l3852 2A30  
                                 l4724 2EFA                                   l2892 2580  
                                 l3684 24EA                                   l3676 24BC  
                                 l3668 2496                                   l3844 2566  
                                 l3836 2534                                   l3828 250A  
                                 l3940 0F3C                                   l3932 0F0C  
                                 l3924 0EAE                                   l3916 0E80  
                                 l3908 0E40                                   l4652 1098  
                                 l4644 101A                                   l4636 0FE6  
                                 l4660 2988                                   l3764 1514  
                                 l3756 14BA                                   l4716 0C98  
                                 l4708 0BF6                                   l4732 2FB0  
                                 l3694 221C                                   l3790 1F2E  
                                 l4398 264C                                   l3782 26DE  
                                 l4582 20BA                                   l4590 1FDE  
                                 l3862 2A74                                   l3854 2A3E  
                                 l4726 2EFE                                   l2894 2588  
                                 l3686 24FC                                   l3678 24C0  
                                 l3846 2568                                   l3838 2542  
                                 l3950 0F92                                   l3942 0F40  
                                 l3934 0F10                                   l3926 0ED6  
                                 l3918 0E88                                   l4654 10A2  
                                 l4646 101E                                   l4638 0FEE  
                                 l4670 29B2                                   l4662 2998  
                                 l3774 1578                                   l3766 151E  
                                 l3758 14D4                                   l4718 0C9C  
                                 l4750 2D6C                                   l3696 224A  
                                 l3792 1F3E                                   l3784 26EC  
                                 l3960 001E                                   l4584 20C8  
                                 l4592 200E                                   l3856 2A40  
                                 l4728 2F04                                   l2896 258E  
                                 l3688 2500                                   l3848 256E  
                                 l3944 0F54                                   l3952 0F96  
                                 l3936 0F34                                   l3928 0EF8  
                                 l4656 10CC                                   l4648 1086  
                                 l4672 29B6                                   l4664 299C  
                                 l3776 1594                                   l3768 1538  
                                 l4680 0AF0                                   l4752 2D70  
                                 l3698 224E                                   l3794 1F54  
                                 l3786 26FC                                   l3970 006E  
                                 l3962 0030                                   l4586 20CC  
                                 l4578 206C                                   l4594 203C  
                                 l3858 2A4E                                   l2898 25A6  
                                 l3890 17F4                                   l3954 0F98  
                                 l3946 0F56                                   l3938 0F3A  
                                 l4658 10E6                                   l4674 29C4  
                                 l4666 29A0                                   l3778 15A4  
                                 l4690 0B4E                                   l4754 2D74  
                                 l4746 2D5A                                   l3796 1F5C  
                                 l3788 2706                                   l3980 00E0  
                                 l3972 0076                                   l3964 003C  
                                 l4596 2044                                   l4588 1FD2  
                                 l3892 1804                                   l3884 17BA  
                                 l3956 0FA8                                   l3948 0F66  
                                 l4676 29D2                                   l4668 29AE  
                                 l4692 0B7E                                   l4684 0B14  
                                 l4756 2D88                                   l4748 2D5E  
                                 l3798 1F68                                   l3990 0148  
                                 l3982 00E6                                   l3974 0092  
                                 l3966 0044                                   l3958 0012  
                                 l4598 204E                                   l3894 1830  
                                 l3886 17C6                                   l4678 29D6  
                                 l4694 0B92                                   l4686 0B2C  
                                 l3992 0160                                   l3976 00BA  
                                 l3968 0050                                   l3896 185C  
                                 l3888 17E2                                   l4696 0B9A  
                                 l4688 0B3E                                   l3994 016C  
                                 l3978 00BE                                   l3986 00EC  
                                 l3898 1864                                   l4698 0BC8  
                                 l3996 0186                                   l3988 013A  
                                 ?_isr 0001                                   l3998 018E  
                                 STR_1 5FF2                                   STR_2 5FA0  
                                 STR_3 5F6B                                   STR_4 5F87  
                                 STR_5 5FEE                                   STR_6 5FF6  
                                 STR_7 5FBF                                   STR_8 5FE7  
                                 STR_9 5FD6                                   _CREN 007D5C  
                                 u2000 0E2C                                   u2001 0E28  
                                 u2010 296A                                   u2011 2966  
                                 u2100 1D76                                   u2020 2E84  
                                 u2101 1D72                                   u2021 2E80  
                        TFT_DrawChar@c 003A                                   u2030 2198  
                                 u2110 1D9C                                   u2031 2194  
                                 u2111 1D98                                   u2040 21F0  
                                 u2200 2E3E                                   u2120 0950  
                                 u3000 0EAE                                   u2041 21EC  
                                 u2201 2E3A                                   u2121 094A  
                                 u3001 0EAA                                   u2050 220A  
                                 u2210 2C20                                   u2130 0952  
                                 u3010 0ED6                                   u2051 2206  
                                 u2211 2C1C                                   u3011 0ED2  
                        TFT_DrawChar@i 004C                                   u2220 2C3C  
                                 u3100 0148                                   u2060 1CFC  
                                 u2140 0968                                   u2300 0446  
                                 u3020 0F0C                          TFT_DrawChar@j 004B  
                                 u2221 2C38                                   u3101 0144  
                                 u2061 1CF8                                   u2141 0964  
                                 u2301 0442                                   u3021 0F08  
                                 _LATA 000F89                                   u2230 2FA8  
                                 u3110 019C                                   u2070 1D16  
                                 u2150 09B6                                   u2310 0456  
                                 u3030 0F54                                   _LATB 000F8A  
                                 u2231 2FA4                                   u3111 0198  
                                 u2071 1D12                                   u2151 09B2  
                                 u2311 0452                                   u3031 0F50  
                                 _LATC 000F8B                                   u2400 1C4C  
                                 u2240 2338                                   u3200 0312  
                                 u3120 01C2                                   u2080 1D3C  
                                 u2160 0A44                                   u2320 050A  
                                 u3040 0F66                                   u4000 29D2  
                                 u2401 1C48                                   u3201 030E  
                                 u3121 01BE                                   u2081 1D38  
                                 u2161 0A40                                   u2321 0506  
                                 u3041 0F62                                   u4001 29CE  
                                 u2410 1C64                                   u2250 2348  
                                 u3210 03CC                                   u3130 0244  
                                 u2090 1D5A                                   u2170 0A6A  
                                 u2330 051A                                   u3050 0FA8  
                                 u4010 0B10                                   u2411 1C60  
                                 u2251 2344                                   u3211 03C8  
                                 u3131 0240                                   u2091 1D56  
                                 u2171 0A66                                   u2331 0516  
                                 u3051 0FA4                                   u4011 0B0C  
                                 u2420 1C76                                   u3300 1346  
                                 u2260 2380                                   u2500 1B6E  
                                 u3220 03EE                                   u3140 025C  
                                 u3060 0030                                   u2180 0ABC  
                                 u2340 05CC                                   u4020 0B92  
                                 u2421 1C72                                   u3301 1342  
                                 u2501 1B6A                                   u3221 03EA  
                                 u3141 0258                                   u3061 002C  
                                 u2181 0AB8                                   u2341 05C8  
                                 u4021 0B8E                                   u2430 1C8C  
                                 u3230 2908                                   u2270 2390  
                                 u2510 1BAC                                   u3150 026E  
                                 u3070 006E                                   u2190 0AEE  
                                 u2350 05E2                                   u3310 1DF4  
                                 u4030 0BF6                                   u2431 1C88  
                                 u3231 2904                                   u2271 238C  
                                 u2247 232E                                   u2511 1BA8  
                                 u3151 026A                                   u3071 006A  
                                 u2191 0AEA                                   u2351 05DE  
                                 u3311 1DF0                                   u4031 0BF2  
                                 u2440 1C9C                                   u2280 2BE6  
                                 u3240 2920                                   u2520 1BCC  
                                 u3160 0284                                   u3080 00DC  
                                 u2360 05FA                                   u3320 1E3E  
                                 u3400 2472                                   u4040 0CAC  
                                 u2441 1C98                                   u3241 291C  
                                 u3161 0280                                   u3081 00D8  
                                 u2361 05F6                                   u3321 1E3A  
                                 u3401 246E                                   u4041 0CA8  
                                 u2450 1CC4                                   u2290 2BF6  
                                 u3250 1276                                   u2530 1C0A  
                                 u3170 02AE                                   u3090 013A  
                                 u2370 060A                                   u4050 2EF2  
                                 u2610 172C                                   u3330 2A18  
                                 u3410 2488                          TFT_DrawChar@x 0036  
                                 u2451 1CC0                                   u2291 2BF2  
                                 u3251 1272                                   u2267 2376  
                                 u2531 1C06                                   u2515 1B9C  
                                 u3171 02AA                                   u3091 0136  
                                 u2371 0606                                   u4051 2EEE  
                                 u4107 2598                                   u2611 1728  
                                 u3411 2484                          TFT_DrawChar@y 0038  
                                 u2460 1CE6                                   u2380 2D00  
                                 u3420 2E06                                   u3260 1288  
                                 u2700 1EF4                                   u2540 2764  
                                 u3180 02D4                                   u2620 1754  
                                 u3340 2A2A                                   u2461 1CE2  
                                 u3421 2E02                                   u3261 1284  
                                 u2517 1B92                                   u2701 1EF0  
                                 u2541 2760                                   u3181 02D0  
                                 u4117 1992                                   u2621 1750  
                                 u3341 2A26                                   u2390 2D1A  
                                 u3510 2AC2                                   u2470 2EC0  
                                 u3270 12AE                                   u2710 1F14  
                                 u2550 2794                                   u3190 02FC  
                                 u2630 1794                                   u3430 2E58  
                                 u3350 1160                                   u2391 2D16  
                                 u2287 2BDC                                   u3511 2ABE  
                                 u2471 2EBC                                   u3271 12AA  
                                 u2527 1BC2                                   u2551 2790  
                                 u3191 02F8                                   u4127 1A14  
                                 u2631 1790                                   u3431 2E54  
                                 u3351 115C                                   u2480 2ED0  
                                 u3280 12D6                                   u2720 1F24  
                                 u2560 27CA                                   u3520 13D4  
                                 u2640 17B8                                   u3440 2E6E  
                                 u3360 11CE                                   u2800 1538  
                                 u2481 2ECC                                   u3281 12D2  
                                 u2721 1F20                                   u2561 27C6  
                                 u3521 13D0                                   u4137 2F8C  
                                 u2641 17B4                                   u3441 2E6A  
                                 u3337 2A0E                                   u3361 11CA  
                                 u2801 1534                                   u3290 1336  
                                 u2490 1B5E                                   u2570 27FA  
                                 u2730 18B2                                   u3530 141E  
                                 u2650 24A8                                   u2810 1594  
                                 u3370 2430                                   u2387 2CF6  
                                 u3291 1332                                   u2571 27F6  
                                 u2731 18AE                                   u3531 141A  
                                 u2651 24A4                                   u2811 1590  
                                 u3371 242C                                   u2740 18CC  
                                 u3540 147A                                   u2900 2154  
                                 u3700 16B4                                   u2660 24FC  
                                 u2820 15A4                                   u3380 2446  
                                 u2717 1F0A                                   u2741 18C8  
                                 u3541 1476                                   u2901 2150  
                                 u3701 16B0                                   u2661 24F8  
                                 u2821 15A0                                   u3381 2442  
                                 u2670 223A                                   u2830 26EC  
                                 u2750 190C                                   u3550 14A0  
                                 u1950 0CF8                                   u3710 1A0A  
                                 u2910 2524                                   u3390 245C  
                                 u2671 2236                                   u2831 26E8  
                                 u2751 1908                                   u3551 149C  
                                 u3711 1A06                                   u2911 2520  
                                 u3391 2458                                   u2680 227A  
                                 u3560 22EE                                   u2840 2726  
                                 u2760 195C                                   u1960 0D18  
                                 u3720 1A50                                   u2920 2542  
                                 u2681 2276                                   u2841 2722  
                                 u2497 1B54                                   u2761 1958  
                                 u1961 0D14                                   u3721 1A4C  
                                 u2921 253E                                   u2850 1F54  
                                 u2690 1EAE                                   u1970 0D66  
                                 u3650 2F1E                                   u2930 255E  
                                 u2770 14D4                                   u2851 1F50  
                                 u2691 1EAA                                   u1971 0D62  
                                 u1955 0CEE                                   u3651 2F1A  
                                 u2931 255A                                   u2771 14D0  
                                 _PEIE 007F96                                   u2860 1F76  
                                 u3660 2634                                   u1980 0D8E  
                                 u3900 20FC                                   u2940 2A3E  
                                 u2780 14EE                                   u2861 1F72  
                                 u3565 22E4                                   u3661 2630  
                                 u1981 0D8A                                   u3901 20F8  
                                 u2941 2A3A                                   u2781 14EA  
                                 u2870 1F9E                                   u3670 265E  
                                 u1990 0DFC                                   u2950 2A4E  
                                 u3910 2AE0                                   u2790 1514  
                                 u2871 1F9A                                   u3671 265A  
                                 u1991 0DF8                                   u2951 2A4A  
                                 u3911 2ADC                                   u2791 1510  
                                 u2880 2114                                   u3680 15F6  
                                 u2960 2A64                                   u3920 2AEE  
                                 u2881 2110                                   u3681 15F2  
                                 u2961 2A5C                                   u3921 2AEA  
                                 u2890 2136                                   u3690 1678  
                                 u3930 2B10                                   u2891 2132  
                                 u3691 1674                                   u3931 2B0C  
                                 _RCIE 007CED                                   u2980 188C  
                                 u3940 0FD6                                   _RCIF 007CF5  
                                 u2981 1888                                   u3941 0FD2  
                                 u2990 0E40                                   u3950 1002  
                                 u2991 0E3C                                   u3951 0FFE  
                                 u3880 20A0                                   u3960 1098  
                                 u3961 1094                                   u3890 20EC  
                                 u2978 2A66                                   u3970 2998  
                                 u3971 2994                                   u3980 29AE  
                                 u3981 29AA                                   u3990 29C4  
                                 u3887 2096                                   u3991 29C0  
                                 u3897 20E2                                   _OERR 007D59  
                                 _RBPU 007F8F                __size_of_A6_BaudRateGet 0124  
              __size_of_A6_BaudRateSet 0104                                   _TXIF 007CF4  
            _Ecg_ProcessHeartRate$1028 007C              _Ecg_ProcessHeartRate$1029 007E  
               ??_Ecg_ProcessHeartRate 006B                          TFT_DrawLine@t 0024  
                                 abs@a 0005                 ??_Ecg_ProcessHeartbeat 002E  
                                 _atoi 14B2                                   _atol 1254  
                                 _main 2D5A                        A6_BaudRateGet@j 0049  
                                 _init 257E                                   _loop 2FB0  
                                 fsr1h 000FE2                                   fsr2h 000FDA  
                                 indf1 000FE7                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 0057                                   prodh 000FF4  
                                 prodl 000FF3                                   start 000E  
                  TFT_DrawBitmap@color 001D                      TFT_Flood@color_hi 001C  
                    TFT_Flood@color_lo 001D                            _Ecg_Process 2988  
                        __CFG_IESO$OFF 000000            __size_of_EUSART_BaudRateSet 0084  
      __size_of_A6_NetworkGetRSSILevel 007A           __end_of_EUSART_BufferGetChar 2C50  
                      ??_TFT_GetHeight 0007                           ___param_bank 000000  
        ?_Ecg_Background_Leads_Failure 0001          A6_BaudRateSet@currentBaudRate 0094  
                                ??_abs 0007                                  ??_isr 0003  
                        __CFG_PLLDIV$1 000000                        ??_TFT_DrawPixel 0013  
                       __CFG_CCP2MX$ON 000000                          TFT_Init@color 0023  
                                ?_atoi 000F                                  ?_atol 0011  
                                ?_main 0001                                  ?_init 0001  
                      __end_of___awdiv 1DAE                                  ?_loop 0001  
                                STR_10 5FD6                                  STR_11 5F94  
                                STR_12 5FF6                                  STR_20 5FC8  
                                STR_21 5FE0                                  STR_22 5FD6  
                                STR_30 5FFB                                  STR_14 5FAB  
                                STR_23 5FD6                                  STR_31 5FFB  
                                STR_15 5FD0                                  STR_24 5FFB  
                                STR_32 5FF9                                  STR_33 5FFD  
                                STR_25 5FB5                                  STR_18 5FFB  
                                STR_26 5FD8                                  STR_27 5FD6  
                                STR_28 5FD6                                  STR_29 5FFB  
                      __end_of___lldiv 1FD2                        ___awdiv@divisor 0007  
                      __end_of___llmod 2186                         TFT_DrawChar@bg 003D  
                      __end_of___lwdiv 257E                                  i2l152 26C2  
                       TFT_DrawChar@xl 0045                                  i2l468 2F78  
                                i2l688 28CA                        ___awdiv@counter 0009  
                                _RCREG 000FAE                 ??_Ecg_ProcessInterrupt 0005  
                                _TMR3H 000FB3                                  _TMR3L 000FB2  
                                _SPBRG 000FAF                                  _PORTB 000F81  
                        __CFG_USBDIV$2 000000                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TXREG 000FAD                                  _Ecg_X 0055  
                                _Ecg_Y 00C0                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                    ___lmul@multiplicand 0009  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                    ??_EUSART_RX_Flush 0005                         TFT_DrawLine@x0 0017  
                       TFT_DrawLine@x1 001B                         TFT_DrawLine@y0 0019  
                       TFT_DrawLine@y1 001D                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                         TFT_DrawLine@dx 0034  
                       TFT_DrawLine@dy 002C                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                __size_of_Ecg_CheckLeads 0050  
                      __end_of_dpowers 5F21                        __end_of_isdigit 2EDC  
                     __end_of_TFT_Font 5E2D                       __end_of_TFT_Init 1A60  
                                atoi@a 0014                                  atol@a 001A  
                                atol@c 001E                                  atoi@s 000F  
                                atol@s 0011                         TFT_DrawPixel@h 0013  
                       TFT_DrawPixel@v 0015                         TFT_DrawPixel@x 000D  
                       TFT_DrawPixel@y 000F                     __size_of_TFT_Flood 0182  
                      __end_of_sleepMS 2E08                       _TFT_DrawFillRect 239A  
                                tablat 000FF5                     __size_of_TFT_Reset 001E  
               __size_of_Ecg_Interrupt 0020                       __end_of_Ecg_Draw 18A0  
                     __end_of_Ecg_Init 2F0C                       __end_of_Ecg_Read 250A  
                 TFT_DrawBitmap@bitmap 001B                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                      __end_of_sprintf 03FC            EUSART_BufferGetChar@timeout 000F  
                      __end_of_strcspn 2804                        __end_of_strncmp 1C14  
                  TFT_FullScreen@color 001E                         __CFG_MCLRE$OFF 000000  
                       TFT_Flood@color 000F                        __initialization 2804  
                         __end_of_atoi 15CA                           __end_of_atol 138E  
                         __end_of_main 2D94                           __end_of_init 25F0  
                         __end_of_loop 2FBA                              ??_A6_Init 0052  
                               ??_atoi 0011                                 ??_atol 0015  
                               ??_main 0052                                 ??_init 0005  
                               ??_loop 004F                          _Ecg_Draw$2255 0036  
                     ??_TFT_DrawBitmap 001F                          __activetblptr 000002  
               _A6_NetworkGetRSSILevel 2418                       ??_TFT_DrawString 004D  
                         ??_A6_IsAlive 001F                           ??_A6_Command 001F  
                       _EUSART_TX_Char 2F98                       ___llmod@dividend 0012  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                     ___awdiv@dividend 0005                      _TFT_DrawChar$2252 0047  
                    _TFT_DrawChar$2253 0049                                 i2l4530 2698  
                               i2l4522 266A                                 i2l4540 26BE  
                               i2l4532 269C                                 i2l4524 2678  
                               i2l4534 26A0                                 i2l4526 2686  
                               i2l4480 2F76                                 i2l4528 2694  
                               i2l4536 26A2                                 i2l4490 28A4  
                               i2l4482 2868                                 i2l4538 26B0  
                               i2l4492 28B6                                 i2l4484 287A  
                               i2l4476 2F5A                                 i2l4494 28BA  
                               i2l4486 287E                                 i2l4478 2F74  
                               i2l4488 28A0                  _A6_BaudRateAutoDetect 25F0  
                               _TMR3IE 007D01                                 _TMR3IF 007D09  
                               _SPBRGH 000FB0                        TFT_DrawBitmap@h 0024  
                      TFT_DrawBitmap@i 0026                        TFT_DrawBitmap@j 0021  
                      TFT_DrawBitmap@w 0023                        TFT_DrawBitmap@x 0017  
                      TFT_DrawBitmap@y 0019          TFT_OrientationSet@orientation 0022  
     __size_of_Ecg_Background_Leads_Ok 009A                         __CFG_XINST$OFF 000000  
                      TFT_DrawLine@err 0030                       ??_TFT_FullScreen 0020  
                               ___lmul 26CE                                 ___wmul 2F34  
               A6_BaudRateSet@baudRate 004A                              ??___awdiv 0009  
                            ??___lldiv 000D                              ??___llmod 001A  
                            ??___lwdiv 0009                      ?_EUSART_TX_String 0009  
                   __end_of_A6_IsAlive 2ACC                                 _memset 2E08  
                        _Ecg_Interrupt 2F5A                      __end_of_TFT_Flood 0E30  
                               clear_0 2842                                 clear_1 284E  
                   __end_of_A6_Command 2294                       ___awdiv@quotient 000B  
                    __end_of_TFT_Reset 2F98                     ??_EUSART_TX_String 000C  
                               _strchr 2318                                 _strcmp 28CC  
                               _strcpy 29DC                                 _strlen 2BB6  
                               _strtok 18A0                                 _strspn 2738  
                               _strstr 1E70          A6_NetworkGetOperator@operator 001F  
                         __pdataCOMRAM 0055                              ??_isdigit 0005  
                      _refreshGSMSleep 00AE                           __mediumconst 592C  
               __end_of_EUSART_TX_Char 2FB0                              ??_sleepMS 0009  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                   _EUSART_BufferGetChar 2C04  
                      TFT_DrawString@x 0060                        TFT_DrawString@y 0062  
                            ??_sprintf 0023                              ??_strcspn 000F  
                            ??_strncmp 000F                         _A6_BaudRateGet 138E  
                       _A6_BaudRateSet 15CA                   __size_of_EUSART_Init 0048  
                           __accesstop 0060                __end_of__initialization 285A  
               A6_BaudRateSet@response 0060                        __CFG_PBADEN$OFF 000000  
                        ___rparam_used 000001                        TFT_Flood@blocks 0019  
                       __pcstackCOMRAM 0001                           __pidataBANK0 2FBA  
                   refreshGSM@operator 006B                         ?_Ecg_Interrupt 0001  
                            ?_TFT_Init 0023     Ecg_ProcessHeartbeat@ecgDeltaAbsSum 0032  
              __size_of_Ecg_ProcessEcg 004E         __size_of_A6_NetworkGetOperator 013A  
      Ecg_ProcessHeartbeat@ecgDeltaSum 0030          __end_of_A6_NetworkGetOperator 1254  
                            ?_Ecg_Draw 0001                              ?_Ecg_Init 0001  
                            ?_Ecg_Read 0005                     _TFT_OrientationGet 2FC6  
                   _TFT_OrientationSet 2F0C           __size_of_EUSART_RX_Interrupt 0064  
                      ?_EUSART_TX_Char 0001                  ?_EUSART_BufferGetChar 000F  
                       _Ecg_CheckLeads 2A2C                 __end_of_A6_BaudRateGet 14B2  
               __end_of_A6_BaudRateSet 16CE                           sprintf@width 0030  
                  ?_TFT_OrientationGet 0001                 ?_A6_BaudRateAutoDetect 0001  
                  ?_TFT_OrientationSet 0020                             __pbssBANK0 0098  
                           __pbssBANK1 0100                    refreshGSM@RSSILevel 008B  
                         ?_Ecg_Process 0001                   A6_ReadLine@iResponse 0016  
                              ?___lmul 0005                                ?___wmul 0009  
           EUSART_BaudRateSet@baudRate 0012                   ??_TFT_OrientationGet 0005  
                 ??_TFT_OrientationSet 0022                        _EUSART_RX_Flush 2FC0  
                          refreshGSM@i 0091                     A6_ReadLine@lineLen 0013  
                           ??_TFT_Init 0025                                ?_memset 0005  
                              _A6_Init 2D94                         ___lmul@product 000D  
             __end_of_TFT_DrawFillRect 2418                                ?_strchr 0005  
                              ?_strcmp 0005                                ?_strcpy 0005  
                              ?_strlen 0005                          ??_A6_ReadLine 0016  
                              ?_strtok 0012                                ?_strspn 000B  
                              ?_strstr 0010                             ??_Ecg_Draw 0036  
                           ??_Ecg_Init 004F                             ??_Ecg_Read 0007  
                   A6_ReadLine@timeout 0014                 TFT_WriteRegister@h_719 000B  
               TFT_WriteRegister@l_720 000C                 __end_of_Ecg_CheckLeads 2A7C  
                     TFT_DrawChar@line 0044                       TFT_DrawChar@size 003F  
                         A6_ReadLine@c 0017               ?_EUSART_RX_AvailableData 0005  
                      ?_A6_BaudRateGet 001F                        ?_A6_BaudRateSet 004A  
              TFT_OrientationSet@color 0020                              TFT_Init@i 002E  
                      __CFG_VREGEN$OFF 000000                  TFT_DrawFillRect@color 0028  
           __end_of_EUSART_BaudRateSet 2318                _Ecg_Background_Leads_Ok 1FD2  
        __size_of_Ecg_ProcessHeartRate 016E          __size_of_Ecg_ProcessHeartbeat 017C  
                              __Hparam 0000                                __Lparam 0000  
                    A6_Command@command 0018                              _ECG_FLAGS 00BC  
                      ??_Ecg_Interrupt 0001              A6_NetworkGetRSSI@response 001F  
                              ___awdiv 1CEA                        __size_of___lmul 006A  
                __end_of_TFT_GetHeight 2BB6                                ___lldiv 1F2E  
                      __size_of___wmul 0026                                ___llmod 20FE  
                              ___lwdiv 250A                      _A6_NetworkGetRSSI 1DAE  
                      __CFG_STVREN$OFF 000000                      A6_Command@timeout 001A  
                        _ECG_HEARTBEAT 0098                                __pcinit 2804  
                      __size_of_memset 0038                                __ramtop 0800  
                        _ECG_HEARTRATE 00AA                ?_A6_NetworkGetRSSILevel 0001  
                              __ptext0 2D5A                                __ptext1 2FB0  
                              __ptext2 0AF0                                __ptext3 2418  
                              __ptext4 1DAE                                __ptext5 14B2  
                              __ptext6 111A                                __ptext7 29DC  
                              __ptext8 2988                                __ptext9 2E40  
                   ?_A6_NetworkGetRSSI 0001                  __end_of_TFT_DrawPixel 1B3A  
                      __size_of_strchr 0082                        __size_of_strcmp 0060  
                      __size_of_strcpy 0050                        __size_of_strlen 004E  
                      __size_of_strtok 00E2                        __size_of_strspn 0066  
                      __size_of_strstr 00BE                                _dpowers 5EF9  
                         __size_of_abs 0034                                _isdigit 2EAA  
                         __size_of_isr 26C6                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                 ??_EUSART_BufferGetChar 0011  
                              _sleepMS 2DCE          __size_of_Ecg_ProcessInterrupt 0036  
                  ??_A6_NetworkGetRSSI 001F                    __end_of_A6_ReadLine 1CEA  
                              _sprintf 0012                                _strcspn 279E  
                              _strncmp 1B3A                         __pintcode_body 2660  
                            _EUSART_RX 0100                   end_of_initialization 285A  
                           _refreshGSM 0AF0                                memset@c 0007  
                              memset@n 0009                                memset@p 000B  
                        __Lmediumconst 592C                                int_func 2660  
                   TFT_WriteRegister@h 0009                     TFT_WriteRegister@l 000A  
                      ___lldiv@divisor 0009                __end_of_EUSART_RX_Flush 2FC6  
                      ___lldiv@counter 0011              Ecg_CheckLeads@leadsStatus 0008  
                            _RCSTAbits 000FAB              __end_of_A6_NetworkGetRSSI 1E70  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                        ?_TFT_GetWidth 0005                       TFT_DrawString@bg 0068  
                        ?_TFT_DrawChar 0036                          ?_TFT_DrawLine 0017  
       __end_of_A6_NetworkGetRSSILevel 2492                                strcmp@r 000B  
                              strlen@s 0005                         _Ecg_ProcessEcg 2ACC  
                              strspn@i 0010                              _PORTAbits 000F80  
      __end_of_EUSART_RX_AvailableData 220E                              _PORTCbits 000F82  
                            _TFT_Flood 0CAE                              _TFT_Reset 2F7A  
            __size_of_EUSART_TX_String 0040              ??_Ecg_Background_Leads_Ok 004D  
                      refreshGSM@RSSIY 008C                            TFT_Init@cmd 002C  
                            _TXSTAbits 000FAC                     TFT_DrawBitmap@byte 0025  
                  _EUSART_RX_Interrupt 2868                   __size_of_Ecg_Process 0054  
                       ??_TFT_GetWidth 0007                         ??_TFT_DrawChar 0040  
                       ??_TFT_DrawLine 0021                 __end_of_Ecg_ProcessEcg 2B1A  
             EUSART_RX_AvailableData@t 000B                         __end_of___lmul 2738  
                       __end_of___wmul 2F5A                            _BAUDCONbits 000FB8  
                   A6_IsAlive@response 001F                          __pidataCOMRAM 2FCA  
                  refreshGSM@operatorX 008D                       ??_EUSART_TX_Char 0005  
                       __end_of_memset 2E40                      __size_of_TFT_Init 00DE  
                         _MILLISECONDS 00B6                            _A6_ReadLine 1C14  
                           ?_TFT_Flood 000F                         __end_of_strchr 239A  
                       __end_of_strcmp 292C                         __end_of_strcpy 2A2C  
                       __end_of_strlen 2C04                         __end_of_strtok 1982  
                       __end_of_strspn 279E                         __end_of_strstr 1F2E  
                           ?_TFT_Reset 0001                    start_initialization 2804  
                 ?_EUSART_RX_Interrupt 0001                      __size_of_Ecg_Draw 00E6  
              ??_A6_BaudRateAutoDetect 003F                      __size_of_Ecg_Init 0030  
                    __size_of_Ecg_Read 0078                            __end_of_abs 2EAA  
                          __end_of_isr 26CE                          ??_EUSART_Init 000D  
     Ecg_ProcessHeartbeat@ecgDeltaDiff 0034                    TFT_SetAddrWindow@x1 000D  
                  TFT_SetAddrWindow@x2 0011                    TFT_SetAddrWindow@y1 000F  
                  TFT_SetAddrWindow@y2 0013             A6_NetworkGetRSSI@RSSIToken 003F  
                Ecg_ProcessHeartRate@i 0086                  Ecg_ProcessHeartRate@j 0087  
                          ?_refreshGSM 0001                __size_of_TFT_DrawBitmap 00EC  
                  EUSART_TX_String@len 000B                    EUSART_TX_String@str 0009  
                Ecg_ProcessHeartbeat@i 0038                        ___llmod@divisor 0016  
                      ___llmod@counter 001A                __size_of_TFT_DrawString 0092  
                     ?_EUSART_RX_Flush 0001                    TFT_Init@orientation 002B  
           __size_of_A6_NetworkGetRSSI 00C2                      _TFT_Init_Sequence 5E2D  
                             ??___lmul 000D                               ??___wmul 000D  
                      ?_Ecg_ProcessEcg 0001                  A6_Command@responseLen 001E  
                          __pdataBANK0 00BE                       __CFG_LPT1OSC$OFF 000000  
                             ??_memset 000B                               ?_A6_Init 004E  
                    ?_TFT_DrawFillRect 0020         EUSART_RX_AvailableData@timeout 0005  
                             ??_strchr 0009                               ??_strcmp 0009  
                             ??_strcpy 0009                               ??_strlen 0007  
                     ??_A6_BaudRateGet 0023                               ??_strtok 0016  
                             ??_strspn 000F                               ??_strstr 0014  
                     ??_A6_BaudRateSet 004E                  A6_BaudRateSet@request 0080  
                   ??_TFT_DrawFillRect 002A                  ??_EUSART_RX_Interrupt 0001  
       ??_Ecg_Background_Leads_Failure 004D                __size_of_TFT_FullScreen 005C  
                          __pbssCOMRAM 0052                  _A6_NetworkGetOperator 111A  
                        __pcstackBANK0 0060                           _isdigit$1967 0006  
         _A6_LAST_COMMAND_MILLISECONDS 00B2                            sprintf@flag 002F  
                          sprintf@prec 0027                            Ecg_Draw@ecg 0038  
                  __end_of_EUSART_Init 2C98       __size_of_EUSART_RX_AvailableData 0088  
            __end_of_TFT_Init_Sequence 5EF9                       ___lwdiv@dividend 0005  
                          Ecg_Read@ecg 0009                              __pintcode 0008  
                        __pmediumconst 592C                               ?___awdiv 0005  
                             ?___lldiv 0005                               ?___llmod 0012  
                             ?___lwdiv 0005            __size_of_TFT_OrientationGet 0004  
          __size_of_TFT_OrientationSet 0028     A6_NetworkGetOperator@operatorToken 0023  
                     ??_Ecg_CheckLeads 0007                     _EUSART_BaudRateSet 2294  
                TFT_WriteRegister@data 0007                    __size_of_refreshGSM 01BE  
         __end_of_Ecg_ProcessHeartRate 111A           __end_of_Ecg_ProcessHeartbeat 0FAC  
                          ??_TFT_Flood 0015                               ?_isdigit 0001  
                 EUSART_RX_Interrupt@c 0002                            ??_TFT_Reset 0005  
                  ?_EUSART_BaudRateSet 0012                               ?_sleepMS 0005  
                 __end_of_A6_BAUDRATES 5F2D                      _TFT_WriteRegister 2C98  
                     ___lwdiv@quotient 0009                       _EUSART_TX_String 2CDC  
                             ?_sprintf 001B                   __end_of_TFT_GetWidth 2B68  
                 __end_of_TFT_DrawChar 068A                               ?_strcspn 000B  
                             ?_strncmp 0009                   __end_of_TFT_DrawLine 0AF0  
                   ?_TFT_WriteRegister 0005   Ecg_ProcessHeartRate@heartbeatAverage 0080  
                       ___wmul@product 000D                      TFT_DrawChar@color 003B  
                  ??_TFT_WriteRegister 0009                   ??_EUSART_BaudRateSet 0016  
         __end_of_Ecg_ProcessInterrupt 2E76                               i2u380_40 2686  
                             i2u380_41 2682                               i2u381_40 26B0  
                             i2u381_41 26AC                               i2u374_40 287A  
                             i2u382_40 26BE                               i2u374_41 2876  
                             i2u382_41 26BA                               i2u375_40 2890  
                             i2u375_41 2888                               i2u377_40 28B6  
                             i2u376_48 2892                               i2u377_41 28B2  
                             i2u379_40 2678                               i2u379_41 2674  
                             _GO_nDONE 007E11                               _UCFGbits 000F6F  
                     __CFG_WDTPS$32768 000000                               _UCONbits 000F6D  
                __end_of_Ecg_Interrupt 2F7A                               _TFT_Font 592D  
                             _TFT_Init 1982                       __size_of_A6_Init 003A  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0                      ___wmul@multiplier 0009  
                             _Ecg_Draw 17BA                               _Ecg_Init 2EDC  
                             _Ecg_Read 2492                 ?_A6_NetworkGetOperator 001F  
                           TFT_Flood@i 001B                               _Ecg_Xold 00C2  
                             _Ecg_Yold 00BE              __end_of_TFT_WriteRegister 2CDC  
                   TFT_DrawPixel@color 0011          __size_of_EUSART_BufferGetChar 004C  
                           _A6_IsAlive 2A7C                        EUSART_TX_Char@c 0005  
                          _EUSART_Init 2C50                      TFT_DrawFillRect@h 0026  
                           _A6_Command 220E                      TFT_DrawFillRect@w 0024  
                    TFT_DrawFillRect@x 0020                      TFT_DrawFillRect@y 0022  
                    ___lmul@multiplier 0005                              copy_data0 2818  
                       _TFT_DrawBitmap 16CE                 __size_of_TFT_GetHeight 004E  
                    _TFT_SetAddrWindow 068A                        _TFT_Orientation 0054  
                       _TFT_DrawString 206C                 __size_of_TFT_DrawPixel 00DA  
                   ?_TFT_SetAddrWindow 000D                               __Hrparam 0000  
               A6_BaudRateGet@baudRate 0043                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0029                         _TFT_ConsoleRow 0052  
              refreshGSM@operatorRSSIX 008F              Ecg_ProcessHeartRate@jPrev 0085  
                           _ECG_BUFFER 00A5                    TFT_DrawString@color 0066  
                  ??_TFT_SetAddrWindow 0015                      TFT_DrawLine@t_780 002A  
                    TFT_DrawLine@t_778 0026                      TFT_DrawLine@t_779 0028  
                     __size_of___awdiv 00C4          Ecg_ProcessHeartRate@heartrate 0084  
                     __size_of___lldiv 00A4                       __size_of___llmod 0088  
                    TFT_DrawLine@color 001F                       __size_of___lwdiv 0074  
                    TFT_DrawLine@steep 0032                        A6_Init@baudRate 004E  
                    TFT_DrawLine@ystep 002E                           ?_A6_ReadLine 0011  
                       _TFT_FullScreen 292C                     A6_Command@response 001C  
                           sprintf@val 0029                       __size_of_isdigit 0032  
                      ___lwdiv@divisor 0007                        ___lwdiv@counter 000B  
               __end_of_TFT_DrawBitmap 17BA                               __ptext10 0FAC  
                             __ptext11 2ACC                               __ptext20 2F0C  
                             __ptext12 0E30                               __ptext21 2EDC  
                             __ptext13 16CE                               __ptext30 1A60  
                             __ptext22 2A2C                               __ptext14 17BA  
                             __ptext31 239A                               __ptext23 1FD2  
                             __ptext15 250A                               __ptext40 2D94  
                             __ptext32 292C                               __ptext24 2D1C  
                             __ptext16 2492                               __ptext41 15CA  
                             __ptext33 068A                               __ptext25 206C  
                             __ptext17 257E                               __ptext50 1B3A  
                             __ptext42 0012                               __ptext34 2B1A  
                             __ptext26 03FC                               __ptext18 1982  
                             __ptext51 2318                               __ptext43 2F34  
                             __ptext35 2B68                               __ptext27 0908  
                             __ptext19 2F7A                               __ptext60 28CC  
                             __ptext52 1254                               __ptext44 20FE  
                             __ptext36 2FC6                               __ptext28 2E76  
                             __ptext61 220E                               __ptext53 2EAA  
                             __ptext45 138E                               __ptext37 0CAE  
                             __ptext29 1CEA                               __ptext62 2BB6  
                             __ptext54 26CE                               __ptext46 18A0  
                             __ptext38 2C98                               __ptext71 2F5A  
                             __ptext63 2CDC                               __ptext55 25F0  
                             __ptext47 2738                               __ptext39 2C50  
                             __ptext72 2868                               __ptext64 2F98  
                             __ptext56 2DCE                               __ptext48 279E  
                             __ptext65 2FC0                               __ptext57 2294  
                             __ptext49 1E70                               __ptext66 1C14  
                             __ptext58 1F2E                               __ptext67 2E08  
                             __ptext59 2A7C                               __ptext68 2C04  
                             __ptext69 2186                       __size_of_sleepMS 003A  
       __size_of_A6_BaudRateAutoDetect 0070          __end_of_A6_BaudRateAutoDetect 2660  
                 TFT_WriteRegister@reg 0005                           ??_refreshGSM 004D  
            __end_of_TFT_SetAddrWindow 0908                 A6_BaudRateGet@response 0023  
                     __size_of_sprintf 03EA                       __size_of_strcspn 0066  
                     __size_of_strncmp 00DA                             strcpy@from 0007  
               __end_of_TFT_DrawString 20FE                              sleepMS@ms 0005  
                        __size_of_atoi 0118                          __size_of_atol 013A  
                        __size_of_main 003A                          __size_of_init 0072  
                        __size_of_loop 000A                _EUSART_RX_AvailableData 2186  
           A6_NetworkGetRSSILevel@RSSI 0041                          ??_Ecg_Process 004F  
                           strncmp@len 000D                   _Ecg_ProcessHeartRate 0FAC  
                     ??_Ecg_ProcessEcg 004F                   _Ecg_ProcessHeartbeat 0E30  
                       _ECG_ICON_HEART 5F2D                               int$flags 0057  
                             atoi@sign 0013                               atol@sign 0019  
                        _TFT_GetHeight 2B68                 __end_of_TFT_FullScreen 2988  
                   __end_of_refreshGSM 0CAE                  __CFG_CPUDIV$OSC1_PLL2 000000  
                        _TFT_DrawPixel 1A60                            _OSCTUNEbits 000F9B  
                __size_of_TFT_GetWidth 004E                  __size_of_TFT_DrawChar 028E  
                __size_of_TFT_DrawLine 01E8             __size_of_TFT_WriteRegister 0044  
                 _Ecg_ProcessInterrupt 2E40               ?_Ecg_Background_Leads_Ok 0001  
                             isdigit@c 0007                               memset@p1 0005  
                      ?_TFT_DrawBitmap 0017                            ?_A6_IsAlive 0001  
                   TFT_DrawString@size 006A                            ?_A6_Command 0018  
                             intlevel2 0000                              sprintf@ap 002D  
                            sprintf@sp 001B              __size_of_TFT_DrawFillRect 007E  
                      ?_TFT_DrawString 0060                              strchr@chr 0007  
                      A6_ReadLine@line 0011                              strchr@ptr 0005  
                     ___lldiv@dividend 0005                 __end_of_ECG_ICON_HEART 5F6B  
                ?_Ecg_ProcessHeartRate 0001                  ?_Ecg_ProcessHeartbeat 0001  
                            strcspn@s1 000B                              strcspn@s2 000D  
                             sleepMS@t 0009                              strncmp@s1 0009  
                            strncmp@s2 000B               ??_A6_NetworkGetRSSILevel 0041  
                           _OSCCONbits 000FD3              Ecg_ProcessHeartbeat@delta 0036  
                         _A6_BAUDRATES 5F21               __end_of_EUSART_TX_String 2D1C  
                       ?_TFT_GetHeight 0005                    __end_of_Ecg_Process 29DC  
                         _TFT_GetWidth 2B1A                           _TFT_DrawChar 03FC  
                         _TFT_DrawLine 0908            __end_of_EUSART_RX_Interrupt 28CC  
             __size_of_EUSART_RX_Flush 0006                        ?_TFT_FullScreen 001E  
                    TFT_DrawString@str 0064                         ?_TFT_DrawPixel 000D  
                             sprintf@c 0032                               sprintf@f 001D  
                             strcmp@s1 0005                               strcmp@s2 0007  
                     ___lldiv@quotient 000D                               strcpy@cp 0009  
                             strlen@cp 0007                               strcpy@to 0005  
                             strcspn@i 0010                  ?_Ecg_ProcessInterrupt 0001  
          A6_BaudRateGet@baudRateToken 0047                               strtok@s1 0012  
                             strtok@s2 0014                               strspn@s1 000B  
                             strspn@s2 000D                               strtok@sp 00BA  
                             strstr@s1 0010                               strstr@s2 0012  
              __size_of_EUSART_TX_Char 0018       A6_NetworkGetOperator@operatorLen 0021  
           __size_of_TFT_SetAddrWindow 027E              ??_EUSART_RX_AvailableData 0007  
                   __CFG_FOSC$HSPLL_HS 000000   __end_of_Ecg_Background_Leads_Failure 2D5A  
__size_of_Ecg_Background_Leads_Failure 003E           _Ecg_Background_Leads_Failure 2D1C  
           __end_of_TFT_OrientationGet 2FCA             __end_of_TFT_OrientationSet 2F34  
