

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 25 17:29:53 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    70                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76  0000                     
    77                           ; Version 2.10
    78                           ; Generated 31/07/2019 GMT
    79                           ; 
    80                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F2455 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     
   112                           	psect	idataCOMRAM
   113  002523                     __pidataCOMRAM:
   114                           	opt callstack 0
   115                           
   116                           ;initializer for _Ecg_Y
   117  002523  018F               	dw	399
   118                           
   119                           ;initializer for _Ecg_X
   120  002525  00EF               	dw	239
   121                           
   122                           	psect	idataBANK0
   123  002408                     __pidataBANK0:
   124                           	opt callstack 0
   125                           
   126                           ;initializer for _x5
   127  002408  41                 	db	65
   128  002409  54                 	db	84
   129  00240A  2B                 	db	43
   130  00240B  43                 	db	67
   131  00240C  52                 	db	82
   132  00240D  45                 	db	69
   133  00240E  47                 	db	71
   134  00240F  3F                 	db	63
   135  002410  0D                 	db	13
   136  002411  00                 	db	0
   137                           
   138                           ;initializer for _x2
   139  002412  41                 	db	65
   140  002413  54                 	db	84
   141  002414  2B                 	db	43
   142  002415  43                 	db	67
   143  002416  43                 	db	67
   144  002417  4C                 	db	76
   145  002418  4B                 	db	75
   146  002419  3F                 	db	63
   147  00241A  0D                 	db	13
   148  00241B  00                 	db	0
   149                           
   150                           ;initializer for _x4
   151  00241C  41                 	db	65
   152  00241D  54                 	db	84
   153  00241E  2B                 	db	43
   154  00241F  43                 	db	67
   155  002420  43                 	db	67
   156  002421  49                 	db	73
   157  002422  44                 	db	68
   158  002423  0D                 	db	13
   159  002424  00                 	db	0
   160                           
   161                           ;initializer for _x3
   162  002425  41                 	db	65
   163  002426  54                 	db	84
   164  002427  2B                 	db	43
   165  002428  43                 	db	67
   166  002429  53                 	db	83
   167  00242A  51                 	db	81
   168  00242B  0D                 	db	13
   169  00242C  00                 	db	0
   170                           
   171                           ;initializer for _Ecg_Yold
   172  00242D  018F               	dw	399
   173                           
   174                           ;initializer for _Ecg_Xold
   175  00242F  00EF               	dw	239
   176                           
   177                           	psect	idataBANK1
   178  00250E                     __pidataBANK1:
   179                           	opt callstack 0
   180                           
   181                           ;initializer for _x7
   182  00250E  41                 	db	65
   183  00250F  54                 	db	84
   184  002510  2B                 	db	43
   185  002511  43                 	db	67
   186  002512  4F                 	db	79
   187  002513  50                 	db	80
   188  002514  53                 	db	83
   189  002515  3D                 	db	61
   190  002516  3F                 	db	63
   191  002517  0D                 	db	13
   192  002518  00                 	db	0
   193                           
   194                           ;initializer for _x6
   195  002519  41                 	db	65
   196  00251A  54                 	db	84
   197  00251B  2B                 	db	43
   198  00251C  43                 	db	67
   199  00251D  4F                 	db	79
   200  00251E  50                 	db	80
   201  00251F  53                 	db	83
   202  002520  3F                 	db	63
   203  002521  0D                 	db	13
   204  002522  00                 	db	0
   205                           
   206                           	psect	mediumconst
   207  00589E                     __pmediumconst:
   208                           	opt callstack 0
   209  00589E  00                 	db	0
   210  00589F                     _TFT_Font:
   211                           	opt callstack 0
   212  00589F  00                 	db	0
   213  0058A0  00                 	db	0
   214  0058A1  00                 	db	0
   215  0058A2  00                 	db	0
   216  0058A3  00                 	db	0
   217  0058A4  3E                 	db	62
   218  0058A5  5B                 	db	91
   219  0058A6  4F                 	db	79
   220  0058A7  5B                 	db	91
   221  0058A8  3E                 	db	62
   222  0058A9  3E                 	db	62
   223  0058AA  6B                 	db	107
   224  0058AB  4F                 	db	79
   225  0058AC  6B                 	db	107
   226  0058AD  3E                 	db	62
   227  0058AE  1C                 	db	28
   228  0058AF  3E                 	db	62
   229  0058B0  7C                 	db	124
   230  0058B1  3E                 	db	62
   231  0058B2  1C                 	db	28
   232  0058B3  18                 	db	24
   233  0058B4  3C                 	db	60
   234  0058B5  7E                 	db	126
   235  0058B6  3C                 	db	60
   236  0058B7  18                 	db	24
   237  0058B8  1C                 	db	28
   238  0058B9  57                 	db	87
   239  0058BA  7D                 	db	125
   240  0058BB  57                 	db	87
   241  0058BC  1C                 	db	28
   242  0058BD  1C                 	db	28
   243  0058BE  5E                 	db	94
   244  0058BF  7F                 	db	127
   245  0058C0  5E                 	db	94
   246  0058C1  1C                 	db	28
   247  0058C2  00                 	db	0
   248  0058C3  18                 	db	24
   249  0058C4  3C                 	db	60
   250  0058C5  18                 	db	24
   251  0058C6  00                 	db	0
   252  0058C7  FF                 	db	255
   253  0058C8  E7                 	db	231
   254  0058C9  C3                 	db	195
   255  0058CA  E7                 	db	231
   256  0058CB  FF                 	db	255
   257  0058CC  00                 	db	0
   258  0058CD  18                 	db	24
   259  0058CE  24                 	db	36
   260  0058CF  18                 	db	24
   261  0058D0  00                 	db	0
   262  0058D1  FF                 	db	255
   263  0058D2  E7                 	db	231
   264  0058D3  DB                 	db	219
   265  0058D4  E7                 	db	231
   266  0058D5  FF                 	db	255
   267  0058D6  30                 	db	48
   268  0058D7  48                 	db	72
   269  0058D8  3A                 	db	58
   270  0058D9  06                 	db	6
   271  0058DA  0E                 	db	14
   272  0058DB  26                 	db	38
   273  0058DC  29                 	db	41
   274  0058DD  79                 	db	121
   275  0058DE  29                 	db	41
   276  0058DF  26                 	db	38
   277  0058E0  40                 	db	64
   278  0058E1  7F                 	db	127
   279  0058E2  05                 	db	5
   280  0058E3  05                 	db	5
   281  0058E4  07                 	db	7
   282  0058E5  40                 	db	64
   283  0058E6  7F                 	db	127
   284  0058E7  05                 	db	5
   285  0058E8  25                 	db	37
   286  0058E9  3F                 	db	63
   287  0058EA  5A                 	db	90
   288  0058EB  3C                 	db	60
   289  0058EC  E7                 	db	231
   290  0058ED  3C                 	db	60
   291  0058EE  5A                 	db	90
   292  0058EF  7F                 	db	127
   293  0058F0  3E                 	db	62
   294  0058F1  1C                 	db	28
   295  0058F2  1C                 	db	28
   296  0058F3  08                 	db	8
   297  0058F4  08                 	db	8
   298  0058F5  1C                 	db	28
   299  0058F6  1C                 	db	28
   300  0058F7  3E                 	db	62
   301  0058F8  7F                 	db	127
   302  0058F9  14                 	db	20
   303  0058FA  22                 	db	34
   304  0058FB  7F                 	db	127
   305  0058FC  22                 	db	34
   306  0058FD  14                 	db	20
   307  0058FE  5F                 	db	95
   308  0058FF  5F                 	db	95
   309  005900  00                 	db	0
   310  005901  5F                 	db	95
   311  005902  5F                 	db	95
   312  005903  06                 	db	6
   313  005904  09                 	db	9
   314  005905  7F                 	db	127
   315  005906  01                 	db	1
   316  005907  7F                 	db	127
   317  005908  00                 	db	0
   318  005909  66                 	db	102
   319  00590A  89                 	db	137
   320  00590B  95                 	db	149
   321  00590C  6A                 	db	106
   322  00590D  60                 	db	96
   323  00590E  60                 	db	96
   324  00590F  60                 	db	96
   325  005910  60                 	db	96
   326  005911  60                 	db	96
   327  005912  94                 	db	148
   328  005913  A2                 	db	162
   329  005914  FF                 	db	255
   330  005915  A2                 	db	162
   331  005916  94                 	db	148
   332  005917  08                 	db	8
   333  005918  04                 	db	4
   334  005919  7E                 	db	126
   335  00591A  04                 	db	4
   336  00591B  08                 	db	8
   337  00591C  10                 	db	16
   338  00591D  20                 	db	32
   339  00591E  7E                 	db	126
   340  00591F  20                 	db	32
   341  005920  10                 	db	16
   342  005921  08                 	db	8
   343  005922  08                 	db	8
   344  005923  2A                 	db	42
   345  005924  1C                 	db	28
   346  005925  08                 	db	8
   347  005926  08                 	db	8
   348  005927  1C                 	db	28
   349  005928  2A                 	db	42
   350  005929  08                 	db	8
   351  00592A  08                 	db	8
   352  00592B  1E                 	db	30
   353  00592C  10                 	db	16
   354  00592D  10                 	db	16
   355  00592E  10                 	db	16
   356  00592F  10                 	db	16
   357  005930  0C                 	db	12
   358  005931  1E                 	db	30
   359  005932  0C                 	db	12
   360  005933  1E                 	db	30
   361  005934  0C                 	db	12
   362  005935  30                 	db	48
   363  005936  38                 	db	56
   364  005937  3E                 	db	62
   365  005938  38                 	db	56
   366  005939  30                 	db	48
   367  00593A  06                 	db	6
   368  00593B  0E                 	db	14
   369  00593C  3E                 	db	62
   370  00593D  0E                 	db	14
   371  00593E  06                 	db	6
   372  00593F  00                 	db	0
   373  005940  00                 	db	0
   374  005941  00                 	db	0
   375  005942  00                 	db	0
   376  005943  00                 	db	0
   377  005944  00                 	db	0
   378  005945  00                 	db	0
   379  005946  5F                 	db	95
   380  005947  00                 	db	0
   381  005948  00                 	db	0
   382  005949  00                 	db	0
   383  00594A  07                 	db	7
   384  00594B  00                 	db	0
   385  00594C  07                 	db	7
   386  00594D  00                 	db	0
   387  00594E  14                 	db	20
   388  00594F  7F                 	db	127
   389  005950  14                 	db	20
   390  005951  7F                 	db	127
   391  005952  14                 	db	20
   392  005953  24                 	db	36
   393  005954  2A                 	db	42
   394  005955  7F                 	db	127
   395  005956  2A                 	db	42
   396  005957  12                 	db	18
   397  005958  23                 	db	35
   398  005959  13                 	db	19
   399  00595A  08                 	db	8
   400  00595B  64                 	db	100
   401  00595C  62                 	db	98
   402  00595D  36                 	db	54
   403  00595E  49                 	db	73
   404  00595F  56                 	db	86
   405  005960  20                 	db	32
   406  005961  50                 	db	80
   407  005962  00                 	db	0
   408  005963  08                 	db	8
   409  005964  07                 	db	7
   410  005965  03                 	db	3
   411  005966  00                 	db	0
   412  005967  00                 	db	0
   413  005968  1C                 	db	28
   414  005969  22                 	db	34
   415  00596A  41                 	db	65
   416  00596B  00                 	db	0
   417  00596C  00                 	db	0
   418  00596D  41                 	db	65
   419  00596E  22                 	db	34
   420  00596F  1C                 	db	28
   421  005970  00                 	db	0
   422  005971  2A                 	db	42
   423  005972  1C                 	db	28
   424  005973  7F                 	db	127
   425  005974  1C                 	db	28
   426  005975  2A                 	db	42
   427  005976  08                 	db	8
   428  005977  08                 	db	8
   429  005978  3E                 	db	62
   430  005979  08                 	db	8
   431  00597A  08                 	db	8
   432  00597B  00                 	db	0
   433  00597C  80                 	db	128
   434  00597D  70                 	db	112
   435  00597E  30                 	db	48
   436  00597F  00                 	db	0
   437  005980  08                 	db	8
   438  005981  08                 	db	8
   439  005982  08                 	db	8
   440  005983  08                 	db	8
   441  005984  08                 	db	8
   442  005985  00                 	db	0
   443  005986  00                 	db	0
   444  005987  60                 	db	96
   445  005988  60                 	db	96
   446  005989  00                 	db	0
   447  00598A  20                 	db	32
   448  00598B  10                 	db	16
   449  00598C  08                 	db	8
   450  00598D  04                 	db	4
   451  00598E  02                 	db	2
   452  00598F  3E                 	db	62
   453  005990  51                 	db	81
   454  005991  49                 	db	73
   455  005992  45                 	db	69
   456  005993  3E                 	db	62
   457  005994  00                 	db	0
   458  005995  42                 	db	66
   459  005996  7F                 	db	127
   460  005997  40                 	db	64
   461  005998  00                 	db	0
   462  005999  72                 	db	114
   463  00599A  49                 	db	73
   464  00599B  49                 	db	73
   465  00599C  49                 	db	73
   466  00599D  46                 	db	70
   467  00599E  21                 	db	33
   468  00599F  41                 	db	65
   469  0059A0  49                 	db	73
   470  0059A1  4D                 	db	77
   471  0059A2  33                 	db	51
   472  0059A3  18                 	db	24
   473  0059A4  14                 	db	20
   474  0059A5  12                 	db	18
   475  0059A6  7F                 	db	127
   476  0059A7  10                 	db	16
   477  0059A8  27                 	db	39
   478  0059A9  45                 	db	69
   479  0059AA  45                 	db	69
   480  0059AB  45                 	db	69
   481  0059AC  39                 	db	57
   482  0059AD  3C                 	db	60
   483  0059AE  4A                 	db	74
   484  0059AF  49                 	db	73
   485  0059B0  49                 	db	73
   486  0059B1  31                 	db	49
   487  0059B2  41                 	db	65
   488  0059B3  21                 	db	33
   489  0059B4  11                 	db	17
   490  0059B5  09                 	db	9
   491  0059B6  07                 	db	7
   492  0059B7  36                 	db	54
   493  0059B8  49                 	db	73
   494  0059B9  49                 	db	73
   495  0059BA  49                 	db	73
   496  0059BB  36                 	db	54
   497  0059BC  46                 	db	70
   498  0059BD  49                 	db	73
   499  0059BE  49                 	db	73
   500  0059BF  29                 	db	41
   501  0059C0  1E                 	db	30
   502  0059C1  00                 	db	0
   503  0059C2  00                 	db	0
   504  0059C3  14                 	db	20
   505  0059C4  00                 	db	0
   506  0059C5  00                 	db	0
   507  0059C6  00                 	db	0
   508  0059C7  40                 	db	64
   509  0059C8  34                 	db	52
   510  0059C9  00                 	db	0
   511  0059CA  00                 	db	0
   512  0059CB  00                 	db	0
   513  0059CC  08                 	db	8
   514  0059CD  14                 	db	20
   515  0059CE  22                 	db	34
   516  0059CF  41                 	db	65
   517  0059D0  14                 	db	20
   518  0059D1  14                 	db	20
   519  0059D2  14                 	db	20
   520  0059D3  14                 	db	20
   521  0059D4  14                 	db	20
   522  0059D5  00                 	db	0
   523  0059D6  41                 	db	65
   524  0059D7  22                 	db	34
   525  0059D8  14                 	db	20
   526  0059D9  08                 	db	8
   527  0059DA  02                 	db	2
   528  0059DB  01                 	db	1
   529  0059DC  59                 	db	89
   530  0059DD  09                 	db	9
   531  0059DE  06                 	db	6
   532  0059DF  3E                 	db	62
   533  0059E0  41                 	db	65
   534  0059E1  5D                 	db	93
   535  0059E2  59                 	db	89
   536  0059E3  4E                 	db	78
   537  0059E4  7C                 	db	124
   538  0059E5  12                 	db	18
   539  0059E6  11                 	db	17
   540  0059E7  12                 	db	18
   541  0059E8  7C                 	db	124
   542  0059E9  7F                 	db	127
   543  0059EA  49                 	db	73
   544  0059EB  49                 	db	73
   545  0059EC  49                 	db	73
   546  0059ED  36                 	db	54
   547  0059EE  3E                 	db	62
   548  0059EF  41                 	db	65
   549  0059F0  41                 	db	65
   550  0059F1  41                 	db	65
   551  0059F2  22                 	db	34
   552  0059F3  7F                 	db	127
   553  0059F4  41                 	db	65
   554  0059F5  41                 	db	65
   555  0059F6  41                 	db	65
   556  0059F7  3E                 	db	62
   557  0059F8  7F                 	db	127
   558  0059F9  49                 	db	73
   559  0059FA  49                 	db	73
   560  0059FB  49                 	db	73
   561  0059FC  41                 	db	65
   562  0059FD  7F                 	db	127
   563  0059FE  09                 	db	9
   564  0059FF  09                 	db	9
   565  005A00  09                 	db	9
   566  005A01  01                 	db	1
   567  005A02  3E                 	db	62
   568  005A03  41                 	db	65
   569  005A04  41                 	db	65
   570  005A05  51                 	db	81
   571  005A06  73                 	db	115
   572  005A07  7F                 	db	127
   573  005A08  08                 	db	8
   574  005A09  08                 	db	8
   575  005A0A  08                 	db	8
   576  005A0B  7F                 	db	127
   577  005A0C  00                 	db	0
   578  005A0D  41                 	db	65
   579  005A0E  7F                 	db	127
   580  005A0F  41                 	db	65
   581  005A10  00                 	db	0
   582  005A11  20                 	db	32
   583  005A12  40                 	db	64
   584  005A13  41                 	db	65
   585  005A14  3F                 	db	63
   586  005A15  01                 	db	1
   587  005A16  7F                 	db	127
   588  005A17  08                 	db	8
   589  005A18  14                 	db	20
   590  005A19  22                 	db	34
   591  005A1A  41                 	db	65
   592  005A1B  7F                 	db	127
   593  005A1C  40                 	db	64
   594  005A1D  40                 	db	64
   595  005A1E  40                 	db	64
   596  005A1F  40                 	db	64
   597  005A20  7F                 	db	127
   598  005A21  02                 	db	2
   599  005A22  1C                 	db	28
   600  005A23  02                 	db	2
   601  005A24  7F                 	db	127
   602  005A25  7F                 	db	127
   603  005A26  04                 	db	4
   604  005A27  08                 	db	8
   605  005A28  10                 	db	16
   606  005A29  7F                 	db	127
   607  005A2A  3E                 	db	62
   608  005A2B  41                 	db	65
   609  005A2C  41                 	db	65
   610  005A2D  41                 	db	65
   611  005A2E  3E                 	db	62
   612  005A2F  7F                 	db	127
   613  005A30  09                 	db	9
   614  005A31  09                 	db	9
   615  005A32  09                 	db	9
   616  005A33  06                 	db	6
   617  005A34  3E                 	db	62
   618  005A35  41                 	db	65
   619  005A36  51                 	db	81
   620  005A37  21                 	db	33
   621  005A38  5E                 	db	94
   622  005A39  7F                 	db	127
   623  005A3A  09                 	db	9
   624  005A3B  19                 	db	25
   625  005A3C  29                 	db	41
   626  005A3D  46                 	db	70
   627  005A3E  26                 	db	38
   628  005A3F  49                 	db	73
   629  005A40  49                 	db	73
   630  005A41  49                 	db	73
   631  005A42  32                 	db	50
   632  005A43  03                 	db	3
   633  005A44  01                 	db	1
   634  005A45  7F                 	db	127
   635  005A46  01                 	db	1
   636  005A47  03                 	db	3
   637  005A48  3F                 	db	63
   638  005A49  40                 	db	64
   639  005A4A  40                 	db	64
   640  005A4B  40                 	db	64
   641  005A4C  3F                 	db	63
   642  005A4D  1F                 	db	31
   643  005A4E  20                 	db	32
   644  005A4F  40                 	db	64
   645  005A50  20                 	db	32
   646  005A51  1F                 	db	31
   647  005A52  3F                 	db	63
   648  005A53  40                 	db	64
   649  005A54  38                 	db	56
   650  005A55  40                 	db	64
   651  005A56  3F                 	db	63
   652  005A57  63                 	db	99
   653  005A58  14                 	db	20
   654  005A59  08                 	db	8
   655  005A5A  14                 	db	20
   656  005A5B  63                 	db	99
   657  005A5C  03                 	db	3
   658  005A5D  04                 	db	4
   659  005A5E  78                 	db	120
   660  005A5F  04                 	db	4
   661  005A60  03                 	db	3
   662  005A61  61                 	db	97
   663  005A62  59                 	db	89
   664  005A63  49                 	db	73
   665  005A64  4D                 	db	77
   666  005A65  43                 	db	67
   667  005A66  00                 	db	0
   668  005A67  7F                 	db	127
   669  005A68  41                 	db	65
   670  005A69  41                 	db	65
   671  005A6A  41                 	db	65
   672  005A6B  02                 	db	2
   673  005A6C  04                 	db	4
   674  005A6D  08                 	db	8
   675  005A6E  10                 	db	16
   676  005A6F  20                 	db	32
   677  005A70  00                 	db	0
   678  005A71  41                 	db	65
   679  005A72  41                 	db	65
   680  005A73  41                 	db	65
   681  005A74  7F                 	db	127
   682  005A75  04                 	db	4
   683  005A76  02                 	db	2
   684  005A77  01                 	db	1
   685  005A78  02                 	db	2
   686  005A79  04                 	db	4
   687  005A7A  40                 	db	64
   688  005A7B  40                 	db	64
   689  005A7C  40                 	db	64
   690  005A7D  40                 	db	64
   691  005A7E  40                 	db	64
   692  005A7F  00                 	db	0
   693  005A80  03                 	db	3
   694  005A81  07                 	db	7
   695  005A82  08                 	db	8
   696  005A83  00                 	db	0
   697  005A84  20                 	db	32
   698  005A85  54                 	db	84
   699  005A86  54                 	db	84
   700  005A87  78                 	db	120
   701  005A88  40                 	db	64
   702  005A89  7F                 	db	127
   703  005A8A  28                 	db	40
   704  005A8B  44                 	db	68
   705  005A8C  44                 	db	68
   706  005A8D  38                 	db	56
   707  005A8E  38                 	db	56
   708  005A8F  44                 	db	68
   709  005A90  44                 	db	68
   710  005A91  44                 	db	68
   711  005A92  28                 	db	40
   712  005A93  38                 	db	56
   713  005A94  44                 	db	68
   714  005A95  44                 	db	68
   715  005A96  28                 	db	40
   716  005A97  7F                 	db	127
   717  005A98  38                 	db	56
   718  005A99  54                 	db	84
   719  005A9A  54                 	db	84
   720  005A9B  54                 	db	84
   721  005A9C  18                 	db	24
   722  005A9D  00                 	db	0
   723  005A9E  08                 	db	8
   724  005A9F  7E                 	db	126
   725  005AA0  09                 	db	9
   726  005AA1  02                 	db	2
   727  005AA2  18                 	db	24
   728  005AA3  A4                 	db	164
   729  005AA4  A4                 	db	164
   730  005AA5  9C                 	db	156
   731  005AA6  78                 	db	120
   732  005AA7  7F                 	db	127
   733  005AA8  08                 	db	8
   734  005AA9  04                 	db	4
   735  005AAA  04                 	db	4
   736  005AAB  78                 	db	120
   737  005AAC  00                 	db	0
   738  005AAD  44                 	db	68
   739  005AAE  7D                 	db	125
   740  005AAF  40                 	db	64
   741  005AB0  00                 	db	0
   742  005AB1  20                 	db	32
   743  005AB2  40                 	db	64
   744  005AB3  40                 	db	64
   745  005AB4  3D                 	db	61
   746  005AB5  00                 	db	0
   747  005AB6  7F                 	db	127
   748  005AB7  10                 	db	16
   749  005AB8  28                 	db	40
   750  005AB9  44                 	db	68
   751  005ABA  00                 	db	0
   752  005ABB  00                 	db	0
   753  005ABC  41                 	db	65
   754  005ABD  7F                 	db	127
   755  005ABE  40                 	db	64
   756  005ABF  00                 	db	0
   757  005AC0  7C                 	db	124
   758  005AC1  04                 	db	4
   759  005AC2  78                 	db	120
   760  005AC3  04                 	db	4
   761  005AC4  78                 	db	120
   762  005AC5  7C                 	db	124
   763  005AC6  08                 	db	8
   764  005AC7  04                 	db	4
   765  005AC8  04                 	db	4
   766  005AC9  78                 	db	120
   767  005ACA  38                 	db	56
   768  005ACB  44                 	db	68
   769  005ACC  44                 	db	68
   770  005ACD  44                 	db	68
   771  005ACE  38                 	db	56
   772  005ACF  FC                 	db	252
   773  005AD0  18                 	db	24
   774  005AD1  24                 	db	36
   775  005AD2  24                 	db	36
   776  005AD3  18                 	db	24
   777  005AD4  18                 	db	24
   778  005AD5  24                 	db	36
   779  005AD6  24                 	db	36
   780  005AD7  18                 	db	24
   781  005AD8  FC                 	db	252
   782  005AD9  7C                 	db	124
   783  005ADA  08                 	db	8
   784  005ADB  04                 	db	4
   785  005ADC  04                 	db	4
   786  005ADD  08                 	db	8
   787  005ADE  48                 	db	72
   788  005ADF  54                 	db	84
   789  005AE0  54                 	db	84
   790  005AE1  54                 	db	84
   791  005AE2  24                 	db	36
   792  005AE3  04                 	db	4
   793  005AE4  04                 	db	4
   794  005AE5  3F                 	db	63
   795  005AE6  44                 	db	68
   796  005AE7  24                 	db	36
   797  005AE8  3C                 	db	60
   798  005AE9  40                 	db	64
   799  005AEA  40                 	db	64
   800  005AEB  20                 	db	32
   801  005AEC  7C                 	db	124
   802  005AED  1C                 	db	28
   803  005AEE  20                 	db	32
   804  005AEF  40                 	db	64
   805  005AF0  20                 	db	32
   806  005AF1  1C                 	db	28
   807  005AF2  3C                 	db	60
   808  005AF3  40                 	db	64
   809  005AF4  30                 	db	48
   810  005AF5  40                 	db	64
   811  005AF6  3C                 	db	60
   812  005AF7  44                 	db	68
   813  005AF8  28                 	db	40
   814  005AF9  10                 	db	16
   815  005AFA  28                 	db	40
   816  005AFB  44                 	db	68
   817  005AFC  4C                 	db	76
   818  005AFD  90                 	db	144
   819  005AFE  90                 	db	144
   820  005AFF  90                 	db	144
   821  005B00  7C                 	db	124
   822  005B01  44                 	db	68
   823  005B02  64                 	db	100
   824  005B03  54                 	db	84
   825  005B04  4C                 	db	76
   826  005B05  44                 	db	68
   827  005B06  00                 	db	0
   828  005B07  08                 	db	8
   829  005B08  36                 	db	54
   830  005B09  41                 	db	65
   831  005B0A  00                 	db	0
   832  005B0B  00                 	db	0
   833  005B0C  00                 	db	0
   834  005B0D  77                 	db	119
   835  005B0E  00                 	db	0
   836  005B0F  00                 	db	0
   837  005B10  00                 	db	0
   838  005B11  41                 	db	65
   839  005B12  36                 	db	54
   840  005B13  08                 	db	8
   841  005B14  00                 	db	0
   842  005B15  02                 	db	2
   843  005B16  01                 	db	1
   844  005B17  02                 	db	2
   845  005B18  04                 	db	4
   846  005B19  02                 	db	2
   847  005B1A  3C                 	db	60
   848  005B1B  26                 	db	38
   849  005B1C  23                 	db	35
   850  005B1D  26                 	db	38
   851  005B1E  3C                 	db	60
   852  005B1F  1E                 	db	30
   853  005B20  A1                 	db	161
   854  005B21  A1                 	db	161
   855  005B22  61                 	db	97
   856  005B23  12                 	db	18
   857  005B24  3A                 	db	58
   858  005B25  40                 	db	64
   859  005B26  40                 	db	64
   860  005B27  20                 	db	32
   861  005B28  7A                 	db	122
   862  005B29  38                 	db	56
   863  005B2A  54                 	db	84
   864  005B2B  54                 	db	84
   865  005B2C  55                 	db	85
   866  005B2D  59                 	db	89
   867  005B2E  21                 	db	33
   868  005B2F  55                 	db	85
   869  005B30  55                 	db	85
   870  005B31  79                 	db	121
   871  005B32  41                 	db	65
   872  005B33  22                 	db	34
   873  005B34  54                 	db	84
   874  005B35  54                 	db	84
   875  005B36  78                 	db	120
   876  005B37  42                 	db	66
   877  005B38  21                 	db	33
   878  005B39  55                 	db	85
   879  005B3A  54                 	db	84
   880  005B3B  78                 	db	120
   881  005B3C  40                 	db	64
   882  005B3D  20                 	db	32
   883  005B3E  54                 	db	84
   884  005B3F  55                 	db	85
   885  005B40  79                 	db	121
   886  005B41  40                 	db	64
   887  005B42  0C                 	db	12
   888  005B43  1E                 	db	30
   889  005B44  52                 	db	82
   890  005B45  72                 	db	114
   891  005B46  12                 	db	18
   892  005B47  39                 	db	57
   893  005B48  55                 	db	85
   894  005B49  55                 	db	85
   895  005B4A  55                 	db	85
   896  005B4B  59                 	db	89
   897  005B4C  39                 	db	57
   898  005B4D  54                 	db	84
   899  005B4E  54                 	db	84
   900  005B4F  54                 	db	84
   901  005B50  59                 	db	89
   902  005B51  39                 	db	57
   903  005B52  55                 	db	85
   904  005B53  54                 	db	84
   905  005B54  54                 	db	84
   906  005B55  58                 	db	88
   907  005B56  00                 	db	0
   908  005B57  00                 	db	0
   909  005B58  45                 	db	69
   910  005B59  7C                 	db	124
   911  005B5A  41                 	db	65
   912  005B5B  00                 	db	0
   913  005B5C  02                 	db	2
   914  005B5D  45                 	db	69
   915  005B5E  7D                 	db	125
   916  005B5F  42                 	db	66
   917  005B60  00                 	db	0
   918  005B61  01                 	db	1
   919  005B62  45                 	db	69
   920  005B63  7C                 	db	124
   921  005B64  40                 	db	64
   922  005B65  7D                 	db	125
   923  005B66  12                 	db	18
   924  005B67  11                 	db	17
   925  005B68  12                 	db	18
   926  005B69  7D                 	db	125
   927  005B6A  F0                 	db	240
   928  005B6B  28                 	db	40
   929  005B6C  25                 	db	37
   930  005B6D  28                 	db	40
   931  005B6E  F0                 	db	240
   932  005B6F  7C                 	db	124
   933  005B70  54                 	db	84
   934  005B71  55                 	db	85
   935  005B72  45                 	db	69
   936  005B73  00                 	db	0
   937  005B74  20                 	db	32
   938  005B75  54                 	db	84
   939  005B76  54                 	db	84
   940  005B77  7C                 	db	124
   941  005B78  54                 	db	84
   942  005B79  7C                 	db	124
   943  005B7A  0A                 	db	10
   944  005B7B  09                 	db	9
   945  005B7C  7F                 	db	127
   946  005B7D  49                 	db	73
   947  005B7E  32                 	db	50
   948  005B7F  49                 	db	73
   949  005B80  49                 	db	73
   950  005B81  49                 	db	73
   951  005B82  32                 	db	50
   952  005B83  3A                 	db	58
   953  005B84  44                 	db	68
   954  005B85  44                 	db	68
   955  005B86  44                 	db	68
   956  005B87  3A                 	db	58
   957  005B88  32                 	db	50
   958  005B89  4A                 	db	74
   959  005B8A  48                 	db	72
   960  005B8B  48                 	db	72
   961  005B8C  30                 	db	48
   962  005B8D  3A                 	db	58
   963  005B8E  41                 	db	65
   964  005B8F  41                 	db	65
   965  005B90  21                 	db	33
   966  005B91  7A                 	db	122
   967  005B92  3A                 	db	58
   968  005B93  42                 	db	66
   969  005B94  40                 	db	64
   970  005B95  20                 	db	32
   971  005B96  78                 	db	120
   972  005B97  00                 	db	0
   973  005B98  9D                 	db	157
   974  005B99  A0                 	db	160
   975  005B9A  A0                 	db	160
   976  005B9B  7D                 	db	125
   977  005B9C  3D                 	db	61
   978  005B9D  42                 	db	66
   979  005B9E  42                 	db	66
   980  005B9F  42                 	db	66
   981  005BA0  3D                 	db	61
   982  005BA1  3D                 	db	61
   983  005BA2  40                 	db	64
   984  005BA3  40                 	db	64
   985  005BA4  40                 	db	64
   986  005BA5  3D                 	db	61
   987  005BA6  3C                 	db	60
   988  005BA7  24                 	db	36
   989  005BA8  FF                 	db	255
   990  005BA9  24                 	db	36
   991  005BAA  24                 	db	36
   992  005BAB  48                 	db	72
   993  005BAC  7E                 	db	126
   994  005BAD  49                 	db	73
   995  005BAE  43                 	db	67
   996  005BAF  66                 	db	102
   997  005BB0  2B                 	db	43
   998  005BB1  2F                 	db	47
   999  005BB2  FC                 	db	252
  1000  005BB3  2F                 	db	47
  1001  005BB4  2B                 	db	43
  1002  005BB5  FF                 	db	255
  1003  005BB6  09                 	db	9
  1004  005BB7  29                 	db	41
  1005  005BB8  F6                 	db	246
  1006  005BB9  20                 	db	32
  1007  005BBA  C0                 	db	192
  1008  005BBB  88                 	db	136
  1009  005BBC  7E                 	db	126
  1010  005BBD  09                 	db	9
  1011  005BBE  03                 	db	3
  1012  005BBF  20                 	db	32
  1013  005BC0  54                 	db	84
  1014  005BC1  54                 	db	84
  1015  005BC2  79                 	db	121
  1016  005BC3  41                 	db	65
  1017  005BC4  00                 	db	0
  1018  005BC5  00                 	db	0
  1019  005BC6  44                 	db	68
  1020  005BC7  7D                 	db	125
  1021  005BC8  41                 	db	65
  1022  005BC9  30                 	db	48
  1023  005BCA  48                 	db	72
  1024  005BCB  48                 	db	72
  1025  005BCC  4A                 	db	74
  1026  005BCD  32                 	db	50
  1027  005BCE  38                 	db	56
  1028  005BCF  40                 	db	64
  1029  005BD0  40                 	db	64
  1030  005BD1  22                 	db	34
  1031  005BD2  7A                 	db	122
  1032  005BD3  00                 	db	0
  1033  005BD4  7A                 	db	122
  1034  005BD5  0A                 	db	10
  1035  005BD6  0A                 	db	10
  1036  005BD7  72                 	db	114
  1037  005BD8  7D                 	db	125
  1038  005BD9  0D                 	db	13
  1039  005BDA  19                 	db	25
  1040  005BDB  31                 	db	49
  1041  005BDC  7D                 	db	125
  1042  005BDD  26                 	db	38
  1043  005BDE  29                 	db	41
  1044  005BDF  29                 	db	41
  1045  005BE0  2F                 	db	47
  1046  005BE1  28                 	db	40
  1047  005BE2  26                 	db	38
  1048  005BE3  29                 	db	41
  1049  005BE4  29                 	db	41
  1050  005BE5  29                 	db	41
  1051  005BE6  26                 	db	38
  1052  005BE7  30                 	db	48
  1053  005BE8  48                 	db	72
  1054  005BE9  4D                 	db	77
  1055  005BEA  40                 	db	64
  1056  005BEB  20                 	db	32
  1057  005BEC  38                 	db	56
  1058  005BED  08                 	db	8
  1059  005BEE  08                 	db	8
  1060  005BEF  08                 	db	8
  1061  005BF0  08                 	db	8
  1062  005BF1  08                 	db	8
  1063  005BF2  08                 	db	8
  1064  005BF3  08                 	db	8
  1065  005BF4  08                 	db	8
  1066  005BF5  38                 	db	56
  1067  005BF6  2F                 	db	47
  1068  005BF7  10                 	db	16
  1069  005BF8  C8                 	db	200
  1070  005BF9  AC                 	db	172
  1071  005BFA  BA                 	db	186
  1072  005BFB  2F                 	db	47
  1073  005BFC  10                 	db	16
  1074  005BFD  28                 	db	40
  1075  005BFE  34                 	db	52
  1076  005BFF  FA                 	db	250
  1077  005C00  00                 	db	0
  1078  005C01  00                 	db	0
  1079  005C02  7B                 	db	123
  1080  005C03  00                 	db	0
  1081  005C04  00                 	db	0
  1082  005C05  08                 	db	8
  1083  005C06  14                 	db	20
  1084  005C07  2A                 	db	42
  1085  005C08  14                 	db	20
  1086  005C09  22                 	db	34
  1087  005C0A  22                 	db	34
  1088  005C0B  14                 	db	20
  1089  005C0C  2A                 	db	42
  1090  005C0D  14                 	db	20
  1091  005C0E  08                 	db	8
  1092  005C0F  55                 	db	85
  1093  005C10  00                 	db	0
  1094  005C11  55                 	db	85
  1095  005C12  00                 	db	0
  1096  005C13  55                 	db	85
  1097  005C14  AA                 	db	170
  1098  005C15  55                 	db	85
  1099  005C16  AA                 	db	170
  1100  005C17  55                 	db	85
  1101  005C18  AA                 	db	170
  1102  005C19  FF                 	db	255
  1103  005C1A  55                 	db	85
  1104  005C1B  FF                 	db	255
  1105  005C1C  55                 	db	85
  1106  005C1D  FF                 	db	255
  1107  005C1E  00                 	db	0
  1108  005C1F  00                 	db	0
  1109  005C20  00                 	db	0
  1110  005C21  FF                 	db	255
  1111  005C22  00                 	db	0
  1112  005C23  10                 	db	16
  1113  005C24  10                 	db	16
  1114  005C25  10                 	db	16
  1115  005C26  FF                 	db	255
  1116  005C27  00                 	db	0
  1117  005C28  14                 	db	20
  1118  005C29  14                 	db	20
  1119  005C2A  14                 	db	20
  1120  005C2B  FF                 	db	255
  1121  005C2C  00                 	db	0
  1122  005C2D  10                 	db	16
  1123  005C2E  10                 	db	16
  1124  005C2F  FF                 	db	255
  1125  005C30  00                 	db	0
  1126  005C31  FF                 	db	255
  1127  005C32  10                 	db	16
  1128  005C33  10                 	db	16
  1129  005C34  F0                 	db	240
  1130  005C35  10                 	db	16
  1131  005C36  F0                 	db	240
  1132  005C37  14                 	db	20
  1133  005C38  14                 	db	20
  1134  005C39  14                 	db	20
  1135  005C3A  FC                 	db	252
  1136  005C3B  00                 	db	0
  1137  005C3C  14                 	db	20
  1138  005C3D  14                 	db	20
  1139  005C3E  F7                 	db	247
  1140  005C3F  00                 	db	0
  1141  005C40  FF                 	db	255
  1142  005C41  00                 	db	0
  1143  005C42  00                 	db	0
  1144  005C43  FF                 	db	255
  1145  005C44  00                 	db	0
  1146  005C45  FF                 	db	255
  1147  005C46  14                 	db	20
  1148  005C47  14                 	db	20
  1149  005C48  F4                 	db	244
  1150  005C49  04                 	db	4
  1151  005C4A  FC                 	db	252
  1152  005C4B  14                 	db	20
  1153  005C4C  14                 	db	20
  1154  005C4D  17                 	db	23
  1155  005C4E  10                 	db	16
  1156  005C4F  1F                 	db	31
  1157  005C50  10                 	db	16
  1158  005C51  10                 	db	16
  1159  005C52  1F                 	db	31
  1160  005C53  10                 	db	16
  1161  005C54  1F                 	db	31
  1162  005C55  14                 	db	20
  1163  005C56  14                 	db	20
  1164  005C57  14                 	db	20
  1165  005C58  1F                 	db	31
  1166  005C59  00                 	db	0
  1167  005C5A  10                 	db	16
  1168  005C5B  10                 	db	16
  1169  005C5C  10                 	db	16
  1170  005C5D  F0                 	db	240
  1171  005C5E  00                 	db	0
  1172  005C5F  00                 	db	0
  1173  005C60  00                 	db	0
  1174  005C61  00                 	db	0
  1175  005C62  1F                 	db	31
  1176  005C63  10                 	db	16
  1177  005C64  10                 	db	16
  1178  005C65  10                 	db	16
  1179  005C66  10                 	db	16
  1180  005C67  1F                 	db	31
  1181  005C68  10                 	db	16
  1182  005C69  10                 	db	16
  1183  005C6A  10                 	db	16
  1184  005C6B  10                 	db	16
  1185  005C6C  F0                 	db	240
  1186  005C6D  10                 	db	16
  1187  005C6E  00                 	db	0
  1188  005C6F  00                 	db	0
  1189  005C70  00                 	db	0
  1190  005C71  FF                 	db	255
  1191  005C72  10                 	db	16
  1192  005C73  10                 	db	16
  1193  005C74  10                 	db	16
  1194  005C75  10                 	db	16
  1195  005C76  10                 	db	16
  1196  005C77  10                 	db	16
  1197  005C78  10                 	db	16
  1198  005C79  10                 	db	16
  1199  005C7A  10                 	db	16
  1200  005C7B  FF                 	db	255
  1201  005C7C  10                 	db	16
  1202  005C7D  00                 	db	0
  1203  005C7E  00                 	db	0
  1204  005C7F  00                 	db	0
  1205  005C80  FF                 	db	255
  1206  005C81  14                 	db	20
  1207  005C82  00                 	db	0
  1208  005C83  00                 	db	0
  1209  005C84  FF                 	db	255
  1210  005C85  00                 	db	0
  1211  005C86  FF                 	db	255
  1212  005C87  00                 	db	0
  1213  005C88  00                 	db	0
  1214  005C89  1F                 	db	31
  1215  005C8A  10                 	db	16
  1216  005C8B  17                 	db	23
  1217  005C8C  00                 	db	0
  1218  005C8D  00                 	db	0
  1219  005C8E  FC                 	db	252
  1220  005C8F  04                 	db	4
  1221  005C90  F4                 	db	244
  1222  005C91  14                 	db	20
  1223  005C92  14                 	db	20
  1224  005C93  17                 	db	23
  1225  005C94  10                 	db	16
  1226  005C95  17                 	db	23
  1227  005C96  14                 	db	20
  1228  005C97  14                 	db	20
  1229  005C98  F4                 	db	244
  1230  005C99  04                 	db	4
  1231  005C9A  F4                 	db	244
  1232  005C9B  00                 	db	0
  1233  005C9C  00                 	db	0
  1234  005C9D  FF                 	db	255
  1235  005C9E  00                 	db	0
  1236  005C9F  F7                 	db	247
  1237  005CA0  14                 	db	20
  1238  005CA1  14                 	db	20
  1239  005CA2  14                 	db	20
  1240  005CA3  14                 	db	20
  1241  005CA4  14                 	db	20
  1242  005CA5  14                 	db	20
  1243  005CA6  14                 	db	20
  1244  005CA7  F7                 	db	247
  1245  005CA8  00                 	db	0
  1246  005CA9  F7                 	db	247
  1247  005CAA  14                 	db	20
  1248  005CAB  14                 	db	20
  1249  005CAC  14                 	db	20
  1250  005CAD  17                 	db	23
  1251  005CAE  14                 	db	20
  1252  005CAF  10                 	db	16
  1253  005CB0  10                 	db	16
  1254  005CB1  1F                 	db	31
  1255  005CB2  10                 	db	16
  1256  005CB3  1F                 	db	31
  1257  005CB4  14                 	db	20
  1258  005CB5  14                 	db	20
  1259  005CB6  14                 	db	20
  1260  005CB7  F4                 	db	244
  1261  005CB8  14                 	db	20
  1262  005CB9  10                 	db	16
  1263  005CBA  10                 	db	16
  1264  005CBB  F0                 	db	240
  1265  005CBC  10                 	db	16
  1266  005CBD  F0                 	db	240
  1267  005CBE  00                 	db	0
  1268  005CBF  00                 	db	0
  1269  005CC0  1F                 	db	31
  1270  005CC1  10                 	db	16
  1271  005CC2  1F                 	db	31
  1272  005CC3  00                 	db	0
  1273  005CC4  00                 	db	0
  1274  005CC5  00                 	db	0
  1275  005CC6  1F                 	db	31
  1276  005CC7  14                 	db	20
  1277  005CC8  00                 	db	0
  1278  005CC9  00                 	db	0
  1279  005CCA  00                 	db	0
  1280  005CCB  FC                 	db	252
  1281  005CCC  14                 	db	20
  1282  005CCD  00                 	db	0
  1283  005CCE  00                 	db	0
  1284  005CCF  F0                 	db	240
  1285  005CD0  10                 	db	16
  1286  005CD1  F0                 	db	240
  1287  005CD2  10                 	db	16
  1288  005CD3  10                 	db	16
  1289  005CD4  FF                 	db	255
  1290  005CD5  10                 	db	16
  1291  005CD6  FF                 	db	255
  1292  005CD7  14                 	db	20
  1293  005CD8  14                 	db	20
  1294  005CD9  14                 	db	20
  1295  005CDA  FF                 	db	255
  1296  005CDB  14                 	db	20
  1297  005CDC  10                 	db	16
  1298  005CDD  10                 	db	16
  1299  005CDE  10                 	db	16
  1300  005CDF  1F                 	db	31
  1301  005CE0  00                 	db	0
  1302  005CE1  00                 	db	0
  1303  005CE2  00                 	db	0
  1304  005CE3  00                 	db	0
  1305  005CE4  F0                 	db	240
  1306  005CE5  10                 	db	16
  1307  005CE6  FF                 	db	255
  1308  005CE7  FF                 	db	255
  1309  005CE8  FF                 	db	255
  1310  005CE9  FF                 	db	255
  1311  005CEA  FF                 	db	255
  1312  005CEB  F0                 	db	240
  1313  005CEC  F0                 	db	240
  1314  005CED  F0                 	db	240
  1315  005CEE  F0                 	db	240
  1316  005CEF  F0                 	db	240
  1317  005CF0  FF                 	db	255
  1318  005CF1  FF                 	db	255
  1319  005CF2  FF                 	db	255
  1320  005CF3  00                 	db	0
  1321  005CF4  00                 	db	0
  1322  005CF5  00                 	db	0
  1323  005CF6  00                 	db	0
  1324  005CF7  00                 	db	0
  1325  005CF8  FF                 	db	255
  1326  005CF9  FF                 	db	255
  1327  005CFA  0F                 	db	15
  1328  005CFB  0F                 	db	15
  1329  005CFC  0F                 	db	15
  1330  005CFD  0F                 	db	15
  1331  005CFE  0F                 	db	15
  1332  005CFF  38                 	db	56
  1333  005D00  44                 	db	68
  1334  005D01  44                 	db	68
  1335  005D02  38                 	db	56
  1336  005D03  44                 	db	68
  1337  005D04  FC                 	db	252
  1338  005D05  4A                 	db	74
  1339  005D06  4A                 	db	74
  1340  005D07  4A                 	db	74
  1341  005D08  34                 	db	52
  1342  005D09  7E                 	db	126
  1343  005D0A  02                 	db	2
  1344  005D0B  02                 	db	2
  1345  005D0C  06                 	db	6
  1346  005D0D  06                 	db	6
  1347  005D0E  02                 	db	2
  1348  005D0F  7E                 	db	126
  1349  005D10  02                 	db	2
  1350  005D11  7E                 	db	126
  1351  005D12  02                 	db	2
  1352  005D13  63                 	db	99
  1353  005D14  55                 	db	85
  1354  005D15  49                 	db	73
  1355  005D16  41                 	db	65
  1356  005D17  63                 	db	99
  1357  005D18  38                 	db	56
  1358  005D19  44                 	db	68
  1359  005D1A  44                 	db	68
  1360  005D1B  3C                 	db	60
  1361  005D1C  04                 	db	4
  1362  005D1D  40                 	db	64
  1363  005D1E  7E                 	db	126
  1364  005D1F  20                 	db	32
  1365  005D20  1E                 	db	30
  1366  005D21  20                 	db	32
  1367  005D22  06                 	db	6
  1368  005D23  02                 	db	2
  1369  005D24  7E                 	db	126
  1370  005D25  02                 	db	2
  1371  005D26  02                 	db	2
  1372  005D27  99                 	db	153
  1373  005D28  A5                 	db	165
  1374  005D29  E7                 	db	231
  1375  005D2A  A5                 	db	165
  1376  005D2B  99                 	db	153
  1377  005D2C  1C                 	db	28
  1378  005D2D  2A                 	db	42
  1379  005D2E  49                 	db	73
  1380  005D2F  2A                 	db	42
  1381  005D30  1C                 	db	28
  1382  005D31  4C                 	db	76
  1383  005D32  72                 	db	114
  1384  005D33  01                 	db	1
  1385  005D34  72                 	db	114
  1386  005D35  4C                 	db	76
  1387  005D36  30                 	db	48
  1388  005D37  4A                 	db	74
  1389  005D38  4D                 	db	77
  1390  005D39  4D                 	db	77
  1391  005D3A  30                 	db	48
  1392  005D3B  30                 	db	48
  1393  005D3C  48                 	db	72
  1394  005D3D  78                 	db	120
  1395  005D3E  48                 	db	72
  1396  005D3F  30                 	db	48
  1397  005D40  BC                 	db	188
  1398  005D41  62                 	db	98
  1399  005D42  5A                 	db	90
  1400  005D43  46                 	db	70
  1401  005D44  3D                 	db	61
  1402  005D45  3E                 	db	62
  1403  005D46  49                 	db	73
  1404  005D47  49                 	db	73
  1405  005D48  49                 	db	73
  1406  005D49  00                 	db	0
  1407  005D4A  7E                 	db	126
  1408  005D4B  01                 	db	1
  1409  005D4C  01                 	db	1
  1410  005D4D  01                 	db	1
  1411  005D4E  7E                 	db	126
  1412  005D4F  2A                 	db	42
  1413  005D50  2A                 	db	42
  1414  005D51  2A                 	db	42
  1415  005D52  2A                 	db	42
  1416  005D53  2A                 	db	42
  1417  005D54  44                 	db	68
  1418  005D55  44                 	db	68
  1419  005D56  5F                 	db	95
  1420  005D57  44                 	db	68
  1421  005D58  44                 	db	68
  1422  005D59  40                 	db	64
  1423  005D5A  51                 	db	81
  1424  005D5B  4A                 	db	74
  1425  005D5C  44                 	db	68
  1426  005D5D  40                 	db	64
  1427  005D5E  40                 	db	64
  1428  005D5F  44                 	db	68
  1429  005D60  4A                 	db	74
  1430  005D61  51                 	db	81
  1431  005D62  40                 	db	64
  1432  005D63  00                 	db	0
  1433  005D64  00                 	db	0
  1434  005D65  FF                 	db	255
  1435  005D66  01                 	db	1
  1436  005D67  03                 	db	3
  1437  005D68  E0                 	db	224
  1438  005D69  80                 	db	128
  1439  005D6A  FF                 	db	255
  1440  005D6B  00                 	db	0
  1441  005D6C  00                 	db	0
  1442  005D6D  08                 	db	8
  1443  005D6E  08                 	db	8
  1444  005D6F  6B                 	db	107
  1445  005D70  6B                 	db	107
  1446  005D71  08                 	db	8
  1447  005D72  36                 	db	54
  1448  005D73  12                 	db	18
  1449  005D74  36                 	db	54
  1450  005D75  24                 	db	36
  1451  005D76  36                 	db	54
  1452  005D77  06                 	db	6
  1453  005D78  0F                 	db	15
  1454  005D79  09                 	db	9
  1455  005D7A  0F                 	db	15
  1456  005D7B  06                 	db	6
  1457  005D7C  00                 	db	0
  1458  005D7D  00                 	db	0
  1459  005D7E  18                 	db	24
  1460  005D7F  18                 	db	24
  1461  005D80  00                 	db	0
  1462  005D81  00                 	db	0
  1463  005D82  00                 	db	0
  1464  005D83  10                 	db	16
  1465  005D84  10                 	db	16
  1466  005D85  00                 	db	0
  1467  005D86  30                 	db	48
  1468  005D87  40                 	db	64
  1469  005D88  FF                 	db	255
  1470  005D89  01                 	db	1
  1471  005D8A  01                 	db	1
  1472  005D8B  00                 	db	0
  1473  005D8C  1F                 	db	31
  1474  005D8D  01                 	db	1
  1475  005D8E  01                 	db	1
  1476  005D8F  1E                 	db	30
  1477  005D90  00                 	db	0
  1478  005D91  19                 	db	25
  1479  005D92  1D                 	db	29
  1480  005D93  17                 	db	23
  1481  005D94  12                 	db	18
  1482  005D95  00                 	db	0
  1483  005D96  3C                 	db	60
  1484  005D97  3C                 	db	60
  1485  005D98  3C                 	db	60
  1486  005D99  3C                 	db	60
  1487  005D9A  00                 	db	0
  1488  005D9B  00                 	db	0
  1489  005D9C  00                 	db	0
  1490  005D9D  00                 	db	0
  1491  005D9E  00                 	db	0
  1492  005D9F                     __end_of_TFT_Font:
  1493                           	opt callstack 0
  1494  005D9F                     _TFT_Init_Sequence:
  1495                           	opt callstack 0
  1496  005D9F  0702               	dw	1794
  1497  005DA1  3008               	dw	12296
  1498  005DA3  0705               	dw	1797
  1499  005DA5  0036               	dw	54
  1500  005DA7  070B               	dw	1803
  1501  005DA9  1213               	dw	4627
  1502  005DAB  0001               	dw	1
  1503  005DAD  0100               	dw	256
  1504  005DAF  0002               	dw	2
  1505  005DB1  0100               	dw	256
  1506  005DB3  0003               	dw	3
  1507  005DB5  1030               	dw	4144
  1508  005DB7  0008               	dw	8
  1509  005DB9  0202               	dw	514
  1510  005DBB  0009               	dw	9
  1511  005DBD  0000               	dw	0
  1512  005DBF  000C               	dw	12
  1513  005DC1  0000               	dw	0
  1514  005DC3  000F               	dw	15
  1515  005DC5  0000               	dw	0
  1516  005DC7  0100               	dw	256
  1517  005DC9  0000               	dw	0
  1518  005DCB  0102               	dw	258
  1519  005DCD  0000               	dw	0
  1520  005DCF  0103               	dw	259
  1521  005DD1  0000               	dw	0
  1522  005DD3  FFFF               	dw	65535
  1523  005DD5  0001               	dw	1
  1524  005DD7  0100               	dw	256
  1525  005DD9  1190               	dw	4496
  1526  005DDB  0101               	dw	257
  1527  005DDD  0227               	dw	551
  1528  005DDF  FFFF               	dw	65535
  1529  005DE1  0001               	dw	1
  1530  005DE3  0102               	dw	258
  1531  005DE5  01BD               	dw	445
  1532  005DE7  FFFF               	dw	65535
  1533  005DE9  0001               	dw	1
  1534  005DEB  0103               	dw	259
  1535  005DED  2D00               	dw	11520
  1536  005DEF  0281               	dw	641
  1537  005DF1  000E               	dw	14
  1538  005DF3  FFFF               	dw	65535
  1539  005DF5  0001               	dw	1
  1540  005DF7  0200               	dw	512
  1541  005DF9  0000               	dw	0
  1542  005DFB  0201               	dw	513
  1543  005DFD  0000               	dw	0
  1544  005DFF  0300               	dw	768
  1545  005E01  0000               	dw	0
  1546  005E03  0301               	dw	769
  1547  005E05  0707               	dw	1799
  1548  005E07  0302               	dw	770
  1549  005E09  0606               	dw	1542
  1550  005E0B  0305               	dw	773
  1551  005E0D  0000               	dw	0
  1552  005E0F  0306               	dw	774
  1553  005E11  0D00               	dw	3328
  1554  005E13  0307               	dw	775
  1555  005E15  0706               	dw	1798
  1556  005E17  0308               	dw	776
  1557  005E19  0005               	dw	5
  1558  005E1B  0309               	dw	777
  1559  005E1D  0007               	dw	7
  1560  005E1F  030C               	dw	780
  1561  005E21  0000               	dw	0
  1562  005E23  030D               	dw	781
  1563  005E25  000A               	dw	10
  1564  005E27  0210               	dw	528
  1565  005E29  0000               	dw	0
  1566  005E2B  0211               	dw	529
  1567  005E2D  00EF               	dw	239
  1568  005E2F  0212               	dw	530
  1569  005E31  0000               	dw	0
  1570  005E33  0213               	dw	531
  1571  005E35  018F               	dw	399
  1572  005E37  0400               	dw	1024
  1573  005E39  3100               	dw	12544
  1574  005E3B  0401               	dw	1025
  1575  005E3D  0001               	dw	1
  1576  005E3F  0404               	dw	1028
  1577  005E41  0000               	dw	0
  1578  005E43  0500               	dw	1280
  1579  005E45  0000               	dw	0
  1580  005E47  0501               	dw	1281
  1581  005E49  0000               	dw	0
  1582  005E4B  0502               	dw	1282
  1583  005E4D  0000               	dw	0
  1584  005E4F  0503               	dw	1283
  1585  005E51  0000               	dw	0
  1586  005E53  0504               	dw	1284
  1587  005E55  0000               	dw	0
  1588  005E57  0505               	dw	1285
  1589  005E59  0000               	dw	0
  1590  005E5B  0010               	dw	16
  1591  005E5D  0010               	dw	16
  1592  005E5F  0011               	dw	17
  1593  005E61  0600               	dw	1536
  1594  005E63  0020               	dw	32
  1595  005E65  0002               	dw	2
  1596  005E67  0007               	dw	7
  1597  005E69  0173               	dw	371
  1598  005E6B                     __end_of_TFT_Init_Sequence:
  1599                           	opt callstack 0
  1600  005E6B                     _dpowers:
  1601                           	opt callstack 0
  1602  005E6B  0001               	dw	1
  1603  005E6D  0000               	dw	0
  1604  005E6F  000A               	dw	10
  1605  005E71  0000               	dw	0
  1606  005E73  0064               	dw	100
  1607  005E75  0000               	dw	0
  1608  005E77  03E8               	dw	1000
  1609  005E79  0000               	dw	0
  1610  005E7B  2710               	dw	10000
  1611  005E7D  0000               	dw	0
  1612  005E7F  86A0               	dw	34464
  1613  005E81  0001               	dw	1
  1614  005E83  4240               	dw	16960
  1615  005E85  000F               	dw	15
  1616  005E87  9680               	dw	38528
  1617  005E89  0098               	dw	152
  1618  005E8B  E100               	dw	57600
  1619  005E8D  05F5               	dw	1525
  1620  005E8F  CA00               	dw	51712
  1621  005E91  3B9A               	dw	15258
  1622  005E93                     __end_of_dpowers:
  1623                           	opt callstack 0
  1624  005E93                     _A6_SPEEDS:
  1625                           	opt callstack 0
  1626  005E93  2580               	dw	9600
  1627  005E95  0000               	dw	0
  1628  005E97  E100               	dw	57600
  1629  005E99  0000               	dw	0
  1630  005E9B  C200               	dw	49664
  1631  005E9D  0001               	dw	1
  1632  005E9F                     __end_of_A6_SPEEDS:
  1633                           	opt callstack 0
  1634  005E9F                     _ECG_ICON_HEART:
  1635                           	opt callstack 0
  1636  005E9F  14                 	db	20
  1637  005EA0  14                 	db	20
  1638  005EA1  00                 	db	0
  1639  005EA2  00                 	db	0
  1640  005EA3  00                 	db	0
  1641  005EA4  00                 	db	0
  1642  005EA5  00                 	db	0
  1643  005EA6  00                 	db	0
  1644  005EA7  F8                 	db	248
  1645  005EA8  F0                 	db	240
  1646  005EA9  01                 	db	1
  1647  005EAA  FC                 	db	252
  1648  005EAB  F9                 	db	249
  1649  005EAC  03                 	db	3
  1650  005EAD  FC                 	db	252
  1651  005EAE  FF                 	db	255
  1652  005EAF  03                 	db	3
  1653  005EB0  FE                 	db	254
  1654  005EB1  FF                 	db	255
  1655  005EB2  07                 	db	7
  1656  005EB3  FE                 	db	254
  1657  005EB4  FF                 	db	255
  1658  005EB5  07                 	db	7
  1659  005EB6  FE                 	db	254
  1660  005EB7  FF                 	db	255
  1661  005EB8  07                 	db	7
  1662  005EB9  FE                 	db	254
  1663  005EBA  FF                 	db	255
  1664  005EBB  07                 	db	7
  1665  005EBC  FC                 	db	252
  1666  005EBD  FF                 	db	255
  1667  005EBE  03                 	db	3
  1668  005EBF  FC                 	db	252
  1669  005EC0  FF                 	db	255
  1670  005EC1  03                 	db	3
  1671  005EC2  F8                 	db	248
  1672  005EC3  FF                 	db	255
  1673  005EC4  01                 	db	1
  1674  005EC5  F0                 	db	240
  1675  005EC6  FF                 	db	255
  1676  005EC7  00                 	db	0
  1677  005EC8  E0                 	db	224
  1678  005EC9  7F                 	db	127
  1679  005ECA  00                 	db	0
  1680  005ECB  C0                 	db	192
  1681  005ECC  3F                 	db	63
  1682  005ECD  00                 	db	0
  1683  005ECE  80                 	db	128
  1684  005ECF  1F                 	db	31
  1685  005ED0  00                 	db	0
  1686  005ED1  00                 	db	0
  1687  005ED2  0F                 	db	15
  1688  005ED3  00                 	db	0
  1689  005ED4  00                 	db	0
  1690  005ED5  06                 	db	6
  1691  005ED6  00                 	db	0
  1692  005ED7  00                 	db	0
  1693  005ED8  00                 	db	0
  1694  005ED9  00                 	db	0
  1695  005EDA  00                 	db	0
  1696  005EDB  00                 	db	0
  1697  005EDC  00                 	db	0
  1698  005EDD                     __end_of_ECG_ICON_HEART:
  1699                           	opt callstack 0
  1700  0000                     _RCREG	set	4014
  1701  0000                     _TXREG	set	4013
  1702  0000                     _SPBRG	set	4015
  1703  0000                     _SPBRGH	set	4016
  1704  0000                     _BAUDCONbits	set	4024
  1705  0000                     _RCSTAbits	set	4011
  1706  0000                     _TXSTAbits	set	4012
  1707  0000                     _ADRESL	set	4035
  1708  0000                     _ADRESH	set	4036
  1709  0000                     _PORTAbits	set	3968
  1710  0000                     _PORTB	set	3969
  1711  0000                     _PORTCbits	set	3970
  1712  0000                     _TMR3L	set	4018
  1713  0000                     _TMR3H	set	4019
  1714  0000                     _T3CONbits	set	4017
  1715  0000                     _ADCON2bits	set	4032
  1716  0000                     _ADCON1bits	set	4033
  1717  0000                     _ADCON0bits	set	4034
  1718  0000                     _LATC	set	3979
  1719  0000                     _TRISC	set	3988
  1720  0000                     _LATB	set	3978
  1721  0000                     _TRISB	set	3987
  1722  0000                     _LATA	set	3977
  1723  0000                     _TRISA	set	3986
  1724  0000                     _UCFGbits	set	3951
  1725  0000                     _UCONbits	set	3949
  1726  0000                     _OSCTUNEbits	set	3995
  1727  0000                     _OSCCONbits	set	4051
  1728  0000                     _CREN	set	32092
  1729  0000                     _OERR	set	32089
  1730  0000                     _TXIF	set	31988
  1731  0000                     _GO_nDONE	set	32273
  1732  0000                     _RCIF	set	31989
  1733  0000                     _RCIE	set	31981
  1734  0000                     _TMR3IF	set	32009
  1735  0000                     _GIE	set	32663
  1736  0000                     _PEIE	set	32662
  1737  0000                     _TMR3IE	set	32001
  1738  0000                     _RBPU	set	32655
  1739  005EDD                     STR_16:
  1740                           
  1741                           ; BSR set to: 1
  1742  005EDD  2A                 	db	42
  1743  005EDE  2A                 	db	42
  1744  005EDF  2A                 	db	42
  1745  005EE0  20                 	db	32
  1746  005EE1  43                 	db	67	;'C'
  1747  005EE2  6F                 	db	111	;'o'
  1748  005EE3  6C                 	db	108	;'l'
  1749  005EE4  6C                 	db	108	;'l'
  1750  005EE5  65                 	db	101	;'e'
  1751  005EE6  67                 	db	103	;'g'
  1752  005EE7  61                 	db	97	;'a'
  1753  005EE8  72                 	db	114	;'r'
  1754  005EE9  65                 	db	101	;'e'
  1755  005EEA  20                 	db	32
  1756  005EEB  65                 	db	101	;'e'
  1757  005EEC  6C                 	db	108	;'l'
  1758  005EED  65                 	db	101	;'e'
  1759  005EEE  74                 	db	116	;'t'
  1760  005EEF  74                 	db	116	;'t'
  1761  005EF0  72                 	db	114	;'r'
  1762  005EF1  6F                 	db	111	;'o'
  1763  005EF2  64                 	db	100	;'d'
  1764  005EF3  69                 	db	105	;'i'
  1765  005EF4  20                 	db	32
  1766  005EF5  2A                 	db	42
  1767  005EF6  2A                 	db	42
  1768  005EF7  2A                 	db	42
  1769  005EF8  00                 	db	0
  1770  005EF9                     STR_2:
  1771                           
  1772                           ; BSR set to: 1
  1773  005EF9  49                 	db	73	;'I'
  1774  005EFA  6E                 	db	110	;'n'
  1775  005EFB  76                 	db	118	;'v'
  1776  005EFC  61                 	db	97	;'a'
  1777  005EFD  6C                 	db	108	;'l'
  1778  005EFE  69                 	db	105	;'i'
  1779  005EFF  64                 	db	100	;'d'
  1780  005F00  20                 	db	32
  1781  005F01  63                 	db	99	;'c'
  1782  005F02  75                 	db	117	;'u'
  1783  005F03  72                 	db	114	;'r'
  1784  005F04  72                 	db	114	;'r'
  1785  005F05  65                 	db	101	;'e'
  1786  005F06  6E                 	db	110	;'n'
  1787  005F07  74                 	db	116	;'t'
  1788  005F08  20                 	db	32
  1789  005F09  73                 	db	115	;'s'
  1790  005F0A  70                 	db	112	;'p'
  1791  005F0B  65                 	db	101	;'e'
  1792  005F0C  65                 	db	101	;'e'
  1793  005F0D  64                 	db	100	;'d'
  1794  005F0E  20                 	db	32
  1795  005F0F  28                 	db	40
  1796  005F10  25                 	db	37
  1797  005F11  6C                 	db	108	;'l'
  1798  005F12  75                 	db	117	;'u'
  1799  005F13  29                 	db	41
  1800  005F14  00                 	db	0
  1801  005F15                     STR_3:
  1802                           
  1803                           ; BSR set to: 1
  1804  005F15  53                 	db	83	;'S'
  1805  005F16  70                 	db	112	;'p'
  1806  005F17  65                 	db	101	;'e'
  1807  005F18  65                 	db	101	;'e'
  1808  005F19  64                 	db	100	;'d'
  1809  005F1A  20                 	db	32
  1810  005F1B  63                 	db	99	;'c'
  1811  005F1C  68                 	db	104	;'h'
  1812  005F1D  61                 	db	97	;'a'
  1813  005F1E  6E                 	db	110	;'n'
  1814  005F1F  67                 	db	103	;'g'
  1815  005F20  65                 	db	101	;'e'
  1816  005F21  64                 	db	100	;'d'
  1817  005F22  20                 	db	32
  1818  005F23  28                 	db	40
  1819  005F24  2D                 	db	45
  1820  005F25  3E                 	db	62	;'>'
  1821  005F26  20                 	db	32
  1822  005F27  25                 	db	37
  1823  005F28  6C                 	db	108	;'l'
  1824  005F29  75                 	db	117	;'u'
  1825  005F2A  29                 	db	41
  1826  005F2B  00                 	db	0
  1827  005F2C                     STR_5:
  1828                           
  1829                           ; BSR set to: 1
  1830  005F2C  43                 	db	67	;'C'
  1831  005F2D  6F                 	db	111	;'o'
  1832  005F2E  6D                 	db	109	;'m'
  1833  005F2F  6D                 	db	109	;'m'
  1834  005F30  20                 	db	32
  1835  005F31  69                 	db	105	;'i'
  1836  005F32  73                 	db	115	;'s'
  1837  005F33  20                 	db	32
  1838  005F34  64                 	db	100	;'d'
  1839  005F35  65                 	db	101	;'e'
  1840  005F36  61                 	db	97	;'a'
  1841  005F37  64                 	db	100	;'d'
  1842  005F38  2E                 	db	46
  1843  005F39  20                 	db	32
  1844  005F3A  52                 	db	82	;'R'
  1845  005F3B  65                 	db	101	;'e'
  1846  005F3C  74                 	db	116	;'t'
  1847  005F3D  72                 	db	114	;'r'
  1848  005F3E  79                 	db	121	;'y'
  1849  005F3F  2E                 	db	46
  1850  005F40  2E                 	db	46
  1851  005F41  2E                 	db	46
  1852  005F42  00                 	db	0
  1853  005F43                     STR_4:
  1854                           
  1855                           ; BSR set to: 1
  1856  005F43  45                 	db	69	;'E'
  1857  005F44  72                 	db	114	;'r'
  1858  005F45  72                 	db	114	;'r'
  1859  005F46  6F                 	db	111	;'o'
  1860  005F47  72                 	db	114	;'r'
  1861  005F48  20                 	db	32
  1862  005F49  63                 	db	99	;'c'
  1863  005F4A  68                 	db	104	;'h'
  1864  005F4B  61                 	db	97	;'a'
  1865  005F4C  6E                 	db	110	;'n'
  1866  005F4D  67                 	db	103	;'g'
  1867  005F4E  69                 	db	105	;'i'
  1868  005F4F  6E                 	db	110	;'n'
  1869  005F50  67                 	db	103	;'g'
  1870  005F51  20                 	db	32
  1871  005F52  73                 	db	115	;'s'
  1872  005F53  70                 	db	112	;'p'
  1873  005F54  65                 	db	101	;'e'
  1874  005F55  65                 	db	101	;'e'
  1875  005F56  64                 	db	100	;'d'
  1876  005F57  00                 	db	0
  1877  005F58                     STR_30:
  1878                           
  1879                           ; BSR set to: 1
  1880  005F58  44                 	db	68	;'D'
  1881  005F59  65                 	db	101	;'e'
  1882  005F5A  74                 	db	116	;'t'
  1883  005F5B  65                 	db	101	;'e'
  1884  005F5C  63                 	db	99	;'c'
  1885  005F5D  74                 	db	116	;'t'
  1886  005F5E  69                 	db	105	;'i'
  1887  005F5F  6E                 	db	110	;'n'
  1888  005F60  67                 	db	103	;'g'
  1889  005F61  20                 	db	32
  1890  005F62  73                 	db	115	;'s'
  1891  005F63  70                 	db	112	;'p'
  1892  005F64  65                 	db	101	;'e'
  1893  005F65  65                 	db	101	;'e'
  1894  005F66  64                 	db	100	;'d'
  1895  005F67  2E                 	db	46
  1896  005F68  2E                 	db	46
  1897  005F69  2E                 	db	46
  1898  005F6A  00                 	db	0
  1899  005F6B                     STR_1:
  1900                           
  1901                           ; BSR set to: 1
  1902  005F6B  43                 	db	67	;'C'
  1903  005F6C  68                 	db	104	;'h'
  1904  005F6D  61                 	db	97	;'a'
  1905  005F6E  6E                 	db	110	;'n'
  1906  005F6F  67                 	db	103	;'g'
  1907  005F70  65                 	db	101	;'e'
  1908  005F71  20                 	db	32
  1909  005F72  73                 	db	115	;'s'
  1910  005F73  70                 	db	112	;'p'
  1911  005F74  65                 	db	101	;'e'
  1912  005F75  65                 	db	101	;'e'
  1913  005F76  64                 	db	100	;'d'
  1914  005F77  20                 	db	32
  1915  005F78  28                 	db	40
  1916  005F79  25                 	db	37
  1917  005F7A  6C                 	db	108	;'l'
  1918  005F7B  75                 	db	117	;'u'
  1919  005F7C  29                 	db	41
  1920  005F7D  00                 	db	0
  1921  005F7E                     STR_7:
  1922                           
  1923                           ; BSR set to: 1
  1924  005F7E  52                 	db	82	;'R'
  1925  005F7F  65                 	db	101	;'e'
  1926  005F80  73                 	db	115	;'s'
  1927  005F81  75                 	db	117	;'u'
  1928  005F82  72                 	db	114	;'r'
  1929  005F83  72                 	db	114	;'r'
  1930  005F84  65                 	db	101	;'e'
  1931  005F85  63                 	db	99	;'c'
  1932  005F86  74                 	db	116	;'t'
  1933  005F87  65                 	db	101	;'e'
  1934  005F88  64                 	db	100	;'d'
  1935  005F89  21                 	db	33
  1936  005F8A  00                 	db	0
  1937  005F8B                     STR_26:
  1938                           
  1939                           ; BSR set to: 1
  1940  005F8B  41                 	db	65	;'A'
  1941  005F8C  54                 	db	84	;'T'
  1942  005F8D  2B                 	db	43
  1943  005F8E  49                 	db	73	;'I'
  1944  005F8F  50                 	db	80	;'P'
  1945  005F90  52                 	db	82	;'R'
  1946  005F91  3D                 	db	61	;'='
  1947  005F92  25                 	db	37
  1948  005F93  6C                 	db	108	;'l'
  1949  005F94  75                 	db	117	;'u'
  1950  005F95  0D                 	db	13
  1951  005F96  00                 	db	0
  1952  005F97                     STR_12:
  1953                           
  1954                           ; BSR set to: 1
  1955  005F97  43                 	db	67	;'C'
  1956  005F98  68                 	db	104	;'h'
  1957  005F99  65                 	db	101	;'e'
  1958  005F9A  63                 	db	99	;'c'
  1959  005F9B  6B                 	db	107	;'k'
  1960  005F9C  20                 	db	32
  1961  005F9D  73                 	db	115	;'s'
  1962  005F9E  70                 	db	112	;'p'
  1963  005F9F  65                 	db	101	;'e'
  1964  005FA0  65                 	db	101	;'e'
  1965  005FA1  64                 	db	100	;'d'
  1966  005FA2  00                 	db	0
  1967  005FA3                     STR_31:
  1968                           
  1969                           ; BSR set to: 1
  1970  005FA3  25                 	db	37
  1971  005FA4  6C                 	db	108	;'l'
  1972  005FA5  75                 	db	117	;'u'
  1973  005FA6  20                 	db	32
  1974  005FA7  46                 	db	70	;'F'
  1975  005FA8  4F                 	db	79	;'O'
  1976  005FA9  55                 	db	85	;'U'
  1977  005FAA  4E                 	db	78	;'N'
  1978  005FAB  44                 	db	68	;'D'
  1979  005FAC  21                 	db	33
  1980  005FAD  00                 	db	0
  1981  005FAE                     STR_15:
  1982                           
  1983                           ; BSR set to: 1
  1984  005FAE  46                 	db	70	;'F'
  1985  005FAF  72                 	db	114	;'r'
  1986  005FB0  65                 	db	101	;'e'
  1987  005FB1  71                 	db	113	;'q'
  1988  005FB2  75                 	db	117	;'u'
  1989  005FB3  65                 	db	101	;'e'
  1990  005FB4  6E                 	db	110	;'n'
  1991  005FB5  7A                 	db	122	;'z'
  1992  005FB6  61                 	db	97	;'a'
  1993  005FB7  3A                 	db	58	;':'
  1994  005FB8  00                 	db	0
  1995  005FB9                     STR_6:
  1996                           
  1997                           ; BSR set to: 1
  1998  005FB9  53                 	db	83	;'S'
  1999  005FBA  74                 	db	116	;'t'
  2000  005FBB  69                 	db	105	;'i'
  2001  005FBC  6C                 	db	108	;'l'
  2002  005FBD  6C                 	db	108	;'l'
  2003  005FBE  20                 	db	32
  2004  005FBF  64                 	db	100	;'d'
  2005  005FC0  65                 	db	101	;'e'
  2006  005FC1  61                 	db	97	;'a'
  2007  005FC2  64                 	db	100	;'d'
  2008  005FC3  00                 	db	0
  2009  005FC4                     STR_8:
  2010                           
  2011                           ; BSR set to: 1
  2012  005FC4  43                 	db	67	;'C'
  2013  005FC5  68                 	db	104	;'h'
  2014  005FC6  65                 	db	101	;'e'
  2015  005FC7  63                 	db	99	;'c'
  2016  005FC8  6B                 	db	107	;'k'
  2017  005FC9  20                 	db	32
  2018  005FCA  74                 	db	116	;'t'
  2019  005FCB  69                 	db	105	;'i'
  2020  005FCC  6D                 	db	109	;'m'
  2021  005FCD  65                 	db	101	;'e'
  2022  005FCE  00                 	db	0
  2023  005FCF                     STR_9:
  2024                           
  2025                           ; BSR set to: 1
  2026  005FCF  41                 	db	65	;'A'
  2027  005FD0  54                 	db	84	;'T'
  2028  005FD1  2B                 	db	43
  2029  005FD2  43                 	db	67	;'C'
  2030  005FD3  43                 	db	67	;'C'
  2031  005FD4  4C                 	db	76	;'L'
  2032  005FD5  4B                 	db	75	;'K'
  2033  005FD6  3F                 	db	63	;'?'
  2034  005FD7  0D                 	db	13
  2035  005FD8  00                 	db	0
  2036  005FD9                     STR_21:
  2037                           
  2038                           ; BSR set to: 1
  2039  005FD9  41                 	db	65	;'A'
  2040  005FDA  54                 	db	84	;'T'
  2041  005FDB  2B                 	db	43
  2042  005FDC  49                 	db	73	;'I'
  2043  005FDD  50                 	db	80	;'P'
  2044  005FDE  52                 	db	82	;'R'
  2045  005FDF  3F                 	db	63	;'?'
  2046  005FE0  0D                 	db	13
  2047  005FE1  00                 	db	0
  2048  005FE2                     STR_24:
  2049                           
  2050                           ; BSR set to: 1
  2051  005FE2  2B                 	db	43
  2052  005FE3  49                 	db	73	;'I'
  2053  005FE4  50                 	db	80	;'P'
  2054  005FE5  52                 	db	82	;'R'
  2055  005FE6  3A                 	db	58	;':'
  2056  005FE7  20                 	db	32
  2057  005FE8  00                 	db	0
  2058  005FE9                     STR_17:
  2059                           
  2060                           ; BSR set to: 1
  2061  005FE9  41                 	db	65	;'A'
  2062  005FEA  54                 	db	84	;'T'
  2063  005FEB  0D                 	db	13
  2064  005FEC  00                 	db	0
  2065  005FED                     
  2066                           ; BSR set to: 1
  2067  005FED  25                 	db	37
  2068  005FEE  33                 	db	51	;'3'
  2069  005FEF  64                 	db	100	;'d'
  2070  005FF0  00                 	db	0
  2071  005FF1                     STR_13:
  2072                           
  2073                           ; BSR set to: 1
  2074  005FF1  25                 	db	37
  2075  005FF2  6C                 	db	108	;'l'
  2076  005FF3  75                 	db	117	;'u'
  2077  005FF4  00                 	db	0
  2078  005FF5                     STR_20:
  2079                           
  2080                           ; BSR set to: 1
  2081  005FF5  4F                 	db	79	;'O'
  2082  005FF6  4B                 	db	75	;'K'
  2083  005FF7  00                 	db	0
  2084  005FF8                     STR_10:
  2085                           
  2086                           ; BSR set to: 1
  2087  005FF8  61                 	db	97	;'a'
  2088  005FF9  61                 	db	97	;'a'
  2089  005FFA  00                 	db	0
  2090  005FFB                     STR_11:
  2091                           
  2092                           ; BSR set to: 1
  2093  005FFB  62                 	db	98	;'b'
  2094  005FFC  62                 	db	98	;'b'
  2095  005FFD  00                 	db	0
  2096  0000                     
  2097                           ; #config settings
  2098  005FFE  00                 	db	0	; dummy byte at the end
  2099  0000                     
  2100                           	psect	cinit
  2101  00199E                     __pcinit:
  2102                           	opt callstack 0
  2103  00199E                     start_initialization:
  2104                           	opt callstack 0
  2105  00199E                     __initialization:
  2106                           	opt callstack 0
  2107                           
  2108                           ; Initialize objects allocated to BANK1 (21 bytes)
  2109                           ; load TBLPTR registers with __pidataBANK1
  2110  00199E  0E0E               	movlw	low __pidataBANK1
  2111  0019A0  6EF6               	movwf	tblptrl,c
  2112  0019A2  0E25               	movlw	high __pidataBANK1
  2113  0019A4  6EF7               	movwf	tblptrh,c
  2114  0019A6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2115  0019A8  6EF8               	movwf	tblptru,c
  2116  0019AA  EE01  F0DC         	lfsr	0,__pdataBANK1
  2117  0019AE  EE10 F015          	lfsr	1,21
  2118  0019B2                     copy_data0:
  2119  0019B2  0009               	tblrd		*+
  2120  0019B4  CFF5 FFEE          	movff	tablat,postinc0
  2121  0019B8  50E5               	movf	postdec1,w,c
  2122  0019BA  50E1               	movf	fsr1l,w,c
  2123  0019BC  E1FA               	bnz	copy_data0
  2124                           
  2125                           ; Initialize objects allocated to BANK0 (41 bytes)
  2126                           ; load TBLPTR registers with __pidataBANK0
  2127  0019BE  0E08               	movlw	low __pidataBANK0
  2128  0019C0  6EF6               	movwf	tblptrl,c
  2129  0019C2  0E24               	movlw	high __pidataBANK0
  2130  0019C4  6EF7               	movwf	tblptrh,c
  2131  0019C6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2132  0019C8  6EF8               	movwf	tblptru,c
  2133  0019CA  EE00  F0B4         	lfsr	0,__pdataBANK0
  2134  0019CE  EE10 F029          	lfsr	1,41
  2135  0019D2                     copy_data1:
  2136  0019D2  0009               	tblrd		*+
  2137  0019D4  CFF5 FFEE          	movff	tablat,postinc0
  2138  0019D8  50E5               	movf	postdec1,w,c
  2139  0019DA  50E1               	movf	fsr1l,w,c
  2140  0019DC  E1FA               	bnz	copy_data1
  2141                           
  2142                           ; Initialize objects allocated to COMRAM (4 bytes)
  2143                           ; load TBLPTR registers with __pidataCOMRAM
  2144  0019DE  0E23               	movlw	low __pidataCOMRAM
  2145  0019E0  6EF6               	movwf	tblptrl,c
  2146  0019E2  0E25               	movlw	high __pidataCOMRAM
  2147  0019E4  6EF7               	movwf	tblptrh,c
  2148  0019E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2149  0019E8  6EF8               	movwf	tblptru,c
  2150  0019EA  EE00  F057         	lfsr	0,__pdataCOMRAM
  2151  0019EE  EE10 F004          	lfsr	1,4
  2152  0019F2                     copy_data2:
  2153  0019F2  0009               	tblrd		*+
  2154  0019F4  CFF5 FFEE          	movff	tablat,postinc0
  2155  0019F8  50E5               	movf	postdec1,w,c
  2156  0019FA  50E1               	movf	fsr1l,w,c
  2157  0019FC  E1FA               	bnz	copy_data2
  2158                           
  2159                           ; Clear objects allocated to BANK1 (116 bytes)
  2160  0019FE  EE01  F000         	lfsr	0,__pbssBANK1
  2161  001A02  0E74               	movlw	116
  2162  001A04                     clear_0:
  2163  001A04  6AEE               	clrf	postinc0,c
  2164  001A06  06E8               	decf	wreg,f,c
  2165  001A08  E1FD               	bnz	clear_0
  2166                           
  2167                           ; Clear objects allocated to BANK0 (26 bytes)
  2168  001A0A  EE00  F0DD         	lfsr	0,__pbssBANK0
  2169  001A0E  0E1A               	movlw	26
  2170  001A10                     clear_1:
  2171  001A10  6AEE               	clrf	postinc0,c
  2172  001A12  06E8               	decf	wreg,f,c
  2173  001A14  E1FD               	bnz	clear_1
  2174                           
  2175                           ; Clear objects allocated to COMRAM (4 bytes)
  2176  001A16  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2177  001A18  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2178  001A1A  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2179  001A1C  6A53               	clrf	__pbssCOMRAM& (0+255),c
  2180  001A1E                     end_of_initialization:
  2181                           	opt callstack 0
  2182  001A1E                     __end_of__initialization:
  2183                           	opt callstack 0
  2184  001A1E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2185  001A20  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2186  001A22  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2187  001A24  6EF8               	movwf	tblptru,c
  2188  001A26  0100               	movlb	0
  2189  001A28  EF3F  F012         	goto	_main	;jump to C main() function
  2190                           
  2191                           	psect	bssCOMRAM
  2192  000053                     __pbssCOMRAM:
  2193                           	opt callstack 0
  2194  000053                     strtok@sp:
  2195                           	opt callstack 0
  2196  000053                     	ds	2
  2197  000055                     _ECG_FLAGS:
  2198                           	opt callstack 0
  2199  000055                     	ds	2
  2200                           
  2201                           	psect	dataCOMRAM
  2202  000057                     __pdataCOMRAM:
  2203                           	opt callstack 0
  2204  000057                     _Ecg_Y:
  2205                           	opt callstack 0
  2206  000057                     	ds	2
  2207  000059                     _Ecg_X:
  2208                           	opt callstack 0
  2209  000059                     	ds	2
  2210                           
  2211                           	psect	bssBANK0
  2212  0000DD                     __pbssBANK0:
  2213                           	opt callstack 0
  2214  0000DD                     _ECG_HEARTBEAT:
  2215                           	opt callstack 0
  2216  0000DD                     	ds	13
  2217  0000EA                     _ECG_BUFFER:
  2218                           	opt callstack 0
  2219  0000EA                     	ds	5
  2220  0000EF                     _ECG_HEARTRATE:
  2221                           	opt callstack 0
  2222  0000EF                     	ds	4
  2223  0000F3                     _tmp3:
  2224                           	opt callstack 0
  2225  0000F3                     	ds	4
  2226                           
  2227                           	psect	dataBANK0
  2228  0000B4                     __pdataBANK0:
  2229                           	opt callstack 0
  2230  0000B4                     _x5:
  2231                           	opt callstack 0
  2232  0000B4                     	ds	10
  2233  0000BE                     _x2:
  2234                           	opt callstack 0
  2235  0000BE                     	ds	10
  2236  0000C8                     _x4:
  2237                           	opt callstack 0
  2238  0000C8                     	ds	9
  2239  0000D1                     _x3:
  2240                           	opt callstack 0
  2241  0000D1                     	ds	8
  2242  0000D9                     _Ecg_Yold:
  2243                           	opt callstack 0
  2244  0000D9                     	ds	2
  2245  0000DB                     _Ecg_Xold:
  2246                           	opt callstack 0
  2247  0000DB                     	ds	2
  2248                           
  2249                           	psect	bssBANK1
  2250  000100                     __pbssBANK1:
  2251                           	opt callstack 0
  2252  000100                     _tmp4:
  2253                           	opt callstack 0
  2254  000100                     	ds	4
  2255  000104                     _tmp2:
  2256                           	opt callstack 0
  2257  000104                     	ds	4
  2258  000108                     _tmp1:
  2259                           	opt callstack 0
  2260  000108                     	ds	4
  2261  00010C                     _MILLISECONDS:
  2262                           	opt callstack 0
  2263  00010C                     	ds	4
  2264  000110                     _EUSART_RX:
  2265                           	opt callstack 0
  2266  000110                     	ds	100
  2267                           
  2268                           	psect	dataBANK1
  2269  0001DC                     __pdataBANK1:
  2270                           	opt callstack 0
  2271  0001DC                     _x7:
  2272                           	opt callstack 0
  2273  0001DC                     	ds	11
  2274  0001E7                     _x6:
  2275                           	opt callstack 0
  2276  0001E7                     	ds	10
  2277                           
  2278                           	psect	cstackBANK1
  2279  000174                     __pcstackBANK1:
  2280                           	opt callstack 0
  2281  000174                     loop@response:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 32 bytes @ 0x0
  2285  000174                     	ds	32
  2286  000194                     loop@zzzz_158:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 32 bytes @ 0x20
  2290  000194                     	ds	32
  2291  0001B4                     loop@zzzz:
  2292                           	opt callstack 0
  2293                           
  2294                           ; 32 bytes @ 0x40
  2295  0001B4                     	ds	32
  2296  0001D4                     _loop$146:
  2297                           	opt callstack 0
  2298                           
  2299                           ; 2 bytes @ 0x60
  2300  0001D4                     	ds	2
  2301  0001D6                     _loop$151:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 2 bytes @ 0x62
  2305  0001D6                     	ds	2
  2306  0001D8                     loop@zz:
  2307                           	opt callstack 0
  2308                           
  2309                           ; 4 bytes @ 0x64
  2310  0001D8                     	ds	4
  2311                           
  2312                           	psect	cstackBANK0
  2313  000060                     __pcstackBANK0:
  2314                           	opt callstack 0
  2315  000060                     ?_sprintf:
  2316                           	opt callstack 0
  2317  000060                     sprintf@sp:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 2 bytes @ 0x0
  2321  000060                     	ds	2
  2322  000062                     sprintf@f:
  2323                           	opt callstack 0
  2324                           
  2325                           ; 2 bytes @ 0x2
  2326  000062                     	ds	6
  2327  000068                     sprintf@prec:
  2328                           	opt callstack 0
  2329                           
  2330                           ; 2 bytes @ 0x8
  2331  000068                     	ds	2
  2332  00006A                     sprintf@val:
  2333                           	opt callstack 0
  2334                           
  2335                           ; 4 bytes @ 0xA
  2336  00006A                     	ds	4
  2337  00006E                     sprintf@ap:
  2338                           	opt callstack 0
  2339                           
  2340                           ; 2 bytes @ 0xE
  2341  00006E                     	ds	2
  2342  000070                     sprintf@flag:
  2343                           	opt callstack 0
  2344                           
  2345                           ; 1 bytes @ 0x10
  2346  000070                     	ds	1
  2347  000071                     sprintf@width:
  2348                           	opt callstack 0
  2349                           
  2350                           ; 2 bytes @ 0x11
  2351  000071                     	ds	2
  2352  000073                     sprintf@c:
  2353                           	opt callstack 0
  2354                           
  2355                           ; 1 bytes @ 0x13
  2356  000073                     	ds	1
  2357  000074                     ?_A6_SpeedSet:
  2358                           	opt callstack 0
  2359  000074                     A6_SpeedSet@speed:
  2360                           	opt callstack 0
  2361  000074                     A6_SpeedAutoDetect@zzzz:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 32 bytes @ 0x14
  2365  000074                     	ds	4
  2366  000078                     A6_SpeedSet@response:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 32 bytes @ 0x18
  2370  000078                     	ds	28
  2371  000094                     A6_SpeedAutoDetect@i:
  2372                           	opt callstack 0
  2373                           
  2374                           ; 1 bytes @ 0x34
  2375  000094                     	ds	4
  2376  000098                     A6_SpeedSet@request:
  2377                           	opt callstack 0
  2378                           
  2379                           ; 20 bytes @ 0x38
  2380  000098                     	ds	20
  2381  0000AC                     A6_SpeedSet@currentSpeed:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 4 bytes @ 0x4C
  2385  0000AC                     	ds	4
  2386  0000B0                     ??_loop:
  2387                           
  2388                           ; 1 bytes @ 0x50
  2389  0000B0                     	ds	4
  2390                           
  2391                           	psect	cstackCOMRAM
  2392  000001                     __pcstackCOMRAM:
  2393                           	opt callstack 0
  2394  000001                     ??_Ecg_Interrupt:
  2395  000001                     EUSART_RX_Interrupt@c:
  2396                           	opt callstack 0
  2397                           
  2398                           ; 1 bytes @ 0x0
  2399  000001                     	ds	2
  2400  000003                     ??_isr:
  2401                           
  2402                           ; 1 bytes @ 0x2
  2403  000003                     	ds	2
  2404  000005                     ??_init:
  2405  000005                     ??_isdigit:
  2406  000005                     ??_TFT_Reset:
  2407  000005                     ?_abs:
  2408                           	opt callstack 0
  2409  000005                     ?_Ecg_CheckLeads:
  2410                           	opt callstack 0
  2411  000005                     ?_strcmp:
  2412                           	opt callstack 0
  2413  000005                     ?_strlen:
  2414                           	opt callstack 0
  2415  000005                     ?_strchr:
  2416                           	opt callstack 0
  2417  000005                     ?___wmul:
  2418                           	opt callstack 0
  2419  000005                     ?___awdiv:
  2420                           	opt callstack 0
  2421  000005                     ?___lmul:
  2422                           	opt callstack 0
  2423  000005                     ?___lldiv:
  2424                           	opt callstack 0
  2425  000005                     EUSART_TX_Char@c:
  2426                           	opt callstack 0
  2427  000005                     TFT_WriteRegister@reg:
  2428                           	opt callstack 0
  2429  000005                     A6_ReadLine@response:
  2430                           	opt callstack 0
  2431  000005                     ___wmul@multiplier:
  2432                           	opt callstack 0
  2433  000005                     ___awdiv@dividend:
  2434                           	opt callstack 0
  2435  000005                     abs@a:
  2436                           	opt callstack 0
  2437  000005                     memset@p1:
  2438                           	opt callstack 0
  2439  000005                     strcmp@s1:
  2440                           	opt callstack 0
  2441  000005                     strlen@s:
  2442                           	opt callstack 0
  2443  000005                     strchr@ptr:
  2444                           	opt callstack 0
  2445  000005                     sleepMS@ms:
  2446                           	opt callstack 0
  2447  000005                     ___lmul@multiplier:
  2448                           	opt callstack 0
  2449  000005                     ___lldiv@dividend:
  2450                           	opt callstack 0
  2451                           
  2452                           ; 4 bytes @ 0x4
  2453  000005                     	ds	1
  2454  000006                     _isdigit$1812:
  2455                           	opt callstack 0
  2456                           
  2457                           ; 1 bytes @ 0x5
  2458  000006                     	ds	1
  2459  000007                     ??_abs:
  2460  000007                     ??_Ecg_CheckLeads:
  2461  000007                     A6_ReadLine@responseLen:
  2462                           	opt callstack 0
  2463  000007                     isdigit@c:
  2464                           	opt callstack 0
  2465  000007                     TFT_WriteRegister@data:
  2466                           	opt callstack 0
  2467  000007                     ___wmul@multiplicand:
  2468                           	opt callstack 0
  2469  000007                     ___awdiv@divisor:
  2470                           	opt callstack 0
  2471  000007                     memset@c:
  2472                           	opt callstack 0
  2473  000007                     strcmp@s2:
  2474                           	opt callstack 0
  2475  000007                     strlen@cp:
  2476                           	opt callstack 0
  2477  000007                     strchr@chr:
  2478                           	opt callstack 0
  2479                           
  2480                           ; 2 bytes @ 0x6
  2481  000007                     	ds	1
  2482  000008                     Ecg_CheckLeads@leadsStatus:
  2483                           	opt callstack 0
  2484  000008                     A6_ReadLine@timeout:
  2485                           	opt callstack 0
  2486                           
  2487                           ; 2 bytes @ 0x7
  2488  000008                     	ds	1
  2489  000009                     ??_strcmp:
  2490  000009                     ??_strchr:
  2491  000009                     ?_strncmp:
  2492                           	opt callstack 0
  2493  000009                     TFT_WriteRegister@h:
  2494                           	opt callstack 0
  2495  000009                     ___awdiv@counter:
  2496                           	opt callstack 0
  2497  000009                     EUSART_TX_String@str:
  2498                           	opt callstack 0
  2499  000009                     ___wmul@product:
  2500                           	opt callstack 0
  2501  000009                     memset@n:
  2502                           	opt callstack 0
  2503  000009                     strncmp@s1:
  2504                           	opt callstack 0
  2505  000009                     sleepMS@t:
  2506                           	opt callstack 0
  2507  000009                     ___lmul@multiplicand:
  2508                           	opt callstack 0
  2509  000009                     ___lldiv@divisor:
  2510                           	opt callstack 0
  2511                           
  2512                           ; 4 bytes @ 0x8
  2513  000009                     	ds	1
  2514  00000A                     ??_A6_ReadLine:
  2515  00000A                     TFT_WriteRegister@l:
  2516                           	opt callstack 0
  2517  00000A                     ___awdiv@sign:
  2518                           	opt callstack 0
  2519                           
  2520                           ; 1 bytes @ 0x9
  2521  00000A                     	ds	1
  2522  00000B                     ?_strspn:
  2523                           	opt callstack 0
  2524  00000B                     ?_strcspn:
  2525                           	opt callstack 0
  2526  00000B                     TFT_WriteRegister@h_715:
  2527                           	opt callstack 0
  2528  00000B                     EUSART_TX_String@len:
  2529                           	opt callstack 0
  2530  00000B                     strcmp@r:
  2531                           	opt callstack 0
  2532  00000B                     ___awdiv@quotient:
  2533                           	opt callstack 0
  2534  00000B                     memset@p:
  2535                           	opt callstack 0
  2536  00000B                     strcspn@s1:
  2537                           	opt callstack 0
  2538  00000B                     strncmp@s2:
  2539                           	opt callstack 0
  2540  00000B                     strspn@s1:
  2541                           	opt callstack 0
  2542                           
  2543                           ; 2 bytes @ 0xA
  2544  00000B                     	ds	1
  2545  00000C                     TFT_WriteRegister@l_716:
  2546                           	opt callstack 0
  2547                           
  2548                           ; 1 bytes @ 0xB
  2549  00000C                     	ds	1
  2550  00000D                     TFT_SetAddrWindow@x1:
  2551                           	opt callstack 0
  2552  00000D                     TFT_DrawPixel@x:
  2553                           	opt callstack 0
  2554  00000D                     TFT_Flood@color:
  2555                           	opt callstack 0
  2556  00000D                     strcspn@s2:
  2557                           	opt callstack 0
  2558  00000D                     strncmp@len:
  2559                           	opt callstack 0
  2560  00000D                     strspn@s2:
  2561                           	opt callstack 0
  2562  00000D                     ___lmul@product:
  2563                           	opt callstack 0
  2564  00000D                     ___lldiv@quotient:
  2565                           	opt callstack 0
  2566                           
  2567                           ; 4 bytes @ 0xC
  2568  00000D                     	ds	1
  2569  00000E                     A6_ReadLine@t:
  2570                           	opt callstack 0
  2571                           
  2572                           ; 4 bytes @ 0xD
  2573  00000E                     	ds	1
  2574  00000F                     ??_strncmp:
  2575  00000F                     ??_strspn:
  2576  00000F                     ??_strcspn:
  2577  00000F                     TFT_SetAddrWindow@y1:
  2578                           	opt callstack 0
  2579  00000F                     TFT_DrawPixel@y:
  2580                           	opt callstack 0
  2581  00000F                     TFT_Flood@len:
  2582                           	opt callstack 0
  2583                           
  2584                           ; 4 bytes @ 0xE
  2585  00000F                     	ds	1
  2586  000010                     ?_strstr:
  2587                           	opt callstack 0
  2588  000010                     strstr@s1:
  2589                           	opt callstack 0
  2590  000010                     strcspn@i:
  2591                           	opt callstack 0
  2592  000010                     strspn@i:
  2593                           	opt callstack 0
  2594                           
  2595                           ; 2 bytes @ 0xF
  2596  000010                     	ds	1
  2597  000011                     ?_atol:
  2598                           	opt callstack 0
  2599  000011                     ___lldiv@counter:
  2600                           	opt callstack 0
  2601  000011                     TFT_SetAddrWindow@x2:
  2602                           	opt callstack 0
  2603  000011                     TFT_DrawPixel@color:
  2604                           	opt callstack 0
  2605  000011                     atol@s:
  2606                           	opt callstack 0
  2607                           
  2608                           ; 2 bytes @ 0x10
  2609  000011                     	ds	1
  2610  000012                     ?_strtok:
  2611                           	opt callstack 0
  2612  000012                     ?___llmod:
  2613                           	opt callstack 0
  2614  000012                     A6_ReadLine@iLine:
  2615                           	opt callstack 0
  2616  000012                     strstr@s2:
  2617                           	opt callstack 0
  2618  000012                     strtok@s1:
  2619                           	opt callstack 0
  2620  000012                     EUSART_SetSpeed@speed:
  2621                           	opt callstack 0
  2622  000012                     ___llmod@dividend:
  2623                           	opt callstack 0
  2624                           
  2625                           ; 4 bytes @ 0x11
  2626  000012                     	ds	1
  2627  000013                     ??_TFT_Flood:
  2628  000013                     TFT_SetAddrWindow@y2:
  2629                           	opt callstack 0
  2630  000013                     TFT_DrawLine@x0:
  2631                           	opt callstack 0
  2632  000013                     A6_Command@command:
  2633                           	opt callstack 0
  2634                           
  2635                           ; 2 bytes @ 0x12
  2636  000013                     	ds	1
  2637  000014                     strtok@s2:
  2638                           	opt callstack 0
  2639                           
  2640                           ; 2 bytes @ 0x13
  2641  000014                     	ds	1
  2642  000015                     ??_atol:
  2643  000015                     TFT_DrawLine@y0:
  2644                           	opt callstack 0
  2645  000015                     A6_Command@resp1:
  2646                           	opt callstack 0
  2647                           
  2648                           ; 2 bytes @ 0x14
  2649  000015                     	ds	1
  2650  000016                     ??_EUSART_SetSpeed:
  2651  000016                     ___llmod@divisor:
  2652                           	opt callstack 0
  2653                           
  2654                           ; 4 bytes @ 0x15
  2655  000016                     	ds	1
  2656  000017                     TFT_DrawLine@x1:
  2657                           	opt callstack 0
  2658  000017                     TFT_Flood@blocks:
  2659                           	opt callstack 0
  2660  000017                     A6_Command@resp2:
  2661                           	opt callstack 0
  2662                           
  2663                           ; 2 bytes @ 0x16
  2664  000017                     	ds	2
  2665  000019                     TFT_Flood@i:
  2666                           	opt callstack 0
  2667  000019                     atol@sign:
  2668                           	opt callstack 0
  2669  000019                     TFT_DrawLine@y1:
  2670                           	opt callstack 0
  2671  000019                     A6_Command@timeout:
  2672                           	opt callstack 0
  2673                           
  2674                           ; 2 bytes @ 0x18
  2675  000019                     	ds	1
  2676  00001A                     TFT_Flood@color_hi:
  2677                           	opt callstack 0
  2678  00001A                     ___llmod@counter:
  2679                           	opt callstack 0
  2680  00001A                     EUSART_SetSpeed@tmp:
  2681                           	opt callstack 0
  2682  00001A                     atol@a:
  2683                           	opt callstack 0
  2684                           
  2685                           ; 4 bytes @ 0x19
  2686  00001A                     	ds	1
  2687  00001B                     TFT_Flood@color_lo:
  2688                           	opt callstack 0
  2689  00001B                     TFT_DrawLine@color:
  2690                           	opt callstack 0
  2691  00001B                     A6_Command@response:
  2692                           	opt callstack 0
  2693                           
  2694                           ; 2 bytes @ 0x1A
  2695  00001B                     	ds	1
  2696  00001C                     TFT_DrawFillRect@x:
  2697                           	opt callstack 0
  2698  00001C                     TFT_FillScreen@color:
  2699                           	opt callstack 0
  2700                           
  2701                           ; 2 bytes @ 0x1B
  2702  00001C                     	ds	1
  2703  00001D                     ??_TFT_DrawLine:
  2704  00001D                     A6_Command@responseLen:
  2705                           	opt callstack 0
  2706                           
  2707                           ; 1 bytes @ 0x1C
  2708  00001D                     	ds	1
  2709  00001E                     ??_TFT_Init:
  2710  00001E                     atol@c:
  2711                           	opt callstack 0
  2712  00001E                     TFT_DrawFillRect@y:
  2713                           	opt callstack 0
  2714                           
  2715                           ; 2 bytes @ 0x1D
  2716  00001E                     	ds	1
  2717  00001F                     A6_Command@t:
  2718                           	opt callstack 0
  2719                           
  2720                           ; 4 bytes @ 0x1E
  2721  00001F                     	ds	1
  2722  000020                     TFT_Init@data:
  2723                           	opt callstack 0
  2724  000020                     TFT_DrawLine@t:
  2725                           	opt callstack 0
  2726  000020                     TFT_DrawFillRect@w:
  2727                           	opt callstack 0
  2728                           
  2729                           ; 2 bytes @ 0x1F
  2730  000020                     	ds	2
  2731  000022                     TFT_Init@initSequenceSize:
  2732                           	opt callstack 0
  2733  000022                     TFT_DrawLine@t_760:
  2734                           	opt callstack 0
  2735  000022                     TFT_DrawFillRect@h:
  2736                           	opt callstack 0
  2737                           
  2738                           ; 2 bytes @ 0x21
  2739  000022                     	ds	1
  2740  000023                     ?_A6_SpeedGet:
  2741                           	opt callstack 0
  2742  000023                     A6_IsAlive@response:
  2743                           	opt callstack 0
  2744                           
  2745                           ; 32 bytes @ 0x22
  2746  000023                     	ds	1
  2747  000024                     TFT_Init@cmd:
  2748                           	opt callstack 0
  2749  000024                     TFT_DrawLine@t_761:
  2750                           	opt callstack 0
  2751  000024                     TFT_DrawFillRect@color:
  2752                           	opt callstack 0
  2753                           
  2754                           ; 2 bytes @ 0x23
  2755  000024                     	ds	2
  2756  000026                     ??_TFT_DrawFillRect:
  2757  000026                     TFT_Init@i:
  2758                           	opt callstack 0
  2759  000026                     TFT_DrawLine@t_762:
  2760                           	opt callstack 0
  2761                           
  2762                           ; 2 bytes @ 0x25
  2763  000026                     	ds	1
  2764  000027                     A6_SpeedGet@response:
  2765                           	opt callstack 0
  2766                           
  2767                           ; 32 bytes @ 0x26
  2768  000027                     	ds	1
  2769  000028                     TFT_DrawLine@dy:
  2770                           	opt callstack 0
  2771                           
  2772                           ; 2 bytes @ 0x27
  2773  000028                     	ds	2
  2774  00002A                     TFT_DrawLine@ystep:
  2775                           	opt callstack 0
  2776  00002A                     TFT_DrawChar@x:
  2777                           	opt callstack 0
  2778                           
  2779                           ; 2 bytes @ 0x29
  2780  00002A                     	ds	2
  2781  00002C                     TFT_DrawLine@err:
  2782                           	opt callstack 0
  2783  00002C                     TFT_DrawChar@y:
  2784                           	opt callstack 0
  2785                           
  2786                           ; 2 bytes @ 0x2B
  2787  00002C                     	ds	2
  2788  00002E                     TFT_DrawChar@c:
  2789                           	opt callstack 0
  2790  00002E                     TFT_DrawLine@steep:
  2791                           	opt callstack 0
  2792                           
  2793                           ; 2 bytes @ 0x2D
  2794  00002E                     	ds	1
  2795  00002F                     TFT_DrawChar@color:
  2796                           	opt callstack 0
  2797                           
  2798                           ; 2 bytes @ 0x2E
  2799  00002F                     	ds	1
  2800  000030                     TFT_DrawLine@dx:
  2801                           	opt callstack 0
  2802                           
  2803                           ; 2 bytes @ 0x2F
  2804  000030                     	ds	1
  2805  000031                     TFT_DrawChar@bg:
  2806                           	opt callstack 0
  2807                           
  2808                           ; 2 bytes @ 0x30
  2809  000031                     	ds	2
  2810  000033                     TFT_DrawChar@size:
  2811                           	opt callstack 0
  2812                           
  2813                           ; 1 bytes @ 0x32
  2814  000033                     	ds	1
  2815  000034                     ??_TFT_DrawChar:
  2816                           
  2817                           ; 1 bytes @ 0x33
  2818  000034                     	ds	4
  2819  000038                     TFT_DrawChar@line:
  2820                           	opt callstack 0
  2821                           
  2822                           ; 1 bytes @ 0x37
  2823  000038                     	ds	1
  2824  000039                     _TFT_DrawChar$2092:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x38
  2828  000039                     	ds	2
  2829  00003B                     _TFT_DrawChar$2093:
  2830                           	opt callstack 0
  2831                           
  2832                           ; 2 bytes @ 0x3A
  2833  00003B                     	ds	2
  2834  00003D                     TFT_DrawChar@j:
  2835                           	opt callstack 0
  2836                           
  2837                           ; 1 bytes @ 0x3C
  2838  00003D                     	ds	1
  2839  00003E                     TFT_DrawChar@i:
  2840                           	opt callstack 0
  2841                           
  2842                           ; 1 bytes @ 0x3D
  2843  00003E                     	ds	1
  2844  00003F                     TFT_DrawString@x:
  2845                           	opt callstack 0
  2846                           
  2847                           ; 2 bytes @ 0x3E
  2848  00003F                     	ds	2
  2849  000041                     TFT_DrawString@y:
  2850                           	opt callstack 0
  2851                           
  2852                           ; 2 bytes @ 0x40
  2853  000041                     	ds	2
  2854  000043                     A6_IsAlive@loop:
  2855                           	opt callstack 0
  2856  000043                     TFT_DrawString@str:
  2857                           	opt callstack 0
  2858                           
  2859                           ; 2 bytes @ 0x42
  2860  000043                     	ds	2
  2861  000045                     TFT_DrawString@color:
  2862                           	opt callstack 0
  2863                           
  2864                           ; 2 bytes @ 0x44
  2865  000045                     	ds	2
  2866  000047                     A6_SpeedGet@loop:
  2867                           	opt callstack 0
  2868  000047                     TFT_DrawString@bg:
  2869                           	opt callstack 0
  2870                           
  2871                           ; 2 bytes @ 0x46
  2872  000047                     	ds	1
  2873  000048                     A6_SpeedGet@speed:
  2874                           	opt callstack 0
  2875                           
  2876                           ; 4 bytes @ 0x47
  2877  000048                     	ds	1
  2878  000049                     TFT_DrawString@size:
  2879                           	opt callstack 0
  2880                           
  2881                           ; 1 bytes @ 0x48
  2882  000049                     	ds	1
  2883  00004A                     printLine@str:
  2884                           	opt callstack 0
  2885                           
  2886                           ; 2 bytes @ 0x49
  2887  00004A                     	ds	2
  2888  00004C                     printLine@color:
  2889                           	opt callstack 0
  2890  00004C                     A6_SpeedGet@speedToken:
  2891                           	opt callstack 0
  2892                           
  2893                           ; 2 bytes @ 0x4B
  2894  00004C                     	ds	2
  2895  00004E                     A6_SpeedGet@j:
  2896                           	opt callstack 0
  2897                           
  2898                           ; 1 bytes @ 0x4D
  2899  00004E                     	ds	1
  2900  00004F                     ??_sprintf:
  2901                           
  2902                           ; 1 bytes @ 0x4E
  2903  00004F                     	ds	4
  2904  000053                     
  2905                           ; 1 bytes @ 0x52
  2906 ;;
  2907 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2908 ;;
  2909 ;; *************** function _main *****************
  2910 ;; Defined at:
  2911 ;;		line 19 in file "main.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2928 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2929 ;;Total ram usage:        0 bytes
  2930 ;; Hardware stack levels required when called:   11
  2931 ;; This function calls:
  2932 ;;		_A6_Init
  2933 ;;		_EUSART_Init
  2934 ;;		_Ecg_Init
  2935 ;;		_TFT_Init
  2936 ;;		_init
  2937 ;;		_loop
  2938 ;; This function is called by:
  2939 ;;		Startup code after reset
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text0
  2944  00247E                     __ptext0:
  2945                           	opt callstack 0
  2946  00247E                     _main:
  2947                           	opt callstack 20
  2948  00247E                     
  2949                           ;main.c: 21: init();
  2950  00247E  ECCE  F00E         	call	_init	;wreg free
  2951  002482                     
  2952                           ;main.c: 22: TFT_Init();
  2953  002482  ECCC  F009         	call	_TFT_Init	;wreg free
  2954  002486                     
  2955                           ;main.c: 23: EUSART_Init();
  2956  002486  EC3E  F00F         	call	_EUSART_Init	;wreg free
  2957  00248A                     
  2958                           ;main.c: 24: Ecg_Init();
  2959  00248A  ECEC  F011         	call	_Ecg_Init	;wreg free
  2960  00248E                     
  2961                           ;main.c: 25: A6_Init();
  2962  00248E  EC6E  F012         	call	_A6_Init	;wreg free
  2963  002492                     l4772:
  2964  002492  EC09  F000         	call	_loop	;wreg free
  2965  002496  EF49  F012         	goto	l4772
  2966  00249A  EF07  F000         	goto	start
  2967  00249E                     __end_of_main:
  2968                           	opt callstack 0
  2969                           
  2970 ;; *************** function _loop *****************
  2971 ;; Defined at:
  2972 ;;		line 35 in file "main.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  zzzz           32   32[BANK1 ] unsigned char [32]
  2977 ;;  response       32    0[BANK1 ] unsigned char [32]
  2978 ;;  zzzz           32   64[BANK1 ] unsigned char [32]
  2979 ;;  zz              4  100[BANK1 ] unsigned long 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0
  2990 ;;      Locals:         0       0     104       0       0       0       0       0       0
  2991 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2992 ;;      Totals:         0       4     104       0       0       0       0       0       0
  2993 ;;Total ram usage:      108 bytes
  2994 ;; Hardware stack levels used:    1
  2995 ;; Hardware stack levels required when called:   10
  2996 ;; This function calls:
  2997 ;;		_A6_Command
  2998 ;;		_A6_IsAlive
  2999 ;;		_A6_SpeedAutoDetect
  3000 ;;		_A6_SpeedGet
  3001 ;;		_A6_SpeedSet
  3002 ;;		_printLine
  3003 ;;		_sprintf
  3004 ;; This function is called by:
  3005 ;;		_main
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text1
  3010  000012                     __ptext1:
  3011                           	opt callstack 0
  3012  000012                     _loop:
  3013                           	opt callstack 20
  3014  000012                     
  3015                           ;main.c: 40: if((MILLISECONDS > 20000) && (tmp4 < (MILLISECONDS - 20000))) {
  3016  000012  0101               	movlb	1	; () banked
  3017  000014  510F               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3018  000016  110E               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3019  000018  E10B               	bnz	u3590
  3020  00001A  0E21               	movlw	33
  3021  00001C  5D0C               	subwf	_MILLISECONDS& (0+255),w,b
  3022  00001E  0E4E               	movlw	78
  3023  000020  590D               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3024  000022  A0D8               	btfss	status,0,c
  3025  000024  EF16  F000         	goto	u3591
  3026  000028  EF18  F000         	goto	u3590
  3027  00002C                     u3591:
  3028  00002C  EF79  F001         	goto	l4702
  3029  000030                     u3590:
  3030  000030                     
  3031                           ; BSR set to: 1
  3032  000030  0EE0               	movlw	224
  3033  000032  250C               	addwf	_MILLISECONDS& (0+255),w,b
  3034  000034  0100               	movlb	0	; () banked
  3035  000036  6FB0               	movwf	??_loop& (0+255),b
  3036  000038  0EB1               	movlw	177
  3037  00003A  0101               	movlb	1	; () banked
  3038  00003C  210D               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3039  00003E  0100               	movlb	0	; () banked
  3040  000040  6FB1               	movwf	(??_loop+1)& (0+255),b
  3041  000042  0EFF               	movlw	255
  3042  000044  0101               	movlb	1	; () banked
  3043  000046  210E               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3044  000048  0100               	movlb	0	; () banked
  3045  00004A  6FB2               	movwf	(??_loop+2)& (0+255),b
  3046  00004C  0EFF               	movlw	255
  3047  00004E  0101               	movlb	1	; () banked
  3048  000050  210F               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3049  000052  0100               	movlb	0	; () banked
  3050  000054  6FB3               	movwf	(??_loop+3)& (0+255),b
  3051  000056  51B0               	movf	??_loop& (0+255),w,b
  3052  000058  0101               	movlb	1	; () banked
  3053  00005A  5D00               	subwf	_tmp4& (0+255),w,b
  3054  00005C  0100               	movlb	0	; () banked
  3055  00005E  51B1               	movf	(??_loop+1)& (0+255),w,b
  3056  000060  0101               	movlb	1	; () banked
  3057  000062  5901               	subwfb	(_tmp4+1)& (0+255),w,b
  3058  000064  0100               	movlb	0	; () banked
  3059  000066  51B2               	movf	(??_loop+2)& (0+255),w,b
  3060  000068  0101               	movlb	1	; () banked
  3061  00006A  5902               	subwfb	(_tmp4+2)& (0+255),w,b
  3062  00006C  0100               	movlb	0	; () banked
  3063  00006E  51B3               	movf	(??_loop+3)& (0+255),w,b
  3064  000070  0101               	movlb	1	; () banked
  3065  000072  5903               	subwfb	(_tmp4+3)& (0+255),w,b
  3066  000074  B0D8               	btfsc	status,0,c
  3067  000076  EF3F  F000         	goto	u3601
  3068  00007A  EF41  F000         	goto	u3600
  3069  00007E                     u3601:
  3070  00007E  EF79  F001         	goto	l4702
  3071  000082                     u3600:
  3072  000082                     
  3073                           ; BSR set to: 1
  3074                           ;main.c: 41: tmp4 = MILLISECONDS;
  3075  000082  C10C  F100         	movff	_MILLISECONDS,_tmp4
  3076  000086  C10D  F101         	movff	_MILLISECONDS+1,_tmp4+1
  3077  00008A  C10E  F102         	movff	_MILLISECONDS+2,_tmp4+2
  3078  00008E  C10F  F103         	movff	_MILLISECONDS+3,_tmp4+3
  3079  000092                     
  3080                           ; BSR set to: 1
  3081                           ;main.c: 43: char zzzz[32];;main.c: 44: sprintf(zzzz, "Change speed (%lu)", A6_SpeedGet(
      +                          ));
  3082  000092  0EB4               	movlw	low loop@zzzz
  3083  000094  0100               	movlb	0	; () banked
  3084  000096  6F60               	movwf	sprintf@sp& (0+255),b
  3085  000098  0E01               	movlw	high loop@zzzz
  3086  00009A  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  3087  00009C  0E6B               	movlw	low STR_1
  3088  00009E  6F62               	movwf	sprintf@f& (0+255),b
  3089  0000A0  0E5F               	movlw	high STR_1
  3090  0000A2  6F63               	movwf	(sprintf@f+1)& (0+255),b
  3091  0000A4  ECF8  F006         	call	_A6_SpeedGet	;wreg free
  3092  0000A8  C023  F064         	movff	?_A6_SpeedGet,?_sprintf+4
  3093  0000AC  C024  F065         	movff	?_A6_SpeedGet+1,?_sprintf+5
  3094  0000B0  C025  F066         	movff	?_A6_SpeedGet+2,?_sprintf+6
  3095  0000B4  C026  F067         	movff	?_A6_SpeedGet+3,?_sprintf+7
  3096  0000B8  EC4F  F002         	call	_sprintf	;wreg free
  3097  0000BC                     
  3098                           ;main.c: 45: printLine(zzzz, 0xFFE0);
  3099  0000BC  0EB4               	movlw	low loop@zzzz
  3100  0000BE  6E4A               	movwf	printLine@str^0,c
  3101  0000C0  0E01               	movlw	high loop@zzzz
  3102  0000C2  6E4B               	movwf	(printLine@str+1)^0,c
  3103  0000C4  0EFF               	movlw	255
  3104  0000C6  6E4D               	movwf	(printLine@color+1)^0,c
  3105  0000C8  0EE0               	movlw	224
  3106  0000CA  6E4C               	movwf	printLine@color^0,c
  3107  0000CC  EC0F  F010         	call	_printLine	;wreg free
  3108  0000D0                     
  3109                           ;main.c: 47: uint32_t zz = 0;
  3110  0000D0  0E00               	movlw	0
  3111  0000D2  0101               	movlb	1	; () banked
  3112  0000D4  6FD8               	movwf	loop@zz& (0+255),b
  3113  0000D6  0E00               	movlw	0
  3114  0000D8  6FD9               	movwf	(loop@zz+1)& (0+255),b
  3115  0000DA  0E00               	movlw	0
  3116  0000DC  6FDA               	movwf	(loop@zz+2)& (0+255),b
  3117  0000DE  0E00               	movlw	0
  3118  0000E0  6FDB               	movwf	(loop@zz+3)& (0+255),b
  3119                           
  3120                           ;main.c: 48: switch(A6_SpeedGet()) {
  3121  0000E2  EFD5  F000         	goto	l4676
  3122  0000E6                     l4662:
  3123                           
  3124                           ;main.c: 50: zz = A6_SpeedSet(115200);
  3125  0000E6  0E00               	movlw	0
  3126  0000E8  0100               	movlb	0	; () banked
  3127  0000EA  6F74               	movwf	A6_SpeedSet@speed& (0+255),b
  3128  0000EC  0EC2               	movlw	194
  3129  0000EE  6F75               	movwf	(A6_SpeedSet@speed+1)& (0+255),b
  3130  0000F0  0E01               	movlw	1
  3131  0000F2  6F76               	movwf	(A6_SpeedSet@speed+2)& (0+255),b
  3132  0000F4  0E00               	movlw	0
  3133  0000F6  6F77               	movwf	(A6_SpeedSet@speed+3)& (0+255),b
  3134  0000F8  ECA9  F007         	call	_A6_SpeedSet	;wreg free
  3135  0000FC  C074  F1D8         	movff	?_A6_SpeedSet,loop@zz
  3136  000100  C075  F1D9         	movff	?_A6_SpeedSet+1,loop@zz+1
  3137  000104  C076  F1DA         	movff	?_A6_SpeedSet+2,loop@zz+2
  3138  000108  C077  F1DB         	movff	?_A6_SpeedSet+3,loop@zz+3
  3139                           
  3140                           ;main.c: 51: break;
  3141  00010C  EF10  F001         	goto	l4678
  3142  000110                     l4664:
  3143                           
  3144                           ;main.c: 53: zz = A6_SpeedSet(9600);
  3145  000110  0E80               	movlw	128
  3146  000112  0100               	movlb	0	; () banked
  3147  000114  6F74               	movwf	A6_SpeedSet@speed& (0+255),b
  3148  000116  0E25               	movlw	37
  3149  000118  6F75               	movwf	(A6_SpeedSet@speed+1)& (0+255),b
  3150  00011A  0E00               	movlw	0
  3151  00011C  6F76               	movwf	(A6_SpeedSet@speed+2)& (0+255),b
  3152  00011E  0E00               	movlw	0
  3153  000120  6F77               	movwf	(A6_SpeedSet@speed+3)& (0+255),b
  3154  000122  ECA9  F007         	call	_A6_SpeedSet	;wreg free
  3155  000126  C074  F1D8         	movff	?_A6_SpeedSet,loop@zz
  3156  00012A  C075  F1D9         	movff	?_A6_SpeedSet+1,loop@zz+1
  3157  00012E  C076  F1DA         	movff	?_A6_SpeedSet+2,loop@zz+2
  3158  000132  C077  F1DB         	movff	?_A6_SpeedSet+3,loop@zz+3
  3159                           
  3160                           ;main.c: 54: break;
  3161  000136  EF10  F001         	goto	l4678
  3162  00013A                     l4666:
  3163                           
  3164                           ;main.c: 56: zz = A6_SpeedSet(57600);
  3165  00013A  0E00               	movlw	0
  3166  00013C  0100               	movlb	0	; () banked
  3167  00013E  6F74               	movwf	A6_SpeedSet@speed& (0+255),b
  3168  000140  0EE1               	movlw	225
  3169  000142  6F75               	movwf	(A6_SpeedSet@speed+1)& (0+255),b
  3170  000144  0E00               	movlw	0
  3171  000146  6F76               	movwf	(A6_SpeedSet@speed+2)& (0+255),b
  3172  000148  0E00               	movlw	0
  3173  00014A  6F77               	movwf	(A6_SpeedSet@speed+3)& (0+255),b
  3174  00014C  ECA9  F007         	call	_A6_SpeedSet	;wreg free
  3175  000150  C074  F1D8         	movff	?_A6_SpeedSet,loop@zz
  3176  000154  C075  F1D9         	movff	?_A6_SpeedSet+1,loop@zz+1
  3177  000158  C076  F1DA         	movff	?_A6_SpeedSet+2,loop@zz+2
  3178  00015C  C077  F1DB         	movff	?_A6_SpeedSet+3,loop@zz+3
  3179                           
  3180                           ;main.c: 57: break;
  3181  000160  EF10  F001         	goto	l4678
  3182  000164                     l4668:
  3183                           
  3184                           ;main.c: 59: sprintf(zzzz, "Invalid current speed (%lu)", A6_SpeedGet());
  3185  000164  0EB4               	movlw	low loop@zzzz
  3186  000166  0100               	movlb	0	; () banked
  3187  000168  6F60               	movwf	sprintf@sp& (0+255),b
  3188  00016A  0E01               	movlw	high loop@zzzz
  3189  00016C  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  3190  00016E  0EF9               	movlw	low STR_2
  3191  000170  6F62               	movwf	sprintf@f& (0+255),b
  3192  000172  0E5E               	movlw	high STR_2
  3193  000174  6F63               	movwf	(sprintf@f+1)& (0+255),b
  3194  000176  ECF8  F006         	call	_A6_SpeedGet	;wreg free
  3195  00017A  C023  F064         	movff	?_A6_SpeedGet,?_sprintf+4
  3196  00017E  C024  F065         	movff	?_A6_SpeedGet+1,?_sprintf+5
  3197  000182  C025  F066         	movff	?_A6_SpeedGet+2,?_sprintf+6
  3198  000186  C026  F067         	movff	?_A6_SpeedGet+3,?_sprintf+7
  3199  00018A  EC4F  F002         	call	_sprintf	;wreg free
  3200  00018E                     
  3201                           ;main.c: 60: printLine(zzzz, 0xFFE0);
  3202  00018E  0EB4               	movlw	low loop@zzzz
  3203  000190  6E4A               	movwf	printLine@str^0,c
  3204  000192  0E01               	movlw	high loop@zzzz
  3205  000194  6E4B               	movwf	(printLine@str+1)^0,c
  3206  000196  0EFF               	movlw	255
  3207  000198  6E4D               	movwf	(printLine@color+1)^0,c
  3208  00019A  0EE0               	movlw	224
  3209  00019C  6E4C               	movwf	printLine@color^0,c
  3210  00019E  EC0F  F010         	call	_printLine	;wreg free
  3211  0001A2                     
  3212                           ;main.c: 61: A6_SpeedAutoDetect();
  3213  0001A2  ECA8  F00A         	call	_A6_SpeedAutoDetect	;wreg free
  3214                           
  3215                           ;main.c: 62: break;
  3216  0001A6  EF10  F001         	goto	l4678
  3217  0001AA                     l4676:
  3218                           
  3219                           ; BSR set to: 1
  3220  0001AA  ECF8  F006         	call	_A6_SpeedGet	;wreg free
  3221                           
  3222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3223                           ; Switch size 1, requested type "simple"
  3224                           ; Number of cases is 1, Range of values is 0 to 0
  3225                           ; switch strategies available:
  3226                           ; Name         Instructions Cycles
  3227                           ; simple_byte            4     3 (average)
  3228                           ;	Chosen strategy is simple_byte
  3229  0001AE  5026               	movf	(?_A6_SpeedGet+3)^0,w,c
  3230  0001B0  0A00               	xorlw	0	; case 0
  3231  0001B2  B4D8               	btfsc	status,2,c
  3232  0001B4  EF05  F001         	goto	l5008
  3233  0001B8  EFB2  F000         	goto	l4668
  3234  0001BC                     l5004:
  3235                           
  3236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3237                           ; Switch size 1, requested type "simple"
  3238                           ; Number of cases is 2, Range of values is 37 to 225
  3239                           ; switch strategies available:
  3240                           ; Name         Instructions Cycles
  3241                           ; simple_byte            7     4 (average)
  3242                           ;	Chosen strategy is simple_byte
  3243  0001BC  5024               	movf	(?_A6_SpeedGet+1)^0,w,c
  3244  0001BE  0A25               	xorlw	37	; case 37
  3245  0001C0  B4D8               	btfsc	status,2,c
  3246  0001C2  EFE9  F000         	goto	l5010
  3247  0001C6  0AC4               	xorlw	196	; case 225
  3248  0001C8  B4D8               	btfsc	status,2,c
  3249  0001CA  EFF0  F000         	goto	l5012
  3250  0001CE  EFB2  F000         	goto	l4668
  3251  0001D2                     l5010:
  3252                           
  3253                           ; Switch size 1, requested type "simple"
  3254                           ; Number of cases is 1, Range of values is 128 to 128
  3255                           ; switch strategies available:
  3256                           ; Name         Instructions Cycles
  3257                           ; simple_byte            4     3 (average)
  3258                           ;	Chosen strategy is simple_byte
  3259  0001D2  5023               	movf	?_A6_SpeedGet^0,w,c
  3260  0001D4  0A80               	xorlw	128	; case 128
  3261  0001D6  B4D8               	btfsc	status,2,c
  3262  0001D8  EF9D  F000         	goto	l4666
  3263  0001DC  EFB2  F000         	goto	l4668
  3264  0001E0                     l5012:
  3265                           
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 1, Range of values is 0 to 0
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte            4     3 (average)
  3271                           ;	Chosen strategy is simple_byte
  3272  0001E0  5023               	movf	?_A6_SpeedGet^0,w,c
  3273  0001E2  0A00               	xorlw	0	; case 0
  3274  0001E4  B4D8               	btfsc	status,2,c
  3275  0001E6  EF73  F000         	goto	l4662
  3276  0001EA  EFB2  F000         	goto	l4668
  3277  0001EE                     l5006:
  3278                           
  3279                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3280                           ; Switch size 1, requested type "simple"
  3281                           ; Number of cases is 1, Range of values is 194 to 194
  3282                           ; switch strategies available:
  3283                           ; Name         Instructions Cycles
  3284                           ; simple_byte            4     3 (average)
  3285                           ;	Chosen strategy is simple_byte
  3286  0001EE  5024               	movf	(?_A6_SpeedGet+1)^0,w,c
  3287  0001F0  0AC2               	xorlw	194	; case 194
  3288  0001F2  B4D8               	btfsc	status,2,c
  3289  0001F4  EFFE  F000         	goto	l5014
  3290  0001F8  EFB2  F000         	goto	l4668
  3291  0001FC                     l5014:
  3292                           
  3293                           ; Switch size 1, requested type "simple"
  3294                           ; Number of cases is 1, Range of values is 0 to 0
  3295                           ; switch strategies available:
  3296                           ; Name         Instructions Cycles
  3297                           ; simple_byte            4     3 (average)
  3298                           ;	Chosen strategy is simple_byte
  3299  0001FC  5023               	movf	?_A6_SpeedGet^0,w,c
  3300  0001FE  0A00               	xorlw	0	; case 0
  3301  000200  B4D8               	btfsc	status,2,c
  3302  000202  EF88  F000         	goto	l4664
  3303  000206  EFB2  F000         	goto	l4668
  3304  00020A                     l5008:
  3305                           
  3306                           ; Switch size 1, requested type "simple"
  3307                           ; Number of cases is 2, Range of values is 0 to 1
  3308                           ; switch strategies available:
  3309                           ; Name         Instructions Cycles
  3310                           ; simple_byte            7     4 (average)
  3311                           ;	Chosen strategy is simple_byte
  3312  00020A  5025               	movf	(?_A6_SpeedGet+2)^0,w,c
  3313  00020C  0A00               	xorlw	0	; case 0
  3314  00020E  B4D8               	btfsc	status,2,c
  3315  000210  EFDE  F000         	goto	l5004
  3316  000214  0A01               	xorlw	1	; case 1
  3317  000216  B4D8               	btfsc	status,2,c
  3318  000218  EFF7  F000         	goto	l5006
  3319  00021C  EFB2  F000         	goto	l4668
  3320  000220                     l4678:
  3321                           
  3322                           ;main.c: 65: sprintf(zzzz, "Speed changed (-> %lu)", zz);
  3323  000220  0EB4               	movlw	low loop@zzzz
  3324  000222  0100               	movlb	0	; () banked
  3325  000224  6F60               	movwf	sprintf@sp& (0+255),b
  3326  000226  0E01               	movlw	high loop@zzzz
  3327  000228  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  3328  00022A  0E15               	movlw	low STR_3
  3329  00022C  6F62               	movwf	sprintf@f& (0+255),b
  3330  00022E  0E5F               	movlw	high STR_3
  3331  000230  6F63               	movwf	(sprintf@f+1)& (0+255),b
  3332  000232  C1D8  F064         	movff	loop@zz,?_sprintf+4
  3333  000236  C1D9  F065         	movff	loop@zz+1,?_sprintf+5
  3334  00023A  C1DA  F066         	movff	loop@zz+2,?_sprintf+6
  3335  00023E  C1DB  F067         	movff	loop@zz+3,?_sprintf+7
  3336  000242  EC4F  F002         	call	_sprintf	;wreg free
  3337  000246                     
  3338                           ;main.c: 66: printLine(((zz == 0) ? "Error changing speed" : zzzz), 0xF81F);
  3339  000246  0101               	movlb	1	; () banked
  3340  000248  51D8               	movf	loop@zz& (0+255),w,b
  3341  00024A  11D9               	iorwf	(loop@zz+1)& (0+255),w,b
  3342  00024C  11DA               	iorwf	(loop@zz+2)& (0+255),w,b
  3343  00024E  11DB               	iorwf	(loop@zz+3)& (0+255),w,b
  3344  000250  B4D8               	btfsc	status,2,c
  3345  000252  EF2D  F001         	goto	u3611
  3346  000256  EF2F  F001         	goto	u3610
  3347  00025A                     u3611:
  3348  00025A  EF35  F001         	goto	l4684
  3349  00025E                     u3610:
  3350  00025E                     
  3351                           ; BSR set to: 1
  3352  00025E  0EB4               	movlw	low loop@zzzz
  3353  000260  6FD4               	movwf	_loop$146& (0+255),b
  3354  000262  0E01               	movlw	high loop@zzzz
  3355  000264  6FD5               	movwf	(_loop$146+1)& (0+255),b
  3356  000266  EF39  F001         	goto	l4686
  3357  00026A                     l4684:
  3358                           
  3359                           ; BSR set to: 1
  3360  00026A  0E43               	movlw	low STR_4
  3361  00026C  6FD4               	movwf	_loop$146& (0+255),b
  3362  00026E  0E5F               	movlw	high STR_4
  3363  000270  6FD5               	movwf	(_loop$146+1)& (0+255),b
  3364  000272                     l4686:
  3365                           
  3366                           ; BSR set to: 1
  3367  000272  C1D4  F04A         	movff	_loop$146,printLine@str
  3368  000276  C1D5  F04B         	movff	_loop$146+1,printLine@str+1
  3369  00027A  0EF8               	movlw	248
  3370  00027C  6E4D               	movwf	(printLine@color+1)^0,c
  3371  00027E  0E1F               	movlw	31
  3372  000280  6E4C               	movwf	printLine@color^0,c
  3373  000282  EC0F  F010         	call	_printLine	;wreg free
  3374  000286                     
  3375                           ;main.c: 68: if(A6_IsAlive() == 0) {
  3376  000286  EC1A  F00E         	call	_A6_IsAlive	;wreg free
  3377  00028A  0900               	iorlw	0
  3378  00028C  A4D8               	btfss	status,2,c
  3379  00028E  EF4B  F001         	goto	u3621
  3380  000292  EF4D  F001         	goto	u3620
  3381  000296                     u3621:
  3382  000296  EF79  F001         	goto	l4702
  3383  00029A                     u3620:
  3384  00029A                     
  3385                           ;main.c: 69: printLine("Comm is dead. Retry...", 0x001F);
  3386  00029A  0E2C               	movlw	low STR_5
  3387  00029C  6E4A               	movwf	printLine@str^0,c
  3388  00029E  0E5F               	movlw	high STR_5
  3389  0002A0  6E4B               	movwf	(printLine@str+1)^0,c
  3390  0002A2  0E00               	movlw	0
  3391  0002A4  6E4D               	movwf	(printLine@color+1)^0,c
  3392  0002A6  0E1F               	movlw	31
  3393  0002A8  6E4C               	movwf	printLine@color^0,c
  3394  0002AA  EC0F  F010         	call	_printLine	;wreg free
  3395  0002AE                     
  3396                           ;main.c: 70: A6_SpeedAutoDetect();
  3397  0002AE  ECA8  F00A         	call	_A6_SpeedAutoDetect	;wreg free
  3398  0002B2                     
  3399                           ;main.c: 71: printLine(((A6_IsAlive() == 0) ? "Still dead" : "Resurrected!"), 0x001F);
  3400  0002B2  EC1A  F00E         	call	_A6_IsAlive	;wreg free
  3401  0002B6  0900               	iorlw	0
  3402  0002B8  B4D8               	btfsc	status,2,c
  3403  0002BA  EF61  F001         	goto	u3631
  3404  0002BE  EF63  F001         	goto	u3630
  3405  0002C2                     u3631:
  3406  0002C2  EF6A  F001         	goto	l4698
  3407  0002C6                     u3630:
  3408  0002C6  0E7E               	movlw	low STR_7
  3409  0002C8  0101               	movlb	1	; () banked
  3410  0002CA  6FD6               	movwf	_loop$151& (0+255),b
  3411  0002CC  0E5F               	movlw	high STR_7
  3412  0002CE  6FD7               	movwf	(_loop$151+1)& (0+255),b
  3413  0002D0  EF6F  F001         	goto	l4700
  3414  0002D4                     l4698:
  3415  0002D4  0EB9               	movlw	low STR_6
  3416  0002D6  0101               	movlb	1	; () banked
  3417  0002D8  6FD6               	movwf	_loop$151& (0+255),b
  3418  0002DA  0E5F               	movlw	high STR_6
  3419  0002DC  6FD7               	movwf	(_loop$151+1)& (0+255),b
  3420  0002DE                     l4700:
  3421                           
  3422                           ; BSR set to: 1
  3423  0002DE  C1D6  F04A         	movff	_loop$151,printLine@str
  3424  0002E2  C1D7  F04B         	movff	_loop$151+1,printLine@str+1
  3425  0002E6  0E00               	movlw	0
  3426  0002E8  6E4D               	movwf	(printLine@color+1)^0,c
  3427  0002EA  0E1F               	movlw	31
  3428  0002EC  6E4C               	movwf	printLine@color^0,c
  3429  0002EE  EC0F  F010         	call	_printLine	;wreg free
  3430  0002F2                     l4702:
  3431                           
  3432                           ;main.c: 72: };main.c: 73: };main.c: 75: if((MILLISECONDS > 2500) && (tmp1 < (MILLISECON
      +                          DS - 2500))) {
  3433  0002F2  0101               	movlb	1	; () banked
  3434  0002F4  510F               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3435  0002F6  110E               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3436  0002F8  E10B               	bnz	u3640
  3437  0002FA  0EC5               	movlw	197
  3438  0002FC  5D0C               	subwf	_MILLISECONDS& (0+255),w,b
  3439  0002FE  0E09               	movlw	9
  3440  000300  590D               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3441  000302  A0D8               	btfss	status,0,c
  3442  000304  EF86  F001         	goto	u3641
  3443  000308  EF88  F001         	goto	u3640
  3444  00030C                     u3641:
  3445  00030C  EFE5  F001         	goto	l4714
  3446  000310                     u3640:
  3447  000310                     
  3448                           ; BSR set to: 1
  3449  000310  0E3C               	movlw	60
  3450  000312  250C               	addwf	_MILLISECONDS& (0+255),w,b
  3451  000314  0100               	movlb	0	; () banked
  3452  000316  6FB0               	movwf	??_loop& (0+255),b
  3453  000318  0EF6               	movlw	246
  3454  00031A  0101               	movlb	1	; () banked
  3455  00031C  210D               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3456  00031E  0100               	movlb	0	; () banked
  3457  000320  6FB1               	movwf	(??_loop+1)& (0+255),b
  3458  000322  0EFF               	movlw	255
  3459  000324  0101               	movlb	1	; () banked
  3460  000326  210E               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3461  000328  0100               	movlb	0	; () banked
  3462  00032A  6FB2               	movwf	(??_loop+2)& (0+255),b
  3463  00032C  0EFF               	movlw	255
  3464  00032E  0101               	movlb	1	; () banked
  3465  000330  210F               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3466  000332  0100               	movlb	0	; () banked
  3467  000334  6FB3               	movwf	(??_loop+3)& (0+255),b
  3468  000336  51B0               	movf	??_loop& (0+255),w,b
  3469  000338  0101               	movlb	1	; () banked
  3470  00033A  5D08               	subwf	_tmp1& (0+255),w,b
  3471  00033C  0100               	movlb	0	; () banked
  3472  00033E  51B1               	movf	(??_loop+1)& (0+255),w,b
  3473  000340  0101               	movlb	1	; () banked
  3474  000342  5909               	subwfb	(_tmp1+1)& (0+255),w,b
  3475  000344  0100               	movlb	0	; () banked
  3476  000346  51B2               	movf	(??_loop+2)& (0+255),w,b
  3477  000348  0101               	movlb	1	; () banked
  3478  00034A  590A               	subwfb	(_tmp1+2)& (0+255),w,b
  3479  00034C  0100               	movlb	0	; () banked
  3480  00034E  51B3               	movf	(??_loop+3)& (0+255),w,b
  3481  000350  0101               	movlb	1	; () banked
  3482  000352  590B               	subwfb	(_tmp1+3)& (0+255),w,b
  3483  000354  B0D8               	btfsc	status,0,c
  3484  000356  EFAF  F001         	goto	u3651
  3485  00035A  EFB1  F001         	goto	u3650
  3486  00035E                     u3651:
  3487  00035E  EFE5  F001         	goto	l4714
  3488  000362                     u3650:
  3489  000362                     
  3490                           ; BSR set to: 1
  3491                           ;main.c: 76: tmp1 = MILLISECONDS;
  3492  000362  C10C  F108         	movff	_MILLISECONDS,_tmp1
  3493  000366  C10D  F109         	movff	_MILLISECONDS+1,_tmp1+1
  3494  00036A  C10E  F10A         	movff	_MILLISECONDS+2,_tmp1+2
  3495  00036E  C10F  F10B         	movff	_MILLISECONDS+3,_tmp1+3
  3496  000372                     
  3497                           ; BSR set to: 1
  3498                           ;main.c: 78: printLine("Check time", 0xFFE0);
  3499  000372  0EC4               	movlw	low STR_8
  3500  000374  6E4A               	movwf	printLine@str^0,c
  3501  000376  0E5F               	movlw	high STR_8
  3502  000378  6E4B               	movwf	(printLine@str+1)^0,c
  3503  00037A  0EFF               	movlw	255
  3504  00037C  6E4D               	movwf	(printLine@color+1)^0,c
  3505  00037E  0EE0               	movlw	224
  3506  000380  6E4C               	movwf	printLine@color^0,c
  3507  000382  EC0F  F010         	call	_printLine	;wreg free
  3508  000386                     
  3509                           ;main.c: 79: char response[32];;main.c: 80: A6_Command("AT+CCLK?\r", "aa", "bb", 0, resp
      +                          onse, 32);
  3510  000386  0ECF               	movlw	low STR_9
  3511  000388  6E13               	movwf	A6_Command@command^0,c
  3512  00038A  0E5F               	movlw	high STR_9
  3513  00038C  6E14               	movwf	(A6_Command@command+1)^0,c
  3514  00038E  0EF8               	movlw	low STR_10
  3515  000390  6E15               	movwf	A6_Command@resp1^0,c
  3516  000392  0E5F               	movlw	high STR_10
  3517  000394  6E16               	movwf	(A6_Command@resp1+1)^0,c
  3518  000396  0EFB               	movlw	low STR_11
  3519  000398  6E17               	movwf	A6_Command@resp2^0,c
  3520  00039A  0E5F               	movlw	high STR_11
  3521  00039C  6E18               	movwf	(A6_Command@resp2+1)^0,c
  3522  00039E  0E00               	movlw	0
  3523  0003A0  6E1A               	movwf	(A6_Command@timeout+1)^0,c
  3524  0003A2  0E00               	movlw	0
  3525  0003A4  6E19               	movwf	A6_Command@timeout^0,c
  3526  0003A6  0E74               	movlw	low loop@response
  3527  0003A8  6E1B               	movwf	A6_Command@response^0,c
  3528  0003AA  0E01               	movlw	high loop@response
  3529  0003AC  6E1C               	movwf	(A6_Command@response+1)^0,c
  3530  0003AE  0E20               	movlw	32
  3531  0003B0  6E1D               	movwf	A6_Command@responseLen^0,c
  3532  0003B2  ECED  F008         	call	_A6_Command	;wreg free
  3533  0003B6                     
  3534                           ;main.c: 81: printLine(response, 0x07E0);
  3535  0003B6  0E74               	movlw	low loop@response
  3536  0003B8  6E4A               	movwf	printLine@str^0,c
  3537  0003BA  0E01               	movlw	high loop@response
  3538  0003BC  6E4B               	movwf	(printLine@str+1)^0,c
  3539  0003BE  0E07               	movlw	7
  3540  0003C0  6E4D               	movwf	(printLine@color+1)^0,c
  3541  0003C2  0EE0               	movlw	224
  3542  0003C4  6E4C               	movwf	printLine@color^0,c
  3543  0003C6  EC0F  F010         	call	_printLine	;wreg free
  3544  0003CA                     l4714:
  3545                           
  3546                           ;main.c: 82: };main.c: 84: if((MILLISECONDS > 4000) && (tmp2 < (MILLISECONDS - 4000))) {
  3547  0003CA  0101               	movlb	1	; () banked
  3548  0003CC  510F               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3549  0003CE  110E               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3550  0003D0  E10B               	bnz	u3660
  3551  0003D2  0EA1               	movlw	161
  3552  0003D4  5D0C               	subwf	_MILLISECONDS& (0+255),w,b
  3553  0003D6  0E0F               	movlw	15
  3554  0003D8  590D               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3555  0003DA  A0D8               	btfss	status,0,c
  3556  0003DC  EFF2  F001         	goto	u3661
  3557  0003E0  EFF4  F001         	goto	u3660
  3558  0003E4                     u3661:
  3559  0003E4  EF4E  F002         	goto	l87
  3560  0003E8                     u3660:
  3561  0003E8                     
  3562                           ; BSR set to: 1
  3563  0003E8  0E60               	movlw	96
  3564  0003EA  250C               	addwf	_MILLISECONDS& (0+255),w,b
  3565  0003EC  0100               	movlb	0	; () banked
  3566  0003EE  6FB0               	movwf	??_loop& (0+255),b
  3567  0003F0  0EF0               	movlw	240
  3568  0003F2  0101               	movlb	1	; () banked
  3569  0003F4  210D               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3570  0003F6  0100               	movlb	0	; () banked
  3571  0003F8  6FB1               	movwf	(??_loop+1)& (0+255),b
  3572  0003FA  0EFF               	movlw	255
  3573  0003FC  0101               	movlb	1	; () banked
  3574  0003FE  210E               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3575  000400  0100               	movlb	0	; () banked
  3576  000402  6FB2               	movwf	(??_loop+2)& (0+255),b
  3577  000404  0EFF               	movlw	255
  3578  000406  0101               	movlb	1	; () banked
  3579  000408  210F               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3580  00040A  0100               	movlb	0	; () banked
  3581  00040C  6FB3               	movwf	(??_loop+3)& (0+255),b
  3582  00040E  51B0               	movf	??_loop& (0+255),w,b
  3583  000410  0101               	movlb	1	; () banked
  3584  000412  5D04               	subwf	_tmp2& (0+255),w,b
  3585  000414  0100               	movlb	0	; () banked
  3586  000416  51B1               	movf	(??_loop+1)& (0+255),w,b
  3587  000418  0101               	movlb	1	; () banked
  3588  00041A  5905               	subwfb	(_tmp2+1)& (0+255),w,b
  3589  00041C  0100               	movlb	0	; () banked
  3590  00041E  51B2               	movf	(??_loop+2)& (0+255),w,b
  3591  000420  0101               	movlb	1	; () banked
  3592  000422  5906               	subwfb	(_tmp2+2)& (0+255),w,b
  3593  000424  0100               	movlb	0	; () banked
  3594  000426  51B3               	movf	(??_loop+3)& (0+255),w,b
  3595  000428  0101               	movlb	1	; () banked
  3596  00042A  5907               	subwfb	(_tmp2+3)& (0+255),w,b
  3597  00042C  B0D8               	btfsc	status,0,c
  3598  00042E  EF1B  F002         	goto	u3671
  3599  000432  EF1D  F002         	goto	u3670
  3600  000436                     u3671:
  3601  000436  EF4E  F002         	goto	l87
  3602  00043A                     u3670:
  3603  00043A                     
  3604                           ; BSR set to: 1
  3605                           ;main.c: 85: tmp2 = MILLISECONDS;
  3606  00043A  C10C  F104         	movff	_MILLISECONDS,_tmp2
  3607  00043E  C10D  F105         	movff	_MILLISECONDS+1,_tmp2+1
  3608  000442  C10E  F106         	movff	_MILLISECONDS+2,_tmp2+2
  3609  000446  C10F  F107         	movff	_MILLISECONDS+3,_tmp2+3
  3610  00044A                     
  3611                           ; BSR set to: 1
  3612                           ;main.c: 87: printLine("Check speed", 0xFFE0);
  3613  00044A  0E97               	movlw	low STR_12
  3614  00044C  6E4A               	movwf	printLine@str^0,c
  3615  00044E  0E5F               	movlw	high STR_12
  3616  000450  6E4B               	movwf	(printLine@str+1)^0,c
  3617  000452  0EFF               	movlw	255
  3618  000454  6E4D               	movwf	(printLine@color+1)^0,c
  3619  000456  0EE0               	movlw	224
  3620  000458  6E4C               	movwf	printLine@color^0,c
  3621  00045A  EC0F  F010         	call	_printLine	;wreg free
  3622  00045E                     
  3623                           ;main.c: 88: char zzzz[32];;main.c: 89: sprintf(zzzz, "%lu", A6_SpeedGet());
  3624  00045E  0E94               	movlw	low loop@zzzz_158
  3625  000460  0100               	movlb	0	; () banked
  3626  000462  6F60               	movwf	sprintf@sp& (0+255),b
  3627  000464  0E01               	movlw	high loop@zzzz_158
  3628  000466  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  3629  000468  0EF1               	movlw	low STR_13
  3630  00046A  6F62               	movwf	sprintf@f& (0+255),b
  3631  00046C  0E5F               	movlw	high STR_13
  3632  00046E  6F63               	movwf	(sprintf@f+1)& (0+255),b
  3633  000470  ECF8  F006         	call	_A6_SpeedGet	;wreg free
  3634  000474  C023  F064         	movff	?_A6_SpeedGet,?_sprintf+4
  3635  000478  C024  F065         	movff	?_A6_SpeedGet+1,?_sprintf+5
  3636  00047C  C025  F066         	movff	?_A6_SpeedGet+2,?_sprintf+6
  3637  000480  C026  F067         	movff	?_A6_SpeedGet+3,?_sprintf+7
  3638  000484  EC4F  F002         	call	_sprintf	;wreg free
  3639  000488                     
  3640                           ;main.c: 90: printLine(zzzz, 0xF800);
  3641  000488  0E94               	movlw	low loop@zzzz_158
  3642  00048A  6E4A               	movwf	printLine@str^0,c
  3643  00048C  0E01               	movlw	high loop@zzzz_158
  3644  00048E  6E4B               	movwf	(printLine@str+1)^0,c
  3645  000490  0EF8               	movlw	248
  3646  000492  6E4D               	movwf	(printLine@color+1)^0,c
  3647  000494  0E00               	movlw	0
  3648  000496  6E4C               	movwf	printLine@color^0,c
  3649  000498  EC0F  F010         	call	_printLine	;wreg free
  3650  00049C                     l87:
  3651  00049C  0012               	return		;funcret
  3652  00049E                     __end_of_loop:
  3653                           	opt callstack 0
  3654                           
  3655 ;; *************** function _A6_SpeedSet *****************
  3656 ;; Defined at:
  3657 ;;		line 56 in file "A6Lib.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  speed           4   20[BANK0 ] const unsigned long 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  response       32   24[BANK0 ] unsigned char [32]
  3662 ;;  request        20   56[BANK0 ] unsigned char [20]
  3663 ;;  currentSpeed    4   76[BANK0 ] unsigned long 
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  4   20[BANK0 ] unsigned long 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3673 ;;      Params:         0       4       0       0       0       0       0       0       0
  3674 ;;      Locals:         0      56       0       0       0       0       0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3676 ;;      Totals:         0      60       0       0       0       0       0       0       0
  3677 ;;Total ram usage:       60 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    9
  3680 ;; This function calls:
  3681 ;;		_A6_Command
  3682 ;;		_A6_IsAlive
  3683 ;;		_A6_SpeedGet
  3684 ;;		_EUSART_SetSpeed
  3685 ;;		_printLine
  3686 ;;		_sleepMS
  3687 ;;		_sprintf
  3688 ;;		_strcmp
  3689 ;; This function is called by:
  3690 ;;		_loop
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text2
  3695  000F52                     __ptext2:
  3696                           	opt callstack 0
  3697  000F52                     _A6_SpeedSet:
  3698                           	opt callstack 20
  3699  000F52                     
  3700                           ;A6Lib.c: 57: char request[20];;A6Lib.c: 58: char response[32];;A6Lib.c: 59: uint32_t cu
      +                          rrentSpeed = A6_SpeedGet();
  3701  000F52  ECF8  F006         	call	_A6_SpeedGet	;wreg free
  3702  000F56  C023  F0AC         	movff	?_A6_SpeedGet,A6_SpeedSet@currentSpeed
  3703  000F5A  C024  F0AD         	movff	?_A6_SpeedGet+1,A6_SpeedSet@currentSpeed+1
  3704  000F5E  C025  F0AE         	movff	?_A6_SpeedGet+2,A6_SpeedSet@currentSpeed+2
  3705  000F62  C026  F0AF         	movff	?_A6_SpeedGet+3,A6_SpeedSet@currentSpeed+3
  3706  000F66                     
  3707                           ;A6Lib.c: 62: if(currentSpeed == 0) return 0;
  3708  000F66  0100               	movlb	0	; () banked
  3709  000F68  51AC               	movf	A6_SpeedSet@currentSpeed& (0+255),w,b
  3710  000F6A  11AD               	iorwf	(A6_SpeedSet@currentSpeed+1)& (0+255),w,b
  3711  000F6C  11AE               	iorwf	(A6_SpeedSet@currentSpeed+2)& (0+255),w,b
  3712  000F6E  11AF               	iorwf	(A6_SpeedSet@currentSpeed+3)& (0+255),w,b
  3713  000F70  A4D8               	btfss	status,2,c
  3714  000F72  EFBD  F007         	goto	u3541
  3715  000F76  EFBF  F007         	goto	u3540
  3716  000F7A                     u3541:
  3717  000F7A  EFCA  F007         	goto	l4600
  3718  000F7E                     u3540:
  3719  000F7E                     l4596:
  3720  000F7E  0E00               	movlw	0
  3721  000F80  0100               	movlb	0	; () banked
  3722  000F82  6F74               	movwf	?_A6_SpeedSet& (0+255),b
  3723  000F84  0E00               	movlw	0
  3724  000F86  6F75               	movwf	(?_A6_SpeedSet+1)& (0+255),b
  3725  000F88  0E00               	movlw	0
  3726  000F8A  6F76               	movwf	(?_A6_SpeedSet+2)& (0+255),b
  3727  000F8C  0E00               	movlw	0
  3728  000F8E  6F77               	movwf	(?_A6_SpeedSet+3)& (0+255),b
  3729  000F90  EF4F  F008         	goto	l551
  3730  000F94                     l4600:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;A6Lib.c: 65: sprintf(request, "AT+IPR=%lu\r", speed);
  3734  000F94  0E98               	movlw	low A6_SpeedSet@request
  3735  000F96  6F60               	movwf	sprintf@sp& (0+255),b
  3736  000F98  0E00               	movlw	high A6_SpeedSet@request
  3737  000F9A  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  3738  000F9C  0E8B               	movlw	low STR_26
  3739  000F9E  6F62               	movwf	sprintf@f& (0+255),b
  3740  000FA0  0E5F               	movlw	high STR_26
  3741  000FA2  6F63               	movwf	(sprintf@f+1)& (0+255),b
  3742  000FA4  C074  F064         	movff	A6_SpeedSet@speed,?_sprintf+4
  3743  000FA8  C075  F065         	movff	A6_SpeedSet@speed+1,?_sprintf+5
  3744  000FAC  C076  F066         	movff	A6_SpeedSet@speed+2,?_sprintf+6
  3745  000FB0  C077  F067         	movff	A6_SpeedSet@speed+3,?_sprintf+7
  3746  000FB4  EC4F  F002         	call	_sprintf	;wreg free
  3747  000FB8                     
  3748                           ;A6Lib.c: 66: A6_Command(request, "aa", "bb", 0, response, 32);
  3749  000FB8  0E98               	movlw	low A6_SpeedSet@request
  3750  000FBA  6E13               	movwf	A6_Command@command^0,c
  3751  000FBC  0E00               	movlw	high A6_SpeedSet@request
  3752  000FBE  6E14               	movwf	(A6_Command@command+1)^0,c
  3753  000FC0  0EF8               	movlw	low STR_10
  3754  000FC2  6E15               	movwf	A6_Command@resp1^0,c
  3755  000FC4  0E5F               	movlw	high STR_10
  3756  000FC6  6E16               	movwf	(A6_Command@resp1+1)^0,c
  3757  000FC8  0EFB               	movlw	low STR_11
  3758  000FCA  6E17               	movwf	A6_Command@resp2^0,c
  3759  000FCC  0E5F               	movlw	high STR_11
  3760  000FCE  6E18               	movwf	(A6_Command@resp2+1)^0,c
  3761  000FD0  0E00               	movlw	0
  3762  000FD2  6E1A               	movwf	(A6_Command@timeout+1)^0,c
  3763  000FD4  0E00               	movlw	0
  3764  000FD6  6E19               	movwf	A6_Command@timeout^0,c
  3765  000FD8  0E78               	movlw	low A6_SpeedSet@response
  3766  000FDA  6E1B               	movwf	A6_Command@response^0,c
  3767  000FDC  0E00               	movlw	high A6_SpeedSet@response
  3768  000FDE  6E1C               	movwf	(A6_Command@response+1)^0,c
  3769  000FE0  0E20               	movlw	32
  3770  000FE2  6E1D               	movwf	A6_Command@responseLen^0,c
  3771  000FE4  ECED  F008         	call	_A6_Command	;wreg free
  3772  000FE8                     
  3773                           ;A6Lib.c: 67: printLine(request, 0x07E0);
  3774  000FE8  0E98               	movlw	low A6_SpeedSet@request
  3775  000FEA  6E4A               	movwf	printLine@str^0,c
  3776  000FEC  0E00               	movlw	high A6_SpeedSet@request
  3777  000FEE  6E4B               	movwf	(printLine@str+1)^0,c
  3778  000FF0  0E07               	movlw	7
  3779  000FF2  6E4D               	movwf	(printLine@color+1)^0,c
  3780  000FF4  0EE0               	movlw	224
  3781  000FF6  6E4C               	movwf	printLine@color^0,c
  3782  000FF8  EC0F  F010         	call	_printLine	;wreg free
  3783  000FFC                     
  3784                           ;A6Lib.c: 68: printLine(response, 0x07E0);
  3785  000FFC  0E78               	movlw	low A6_SpeedSet@response
  3786  000FFE  6E4A               	movwf	printLine@str^0,c
  3787  001000  0E00               	movlw	high A6_SpeedSet@response
  3788  001002  6E4B               	movwf	(printLine@str+1)^0,c
  3789  001004  0E07               	movlw	7
  3790  001006  6E4D               	movwf	(printLine@color+1)^0,c
  3791  001008  0EE0               	movlw	224
  3792  00100A  6E4C               	movwf	printLine@color^0,c
  3793  00100C  EC0F  F010         	call	_printLine	;wreg free
  3794  001010                     
  3795                           ;A6Lib.c: 69: if(strcmp(response, "OK") == 0) {
  3796  001010  0E78               	movlw	low A6_SpeedSet@response
  3797  001012  6E05               	movwf	strcmp@s1^0,c
  3798  001014  0E00               	movlw	high A6_SpeedSet@response
  3799  001016  6E06               	movwf	(strcmp@s1+1)^0,c
  3800  001018  0EF5               	movlw	low STR_20
  3801  00101A  6E07               	movwf	strcmp@s2^0,c
  3802  00101C  0E5F               	movlw	high STR_20
  3803  00101E  6E08               	movwf	(strcmp@s2+1)^0,c
  3804  001020  EC3F  F010         	call	_strcmp	;wreg free
  3805  001024  5005               	movf	?_strcmp^0,w,c
  3806  001026  1006               	iorwf	(?_strcmp+1)^0,w,c
  3807  001028  A4D8               	btfss	status,2,c
  3808  00102A  EF19  F008         	goto	u3551
  3809  00102E  EF1B  F008         	goto	u3550
  3810  001032                     u3551:
  3811  001032  EF43  F008         	goto	l4616
  3812  001036                     u3550:
  3813  001036                     
  3814                           ;A6Lib.c: 71: EUSART_SetSpeed(speed);
  3815  001036  C074  F012         	movff	A6_SpeedSet@speed,EUSART_SetSpeed@speed
  3816  00103A  C075  F013         	movff	A6_SpeedSet@speed+1,EUSART_SetSpeed@speed+1
  3817  00103E  C076  F014         	movff	A6_SpeedSet@speed+2,EUSART_SetSpeed@speed+2
  3818  001042  C077  F015         	movff	A6_SpeedSet@speed+3,EUSART_SetSpeed@speed+3
  3819  001046  EC5A  F00D         	call	_EUSART_SetSpeed	;wreg free
  3820                           
  3821                           ;A6Lib.c: 72: sleepMS(150);
  3822  00104A  0E96               	movlw	150
  3823  00104C  6E05               	movwf	sleepMS@ms^0,c
  3824  00104E  0E00               	movlw	0
  3825  001050  6E06               	movwf	(sleepMS@ms+1)^0,c
  3826  001052  0E00               	movlw	0
  3827  001054  6E07               	movwf	(sleepMS@ms+2)^0,c
  3828  001056  0E00               	movlw	0
  3829  001058  6E08               	movwf	(sleepMS@ms+3)^0,c
  3830  00105A  EC80  F011         	call	_sleepMS	;wreg free
  3831  00105E                     
  3832                           ;A6Lib.c: 73: if(A6_IsAlive() == 1) {
  3833  00105E  EC1A  F00E         	call	_A6_IsAlive	;wreg free
  3834  001062  06E8               	decf	wreg,f,c
  3835  001064  A4D8               	btfss	status,2,c
  3836  001066  EF37  F008         	goto	u3561
  3837  00106A  EF39  F008         	goto	u3560
  3838  00106E                     u3561:
  3839  00106E  EF43  F008         	goto	l4616
  3840  001072                     u3560:
  3841  001072                     
  3842                           ;A6Lib.c: 74: return speed;
  3843  001072  C074  F074         	movff	A6_SpeedSet@speed,?_A6_SpeedSet
  3844  001076  C075  F075         	movff	A6_SpeedSet@speed+1,?_A6_SpeedSet+1
  3845  00107A  C076  F076         	movff	A6_SpeedSet@speed+2,?_A6_SpeedSet+2
  3846  00107E  C077  F077         	movff	A6_SpeedSet@speed+3,?_A6_SpeedSet+3
  3847  001082  EF4F  F008         	goto	l551
  3848  001086                     l4616:
  3849                           
  3850                           ;A6Lib.c: 75: };A6Lib.c: 76: };A6Lib.c: 79: EUSART_SetSpeed(currentSpeed);
  3851  001086  C0AC  F012         	movff	A6_SpeedSet@currentSpeed,EUSART_SetSpeed@speed
  3852  00108A  C0AD  F013         	movff	A6_SpeedSet@currentSpeed+1,EUSART_SetSpeed@speed+1
  3853  00108E  C0AE  F014         	movff	A6_SpeedSet@currentSpeed+2,EUSART_SetSpeed@speed+2
  3854  001092  C0AF  F015         	movff	A6_SpeedSet@currentSpeed+3,EUSART_SetSpeed@speed+3
  3855  001096  EC5A  F00D         	call	_EUSART_SetSpeed	;wreg free
  3856  00109A  EFBF  F007         	goto	l4596
  3857  00109E                     l551:
  3858  00109E  0012               	return		;funcret
  3859  0010A0                     __end_of_A6_SpeedSet:
  3860                           	opt callstack 0
  3861                           
  3862 ;; *************** function _A6_SpeedGet *****************
  3863 ;; Defined at:
  3864 ;;		line 30 in file "A6Lib.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  j               1   77[COMRAM] unsigned char 
  3869 ;;  response       32   38[COMRAM] unsigned char [32]
  3870 ;;  speed           4   71[COMRAM] unsigned long 
  3871 ;;  speedToken      2   75[COMRAM] PTR unsigned char 
  3872 ;;		 -> NULL(0), A6_SpeedGet@response(32), 
  3873 ;;  loop            1   70[COMRAM] unsigned char 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  4   34[COMRAM] unsigned long 
  3876 ;; Registers used:
  3877 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3883 ;;      Params:         4       0       0       0       0       0       0       0       0
  3884 ;;      Locals:        40       0       0       0       0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3886 ;;      Totals:        44       0       0       0       0       0       0       0       0
  3887 ;;Total ram usage:       44 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    5
  3890 ;; This function calls:
  3891 ;;		_A6_Command
  3892 ;;		_atol
  3893 ;;		_sleepMS
  3894 ;;		_strstr
  3895 ;;		_strtok
  3896 ;; This function is called by:
  3897 ;;		_loop
  3898 ;;		_A6_SpeedSet
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text3
  3903  000DF0                     __ptext3:
  3904                           	opt callstack 0
  3905  000DF0                     _A6_SpeedGet:
  3906                           	opt callstack 23
  3907  000DF0                     
  3908                           ;A6Lib.c: 31: uint32_t speed;;A6Lib.c: 32: char *speedToken;;A6Lib.c: 33: char response[
      +                          32];;A6Lib.c: 35: uint8_t loop = 5;
  3909  000DF0  0E05               	movlw	5
  3910  000DF2  6E47               	movwf	A6_SpeedGet@loop^0,c
  3911                           
  3912                           ;A6Lib.c: 36: while(loop--) {
  3913  000DF4  EF97  F007         	goto	l3540
  3914  000DF8                     l3514:
  3915                           
  3916                           ;A6Lib.c: 37: A6_Command("AT+IPR?\r", "aa", "bb", 0, response, 32);
  3917  000DF8  0ED9               	movlw	low STR_21
  3918  000DFA  6E13               	movwf	A6_Command@command^0,c
  3919  000DFC  0E5F               	movlw	high STR_21
  3920  000DFE  6E14               	movwf	(A6_Command@command+1)^0,c
  3921  000E00  0EF8               	movlw	low STR_10
  3922  000E02  6E15               	movwf	A6_Command@resp1^0,c
  3923  000E04  0E5F               	movlw	high STR_10
  3924  000E06  6E16               	movwf	(A6_Command@resp1+1)^0,c
  3925  000E08  0EFB               	movlw	low STR_11
  3926  000E0A  6E17               	movwf	A6_Command@resp2^0,c
  3927  000E0C  0E5F               	movlw	high STR_11
  3928  000E0E  6E18               	movwf	(A6_Command@resp2+1)^0,c
  3929  000E10  0E00               	movlw	0
  3930  000E12  6E1A               	movwf	(A6_Command@timeout+1)^0,c
  3931  000E14  0E00               	movlw	0
  3932  000E16  6E19               	movwf	A6_Command@timeout^0,c
  3933  000E18  0E27               	movlw	low A6_SpeedGet@response
  3934  000E1A  6E1B               	movwf	A6_Command@response^0,c
  3935  000E1C  0E00               	movlw	high A6_SpeedGet@response
  3936  000E1E  6E1C               	movwf	(A6_Command@response+1)^0,c
  3937  000E20  0E20               	movlw	32
  3938  000E22  6E1D               	movwf	A6_Command@responseLen^0,c
  3939  000E24  ECED  F008         	call	_A6_Command	;wreg free
  3940  000E28                     
  3941                           ;A6Lib.c: 38: if(strstr(response, "+IPR: ") != (0)) {
  3942  000E28  0E27               	movlw	low A6_SpeedGet@response
  3943  000E2A  6E10               	movwf	strstr@s1^0,c
  3944  000E2C  0E00               	movlw	high A6_SpeedGet@response
  3945  000E2E  6E11               	movwf	(strstr@s1+1)^0,c
  3946  000E30  0EE2               	movlw	low STR_24
  3947  000E32  6E12               	movwf	strstr@s2^0,c
  3948  000E34  0E5F               	movlw	high STR_24
  3949  000E36  6E13               	movwf	(strstr@s2+1)^0,c
  3950  000E38  EC77  F00B         	call	_strstr	;wreg free
  3951  000E3C  5010               	movf	?_strstr^0,w,c
  3952  000E3E  1011               	iorwf	(?_strstr+1)^0,w,c
  3953  000E40  B4D8               	btfsc	status,2,c
  3954  000E42  EF25  F007         	goto	u2441
  3955  000E46  EF27  F007         	goto	u2440
  3956  000E4A                     u2441:
  3957  000E4A  EF8D  F007         	goto	l3538
  3958  000E4E                     u2440:
  3959  000E4E                     
  3960                           ;A6Lib.c: 39: speedToken = strtok(response, " ");
  3961  000E4E  0E27               	movlw	low A6_SpeedGet@response
  3962  000E50  6E12               	movwf	strtok@s1^0,c
  3963  000E52  0E00               	movlw	high A6_SpeedGet@response
  3964  000E54  6E13               	movwf	(strtok@s1+1)^0,c
  3965  000E56  0EE7               	movlw	low (STR_24+5)
  3966  000E58  6E14               	movwf	strtok@s2^0,c
  3967  000E5A  0E5F               	movlw	high (STR_24+5)
  3968  000E5C  6E15               	movwf	(strtok@s2+1)^0,c
  3969  000E5E  EC5D  F009         	call	_strtok	;wreg free
  3970  000E62  C012  F04C         	movff	?_strtok,A6_SpeedGet@speedToken
  3971  000E66  C013  F04D         	movff	?_strtok+1,A6_SpeedGet@speedToken+1
  3972                           
  3973                           ;A6Lib.c: 40: speedToken = strtok((0), response);
  3974  000E6A  0E00               	movlw	0
  3975  000E6C  6E12               	movwf	strtok@s1^0,c
  3976  000E6E  0E00               	movlw	0
  3977  000E70  6E13               	movwf	(strtok@s1+1)^0,c
  3978  000E72  0E27               	movlw	low A6_SpeedGet@response
  3979  000E74  6E14               	movwf	strtok@s2^0,c
  3980  000E76  0E00               	movlw	high A6_SpeedGet@response
  3981  000E78  6E15               	movwf	(strtok@s2+1)^0,c
  3982  000E7A  EC5D  F009         	call	_strtok	;wreg free
  3983  000E7E  C012  F04C         	movff	?_strtok,A6_SpeedGet@speedToken
  3984  000E82  C013  F04D         	movff	?_strtok+1,A6_SpeedGet@speedToken+1
  3985  000E86                     
  3986                           ;A6Lib.c: 41: if(speedToken != (0)) {
  3987  000E86  504C               	movf	A6_SpeedGet@speedToken^0,w,c
  3988  000E88  104D               	iorwf	(A6_SpeedGet@speedToken+1)^0,w,c
  3989  000E8A  B4D8               	btfsc	status,2,c
  3990  000E8C  EF4A  F007         	goto	u2451
  3991  000E90  EF4C  F007         	goto	u2450
  3992  000E94                     u2451:
  3993  000E94  EF8D  F007         	goto	l3538
  3994  000E98                     u2450:
  3995  000E98                     
  3996                           ;A6Lib.c: 42: speed = atol(speedToken);
  3997  000E98  C04C  F011         	movff	A6_SpeedGet@speedToken,atol@s
  3998  000E9C  C04D  F012         	movff	A6_SpeedGet@speedToken+1,atol@s+1
  3999  000EA0  EC50  F008         	call	_atol	;wreg free
  4000  000EA4  C011  F048         	movff	?_atol,A6_SpeedGet@speed
  4001  000EA8  C012  F049         	movff	?_atol+1,A6_SpeedGet@speed+1
  4002  000EAC  C013  F04A         	movff	?_atol+2,A6_SpeedGet@speed+2
  4003  000EB0  C014  F04B         	movff	?_atol+3,A6_SpeedGet@speed+3
  4004  000EB4                     
  4005                           ;A6Lib.c: 43: for(uint8_t j=0; j<3; j++) {
  4006  000EB4  0E00               	movlw	0
  4007  000EB6  6E4E               	movwf	A6_SpeedGet@j^0,c
  4008  000EB8                     l3530:
  4009                           
  4010                           ;A6Lib.c: 44: if(speed == A6_SPEEDS[j]) {
  4011  000EB8  504E               	movf	A6_SpeedGet@j^0,w,c
  4012  000EBA  0D04               	mullw	4
  4013  000EBC  0E93               	movlw	low _A6_SPEEDS
  4014  000EBE  24F3               	addwf	243,w,c
  4015  000EC0  6EF6               	movwf	tblptrl,c
  4016  000EC2  0E5E               	movlw	high _A6_SPEEDS
  4017  000EC4  20F4               	addwfc	244,w,c
  4018  000EC6  6EF7               	movwf	tblptrh,c
  4019  000EC8                     	if	0	;There are less than 3 active tblptr bytes
  4020  000EC8                     	endif
  4021  000EC8  5048               	movf	A6_SpeedGet@speed^0,w,c
  4022  000ECA  0009               	tblrd		*+
  4023  000ECC  18F5               	xorwf	tablat,w,c
  4024  000ECE  E110               	bnz	u2461
  4025  000ED0  5049               	movf	(A6_SpeedGet@speed+1)^0,w,c
  4026  000ED2  0009               	tblrd		*+
  4027  000ED4  18F5               	xorwf	tablat,w,c
  4028  000ED6  E10C               	bnz	u2461
  4029  000ED8  504A               	movf	(A6_SpeedGet@speed+2)^0,w,c
  4030  000EDA  0009               	tblrd		*+
  4031  000EDC  18F5               	xorwf	tablat,w,c
  4032  000EDE  E108               	bnz	u2461
  4033  000EE0  504B               	movf	(A6_SpeedGet@speed+3)^0,w,c
  4034  000EE2  0009               	tblrd		*+
  4035  000EE4  18F5               	xorwf	tablat,w,c
  4036  000EE6  A4D8               	btfss	status,2,c
  4037  000EE8  EF78  F007         	goto	u2461
  4038  000EEC  EF7A  F007         	goto	u2460
  4039  000EF0                     u2461:
  4040  000EF0  EF84  F007         	goto	l3534
  4041  000EF4                     u2460:
  4042  000EF4                     
  4043                           ;A6Lib.c: 45: return speed;
  4044  000EF4  C048  F023         	movff	A6_SpeedGet@speed,?_A6_SpeedGet
  4045  000EF8  C049  F024         	movff	A6_SpeedGet@speed+1,?_A6_SpeedGet+1
  4046  000EFC  C04A  F025         	movff	A6_SpeedGet@speed+2,?_A6_SpeedGet+2
  4047  000F00  C04B  F026         	movff	A6_SpeedGet@speed+3,?_A6_SpeedGet+3
  4048  000F04  EFA8  F007         	goto	l546
  4049  000F08                     l3534:
  4050  000F08  2A4E               	incf	A6_SpeedGet@j^0,f,c
  4051  000F0A  0E02               	movlw	2
  4052  000F0C  644E               	cpfsgt	A6_SpeedGet@j^0,c
  4053  000F0E  EF8B  F007         	goto	u2471
  4054  000F12  EF8D  F007         	goto	u2470
  4055  000F16                     u2471:
  4056  000F16  EF5C  F007         	goto	l3530
  4057  000F1A                     u2470:
  4058  000F1A                     l3538:
  4059                           
  4060                           ;A6Lib.c: 46: };A6Lib.c: 47: };A6Lib.c: 48: };A6Lib.c: 49: };A6Lib.c: 50: sleepMS(250);
  4061  000F1A  0EFA               	movlw	250
  4062  000F1C  6E05               	movwf	sleepMS@ms^0,c
  4063  000F1E  0E00               	movlw	0
  4064  000F20  6E06               	movwf	(sleepMS@ms+1)^0,c
  4065  000F22  0E00               	movlw	0
  4066  000F24  6E07               	movwf	(sleepMS@ms+2)^0,c
  4067  000F26  0E00               	movlw	0
  4068  000F28  6E08               	movwf	(sleepMS@ms+3)^0,c
  4069  000F2A  EC80  F011         	call	_sleepMS	;wreg free
  4070  000F2E                     l3540:
  4071  000F2E  0647               	decf	A6_SpeedGet@loop^0,f,c
  4072  000F30  2847               	incf	A6_SpeedGet@loop^0,w,c
  4073  000F32  A4D8               	btfss	status,2,c
  4074  000F34  EF9E  F007         	goto	u2481
  4075  000F38  EFA0  F007         	goto	u2480
  4076  000F3C                     u2481:
  4077  000F3C  EFFC  F006         	goto	l3514
  4078  000F40                     u2480:
  4079  000F40                     
  4080                           ;A6Lib.c: 51: };A6Lib.c: 53: return 0;
  4081  000F40  0E00               	movlw	0
  4082  000F42  6E23               	movwf	?_A6_SpeedGet^0,c
  4083  000F44  0E00               	movlw	0
  4084  000F46  6E24               	movwf	(?_A6_SpeedGet+1)^0,c
  4085  000F48  0E00               	movlw	0
  4086  000F4A  6E25               	movwf	(?_A6_SpeedGet+2)^0,c
  4087  000F4C  0E00               	movlw	0
  4088  000F4E  6E26               	movwf	(?_A6_SpeedGet+3)^0,c
  4089  000F50                     l546:
  4090  000F50  0012               	return		;funcret
  4091  000F52                     __end_of_A6_SpeedGet:
  4092                           	opt callstack 0
  4093                           
  4094 ;; *************** function _strtok *****************
  4095 ;; Defined at:
  4096 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strtok.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  s1              2   17[COMRAM] PTR unsigned char 
  4099 ;;		 -> NULL(0), A6_SpeedGet@response(32), 
  4100 ;;  s2              2   19[COMRAM] PTR const unsigned char 
  4101 ;;		 -> STR_25(2), A6_SpeedGet@response(32), 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  2   17[COMRAM] PTR unsigned char 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4113 ;;      Params:         4       0       0       0       0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4116 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4117 ;;Total ram usage:        4 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    4
  4120 ;; This function calls:
  4121 ;;		_strcspn
  4122 ;;		_strspn
  4123 ;; This function is called by:
  4124 ;;		_A6_SpeedGet
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           	psect	text4
  4129  0012BA                     __ptext4:
  4130                           	opt callstack 0
  4131  0012BA                     _strtok:
  4132                           	opt callstack 23
  4133  0012BA  5012               	movf	strtok@s1^0,w,c
  4134  0012BC  1013               	iorwf	(strtok@s1+1)^0,w,c
  4135  0012BE  A4D8               	btfss	status,2,c
  4136  0012C0  EF64  F009         	goto	u2221
  4137  0012C4  EF66  F009         	goto	u2220
  4138  0012C8                     u2221:
  4139  0012C8  EF6A  F009         	goto	l1358
  4140  0012CC                     u2220:
  4141  0012CC  C053  F012         	movff	strtok@sp,strtok@s1
  4142  0012D0  C054  F013         	movff	strtok@sp+1,strtok@s1+1
  4143  0012D4                     l1358:
  4144  0012D4  5012               	movf	strtok@s1^0,w,c
  4145  0012D6  1013               	iorwf	(strtok@s1+1)^0,w,c
  4146  0012D8  A4D8               	btfss	status,2,c
  4147  0012DA  EF71  F009         	goto	u2231
  4148  0012DE  EF73  F009         	goto	u2230
  4149  0012E2                     u2231:
  4150  0012E2  EF79  F009         	goto	l3372
  4151  0012E6                     u2230:
  4152  0012E6  0E00               	movlw	0
  4153  0012E8  6E12               	movwf	?_strtok^0,c
  4154  0012EA  0E00               	movlw	0
  4155  0012EC  6E13               	movwf	(?_strtok+1)^0,c
  4156  0012EE  EFCB  F009         	goto	l1360
  4157  0012F2                     l3372:
  4158  0012F2  C012  F00B         	movff	strtok@s1,strspn@s1
  4159  0012F6  C013  F00C         	movff	strtok@s1+1,strspn@s1+1
  4160  0012FA  C014  F00D         	movff	strtok@s2,strspn@s2
  4161  0012FE  C015  F00E         	movff	strtok@s2+1,strspn@s2+1
  4162  001302  ECA9  F00F         	call	_strspn	;wreg free
  4163  001306  500B               	movf	?_strspn^0,w,c
  4164  001308  2612               	addwf	strtok@s1^0,f,c
  4165  00130A  500C               	movf	(?_strspn+1)^0,w,c
  4166  00130C  2213               	addwfc	(strtok@s1+1)^0,f,c
  4167  00130E  C012  FFD9         	movff	strtok@s1,fsr2l
  4168  001312  C013  FFDA         	movff	strtok@s1+1,fsr2h
  4169  001316  50DF               	movf	indf2,w,c
  4170  001318  A4D8               	btfss	status,2,c
  4171  00131A  EF91  F009         	goto	u2241
  4172  00131E  EF93  F009         	goto	u2240
  4173  001322                     u2241:
  4174  001322  EF9D  F009         	goto	l3380
  4175  001326                     u2240:
  4176  001326  0E00               	movlw	0
  4177  001328  6E53               	movwf	strtok@sp^0,c
  4178  00132A  0E00               	movlw	0
  4179  00132C  6E54               	movwf	(strtok@sp+1)^0,c
  4180  00132E  C053  F012         	movff	strtok@sp,?_strtok
  4181  001332  C054  F013         	movff	strtok@sp+1,?_strtok+1
  4182  001336  EFCB  F009         	goto	l1360
  4183  00133A                     l3380:
  4184  00133A  C012  F00B         	movff	strtok@s1,strcspn@s1
  4185  00133E  C013  F00C         	movff	strtok@s1+1,strcspn@s1+1
  4186  001342  C014  F00D         	movff	strtok@s2,strcspn@s2
  4187  001346  C015  F00E         	movff	strtok@s2+1,strcspn@s2+1
  4188  00134A  ECDC  F00F         	call	_strcspn	;wreg free
  4189  00134E  500B               	movf	?_strcspn^0,w,c
  4190  001350  2412               	addwf	strtok@s1^0,w,c
  4191  001352  6E53               	movwf	strtok@sp^0,c
  4192  001354  500C               	movf	(?_strcspn+1)^0,w,c
  4193  001356  2013               	addwfc	(strtok@s1+1)^0,w,c
  4194  001358  6E54               	movwf	(strtok@sp+1)^0,c
  4195  00135A  C053  FFD9         	movff	strtok@sp,fsr2l
  4196  00135E  C054  FFDA         	movff	strtok@sp+1,fsr2h
  4197  001362  50DF               	movf	indf2,w,c
  4198  001364  B4D8               	btfsc	status,2,c
  4199  001366  EFB7  F009         	goto	u2251
  4200  00136A  EFB9  F009         	goto	u2250
  4201  00136E                     u2251:
  4202  00136E  EFC3  F009         	goto	l3388
  4203  001372                     u2250:
  4204  001372  C053  FFD9         	movff	strtok@sp,fsr2l
  4205  001376  C054  FFDA         	movff	strtok@sp+1,fsr2h
  4206  00137A  0E00               	movlw	0
  4207  00137C  6EDF               	movwf	indf2,c
  4208  00137E  4A53               	infsnz	strtok@sp^0,f,c
  4209  001380  2A54               	incf	(strtok@sp+1)^0,f,c
  4210  001382  EFC7  F009         	goto	l1363
  4211  001386                     l3388:
  4212  001386  0E00               	movlw	0
  4213  001388  6E53               	movwf	strtok@sp^0,c
  4214  00138A  0E00               	movlw	0
  4215  00138C  6E54               	movwf	(strtok@sp+1)^0,c
  4216  00138E                     l1363:
  4217  00138E  C012  F012         	movff	strtok@s1,?_strtok
  4218  001392  C013  F013         	movff	strtok@s1+1,?_strtok+1
  4219  001396                     l1360:
  4220  001396  0012               	return		;funcret
  4221  001398                     __end_of_strtok:
  4222                           	opt callstack 0
  4223                           
  4224 ;; *************** function _strspn *****************
  4225 ;; Defined at:
  4226 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strspn.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  4229 ;;		 -> NULL(0), A6_SpeedGet@response(32), 
  4230 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  4231 ;;		 -> STR_25(2), A6_SpeedGet@response(32), 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;  i               2   15[COMRAM] unsigned int 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  2   10[COMRAM] unsigned int 
  4236 ;; Registers used:
  4237 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4243 ;;      Params:         4       0       0       0       0       0       0       0       0
  4244 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4245 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4246 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4247 ;;Total ram usage:        7 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    3
  4250 ;; This function calls:
  4251 ;;		_strchr
  4252 ;; This function is called by:
  4253 ;;		_strtok
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text5
  4258  001F52                     __ptext5:
  4259                           	opt callstack 0
  4260  001F52                     _strspn:
  4261                           	opt callstack 23
  4262  001F52  0E00               	movlw	0
  4263  001F54  6E11               	movwf	(strspn@i+1)^0,c
  4264  001F56  0E00               	movlw	0
  4265  001F58  6E10               	movwf	strspn@i^0,c
  4266  001F5A  EFB3  F00F         	goto	l3278
  4267  001F5E                     l3276:
  4268  001F5E  4A0B               	infsnz	strspn@s1^0,f,c
  4269  001F60  2A0C               	incf	(strspn@s1+1)^0,f,c
  4270  001F62  4A10               	infsnz	strspn@i^0,f,c
  4271  001F64  2A11               	incf	(strspn@i+1)^0,f,c
  4272  001F66                     l3278:
  4273  001F66  C00B  FFD9         	movff	strspn@s1,fsr2l
  4274  001F6A  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  4275  001F6E  50DF               	movf	indf2,w,c
  4276  001F70  B4D8               	btfsc	status,2,c
  4277  001F72  EFBD  F00F         	goto	u2031
  4278  001F76  EFBF  F00F         	goto	u2030
  4279  001F7A                     u2031:
  4280  001F7A  EFD7  F00F         	goto	l1397
  4281  001F7E                     u2030:
  4282  001F7E  C00D  F005         	movff	strspn@s2,strchr@ptr
  4283  001F82  C00E  F006         	movff	strspn@s2+1,strchr@ptr+1
  4284  001F86  C00B  FFD9         	movff	strspn@s1,fsr2l
  4285  001F8A  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  4286  001F8E  50DF               	movf	indf2,w,c
  4287  001F90  6E0F               	movwf	??_strspn^0,c
  4288  001F92  500F               	movf	??_strspn^0,w,c
  4289  001F94  6E07               	movwf	strchr@chr^0,c
  4290  001F96  6A08               	clrf	(strchr@chr+1)^0,c
  4291  001F98  EC9C  F00D         	call	_strchr	;wreg free
  4292  001F9C  5005               	movf	?_strchr^0,w,c
  4293  001F9E  1006               	iorwf	(?_strchr+1)^0,w,c
  4294  001FA0  A4D8               	btfss	status,2,c
  4295  001FA2  EFD5  F00F         	goto	u2041
  4296  001FA6  EFD7  F00F         	goto	u2040
  4297  001FAA                     u2041:
  4298  001FAA  EFAF  F00F         	goto	l3276
  4299  001FAE                     u2040:
  4300  001FAE                     l1397:
  4301  001FAE  C010  F00B         	movff	strspn@i,?_strspn
  4302  001FB2  C011  F00C         	movff	strspn@i+1,?_strspn+1
  4303  001FB6  0012               	return		;funcret
  4304  001FB8                     __end_of_strspn:
  4305                           	opt callstack 0
  4306                           
  4307 ;; *************** function _strcspn *****************
  4308 ;; Defined at:
  4309 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcspn.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  4312 ;;		 -> NULL(0), A6_SpeedGet@response(32), 
  4313 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  4314 ;;		 -> STR_25(2), A6_SpeedGet@response(32), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  i               2   15[COMRAM] unsigned int 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  2   10[COMRAM] unsigned int 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4326 ;;      Params:         4       0       0       0       0       0       0       0       0
  4327 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4328 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4329 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4330 ;;Total ram usage:        7 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    3
  4333 ;; This function calls:
  4334 ;;		_strchr
  4335 ;; This function is called by:
  4336 ;;		_strtok
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text6
  4341  001FB8                     __ptext6:
  4342                           	opt callstack 0
  4343  001FB8                     _strcspn:
  4344                           	opt callstack 23
  4345  001FB8  0E00               	movlw	0
  4346  001FBA  6E11               	movwf	(strcspn@i+1)^0,c
  4347  001FBC  0E00               	movlw	0
  4348  001FBE  6E10               	movwf	strcspn@i^0,c
  4349  001FC0  EFE6  F00F         	goto	l3286
  4350  001FC4                     l3284:
  4351  001FC4  4A0B               	infsnz	strcspn@s1^0,f,c
  4352  001FC6  2A0C               	incf	(strcspn@s1+1)^0,f,c
  4353  001FC8  4A10               	infsnz	strcspn@i^0,f,c
  4354  001FCA  2A11               	incf	(strcspn@i+1)^0,f,c
  4355  001FCC                     l3286:
  4356  001FCC  C00B  FFD9         	movff	strcspn@s1,fsr2l
  4357  001FD0  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  4358  001FD4  50DF               	movf	indf2,w,c
  4359  001FD6  B4D8               	btfsc	status,2,c
  4360  001FD8  EFF0  F00F         	goto	u2051
  4361  001FDC  EFF2  F00F         	goto	u2050
  4362  001FE0                     u2051:
  4363  001FE0  EF0A  F010         	goto	l1378
  4364  001FE4                     u2050:
  4365  001FE4  C00D  F005         	movff	strcspn@s2,strchr@ptr
  4366  001FE8  C00E  F006         	movff	strcspn@s2+1,strchr@ptr+1
  4367  001FEC  C00B  FFD9         	movff	strcspn@s1,fsr2l
  4368  001FF0  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  4369  001FF4  50DF               	movf	indf2,w,c
  4370  001FF6  6E0F               	movwf	??_strcspn^0,c
  4371  001FF8  500F               	movf	??_strcspn^0,w,c
  4372  001FFA  6E07               	movwf	strchr@chr^0,c
  4373  001FFC  6A08               	clrf	(strchr@chr+1)^0,c
  4374  001FFE  EC9C  F00D         	call	_strchr	;wreg free
  4375  002002  5005               	movf	?_strchr^0,w,c
  4376  002004  1006               	iorwf	(?_strchr+1)^0,w,c
  4377  002006  B4D8               	btfsc	status,2,c
  4378  002008  EF08  F010         	goto	u2061
  4379  00200C  EF0A  F010         	goto	u2060
  4380  002010                     u2061:
  4381  002010  EFE2  F00F         	goto	l3284
  4382  002014                     u2060:
  4383  002014                     l1378:
  4384  002014  C010  F00B         	movff	strcspn@i,?_strcspn
  4385  002018  C011  F00C         	movff	strcspn@i+1,?_strcspn+1
  4386  00201C  0012               	return		;funcret
  4387  00201E                     __end_of_strcspn:
  4388                           	opt callstack 0
  4389                           
  4390 ;; *************** function _strstr *****************
  4391 ;; Defined at:
  4392 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strstr.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  4395 ;;		 -> STR_25(2), NULL(0), A6_SpeedGet@response(32), 
  4396 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  4397 ;;		 -> STR_24(7), 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2   15[COMRAM] PTR unsigned char 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4409 ;;      Params:         4       0       0       0       0       0       0       0       0
  4410 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4412 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4413 ;;Total ram usage:        4 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    3
  4416 ;; This function calls:
  4417 ;;		_strchr
  4418 ;;		_strlen
  4419 ;;		_strncmp
  4420 ;; This function is called by:
  4421 ;;		_A6_SpeedGet
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text7
  4426  0016EE                     __ptext7:
  4427                           	opt callstack 0
  4428  0016EE                     _strstr:
  4429                           	opt callstack 24
  4430  0016EE  EFB0  F00B         	goto	l3356
  4431  0016F2                     l3348:
  4432  0016F2  C010  F009         	movff	strstr@s1,strncmp@s1
  4433  0016F6  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
  4434  0016FA  C012  F00B         	movff	strstr@s2,strncmp@s2
  4435  0016FE  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
  4436  001702  C012  F005         	movff	strstr@s2,strlen@s
  4437  001706  C013  F006         	movff	strstr@s2+1,strlen@s+1
  4438  00170A  EC96  F010         	call	_strlen	;wreg free
  4439  00170E  C005  F00D         	movff	?_strlen,strncmp@len
  4440  001712  C006  F00E         	movff	?_strlen+1,strncmp@len+1
  4441  001716  EC3B  F00A         	call	_strncmp	;wreg free
  4442  00171A  5009               	movf	?_strncmp^0,w,c
  4443  00171C  100A               	iorwf	(?_strncmp+1)^0,w,c
  4444  00171E  A4D8               	btfss	status,2,c
  4445  001720  EF94  F00B         	goto	u2181
  4446  001724  EF96  F00B         	goto	u2180
  4447  001728                     u2181:
  4448  001728  EF9C  F00B         	goto	l3354
  4449  00172C                     u2180:
  4450  00172C  C010  F010         	movff	strstr@s1,?_strstr
  4451  001730  C011  F011         	movff	strstr@s1+1,?_strstr+1
  4452  001734  EFD5  F00B         	goto	l1346
  4453  001738                     l3354:
  4454  001738  0E01               	movlw	1
  4455  00173A  2410               	addwf	strstr@s1^0,w,c
  4456  00173C  6E05               	movwf	strchr@ptr^0,c
  4457  00173E  0E00               	movlw	0
  4458  001740  2011               	addwfc	(strstr@s1+1)^0,w,c
  4459  001742  6E06               	movwf	(strchr@ptr+1)^0,c
  4460  001744  C012  FFF6         	movff	strstr@s2,tblptrl
  4461  001748  C013  FFF7         	movff	strstr@s2+1,tblptrh
  4462  00174C                     	if	0	;tblptru may be non-zero
  4463  00174C                     	endif
  4464  00174C                     	if	0	;tblptru may be non-zero
  4465  00174C                     	endif
  4466  00174C  0008               	tblrd		*
  4467  00174E  50F5               	movf	tablat,w,c
  4468  001750  6E07               	movwf	strchr@chr^0,c
  4469  001752  6A08               	clrf	(strchr@chr+1)^0,c
  4470  001754  EC9C  F00D         	call	_strchr	;wreg free
  4471  001758  C005  F010         	movff	?_strchr,strstr@s1
  4472  00175C  C006  F011         	movff	?_strchr+1,strstr@s1+1
  4473  001760                     l3356:
  4474  001760  5010               	movf	strstr@s1^0,w,c
  4475  001762  1011               	iorwf	(strstr@s1+1)^0,w,c
  4476  001764  B4D8               	btfsc	status,2,c
  4477  001766  EFB7  F00B         	goto	u2191
  4478  00176A  EFB9  F00B         	goto	u2190
  4479  00176E                     u2191:
  4480  00176E  EFD1  F00B         	goto	l3360
  4481  001772                     u2190:
  4482  001772  C010  FFF6         	movff	strstr@s1,tblptrl
  4483  001776  C011  FFF7         	movff	strstr@s1+1,tblptrh
  4484  00177A  6AF8               	clrf	tblptru,c
  4485  00177C  0E07               	movlw	(high __ramtop+-1)
  4486  00177E  64F7               	cpfsgt	tblptrh,c
  4487  001780  D003               	bra	u2207
  4488  001782  0008               	tblrd		*
  4489  001784  50F5               	movf	tablat,w,c
  4490  001786  D005               	bra	u2200
  4491  001788                     u2207:
  4492  001788  CFF6 FFE9          	movff	tblptrl,fsr0l
  4493  00178C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4494  001790  50EF               	movf	indf0,w,c
  4495  001792                     u2200:
  4496  001792  0900               	iorlw	0
  4497  001794  A4D8               	btfss	status,2,c
  4498  001796  EFCF  F00B         	goto	u2211
  4499  00179A  EFD1  F00B         	goto	u2210
  4500  00179E                     u2211:
  4501  00179E  EF79  F00B         	goto	l3348
  4502  0017A2                     u2210:
  4503  0017A2                     l3360:
  4504  0017A2  0E00               	movlw	0
  4505  0017A4  6E10               	movwf	?_strstr^0,c
  4506  0017A6  0E00               	movlw	0
  4507  0017A8  6E11               	movwf	(?_strstr+1)^0,c
  4508  0017AA                     l1346:
  4509  0017AA  0012               	return		;funcret
  4510  0017AC                     __end_of_strstr:
  4511                           	opt callstack 0
  4512                           
  4513 ;; *************** function _strncmp *****************
  4514 ;; Defined at:
  4515 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strncmp.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  s1              2    8[COMRAM] PTR const unsigned char 
  4518 ;;		 -> STR_25(2), NULL(0), A6_SpeedGet@response(32), 
  4519 ;;  s2              2   10[COMRAM] PTR const unsigned char 
  4520 ;;		 -> STR_24(7), 
  4521 ;;  len             2   12[COMRAM] unsigned int 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  2    8[COMRAM] int 
  4526 ;; Registers used:
  4527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4533 ;;      Params:         6       0       0       0       0       0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4535 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4536 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4537 ;;Total ram usage:        7 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    2
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_strstr
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text8
  4548  001476                     __ptext8:
  4549                           	opt callstack 0
  4550  001476                     _strncmp:
  4551                           	opt callstack 24
  4552  001476  EF96  F00A         	goto	l3268
  4553  00147A                     l3258:
  4554  00147A  C009  FFF6         	movff	strncmp@s1,tblptrl
  4555  00147E  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  4556  001482  6AF8               	clrf	tblptru,c
  4557  001484  0E07               	movlw	(high __ramtop+-1)
  4558  001486  64F7               	cpfsgt	tblptrh,c
  4559  001488  D003               	bra	u1987
  4560  00148A  0008               	tblrd		*
  4561  00148C  50F5               	movf	tablat,w,c
  4562  00148E  D005               	bra	u1980
  4563  001490                     u1987:
  4564  001490  CFF6 FFE9          	movff	tblptrl,fsr0l
  4565  001494  CFF7 FFEA          	movff	tblptrh,fsr0h
  4566  001498  50EF               	movf	indf0,w,c
  4567  00149A                     u1980:
  4568  00149A  0900               	iorlw	0
  4569  00149C  B4D8               	btfsc	status,2,c
  4570  00149E  EF53  F00A         	goto	u1991
  4571  0014A2  EF55  F00A         	goto	u1990
  4572  0014A6                     u1991:
  4573  0014A6  EF74  F00A         	goto	l3262
  4574  0014AA                     u1990:
  4575  0014AA  C00B  FFF6         	movff	strncmp@s2,tblptrl
  4576  0014AE  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  4577  0014B2                     	if	0	;tblptru may be non-zero
  4578  0014B2                     	endif
  4579  0014B2                     	if	0	;tblptru may be non-zero
  4580  0014B2                     	endif
  4581  0014B2  0008               	tblrd		*
  4582  0014B4  CFF5 F00F          	movff	tablat,??_strncmp
  4583  0014B8  C009  FFF6         	movff	strncmp@s1,tblptrl
  4584  0014BC  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  4585  0014C0  6AF8               	clrf	tblptru,c
  4586  0014C2  0E07               	movlw	(high __ramtop+-1)
  4587  0014C4  64F7               	cpfsgt	tblptrh,c
  4588  0014C6  D003               	bra	u2007
  4589  0014C8  0008               	tblrd		*
  4590  0014CA  50F5               	movf	tablat,w,c
  4591  0014CC  D005               	bra	u2005
  4592  0014CE                     u2007:
  4593  0014CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4594  0014D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  4595  0014D6  50EF               	movf	indf0,w,c
  4596  0014D8                     u2005:
  4597  0014D8  180F               	xorwf	??_strncmp^0,w,c
  4598  0014DA  B4D8               	btfsc	status,2,c
  4599  0014DC  EF72  F00A         	goto	u2001
  4600  0014E0  EF74  F00A         	goto	u2000
  4601  0014E4                     u2001:
  4602  0014E4  EF92  F00A         	goto	l3266
  4603  0014E8                     u2000:
  4604  0014E8                     l3262:
  4605  0014E8  C009  FFF6         	movff	strncmp@s1,tblptrl
  4606  0014EC  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  4607  0014F0  6AF8               	clrf	tblptru,c
  4608  0014F2  0E07               	movlw	(high __ramtop+-1)
  4609  0014F4  64F7               	cpfsgt	tblptrh,c
  4610  0014F6  D003               	bra	u2017
  4611  0014F8  0008               	tblrd		*
  4612  0014FA  50F5               	movf	tablat,w,c
  4613  0014FC  D005               	bra	u2010
  4614  0014FE                     u2017:
  4615  0014FE  CFF6 FFE9          	movff	tblptrl,fsr0l
  4616  001502  CFF7 FFEA          	movff	tblptrh,fsr0h
  4617  001506  50EF               	movf	indf0,w,c
  4618  001508                     u2010:
  4619  001508  6E0F               	movwf	??_strncmp^0,c
  4620  00150A  C00B  FFF6         	movff	strncmp@s2,tblptrl
  4621  00150E  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  4622  001512                     	if	0	;tblptru may be non-zero
  4623  001512                     	endif
  4624  001512                     	if	0	;tblptru may be non-zero
  4625  001512                     	endif
  4626  001512  0008               	tblrd		*
  4627  001514  50F5               	movf	tablat,w,c
  4628  001516  5C0F               	subwf	??_strncmp^0,w,c
  4629  001518  6E09               	movwf	?_strncmp^0,c
  4630  00151A  6A0A               	clrf	(?_strncmp+1)^0,c
  4631  00151C  A0D8               	btfss	status,0,c
  4632  00151E  060A               	decf	(?_strncmp+1)^0,f,c
  4633  001520  EFA7  F00A         	goto	l1387
  4634  001524                     l3266:
  4635  001524  4A09               	infsnz	strncmp@s1^0,f,c
  4636  001526  2A0A               	incf	(strncmp@s1+1)^0,f,c
  4637  001528  4A0B               	infsnz	strncmp@s2^0,f,c
  4638  00152A  2A0C               	incf	(strncmp@s2+1)^0,f,c
  4639  00152C                     l3268:
  4640  00152C  060D               	decf	strncmp@len^0,f,c
  4641  00152E  A0D8               	btfss	status,0,c
  4642  001530  060E               	decf	(strncmp@len+1)^0,f,c
  4643  001532  280D               	incf	strncmp@len^0,w,c
  4644  001534  E106               	bnz	u2021
  4645  001536  280E               	incf	(strncmp@len+1)^0,w,c
  4646  001538  A4D8               	btfss	status,2,c
  4647  00153A  EFA1  F00A         	goto	u2021
  4648  00153E  EFA3  F00A         	goto	u2020
  4649  001542                     u2021:
  4650  001542  EF3D  F00A         	goto	l3258
  4651  001546                     u2020:
  4652  001546  0E00               	movlw	0
  4653  001548  6E0A               	movwf	(?_strncmp+1)^0,c
  4654  00154A  0E00               	movlw	0
  4655  00154C  6E09               	movwf	?_strncmp^0,c
  4656  00154E                     l1387:
  4657  00154E  0012               	return		;funcret
  4658  001550                     __end_of_strncmp:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function _strchr *****************
  4662 ;; Defined at:
  4663 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strchr.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  4666 ;;		 -> STR_25(2), NULL(0), A6_SpeedGet@response(32), 
  4667 ;;  chr             2    6[COMRAM] int 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  2    4[COMRAM] PTR unsigned char 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4679 ;;      Params:         4       0       0       0       0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4681 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4682 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4683 ;;Total ram usage:        6 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; Hardware stack levels required when called:    2
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_strstr
  4690 ;;		_strcspn
  4691 ;;		_strspn
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text9
  4696  001B38                     __ptext9:
  4697                           	opt callstack 0
  4698  001B38                     _strchr:
  4699                           	opt callstack 23
  4700  001B38                     l1366:
  4701  001B38  C005  FFF6         	movff	strchr@ptr,tblptrl
  4702  001B3C  C006  FFF7         	movff	strchr@ptr+1,tblptrh
  4703  001B40  6AF8               	clrf	tblptru,c
  4704  001B42  0E07               	movlw	(high __ramtop+-1)
  4705  001B44  64F7               	cpfsgt	tblptrh,c
  4706  001B46  D003               	bra	u1757
  4707  001B48  0008               	tblrd		*
  4708  001B4A  50F5               	movf	tablat,w,c
  4709  001B4C  D005               	bra	u1750
  4710  001B4E                     u1757:
  4711  001B4E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4712  001B52  CFF7 FFEA          	movff	tblptrh,fsr0h
  4713  001B56  50EF               	movf	indf0,w,c
  4714  001B58                     u1750:
  4715  001B58  1807               	xorwf	strchr@chr^0,w,c
  4716  001B5A  A4D8               	btfss	status,2,c
  4717  001B5C  EFB2  F00D         	goto	u1761
  4718  001B60  EFB4  F00D         	goto	u1760
  4719  001B64                     u1761:
  4720  001B64  EFBA  F00D         	goto	l3140
  4721  001B68                     u1760:
  4722  001B68  C005  F005         	movff	strchr@ptr,?_strchr
  4723  001B6C  C006  F006         	movff	strchr@ptr+1,?_strchr+1
  4724  001B70  EFDC  F00D         	goto	l1368
  4725  001B74                     l3140:
  4726  001B74  5005               	movf	strchr@ptr^0,w,c
  4727  001B76  6E09               	movwf	??_strchr^0,c
  4728  001B78  5006               	movf	(strchr@ptr+1)^0,w,c
  4729  001B7A  6E0A               	movwf	(??_strchr+1)^0,c
  4730  001B7C  4A05               	infsnz	strchr@ptr^0,f,c
  4731  001B7E  2A06               	incf	(strchr@ptr+1)^0,f,c
  4732  001B80  C009  FFF6         	movff	??_strchr,tblptrl
  4733  001B84  C00A  FFF7         	movff	??_strchr+1,tblptrh
  4734  001B88  6AF8               	clrf	tblptru,c
  4735  001B8A  0E07               	movlw	(high __ramtop+-1)
  4736  001B8C  64F7               	cpfsgt	tblptrh,c
  4737  001B8E  D003               	bra	u1777
  4738  001B90  0008               	tblrd		*
  4739  001B92  50F5               	movf	tablat,w,c
  4740  001B94  D005               	bra	u1770
  4741  001B96                     u1777:
  4742  001B96  CFF6 FFE9          	movff	tblptrl,fsr0l
  4743  001B9A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4744  001B9E  50EF               	movf	indf0,w,c
  4745  001BA0                     u1770:
  4746  001BA0  0900               	iorlw	0
  4747  001BA2  A4D8               	btfss	status,2,c
  4748  001BA4  EFD6  F00D         	goto	u1781
  4749  001BA8  EFD8  F00D         	goto	u1780
  4750  001BAC                     u1781:
  4751  001BAC  EF9C  F00D         	goto	l1366
  4752  001BB0                     u1780:
  4753  001BB0  0E00               	movlw	0
  4754  001BB2  6E05               	movwf	?_strchr^0,c
  4755  001BB4  0E00               	movlw	0
  4756  001BB6  6E06               	movwf	(?_strchr+1)^0,c
  4757  001BB8                     l1368:
  4758  001BB8  0012               	return		;funcret
  4759  001BBA                     __end_of_strchr:
  4760                           	opt callstack 0
  4761                           
  4762 ;; *************** function _atol *****************
  4763 ;; Defined at:
  4764 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atol.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  s               2   16[COMRAM] PTR const unsigned char 
  4767 ;;		 -> NULL(0), A6_SpeedGet@response(32), 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  a               4   25[COMRAM] long 
  4770 ;;  c               1   29[COMRAM] unsigned char 
  4771 ;;  sign            1   24[COMRAM] unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  4   16[COMRAM] long 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4781 ;;      Params:         4       0       0       0       0       0       0       0       0
  4782 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4783 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4784 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4785 ;;Total ram usage:       14 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    3
  4788 ;; This function calls:
  4789 ;;		___lmul
  4790 ;;		_isdigit
  4791 ;; This function is called by:
  4792 ;;		_A6_SpeedGet
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text10
  4797  0010A0                     __ptext10:
  4798                           	opt callstack 0
  4799  0010A0                     _atol:
  4800                           	opt callstack 24
  4801  0010A0                     l1300:
  4802  0010A0  C011  FFD9         	movff	atol@s,fsr2l
  4803  0010A4  C012  FFDA         	movff	atol@s+1,fsr2h
  4804  0010A8  50DF               	movf	indf2,w,c
  4805  0010AA  6E1E               	movwf	atol@c^0,c
  4806  0010AC  4A11               	infsnz	atol@s^0,f,c
  4807  0010AE  2A12               	incf	(atol@s+1)^0,f,c
  4808  0010B0  0E20               	movlw	32
  4809  0010B2  181E               	xorwf	atol@c^0,w,c
  4810  0010B4  B4D8               	btfsc	status,2,c
  4811  0010B6  EF5F  F008         	goto	u2261
  4812  0010BA  EF61  F008         	goto	u2260
  4813  0010BE                     u2261:
  4814  0010BE  EF50  F008         	goto	l1300
  4815  0010C2                     u2260:
  4816  0010C2  0E09               	movlw	9
  4817  0010C4  181E               	xorwf	atol@c^0,w,c
  4818  0010C6  B4D8               	btfsc	status,2,c
  4819  0010C8  EF68  F008         	goto	u2271
  4820  0010CC  EF6A  F008         	goto	u2270
  4821  0010D0                     u2271:
  4822  0010D0  EF50  F008         	goto	l1300
  4823  0010D4                     u2270:
  4824  0010D4  0E00               	movlw	0
  4825  0010D6  6E1A               	movwf	atol@a^0,c
  4826  0010D8  0E00               	movlw	0
  4827  0010DA  6E1B               	movwf	(atol@a+1)^0,c
  4828  0010DC  0E00               	movlw	0
  4829  0010DE  6E1C               	movwf	(atol@a+2)^0,c
  4830  0010E0  0E00               	movlw	0
  4831  0010E2  6E1D               	movwf	(atol@a+3)^0,c
  4832  0010E4  0E00               	movlw	0
  4833  0010E6  6E19               	movwf	atol@sign^0,c
  4834  0010E8  0E2D               	movlw	45
  4835  0010EA  181E               	xorwf	atol@c^0,w,c
  4836  0010EC  A4D8               	btfss	status,2,c
  4837  0010EE  EF7B  F008         	goto	u2281
  4838  0010F2  EF7D  F008         	goto	u2280
  4839  0010F6                     u2281:
  4840  0010F6  EF88  F008         	goto	l3410
  4841  0010FA                     u2280:
  4842  0010FA  2A19               	incf	atol@sign^0,f,c
  4843  0010FC                     l3406:
  4844  0010FC  C011  FFD9         	movff	atol@s,fsr2l
  4845  001100  C012  FFDA         	movff	atol@s+1,fsr2h
  4846  001104  50DF               	movf	indf2,w,c
  4847  001106  6E1E               	movwf	atol@c^0,c
  4848  001108  4A11               	infsnz	atol@s^0,f,c
  4849  00110A  2A12               	incf	(atol@s+1)^0,f,c
  4850  00110C  EFB7  F008         	goto	l3422
  4851  001110                     l3410:
  4852  001110  0E2B               	movlw	43
  4853  001112  181E               	xorwf	atol@c^0,w,c
  4854  001114  A4D8               	btfss	status,2,c
  4855  001116  EF8F  F008         	goto	u2291
  4856  00111A  EF91  F008         	goto	u2290
  4857  00111E                     u2291:
  4858  00111E  EFB7  F008         	goto	l3422
  4859  001122                     u2290:
  4860  001122  EF7E  F008         	goto	l3406
  4861  001126                     l3416:
  4862  001126  C01A  F005         	movff	atol@a,___lmul@multiplier
  4863  00112A  C01B  F006         	movff	atol@a+1,___lmul@multiplier+1
  4864  00112E  C01C  F007         	movff	atol@a+2,___lmul@multiplier+2
  4865  001132  C01D  F008         	movff	atol@a+3,___lmul@multiplier+3
  4866  001136  0E0A               	movlw	10
  4867  001138  6E09               	movwf	___lmul@multiplicand^0,c
  4868  00113A  0E00               	movlw	0
  4869  00113C  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  4870  00113E  0E00               	movlw	0
  4871  001140  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  4872  001142  0E00               	movlw	0
  4873  001144  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  4874  001146  EC74  F00F         	call	___lmul	;wreg free
  4875  00114A  C01E  F015         	movff	atol@c,??_atol
  4876  00114E  0ED0               	movlw	208
  4877  001150  2615               	addwf	??_atol^0,f,c
  4878  001152  5015               	movf	??_atol^0,w,c
  4879  001154  2405               	addwf	?___lmul^0,w,c
  4880  001156  6E1A               	movwf	atol@a^0,c
  4881  001158  0E00               	movlw	0
  4882  00115A  2006               	addwfc	(?___lmul+1)^0,w,c
  4883  00115C  6E1B               	movwf	(atol@a+1)^0,c
  4884  00115E  0E00               	movlw	0
  4885  001160  2007               	addwfc	(?___lmul+2)^0,w,c
  4886  001162  6E1C               	movwf	(atol@a+2)^0,c
  4887  001164  0E00               	movlw	0
  4888  001166  2008               	addwfc	(?___lmul+3)^0,w,c
  4889  001168  6E1D               	movwf	(atol@a+3)^0,c
  4890  00116A  EF7E  F008         	goto	l3406
  4891  00116E                     l3422:
  4892  00116E  501E               	movf	atol@c^0,w,c
  4893  001170  ECD3  F011         	call	_isdigit
  4894  001174  B0D8               	btfsc	status,0,c
  4895  001176  EFBF  F008         	goto	u2301
  4896  00117A  EFC1  F008         	goto	u2300
  4897  00117E                     u2301:
  4898  00117E  EF93  F008         	goto	l3416
  4899  001182                     u2300:
  4900  001182  5019               	movf	atol@sign^0,w,c
  4901  001184  B4D8               	btfsc	status,2,c
  4902  001186  EFC7  F008         	goto	u2311
  4903  00118A  EFC9  F008         	goto	u2310
  4904  00118E                     u2311:
  4905  00118E  EFE4  F008         	goto	l1308
  4906  001192                     u2310:
  4907  001192  C01A  F015         	movff	atol@a,??_atol
  4908  001196  C01B  F016         	movff	atol@a+1,??_atol+1
  4909  00119A  C01C  F017         	movff	atol@a+2,??_atol+2
  4910  00119E  C01D  F018         	movff	atol@a+3,??_atol+3
  4911  0011A2  1E15               	comf	??_atol^0,f,c
  4912  0011A4  1E16               	comf	(??_atol+1)^0,f,c
  4913  0011A6  1E17               	comf	(??_atol+2)^0,f,c
  4914  0011A8  1E18               	comf	(??_atol+3)^0,f,c
  4915  0011AA  2A15               	incf	??_atol^0,f,c
  4916  0011AC  0E00               	movlw	0
  4917  0011AE  2216               	addwfc	(??_atol+1)^0,f,c
  4918  0011B0  2217               	addwfc	(??_atol+2)^0,f,c
  4919  0011B2  2218               	addwfc	(??_atol+3)^0,f,c
  4920  0011B4  C015  F011         	movff	??_atol,?_atol
  4921  0011B8  C016  F012         	movff	??_atol+1,?_atol+1
  4922  0011BC  C017  F013         	movff	??_atol+2,?_atol+2
  4923  0011C0  C018  F014         	movff	??_atol+3,?_atol+3
  4924  0011C4  EFEC  F008         	goto	l1309
  4925  0011C8                     l1308:
  4926  0011C8  C01A  F011         	movff	atol@a,?_atol
  4927  0011CC  C01B  F012         	movff	atol@a+1,?_atol+1
  4928  0011D0  C01C  F013         	movff	atol@a+2,?_atol+2
  4929  0011D4  C01D  F014         	movff	atol@a+3,?_atol+3
  4930  0011D8                     l1309:
  4931  0011D8  0012               	return		;funcret
  4932  0011DA                     __end_of_atol:
  4933                           	opt callstack 0
  4934                           
  4935 ;; *************** function ___lmul *****************
  4936 ;; Defined at:
  4937 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  multiplier      4    4[COMRAM] unsigned long 
  4940 ;;  multiplicand    4    8[COMRAM] unsigned long 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  product         4   12[COMRAM] unsigned long 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  4    4[COMRAM] unsigned long 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4952 ;;      Params:         8       0       0       0       0       0       0       0       0
  4953 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4955 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4956 ;;Total ram usage:       12 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    2
  4959 ;; This function calls:
  4960 ;;		Nothing
  4961 ;; This function is called by:
  4962 ;;		_atol
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text11
  4967  001EE8                     __ptext11:
  4968                           	opt callstack 0
  4969  001EE8                     ___lmul:
  4970                           	opt callstack 24
  4971  001EE8  0E00               	movlw	0
  4972  001EEA  6E0D               	movwf	___lmul@product^0,c
  4973  001EEC  0E00               	movlw	0
  4974  001EEE  6E0E               	movwf	(___lmul@product+1)^0,c
  4975  001EF0  0E00               	movlw	0
  4976  001EF2  6E0F               	movwf	(___lmul@product+2)^0,c
  4977  001EF4  0E00               	movlw	0
  4978  001EF6  6E10               	movwf	(___lmul@product+3)^0,c
  4979  001EF8                     l3248:
  4980  001EF8  A005               	btfss	___lmul@multiplier^0,0,c
  4981  001EFA  EF81  F00F         	goto	u1961
  4982  001EFE  EF83  F00F         	goto	u1960
  4983  001F02                     u1961:
  4984  001F02  EF8B  F00F         	goto	l3252
  4985  001F06                     u1960:
  4986  001F06  5009               	movf	___lmul@multiplicand^0,w,c
  4987  001F08  260D               	addwf	___lmul@product^0,f,c
  4988  001F0A  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  4989  001F0C  220E               	addwfc	(___lmul@product+1)^0,f,c
  4990  001F0E  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  4991  001F10  220F               	addwfc	(___lmul@product+2)^0,f,c
  4992  001F12  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  4993  001F14  2210               	addwfc	(___lmul@product+3)^0,f,c
  4994  001F16                     l3252:
  4995  001F16  90D8               	bcf	status,0,c
  4996  001F18  3609               	rlcf	___lmul@multiplicand^0,f,c
  4997  001F1A  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4998  001F1C  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4999  001F1E  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5000  001F20  90D8               	bcf	status,0,c
  5001  001F22  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  5002  001F24  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  5003  001F26  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  5004  001F28  3205               	rrcf	___lmul@multiplier^0,f,c
  5005  001F2A  5005               	movf	___lmul@multiplier^0,w,c
  5006  001F2C  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  5007  001F2E  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  5008  001F30  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  5009  001F32  A4D8               	btfss	status,2,c
  5010  001F34  EF9E  F00F         	goto	u1971
  5011  001F38  EFA0  F00F         	goto	u1970
  5012  001F3C                     u1971:
  5013  001F3C  EF7C  F00F         	goto	l3248
  5014  001F40                     u1970:
  5015  001F40  C00D  F005         	movff	___lmul@product,?___lmul
  5016  001F44  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  5017  001F48  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  5018  001F4C  C010  F008         	movff	___lmul@product+3,?___lmul+3
  5019  001F50  0012               	return		;funcret
  5020  001F52                     __end_of___lmul:
  5021                           	opt callstack 0
  5022                           
  5023 ;; *************** function _init *****************
  5024 ;; Defined at:
  5025 ;;		line 15 in file "init.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;		None
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0
  5040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5041 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5042 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5043 ;;Total ram usage:        2 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    2
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_main
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text12
  5054  001D9C                     __ptext12:
  5055                           	opt callstack 0
  5056  001D9C                     _init:
  5057                           	opt callstack 28
  5058  001D9C                     
  5059                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  5060  001D9C  9ED3               	bcf	211,7,c	;volatile
  5061  001D9E                     
  5062                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  5063  001D9E  0E70               	movlw	112
  5064  001DA0  12D3               	iorwf	211,f,c	;volatile
  5065                           
  5066                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  5067  001DA2  0EFC               	movlw	-4
  5068  001DA4  16D3               	andwf	211,f,c	;volatile
  5069  001DA6                     
  5070                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  5071  001DA6  8E9B               	bsf	155,7,c	;volatile
  5072                           
  5073                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  5074  001DA8  0EE0               	movlw	-32
  5075  001DAA  169B               	andwf	155,f,c	;volatile
  5076  001DAC                     
  5077                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  5078  001DAC  0E07               	movlw	7
  5079  001DAE  6E06               	movwf	(??_init+1)^0,c
  5080  001DB0  0E17               	movlw	23
  5081  001DB2  6E05               	movwf	??_init^0,c
  5082  001DB4  0E6A               	movlw	106
  5083  001DB6                     u3757:
  5084  001DB6  2EE8               	decfsz	wreg,f,c
  5085  001DB8  D7FE               	bra	u3757
  5086  001DBA  2E05               	decfsz	??_init^0,f,c
  5087  001DBC  D7FC               	bra	u3757
  5088  001DBE  2E06               	decfsz	(??_init+1)^0,f,c
  5089  001DC0  D7FA               	bra	u3757
  5090  001DC2  D000               	nop2	
  5091  001DC4                     
  5092                           ;init.c: 27: UCONbits.USBEN = 0;
  5093  001DC4  966D               	bcf	109,3,c	;volatile
  5094  001DC6                     
  5095                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  5096  001DC6  866F               	bsf	111,3,c	;volatile
  5097  001DC8                     
  5098                           ;init.c: 41: TRISA = 0b00001011;
  5099  001DC8  0E0B               	movlw	11
  5100  001DCA  6E92               	movwf	146,c	;volatile
  5101  001DCC                     
  5102                           ;init.c: 42: LATA = 0x00;
  5103  001DCC  0E00               	movlw	0
  5104  001DCE  6E89               	movwf	137,c	;volatile
  5105  001DD0                     
  5106                           ;init.c: 48: RBPU = 1;
  5107  001DD0  8EF1               	bsf	4081,7,c	;volatile
  5108  001DD2                     
  5109                           ;init.c: 49: TRISB = 0x00;
  5110  001DD2  0E00               	movlw	0
  5111  001DD4  6E93               	movwf	147,c	;volatile
  5112  001DD6                     
  5113                           ;init.c: 50: LATB = 0x00;
  5114  001DD6  0E00               	movlw	0
  5115  001DD8  6E8A               	movwf	138,c	;volatile
  5116  001DDA                     
  5117                           ;init.c: 63: TRISC = 0b11110000;
  5118  001DDA  0EF0               	movlw	240
  5119  001DDC  6E94               	movwf	148,c	;volatile
  5120  001DDE                     
  5121                           ;init.c: 64: LATC = 0x00;
  5122  001DDE  0E00               	movlw	0
  5123  001DE0  6E8B               	movwf	139,c	;volatile
  5124  001DE2                     
  5125                           ;init.c: 67: ADCON0bits.ADON = 0;
  5126  001DE2  90C2               	bcf	194,0,c	;volatile
  5127  001DE4                     
  5128                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  5129  001DE4  0ECF               	movlw	-49
  5130  001DE6  16C1               	andwf	193,f,c	;volatile
  5131  001DE8                     
  5132                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  5133  001DE8  50C1               	movf	193,w,c	;volatile
  5134  001DEA  0BF0               	andlw	-16
  5135  001DEC  090E               	iorlw	14
  5136  001DEE  6EC1               	movwf	193,c	;volatile
  5137  001DF0                     
  5138                           ;init.c: 70: ADCON2bits.ADFM = 1;
  5139  001DF0  8EC0               	bsf	192,7,c	;volatile
  5140  001DF2                     
  5141                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  5142  001DF2  0EC7               	movlw	-57
  5143  001DF4  16C0               	andwf	192,f,c	;volatile
  5144  001DF6                     
  5145                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  5146  001DF6  50C0               	movf	192,w,c	;volatile
  5147  001DF8  0BF8               	andlw	-8
  5148  001DFA  0902               	iorlw	2
  5149  001DFC  6EC0               	movwf	192,c	;volatile
  5150  001DFE                     
  5151                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  5152  001DFE  0ECF               	movlw	-49
  5153  001E00  16B1               	andwf	177,f,c	;volatile
  5154  001E02                     
  5155                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  5156  001E02  92B1               	bcf	177,1,c	;volatile
  5157  001E04                     
  5158                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  5159  001E04  80B1               	bsf	177,0,c	;volatile
  5160  001E06                     
  5161                           ;init.c: 78: TMR3IE = 1;
  5162  001E06  82A0               	bsf	4000,1,c	;volatile
  5163  001E08                     
  5164                           ;init.c: 81: PEIE = 1;
  5165  001E08  8CF2               	bsf	4082,6,c	;volatile
  5166  001E0A                     
  5167                           ;init.c: 82: GIE = 1;
  5168  001E0A  8EF2               	bsf	4082,7,c	;volatile
  5169  001E0C  0012               	return		;funcret
  5170  001E0E                     __end_of_init:
  5171                           	opt callstack 0
  5172                           
  5173 ;; *************** function _TFT_Init *****************
  5174 ;; Defined at:
  5175 ;;		line 72 in file "TFT.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  i               2   37[COMRAM] unsigned int 
  5180 ;;  cmd             2   35[COMRAM] unsigned int 
  5181 ;;  initSequence    2   33[COMRAM] unsigned int 
  5182 ;;  data            2   31[COMRAM] unsigned int 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  1    wreg      void 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5192 ;;      Params:         0       0       0       0       0       0       0       0       0
  5193 ;;      Locals:         8       0       0       0       0       0       0       0       0
  5194 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5195 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5196 ;;Total ram usage:       10 bytes
  5197 ;; Hardware stack levels used:    1
  5198 ;; Hardware stack levels required when called:    5
  5199 ;; This function calls:
  5200 ;;		_TFT_FillScreen
  5201 ;;		_TFT_FullScreen
  5202 ;;		_TFT_Reset
  5203 ;;		_TFT_WriteRegister
  5204 ;; This function is called by:
  5205 ;;		_main
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text13
  5210  001398                     __ptext13:
  5211                           	opt callstack 0
  5212  001398                     _TFT_Init:
  5213                           	opt callstack 25
  5214  001398                     
  5215                           ;TFT.c: 73: TFT_Reset();
  5216  001398  EC5F  F012         	call	_TFT_Reset	;wreg free
  5217  00139C                     
  5218                           ;TFT.c: 74: _delay((unsigned long)((200)*(48000000/4000.0)));
  5219  00139C  0E0D               	movlw	13
  5220  00139E  6E1F               	movwf	(??_TFT_Init+1)^0,c
  5221  0013A0  0E2D               	movlw	45
  5222  0013A2  6E1E               	movwf	??_TFT_Init^0,c
  5223  0013A4  0ED8               	movlw	216
  5224  0013A6                     u3767:
  5225  0013A6  2EE8               	decfsz	wreg,f,c
  5226  0013A8  D7FE               	bra	u3767
  5227  0013AA  2E1E               	decfsz	??_TFT_Init^0,f,c
  5228  0013AC  D7FC               	bra	u3767
  5229  0013AE  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  5230  0013B0  D7FA               	bra	u3767
  5231  0013B2                     
  5232                           ;TFT.c: 77: uint16_t i=0, cmd, data;
  5233  0013B2  0E00               	movlw	0
  5234  0013B4  6E27               	movwf	(TFT_Init@i+1)^0,c
  5235  0013B6  0E00               	movlw	0
  5236  0013B8  6E26               	movwf	TFT_Init@i^0,c
  5237  0013BA                     
  5238                           ;TFT.c: 78: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  5239  0013BA  0E00               	movlw	0
  5240  0013BC  6E23               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  5241  0013BE  0E66               	movlw	102
  5242  0013C0  6E22               	movwf	TFT_Init@initSequenceSize^0,c
  5243                           
  5244                           ;TFT.c: 79: while(i != initSequenceSize) {
  5245  0013C2  EF26  F00A         	goto	l3834
  5246  0013C6                     l3822:
  5247                           
  5248                           ;TFT.c: 80: cmd = TFT_Init_Sequence[i++];
  5249  0013C6  90D8               	bcf	status,0,c
  5250  0013C8  3426               	rlcf	TFT_Init@i^0,w,c
  5251  0013CA  6EF6               	movwf	tblptrl,c
  5252  0013CC  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  5253  0013CE  6EF7               	movwf	tblptrh,c
  5254  0013D0  0E9F               	movlw	low _TFT_Init_Sequence
  5255  0013D2  26F6               	addwf	tblptrl,f,c
  5256  0013D4  0E5D               	movlw	high _TFT_Init_Sequence
  5257  0013D6  22F7               	addwfc	tblptrh,f,c
  5258  0013D8                     	if	0	;There are less than 3 active tblptr bytes
  5259  0013D8                     	endif
  5260  0013D8  0009               	tblrd		*+
  5261  0013DA  CFF5 F024          	movff	tablat,TFT_Init@cmd
  5262  0013DE  000A               	tblrd		*-
  5263  0013E0  CFF5 F025          	movff	tablat,TFT_Init@cmd+1
  5264  0013E4  4A26               	infsnz	TFT_Init@i^0,f,c
  5265  0013E6  2A27               	incf	(TFT_Init@i+1)^0,f,c
  5266  0013E8                     
  5267                           ;TFT.c: 81: data = TFT_Init_Sequence[i++];
  5268  0013E8  90D8               	bcf	status,0,c
  5269  0013EA  3426               	rlcf	TFT_Init@i^0,w,c
  5270  0013EC  6EF6               	movwf	tblptrl,c
  5271  0013EE  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  5272  0013F0  6EF7               	movwf	tblptrh,c
  5273  0013F2  0E9F               	movlw	low _TFT_Init_Sequence
  5274  0013F4  26F6               	addwf	tblptrl,f,c
  5275  0013F6  0E5D               	movlw	high _TFT_Init_Sequence
  5276  0013F8  22F7               	addwfc	tblptrh,f,c
  5277  0013FA                     	if	0	;There are less than 3 active tblptr bytes
  5278  0013FA                     	endif
  5279  0013FA  0009               	tblrd		*+
  5280  0013FC  CFF5 F020          	movff	tablat,TFT_Init@data
  5281  001400  000A               	tblrd		*-
  5282  001402  CFF5 F021          	movff	tablat,TFT_Init@data+1
  5283  001406  4A26               	infsnz	TFT_Init@i^0,f,c
  5284  001408  2A27               	incf	(TFT_Init@i+1)^0,f,c
  5285  00140A                     
  5286                           ;TFT.c: 82: if(cmd == 0xFFFF) {
  5287  00140A  2824               	incf	TFT_Init@cmd^0,w,c
  5288  00140C  E106               	bnz	u2861
  5289  00140E  2825               	incf	(TFT_Init@cmd+1)^0,w,c
  5290  001410  A4D8               	btfss	status,2,c
  5291  001412  EF0D  F00A         	goto	u2861
  5292  001416  EF0F  F00A         	goto	u2860
  5293  00141A                     u2861:
  5294  00141A  EF1C  F00A         	goto	l3832
  5295  00141E                     u2860:
  5296  00141E                     
  5297                           ;TFT.c: 83: _delay((unsigned long)((200)*(48000000/4000.0)));
  5298  00141E  0E0D               	movlw	13
  5299  001420  6E1F               	movwf	(??_TFT_Init+1)^0,c
  5300  001422  0E2D               	movlw	45
  5301  001424  6E1E               	movwf	??_TFT_Init^0,c
  5302  001426  0ED8               	movlw	216
  5303  001428                     u3777:
  5304  001428  2EE8               	decfsz	wreg,f,c
  5305  00142A  D7FE               	bra	u3777
  5306  00142C  2E1E               	decfsz	??_TFT_Init^0,f,c
  5307  00142E  D7FC               	bra	u3777
  5308  001430  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  5309  001432  D7FA               	bra	u3777
  5310                           
  5311                           ;TFT.c: 84: } else {
  5312  001434  EF26  F00A         	goto	l3834
  5313  001438                     l3832:
  5314                           
  5315                           ;TFT.c: 85: TFT_WriteRegister(cmd, data);
  5316  001438  C024  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  5317  00143C  C025  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  5318  001440  C020  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  5319  001444  C021  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  5320  001448  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  5321  00144C                     l3834:
  5322  00144C  5022               	movf	TFT_Init@initSequenceSize^0,w,c
  5323  00144E  1826               	xorwf	TFT_Init@i^0,w,c
  5324  001450  E107               	bnz	u2871
  5325  001452  5023               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  5326  001454  1827               	xorwf	(TFT_Init@i+1)^0,w,c
  5327  001456  A4D8               	btfss	status,2,c
  5328  001458  EF30  F00A         	goto	u2871
  5329  00145C  EF32  F00A         	goto	u2870
  5330  001460                     u2871:
  5331  001460  EFE3  F009         	goto	l3822
  5332  001464                     u2870:
  5333  001464                     
  5334                           ;TFT.c: 86: };TFT.c: 87: };TFT.c: 90: TFT_FullScreen();
  5335  001464  EC2C  F012         	call	_TFT_FullScreen	;wreg free
  5336  001468                     
  5337                           ;TFT.c: 91: TFT_FillScreen(0x0000);
  5338  001468  0E00               	movlw	0
  5339  00146A  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  5340  00146C  0E00               	movlw	0
  5341  00146E  6E1C               	movwf	TFT_FillScreen@color^0,c
  5342  001470  ECBD  F010         	call	_TFT_FillScreen	;wreg free
  5343  001474  0012               	return		;funcret
  5344  001476                     __end_of_TFT_Init:
  5345                           	opt callstack 0
  5346                           
  5347 ;; *************** function _TFT_Reset *****************
  5348 ;; Defined at:
  5349 ;;		line 46 in file "TFT.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  1    wreg      void 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5363 ;;      Params:         0       0       0       0       0       0       0       0       0
  5364 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5365 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5366 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5367 ;;Total ram usage:        1 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    2
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_TFT_Init
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           	psect	text14
  5378  0024BE                     __ptext14:
  5379                           	opt callstack 0
  5380  0024BE                     _TFT_Reset:
  5381                           	opt callstack 27
  5382  0024BE                     
  5383                           ;TFT.c: 47: TRISB = 0x00;;
  5384  0024BE  0E00               	movlw	0
  5385  0024C0  6E93               	movwf	147,c	;volatile
  5386  0024C2                     
  5387                           ;TFT.c: 48: PORTCbits.RC0 = 1;;
  5388  0024C2  8082               	bsf	130,0,c	;volatile
  5389  0024C4                     
  5390                           ;TFT.c: 49: PORTAbits.RA5 = 1;;
  5391  0024C4  8A80               	bsf	128,5,c	;volatile
  5392  0024C6                     
  5393                           ;TFT.c: 50: PORTAbits.RA4 = 1;;
  5394  0024C6  8880               	bsf	128,4,c	;volatile
  5395  0024C8                     
  5396                           ;TFT.c: 51: PORTCbits.RC2 = 0;;
  5397  0024C8  9482               	bcf	130,2,c	;volatile
  5398  0024CA                     
  5399                           ;TFT.c: 52: _delay((unsigned long)((2)*(48000000/4000.0)));
  5400  0024CA  0E20               	movlw	32
  5401  0024CC  6E05               	movwf	??_TFT_Reset^0,c
  5402  0024CE  0E2A               	movlw	42
  5403  0024D0                     u3787:
  5404  0024D0  2EE8               	decfsz	wreg,f,c
  5405  0024D2  D7FE               	bra	u3787
  5406  0024D4  2E05               	decfsz	??_TFT_Reset^0,f,c
  5407  0024D6  D7FC               	bra	u3787
  5408  0024D8                     
  5409                           ;TFT.c: 53: PORTCbits.RC2 = 1;;
  5410  0024D8  8482               	bsf	130,2,c	;volatile
  5411  0024DA  0012               	return		;funcret
  5412  0024DC                     __end_of_TFT_Reset:
  5413                           	opt callstack 0
  5414                           
  5415 ;; *************** function _Ecg_Init *****************
  5416 ;; Defined at:
  5417 ;;		line 12 in file "ecg.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5434 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5435 ;;Total ram usage:        0 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:    9
  5438 ;; This function calls:
  5439 ;;		_Ecg_Background_Leads_Failure
  5440 ;;		_Ecg_Background_Leads_Ok
  5441 ;;		_Ecg_CheckLeads
  5442 ;; This function is called by:
  5443 ;;		_main
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text15
  5448  0023D8                     __ptext15:
  5449                           	opt callstack 0
  5450  0023D8                     _Ecg_Init:
  5451                           	opt callstack 21
  5452  0023D8                     
  5453                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  5454  0023D8  EC6F  F010         	call	_Ecg_CheckLeads	;wreg free
  5455  0023DC  5005               	movf	?_Ecg_CheckLeads^0,w,c
  5456  0023DE  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  5457  0023E0  A4D8               	btfss	status,2,c
  5458  0023E2  EFF5  F011         	goto	u2881
  5459  0023E6  EFF7  F011         	goto	u2880
  5460  0023EA                     u2881:
  5461  0023EA  EFFB  F011         	goto	l3854
  5462  0023EE                     u2880:
  5463  0023EE                     
  5464                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  5465  0023EE  EC57  F00E         	call	_Ecg_Background_Leads_Ok	;wreg free
  5466                           
  5467                           ;ecg.c: 15: } else {
  5468  0023F2  EFFD  F011         	goto	l3856
  5469  0023F6                     l3854:
  5470                           
  5471                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  5472  0023F6  EC62  F011         	call	_Ecg_Background_Leads_Failure	;wreg free
  5473  0023FA                     l3856:
  5474                           
  5475                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  5476  0023FA  0E00               	movlw	0
  5477  0023FC  0100               	movlb	0	; () banked
  5478  0023FE  6FE9               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  5479  002400                     
  5480                           ; BSR set to: 0
  5481                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  5482  002400  0E00               	movlw	0
  5483  002402  6FEE               	movwf	(_ECG_BUFFER+4)& (0+255),b
  5484  002404                     
  5485                           ; BSR set to: 0
  5486                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  5487  002404  8DEF               	bsf	_ECG_HEARTRATE& (0+255),6,b
  5488  002406                     
  5489                           ; BSR set to: 0
  5490  002406  0012               	return		;funcret
  5491  002408                     __end_of_Ecg_Init:
  5492                           	opt callstack 0
  5493                           
  5494 ;; *************** function _Ecg_CheckLeads *****************
  5495 ;; Defined at:
  5496 ;;		line 141 in file "ecg.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  2    4[COMRAM] unsigned int 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5510 ;;      Params:         2       0       0       0       0       0       0       0       0
  5511 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5512 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5513 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5514 ;;Total ram usage:        4 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    2
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_Ecg_Init
  5521 ;;		_Ecg_ProcessEcg
  5522 ;; This function uses a non-reentrant model
  5523 ;;
  5524                           
  5525                           	psect	text16
  5526  0020DE                     __ptext16:
  5527                           	opt callstack 0
  5528  0020DE                     _Ecg_CheckLeads:
  5529                           	opt callstack 27
  5530  0020DE                     
  5531                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  5532  0020DE  0E00               	movlw	0
  5533  0020E0  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  5534  0020E2                     
  5535                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  5536  0020E2  AA82               	btfss	130,5,c	;volatile
  5537  0020E4  EF76  F010         	goto	u2821
  5538  0020E8  EF78  F010         	goto	u2820
  5539  0020EC                     u2821:
  5540  0020EC  EF79  F010         	goto	l3790
  5541  0020F0                     u2820:
  5542  0020F0  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  5543  0020F2                     l3790:
  5544                           
  5545                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  5546  0020F2  A882               	btfss	130,4,c	;volatile
  5547  0020F4  EF7E  F010         	goto	u2831
  5548  0020F8  EF80  F010         	goto	u2830
  5549  0020FC                     u2831:
  5550  0020FC  EF81  F010         	goto	l3794
  5551  002100                     u2830:
  5552  002100  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  5553  002102                     l3794:
  5554                           
  5555                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  5556  002102  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  5557  002104  B4D8               	btfsc	status,2,c
  5558  002106  EF87  F010         	goto	u2841
  5559  00210A  EF8B  F010         	goto	u2840
  5560  00210E                     u2841:
  5561  00210E  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5562  002110  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  5563  002112  EF8C  F010         	goto	u2858
  5564  002116                     u2840:
  5565  002116  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5566  002118                     u2858:
  5567  002118  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  5568  00211A  5055               	movf	_ECG_FLAGS^0,w,c
  5569  00211C  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5570  00211E  0BFD               	andlw	-3
  5571  002120  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5572  002122  6E55               	movwf	_ECG_FLAGS^0,c
  5573  002124                     
  5574                           ;ecg.c: 146: return leadsStatus;
  5575  002124  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  5576  002128  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  5577  00212A  0012               	return		;funcret
  5578  00212C                     __end_of_Ecg_CheckLeads:
  5579                           	opt callstack 0
  5580                           
  5581 ;; *************** function _Ecg_Background_Leads_Ok *****************
  5582 ;; Defined at:
  5583 ;;		line 180 in file "ecg.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;		None
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;		None
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  1    wreg      void 
  5590 ;; Registers used:
  5591 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5597 ;;      Params:         0       0       0       0       0       0       0       0       0
  5598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5600 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5601 ;;Total ram usage:        0 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    8
  5604 ;; This function calls:
  5605 ;;		_TFT_DrawLine
  5606 ;;		_TFT_DrawString
  5607 ;;		_TFT_FillScreen
  5608 ;; This function is called by:
  5609 ;;		_Ecg_Init
  5610 ;;		_Ecg_ProcessEcg
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text17
  5615  001CAE                     __ptext17:
  5616                           	opt callstack 0
  5617  001CAE                     _Ecg_Background_Leads_Ok:
  5618                           	opt callstack 21
  5619  001CAE                     
  5620                           ;ecg.c: 181: TFT_FillScreen(0x0000);
  5621  001CAE  0E00               	movlw	0
  5622  001CB0  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  5623  001CB2  0E00               	movlw	0
  5624  001CB4  6E1C               	movwf	TFT_FillScreen@color^0,c
  5625  001CB6  ECBD  F010         	call	_TFT_FillScreen	;wreg free
  5626  001CBA                     
  5627                           ;ecg.c: 182: TFT_DrawString(8, (400 - 10), "Frequenza:", 0xFFFF, 0x0000, 2);
  5628  001CBA  0E00               	movlw	0
  5629  001CBC  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  5630  001CBE  0E08               	movlw	8
  5631  001CC0  6E3F               	movwf	TFT_DrawString@x^0,c
  5632  001CC2  0E01               	movlw	1
  5633  001CC4  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  5634  001CC6  0E86               	movlw	134
  5635  001CC8  6E41               	movwf	TFT_DrawString@y^0,c
  5636  001CCA  0EAE               	movlw	low STR_15
  5637  001CCC  6E43               	movwf	TFT_DrawString@str^0,c
  5638  001CCE  0E5F               	movlw	high STR_15
  5639  001CD0  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  5640  001CD2  0EFF               	movlw	255
  5641  001CD4  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  5642  001CD6  6845               	setf	TFT_DrawString@color^0,c
  5643  001CD8  0E00               	movlw	0
  5644  001CDA  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  5645  001CDC  0E00               	movlw	0
  5646  001CDE  6E47               	movwf	TFT_DrawString@bg^0,c
  5647  001CE0  0E02               	movlw	2
  5648  001CE2  6E49               	movwf	TFT_DrawString@size^0,c
  5649  001CE4  EC87  F00C         	call	_TFT_DrawString	;wreg free
  5650  001CE8                     
  5651                           ;ecg.c: 183: TFT_DrawLine((33 - 1), 0, (33 - 1), 400, 0xFFFF);
  5652  001CE8  0E00               	movlw	0
  5653  001CEA  6E14               	movwf	(TFT_DrawLine@x0+1)^0,c
  5654  001CEC  0E20               	movlw	32
  5655  001CEE  6E13               	movwf	TFT_DrawLine@x0^0,c
  5656  001CF0  0E00               	movlw	0
  5657  001CF2  6E16               	movwf	(TFT_DrawLine@y0+1)^0,c
  5658  001CF4  0E00               	movlw	0
  5659  001CF6  6E15               	movwf	TFT_DrawLine@y0^0,c
  5660  001CF8  0E00               	movlw	0
  5661  001CFA  6E18               	movwf	(TFT_DrawLine@x1+1)^0,c
  5662  001CFC  0E20               	movlw	32
  5663  001CFE  6E17               	movwf	TFT_DrawLine@x1^0,c
  5664  001D00  0E01               	movlw	1
  5665  001D02  6E1A               	movwf	(TFT_DrawLine@y1+1)^0,c
  5666  001D04  0E90               	movlw	144
  5667  001D06  6E19               	movwf	TFT_DrawLine@y1^0,c
  5668  001D08  0EFF               	movlw	255
  5669  001D0A  6E1C               	movwf	(TFT_DrawLine@color+1)^0,c
  5670  001D0C  681B               	setf	TFT_DrawLine@color^0,c
  5671  001D0E  EC43  F005         	call	_TFT_DrawLine	;wreg free
  5672  001D12                     
  5673                           ;ecg.c: 184: Ecg_Y = 400 - 1;
  5674  001D12  0E01               	movlw	1
  5675  001D14  6E58               	movwf	(_Ecg_Y+1)^0,c
  5676  001D16  0E8F               	movlw	143
  5677  001D18  6E57               	movwf	_Ecg_Y^0,c
  5678  001D1A                     
  5679                           ;ecg.c: 185: Ecg_Yold = 400 - 1;
  5680  001D1A  0E01               	movlw	1
  5681  001D1C  0100               	movlb	0	; () banked
  5682  001D1E  6FDA               	movwf	(_Ecg_Yold+1)& (0+255),b
  5683  001D20  0E8F               	movlw	143
  5684  001D22  6FD9               	movwf	_Ecg_Yold& (0+255),b
  5685  001D24                     
  5686                           ; BSR set to: 0
  5687  001D24  0012               	return		;funcret
  5688  001D26                     __end_of_Ecg_Background_Leads_Ok:
  5689                           	opt callstack 0
  5690                           
  5691 ;; *************** function _TFT_DrawLine *****************
  5692 ;; Defined at:
  5693 ;;		line 100 in file "TFT.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  x0              2   18[COMRAM] int 
  5696 ;;  y0              2   20[COMRAM] int 
  5697 ;;  x1              2   22[COMRAM] int 
  5698 ;;  y1              2   24[COMRAM] int 
  5699 ;;  color           2   26[COMRAM] unsigned int 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  t               2   37[COMRAM] int 
  5702 ;;  t               2   35[COMRAM] int 
  5703 ;;  t               2   33[COMRAM] int 
  5704 ;;  t               2   31[COMRAM] int 
  5705 ;;  dx              2   47[COMRAM] int 
  5706 ;;  steep           2   45[COMRAM] int 
  5707 ;;  err             2   43[COMRAM] int 
  5708 ;;  ystep           2   41[COMRAM] int 
  5709 ;;  dy              2   39[COMRAM] int 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5719 ;;      Params:        10       0       0       0       0       0       0       0       0
  5720 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5721 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5722 ;;      Totals:        31       0       0       0       0       0       0       0       0
  5723 ;;Total ram usage:       31 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    4
  5726 ;; This function calls:
  5727 ;;		_TFT_DrawPixel
  5728 ;;		___awdiv
  5729 ;;		_abs
  5730 ;; This function is called by:
  5731 ;;		_Ecg_Background_Leads_Ok
  5732 ;;		_Ecg_Draw
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735                           
  5736                           	psect	text18
  5737  000A86                     __ptext18:
  5738                           	opt callstack 0
  5739  000A86                     _TFT_DrawLine:
  5740                           	opt callstack 24
  5741  000A86                     
  5742                           ;TFT.c: 101: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  5743  000A86  5013               	movf	TFT_DrawLine@x0^0,w,c
  5744  000A88  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  5745  000A8A  6E05               	movwf	abs@a^0,c
  5746  000A8C  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  5747  000A8E  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  5748  000A90  6E06               	movwf	(abs@a+1)^0,c
  5749  000A92  ECB9  F011         	call	_abs	;wreg free
  5750  000A96  C005  F01D         	movff	?_abs,??_TFT_DrawLine
  5751  000A9A  C006  F01E         	movff	?_abs+1,??_TFT_DrawLine+1
  5752  000A9E  5015               	movf	TFT_DrawLine@y0^0,w,c
  5753  000AA0  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  5754  000AA2  6E05               	movwf	abs@a^0,c
  5755  000AA4  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  5756  000AA6  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  5757  000AA8  6E06               	movwf	(abs@a+1)^0,c
  5758  000AAA  ECB9  F011         	call	_abs	;wreg free
  5759  000AAE  5005               	movf	?_abs^0,w,c
  5760  000AB0  5C1D               	subwf	??_TFT_DrawLine^0,w,c
  5761  000AB2  501E               	movf	(??_TFT_DrawLine+1)^0,w,c
  5762  000AB4  0A80               	xorlw	128
  5763  000AB6  6E1F               	movwf	(??_TFT_DrawLine+2)^0,c
  5764  000AB8  5006               	movf	(?_abs+1)^0,w,c
  5765  000ABA  0A80               	xorlw	128
  5766  000ABC  581F               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  5767  000ABE  A0D8               	btfss	status,0,c
  5768  000AC0  EF64  F005         	goto	u2681
  5769  000AC4  EF67  F005         	goto	u2680
  5770  000AC8                     u2681:
  5771  000AC8  0E01               	movlw	1
  5772  000ACA  EF68  F005         	goto	u2690
  5773  000ACE                     u2680:
  5774  000ACE  0E00               	movlw	0
  5775  000AD0                     u2690:
  5776  000AD0  6E2E               	movwf	TFT_DrawLine@steep^0,c
  5777  000AD2  6A2F               	clrf	(TFT_DrawLine@steep+1)^0,c
  5778  000AD4                     
  5779                           ;TFT.c: 102: if(steep) {
  5780  000AD4  502E               	movf	TFT_DrawLine@steep^0,w,c
  5781  000AD6  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  5782  000AD8  B4D8               	btfsc	status,2,c
  5783  000ADA  EF71  F005         	goto	u2701
  5784  000ADE  EF73  F005         	goto	u2700
  5785  000AE2                     u2701:
  5786  000AE2  EF8B  F005         	goto	l3688
  5787  000AE6                     u2700:
  5788  000AE6                     
  5789                           ;TFT.c: 103: { int16_t t = x0; x0 = y0; y0 = t; };
  5790  000AE6  C013  F020         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  5791  000AEA  C014  F021         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  5792  000AEE  C015  F013         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  5793  000AF2  C016  F014         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  5794  000AF6  C020  F015         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  5795  000AFA  C021  F016         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  5796                           
  5797                           ;TFT.c: 104: { int16_t t = x1; x1 = y1; y1 = t; };
  5798  000AFE  C017  F022         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_760
  5799  000B02  C018  F023         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_760+1
  5800  000B06  C019  F017         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  5801  000B0A  C01A  F018         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  5802  000B0E  C022  F019         	movff	TFT_DrawLine@t_760,TFT_DrawLine@y1
  5803  000B12  C023  F01A         	movff	TFT_DrawLine@t_760+1,TFT_DrawLine@y1+1
  5804  000B16                     l3688:
  5805                           
  5806                           ;TFT.c: 105: };TFT.c: 106: if(x0 > x1) {
  5807  000B16  5013               	movf	TFT_DrawLine@x0^0,w,c
  5808  000B18  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  5809  000B1A  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  5810  000B1C  0A80               	xorlw	128
  5811  000B1E  6E1D               	movwf	??_TFT_DrawLine^0,c
  5812  000B20  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  5813  000B22  0A80               	xorlw	128
  5814  000B24  581D               	subwfb	??_TFT_DrawLine^0,w,c
  5815  000B26  B0D8               	btfsc	status,0,c
  5816  000B28  EF98  F005         	goto	u2711
  5817  000B2C  EF9A  F005         	goto	u2710
  5818  000B30                     u2711:
  5819  000B30  EFB2  F005         	goto	l3692
  5820  000B34                     u2710:
  5821  000B34                     
  5822                           ;TFT.c: 107: { int16_t t = x0; x0 = x1; x1 = t; };
  5823  000B34  C013  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_761
  5824  000B38  C014  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_761+1
  5825  000B3C  C017  F013         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  5826  000B40  C018  F014         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  5827  000B44  C024  F017         	movff	TFT_DrawLine@t_761,TFT_DrawLine@x1
  5828  000B48  C025  F018         	movff	TFT_DrawLine@t_761+1,TFT_DrawLine@x1+1
  5829                           
  5830                           ;TFT.c: 108: { int16_t t = y0; y0 = y1; y1 = t; };
  5831  000B4C  C015  F026         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_762
  5832  000B50  C016  F027         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_762+1
  5833  000B54  C019  F015         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  5834  000B58  C01A  F016         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  5835  000B5C  C026  F019         	movff	TFT_DrawLine@t_762,TFT_DrawLine@y1
  5836  000B60  C027  F01A         	movff	TFT_DrawLine@t_762+1,TFT_DrawLine@y1+1
  5837  000B64                     l3692:
  5838                           
  5839                           ;TFT.c: 109: };TFT.c: 111: int16_t dx, dy;;TFT.c: 112: dx = x1 - x0;
  5840  000B64  5013               	movf	TFT_DrawLine@x0^0,w,c
  5841  000B66  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  5842  000B68  6E30               	movwf	TFT_DrawLine@dx^0,c
  5843  000B6A  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  5844  000B6C  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  5845  000B6E  6E31               	movwf	(TFT_DrawLine@dx+1)^0,c
  5846  000B70                     
  5847                           ;TFT.c: 113: dy = abs(y1 - y0);
  5848  000B70  5015               	movf	TFT_DrawLine@y0^0,w,c
  5849  000B72  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  5850  000B74  6E05               	movwf	abs@a^0,c
  5851  000B76  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  5852  000B78  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  5853  000B7A  6E06               	movwf	(abs@a+1)^0,c
  5854  000B7C  ECB9  F011         	call	_abs	;wreg free
  5855  000B80  C005  F028         	movff	?_abs,TFT_DrawLine@dy
  5856  000B84  C006  F029         	movff	?_abs+1,TFT_DrawLine@dy+1
  5857  000B88                     
  5858                           ;TFT.c: 115: int16_t err = dx / 2;
  5859  000B88  C030  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  5860  000B8C  C031  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  5861  000B90  0E00               	movlw	0
  5862  000B92  6E08               	movwf	(___awdiv@divisor+1)^0,c
  5863  000B94  0E02               	movlw	2
  5864  000B96  6E07               	movwf	___awdiv@divisor^0,c
  5865  000B98  EC15  F00B         	call	___awdiv	;wreg free
  5866  000B9C  C005  F02C         	movff	?___awdiv,TFT_DrawLine@err
  5867  000BA0  C006  F02D         	movff	?___awdiv+1,TFT_DrawLine@err+1
  5868                           
  5869                           ;TFT.c: 116: int16_t ystep;;TFT.c: 118: if(y0 < y1) {
  5870  000BA4  5019               	movf	TFT_DrawLine@y1^0,w,c
  5871  000BA6  5C15               	subwf	TFT_DrawLine@y0^0,w,c
  5872  000BA8  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  5873  000BAA  0A80               	xorlw	128
  5874  000BAC  6E1D               	movwf	??_TFT_DrawLine^0,c
  5875  000BAE  501A               	movf	(TFT_DrawLine@y1+1)^0,w,c
  5876  000BB0  0A80               	xorlw	128
  5877  000BB2  581D               	subwfb	??_TFT_DrawLine^0,w,c
  5878  000BB4  B0D8               	btfsc	status,0,c
  5879  000BB6  EFDF  F005         	goto	u2721
  5880  000BBA  EFE1  F005         	goto	u2720
  5881  000BBE                     u2721:
  5882  000BBE  EFE7  F005         	goto	l224
  5883  000BC2                     u2720:
  5884  000BC2                     
  5885                           ;TFT.c: 119: ystep = 1;
  5886  000BC2  0E00               	movlw	0
  5887  000BC4  6E2B               	movwf	(TFT_DrawLine@ystep+1)^0,c
  5888  000BC6  0E01               	movlw	1
  5889  000BC8  6E2A               	movwf	TFT_DrawLine@ystep^0,c
  5890                           
  5891                           ;TFT.c: 120: } else {
  5892  000BCA  EF27  F006         	goto	l3714
  5893  000BCE                     l224:
  5894                           
  5895                           ;TFT.c: 121: ystep = -1;
  5896  000BCE  682A               	setf	TFT_DrawLine@ystep^0,c
  5897  000BD0  682B               	setf	(TFT_DrawLine@ystep+1)^0,c
  5898  000BD2  EF27  F006         	goto	l3714
  5899  000BD6                     l3700:
  5900                           
  5901                           ;TFT.c: 125: if(steep) {
  5902  000BD6  502E               	movf	TFT_DrawLine@steep^0,w,c
  5903  000BD8  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  5904  000BDA  B4D8               	btfsc	status,2,c
  5905  000BDC  EFF2  F005         	goto	u2731
  5906  000BE0  EFF4  F005         	goto	u2730
  5907  000BE4                     u2731:
  5908  000BE4  EF04  F006         	goto	l3704
  5909  000BE8                     u2730:
  5910  000BE8                     
  5911                           ;TFT.c: 126: TFT_DrawPixel(y0, x0, color);
  5912  000BE8  C015  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  5913  000BEC  C016  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  5914  000BF0  C013  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  5915  000BF4  C014  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  5916  000BF8  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  5917  000BFC  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  5918  000C00  EC43  F011         	call	_TFT_DrawPixel	;wreg free
  5919                           
  5920                           ;TFT.c: 127: } else {
  5921  000C04  EF12  F006         	goto	l3706
  5922  000C08                     l3704:
  5923                           
  5924                           ;TFT.c: 128: TFT_DrawPixel(x0, y0, color);
  5925  000C08  C013  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  5926  000C0C  C014  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  5927  000C10  C015  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  5928  000C14  C016  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  5929  000C18  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  5930  000C1C  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  5931  000C20  EC43  F011         	call	_TFT_DrawPixel	;wreg free
  5932  000C24                     l3706:
  5933                           
  5934                           ;TFT.c: 129: };TFT.c: 130: err -= dy;
  5935  000C24  5028               	movf	TFT_DrawLine@dy^0,w,c
  5936  000C26  5E2C               	subwf	TFT_DrawLine@err^0,f,c
  5937  000C28  5029               	movf	(TFT_DrawLine@dy+1)^0,w,c
  5938  000C2A  5A2D               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  5939  000C2C                     
  5940                           ;TFT.c: 131: if(err < 0) {
  5941  000C2C  BE2D               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  5942  000C2E  EF1D  F006         	goto	u2740
  5943  000C32  EF1B  F006         	goto	u2741
  5944  000C36                     u2741:
  5945  000C36  EF25  F006         	goto	l3712
  5946  000C3A                     u2740:
  5947  000C3A                     
  5948                           ;TFT.c: 132: y0 += ystep;
  5949  000C3A  502A               	movf	TFT_DrawLine@ystep^0,w,c
  5950  000C3C  2615               	addwf	TFT_DrawLine@y0^0,f,c
  5951  000C3E  502B               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  5952  000C40  2216               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  5953                           
  5954                           ;TFT.c: 133: err += dx;
  5955  000C42  5030               	movf	TFT_DrawLine@dx^0,w,c
  5956  000C44  262C               	addwf	TFT_DrawLine@err^0,f,c
  5957  000C46  5031               	movf	(TFT_DrawLine@dx+1)^0,w,c
  5958  000C48  222D               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  5959  000C4A                     l3712:
  5960  000C4A  4A13               	infsnz	TFT_DrawLine@x0^0,f,c
  5961  000C4C  2A14               	incf	(TFT_DrawLine@x0+1)^0,f,c
  5962  000C4E                     l3714:
  5963  000C4E  5013               	movf	TFT_DrawLine@x0^0,w,c
  5964  000C50  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  5965  000C52  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  5966  000C54  0A80               	xorlw	128
  5967  000C56  6E1D               	movwf	??_TFT_DrawLine^0,c
  5968  000C58  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  5969  000C5A  0A80               	xorlw	128
  5970  000C5C  581D               	subwfb	??_TFT_DrawLine^0,w,c
  5971  000C5E  B0D8               	btfsc	status,0,c
  5972  000C60  EF34  F006         	goto	u2751
  5973  000C64  EF36  F006         	goto	u2750
  5974  000C68                     u2751:
  5975  000C68  EFEB  F005         	goto	l3700
  5976  000C6C                     u2750:
  5977  000C6C  0012               	return		;funcret
  5978  000C6E                     __end_of_TFT_DrawLine:
  5979                           	opt callstack 0
  5980                           
  5981 ;; *************** function _abs *****************
  5982 ;; Defined at:
  5983 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  a               2    4[COMRAM] int 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;		None
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  2    4[COMRAM] int 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5997 ;;      Params:         2       0       0       0       0       0       0       0       0
  5998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5999 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6000 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6001 ;;Total ram usage:        4 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:    2
  6004 ;; This function calls:
  6005 ;;		Nothing
  6006 ;; This function is called by:
  6007 ;;		_TFT_DrawLine
  6008 ;;		_Ecg_ProcessHeartbeat
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text19
  6013  002372                     __ptext19:
  6014                           	opt callstack 0
  6015  002372                     _abs:
  6016                           	opt callstack 25
  6017  002372  BE06               	btfsc	(abs@a+1)^0,7,c
  6018  002374  EFC0  F011         	goto	u2150
  6019  002378  EFBE  F011         	goto	u2151
  6020  00237C                     u2151:
  6021  00237C  EFCE  F011         	goto	l1294
  6022  002380                     u2150:
  6023  002380  C005  F007         	movff	abs@a,??_abs
  6024  002384  C006  F008         	movff	abs@a+1,??_abs+1
  6025  002388  1E07               	comf	??_abs^0,f,c
  6026  00238A  1E08               	comf	(??_abs+1)^0,f,c
  6027  00238C  4A07               	infsnz	??_abs^0,f,c
  6028  00238E  2A08               	incf	(??_abs+1)^0,f,c
  6029  002390  C007  F005         	movff	??_abs,?_abs
  6030  002394  C008  F006         	movff	??_abs+1,?_abs+1
  6031  002398  EFD2  F011         	goto	l1295
  6032  00239C                     l1294:
  6033  00239C  C005  F005         	movff	abs@a,?_abs
  6034  0023A0  C006  F006         	movff	abs@a+1,?_abs+1
  6035  0023A4                     l1295:
  6036  0023A4  0012               	return		;funcret
  6037  0023A6                     __end_of_abs:
  6038                           	opt callstack 0
  6039                           
  6040 ;; *************** function ___awdiv *****************
  6041 ;; Defined at:
  6042 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  dividend        2    4[COMRAM] int 
  6045 ;;  divisor         2    6[COMRAM] int 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  quotient        2   10[COMRAM] int 
  6048 ;;  sign            1    9[COMRAM] unsigned char 
  6049 ;;  counter         1    8[COMRAM] unsigned char 
  6050 ;; Return value:  Size  Location     Type
  6051 ;;                  2    4[COMRAM] int 
  6052 ;; Registers used:
  6053 ;;		wreg, status,2, status,0
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6059 ;;      Params:         4       0       0       0       0       0       0       0       0
  6060 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6062 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6063 ;;Total ram usage:        8 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; Hardware stack levels required when called:    2
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_TFT_DrawLine
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text20
  6074  00162A                     __ptext20:
  6075                           	opt callstack 0
  6076  00162A                     ___awdiv:
  6077                           	opt callstack 25
  6078  00162A  0E00               	movlw	0
  6079  00162C  6E0A               	movwf	___awdiv@sign^0,c
  6080  00162E  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6081  001630  EF1E  F00B         	goto	u2350
  6082  001634  EF1C  F00B         	goto	u2351
  6083  001638                     u2351:
  6084  001638  EF24  F00B         	goto	l3460
  6085  00163C                     u2350:
  6086  00163C  6C07               	negf	___awdiv@divisor^0,c
  6087  00163E  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6088  001640  B0D8               	btfsc	status,0,c
  6089  001642  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6090  001644  0E01               	movlw	1
  6091  001646  6E0A               	movwf	___awdiv@sign^0,c
  6092  001648                     l3460:
  6093  001648  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6094  00164A  EF2B  F00B         	goto	u2360
  6095  00164E  EF29  F00B         	goto	u2361
  6096  001652                     u2361:
  6097  001652  EF31  F00B         	goto	l3466
  6098  001656                     u2360:
  6099  001656  6C05               	negf	___awdiv@dividend^0,c
  6100  001658  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6101  00165A  B0D8               	btfsc	status,0,c
  6102  00165C  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6103  00165E  0E01               	movlw	1
  6104  001660  1A0A               	xorwf	___awdiv@sign^0,f,c
  6105  001662                     l3466:
  6106  001662  0E00               	movlw	0
  6107  001664  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6108  001666  0E00               	movlw	0
  6109  001668  6E0B               	movwf	___awdiv@quotient^0,c
  6110  00166A  5007               	movf	___awdiv@divisor^0,w,c
  6111  00166C  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6112  00166E  B4D8               	btfsc	status,2,c
  6113  001670  EF3C  F00B         	goto	u2371
  6114  001674  EF3E  F00B         	goto	u2370
  6115  001678                     u2371:
  6116  001678  EF66  F00B         	goto	l3488
  6117  00167C                     u2370:
  6118  00167C  0E01               	movlw	1
  6119  00167E  6E09               	movwf	___awdiv@counter^0,c
  6120  001680  EF46  F00B         	goto	l3474
  6121  001684                     l3472:
  6122  001684  90D8               	bcf	status,0,c
  6123  001686  3607               	rlcf	___awdiv@divisor^0,f,c
  6124  001688  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6125  00168A  2A09               	incf	___awdiv@counter^0,f,c
  6126  00168C                     l3474:
  6127  00168C  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6128  00168E  EF4B  F00B         	goto	u2381
  6129  001692  EF4D  F00B         	goto	u2380
  6130  001696                     u2381:
  6131  001696  EF42  F00B         	goto	l3472
  6132  00169A                     u2380:
  6133  00169A                     l3476:
  6134  00169A  90D8               	bcf	status,0,c
  6135  00169C  360B               	rlcf	___awdiv@quotient^0,f,c
  6136  00169E  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6137  0016A0  5007               	movf	___awdiv@divisor^0,w,c
  6138  0016A2  5C05               	subwf	___awdiv@dividend^0,w,c
  6139  0016A4  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6140  0016A6  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6141  0016A8  A0D8               	btfss	status,0,c
  6142  0016AA  EF59  F00B         	goto	u2391
  6143  0016AE  EF5B  F00B         	goto	u2390
  6144  0016B2                     u2391:
  6145  0016B2  EF60  F00B         	goto	l3484
  6146  0016B6                     u2390:
  6147  0016B6  5007               	movf	___awdiv@divisor^0,w,c
  6148  0016B8  5E05               	subwf	___awdiv@dividend^0,f,c
  6149  0016BA  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6150  0016BC  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6151  0016BE  800B               	bsf	___awdiv@quotient^0,0,c
  6152  0016C0                     l3484:
  6153  0016C0  90D8               	bcf	status,0,c
  6154  0016C2  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6155  0016C4  3207               	rrcf	___awdiv@divisor^0,f,c
  6156  0016C6  2E09               	decfsz	___awdiv@counter^0,f,c
  6157  0016C8  EF4D  F00B         	goto	l3476
  6158  0016CC                     l3488:
  6159  0016CC  500A               	movf	___awdiv@sign^0,w,c
  6160  0016CE  B4D8               	btfsc	status,2,c
  6161  0016D0  EF6C  F00B         	goto	u2401
  6162  0016D4  EF6E  F00B         	goto	u2400
  6163  0016D8                     u2401:
  6164  0016D8  EF72  F00B         	goto	l3492
  6165  0016DC                     u2400:
  6166  0016DC  6C0B               	negf	___awdiv@quotient^0,c
  6167  0016DE  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6168  0016E0  B0D8               	btfsc	status,0,c
  6169  0016E2  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6170  0016E4                     l3492:
  6171  0016E4  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6172  0016E8  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6173  0016EC  0012               	return		;funcret
  6174  0016EE                     __end_of___awdiv:
  6175                           	opt callstack 0
  6176                           
  6177 ;; *************** function _Ecg_Background_Leads_Failure *****************
  6178 ;; Defined at:
  6179 ;;		line 188 in file "ecg.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      void 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6193 ;;      Params:         0       0       0       0       0       0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6196 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6197 ;;Total ram usage:        0 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    8
  6200 ;; This function calls:
  6201 ;;		_TFT_DrawString
  6202 ;;		_TFT_FillScreen
  6203 ;; This function is called by:
  6204 ;;		_Ecg_Init
  6205 ;;		_Ecg_ProcessEcg
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text21
  6210  0022C4                     __ptext21:
  6211                           	opt callstack 0
  6212  0022C4                     _Ecg_Background_Leads_Failure:
  6213                           	opt callstack 21
  6214  0022C4                     
  6215                           ;ecg.c: 189: TFT_FillScreen(0x0000);
  6216  0022C4  0E00               	movlw	0
  6217  0022C6  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  6218  0022C8  0E00               	movlw	0
  6219  0022CA  6E1C               	movwf	TFT_FillScreen@color^0,c
  6220  0022CC  ECBD  F010         	call	_TFT_FillScreen	;wreg free
  6221  0022D0                     
  6222                           ;ecg.c: 190: TFT_DrawString(70, 362, "*** Collegare elettrodi ***", 0xFFFF, 0x0000, 2);
  6223  0022D0  0E00               	movlw	0
  6224  0022D2  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  6225  0022D4  0E46               	movlw	70
  6226  0022D6  6E3F               	movwf	TFT_DrawString@x^0,c
  6227  0022D8  0E01               	movlw	1
  6228  0022DA  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  6229  0022DC  0E6A               	movlw	106
  6230  0022DE  6E41               	movwf	TFT_DrawString@y^0,c
  6231  0022E0  0EDD               	movlw	low STR_16
  6232  0022E2  6E43               	movwf	TFT_DrawString@str^0,c
  6233  0022E4  0E5E               	movlw	high STR_16
  6234  0022E6  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  6235  0022E8  0EFF               	movlw	255
  6236  0022EA  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  6237  0022EC  6845               	setf	TFT_DrawString@color^0,c
  6238  0022EE  0E00               	movlw	0
  6239  0022F0  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  6240  0022F2  0E00               	movlw	0
  6241  0022F4  6E47               	movwf	TFT_DrawString@bg^0,c
  6242  0022F6  0E02               	movlw	2
  6243  0022F8  6E49               	movwf	TFT_DrawString@size^0,c
  6244  0022FA  EC87  F00C         	call	_TFT_DrawString	;wreg free
  6245  0022FE  0012               	return		;funcret
  6246  002300                     __end_of_Ecg_Background_Leads_Failure:
  6247                           	opt callstack 0
  6248                           
  6249 ;; *************** function _TFT_FillScreen *****************
  6250 ;; Defined at:
  6251 ;;		line 182 in file "TFT.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  color           2   27[COMRAM] unsigned int 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6265 ;;      Params:         2       0       0       0       0       0       0       0       0
  6266 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6268 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6269 ;;Total ram usage:        2 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    4
  6272 ;; This function calls:
  6273 ;;		_TFT_Flood
  6274 ;;		_TFT_WriteRegister
  6275 ;; This function is called by:
  6276 ;;		_TFT_Init
  6277 ;;		_Ecg_Background_Leads_Ok
  6278 ;;		_Ecg_Background_Leads_Failure
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text22
  6283  00217A                     __ptext22:
  6284                           	opt callstack 0
  6285  00217A                     _TFT_FillScreen:
  6286                           	opt callstack 25
  6287  00217A                     
  6288                           ;TFT.c: 183: TFT_WriteRegister(0x0200, 0);
  6289  00217A  0E02               	movlw	2
  6290  00217C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6291  00217E  0E00               	movlw	0
  6292  002180  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6293  002182  0E00               	movlw	0
  6294  002184  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  6295  002186  0E00               	movlw	0
  6296  002188  6E07               	movwf	TFT_WriteRegister@data^0,c
  6297  00218A  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  6298                           
  6299                           ;TFT.c: 184: TFT_WriteRegister(0x0201, 0);
  6300  00218E  0E02               	movlw	2
  6301  002190  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6302  002192  0E01               	movlw	1
  6303  002194  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6304  002196  0E00               	movlw	0
  6305  002198  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  6306  00219A  0E00               	movlw	0
  6307  00219C  6E07               	movwf	TFT_WriteRegister@data^0,c
  6308  00219E  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  6309  0021A2                     
  6310                           ;TFT.c: 185: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  6311  0021A2  C01C  F00D         	movff	TFT_FillScreen@color,TFT_Flood@color
  6312  0021A6  C01D  F00E         	movff	TFT_FillScreen@color+1,TFT_Flood@color+1
  6313  0021AA  0E00               	movlw	0
  6314  0021AC  6E0F               	movwf	TFT_Flood@len^0,c
  6315  0021AE  0E77               	movlw	119
  6316  0021B0  6E10               	movwf	(TFT_Flood@len+1)^0,c
  6317  0021B2  0E01               	movlw	1
  6318  0021B4  6E11               	movwf	(TFT_Flood@len+2)^0,c
  6319  0021B6  0E00               	movlw	0
  6320  0021B8  6E12               	movwf	(TFT_Flood@len+3)^0,c
  6321  0021BA  EC37  F006         	call	_TFT_Flood	;wreg free
  6322  0021BE  0012               	return		;funcret
  6323  0021C0                     __end_of_TFT_FillScreen:
  6324                           	opt callstack 0
  6325                           
  6326 ;; *************** function _EUSART_Init *****************
  6327 ;; Defined at:
  6328 ;;		line 12 in file "eusart.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0
  6343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    3
  6349 ;; This function calls:
  6350 ;;		_memset
  6351 ;; This function is called by:
  6352 ;;		_main
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text23
  6357  001E7C                     __ptext23:
  6358                           	opt callstack 0
  6359  001E7C                     _EUSART_Init:
  6360                           	opt callstack 27
  6361  001E7C                     
  6362                           ;eusart.c: 14: TXSTAbits.TX9 = 0;
  6363  001E7C  9CAC               	bcf	172,6,c	;volatile
  6364                           
  6365                           ;eusart.c: 15: TXSTAbits.TXEN = 1;
  6366  001E7E  8AAC               	bsf	172,5,c	;volatile
  6367                           
  6368                           ;eusart.c: 16: TXSTAbits.SYNC = 0;
  6369  001E80  98AC               	bcf	172,4,c	;volatile
  6370                           
  6371                           ;eusart.c: 17: TXSTAbits.SENDB = 0;
  6372  001E82  96AC               	bcf	172,3,c	;volatile
  6373                           
  6374                           ;eusart.c: 18: TXSTAbits.BRGH = 1;
  6375  001E84  84AC               	bsf	172,2,c	;volatile
  6376                           
  6377                           ;eusart.c: 21: RCSTAbits.SPEN = 1;
  6378  001E86  8EAB               	bsf	171,7,c	;volatile
  6379                           
  6380                           ;eusart.c: 22: RCSTAbits.RX9 = 0;
  6381  001E88  9CAB               	bcf	171,6,c	;volatile
  6382                           
  6383                           ;eusart.c: 23: RCSTAbits.CREN = 1;
  6384  001E8A  88AB               	bsf	171,4,c	;volatile
  6385                           
  6386                           ;eusart.c: 26: BAUDCONbits.BRG16 = 1;
  6387  001E8C  86B8               	bsf	184,3,c	;volatile
  6388                           
  6389                           ;eusart.c: 27: BAUDCONbits.WUE = 0;
  6390  001E8E  92B8               	bcf	184,1,c	;volatile
  6391                           
  6392                           ;eusart.c: 28: BAUDCONbits.ABDEN = 0;
  6393  001E90  90B8               	bcf	184,0,c	;volatile
  6394  001E92                     
  6395                           ;eusart.c: 29: SPBRGH = 0x04;
  6396  001E92  0E04               	movlw	4
  6397  001E94  6EB0               	movwf	176,c	;volatile
  6398                           
  6399                           ;eusart.c: 30: SPBRG = 0xE1;
  6400  001E96  0EE1               	movlw	225
  6401  001E98  6EAF               	movwf	175,c	;volatile
  6402  001E9A                     
  6403                           ;eusart.c: 33: RCIE = 1;
  6404  001E9A  8A9D               	bsf	3997,5,c	;volatile
  6405                           
  6406                           ;eusart.c: 36: EUSART_RX.iRead = 0;
  6407  001E9C  0E00               	movlw	0
  6408  001E9E  0101               	movlb	1	; () banked
  6409  001EA0  6F11               	movwf	(_EUSART_RX+1)& (0+255),b
  6410                           
  6411                           ;eusart.c: 37: EUSART_RX.iWrite = 0;
  6412  001EA2  0E00               	movlw	0
  6413  001EA4  6F12               	movwf	(_EUSART_RX+2)& (0+255),b
  6414                           
  6415                           ;eusart.c: 38: EUSART_RX.processRX = 0;
  6416  001EA6  0E00               	movlw	0
  6417  001EA8  6F10               	movwf	_EUSART_RX& (0+255),b
  6418                           
  6419                           ;eusart.c: 39: EUSART_RX.zzzzzzzzz = 1;
  6420  001EAA  0E01               	movlw	1
  6421  001EAC  6F13               	movwf	(_EUSART_RX+3)& (0+255),b
  6422  001EAE                     
  6423                           ; BSR set to: 1
  6424                           ;eusart.c: 40: memset(EUSART_RX.buffer, 0x00, 64);
  6425  001EAE  0E14               	movlw	low (_EUSART_RX+4)
  6426  001EB0  6E05               	movwf	memset@p1^0,c
  6427  001EB2  0E01               	movlw	high (_EUSART_RX+4)
  6428  001EB4  6E06               	movwf	(memset@p1+1)^0,c
  6429  001EB6  0E00               	movlw	0
  6430  001EB8  6E08               	movwf	(memset@c+1)^0,c
  6431  001EBA  0E00               	movlw	0
  6432  001EBC  6E07               	movwf	memset@c^0,c
  6433  001EBE  0E00               	movlw	0
  6434  001EC0  6E0A               	movwf	(memset@n+1)^0,c
  6435  001EC2  0E40               	movlw	64
  6436  001EC4  6E09               	movwf	memset@n^0,c
  6437  001EC6  EC9D  F011         	call	_memset	;wreg free
  6438  001ECA                     
  6439                           ;eusart.c: 41: memset(EUSART_RX.line, 0x00, 32);
  6440  001ECA  0E54               	movlw	low (_EUSART_RX+68)
  6441  001ECC  6E05               	movwf	memset@p1^0,c
  6442  001ECE  0E01               	movlw	high (_EUSART_RX+68)
  6443  001ED0  6E06               	movwf	(memset@p1+1)^0,c
  6444  001ED2  0E00               	movlw	0
  6445  001ED4  6E08               	movwf	(memset@c+1)^0,c
  6446  001ED6  0E00               	movlw	0
  6447  001ED8  6E07               	movwf	memset@c^0,c
  6448  001EDA  0E00               	movlw	0
  6449  001EDC  6E0A               	movwf	(memset@n+1)^0,c
  6450  001EDE  0E20               	movlw	32
  6451  001EE0  6E09               	movwf	memset@n^0,c
  6452  001EE2  EC9D  F011         	call	_memset	;wreg free
  6453  001EE6  0012               	return		;funcret
  6454  001EE8                     __end_of_EUSART_Init:
  6455                           	opt callstack 0
  6456                           
  6457 ;; *************** function _A6_Init *****************
  6458 ;; Defined at:
  6459 ;;		line 12 in file "A6Lib.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6473 ;;      Params:         0       0       0       0       0       0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6476 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6477 ;;Total ram usage:        0 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:   10
  6480 ;; This function calls:
  6481 ;;		_A6_SpeedAutoDetect
  6482 ;;		_sleepMS
  6483 ;; This function is called by:
  6484 ;;		_main
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text24
  6489  0024DC                     __ptext24:
  6490                           	opt callstack 0
  6491  0024DC                     _A6_Init:
  6492                           	opt callstack 20
  6493  0024DC                     
  6494                           ;A6Lib.c: 13: A6_SpeedAutoDetect();
  6495  0024DC  ECA8  F00A         	call	_A6_SpeedAutoDetect	;wreg free
  6496  0024E0                     
  6497                           ;A6Lib.c: 14: sleepMS(2500);
  6498  0024E0  0EC4               	movlw	196
  6499  0024E2  6E05               	movwf	sleepMS@ms^0,c
  6500  0024E4  0E09               	movlw	9
  6501  0024E6  6E06               	movwf	(sleepMS@ms+1)^0,c
  6502  0024E8  0E00               	movlw	0
  6503  0024EA  6E07               	movwf	(sleepMS@ms+2)^0,c
  6504  0024EC  0E00               	movlw	0
  6505  0024EE  6E08               	movwf	(sleepMS@ms+3)^0,c
  6506  0024F0  EC80  F011         	call	_sleepMS	;wreg free
  6507  0024F4  0012               	return		;funcret
  6508  0024F6                     __end_of_A6_Init:
  6509                           	opt callstack 0
  6510                           
  6511 ;; *************** function _A6_SpeedAutoDetect *****************
  6512 ;; Defined at:
  6513 ;;		line 83 in file "A6Lib.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  zzzz           32   20[BANK0 ] unsigned char [32]
  6518 ;;  i               1   52[BANK0 ] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  4   24[None  ] unsigned long 
  6521 ;; Registers used:
  6522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0
  6529 ;;      Locals:         0      33       0       0       0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6531 ;;      Totals:         0      33       0       0       0       0       0       0       0
  6532 ;;Total ram usage:       33 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:    9
  6535 ;; This function calls:
  6536 ;;		_A6_IsAlive
  6537 ;;		_EUSART_SetSpeed
  6538 ;;		_printLine
  6539 ;;		_sleepMS
  6540 ;;		_sprintf
  6541 ;; This function is called by:
  6542 ;;		_loop
  6543 ;;		_A6_Init
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text25
  6548  001550                     __ptext25:
  6549                           	opt callstack 0
  6550  001550                     _A6_SpeedAutoDetect:
  6551                           	opt callstack 20
  6552  001550                     
  6553                           ;A6Lib.c: 84: printLine("Detecting speed...", 0xF81F);
  6554  001550  0E58               	movlw	low STR_30
  6555  001552  6E4A               	movwf	printLine@str^0,c
  6556  001554  0E5F               	movlw	high STR_30
  6557  001556  6E4B               	movwf	(printLine@str+1)^0,c
  6558  001558  0EF8               	movlw	248
  6559  00155A  6E4D               	movwf	(printLine@color+1)^0,c
  6560  00155C  0E1F               	movlw	31
  6561  00155E  6E4C               	movwf	printLine@color^0,c
  6562  001560  EC0F  F010         	call	_printLine	;wreg free
  6563  001564                     
  6564                           ;A6Lib.c: 86: for(uint8_t i=0; i<3; i++) {
  6565  001564  0E00               	movlw	0
  6566  001566  0100               	movlb	0	; () banked
  6567  001568  6F94               	movwf	A6_SpeedAutoDetect@i& (0+255),b
  6568  00156A                     l4630:
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;A6Lib.c: 87: EUSART_SetSpeed(A6_SPEEDS[i]);
  6572  00156A  5194               	movf	A6_SpeedAutoDetect@i& (0+255),w,b
  6573  00156C  0D04               	mullw	4
  6574  00156E  0E93               	movlw	low _A6_SPEEDS
  6575  001570  24F3               	addwf	243,w,c
  6576  001572  6EF6               	movwf	tblptrl,c
  6577  001574  0E5E               	movlw	high _A6_SPEEDS
  6578  001576  20F4               	addwfc	244,w,c
  6579  001578  6EF7               	movwf	tblptrh,c
  6580  00157A                     	if	0	;There are less than 3 active tblptr bytes
  6581  00157A                     	endif
  6582  00157A  0009               	tblrd		*+
  6583  00157C  CFF5 F012          	movff	tablat,EUSART_SetSpeed@speed
  6584  001580  0009               	tblrd		*+
  6585  001582  CFF5 F013          	movff	tablat,EUSART_SetSpeed@speed+1
  6586  001586  0009               	tblrd		*+
  6587  001588  CFF5 F014          	movff	tablat,EUSART_SetSpeed@speed+2
  6588  00158C  000A               	tblrd		*-
  6589  00158E  CFF5 F015          	movff	tablat,EUSART_SetSpeed@speed+3
  6590  001592  EC5A  F00D         	call	_EUSART_SetSpeed	;wreg free
  6591  001596                     
  6592                           ;A6Lib.c: 88: if(A6_IsAlive() == 1) {
  6593  001596  EC1A  F00E         	call	_A6_IsAlive	;wreg free
  6594  00159A  06E8               	decf	wreg,f,c
  6595  00159C  A4D8               	btfss	status,2,c
  6596  00159E  EFD3  F00A         	goto	u3571
  6597  0015A2  EFD5  F00A         	goto	u3570
  6598  0015A6                     u3571:
  6599  0015A6  EF00  F00B         	goto	l4640
  6600  0015AA                     u3570:
  6601  0015AA                     
  6602                           ;A6Lib.c: 89: char zzzz[32];;A6Lib.c: 90: sprintf(zzzz, "%lu FOUND!", A6_SPEEDS[i]);
  6603  0015AA  0E74               	movlw	low A6_SpeedAutoDetect@zzzz
  6604  0015AC  0100               	movlb	0	; () banked
  6605  0015AE  6F60               	movwf	sprintf@sp& (0+255),b
  6606  0015B0  0E00               	movlw	high A6_SpeedAutoDetect@zzzz
  6607  0015B2  6F61               	movwf	(sprintf@sp+1)& (0+255),b
  6608  0015B4  0EA3               	movlw	low STR_31
  6609  0015B6  6F62               	movwf	sprintf@f& (0+255),b
  6610  0015B8  0E5F               	movlw	high STR_31
  6611  0015BA  6F63               	movwf	(sprintf@f+1)& (0+255),b
  6612  0015BC  5194               	movf	A6_SpeedAutoDetect@i& (0+255),w,b
  6613  0015BE  0D04               	mullw	4
  6614  0015C0  0E93               	movlw	low _A6_SPEEDS
  6615  0015C2  24F3               	addwf	243,w,c
  6616  0015C4  6EF6               	movwf	tblptrl,c
  6617  0015C6  0E5E               	movlw	high _A6_SPEEDS
  6618  0015C8  20F4               	addwfc	244,w,c
  6619  0015CA  6EF7               	movwf	tblptrh,c
  6620  0015CC                     	if	0	;There are less than 3 active tblptr bytes
  6621  0015CC                     	endif
  6622  0015CC  0009               	tblrd		*+
  6623  0015CE  CFF5 F064          	movff	tablat,?_sprintf+4
  6624  0015D2  0009               	tblrd		*+
  6625  0015D4  CFF5 F065          	movff	tablat,?_sprintf+5
  6626  0015D8  0009               	tblrd		*+
  6627  0015DA  CFF5 F066          	movff	tablat,?_sprintf+6
  6628  0015DE  000A               	tblrd		*-
  6629  0015E0  CFF5 F067          	movff	tablat,?_sprintf+7
  6630  0015E4  EC4F  F002         	call	_sprintf	;wreg free
  6631  0015E8                     
  6632                           ;A6Lib.c: 91: printLine(zzzz, 0xF800);
  6633  0015E8  0E74               	movlw	low A6_SpeedAutoDetect@zzzz
  6634  0015EA  6E4A               	movwf	printLine@str^0,c
  6635  0015EC  0E00               	movlw	high A6_SpeedAutoDetect@zzzz
  6636  0015EE  6E4B               	movwf	(printLine@str+1)^0,c
  6637  0015F0  0EF8               	movlw	248
  6638  0015F2  6E4D               	movwf	(printLine@color+1)^0,c
  6639  0015F4  0E00               	movlw	0
  6640  0015F6  6E4C               	movwf	printLine@color^0,c
  6641  0015F8  EC0F  F010         	call	_printLine	;wreg free
  6642  0015FC  EF14  F00B         	goto	l559
  6643  001600                     l4640:
  6644                           
  6645                           ;A6Lib.c: 93: };A6Lib.c: 94: sleepMS(250);
  6646  001600  0EFA               	movlw	250
  6647  001602  6E05               	movwf	sleepMS@ms^0,c
  6648  001604  0E00               	movlw	0
  6649  001606  6E06               	movwf	(sleepMS@ms+1)^0,c
  6650  001608  0E00               	movlw	0
  6651  00160A  6E07               	movwf	(sleepMS@ms+2)^0,c
  6652  00160C  0E00               	movlw	0
  6653  00160E  6E08               	movwf	(sleepMS@ms+3)^0,c
  6654  001610  EC80  F011         	call	_sleepMS	;wreg free
  6655  001614  0100               	movlb	0	; () banked
  6656  001616  2B94               	incf	A6_SpeedAutoDetect@i& (0+255),f,b
  6657  001618                     
  6658                           ; BSR set to: 0
  6659  001618  0E02               	movlw	2
  6660  00161A  6594               	cpfsgt	A6_SpeedAutoDetect@i& (0+255),b
  6661  00161C  EF12  F00B         	goto	u3581
  6662  001620  EF14  F00B         	goto	u3580
  6663  001624                     u3581:
  6664  001624  EFB5  F00A         	goto	l4630
  6665  001628                     u3580:
  6666  001628                     l559:
  6667  001628  0012               	return		;funcret
  6668  00162A                     __end_of_A6_SpeedAutoDetect:
  6669                           	opt callstack 0
  6670                           
  6671 ;; *************** function _sprintf *****************
  6672 ;; Defined at:
  6673 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  6676 ;;		 -> A6_SpeedAutoDetect@zzzz(32), A6_SpeedSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), loop@zzzz_158(32)
      +, 
  6677 ;;		 -> loop@zzzz(32), 
  6678 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  6679 ;;		 -> STR_31(11), STR_26(12), STR_14(4), STR_13(4), 
  6680 ;;		 -> STR_3(23), STR_2(28), STR_1(19), 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;  val             4   10[BANK0 ] unsigned long 
  6683 ;;  tmpval          4    0        struct .
  6684 ;;  cp              3    0        PTR const unsigned char 
  6685 ;;  width           2   17[BANK0 ] int 
  6686 ;;  ap              2   14[BANK0 ] PTR void [1]
  6687 ;;		 -> ?_sprintf(2), 
  6688 ;;  prec            2    8[BANK0 ] int 
  6689 ;;  len             2    0        unsigned int 
  6690 ;;  c               1   19[BANK0 ] unsigned char 
  6691 ;;  flag            1   16[BANK0 ] unsigned char 
  6692 ;; Return value:  Size  Location     Type
  6693 ;;                  2    0[BANK0 ] int 
  6694 ;; Registers used:
  6695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6696 ;; Tracked objects:
  6697 ;;		On entry : 0/0
  6698 ;;		On exit  : 0/0
  6699 ;;		Unchanged: 0/0
  6700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6701 ;;      Params:         0       8       0       0       0       0       0       0       0
  6702 ;;      Locals:         0      12       0       0       0       0       0       0       0
  6703 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6704 ;;      Totals:         4      20       0       0       0       0       0       0       0
  6705 ;;Total ram usage:       24 bytes
  6706 ;; Hardware stack levels used:    1
  6707 ;; Hardware stack levels required when called:    3
  6708 ;; This function calls:
  6709 ;;		___lldiv
  6710 ;;		___llmod
  6711 ;;		___wmul
  6712 ;;		_isdigit
  6713 ;; This function is called by:
  6714 ;;		_loop
  6715 ;;		_A6_SpeedSet
  6716 ;;		_A6_SpeedAutoDetect
  6717 ;;		_Ecg_ProcessHeartRate
  6718 ;; This function uses a non-reentrant model
  6719 ;;
  6720                           
  6721                           	psect	text26
  6722  00049E                     __ptext26:
  6723                           	opt callstack 0
  6724  00049E                     _sprintf:
  6725                           	opt callstack 26
  6726  00049E                     
  6727                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  6728  00049E  0E64               	movlw	low (?_sprintf+4)
  6729  0004A0  0100               	movlb	0	; () banked
  6730  0004A2  6F6E               	movwf	sprintf@ap& (0+255),b
  6731  0004A4  0E00               	movlw	high (?_sprintf+4)
  6732  0004A6  6F6F               	movwf	(sprintf@ap+1)& (0+255),b
  6733                           
  6734                           ;doprnt.c: 553: while((c = *f++)) {
  6735  0004A8  EF31  F004         	goto	l4586
  6736  0004AC                     l4484:
  6737                           
  6738                           ; BSR set to: 0
  6739                           ;doprnt.c: 555: if(c != '%')
  6740  0004AC  0E25               	movlw	37
  6741  0004AE  1973               	xorwf	sprintf@c& (0+255),w,b
  6742  0004B0  B4D8               	btfsc	status,2,c
  6743  0004B2  EF5D  F002         	goto	u3371
  6744  0004B6  EF5F  F002         	goto	u3370
  6745  0004BA                     u3371:
  6746  0004BA  EF69  F002         	goto	l4490
  6747  0004BE                     u3370:
  6748  0004BE                     
  6749                           ; BSR set to: 0
  6750                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  6751  0004BE  C060  FFD9         	movff	sprintf@sp,fsr2l
  6752  0004C2  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  6753  0004C6  C073  FFDF         	movff	sprintf@c,indf2
  6754  0004CA                     
  6755                           ; BSR set to: 0
  6756  0004CA  4B60               	infsnz	sprintf@sp& (0+255),f,b
  6757  0004CC  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  6758                           
  6759                           ;doprnt.c: 559: continue;
  6760  0004CE  EF31  F004         	goto	l4586
  6761  0004D2                     l4490:
  6762                           
  6763                           ; BSR set to: 0
  6764                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  6765  0004D2  0E00               	movlw	0
  6766  0004D4  6F72               	movwf	(sprintf@width+1)& (0+255),b
  6767  0004D6  0E00               	movlw	0
  6768  0004D8  6F71               	movwf	sprintf@width& (0+255),b
  6769                           
  6770                           ;doprnt.c: 565: flag = 0;
  6771  0004DA  0E00               	movlw	0
  6772  0004DC  6F70               	movwf	sprintf@flag& (0+255),b
  6773  0004DE                     
  6774                           ; BSR set to: 0
  6775                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  6776  0004DE  C062  FFF6         	movff	sprintf@f,tblptrl
  6777  0004E2  C063  FFF7         	movff	sprintf@f+1,tblptrh
  6778  0004E6                     	if	0	;tblptru may be non-zero
  6779  0004E6                     	endif
  6780  0004E6                     	if	0	;tblptru may be non-zero
  6781  0004E6                     	endif
  6782  0004E6  0008               	tblrd		*
  6783  0004E8  50F5               	movf	tablat,w,c
  6784  0004EA  ECD3  F011         	call	_isdigit
  6785  0004EE  A0D8               	btfss	status,0,c
  6786  0004F0  EF7C  F002         	goto	u3381
  6787  0004F4  EF7E  F002         	goto	u3380
  6788  0004F8                     u3381:
  6789  0004F8  EFBF  F002         	goto	l4510
  6790  0004FC                     u3380:
  6791  0004FC                     
  6792                           ;doprnt.c: 615: width = 0;
  6793  0004FC  0E00               	movlw	0
  6794  0004FE  0100               	movlb	0	; () banked
  6795  000500  6F72               	movwf	(sprintf@width+1)& (0+255),b
  6796  000502  0E00               	movlw	0
  6797  000504  6F71               	movwf	sprintf@width& (0+255),b
  6798  000506                     l4496:
  6799                           
  6800                           ;doprnt.c: 617: width *= 10;
  6801  000506  C071  F005         	movff	sprintf@width,___wmul@multiplier
  6802  00050A  C072  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  6803  00050E  0E00               	movlw	0
  6804  000510  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  6805  000512  0E0A               	movlw	10
  6806  000514  6E07               	movwf	___wmul@multiplicand^0,c
  6807  000516  EC19  F012         	call	___wmul	;wreg free
  6808  00051A  C005  F071         	movff	?___wmul,sprintf@width
  6809  00051E  C006  F072         	movff	?___wmul+1,sprintf@width+1
  6810  000522                     
  6811                           ;doprnt.c: 618: width += *f++ - '0';
  6812  000522  0ED0               	movlw	208
  6813  000524  6E4F               	movwf	??_sprintf^0,c
  6814  000526  0EFF               	movlw	255
  6815  000528  6E50               	movwf	(??_sprintf+1)^0,c
  6816  00052A  C062  FFF6         	movff	sprintf@f,tblptrl
  6817  00052E  C063  FFF7         	movff	sprintf@f+1,tblptrh
  6818  000532                     	if	0	;tblptru may be non-zero
  6819  000532                     	endif
  6820  000532                     	if	0	;tblptru may be non-zero
  6821  000532                     	endif
  6822  000532  0008               	tblrd		*
  6823  000534  50F5               	movf	tablat,w,c
  6824  000536  6E51               	movwf	(??_sprintf+2)^0,c
  6825  000538  6A52               	clrf	(??_sprintf+3)^0,c
  6826  00053A  504F               	movf	??_sprintf^0,w,c
  6827  00053C  2651               	addwf	(??_sprintf+2)^0,f,c
  6828  00053E  5050               	movf	(??_sprintf+1)^0,w,c
  6829  000540  2252               	addwfc	(??_sprintf+3)^0,f,c
  6830  000542  5051               	movf	(??_sprintf+2)^0,w,c
  6831  000544  0100               	movlb	0	; () banked
  6832  000546  2771               	addwf	sprintf@width& (0+255),f,b
  6833  000548  5052               	movf	(??_sprintf+3)^0,w,c
  6834  00054A  2372               	addwfc	(sprintf@width+1)& (0+255),f,b
  6835  00054C                     
  6836                           ; BSR set to: 0
  6837  00054C  4B62               	infsnz	sprintf@f& (0+255),f,b
  6838  00054E  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  6839  000550                     
  6840                           ; BSR set to: 0
  6841                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  6842  000550  C062  FFF6         	movff	sprintf@f,tblptrl
  6843  000554  C063  FFF7         	movff	sprintf@f+1,tblptrh
  6844  000558                     	if	0	;tblptru may be non-zero
  6845  000558                     	endif
  6846  000558                     	if	0	;tblptru may be non-zero
  6847  000558                     	endif
  6848  000558  0008               	tblrd		*
  6849  00055A  50F5               	movf	tablat,w,c
  6850  00055C  ECD3  F011         	call	_isdigit
  6851  000560  B0D8               	btfsc	status,0,c
  6852  000562  EFB5  F002         	goto	u3391
  6853  000566  EFB7  F002         	goto	u3390
  6854  00056A                     u3391:
  6855  00056A  EF83  F002         	goto	l4496
  6856  00056E                     u3390:
  6857  00056E  EFBF  F002         	goto	l4510
  6858  000572                     l4504:
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;doprnt.c: 669: flag |= 0x10;
  6862  000572  8970               	bsf	sprintf@flag& (0+255),4,b
  6863                           
  6864                           ;doprnt.c: 670: goto loop;
  6865  000574  EFBF  F002         	goto	l4510
  6866  000578                     l4506:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;doprnt.c: 844: flag |= 0x40;
  6870  000578  8D70               	bsf	sprintf@flag& (0+255),6,b
  6871                           
  6872                           ;doprnt.c: 845: break;
  6873  00057A  EFE0  F002         	goto	l605
  6874  00057E                     l4510:
  6875  00057E  C062  FFF6         	movff	sprintf@f,tblptrl
  6876  000582  C063  FFF7         	movff	sprintf@f+1,tblptrh
  6877  000586  0100               	movlb	0	; () banked
  6878  000588  4B62               	infsnz	sprintf@f& (0+255),f,b
  6879  00058A  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  6880  00058C                     	if	0	;tblptru may be non-zero
  6881  00058C                     	endif
  6882  00058C                     	if	0	;tblptru may be non-zero
  6883  00058C                     	endif
  6884  00058C  0008               	tblrd		*
  6885  00058E  CFF5 F073          	movff	tablat,sprintf@c
  6886  000592  5173               	movf	sprintf@c& (0+255),w,b
  6887                           
  6888                           ; Switch size 1, requested type "simple"
  6889                           ; Number of cases is 5, Range of values is 0 to 117
  6890                           ; switch strategies available:
  6891                           ; Name         Instructions Cycles
  6892                           ; simple_byte           16     9 (average)
  6893                           ;	Chosen strategy is simple_byte
  6894  000594  0A00               	xorlw	0	; case 0
  6895  000596  B4D8               	btfsc	status,2,c
  6896  000598  EF42  F004         	goto	l4588
  6897  00059C  0A64               	xorlw	100	; case 100
  6898  00059E  B4D8               	btfsc	status,2,c
  6899  0005A0  EFE0  F002         	goto	l605
  6900  0005A4  0A0D               	xorlw	13	; case 105
  6901  0005A6  B4D8               	btfsc	status,2,c
  6902  0005A8  EFE0  F002         	goto	l605
  6903  0005AC  0A05               	xorlw	5	; case 108
  6904  0005AE  B4D8               	btfsc	status,2,c
  6905  0005B0  EFB9  F002         	goto	l4504
  6906  0005B4  0A19               	xorlw	25	; case 117
  6907  0005B6  B4D8               	btfsc	status,2,c
  6908  0005B8  EFBC  F002         	goto	l4506
  6909  0005BC  EF31  F004         	goto	l4586
  6910  0005C0                     l605:
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  6914  0005C0  BD70               	btfsc	sprintf@flag& (0+255),6,b
  6915  0005C2  EFE5  F002         	goto	u3401
  6916  0005C6  EFE7  F002         	goto	u3400
  6917  0005CA                     u3401:
  6918  0005CA  EF24  F003         	goto	l608
  6919  0005CE                     u3400:
  6920  0005CE                     
  6921                           ; BSR set to: 0
  6922                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  6923  0005CE  A970               	btfss	sprintf@flag& (0+255),4,b
  6924  0005D0  EFEC  F002         	goto	u3411
  6925  0005D4  EFEE  F002         	goto	u3410
  6926  0005D8                     u3411:
  6927  0005D8  EF00  F003         	goto	l4518
  6928  0005DC                     u3410:
  6929  0005DC                     
  6930                           ; BSR set to: 0
  6931                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  6932  0005DC  C06E  FFD9         	movff	sprintf@ap,fsr2l
  6933  0005E0  C06F  FFDA         	movff	sprintf@ap+1,fsr2h
  6934  0005E4  CFDE F06A          	movff	postinc2,sprintf@val
  6935  0005E8  CFDE F06B          	movff	postinc2,sprintf@val+1
  6936  0005EC  CFDE F06C          	movff	postinc2,sprintf@val+2
  6937  0005F0  CFDE F06D          	movff	postinc2,sprintf@val+3
  6938  0005F4                     
  6939                           ; BSR set to: 0
  6940  0005F4  0E04               	movlw	4
  6941  0005F6  276E               	addwf	sprintf@ap& (0+255),f,b
  6942  0005F8  0E00               	movlw	0
  6943  0005FA  236F               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6944  0005FC  EF11  F003         	goto	l4522
  6945  000600                     l4518:
  6946                           
  6947                           ; BSR set to: 0
  6948                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  6949  000600  C06E  FFD9         	movff	sprintf@ap,fsr2l
  6950  000604  C06F  FFDA         	movff	sprintf@ap+1,fsr2h
  6951  000608  CFDE F06A          	movff	postinc2,sprintf@val
  6952  00060C  CFDD F06B          	movff	postdec2,sprintf@val+1
  6953  000610  0E00               	movlw	0
  6954  000612  BF6B               	btfsc	(sprintf@val+1)& (0+255),7,b
  6955  000614  0EFF               	movlw	-1
  6956  000616  6F6C               	movwf	(sprintf@val+2)& (0+255),b
  6957  000618  6F6D               	movwf	(sprintf@val+3)& (0+255),b
  6958  00061A                     
  6959                           ; BSR set to: 0
  6960  00061A  0E02               	movlw	2
  6961  00061C  276E               	addwf	sprintf@ap& (0+255),f,b
  6962  00061E  0E00               	movlw	0
  6963  000620  236F               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6964  000622                     l4522:
  6965                           
  6966                           ; BSR set to: 0
  6967                           ;doprnt.c: 1287: if((long)val < 0) {
  6968  000622  BF6D               	btfsc	(sprintf@val+3)& (0+255),7,b
  6969  000624  EF18  F003         	goto	u3420
  6970  000628  EF16  F003         	goto	u3421
  6971  00062C                     u3421:
  6972  00062C  EF4F  F003         	goto	l4536
  6973  000630                     u3420:
  6974  000630                     
  6975                           ; BSR set to: 0
  6976                           ;doprnt.c: 1288: flag |= 0x03;
  6977  000630  0E03               	movlw	3
  6978  000632  1370               	iorwf	sprintf@flag& (0+255),f,b
  6979  000634                     
  6980                           ; BSR set to: 0
  6981                           ;doprnt.c: 1289: val = -val;
  6982  000634  1F6D               	comf	(sprintf@val+3)& (0+255),f,b
  6983  000636  1F6C               	comf	(sprintf@val+2)& (0+255),f,b
  6984  000638  1F6B               	comf	(sprintf@val+1)& (0+255),f,b
  6985  00063A  6D6A               	negf	sprintf@val& (0+255),b
  6986  00063C  0E00               	movlw	0
  6987  00063E  236B               	addwfc	(sprintf@val+1)& (0+255),f,b
  6988  000640  236C               	addwfc	(sprintf@val+2)& (0+255),f,b
  6989  000642  236D               	addwfc	(sprintf@val+3)& (0+255),f,b
  6990  000644  EF4F  F003         	goto	l4536
  6991  000648                     l608:
  6992                           
  6993                           ; BSR set to: 0
  6994                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  6995  000648  A970               	btfss	sprintf@flag& (0+255),4,b
  6996  00064A  EF29  F003         	goto	u3431
  6997  00064E  EF2B  F003         	goto	u3430
  6998  000652                     u3431:
  6999  000652  EF3D  F003         	goto	l4532
  7000  000656                     u3430:
  7001  000656                     
  7002                           ; BSR set to: 0
  7003                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  7004  000656  C06E  FFD9         	movff	sprintf@ap,fsr2l
  7005  00065A  C06F  FFDA         	movff	sprintf@ap+1,fsr2h
  7006  00065E  CFDE F06A          	movff	postinc2,sprintf@val
  7007  000662  CFDE F06B          	movff	postinc2,sprintf@val+1
  7008  000666  CFDE F06C          	movff	postinc2,sprintf@val+2
  7009  00066A  CFDE F06D          	movff	postinc2,sprintf@val+3
  7010  00066E                     
  7011                           ; BSR set to: 0
  7012  00066E  0E04               	movlw	4
  7013  000670  276E               	addwf	sprintf@ap& (0+255),f,b
  7014  000672  0E00               	movlw	0
  7015  000674  236F               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7016  000676  EF4F  F003         	goto	l4536
  7017  00067A                     l4532:
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  7021  00067A  C06E  FFD9         	movff	sprintf@ap,fsr2l
  7022  00067E  C06F  FFDA         	movff	sprintf@ap+1,fsr2h
  7023  000682  CFDE F04F          	movff	postinc2,??_sprintf
  7024  000686  CFDD F050          	movff	postdec2,??_sprintf+1
  7025  00068A  C04F  F06A         	movff	??_sprintf,sprintf@val
  7026  00068E  C050  F06B         	movff	??_sprintf+1,sprintf@val+1
  7027  000692  6B6C               	clrf	(sprintf@val+2)& (0+255),b
  7028  000694  6B6D               	clrf	(sprintf@val+3)& (0+255),b
  7029  000696                     
  7030                           ; BSR set to: 0
  7031  000696  0E02               	movlw	2
  7032  000698  276E               	addwf	sprintf@ap& (0+255),f,b
  7033  00069A  0E00               	movlw	0
  7034  00069C  236F               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7035  00069E                     l4536:
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  7039  00069E  0E01               	movlw	1
  7040  0006A0  6F73               	movwf	sprintf@c& (0+255),b
  7041  0006A2                     l4542:
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;doprnt.c: 1332: if(val < dpowers[c])
  7045  0006A2  5173               	movf	sprintf@c& (0+255),w,b
  7046  0006A4  0D04               	mullw	4
  7047  0006A6  0E6B               	movlw	low _dpowers
  7048  0006A8  24F3               	addwf	243,w,c
  7049  0006AA  6EF6               	movwf	tblptrl,c
  7050  0006AC  0E5E               	movlw	high _dpowers
  7051  0006AE  20F4               	addwfc	244,w,c
  7052  0006B0  6EF7               	movwf	tblptrh,c
  7053  0006B2                     	if	0	;There are less than 3 active tblptr bytes
  7054  0006B2                     	endif
  7055  0006B2  0009               	tblrd		*+
  7056  0006B4  50F5               	movf	tablat,w,c
  7057  0006B6  5D6A               	subwf	sprintf@val& (0+255),w,b
  7058  0006B8  0009               	tblrd		*+
  7059  0006BA  50F5               	movf	tablat,w,c
  7060  0006BC  596B               	subwfb	(sprintf@val+1)& (0+255),w,b
  7061  0006BE  0009               	tblrd		*+
  7062  0006C0  50F5               	movf	tablat,w,c
  7063  0006C2  596C               	subwfb	(sprintf@val+2)& (0+255),w,b
  7064  0006C4  0009               	tblrd		*+
  7065  0006C6  50F5               	movf	tablat,w,c
  7066  0006C8  596D               	subwfb	(sprintf@val+3)& (0+255),w,b
  7067  0006CA  B0D8               	btfsc	status,0,c
  7068  0006CC  EF6A  F003         	goto	u3441
  7069  0006D0  EF6C  F003         	goto	u3440
  7070  0006D4                     u3441:
  7071  0006D4  EF6E  F003         	goto	l4546
  7072  0006D8                     u3440:
  7073  0006D8  EF78  F003         	goto	l4550
  7074  0006DC                     l4546:
  7075                           
  7076                           ; BSR set to: 0
  7077  0006DC  2B73               	incf	sprintf@c& (0+255),f,b
  7078  0006DE                     
  7079                           ; BSR set to: 0
  7080  0006DE  0E0A               	movlw	10
  7081  0006E0  1973               	xorwf	sprintf@c& (0+255),w,b
  7082  0006E2  A4D8               	btfss	status,2,c
  7083  0006E4  EF76  F003         	goto	u3451
  7084  0006E8  EF78  F003         	goto	u3450
  7085  0006EC                     u3451:
  7086  0006EC  EF51  F003         	goto	l4542
  7087  0006F0                     u3450:
  7088  0006F0                     l4550:
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;doprnt.c: 1371: if(width && flag & 0x03)
  7092  0006F0  5171               	movf	sprintf@width& (0+255),w,b
  7093  0006F2  1172               	iorwf	(sprintf@width+1)& (0+255),w,b
  7094  0006F4  B4D8               	btfsc	status,2,c
  7095  0006F6  EF7F  F003         	goto	u3461
  7096  0006FA  EF81  F003         	goto	u3460
  7097  0006FE                     u3461:
  7098  0006FE  EF8F  F003         	goto	l4556
  7099  000702                     u3460:
  7100  000702                     
  7101                           ; BSR set to: 0
  7102  000702  C070  F04F         	movff	sprintf@flag,??_sprintf
  7103  000706  0E03               	movlw	3
  7104  000708  164F               	andwf	??_sprintf^0,f,c
  7105  00070A  B4D8               	btfsc	status,2,c
  7106  00070C  EF8A  F003         	goto	u3471
  7107  000710  EF8C  F003         	goto	u3470
  7108  000714                     u3471:
  7109  000714  EF8F  F003         	goto	l4556
  7110  000718                     u3470:
  7111  000718                     
  7112                           ; BSR set to: 0
  7113                           ;doprnt.c: 1372: width--;
  7114  000718  0771               	decf	sprintf@width& (0+255),f,b
  7115  00071A  A0D8               	btfss	status,0,c
  7116  00071C  0772               	decf	(sprintf@width+1)& (0+255),f,b
  7117  00071E                     l4556:
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;doprnt.c: 1407: if(width > c)
  7121  00071E  5173               	movf	sprintf@c& (0+255),w,b
  7122  000720  6E4F               	movwf	??_sprintf^0,c
  7123  000722  6A50               	clrf	(??_sprintf+1)^0,c
  7124  000724  5171               	movf	sprintf@width& (0+255),w,b
  7125  000726  5C4F               	subwf	??_sprintf^0,w,c
  7126  000728  5050               	movf	(??_sprintf+1)^0,w,c
  7127  00072A  0A80               	xorlw	128
  7128  00072C  6E51               	movwf	(??_sprintf+2)^0,c
  7129  00072E  5172               	movf	(sprintf@width+1)& (0+255),w,b
  7130  000730  0A80               	xorlw	128
  7131  000732  5851               	subwfb	(??_sprintf+2)^0,w,c
  7132  000734  B0D8               	btfsc	status,0,c
  7133  000736  EF9F  F003         	goto	u3481
  7134  00073A  EFA1  F003         	goto	u3480
  7135  00073E                     u3481:
  7136  00073E  EFA7  F003         	goto	l4560
  7137  000742                     u3480:
  7138  000742                     
  7139                           ; BSR set to: 0
  7140                           ;doprnt.c: 1408: width -= c;
  7141  000742  5173               	movf	sprintf@c& (0+255),w,b
  7142  000744  5F71               	subwf	sprintf@width& (0+255),f,b
  7143  000746  0E00               	movlw	0
  7144  000748  5B72               	subwfb	(sprintf@width+1)& (0+255),f,b
  7145  00074A  EFAB  F003         	goto	l4562
  7146  00074E                     l4560:
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  7150  00074E  0E00               	movlw	0
  7151  000750  6F72               	movwf	(sprintf@width+1)& (0+255),b
  7152  000752  0E00               	movlw	0
  7153  000754  6F71               	movwf	sprintf@width& (0+255),b
  7154  000756                     l4562:
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  7158  000756  5171               	movf	sprintf@width& (0+255),w,b
  7159  000758  1172               	iorwf	(sprintf@width+1)& (0+255),w,b
  7160  00075A  B4D8               	btfsc	status,2,c
  7161  00075C  EFB2  F003         	goto	u3491
  7162  000760  EFB4  F003         	goto	u3490
  7163  000764                     u3491:
  7164  000764  EFC8  F003         	goto	l4570
  7165  000768                     u3490:
  7166  000768                     l4564:
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  7170  000768  C060  FFD9         	movff	sprintf@sp,fsr2l
  7171  00076C  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  7172  000770  0E20               	movlw	32
  7173  000772  6EDF               	movwf	indf2,c
  7174  000774                     
  7175                           ; BSR set to: 0
  7176  000774  4B60               	infsnz	sprintf@sp& (0+255),f,b
  7177  000776  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  7178  000778                     
  7179                           ; BSR set to: 0
  7180                           ;doprnt.c: 1457: while(--width);
  7181  000778  0771               	decf	sprintf@width& (0+255),f,b
  7182  00077A  A0D8               	btfss	status,0,c
  7183  00077C  0772               	decf	(sprintf@width+1)& (0+255),f,b
  7184  00077E  5171               	movf	sprintf@width& (0+255),w,b
  7185  000780  1172               	iorwf	(sprintf@width+1)& (0+255),w,b
  7186  000782  A4D8               	btfss	status,2,c
  7187  000784  EFC6  F003         	goto	u3501
  7188  000788  EFC8  F003         	goto	u3500
  7189  00078C                     u3501:
  7190  00078C  EFB4  F003         	goto	l4564
  7191  000790                     u3500:
  7192  000790                     l4570:
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;doprnt.c: 1464: if(flag & 0x03)
  7196  000790  C070  F04F         	movff	sprintf@flag,??_sprintf
  7197  000794  0E03               	movlw	3
  7198  000796  164F               	andwf	??_sprintf^0,f,c
  7199  000798  B4D8               	btfsc	status,2,c
  7200  00079A  EFD1  F003         	goto	u3511
  7201  00079E  EFD3  F003         	goto	u3510
  7202  0007A2                     u3511:
  7203  0007A2  EFDB  F003         	goto	l4576
  7204  0007A6                     u3510:
  7205  0007A6                     
  7206                           ; BSR set to: 0
  7207                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  7208  0007A6  C060  FFD9         	movff	sprintf@sp,fsr2l
  7209  0007AA  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  7210  0007AE  0E2D               	movlw	45
  7211  0007B0  6EDF               	movwf	indf2,c
  7212  0007B2                     
  7213                           ; BSR set to: 0
  7214  0007B2  4B60               	infsnz	sprintf@sp& (0+255),f,b
  7215  0007B4  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  7216  0007B6                     l4576:
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  7220  0007B6  C073  F068         	movff	sprintf@c,sprintf@prec
  7221  0007BA  6B69               	clrf	(sprintf@prec+1)& (0+255),b
  7222                           
  7223                           ;doprnt.c: 1500: while(prec--) {
  7224  0007BC  EF24  F004         	goto	l4584
  7225  0007C0                     l4578:
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  7229  0007C0  C068  F04F         	movff	sprintf@prec,??_sprintf
  7230  0007C4  C069  F050         	movff	sprintf@prec+1,??_sprintf+1
  7231  0007C8  90D8               	bcf	status,0,c
  7232  0007CA  364F               	rlcf	??_sprintf^0,f,c
  7233  0007CC  3650               	rlcf	(??_sprintf+1)^0,f,c
  7234  0007CE  90D8               	bcf	status,0,c
  7235  0007D0  364F               	rlcf	??_sprintf^0,f,c
  7236  0007D2  3650               	rlcf	(??_sprintf+1)^0,f,c
  7237  0007D4  0E6B               	movlw	low _dpowers
  7238  0007D6  244F               	addwf	??_sprintf^0,w,c
  7239  0007D8  6EF6               	movwf	tblptrl,c
  7240  0007DA  0E5E               	movlw	high _dpowers
  7241  0007DC  2050               	addwfc	(??_sprintf+1)^0,w,c
  7242  0007DE  6EF7               	movwf	tblptrh,c
  7243  0007E0                     	if	0	;There are less than 3 active tblptr bytes
  7244  0007E0                     	endif
  7245  0007E0  0009               	tblrd		*+
  7246  0007E2  CFF5 F009          	movff	tablat,___lldiv@divisor
  7247  0007E6  0009               	tblrd		*+
  7248  0007E8  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  7249  0007EC  0009               	tblrd		*+
  7250  0007EE  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  7251  0007F2  000A               	tblrd		*-
  7252  0007F4  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  7253  0007F8  C06A  F005         	movff	sprintf@val,___lldiv@dividend
  7254  0007FC  C06B  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  7255  000800  C06C  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  7256  000804  C06D  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  7257  000808  EC35  F00C         	call	___lldiv	;wreg free
  7258  00080C  C005  F012         	movff	?___lldiv,___llmod@dividend
  7259  000810  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  7260  000814  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  7261  000818  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  7262  00081C  0E0A               	movlw	10
  7263  00081E  6E16               	movwf	___llmod@divisor^0,c
  7264  000820  0E00               	movlw	0
  7265  000822  6E17               	movwf	(___llmod@divisor+1)^0,c
  7266  000824  0E00               	movlw	0
  7267  000826  6E18               	movwf	(___llmod@divisor+2)^0,c
  7268  000828  0E00               	movlw	0
  7269  00082A  6E19               	movwf	(___llmod@divisor+3)^0,c
  7270  00082C  EC16  F00D         	call	___llmod	;wreg free
  7271  000830  5012               	movf	?___llmod^0,w,c
  7272  000832  0F30               	addlw	48
  7273  000834  0100               	movlb	0	; () banked
  7274  000836  6F73               	movwf	sprintf@c& (0+255),b
  7275  000838                     
  7276                           ; BSR set to: 0
  7277                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  7278  000838  C060  FFD9         	movff	sprintf@sp,fsr2l
  7279  00083C  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  7280  000840  C073  FFDF         	movff	sprintf@c,indf2
  7281  000844                     
  7282                           ; BSR set to: 0
  7283  000844  4B60               	infsnz	sprintf@sp& (0+255),f,b
  7284  000846  2B61               	incf	(sprintf@sp+1)& (0+255),f,b
  7285  000848                     l4584:
  7286                           
  7287                           ; BSR set to: 0
  7288  000848  0768               	decf	sprintf@prec& (0+255),f,b
  7289  00084A  A0D8               	btfss	status,0,c
  7290  00084C  0769               	decf	(sprintf@prec+1)& (0+255),f,b
  7291  00084E  2968               	incf	sprintf@prec& (0+255),w,b
  7292  000850  E106               	bnz	u3521
  7293  000852  2969               	incf	(sprintf@prec+1)& (0+255),w,b
  7294  000854  A4D8               	btfss	status,2,c
  7295  000856  EF2F  F004         	goto	u3521
  7296  00085A  EF31  F004         	goto	u3520
  7297  00085E                     u3521:
  7298  00085E  EFE0  F003         	goto	l4578
  7299  000862                     u3520:
  7300  000862                     l4586:
  7301                           
  7302                           ; BSR set to: 0
  7303  000862  C062  FFF6         	movff	sprintf@f,tblptrl
  7304  000866  C063  FFF7         	movff	sprintf@f+1,tblptrh
  7305  00086A  4B62               	infsnz	sprintf@f& (0+255),f,b
  7306  00086C  2B63               	incf	(sprintf@f+1)& (0+255),f,b
  7307  00086E                     	if	0	;tblptru may be non-zero
  7308  00086E                     	endif
  7309  00086E                     	if	0	;tblptru may be non-zero
  7310  00086E                     	endif
  7311  00086E  0008               	tblrd		*
  7312  000870  CFF5 F073          	movff	tablat,sprintf@c
  7313  000874  5173               	movf	sprintf@c& (0+255),w,b
  7314  000876  A4D8               	btfss	status,2,c
  7315  000878  EF40  F004         	goto	u3531
  7316  00087C  EF42  F004         	goto	u3530
  7317  000880                     u3531:
  7318  000880  EF56  F002         	goto	l4484
  7319  000884                     u3530:
  7320  000884                     l4588:
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;doprnt.c: 1564: *sp = 0;
  7324  000884  C060  FFD9         	movff	sprintf@sp,fsr2l
  7325  000888  C061  FFDA         	movff	sprintf@sp+1,fsr2h
  7326  00088C  0E00               	movlw	0
  7327  00088E  6EDF               	movwf	indf2,c
  7328  000890                     
  7329                           ; BSR set to: 0
  7330  000890  0012               	return		;funcret
  7331  000892                     __end_of_sprintf:
  7332                           	opt callstack 0
  7333                           
  7334 ;; *************** function _isdigit *****************
  7335 ;; Defined at:
  7336 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  c               1    wreg     unsigned char 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  c               1    6[COMRAM] unsigned char 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;		None               void
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7350 ;;      Params:         0       0       0       0       0       0       0       0       0
  7351 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7352 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7353 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7354 ;;Total ram usage:        3 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    2
  7357 ;; This function calls:
  7358 ;;		Nothing
  7359 ;; This function is called by:
  7360 ;;		_sprintf
  7361 ;;		_atol
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text27
  7366  0023A6                     __ptext27:
  7367                           	opt callstack 0
  7368  0023A6                     _isdigit:
  7369                           	opt callstack 26
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;incstack = 0
  7373                           ;isdigit@c stored from wreg
  7374  0023A6  6E07               	movwf	isdigit@c^0,c
  7375  0023A8  0E00               	movlw	0
  7376  0023AA  6E06               	movwf	_isdigit$1812^0,c
  7377  0023AC  0E3A               	movlw	58
  7378  0023AE  6007               	cpfslt	isdigit@c^0,c
  7379  0023B0  EFDC  F011         	goto	u1941
  7380  0023B4  EFDE  F011         	goto	u1940
  7381  0023B8                     u1941:
  7382  0023B8  EFE8  F011         	goto	l3242
  7383  0023BC                     u1940:
  7384  0023BC  0E2F               	movlw	47
  7385  0023BE  6407               	cpfsgt	isdigit@c^0,c
  7386  0023C0  EFE4  F011         	goto	u1951
  7387  0023C4  EFE6  F011         	goto	u1950
  7388  0023C8                     u1951:
  7389  0023C8  EFE8  F011         	goto	l3242
  7390  0023CC                     u1950:
  7391  0023CC  0E01               	movlw	1
  7392  0023CE  6E06               	movwf	_isdigit$1812^0,c
  7393  0023D0                     l3242:
  7394  0023D0  C006  F005         	movff	_isdigit$1812,??_isdigit
  7395  0023D4  3005               	rrcf	??_isdigit^0,w,c
  7396  0023D6  0012               	return		;funcret
  7397  0023D8                     __end_of_isdigit:
  7398                           	opt callstack 0
  7399                           
  7400 ;; *************** function ___llmod *****************
  7401 ;; Defined at:
  7402 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  dividend        4   17[COMRAM] unsigned long 
  7405 ;;  divisor         4   21[COMRAM] unsigned long 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  counter         1   25[COMRAM] unsigned char 
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  4   17[COMRAM] unsigned long 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7417 ;;      Params:         8       0       0       0       0       0       0       0       0
  7418 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7420 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7421 ;;Total ram usage:        9 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    2
  7424 ;; This function calls:
  7425 ;;		Nothing
  7426 ;; This function is called by:
  7427 ;;		_sprintf
  7428 ;; This function uses a non-reentrant model
  7429 ;;
  7430                           
  7431                           	psect	text28
  7432  001A2C                     __ptext28:
  7433                           	opt callstack 0
  7434  001A2C                     ___llmod:
  7435                           	opt callstack 26
  7436  001A2C  5016               	movf	___llmod@divisor^0,w,c
  7437  001A2E  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  7438  001A30  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  7439  001A32  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  7440  001A34  B4D8               	btfsc	status,2,c
  7441  001A36  EF1F  F00D         	goto	u2411
  7442  001A3A  EF21  F00D         	goto	u2410
  7443  001A3E                     u2411:
  7444  001A3E  EF51  F00D         	goto	l1040
  7445  001A42                     u2410:
  7446  001A42  0E01               	movlw	1
  7447  001A44  6E1A               	movwf	___llmod@counter^0,c
  7448  001A46  EF2B  F00D         	goto	l3502
  7449  001A4A                     l3500:
  7450  001A4A  90D8               	bcf	status,0,c
  7451  001A4C  3616               	rlcf	___llmod@divisor^0,f,c
  7452  001A4E  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  7453  001A50  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  7454  001A52  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  7455  001A54  2A1A               	incf	___llmod@counter^0,f,c
  7456  001A56                     l3502:
  7457  001A56  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  7458  001A58  EF30  F00D         	goto	u2421
  7459  001A5C  EF32  F00D         	goto	u2420
  7460  001A60                     u2421:
  7461  001A60  EF25  F00D         	goto	l3500
  7462  001A64                     u2420:
  7463  001A64                     l3504:
  7464  001A64  5016               	movf	___llmod@divisor^0,w,c
  7465  001A66  5C12               	subwf	___llmod@dividend^0,w,c
  7466  001A68  5017               	movf	(___llmod@divisor+1)^0,w,c
  7467  001A6A  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  7468  001A6C  5018               	movf	(___llmod@divisor+2)^0,w,c
  7469  001A6E  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  7470  001A70  5019               	movf	(___llmod@divisor+3)^0,w,c
  7471  001A72  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  7472  001A74  A0D8               	btfss	status,0,c
  7473  001A76  EF3F  F00D         	goto	u2431
  7474  001A7A  EF41  F00D         	goto	u2430
  7475  001A7E                     u2431:
  7476  001A7E  EF49  F00D         	goto	l3508
  7477  001A82                     u2430:
  7478  001A82  5016               	movf	___llmod@divisor^0,w,c
  7479  001A84  5E12               	subwf	___llmod@dividend^0,f,c
  7480  001A86  5017               	movf	(___llmod@divisor+1)^0,w,c
  7481  001A88  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  7482  001A8A  5018               	movf	(___llmod@divisor+2)^0,w,c
  7483  001A8C  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  7484  001A8E  5019               	movf	(___llmod@divisor+3)^0,w,c
  7485  001A90  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  7486  001A92                     l3508:
  7487  001A92  90D8               	bcf	status,0,c
  7488  001A94  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  7489  001A96  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  7490  001A98  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  7491  001A9A  3216               	rrcf	___llmod@divisor^0,f,c
  7492  001A9C  2E1A               	decfsz	___llmod@counter^0,f,c
  7493  001A9E  EF32  F00D         	goto	l3504
  7494  001AA2                     l1040:
  7495  001AA2  C012  F012         	movff	___llmod@dividend,?___llmod
  7496  001AA6  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  7497  001AAA  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  7498  001AAE  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  7499  001AB2  0012               	return		;funcret
  7500  001AB4                     __end_of___llmod:
  7501                           	opt callstack 0
  7502                           
  7503 ;; *************** function _sleepMS *****************
  7504 ;; Defined at:
  7505 ;;		line 94 in file "main.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  ms              4    4[COMRAM] unsigned long 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;  t               4    8[COMRAM] unsigned long 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7519 ;;      Params:         4       0       0       0       0       0       0       0       0
  7520 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7522 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7523 ;;Total ram usage:        8 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    2
  7526 ;; This function calls:
  7527 ;;		Nothing
  7528 ;; This function is called by:
  7529 ;;		_A6_Init
  7530 ;;		_A6_SpeedGet
  7531 ;;		_A6_SpeedSet
  7532 ;;		_A6_SpeedAutoDetect
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text29
  7537  002300                     __ptext29:
  7538                           	opt callstack 0
  7539  002300                     _sleepMS:
  7540                           	opt callstack 26
  7541  002300                     
  7542                           ;main.c: 95: uint32_t t = MILLISECONDS + ms;
  7543  002300  5005               	movf	sleepMS@ms^0,w,c
  7544  002302  0101               	movlb	1	; () banked
  7545  002304  250C               	addwf	_MILLISECONDS& (0+255),w,b
  7546  002306  6E09               	movwf	sleepMS@t^0,c
  7547  002308  5006               	movf	(sleepMS@ms+1)^0,w,c
  7548  00230A  210D               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  7549  00230C  6E0A               	movwf	(sleepMS@t+1)^0,c
  7550  00230E  5007               	movf	(sleepMS@ms+2)^0,w,c
  7551  002310  210E               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  7552  002312  6E0B               	movwf	(sleepMS@t+2)^0,c
  7553  002314  5008               	movf	(sleepMS@ms+3)^0,w,c
  7554  002316  210F               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  7555  002318  6E0C               	movwf	(sleepMS@t+3)^0,c
  7556  00231A                     l3318:
  7557                           
  7558                           ; BSR set to: 1
  7559  00231A  5009               	movf	sleepMS@t^0,w,c
  7560  00231C  5D0C               	subwf	_MILLISECONDS& (0+255),w,b
  7561  00231E  500A               	movf	(sleepMS@t+1)^0,w,c
  7562  002320  590D               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  7563  002322  500B               	movf	(sleepMS@t+2)^0,w,c
  7564  002324  590E               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
  7565  002326  500C               	movf	(sleepMS@t+3)^0,w,c
  7566  002328  590F               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
  7567  00232A  A0D8               	btfss	status,0,c
  7568  00232C  EF9A  F011         	goto	u2111
  7569  002330  EF9C  F011         	goto	u2110
  7570  002334                     u2111:
  7571  002334  EF8D  F011         	goto	l3318
  7572  002338                     u2110:
  7573  002338                     
  7574                           ; BSR set to: 1
  7575  002338  0012               	return		;funcret
  7576  00233A                     __end_of_sleepMS:
  7577                           	opt callstack 0
  7578                           
  7579 ;; *************** function _printLine *****************
  7580 ;; Defined at:
  7581 ;;		line 99 in file "main.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;  str             2   73[COMRAM] PTR const unsigned char 
  7584 ;;		 -> A6_SpeedAutoDetect@zzzz(32), STR_30(19), A6_SpeedSet@response(32), A6_SpeedSet@request(20), 
  7585 ;;		 -> EUSART_RX.line(32), EUSART_RX(100), loop@zzzz_158(32), STR_12(12), 
  7586 ;;		 -> loop@response(32), STR_8(11), STR_7(13), STR_6(11), 
  7587 ;;		 -> STR_5(23), STR_4(21), loop@zzzz(32), 
  7588 ;;  color           2   75[COMRAM] unsigned int 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  1    wreg      void 
  7593 ;; Registers used:
  7594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7600 ;;      Params:         4       0       0       0       0       0       0       0       0
  7601 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7603 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7604 ;;Total ram usage:        4 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:    8
  7607 ;; This function calls:
  7608 ;;		_TFT_DrawFillRect
  7609 ;;		_TFT_DrawString
  7610 ;; This function is called by:
  7611 ;;		_loop
  7612 ;;		_A6_SpeedSet
  7613 ;;		_A6_SpeedAutoDetect
  7614 ;;		_EUSART_RX_Process
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           
  7618                           	psect	text30
  7619  00201E                     __ptext30:
  7620                           	opt callstack 0
  7621  00201E                     _printLine:
  7622                           	opt callstack 21
  7623  00201E                     
  7624                           ;main.c: 100: EUSART_RX.zzzzzzzzz += 10;
  7625  00201E  0E0A               	movlw	10
  7626  002020  0101               	movlb	1	; () banked
  7627  002022  2713               	addwf	(_EUSART_RX+3)& (0+255),f,b
  7628  002024                     
  7629                           ; BSR set to: 1
  7630                           ;main.c: 101: TFT_DrawFillRect(EUSART_RX.zzzzzzzzz, 0, 40, 400, 0x0000);
  7631  002024  C113  F01C         	movff	_EUSART_RX+3,TFT_DrawFillRect@x
  7632  002028  6A1D               	clrf	(TFT_DrawFillRect@x+1)^0,c
  7633  00202A  0E00               	movlw	0
  7634  00202C  6E1F               	movwf	(TFT_DrawFillRect@y+1)^0,c
  7635  00202E  0E00               	movlw	0
  7636  002030  6E1E               	movwf	TFT_DrawFillRect@y^0,c
  7637  002032  0E00               	movlw	0
  7638  002034  6E21               	movwf	(TFT_DrawFillRect@w+1)^0,c
  7639  002036  0E28               	movlw	40
  7640  002038  6E20               	movwf	TFT_DrawFillRect@w^0,c
  7641  00203A  0E01               	movlw	1
  7642  00203C  6E23               	movwf	(TFT_DrawFillRect@h+1)^0,c
  7643  00203E  0E90               	movlw	144
  7644  002040  6E22               	movwf	TFT_DrawFillRect@h^0,c
  7645  002042  0E00               	movlw	0
  7646  002044  6E25               	movwf	(TFT_DrawFillRect@color+1)^0,c
  7647  002046  0E00               	movlw	0
  7648  002048  6E24               	movwf	TFT_DrawFillRect@color^0,c
  7649  00204A  EC93  F00E         	call	_TFT_DrawFillRect	;wreg free
  7650  00204E                     
  7651                           ;main.c: 102: TFT_DrawString(EUSART_RX.zzzzzzzzz, (400 - 1), str, color, 0x0000, 1);
  7652  00204E  C113  F03F         	movff	_EUSART_RX+3,TFT_DrawString@x
  7653  002052  6A40               	clrf	(TFT_DrawString@x+1)^0,c
  7654  002054  0E01               	movlw	1
  7655  002056  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  7656  002058  0E8F               	movlw	143
  7657  00205A  6E41               	movwf	TFT_DrawString@y^0,c
  7658  00205C  C04A  F043         	movff	printLine@str,TFT_DrawString@str
  7659  002060  C04B  F044         	movff	printLine@str+1,TFT_DrawString@str+1
  7660  002064  C04C  F045         	movff	printLine@color,TFT_DrawString@color
  7661  002068  C04D  F046         	movff	printLine@color+1,TFT_DrawString@color+1
  7662  00206C  0E00               	movlw	0
  7663  00206E  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  7664  002070  0E00               	movlw	0
  7665  002072  6E47               	movwf	TFT_DrawString@bg^0,c
  7666  002074  0E01               	movlw	1
  7667  002076  6E49               	movwf	TFT_DrawString@size^0,c
  7668  002078  EC87  F00C         	call	_TFT_DrawString	;wreg free
  7669  00207C  0012               	return		;funcret
  7670  00207E                     __end_of_printLine:
  7671                           	opt callstack 0
  7672                           
  7673 ;; *************** function _TFT_DrawString *****************
  7674 ;; Defined at:
  7675 ;;		line 213 in file "TFT.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;  x               2   62[COMRAM] unsigned int 
  7678 ;;  y               2   64[COMRAM] unsigned int 
  7679 ;;  str             2   66[COMRAM] PTR const unsigned char 
  7680 ;;		 -> A6_SpeedAutoDetect@zzzz(32), STR_30(19), A6_SpeedSet@response(32), A6_SpeedSet@request(20), 
  7681 ;;		 -> EUSART_RX.line(32), STR_16(28), STR_15(11), Ecg_ProcessHeartRate@heartrateString(5), 
  7682 ;;		 -> EUSART_RX(100), loop@zzzz_158(32), STR_12(12), loop@response(32), 
  7683 ;;		 -> STR_8(11), STR_7(13), STR_6(11), STR_5(23), 
  7684 ;;		 -> STR_4(21), loop@zzzz(32), 
  7685 ;;  color           2   68[COMRAM] unsigned int 
  7686 ;;  bg              2   70[COMRAM] unsigned int 
  7687 ;;  size            1   72[COMRAM] unsigned char 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;		None
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      void 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7699 ;;      Params:        11       0       0       0       0       0       0       0       0
  7700 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7702 ;;      Totals:        11       0       0       0       0       0       0       0       0
  7703 ;;Total ram usage:       11 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    7
  7706 ;; This function calls:
  7707 ;;		_TFT_DrawChar
  7708 ;; This function is called by:
  7709 ;;		_printLine
  7710 ;;		_Ecg_Background_Leads_Ok
  7711 ;;		_Ecg_Background_Leads_Failure
  7712 ;;		_Ecg_ProcessHeartRate
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text31
  7717  00190E                     __ptext31:
  7718                           	opt callstack 0
  7719  00190E                     _TFT_DrawString:
  7720                           	opt callstack 21
  7721  00190E                     
  7722                           ;TFT.c: 214: while(*str) {
  7723  00190E  EFB6  F00C         	goto	l3328
  7724  001912                     l3322:
  7725                           
  7726                           ;TFT.c: 215: TFT_DrawChar(x, y, *str, color, bg, size);
  7727  001912  C03F  F02A         	movff	TFT_DrawString@x,TFT_DrawChar@x
  7728  001916  C040  F02B         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  7729  00191A  C041  F02C         	movff	TFT_DrawString@y,TFT_DrawChar@y
  7730  00191E  C042  F02D         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  7731  001922  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  7732  001926  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  7733  00192A  6AF8               	clrf	tblptru,c
  7734  00192C  0E07               	movlw	(high __ramtop+-1)
  7735  00192E  64F7               	cpfsgt	tblptrh,c
  7736  001930  D003               	bra	u2127
  7737  001932  0008               	tblrd		*
  7738  001934  50F5               	movf	tablat,w,c
  7739  001936  D005               	bra	u2120
  7740  001938                     u2127:
  7741  001938  CFF6 FFE9          	movff	tblptrl,fsr0l
  7742  00193C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7743  001940  50EF               	movf	indf0,w,c
  7744  001942                     u2120:
  7745  001942  6E2E               	movwf	TFT_DrawChar@c^0,c
  7746  001944  C045  F02F         	movff	TFT_DrawString@color,TFT_DrawChar@color
  7747  001948  C046  F030         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  7748  00194C  C047  F031         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  7749  001950  C048  F032         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  7750  001954  C049  F033         	movff	TFT_DrawString@size,TFT_DrawChar@size
  7751  001958  EC49  F004         	call	_TFT_DrawChar	;wreg free
  7752  00195C                     
  7753                           ;TFT.c: 216: y -= (6 * size);
  7754  00195C  5049               	movf	TFT_DrawString@size^0,w,c
  7755  00195E  0D06               	mullw	6
  7756  001960  50F3               	movf	243,w,c
  7757  001962  5E41               	subwf	TFT_DrawString@y^0,f,c
  7758  001964  50F4               	movf	244,w,c
  7759  001966  5A42               	subwfb	(TFT_DrawString@y+1)^0,f,c
  7760  001968                     
  7761                           ;TFT.c: 217: str++;
  7762  001968  4A43               	infsnz	TFT_DrawString@str^0,f,c
  7763  00196A  2A44               	incf	(TFT_DrawString@str+1)^0,f,c
  7764  00196C                     l3328:
  7765  00196C  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  7766  001970  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  7767  001974  6AF8               	clrf	tblptru,c
  7768  001976  0E07               	movlw	(high __ramtop+-1)
  7769  001978  64F7               	cpfsgt	tblptrh,c
  7770  00197A  D003               	bra	u2137
  7771  00197C  0008               	tblrd		*
  7772  00197E  50F5               	movf	tablat,w,c
  7773  001980  D005               	bra	u2130
  7774  001982                     u2137:
  7775  001982  CFF6 FFE9          	movff	tblptrl,fsr0l
  7776  001986  CFF7 FFEA          	movff	tblptrh,fsr0h
  7777  00198A  50EF               	movf	indf0,w,c
  7778  00198C                     u2130:
  7779  00198C  0900               	iorlw	0
  7780  00198E  A4D8               	btfss	status,2,c
  7781  001990  EFCC  F00C         	goto	u2141
  7782  001994  EFCE  F00C         	goto	u2140
  7783  001998                     u2141:
  7784  001998  EF89  F00C         	goto	l3322
  7785  00199C                     u2140:
  7786  00199C  0012               	return		;funcret
  7787  00199E                     __end_of_TFT_DrawString:
  7788                           	opt callstack 0
  7789                           
  7790 ;; *************** function _TFT_DrawChar *****************
  7791 ;; Defined at:
  7792 ;;		line 192 in file "TFT.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  x               2   41[COMRAM] unsigned int 
  7795 ;;  y               2   43[COMRAM] unsigned int 
  7796 ;;  c               1   45[COMRAM] unsigned char 
  7797 ;;  color           2   46[COMRAM] unsigned int 
  7798 ;;  bg              2   48[COMRAM] unsigned int 
  7799 ;;  size            1   50[COMRAM] unsigned char 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;  j               1   60[COMRAM] char 
  7802 ;;  line            1   55[COMRAM] unsigned char 
  7803 ;;  i               1   61[COMRAM] char 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  1    wreg      void 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7813 ;;      Params:        10       0       0       0       0       0       0       0       0
  7814 ;;      Locals:         7       0       0       0       0       0       0       0       0
  7815 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7816 ;;      Totals:        21       0       0       0       0       0       0       0       0
  7817 ;;Total ram usage:       21 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    6
  7820 ;; This function calls:
  7821 ;;		_TFT_DrawFillRect
  7822 ;;		_TFT_DrawPixel
  7823 ;;		___wmul
  7824 ;; This function is called by:
  7825 ;;		_TFT_DrawString
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           	psect	text32
  7830  000892                     __ptext32:
  7831                           	opt callstack 0
  7832  000892                     _TFT_DrawChar:
  7833                           	opt callstack 21
  7834  000892                     
  7835                           ;TFT.c: 193: for(int8_t i=0; i<5; i++ ) {
  7836  000892  0E00               	movlw	0
  7837  000894  6E3E               	movwf	TFT_DrawChar@i^0,c
  7838  000896                     l3152:
  7839                           
  7840                           ;TFT.c: 194: uint8_t line = TFT_Font[c * 5 + i];
  7841  000896  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  7842  00089A  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  7843  00089C  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  7844  00089E  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  7845  0008A0  502E               	movf	TFT_DrawChar@c^0,w,c
  7846  0008A2  0D05               	mullw	5
  7847  0008A4  0E9F               	movlw	low _TFT_Font
  7848  0008A6  6E36               	movwf	(??_TFT_DrawChar+2)^0,c
  7849  0008A8  0E58               	movlw	high _TFT_Font
  7850  0008AA  6E37               	movwf	(??_TFT_DrawChar+3)^0,c
  7851  0008AC  50F3               	movf	243,w,c
  7852  0008AE  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  7853  0008B0  50F4               	movf	244,w,c
  7854  0008B2  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  7855  0008B4  5034               	movf	??_TFT_DrawChar^0,w,c
  7856  0008B6  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  7857  0008B8  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  7858  0008BA  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  7859  0008BC  C036  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  7860  0008C0  C037  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  7861  0008C4                     	if	0	;tblptru may be non-zero
  7862  0008C4                     	endif
  7863  0008C4                     	if	0	;tblptru may be non-zero
  7864  0008C4                     	endif
  7865  0008C4  0008               	tblrd		*
  7866  0008C6  CFF5 F038          	movff	tablat,TFT_DrawChar@line
  7867  0008CA                     
  7868                           ;TFT.c: 195: for(int8_t j=0; j<8; j++, line >>= 1) {
  7869  0008CA  0E00               	movlw	0
  7870  0008CC  6E3D               	movwf	TFT_DrawChar@j^0,c
  7871  0008CE                     l263:
  7872                           
  7873                           ;TFT.c: 196: if(line & 1) {
  7874  0008CE  A038               	btfss	TFT_DrawChar@line^0,0,c
  7875  0008D0  EF6C  F004         	goto	u1791
  7876  0008D4  EF6E  F004         	goto	u1790
  7877  0008D8                     u1791:
  7878  0008D8  EFC7  F004         	goto	l3166
  7879  0008DC                     u1790:
  7880  0008DC                     
  7881                           ;TFT.c: 197: if(size == 1) {
  7882  0008DC  0433               	decf	TFT_DrawChar@size^0,w,c
  7883  0008DE  A4D8               	btfss	status,2,c
  7884  0008E0  EF74  F004         	goto	u1801
  7885  0008E4  EF76  F004         	goto	u1800
  7886  0008E8                     u1801:
  7887  0008E8  EF91  F004         	goto	l3164
  7888  0008EC                     u1800:
  7889  0008EC                     
  7890                           ;TFT.c: 198: TFT_DrawPixel((x + j), (y - i), color);
  7891  0008EC  502A               	movf	TFT_DrawChar@x^0,w,c
  7892  0008EE  243D               	addwf	TFT_DrawChar@j^0,w,c
  7893  0008F0  6E0D               	movwf	TFT_DrawPixel@x^0,c
  7894  0008F2  0E00               	movlw	0
  7895  0008F4  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  7896  0008F6  0EFF               	movlw	255
  7897  0008F8  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  7898  0008FA  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  7899  0008FC  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  7900  000900  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  7901  000902  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  7902  000904  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  7903  000906  5034               	movf	??_TFT_DrawChar^0,w,c
  7904  000908  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  7905  00090A  6E0F               	movwf	TFT_DrawPixel@y^0,c
  7906  00090C  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  7907  00090E  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  7908  000910  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  7909  000912  C02F  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  7910  000916  C030  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  7911  00091A  EC43  F011         	call	_TFT_DrawPixel	;wreg free
  7912                           
  7913                           ;TFT.c: 199: } else {
  7914  00091E  EF2A  F005         	goto	l3174
  7915  000922                     l3164:
  7916                           
  7917                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  7918  000922  503D               	movf	TFT_DrawChar@j^0,w,c
  7919  000924  6E05               	movwf	___wmul@multiplier^0,c
  7920  000926  6A06               	clrf	(___wmul@multiplier+1)^0,c
  7921  000928  BE05               	btfsc	___wmul@multiplier^0,7,c
  7922  00092A  0606               	decf	(___wmul@multiplier+1)^0,f,c
  7923  00092C  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  7924  000930  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  7925  000932  EC19  F012         	call	___wmul	;wreg free
  7926  000936  502A               	movf	TFT_DrawChar@x^0,w,c
  7927  000938  2405               	addwf	?___wmul^0,w,c
  7928  00093A  6E39               	movwf	_TFT_DrawChar$2092^0,c
  7929  00093C  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  7930  00093E  2006               	addwfc	(?___wmul+1)^0,w,c
  7931  000940  6E3A               	movwf	(_TFT_DrawChar$2092+1)^0,c
  7932                           
  7933                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  7934  000942  503E               	movf	TFT_DrawChar@i^0,w,c
  7935  000944  6E05               	movwf	___wmul@multiplier^0,c
  7936  000946  6A06               	clrf	(___wmul@multiplier+1)^0,c
  7937  000948  BE05               	btfsc	___wmul@multiplier^0,7,c
  7938  00094A  0606               	decf	(___wmul@multiplier+1)^0,f,c
  7939  00094C  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  7940  000950  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  7941  000952  EC19  F012         	call	___wmul	;wreg free
  7942  000956  5005               	movf	?___wmul^0,w,c
  7943  000958  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  7944  00095A  6E3B               	movwf	_TFT_DrawChar$2093^0,c
  7945  00095C  5006               	movf	(?___wmul+1)^0,w,c
  7946  00095E  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  7947  000960  6E3C               	movwf	(_TFT_DrawChar$2093+1)^0,c
  7948                           
  7949                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  7950  000962  C039  F01C         	movff	_TFT_DrawChar$2092,TFT_DrawFillRect@x
  7951  000966  C03A  F01D         	movff	_TFT_DrawChar$2092+1,TFT_DrawFillRect@x+1
  7952  00096A  C03B  F01E         	movff	_TFT_DrawChar$2093,TFT_DrawFillRect@y
  7953  00096E  C03C  F01F         	movff	_TFT_DrawChar$2093+1,TFT_DrawFillRect@y+1
  7954  000972  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  7955  000976  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  7956  000978  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  7957  00097C  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  7958  00097E  C02F  F024         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  7959  000982  C030  F025         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  7960  000986  EC93  F00E         	call	_TFT_DrawFillRect	;wreg free
  7961  00098A  EF2A  F005         	goto	l3174
  7962  00098E                     l3166:
  7963  00098E  502F               	movf	TFT_DrawChar@color^0,w,c
  7964  000990  1831               	xorwf	TFT_DrawChar@bg^0,w,c
  7965  000992  E109               	bnz	u1810
  7966  000994  5030               	movf	(TFT_DrawChar@color+1)^0,w,c
  7967  000996  1832               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  7968  000998  B4D8               	btfsc	status,2,c
  7969  00099A  EFD1  F004         	goto	u1811
  7970  00099E  EFD3  F004         	goto	u1810
  7971  0009A2                     u1811:
  7972  0009A2  EF2A  F005         	goto	l3174
  7973  0009A6                     u1810:
  7974  0009A6                     
  7975                           ;TFT.c: 203: if(size == 1) {
  7976  0009A6  0433               	decf	TFT_DrawChar@size^0,w,c
  7977  0009A8  A4D8               	btfss	status,2,c
  7978  0009AA  EFD9  F004         	goto	u1821
  7979  0009AE  EFDB  F004         	goto	u1820
  7980  0009B2                     u1821:
  7981  0009B2  EFF6  F004         	goto	l3172
  7982  0009B6                     u1820:
  7983  0009B6                     
  7984                           ;TFT.c: 204: TFT_DrawPixel((x + j), (y - i), bg);
  7985  0009B6  502A               	movf	TFT_DrawChar@x^0,w,c
  7986  0009B8  243D               	addwf	TFT_DrawChar@j^0,w,c
  7987  0009BA  6E0D               	movwf	TFT_DrawPixel@x^0,c
  7988  0009BC  0E00               	movlw	0
  7989  0009BE  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  7990  0009C0  0EFF               	movlw	255
  7991  0009C2  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  7992  0009C4  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  7993  0009C6  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  7994  0009CA  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  7995  0009CC  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  7996  0009CE  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  7997  0009D0  5034               	movf	??_TFT_DrawChar^0,w,c
  7998  0009D2  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  7999  0009D4  6E0F               	movwf	TFT_DrawPixel@y^0,c
  8000  0009D6  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  8001  0009D8  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  8002  0009DA  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  8003  0009DC  C031  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  8004  0009E0  C032  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  8005  0009E4  EC43  F011         	call	_TFT_DrawPixel	;wreg free
  8006                           
  8007                           ;TFT.c: 205: } else {
  8008  0009E8  EF2A  F005         	goto	l3174
  8009  0009EC                     l3172:
  8010                           
  8011                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  8012  0009EC  503D               	movf	TFT_DrawChar@j^0,w,c
  8013  0009EE  6E05               	movwf	___wmul@multiplier^0,c
  8014  0009F0  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8015  0009F2  BE05               	btfsc	___wmul@multiplier^0,7,c
  8016  0009F4  0606               	decf	(___wmul@multiplier+1)^0,f,c
  8017  0009F6  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  8018  0009FA  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  8019  0009FC  EC19  F012         	call	___wmul	;wreg free
  8020  000A00  502A               	movf	TFT_DrawChar@x^0,w,c
  8021  000A02  2405               	addwf	?___wmul^0,w,c
  8022  000A04  6E39               	movwf	_TFT_DrawChar$2092^0,c
  8023  000A06  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  8024  000A08  2006               	addwfc	(?___wmul+1)^0,w,c
  8025  000A0A  6E3A               	movwf	(_TFT_DrawChar$2092+1)^0,c
  8026                           
  8027                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  8028  000A0C  503E               	movf	TFT_DrawChar@i^0,w,c
  8029  000A0E  6E05               	movwf	___wmul@multiplier^0,c
  8030  000A10  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8031  000A12  BE05               	btfsc	___wmul@multiplier^0,7,c
  8032  000A14  0606               	decf	(___wmul@multiplier+1)^0,f,c
  8033  000A16  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  8034  000A1A  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  8035  000A1C  EC19  F012         	call	___wmul	;wreg free
  8036  000A20  5005               	movf	?___wmul^0,w,c
  8037  000A22  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  8038  000A24  6E3B               	movwf	_TFT_DrawChar$2093^0,c
  8039  000A26  5006               	movf	(?___wmul+1)^0,w,c
  8040  000A28  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  8041  000A2A  6E3C               	movwf	(_TFT_DrawChar$2093+1)^0,c
  8042                           
  8043                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  8044  000A2C  C039  F01C         	movff	_TFT_DrawChar$2092,TFT_DrawFillRect@x
  8045  000A30  C03A  F01D         	movff	_TFT_DrawChar$2092+1,TFT_DrawFillRect@x+1
  8046  000A34  C03B  F01E         	movff	_TFT_DrawChar$2093,TFT_DrawFillRect@y
  8047  000A38  C03C  F01F         	movff	_TFT_DrawChar$2093+1,TFT_DrawFillRect@y+1
  8048  000A3C  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  8049  000A40  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  8050  000A42  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  8051  000A46  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  8052  000A48  C031  F024         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  8053  000A4C  C032  F025         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  8054  000A50  EC93  F00E         	call	_TFT_DrawFillRect	;wreg free
  8055  000A54                     l3174:
  8056  000A54  2A3D               	incf	TFT_DrawChar@j^0,f,c
  8057  000A56  90D8               	bcf	status,0,c
  8058  000A58  3238               	rrcf	TFT_DrawChar@line^0,f,c
  8059  000A5A  503D               	movf	TFT_DrawChar@j^0,w,c
  8060  000A5C  0A80               	xorlw	128
  8061  000A5E  0F78               	addlw	-136
  8062  000A60  A0D8               	btfss	status,0,c
  8063  000A62  EF35  F005         	goto	u1831
  8064  000A66  EF37  F005         	goto	u1830
  8065  000A6A                     u1831:
  8066  000A6A  EF67  F004         	goto	l263
  8067  000A6E                     u1830:
  8068  000A6E  2A3E               	incf	TFT_DrawChar@i^0,f,c
  8069  000A70  503E               	movf	TFT_DrawChar@i^0,w,c
  8070  000A72  0A80               	xorlw	128
  8071  000A74  0F7B               	addlw	-133
  8072  000A76  A0D8               	btfss	status,0,c
  8073  000A78  EF40  F005         	goto	u1841
  8074  000A7C  EF42  F005         	goto	u1840
  8075  000A80                     u1841:
  8076  000A80  EF4B  F004         	goto	l3152
  8077  000A84                     u1840:
  8078  000A84  0012               	return		;funcret
  8079  000A86                     __end_of_TFT_DrawChar:
  8080                           	opt callstack 0
  8081                           
  8082 ;; *************** function _TFT_DrawPixel *****************
  8083 ;; Defined at:
  8084 ;;		line 94 in file "TFT.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  x               2   12[COMRAM] unsigned int 
  8087 ;;  y               2   14[COMRAM] unsigned int 
  8088 ;;  color           2   16[COMRAM] unsigned int 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  1    wreg      void 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, cstack
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8100 ;;      Params:         6       0       0       0       0       0       0       0       0
  8101 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8103 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8104 ;;Total ram usage:        6 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:    3
  8107 ;; This function calls:
  8108 ;;		_TFT_WriteRegister
  8109 ;; This function is called by:
  8110 ;;		_TFT_DrawLine
  8111 ;;		_TFT_DrawChar
  8112 ;;		_TFT_DrawBitmap
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text33
  8117  002286                     __ptext33:
  8118                           	opt callstack 0
  8119  002286                     _TFT_DrawPixel:
  8120                           	opt callstack 23
  8121  002286                     
  8122                           ;TFT.c: 95: TFT_WriteRegister(0x0200, x);
  8123  002286  0E02               	movlw	2
  8124  002288  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8125  00228A  0E00               	movlw	0
  8126  00228C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8127  00228E  C00D  F007         	movff	TFT_DrawPixel@x,TFT_WriteRegister@data
  8128  002292  C00E  F008         	movff	TFT_DrawPixel@x+1,TFT_WriteRegister@data+1
  8129  002296  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8130                           
  8131                           ;TFT.c: 96: TFT_WriteRegister(0x0201, y);
  8132  00229A  0E02               	movlw	2
  8133  00229C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8134  00229E  0E01               	movlw	1
  8135  0022A0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8136  0022A2  C00F  F007         	movff	TFT_DrawPixel@y,TFT_WriteRegister@data
  8137  0022A6  C010  F008         	movff	TFT_DrawPixel@y+1,TFT_WriteRegister@data+1
  8138  0022AA  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8139                           
  8140                           ;TFT.c: 97: TFT_WriteRegister(0x0202, color);
  8141  0022AE  0E02               	movlw	2
  8142  0022B0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8143  0022B2  0E02               	movlw	2
  8144  0022B4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8145  0022B6  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  8146  0022BA  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  8147  0022BE  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8148  0022C2  0012               	return		;funcret
  8149  0022C4                     __end_of_TFT_DrawPixel:
  8150                           	opt callstack 0
  8151                           
  8152 ;; *************** function _TFT_DrawFillRect *****************
  8153 ;; Defined at:
  8154 ;;		line 138 in file "TFT.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;  x               2   27[COMRAM] unsigned int 
  8157 ;;  y               2   29[COMRAM] unsigned int 
  8158 ;;  w               2   31[COMRAM] unsigned int 
  8159 ;;  h               2   33[COMRAM] unsigned int 
  8160 ;;  color           2   35[COMRAM] unsigned int 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8172 ;;      Params:        10       0       0       0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8174 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8175 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8176 ;;Total ram usage:       14 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    5
  8179 ;; This function calls:
  8180 ;;		_TFT_Flood
  8181 ;;		_TFT_FullScreen
  8182 ;;		_TFT_SetAddrWindow
  8183 ;;		___wmul
  8184 ;; This function is called by:
  8185 ;;		_printLine
  8186 ;;		_TFT_DrawChar
  8187 ;;		_Ecg_ProcessHeartbeat
  8188 ;;		_Ecg_Draw
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text34
  8193  001D26                     __ptext34:
  8194                           	opt callstack 0
  8195  001D26                     _TFT_DrawFillRect:
  8196                           	opt callstack 21
  8197  001D26                     
  8198                           ;TFT.c: 139: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h -1));
  8199  001D26  C01C  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  8200  001D2A  C01D  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  8201  001D2E  C01E  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  8202  001D32  C01F  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  8203  001D36  5020               	movf	TFT_DrawFillRect@w^0,w,c
  8204  001D38  241C               	addwf	TFT_DrawFillRect@x^0,w,c
  8205  001D3A  6E26               	movwf	??_TFT_DrawFillRect^0,c
  8206  001D3C  5021               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  8207  001D3E  201D               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  8208  001D40  6E27               	movwf	(??_TFT_DrawFillRect+1)^0,c
  8209  001D42  0EFF               	movlw	255
  8210  001D44  2426               	addwf	??_TFT_DrawFillRect^0,w,c
  8211  001D46  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  8212  001D48  0EFF               	movlw	255
  8213  001D4A  2027               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  8214  001D4C  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  8215  001D4E  5022               	movf	TFT_DrawFillRect@h^0,w,c
  8216  001D50  241E               	addwf	TFT_DrawFillRect@y^0,w,c
  8217  001D52  6E28               	movwf	(??_TFT_DrawFillRect+2)^0,c
  8218  001D54  5023               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  8219  001D56  201F               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  8220  001D58  6E29               	movwf	(??_TFT_DrawFillRect+3)^0,c
  8221  001D5A  0EFF               	movlw	255
  8222  001D5C  2428               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  8223  001D5E  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  8224  001D60  0EFF               	movlw	255
  8225  001D62  2029               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  8226  001D64  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  8227  001D66  ECDD  F00D         	call	_TFT_SetAddrWindow	;wreg free
  8228  001D6A                     
  8229                           ;TFT.c: 140: TFT_Flood(color, (w * h));
  8230  001D6A  C024  F00D         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  8231  001D6E  C025  F00E         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  8232  001D72  C020  F005         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  8233  001D76  C021  F006         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  8234  001D7A  C022  F007         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  8235  001D7E  C023  F008         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  8236  001D82  EC19  F012         	call	___wmul	;wreg free
  8237  001D86  C005  F00F         	movff	?___wmul,TFT_Flood@len
  8238  001D8A  C006  F010         	movff	?___wmul+1,TFT_Flood@len+1
  8239  001D8E  6A11               	clrf	(TFT_Flood@len+2)^0,c
  8240  001D90  6A12               	clrf	(TFT_Flood@len+3)^0,c
  8241  001D92  EC37  F006         	call	_TFT_Flood	;wreg free
  8242  001D96                     
  8243                           ;TFT.c: 141: TFT_FullScreen();
  8244  001D96  EC2C  F012         	call	_TFT_FullScreen	;wreg free
  8245  001D9A  0012               	return		;funcret
  8246  001D9C                     __end_of_TFT_DrawFillRect:
  8247                           	opt callstack 0
  8248                           
  8249 ;; *************** function ___wmul *****************
  8250 ;; Defined at:
  8251 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  multiplier      2    4[COMRAM] unsigned int 
  8254 ;;  multiplicand    2    6[COMRAM] unsigned int 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;  product         2    8[COMRAM] unsigned int 
  8257 ;; Return value:  Size  Location     Type
  8258 ;;                  2    4[COMRAM] unsigned int 
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0, prodl, prodh
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8266 ;;      Params:         4       0       0       0       0       0       0       0       0
  8267 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8269 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8270 ;;Total ram usage:        6 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    2
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_TFT_DrawFillRect
  8277 ;;		_TFT_DrawChar
  8278 ;;		_sprintf
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           	psect	text35
  8283  002432                     __ptext35:
  8284                           	opt callstack 0
  8285  002432                     ___wmul:
  8286                           	opt callstack 26
  8287  002432  5005               	movf	___wmul@multiplier^0,w,c
  8288  002434  0207               	mulwf	___wmul@multiplicand^0,c
  8289  002436  CFF3 F009          	movff	prodl,___wmul@product
  8290  00243A  CFF4 F00A          	movff	prodh,___wmul@product+1
  8291  00243E  5005               	movf	___wmul@multiplier^0,w,c
  8292  002440  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  8293  002442  50F3               	movf	243,w,c
  8294  002444  260A               	addwf	(___wmul@product+1)^0,f,c
  8295  002446  5006               	movf	(___wmul@multiplier+1)^0,w,c
  8296  002448  0207               	mulwf	___wmul@multiplicand^0,c
  8297  00244A  50F3               	movf	243,w,c
  8298  00244C  260A               	addwf	(___wmul@product+1)^0,f,c
  8299  00244E  C009  F005         	movff	___wmul@product,?___wmul
  8300  002452  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  8301  002456  0012               	return		;funcret
  8302  002458                     __end_of___wmul:
  8303                           	opt callstack 0
  8304                           
  8305 ;; *************** function _TFT_FullScreen *****************
  8306 ;; Defined at:
  8307 ;;		line 68 in file "TFT.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;		None
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;		None
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  1    wreg      void 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, cstack
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8321 ;;      Params:         0       0       0       0       0       0       0       0       0
  8322 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8323 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8324 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8325 ;;Total ram usage:        0 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    4
  8328 ;; This function calls:
  8329 ;;		_TFT_SetAddrWindow
  8330 ;; This function is called by:
  8331 ;;		_TFT_Init
  8332 ;;		_TFT_DrawFillRect
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text36
  8337  002458                     __ptext36:
  8338                           	opt callstack 0
  8339  002458                     _TFT_FullScreen:
  8340                           	opt callstack 21
  8341  002458                     
  8342                           ;TFT.c: 69: TFT_SetAddrWindow(0, 0, 240 - 1, 400 - 1);
  8343  002458  0E00               	movlw	0
  8344  00245A  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  8345  00245C  0E00               	movlw	0
  8346  00245E  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  8347  002460  0E00               	movlw	0
  8348  002462  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  8349  002464  0E00               	movlw	0
  8350  002466  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  8351  002468  0E00               	movlw	0
  8352  00246A  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  8353  00246C  0EEF               	movlw	239
  8354  00246E  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  8355  002470  0E01               	movlw	1
  8356  002472  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  8357  002474  0E8F               	movlw	143
  8358  002476  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  8359  002478  ECDD  F00D         	call	_TFT_SetAddrWindow	;wreg free
  8360  00247C  0012               	return		;funcret
  8361  00247E                     __end_of_TFT_FullScreen:
  8362                           	opt callstack 0
  8363                           
  8364 ;; *************** function _TFT_SetAddrWindow *****************
  8365 ;; Defined at:
  8366 ;;		line 56 in file "TFT.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  x1              2   12[COMRAM] unsigned int 
  8369 ;;  y1              2   14[COMRAM] unsigned int 
  8370 ;;  x2              2   16[COMRAM] unsigned int 
  8371 ;;  y2              2   18[COMRAM] unsigned int 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8383 ;;      Params:         8       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:        8 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    3
  8390 ;; This function calls:
  8391 ;;		_TFT_WriteRegister
  8392 ;; This function is called by:
  8393 ;;		_TFT_FullScreen
  8394 ;;		_TFT_DrawFillRect
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text37
  8399  001BBA                     __ptext37:
  8400                           	opt callstack 0
  8401  001BBA                     _TFT_SetAddrWindow:
  8402                           	opt callstack 22
  8403  001BBA                     
  8404                           ;TFT.c: 58: TFT_WriteRegister(0x0210, x1);
  8405  001BBA  0E02               	movlw	2
  8406  001BBC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8407  001BBE  0E10               	movlw	16
  8408  001BC0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8409  001BC2  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  8410  001BC6  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  8411  001BCA  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8412                           
  8413                           ;TFT.c: 59: TFT_WriteRegister(0x0211, x2);
  8414  001BCE  0E02               	movlw	2
  8415  001BD0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8416  001BD2  0E11               	movlw	17
  8417  001BD4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8418  001BD6  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  8419  001BDA  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  8420  001BDE  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8421                           
  8422                           ;TFT.c: 60: TFT_WriteRegister(0x0212, y1);
  8423  001BE2  0E02               	movlw	2
  8424  001BE4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8425  001BE6  0E12               	movlw	18
  8426  001BE8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8427  001BEA  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  8428  001BEE  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  8429  001BF2  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8430                           
  8431                           ;TFT.c: 61: TFT_WriteRegister(0x0213, y2);
  8432  001BF6  0E02               	movlw	2
  8433  001BF8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8434  001BFA  0E13               	movlw	19
  8435  001BFC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8436  001BFE  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  8437  001C02  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  8438  001C06  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8439                           
  8440                           ;TFT.c: 64: TFT_WriteRegister(0x0200, x1);
  8441  001C0A  0E02               	movlw	2
  8442  001C0C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8443  001C0E  0E00               	movlw	0
  8444  001C10  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8445  001C12  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  8446  001C16  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  8447  001C1A  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8448                           
  8449                           ;TFT.c: 65: TFT_WriteRegister(0x0201, y2);
  8450  001C1E  0E02               	movlw	2
  8451  001C20  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8452  001C22  0E01               	movlw	1
  8453  001C24  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8454  001C26  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  8455  001C2A  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  8456  001C2E  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8457  001C32  0012               	return		;funcret
  8458  001C34                     __end_of_TFT_SetAddrWindow:
  8459                           	opt callstack 0
  8460                           
  8461 ;; *************** function _TFT_Flood *****************
  8462 ;; Defined at:
  8463 ;;		line 144 in file "TFT.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  color           2   12[COMRAM] unsigned int 
  8466 ;;  len             4   14[COMRAM] unsigned long 
  8467 ;; Auto vars:     Size  Location     Type
  8468 ;;  blocks          2   22[COMRAM] unsigned int 
  8469 ;;  color_lo        1   26[COMRAM] unsigned char 
  8470 ;;  color_hi        1   25[COMRAM] unsigned char 
  8471 ;;  i               1   24[COMRAM] unsigned char 
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, status,0, cstack
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8481 ;;      Params:         6       0       0       0       0       0       0       0       0
  8482 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8483 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8484 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8485 ;;Total ram usage:       15 bytes
  8486 ;; Hardware stack levels used:    1
  8487 ;; Hardware stack levels required when called:    3
  8488 ;; This function calls:
  8489 ;;		_TFT_WriteRegister
  8490 ;; This function is called by:
  8491 ;;		_TFT_DrawFillRect
  8492 ;;		_TFT_FillScreen
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           	psect	text38
  8497  000C6E                     __ptext38:
  8498                           	opt callstack 0
  8499  000C6E                     _TFT_Flood:
  8500                           	opt callstack 22
  8501  000C6E                     
  8502                           ;TFT.c: 145: uint16_t blocks;;TFT.c: 146: uint8_t i;;TFT.c: 147: uint8_t color_hi = colo
      +                          r >> 8;
  8503  000C6E  500E               	movf	(TFT_Flood@color+1)^0,w,c
  8504  000C70  6E1A               	movwf	TFT_Flood@color_hi^0,c
  8505  000C72                     
  8506                           ;TFT.c: 148: uint8_t color_lo = color;
  8507  000C72  C00D  F01B         	movff	TFT_Flood@color,TFT_Flood@color_lo
  8508  000C76                     
  8509                           ;TFT.c: 151: TFT_WriteRegister(0x0202, color);
  8510  000C76  0E02               	movlw	2
  8511  000C78  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8512  000C7A  0E02               	movlw	2
  8513  000C7C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8514  000C7E  C00D  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  8515  000C82  C00E  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  8516  000C86  ECE0  F010         	call	_TFT_WriteRegister	;wreg free
  8517  000C8A                     
  8518                           ;TFT.c: 152: len--;
  8519  000C8A  060F               	decf	TFT_Flood@len^0,f,c
  8520  000C8C  0E00               	movlw	0
  8521  000C8E  5A10               	subwfb	(TFT_Flood@len+1)^0,f,c
  8522  000C90  5A11               	subwfb	(TFT_Flood@len+2)^0,f,c
  8523  000C92  5A12               	subwfb	(TFT_Flood@len+3)^0,f,c
  8524  000C94                     
  8525                           ;TFT.c: 156: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  8526  000C94  9082               	bcf	130,0,c	;volatile
  8527  000C96  F000               	nop		;# 
  8528  000C98                     
  8529                           ;TFT.c: 157: blocks = (uint16_t)(len / 4);
  8530  000C98  C00F  F013         	movff	TFT_Flood@len,??_TFT_Flood
  8531  000C9C  C010  F014         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  8532  000CA0  C011  F015         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  8533  000CA4  C012  F016         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  8534  000CA8  0E03               	movlw	3
  8535  000CAA  EF5C  F006         	goto	u1680
  8536  000CAE                     u1685:
  8537  000CAE  90D8               	bcf	status,0,c
  8538  000CB0  3216               	rrcf	(??_TFT_Flood+3)^0,f,c
  8539  000CB2  3215               	rrcf	(??_TFT_Flood+2)^0,f,c
  8540  000CB4  3214               	rrcf	(??_TFT_Flood+1)^0,f,c
  8541  000CB6  3213               	rrcf	??_TFT_Flood^0,f,c
  8542  000CB8                     u1680:
  8543  000CB8  2EE8               	decfsz	wreg,f,c
  8544  000CBA  EF57  F006         	goto	u1685
  8545  000CBE  C013  F017         	movff	??_TFT_Flood,TFT_Flood@blocks
  8546  000CC2  C014  F018         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  8547  000CC6                     
  8548                           ;TFT.c: 158: if(color_hi == color_lo) {
  8549  000CC6  501B               	movf	TFT_Flood@color_lo^0,w,c
  8550  000CC8  181A               	xorwf	TFT_Flood@color_hi^0,w,c
  8551  000CCA  A4D8               	btfss	status,2,c
  8552  000CCC  EF6A  F006         	goto	u1691
  8553  000CD0  EF6C  F006         	goto	u1690
  8554  000CD4                     u1691:
  8555  000CD4  EFD1  F006         	goto	l3110
  8556  000CD8                     u1690:
  8557  000CD8  EF86  F006         	goto	l3104
  8558  000CDC                     l240:
  8559                           
  8560                           ;TFT.c: 160: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8561  000CDC  9A80               	bcf	128,5,c	;volatile
  8562  000CDE  F000               	nop		;# 
  8563  000CE0  8A80               	bsf	128,5,c	;volatile
  8564  000CE2  9A80               	bcf	128,5,c	;volatile
  8565  000CE4  F000               	nop		;# 
  8566  000CE6  8A80               	bsf	128,5,c	;volatile
  8567                           
  8568                           ;TFT.c: 161: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8569  000CE8  9A80               	bcf	128,5,c	;volatile
  8570  000CEA  F000               	nop		;# 
  8571  000CEC  8A80               	bsf	128,5,c	;volatile
  8572  000CEE  9A80               	bcf	128,5,c	;volatile
  8573  000CF0  F000               	nop		;# 
  8574  000CF2  8A80               	bsf	128,5,c	;volatile
  8575                           
  8576                           ;TFT.c: 162: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8577  000CF4  9A80               	bcf	128,5,c	;volatile
  8578  000CF6  F000               	nop		;# 
  8579  000CF8  8A80               	bsf	128,5,c	;volatile
  8580  000CFA  9A80               	bcf	128,5,c	;volatile
  8581  000CFC  F000               	nop		;# 
  8582  000CFE  8A80               	bsf	128,5,c	;volatile
  8583                           
  8584                           ;TFT.c: 163: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8585  000D00  9A80               	bcf	128,5,c	;volatile
  8586  000D02  F000               	nop		;# 
  8587  000D04  8A80               	bsf	128,5,c	;volatile
  8588  000D06  9A80               	bcf	128,5,c	;volatile
  8589  000D08  F000               	nop		;# 
  8590  000D0A  8A80               	bsf	128,5,c	;volatile
  8591  000D0C                     l3104:
  8592  000D0C  0617               	decf	TFT_Flood@blocks^0,f,c
  8593  000D0E  A0D8               	btfss	status,0,c
  8594  000D10  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  8595  000D12  2817               	incf	TFT_Flood@blocks^0,w,c
  8596  000D14  E106               	bnz	u1701
  8597  000D16  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  8598  000D18  A4D8               	btfss	status,2,c
  8599  000D1A  EF91  F006         	goto	u1701
  8600  000D1E  EF93  F006         	goto	u1700
  8601  000D22                     u1701:
  8602  000D22  EF6E  F006         	goto	l240
  8603  000D26                     u1700:
  8604  000D26                     
  8605                           ;TFT.c: 164: };TFT.c: 165: for(i = (uint8_t)len & 3; i--; ) {
  8606  000D26  500F               	movf	TFT_Flood@len^0,w,c
  8607  000D28  0B03               	andlw	3
  8608  000D2A  6E19               	movwf	TFT_Flood@i^0,c
  8609  000D2C  EF9E  F006         	goto	l3108
  8610  000D30                     l243:
  8611                           
  8612                           ;TFT.c: 166: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8613  000D30  9A80               	bcf	128,5,c	;volatile
  8614  000D32  F000               	nop		;# 
  8615  000D34  8A80               	bsf	128,5,c	;volatile
  8616  000D36  9A80               	bcf	128,5,c	;volatile
  8617  000D38  F000               	nop		;# 
  8618  000D3A  8A80               	bsf	128,5,c	;volatile
  8619  000D3C                     l3108:
  8620  000D3C  0619               	decf	TFT_Flood@i^0,f,c
  8621  000D3E  2819               	incf	TFT_Flood@i^0,w,c
  8622  000D40  A4D8               	btfss	status,2,c
  8623  000D42  EFA5  F006         	goto	u1711
  8624  000D46  EFA7  F006         	goto	u1710
  8625  000D4A                     u1711:
  8626  000D4A  EF98  F006         	goto	l243
  8627  000D4E                     u1710:
  8628  000D4E  EFF6  F006         	goto	l245
  8629  000D52                     l247:
  8630                           
  8631                           ;TFT.c: 170: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8632  000D52  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8633  000D56  9A80               	bcf	128,5,c	;volatile
  8634  000D58  F000               	nop		;# 
  8635  000D5A  8A80               	bsf	128,5,c	;volatile
  8636  000D5C  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8637  000D60  9A80               	bcf	128,5,c	;volatile
  8638  000D62  F000               	nop		;# 
  8639  000D64  8A80               	bsf	128,5,c	;volatile
  8640                           
  8641                           ;TFT.c: 171: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8642  000D66  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8643  000D6A  9A80               	bcf	128,5,c	;volatile
  8644  000D6C  F000               	nop		;# 
  8645  000D6E  8A80               	bsf	128,5,c	;volatile
  8646  000D70  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8647  000D74  9A80               	bcf	128,5,c	;volatile
  8648  000D76  F000               	nop		;# 
  8649  000D78  8A80               	bsf	128,5,c	;volatile
  8650                           
  8651                           ;TFT.c: 172: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8652  000D7A  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8653  000D7E  9A80               	bcf	128,5,c	;volatile
  8654  000D80  F000               	nop		;# 
  8655  000D82  8A80               	bsf	128,5,c	;volatile
  8656  000D84  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8657  000D88  9A80               	bcf	128,5,c	;volatile
  8658  000D8A  F000               	nop		;# 
  8659  000D8C  8A80               	bsf	128,5,c	;volatile
  8660                           
  8661                           ;TFT.c: 173: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8662  000D8E  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8663  000D92  9A80               	bcf	128,5,c	;volatile
  8664  000D94  F000               	nop		;# 
  8665  000D96  8A80               	bsf	128,5,c	;volatile
  8666  000D98  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8667  000D9C  9A80               	bcf	128,5,c	;volatile
  8668  000D9E  F000               	nop		;# 
  8669  000DA0  8A80               	bsf	128,5,c	;volatile
  8670  000DA2                     l3110:
  8671  000DA2  0617               	decf	TFT_Flood@blocks^0,f,c
  8672  000DA4  A0D8               	btfss	status,0,c
  8673  000DA6  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  8674  000DA8  2817               	incf	TFT_Flood@blocks^0,w,c
  8675  000DAA  E106               	bnz	u1721
  8676  000DAC  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  8677  000DAE  A4D8               	btfss	status,2,c
  8678  000DB0  EFDC  F006         	goto	u1721
  8679  000DB4  EFDE  F006         	goto	u1720
  8680  000DB8                     u1721:
  8681  000DB8  EFA9  F006         	goto	l247
  8682  000DBC                     u1720:
  8683  000DBC                     
  8684                           ;TFT.c: 174: };TFT.c: 175: for(i = (uint8_t)len & 3; i--; ) {
  8685  000DBC  500F               	movf	TFT_Flood@len^0,w,c
  8686  000DBE  0B03               	andlw	3
  8687  000DC0  6E19               	movwf	TFT_Flood@i^0,c
  8688  000DC2  EFED  F006         	goto	l3114
  8689  000DC6                     l250:
  8690                           
  8691                           ;TFT.c: 176: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8692  000DC6  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8693  000DCA  9A80               	bcf	128,5,c	;volatile
  8694  000DCC  F000               	nop		;# 
  8695  000DCE  8A80               	bsf	128,5,c	;volatile
  8696  000DD0  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8697  000DD4  9A80               	bcf	128,5,c	;volatile
  8698  000DD6  F000               	nop		;# 
  8699  000DD8  8A80               	bsf	128,5,c	;volatile
  8700  000DDA                     l3114:
  8701  000DDA  0619               	decf	TFT_Flood@i^0,f,c
  8702  000DDC  2819               	incf	TFT_Flood@i^0,w,c
  8703  000DDE  A4D8               	btfss	status,2,c
  8704  000DE0  EFF4  F006         	goto	u1731
  8705  000DE4  EFF6  F006         	goto	u1730
  8706  000DE8                     u1731:
  8707  000DE8  EFE3  F006         	goto	l250
  8708  000DEC                     u1730:
  8709  000DEC                     l245:
  8710                           
  8711                           ;TFT.c: 177: };TFT.c: 178: };TFT.c: 179: PORTCbits.RC0 = 1;;
  8712  000DEC  8082               	bsf	130,0,c	;volatile
  8713  000DEE  0012               	return		;funcret
  8714  000DF0                     __end_of_TFT_Flood:
  8715                           	opt callstack 0
  8716                           
  8717 ;; *************** function _TFT_WriteRegister *****************
  8718 ;; Defined at:
  8719 ;;		line 12 in file "TFT.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;  reg             2    4[COMRAM] unsigned int 
  8722 ;;  data            2    6[COMRAM] unsigned int 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;  l               1   11[COMRAM] unsigned char 
  8725 ;;  h               1   10[COMRAM] unsigned char 
  8726 ;;  l               1    9[COMRAM] unsigned char 
  8727 ;;  h               1    8[COMRAM] unsigned char 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      void 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8737 ;;      Params:         4       0       0       0       0       0       0       0       0
  8738 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8740 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8741 ;;Total ram usage:        8 bytes
  8742 ;; Hardware stack levels used:    1
  8743 ;; Hardware stack levels required when called:    2
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_TFT_SetAddrWindow
  8748 ;;		_TFT_Init
  8749 ;;		_TFT_DrawPixel
  8750 ;;		_TFT_Flood
  8751 ;;		_TFT_FillScreen
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text39
  8756  0021C0                     __ptext39:
  8757                           	opt callstack 0
  8758  0021C0                     _TFT_WriteRegister:
  8759                           	opt callstack 23
  8760  0021C0                     
  8761                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  8762  0021C0  9082               	bcf	130,0,c	;volatile
  8763  0021C2  F000               	nop		;# 
  8764                           
  8765                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  8766  0021C4  9282               	bcf	130,1,c	;volatile
  8767  0021C6  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
  8768  0021C8  6E09               	movwf	TFT_WriteRegister@h^0,c
  8769  0021CA  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
  8770  0021CE  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
  8771  0021D2  9A80               	bcf	128,5,c	;volatile
  8772  0021D4  F000               	nop		;# 
  8773  0021D6  8A80               	bsf	128,5,c	;volatile
  8774  0021D8  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
  8775  0021DC  9A80               	bcf	128,5,c	;volatile
  8776  0021DE  F000               	nop		;# 
  8777  0021E0  8A80               	bsf	128,5,c	;volatile
  8778  0021E2                     
  8779                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  8780  0021E2  8282               	bsf	130,1,c	;volatile
  8781  0021E4  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
  8782  0021E6  6E0B               	movwf	TFT_WriteRegister@h_715^0,c
  8783  0021E8  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_716
  8784  0021EC  C00B  FF81         	movff	TFT_WriteRegister@h_715,3969	;volatile
  8785  0021F0  9A80               	bcf	128,5,c	;volatile
  8786  0021F2  F000               	nop		;# 
  8787  0021F4  8A80               	bsf	128,5,c	;volatile
  8788  0021F6  C00C  FF81         	movff	TFT_WriteRegister@l_716,3969	;volatile
  8789  0021FA  9A80               	bcf	128,5,c	;volatile
  8790  0021FC  F000               	nop		;# 
  8791  0021FE  8A80               	bsf	128,5,c	;volatile
  8792  002200                     
  8793                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
  8794  002200  8082               	bsf	130,0,c	;volatile
  8795  002202  0012               	return		;funcret
  8796  002204                     __end_of_TFT_WriteRegister:
  8797                           	opt callstack 0
  8798                           
  8799 ;; *************** function _EUSART_SetSpeed *****************
  8800 ;; Defined at:
  8801 ;;		line 44 in file "eusart.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  speed           4   17[COMRAM] const unsigned long 
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  tmp             4   25[COMRAM] unsigned long 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2, status,0, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8815 ;;      Params:         4       0       0       0       0       0       0       0       0
  8816 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8817 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8818 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8819 ;;Total ram usage:       12 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    3
  8822 ;; This function calls:
  8823 ;;		___lldiv
  8824 ;; This function is called by:
  8825 ;;		_A6_SpeedSet
  8826 ;;		_A6_SpeedAutoDetect
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text40
  8831  001AB4                     __ptext40:
  8832                           	opt callstack 0
  8833  001AB4                     _EUSART_SetSpeed:
  8834                           	opt callstack 25
  8835  001AB4                     
  8836                           ;eusart.c: 45: TXSTAbits.SYNC = 0;
  8837  001AB4  98AC               	bcf	172,4,c	;volatile
  8838                           
  8839                           ;eusart.c: 46: TXSTAbits.BRGH = 1;
  8840  001AB6  84AC               	bsf	172,2,c	;volatile
  8841                           
  8842                           ;eusart.c: 47: BAUDCONbits.BRG16 = 1;
  8843  001AB8  86B8               	bsf	184,3,c	;volatile
  8844  001ABA                     
  8845                           ;eusart.c: 49: uint32_t tmp = (48000000 / speed);
  8846  001ABA  0E00               	movlw	0
  8847  001ABC  6E05               	movwf	___lldiv@dividend^0,c
  8848  001ABE  0E6C               	movlw	108
  8849  001AC0  6E06               	movwf	(___lldiv@dividend+1)^0,c
  8850  001AC2  0EDC               	movlw	220
  8851  001AC4  6E07               	movwf	(___lldiv@dividend+2)^0,c
  8852  001AC6  0E02               	movlw	2
  8853  001AC8  6E08               	movwf	(___lldiv@dividend+3)^0,c
  8854  001ACA  C012  F009         	movff	EUSART_SetSpeed@speed,___lldiv@divisor
  8855  001ACE  C013  F00A         	movff	EUSART_SetSpeed@speed+1,___lldiv@divisor+1
  8856  001AD2  C014  F00B         	movff	EUSART_SetSpeed@speed+2,___lldiv@divisor+2
  8857  001AD6  C015  F00C         	movff	EUSART_SetSpeed@speed+3,___lldiv@divisor+3
  8858  001ADA  EC35  F00C         	call	___lldiv	;wreg free
  8859  001ADE  C005  F01A         	movff	?___lldiv,EUSART_SetSpeed@tmp
  8860  001AE2  C006  F01B         	movff	?___lldiv+1,EUSART_SetSpeed@tmp+1
  8861  001AE6  C007  F01C         	movff	?___lldiv+2,EUSART_SetSpeed@tmp+2
  8862  001AEA  C008  F01D         	movff	?___lldiv+3,EUSART_SetSpeed@tmp+3
  8863  001AEE                     
  8864                           ;eusart.c: 50: tmp = tmp / 4;
  8865  001AEE  C01A  F016         	movff	EUSART_SetSpeed@tmp,??_EUSART_SetSpeed
  8866  001AF2  C01B  F017         	movff	EUSART_SetSpeed@tmp+1,??_EUSART_SetSpeed+1
  8867  001AF6  C01C  F018         	movff	EUSART_SetSpeed@tmp+2,??_EUSART_SetSpeed+2
  8868  001AFA  C01D  F019         	movff	EUSART_SetSpeed@tmp+3,??_EUSART_SetSpeed+3
  8869  001AFE  0E03               	movlw	3
  8870  001B00  EF87  F00D         	goto	u2760
  8871  001B04                     u2765:
  8872  001B04  90D8               	bcf	status,0,c
  8873  001B06  3219               	rrcf	(??_EUSART_SetSpeed+3)^0,f,c
  8874  001B08  3218               	rrcf	(??_EUSART_SetSpeed+2)^0,f,c
  8875  001B0A  3217               	rrcf	(??_EUSART_SetSpeed+1)^0,f,c
  8876  001B0C  3216               	rrcf	??_EUSART_SetSpeed^0,f,c
  8877  001B0E                     u2760:
  8878  001B0E  2EE8               	decfsz	wreg,f,c
  8879  001B10  EF82  F00D         	goto	u2765
  8880  001B14  C016  F01A         	movff	??_EUSART_SetSpeed,EUSART_SetSpeed@tmp
  8881  001B18  C017  F01B         	movff	??_EUSART_SetSpeed+1,EUSART_SetSpeed@tmp+1
  8882  001B1C  C018  F01C         	movff	??_EUSART_SetSpeed+2,EUSART_SetSpeed@tmp+2
  8883  001B20  C019  F01D         	movff	??_EUSART_SetSpeed+3,EUSART_SetSpeed@tmp+3
  8884  001B24                     
  8885                           ;eusart.c: 51: tmp--;
  8886  001B24  061A               	decf	EUSART_SetSpeed@tmp^0,f,c
  8887  001B26  0E00               	movlw	0
  8888  001B28  5A1B               	subwfb	(EUSART_SetSpeed@tmp+1)^0,f,c
  8889  001B2A  5A1C               	subwfb	(EUSART_SetSpeed@tmp+2)^0,f,c
  8890  001B2C  5A1D               	subwfb	(EUSART_SetSpeed@tmp+3)^0,f,c
  8891  001B2E                     
  8892                           ;eusart.c: 53: SPBRG = (uint8_t) tmp;
  8893  001B2E  C01A  FFAF         	movff	EUSART_SetSpeed@tmp,4015	;volatile
  8894  001B32                     
  8895                           ;eusart.c: 54: SPBRGH = (uint8_t) (tmp >> 8);
  8896  001B32  C01B  FFB0         	movff	EUSART_SetSpeed@tmp+1,4016	;volatile
  8897  001B36  0012               	return		;funcret
  8898  001B38                     __end_of_EUSART_SetSpeed:
  8899                           	opt callstack 0
  8900                           
  8901 ;; *************** function ___lldiv *****************
  8902 ;; Defined at:
  8903 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  dividend        4    4[COMRAM] unsigned long 
  8906 ;;  divisor         4    8[COMRAM] unsigned long 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  quotient        4   12[COMRAM] unsigned long 
  8909 ;;  counter         1   16[COMRAM] unsigned char 
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  4    4[COMRAM] unsigned long 
  8912 ;; Registers used:
  8913 ;;		wreg, status,2, status,0
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8919 ;;      Params:         8       0       0       0       0       0       0       0       0
  8920 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8921 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8922 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8923 ;;Total ram usage:       13 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; Hardware stack levels required when called:    2
  8926 ;; This function calls:
  8927 ;;		Nothing
  8928 ;; This function is called by:
  8929 ;;		_EUSART_SetSpeed
  8930 ;;		_sprintf
  8931 ;;		_Ecg_ProcessHeartRate
  8932 ;; This function uses a non-reentrant model
  8933 ;;
  8934                           
  8935                           	psect	text41
  8936  00186A                     __ptext41:
  8937                           	opt callstack 0
  8938  00186A                     ___lldiv:
  8939                           	opt callstack 26
  8940  00186A  0E00               	movlw	0
  8941  00186C  6E0D               	movwf	___lldiv@quotient^0,c
  8942  00186E  0E00               	movlw	0
  8943  001870  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  8944  001872  0E00               	movlw	0
  8945  001874  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  8946  001876  0E00               	movlw	0
  8947  001878  6E10               	movwf	(___lldiv@quotient+3)^0,c
  8948  00187A  5009               	movf	___lldiv@divisor^0,w,c
  8949  00187C  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  8950  00187E  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  8951  001880  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  8952  001882  B4D8               	btfsc	status,2,c
  8953  001884  EF46  F00C         	goto	u2321
  8954  001888  EF48  F00C         	goto	u2320
  8955  00188C                     u2321:
  8956  00188C  EF7E  F00C         	goto	l659
  8957  001890                     u2320:
  8958  001890  0E01               	movlw	1
  8959  001892  6E11               	movwf	___lldiv@counter^0,c
  8960  001894  EF52  F00C         	goto	l3438
  8961  001898                     l3436:
  8962  001898  90D8               	bcf	status,0,c
  8963  00189A  3609               	rlcf	___lldiv@divisor^0,f,c
  8964  00189C  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  8965  00189E  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  8966  0018A0  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  8967  0018A2  2A11               	incf	___lldiv@counter^0,f,c
  8968  0018A4                     l3438:
  8969  0018A4  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  8970  0018A6  EF57  F00C         	goto	u2331
  8971  0018AA  EF59  F00C         	goto	u2330
  8972  0018AE                     u2331:
  8973  0018AE  EF4C  F00C         	goto	l3436
  8974  0018B2                     u2330:
  8975  0018B2                     l3440:
  8976  0018B2  90D8               	bcf	status,0,c
  8977  0018B4  360D               	rlcf	___lldiv@quotient^0,f,c
  8978  0018B6  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  8979  0018B8  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  8980  0018BA  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  8981  0018BC  5009               	movf	___lldiv@divisor^0,w,c
  8982  0018BE  5C05               	subwf	___lldiv@dividend^0,w,c
  8983  0018C0  500A               	movf	(___lldiv@divisor+1)^0,w,c
  8984  0018C2  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  8985  0018C4  500B               	movf	(___lldiv@divisor+2)^0,w,c
  8986  0018C6  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  8987  0018C8  500C               	movf	(___lldiv@divisor+3)^0,w,c
  8988  0018CA  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  8989  0018CC  A0D8               	btfss	status,0,c
  8990  0018CE  EF6B  F00C         	goto	u2341
  8991  0018D2  EF6D  F00C         	goto	u2340
  8992  0018D6                     u2341:
  8993  0018D6  EF76  F00C         	goto	l3448
  8994  0018DA                     u2340:
  8995  0018DA  5009               	movf	___lldiv@divisor^0,w,c
  8996  0018DC  5E05               	subwf	___lldiv@dividend^0,f,c
  8997  0018DE  500A               	movf	(___lldiv@divisor+1)^0,w,c
  8998  0018E0  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  8999  0018E2  500B               	movf	(___lldiv@divisor+2)^0,w,c
  9000  0018E4  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  9001  0018E6  500C               	movf	(___lldiv@divisor+3)^0,w,c
  9002  0018E8  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  9003  0018EA  800D               	bsf	___lldiv@quotient^0,0,c
  9004  0018EC                     l3448:
  9005  0018EC  90D8               	bcf	status,0,c
  9006  0018EE  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  9007  0018F0  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  9008  0018F2  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  9009  0018F4  3209               	rrcf	___lldiv@divisor^0,f,c
  9010  0018F6  2E11               	decfsz	___lldiv@counter^0,f,c
  9011  0018F8  EF59  F00C         	goto	l3440
  9012  0018FC                     l659:
  9013  0018FC  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  9014  001900  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  9015  001904  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  9016  001908  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  9017  00190C  0012               	return		;funcret
  9018  00190E                     __end_of___lldiv:
  9019                           	opt callstack 0
  9020                           
  9021 ;; *************** function _A6_IsAlive *****************
  9022 ;; Defined at:
  9023 ;;		line 17 in file "A6Lib.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;		None
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  response       32   34[COMRAM] unsigned char [32]
  9028 ;;  loop            1   66[COMRAM] unsigned char 
  9029 ;; Return value:  Size  Location     Type
  9030 ;;                  1    wreg      unsigned char 
  9031 ;; Registers used:
  9032 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9033 ;; Tracked objects:
  9034 ;;		On entry : 0/0
  9035 ;;		On exit  : 0/0
  9036 ;;		Unchanged: 0/0
  9037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9038 ;;      Params:         0       0       0       0       0       0       0       0       0
  9039 ;;      Locals:        33       0       0       0       0       0       0       0       0
  9040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9041 ;;      Totals:        33       0       0       0       0       0       0       0       0
  9042 ;;Total ram usage:       33 bytes
  9043 ;; Hardware stack levels used:    1
  9044 ;; Hardware stack levels required when called:    5
  9045 ;; This function calls:
  9046 ;;		_A6_Command
  9047 ;;		_strcmp
  9048 ;; This function is called by:
  9049 ;;		_loop
  9050 ;;		_A6_SpeedSet
  9051 ;;		_A6_SpeedAutoDetect
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text42
  9056  001C34                     __ptext42:
  9057                           	opt callstack 0
  9058  001C34                     _A6_IsAlive:
  9059                           	opt callstack 23
  9060  001C34                     
  9061                           ;A6Lib.c: 18: char response[32];;A6Lib.c: 20: uint8_t loop = 3;
  9062  001C34  0E03               	movlw	3
  9063  001C36  6E43               	movwf	A6_IsAlive@loop^0,c
  9064                           
  9065                           ;A6Lib.c: 21: while(loop--) {
  9066  001C38  EF4C  F00E         	goto	l3672
  9067  001C3C                     l3664:
  9068                           
  9069                           ;A6Lib.c: 22: A6_Command("AT\r", "aa", "bb", 0, response, 32);
  9070  001C3C  0EE9               	movlw	low STR_17
  9071  001C3E  6E13               	movwf	A6_Command@command^0,c
  9072  001C40  0E5F               	movlw	high STR_17
  9073  001C42  6E14               	movwf	(A6_Command@command+1)^0,c
  9074  001C44  0EF8               	movlw	low STR_10
  9075  001C46  6E15               	movwf	A6_Command@resp1^0,c
  9076  001C48  0E5F               	movlw	high STR_10
  9077  001C4A  6E16               	movwf	(A6_Command@resp1+1)^0,c
  9078  001C4C  0EFB               	movlw	low STR_11
  9079  001C4E  6E17               	movwf	A6_Command@resp2^0,c
  9080  001C50  0E5F               	movlw	high STR_11
  9081  001C52  6E18               	movwf	(A6_Command@resp2+1)^0,c
  9082  001C54  0E00               	movlw	0
  9083  001C56  6E1A               	movwf	(A6_Command@timeout+1)^0,c
  9084  001C58  0E00               	movlw	0
  9085  001C5A  6E19               	movwf	A6_Command@timeout^0,c
  9086  001C5C  0E23               	movlw	low A6_IsAlive@response
  9087  001C5E  6E1B               	movwf	A6_Command@response^0,c
  9088  001C60  0E00               	movlw	high A6_IsAlive@response
  9089  001C62  6E1C               	movwf	(A6_Command@response+1)^0,c
  9090  001C64  0E20               	movlw	32
  9091  001C66  6E1D               	movwf	A6_Command@responseLen^0,c
  9092  001C68  ECED  F008         	call	_A6_Command	;wreg free
  9093  001C6C                     
  9094                           ;A6Lib.c: 23: if(strcmp(response, "OK") == 0) {
  9095  001C6C  0E23               	movlw	low A6_IsAlive@response
  9096  001C6E  6E05               	movwf	strcmp@s1^0,c
  9097  001C70  0E00               	movlw	high A6_IsAlive@response
  9098  001C72  6E06               	movwf	(strcmp@s1+1)^0,c
  9099  001C74  0EF5               	movlw	low STR_20
  9100  001C76  6E07               	movwf	strcmp@s2^0,c
  9101  001C78  0E5F               	movlw	high STR_20
  9102  001C7A  6E08               	movwf	(strcmp@s2+1)^0,c
  9103  001C7C  EC3F  F010         	call	_strcmp	;wreg free
  9104  001C80  5005               	movf	?_strcmp^0,w,c
  9105  001C82  1006               	iorwf	(?_strcmp+1)^0,w,c
  9106  001C84  A4D8               	btfss	status,2,c
  9107  001C86  EF47  F00E         	goto	u2661
  9108  001C8A  EF49  F00E         	goto	u2660
  9109  001C8E                     u2661:
  9110  001C8E  EF4C  F00E         	goto	l3672
  9111  001C92                     u2660:
  9112  001C92                     
  9113                           ;A6Lib.c: 24: return 1;
  9114  001C92  0E01               	movlw	1
  9115  001C94  EF56  F00E         	goto	l535
  9116  001C98                     l3672:
  9117  001C98  0643               	decf	A6_IsAlive@loop^0,f,c
  9118  001C9A  2843               	incf	A6_IsAlive@loop^0,w,c
  9119  001C9C  A4D8               	btfss	status,2,c
  9120  001C9E  EF53  F00E         	goto	u2671
  9121  001CA2  EF55  F00E         	goto	u2670
  9122  001CA6                     u2671:
  9123  001CA6  EF1E  F00E         	goto	l3664
  9124  001CAA                     u2670:
  9125  001CAA                     
  9126                           ;A6Lib.c: 25: };A6Lib.c: 26: };A6Lib.c: 27: return 0;
  9127  001CAA  0E00               	movlw	0
  9128  001CAC                     l535:
  9129  001CAC  0012               	return		;funcret
  9130  001CAE                     __end_of_A6_IsAlive:
  9131                           	opt callstack 0
  9132                           
  9133 ;; *************** function _strcmp *****************
  9134 ;; Defined at:
  9135 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  s1              2    4[COMRAM] PTR const unsigned char 
  9138 ;;		 -> A6_SpeedSet@response(32), A6_IsAlive@response(32), 
  9139 ;;  s2              2    6[COMRAM] PTR const unsigned char 
  9140 ;;		 -> STR_29(3), STR_20(3), 
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;  r               1   10[COMRAM] char 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  2    4[COMRAM] int 
  9145 ;; Registers used:
  9146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9152 ;;      Params:         4       0       0       0       0       0       0       0       0
  9153 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9154 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9155 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9156 ;;Total ram usage:        7 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; Hardware stack levels required when called:    2
  9159 ;; This function calls:
  9160 ;;		Nothing
  9161 ;; This function is called by:
  9162 ;;		_A6_IsAlive
  9163 ;;		_A6_SpeedSet
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text43
  9168  00207E                     __ptext43:
  9169                           	opt callstack 0
  9170  00207E                     _strcmp:
  9171                           	opt callstack 26
  9172  00207E  EF45  F010         	goto	l3338
  9173  002082                     l3336:
  9174  002082  4A05               	infsnz	strcmp@s1^0,f,c
  9175  002084  2A06               	incf	(strcmp@s1+1)^0,f,c
  9176  002086  4A07               	infsnz	strcmp@s2^0,f,c
  9177  002088  2A08               	incf	(strcmp@s2+1)^0,f,c
  9178  00208A                     l3338:
  9179  00208A  C007  FFF6         	movff	strcmp@s2,tblptrl
  9180  00208E  C008  FFF7         	movff	strcmp@s2+1,tblptrh
  9181  002092                     	if	0	;tblptru may be non-zero
  9182  002092                     	endif
  9183  002092                     	if	0	;tblptru may be non-zero
  9184  002092                     	endif
  9185  002092  0008               	tblrd		*
  9186  002094  CFF5 F009          	movff	tablat,??_strcmp
  9187  002098  C005  FFD9         	movff	strcmp@s1,fsr2l
  9188  00209C  C006  FFDA         	movff	strcmp@s1+1,fsr2h
  9189  0020A0  50DF               	movf	indf2,w,c
  9190  0020A2  6E0A               	movwf	(??_strcmp+1)^0,c
  9191  0020A4  5009               	movf	??_strcmp^0,w,c
  9192  0020A6  5C0A               	subwf	(??_strcmp+1)^0,w,c
  9193  0020A8  6E0B               	movwf	strcmp@r^0,c
  9194  0020AA  500B               	movf	strcmp@r^0,w,c
  9195  0020AC  A4D8               	btfss	status,2,c
  9196  0020AE  EF5B  F010         	goto	u2161
  9197  0020B2  EF5D  F010         	goto	u2160
  9198  0020B6                     u2161:
  9199  0020B6  EF69  F010         	goto	l3342
  9200  0020BA                     u2160:
  9201  0020BA  C005  FFD9         	movff	strcmp@s1,fsr2l
  9202  0020BE  C006  FFDA         	movff	strcmp@s1+1,fsr2h
  9203  0020C2  50DF               	movf	indf2,w,c
  9204  0020C4  A4D8               	btfss	status,2,c
  9205  0020C6  EF67  F010         	goto	u2171
  9206  0020CA  EF69  F010         	goto	u2170
  9207  0020CE                     u2171:
  9208  0020CE  EF41  F010         	goto	l3336
  9209  0020D2                     u2170:
  9210  0020D2                     l3342:
  9211  0020D2  500B               	movf	strcmp@r^0,w,c
  9212  0020D4  6E05               	movwf	?_strcmp^0,c
  9213  0020D6  6A06               	clrf	(?_strcmp+1)^0,c
  9214  0020D8  BE05               	btfsc	?_strcmp^0,7,c
  9215  0020DA  0606               	decf	(?_strcmp+1)^0,f,c
  9216  0020DC  0012               	return		;funcret
  9217  0020DE                     __end_of_strcmp:
  9218                           	opt callstack 0
  9219                           
  9220 ;; *************** function _A6_Command *****************
  9221 ;; Defined at:
  9222 ;;		line 118 in file "A6Lib.c"
  9223 ;; Parameters:    Size  Location     Type
  9224 ;;  command         2   18[COMRAM] PTR const unsigned char 
  9225 ;;		 -> A6_SpeedSet@request(20), STR_21(9), STR_17(4), STR_9(10), 
  9226 ;;  resp1           2   20[COMRAM] PTR const unsigned char 
  9227 ;;		 -> STR_27(3), STR_22(3), STR_18(3), STR_10(3), 
  9228 ;;  resp2           2   22[COMRAM] PTR const unsigned char 
  9229 ;;		 -> STR_28(3), STR_23(3), STR_19(3), STR_11(3), 
  9230 ;;  timeout         2   24[COMRAM] unsigned int 
  9231 ;;  response        2   26[COMRAM] PTR unsigned char 
  9232 ;;		 -> A6_SpeedSet@response(32), A6_SpeedGet@response(32), A6_IsAlive@response(32), loop@response(32), 
  9233 ;;  responseLen     1   28[COMRAM] unsigned char 
  9234 ;; Auto vars:     Size  Location     Type
  9235 ;;  t               4   30[COMRAM] unsigned long 
  9236 ;; Return value:  Size  Location     Type
  9237 ;;                  1    wreg      void 
  9238 ;; Registers used:
  9239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9240 ;; Tracked objects:
  9241 ;;		On entry : 0/0
  9242 ;;		On exit  : 0/0
  9243 ;;		Unchanged: 0/0
  9244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9245 ;;      Params:        11       0       0       0       0       0       0       0       0
  9246 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9247 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9248 ;;      Totals:        16       0       0       0       0       0       0       0       0
  9249 ;;Total ram usage:       16 bytes
  9250 ;; Hardware stack levels used:    1
  9251 ;; Hardware stack levels required when called:    4
  9252 ;; This function calls:
  9253 ;;		_A6_ReadLine
  9254 ;;		_EUSART_TX_String
  9255 ;;		_memset
  9256 ;;		_strlen
  9257 ;; This function is called by:
  9258 ;;		_loop
  9259 ;;		_A6_IsAlive
  9260 ;;		_A6_SpeedGet
  9261 ;;		_A6_SpeedSet
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           	psect	text44
  9266  0011DA                     __ptext44:
  9267                           	opt callstack 0
  9268  0011DA                     _A6_Command:
  9269                           	opt callstack 23
  9270  0011DA                     
  9271                           ;A6Lib.c: 119: if(timeout == 0) timeout = 1000;
  9272  0011DA  5019               	movf	A6_Command@timeout^0,w,c
  9273  0011DC  101A               	iorwf	(A6_Command@timeout+1)^0,w,c
  9274  0011DE  A4D8               	btfss	status,2,c
  9275  0011E0  EFF4  F008         	goto	u2071
  9276  0011E4  EFF6  F008         	goto	u2070
  9277  0011E8                     u2071:
  9278  0011E8  EFFA  F008         	goto	l3294
  9279  0011EC                     u2070:
  9280  0011EC  0E03               	movlw	3
  9281  0011EE  6E1A               	movwf	(A6_Command@timeout+1)^0,c
  9282  0011F0  0EE8               	movlw	232
  9283  0011F2  6E19               	movwf	A6_Command@timeout^0,c
  9284  0011F4                     l3294:
  9285                           
  9286                           ;A6Lib.c: 120: memset(response, 0x00, responseLen);
  9287  0011F4  C01B  F005         	movff	A6_Command@response,memset@p1
  9288  0011F8  C01C  F006         	movff	A6_Command@response+1,memset@p1+1
  9289  0011FC  0E00               	movlw	0
  9290  0011FE  6E08               	movwf	(memset@c+1)^0,c
  9291  001200  0E00               	movlw	0
  9292  001202  6E07               	movwf	memset@c^0,c
  9293  001204  C01D  F009         	movff	A6_Command@responseLen,memset@n
  9294  001208  6A0A               	clrf	(memset@n+1)^0,c
  9295  00120A  EC9D  F011         	call	_memset	;wreg free
  9296  00120E                     
  9297                           ;A6Lib.c: 122: EUSART_RX.iRead = EUSART_RX.iWrite;
  9298  00120E  C112  F111         	movff	_EUSART_RX+2,_EUSART_RX+1
  9299  001212                     
  9300                           ;A6Lib.c: 123: EUSART_TX_String(command, strlen(command));
  9301  001212  C013  F009         	movff	A6_Command@command,EUSART_TX_String@str
  9302  001216  C014  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
  9303  00121A  C013  F005         	movff	A6_Command@command,strlen@s
  9304  00121E  C014  F006         	movff	A6_Command@command+1,strlen@s+1
  9305  001222  EC96  F010         	call	_strlen	;wreg free
  9306  001226  5005               	movf	?_strlen^0,w,c
  9307  001228  6E0B               	movwf	EUSART_TX_String@len^0,c
  9308  00122A  EC23  F011         	call	_EUSART_TX_String	;wreg free
  9309  00122E                     l3300:
  9310                           
  9311                           ;A6Lib.c: 127: uint32_t t = MILLISECONDS + timeout;
  9312  00122E  5019               	movf	A6_Command@timeout^0,w,c
  9313  001230  0101               	movlb	1	; () banked
  9314  001232  250C               	addwf	_MILLISECONDS& (0+255),w,b
  9315  001234  6E1F               	movwf	A6_Command@t^0,c
  9316  001236  501A               	movf	(A6_Command@timeout+1)^0,w,c
  9317  001238  210D               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  9318  00123A  6E20               	movwf	(A6_Command@t+1)^0,c
  9319  00123C  0E00               	movlw	0
  9320  00123E  210E               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  9321  001240  6E21               	movwf	(A6_Command@t+2)^0,c
  9322  001242  0E00               	movlw	0
  9323  001244  210F               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  9324  001246  6E22               	movwf	(A6_Command@t+3)^0,c
  9325                           
  9326                           ;A6Lib.c: 128: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
  9327  001248  EF37  F009         	goto	l3306
  9328  00124C                     l3302:
  9329                           
  9330                           ; BSR set to: 1
  9331                           ;A6Lib.c: 129: if(t < MILLISECONDS) return;
  9332  00124C  510C               	movf	_MILLISECONDS& (0+255),w,b
  9333  00124E  5C1F               	subwf	A6_Command@t^0,w,c
  9334  001250  510D               	movf	(_MILLISECONDS+1)& (0+255),w,b
  9335  001252  5820               	subwfb	(A6_Command@t+1)^0,w,c
  9336  001254  510E               	movf	(_MILLISECONDS+2)& (0+255),w,b
  9337  001256  5821               	subwfb	(A6_Command@t+2)^0,w,c
  9338  001258  510F               	movf	(_MILLISECONDS+3)& (0+255),w,b
  9339  00125A  5822               	subwfb	(A6_Command@t+3)^0,w,c
  9340  00125C  B0D8               	btfsc	status,0,c
  9341  00125E  EF33  F009         	goto	u2081
  9342  001262  EF35  F009         	goto	u2080
  9343  001266                     u2081:
  9344  001266  EF37  F009         	goto	l3306
  9345  00126A                     u2080:
  9346  00126A  EF5C  F009         	goto	l579
  9347  00126E                     l3306:
  9348                           
  9349                           ; BSR set to: 1
  9350  00126E  5112               	movf	(_EUSART_RX+2)& (0+255),w,b
  9351  001270  1911               	xorwf	(_EUSART_RX+1)& (0+255),w,b
  9352  001272  B4D8               	btfsc	status,2,c
  9353  001274  EF3E  F009         	goto	u2091
  9354  001278  EF40  F009         	goto	u2090
  9355  00127C                     u2091:
  9356  00127C  EF26  F009         	goto	l3302
  9357  001280                     u2090:
  9358  001280                     
  9359                           ; BSR set to: 1
  9360                           ;A6Lib.c: 130: };A6Lib.c: 131: EUSART_RX.iRead++;
  9361  001280  2B11               	incf	(_EUSART_RX+1)& (0+255),f,b
  9362  001282                     
  9363                           ; BSR set to: 1
  9364                           ;A6Lib.c: 132: } while(EUSART_RX.buffer[EUSART_RX.iRead] != '\n');
  9365  001282  0E14               	movlw	low (_EUSART_RX+4)
  9366  001284  2511               	addwf	(_EUSART_RX+1)& (0+255),w,b
  9367  001286  6ED9               	movwf	fsr2l,c
  9368  001288  6ADA               	clrf	fsr2h,c
  9369  00128A  0E01               	movlw	high (_EUSART_RX+4)
  9370  00128C  22DA               	addwfc	fsr2h,f,c
  9371  00128E  0E0A               	movlw	10
  9372  001290  18DE               	xorwf	postinc2,w,c
  9373  001292  A4D8               	btfss	status,2,c
  9374  001294  EF4E  F009         	goto	u2101
  9375  001298  EF50  F009         	goto	u2100
  9376  00129C                     u2101:
  9377  00129C  EF17  F009         	goto	l3300
  9378  0012A0                     u2100:
  9379  0012A0                     
  9380                           ; BSR set to: 1
  9381                           ;A6Lib.c: 135: A6_ReadLine(response, responseLen, timeout);
  9382  0012A0  C01B  F005         	movff	A6_Command@response,A6_ReadLine@response
  9383  0012A4  C01C  F006         	movff	A6_Command@response+1,A6_ReadLine@response+1
  9384  0012A8  C01D  F007         	movff	A6_Command@responseLen,A6_ReadLine@responseLen
  9385  0012AC  C019  F008         	movff	A6_Command@timeout,A6_ReadLine@timeout
  9386  0012B0  C01A  F009         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
  9387  0012B4  ECD6  F00B         	call	_A6_ReadLine	;wreg free
  9388  0012B8                     l579:
  9389  0012B8  0012               	return		;funcret
  9390  0012BA                     __end_of_A6_Command:
  9391                           	opt callstack 0
  9392                           
  9393 ;; *************** function _strlen *****************
  9394 ;; Defined at:
  9395 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;  s               2    4[COMRAM] PTR const unsigned char 
  9398 ;;		 -> A6_SpeedSet@request(20), STR_24(7), STR_21(9), STR_17(4), 
  9399 ;;		 -> STR_9(10), 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  cp              2    6[COMRAM] PTR const unsigned char 
  9402 ;;		 -> A6_SpeedSet@request(20), STR_24(7), STR_21(9), STR_17(4), 
  9403 ;;		 -> STR_9(10), 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  2    4[COMRAM] unsigned int 
  9406 ;; Registers used:
  9407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9413 ;;      Params:         2       0       0       0       0       0       0       0       0
  9414 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9416 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9417 ;;Total ram usage:        4 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    2
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_A6_Command
  9424 ;;		_strstr
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text45
  9429  00212C                     __ptext45:
  9430                           	opt callstack 0
  9431  00212C                     _strlen:
  9432                           	opt callstack 24
  9433  00212C  C005  F007         	movff	strlen@s,strlen@cp
  9434  002130  C006  F008         	movff	strlen@s+1,strlen@cp+1
  9435  002134  EF9E  F010         	goto	l3228
  9436  002138                     l3226:
  9437  002138  4A07               	infsnz	strlen@cp^0,f,c
  9438  00213A  2A08               	incf	(strlen@cp+1)^0,f,c
  9439  00213C                     l3228:
  9440  00213C  C007  FFF6         	movff	strlen@cp,tblptrl
  9441  002140  C008  FFF7         	movff	strlen@cp+1,tblptrh
  9442  002144  6AF8               	clrf	tblptru,c
  9443  002146  0E07               	movlw	(high __ramtop+-1)
  9444  002148  64F7               	cpfsgt	tblptrh,c
  9445  00214A  D003               	bra	u1927
  9446  00214C  0008               	tblrd		*
  9447  00214E  50F5               	movf	tablat,w,c
  9448  002150  D005               	bra	u1920
  9449  002152                     u1927:
  9450  002152  CFF6 FFE9          	movff	tblptrl,fsr0l
  9451  002156  CFF7 FFEA          	movff	tblptrh,fsr0h
  9452  00215A  50EF               	movf	indf0,w,c
  9453  00215C                     u1920:
  9454  00215C  0900               	iorlw	0
  9455  00215E  A4D8               	btfss	status,2,c
  9456  002160  EFB4  F010         	goto	u1931
  9457  002164  EFB6  F010         	goto	u1930
  9458  002168                     u1931:
  9459  002168  EF9C  F010         	goto	l3226
  9460  00216C                     u1930:
  9461  00216C  5005               	movf	strlen@s^0,w,c
  9462  00216E  5C07               	subwf	strlen@cp^0,w,c
  9463  002170  6E05               	movwf	?_strlen^0,c
  9464  002172  5006               	movf	(strlen@s+1)^0,w,c
  9465  002174  5808               	subwfb	(strlen@cp+1)^0,w,c
  9466  002176  6E06               	movwf	(?_strlen+1)^0,c
  9467  002178  0012               	return		;funcret
  9468  00217A                     __end_of_strlen:
  9469                           	opt callstack 0
  9470                           
  9471 ;; *************** function _memset *****************
  9472 ;; Defined at:
  9473 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  p1              2    4[COMRAM] PTR void 
  9476 ;;		 -> A6_SpeedSet@response(32), A6_SpeedGet@response(32), A6_IsAlive@response(32), EUSART_RX(100), 
  9477 ;;		 -> loop@response(32), 
  9478 ;;  c               2    6[COMRAM] int 
  9479 ;;  n               2    8[COMRAM] unsigned int 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  p               2   10[COMRAM] PTR unsigned char 
  9482 ;;		 -> A6_SpeedSet@response(32), A6_SpeedGet@response(32), A6_IsAlive@response(32), EUSART_RX(100), 
  9483 ;;		 -> loop@response(32), 
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  2    4[COMRAM] PTR void 
  9486 ;; Registers used:
  9487 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9493 ;;      Params:         6       0       0       0       0       0       0       0       0
  9494 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9496 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9497 ;;Total ram usage:        8 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    2
  9500 ;; This function calls:
  9501 ;;		Nothing
  9502 ;; This function is called by:
  9503 ;;		_EUSART_Init
  9504 ;;		_A6_Command
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text46
  9509  00233A                     __ptext46:
  9510                           	opt callstack 0
  9511  00233A                     _memset:
  9512                           	opt callstack 24
  9513  00233A  C005  F00B         	movff	memset@p1,memset@p
  9514  00233E  C006  F00C         	movff	memset@p1+1,memset@p+1
  9515  002342  EFAB  F011         	goto	l3190
  9516  002346                     l3186:
  9517  002346  C00B  FFD9         	movff	memset@p,fsr2l
  9518  00234A  C00C  FFDA         	movff	memset@p+1,fsr2h
  9519  00234E  C007  FFDF         	movff	memset@c,indf2
  9520  002352  4A0B               	infsnz	memset@p^0,f,c
  9521  002354  2A0C               	incf	(memset@p+1)^0,f,c
  9522  002356                     l3190:
  9523  002356  0609               	decf	memset@n^0,f,c
  9524  002358  A0D8               	btfss	status,0,c
  9525  00235A  060A               	decf	(memset@n+1)^0,f,c
  9526  00235C  2809               	incf	memset@n^0,w,c
  9527  00235E  E106               	bnz	u1851
  9528  002360  280A               	incf	(memset@n+1)^0,w,c
  9529  002362  A4D8               	btfss	status,2,c
  9530  002364  EFB6  F011         	goto	u1851
  9531  002368  EFB8  F011         	goto	u1850
  9532  00236C                     u1851:
  9533  00236C  EFA3  F011         	goto	l3186
  9534  002370                     u1850:
  9535  002370  0012               	return		;funcret
  9536  002372                     __end_of_memset:
  9537                           	opt callstack 0
  9538                           
  9539 ;; *************** function _EUSART_TX_String *****************
  9540 ;; Defined at:
  9541 ;;		line 65 in file "eusart.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  str             2    8[COMRAM] PTR const unsigned char 
  9544 ;;		 -> A6_SpeedSet@request(20), STR_21(9), STR_17(4), STR_9(10), 
  9545 ;;  len             1   10[COMRAM] unsigned char 
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9557 ;;      Params:         3       0       0       0       0       0       0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9560 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9561 ;;Total ram usage:        3 bytes
  9562 ;; Hardware stack levels used:    1
  9563 ;; Hardware stack levels required when called:    3
  9564 ;; This function calls:
  9565 ;;		_EUSART_TX_Char
  9566 ;; This function is called by:
  9567 ;;		_A6_Command
  9568 ;; This function uses a non-reentrant model
  9569 ;;
  9570                           
  9571                           	psect	text47
  9572  002246                     __ptext47:
  9573                           	opt callstack 0
  9574  002246                     _EUSART_TX_String:
  9575                           	opt callstack 23
  9576  002246                     
  9577                           ;eusart.c: 66: while(len--) {
  9578  002246  EF39  F011         	goto	l3198
  9579  00224A                     l3194:
  9580                           
  9581                           ;eusart.c: 67: EUSART_TX_Char(*str++);
  9582  00224A  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
  9583  00224E  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
  9584  002252  6AF8               	clrf	tblptru,c
  9585  002254  0E07               	movlw	(high __ramtop+-1)
  9586  002256  64F7               	cpfsgt	tblptrh,c
  9587  002258  D003               	bra	u1867
  9588  00225A  0008               	tblrd		*
  9589  00225C  50F5               	movf	tablat,w,c
  9590  00225E  D005               	bra	u1860
  9591  002260                     u1867:
  9592  002260  CFF6 FFE9          	movff	tblptrl,fsr0l
  9593  002264  CFF7 FFEA          	movff	tblptrh,fsr0h
  9594  002268  50EF               	movf	indf0,w,c
  9595  00226A                     u1860:
  9596  00226A  EC7B  F012         	call	_EUSART_TX_Char
  9597  00226E  4A09               	infsnz	EUSART_TX_String@str^0,f,c
  9598  002270  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
  9599  002272                     l3198:
  9600  002272  060B               	decf	EUSART_TX_String@len^0,f,c
  9601  002274  280B               	incf	EUSART_TX_String@len^0,w,c
  9602  002276  A4D8               	btfss	status,2,c
  9603  002278  EF40  F011         	goto	u1871
  9604  00227C  EF42  F011         	goto	u1870
  9605  002280                     u1871:
  9606  002280  EF25  F011         	goto	l3194
  9607  002284                     u1870:
  9608  002284  0012               	return		;funcret
  9609  002286                     __end_of_EUSART_TX_String:
  9610                           	opt callstack 0
  9611                           
  9612 ;; *************** function _EUSART_TX_Char *****************
  9613 ;; Defined at:
  9614 ;;		line 59 in file "eusart.c"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  c               1    wreg     unsigned char 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  c               1    4[COMRAM] unsigned char 
  9619 ;; Return value:  Size  Location     Type
  9620 ;;                  1    wreg      void 
  9621 ;; Registers used:
  9622 ;;		wreg
  9623 ;; Tracked objects:
  9624 ;;		On entry : 0/0
  9625 ;;		On exit  : 0/0
  9626 ;;		Unchanged: 0/0
  9627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9628 ;;      Params:         0       0       0       0       0       0       0       0       0
  9629 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9631 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9632 ;;Total ram usage:        1 bytes
  9633 ;; Hardware stack levels used:    1
  9634 ;; Hardware stack levels required when called:    2
  9635 ;; This function calls:
  9636 ;;		Nothing
  9637 ;; This function is called by:
  9638 ;;		_EUSART_TX_String
  9639 ;; This function uses a non-reentrant model
  9640 ;;
  9641                           
  9642                           	psect	text48
  9643  0024F6                     __ptext48:
  9644                           	opt callstack 0
  9645  0024F6                     _EUSART_TX_Char:
  9646                           	opt callstack 23
  9647                           
  9648                           ;incstack = 0
  9649                           ;EUSART_TX_Char@c stored from wreg
  9650  0024F6  6E05               	movwf	EUSART_TX_Char@c^0,c
  9651  0024F8                     l468:
  9652  0024F8  A89E               	btfss	3998,4,c	;volatile
  9653  0024FA  EF81  F012         	goto	u1741
  9654  0024FE  EF83  F012         	goto	u1740
  9655  002502                     u1741:
  9656  002502  EF7C  F012         	goto	l468
  9657  002506                     u1740:
  9658  002506                     
  9659                           ;eusart.c: 61: TXREG = c;
  9660  002506  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
  9661  00250A  F000               	nop		;# 
  9662  00250C  0012               	return		;funcret
  9663  00250E                     __end_of_EUSART_TX_Char:
  9664                           	opt callstack 0
  9665                           
  9666 ;; *************** function _A6_ReadLine *****************
  9667 ;; Defined at:
  9668 ;;		line 100 in file "A6Lib.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  response        2    4[COMRAM] PTR unsigned char 
  9671 ;;		 -> A6_SpeedSet@response(32), A6_SpeedGet@response(32), A6_IsAlive@response(32), loop@response(32), 
  9672 ;;  responseLen     1    6[COMRAM] unsigned char 
  9673 ;;  timeout         2    7[COMRAM] int 
  9674 ;; Auto vars:     Size  Location     Type
  9675 ;;  t               4   13[COMRAM] unsigned long 
  9676 ;;  iLine           1   17[COMRAM] unsigned char 
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1    wreg      void 
  9679 ;; Registers used:
  9680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9686 ;;      Params:         5       0       0       0       0       0       0       0       0
  9687 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9688 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9689 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9690 ;;Total ram usage:       14 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:    2
  9693 ;; This function calls:
  9694 ;;		Nothing
  9695 ;; This function is called by:
  9696 ;;		_A6_Command
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text49
  9701  0017AC                     __ptext49:
  9702                           	opt callstack 0
  9703  0017AC                     _A6_ReadLine:
  9704                           	opt callstack 24
  9705  0017AC                     
  9706                           ;A6Lib.c: 101: uint8_t iLine = 0;
  9707  0017AC  0E00               	movlw	0
  9708  0017AE  6E12               	movwf	A6_ReadLine@iLine^0,c
  9709  0017B0                     l3202:
  9710                           
  9711                           ;A6Lib.c: 104: uint32_t t = MILLISECONDS + timeout;
  9712  0017B0  C008  F00A         	movff	A6_ReadLine@timeout,??_A6_ReadLine
  9713  0017B4  C009  F00B         	movff	A6_ReadLine@timeout+1,??_A6_ReadLine+1
  9714  0017B8  0E00               	movlw	0
  9715  0017BA  BE0B               	btfsc	(??_A6_ReadLine+1)^0,7,c
  9716  0017BC  0EFF               	movlw	255
  9717  0017BE  6E0C               	movwf	(??_A6_ReadLine+2)^0,c
  9718  0017C0  6E0D               	movwf	(??_A6_ReadLine+3)^0,c
  9719  0017C2  0101               	movlb	1	; () banked
  9720  0017C4  510C               	movf	_MILLISECONDS& (0+255),w,b
  9721  0017C6  240A               	addwf	??_A6_ReadLine^0,w,c
  9722  0017C8  6E0E               	movwf	A6_ReadLine@t^0,c
  9723  0017CA  510D               	movf	(_MILLISECONDS+1)& (0+255),w,b
  9724  0017CC  200B               	addwfc	(??_A6_ReadLine+1)^0,w,c
  9725  0017CE  6E0F               	movwf	(A6_ReadLine@t+1)^0,c
  9726  0017D0  510E               	movf	(_MILLISECONDS+2)& (0+255),w,b
  9727  0017D2  200C               	addwfc	(??_A6_ReadLine+2)^0,w,c
  9728  0017D4  6E10               	movwf	(A6_ReadLine@t+2)^0,c
  9729  0017D6  510F               	movf	(_MILLISECONDS+3)& (0+255),w,b
  9730  0017D8  200D               	addwfc	(??_A6_ReadLine+3)^0,w,c
  9731  0017DA  6E11               	movwf	(A6_ReadLine@t+3)^0,c
  9732                           
  9733                           ;A6Lib.c: 105: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
  9734  0017DC  EF01  F00C         	goto	l3208
  9735  0017E0                     l3204:
  9736                           
  9737                           ; BSR set to: 1
  9738                           ;A6Lib.c: 106: if(t < MILLISECONDS) return;
  9739  0017E0  510C               	movf	_MILLISECONDS& (0+255),w,b
  9740  0017E2  5C0E               	subwf	A6_ReadLine@t^0,w,c
  9741  0017E4  510D               	movf	(_MILLISECONDS+1)& (0+255),w,b
  9742  0017E6  580F               	subwfb	(A6_ReadLine@t+1)^0,w,c
  9743  0017E8  510E               	movf	(_MILLISECONDS+2)& (0+255),w,b
  9744  0017EA  5810               	subwfb	(A6_ReadLine@t+2)^0,w,c
  9745  0017EC  510F               	movf	(_MILLISECONDS+3)& (0+255),w,b
  9746  0017EE  5811               	subwfb	(A6_ReadLine@t+3)^0,w,c
  9747  0017F0  B0D8               	btfsc	status,0,c
  9748  0017F2  EFFD  F00B         	goto	u1881
  9749  0017F6  EFFF  F00B         	goto	u1880
  9750  0017FA                     u1881:
  9751  0017FA  EF01  F00C         	goto	l3208
  9752  0017FE                     u1880:
  9753  0017FE  EF34  F00C         	goto	l566
  9754  001802                     l3208:
  9755                           
  9756                           ; BSR set to: 1
  9757  001802  5112               	movf	(_EUSART_RX+2)& (0+255),w,b
  9758  001804  1911               	xorwf	(_EUSART_RX+1)& (0+255),w,b
  9759  001806  B4D8               	btfsc	status,2,c
  9760  001808  EF08  F00C         	goto	u1891
  9761  00180C  EF0A  F00C         	goto	u1890
  9762  001810                     u1891:
  9763  001810  EFF0  F00B         	goto	l3204
  9764  001814                     u1890:
  9765  001814                     
  9766                           ; BSR set to: 1
  9767                           ;A6Lib.c: 107: };A6Lib.c: 108: EUSART_RX.iRead++;
  9768  001814  2B11               	incf	(_EUSART_RX+1)& (0+255),f,b
  9769  001816                     
  9770                           ; BSR set to: 1
  9771                           ;A6Lib.c: 109: if(EUSART_RX.buffer[EUSART_RX.iRead] == '\r') break;
  9772  001816  0E14               	movlw	low (_EUSART_RX+4)
  9773  001818  2511               	addwf	(_EUSART_RX+1)& (0+255),w,b
  9774  00181A  6ED9               	movwf	fsr2l,c
  9775  00181C  6ADA               	clrf	fsr2h,c
  9776  00181E  0E01               	movlw	high (_EUSART_RX+4)
  9777  001820  22DA               	addwfc	fsr2h,f,c
  9778  001822  0E0D               	movlw	13
  9779  001824  18DE               	xorwf	postinc2,w,c
  9780  001826  A4D8               	btfss	status,2,c
  9781  001828  EF18  F00C         	goto	u1901
  9782  00182C  EF1A  F00C         	goto	u1900
  9783  001830                     u1901:
  9784  001830  EF1C  F00C         	goto	l3216
  9785  001834                     u1900:
  9786  001834  EF34  F00C         	goto	l566
  9787  001838                     l3216:
  9788                           
  9789                           ; BSR set to: 1
  9790                           ;A6Lib.c: 110: response[iLine] = EUSART_RX.buffer[EUSART_RX.iRead];
  9791  001838  0E14               	movlw	low (_EUSART_RX+4)
  9792  00183A  2511               	addwf	(_EUSART_RX+1)& (0+255),w,b
  9793  00183C  6ED9               	movwf	fsr2l,c
  9794  00183E  6ADA               	clrf	fsr2h,c
  9795  001840  0E01               	movlw	high (_EUSART_RX+4)
  9796  001842  22DA               	addwfc	fsr2h,f,c
  9797  001844  5012               	movf	A6_ReadLine@iLine^0,w,c
  9798  001846  2405               	addwf	A6_ReadLine@response^0,w,c
  9799  001848  6EE1               	movwf	fsr1l,c
  9800  00184A  0E00               	movlw	0
  9801  00184C  2006               	addwfc	(A6_ReadLine@response+1)^0,w,c
  9802  00184E  6EE2               	movwf	fsr1h,c
  9803  001850  CFDF FFE7          	movff	indf2,indf1
  9804  001854                     
  9805                           ; BSR set to: 1
  9806                           ;A6Lib.c: 111: iLine++;
  9807  001854  2A12               	incf	A6_ReadLine@iLine^0,f,c
  9808  001856                     
  9809                           ; BSR set to: 1
  9810                           ;A6Lib.c: 112: if(iLine == responseLen) break;
  9811  001856  5007               	movf	A6_ReadLine@responseLen^0,w,c
  9812  001858  1812               	xorwf	A6_ReadLine@iLine^0,w,c
  9813  00185A  A4D8               	btfss	status,2,c
  9814  00185C  EF32  F00C         	goto	u1911
  9815  001860  EF34  F00C         	goto	u1910
  9816  001864                     u1911:
  9817  001864  EFD8  F00B         	goto	l3202
  9818  001868                     u1910:
  9819  001868                     l566:
  9820                           
  9821                           ; BSR set to: 1
  9822  001868  0012               	return		;funcret
  9823  00186A                     __end_of_A6_ReadLine:
  9824                           	opt callstack 0
  9825                           
  9826 ;; *************** function _isr *****************
  9827 ;; Defined at:
  9828 ;;		line 90 in file "init.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;		None
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9842 ;;      Params:         0       0       0       0       0       0       0       0       0
  9843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9844 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9845 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9846 ;;Total ram usage:        2 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    1
  9849 ;; This function calls:
  9850 ;;		_EUSART_RX_Interrupt
  9851 ;;		_Ecg_Interrupt
  9852 ;; This function is called by:
  9853 ;;		Interrupt level 2
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           	psect	intcode
  9858  000008                     __pintcode:
  9859                           	opt callstack 0
  9860  000008                     _isr:
  9861                           	opt callstack 20
  9862                           
  9863                           ; BSR set to: 1
  9864                           ;incstack = 0
  9865  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9866  00000A  ED07  F00F         	call	int_func,f	;refresh shadow registers
  9867                           
  9868                           	psect	intcode_body
  9869  001E0E                     __pintcode_body:
  9870                           	opt callstack 20
  9871  001E0E                     int_func:
  9872                           	opt callstack 20
  9873  001E0E  0006               	pop		; remove dummy address from shadow register refresh
  9874  001E10  CFD9 F003          	movff	fsr2l,??_isr
  9875  001E14  CFDA F004          	movff	fsr2h,??_isr+1
  9876  001E18                     
  9877                           ;init.c: 92: if(TMR3IE && TMR3IF) {
  9878  001E18  A2A0               	btfss	4000,1,c	;volatile
  9879  001E1A  EF11  F00F         	goto	i2u306_41
  9880  001E1E  EF13  F00F         	goto	i2u306_40
  9881  001E22                     i2u306_41:
  9882  001E22  EF28  F00F         	goto	i2l4082
  9883  001E26                     i2u306_40:
  9884  001E26  A2A1               	btfss	4001,1,c	;volatile
  9885  001E28  EF18  F00F         	goto	i2u307_41
  9886  001E2C  EF1A  F00F         	goto	i2u307_40
  9887  001E30                     i2u307_41:
  9888  001E30  EF28  F00F         	goto	i2l4082
  9889  001E34                     i2u307_40:
  9890  001E34                     
  9891                           ;init.c: 93: MILLISECONDS += 5;
  9892  001E34  0E05               	movlw	5
  9893  001E36  0101               	movlb	1	; () banked
  9894  001E38  270C               	addwf	_MILLISECONDS& (0+255),f,b
  9895  001E3A  0E00               	movlw	0
  9896  001E3C  230D               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
  9897  001E3E  230E               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
  9898  001E40  230F               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
  9899  001E42                     
  9900                           ; BSR set to: 1
  9901                           ;init.c: 94: Ecg_Interrupt();
  9902  001E42  EC4F  F012         	call	_Ecg_Interrupt	;wreg free
  9903  001E46                     
  9904                           ;init.c: 97: TMR3H = 0x16;
  9905  001E46  0E16               	movlw	22
  9906  001E48  6EB3               	movwf	179,c	;volatile
  9907  001E4A                     
  9908                           ;init.c: 98: TMR3L = 0x00;
  9909  001E4A  0E00               	movlw	0
  9910  001E4C  6EB2               	movwf	178,c	;volatile
  9911  001E4E                     
  9912                           ;init.c: 99: TMR3IF = 0;
  9913  001E4E  92A1               	bcf	4001,1,c	;volatile
  9914  001E50                     i2l4082:
  9915                           
  9916                           ;init.c: 100: };init.c: 103: if(RCIE && RCIF) {
  9917  001E50  AA9D               	btfss	3997,5,c	;volatile
  9918  001E52  EF2D  F00F         	goto	i2u308_41
  9919  001E56  EF2F  F00F         	goto	i2u308_40
  9920  001E5A                     i2u308_41:
  9921  001E5A  EF38  F00F         	goto	i2l164
  9922  001E5E                     i2u308_40:
  9923  001E5E  AA9E               	btfss	3998,5,c	;volatile
  9924  001E60  EF34  F00F         	goto	i2u309_41
  9925  001E64  EF36  F00F         	goto	i2u309_40
  9926  001E68                     i2u309_41:
  9927  001E68  EF38  F00F         	goto	i2l164
  9928  001E6C                     i2u309_40:
  9929  001E6C                     
  9930                           ;init.c: 104: EUSART_RX_Interrupt();
  9931  001E6C  EC02  F011         	call	_EUSART_RX_Interrupt	;wreg free
  9932  001E70                     i2l164:
  9933  001E70  C004  FFDA         	movff	??_isr+1,fsr2h
  9934  001E74  C003  FFD9         	movff	??_isr,fsr2l
  9935  001E78  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9936  001E7A  0011               	retfie		f
  9937  001E7C                     __end_of_isr:
  9938                           	opt callstack 0
  9939                           
  9940 ;; *************** function _Ecg_Interrupt *****************
  9941 ;; Defined at:
  9942 ;;		line 135 in file "ecg.c"
  9943 ;; Parameters:    Size  Location     Type
  9944 ;;		None
  9945 ;; Auto vars:     Size  Location     Type
  9946 ;;		None
  9947 ;; Return value:  Size  Location     Type
  9948 ;;                  1    wreg      void 
  9949 ;; Registers used:
  9950 ;;		wreg, status,2, status,0
  9951 ;; Tracked objects:
  9952 ;;		On entry : 0/0
  9953 ;;		On exit  : 0/0
  9954 ;;		Unchanged: 0/0
  9955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9956 ;;      Params:         0       0       0       0       0       0       0       0       0
  9957 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9958 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9959 ;;      Totals:         2       0       0       0       0       0       0       0       0
  9960 ;;Total ram usage:        2 bytes
  9961 ;; Hardware stack levels used:    1
  9962 ;; This function calls:
  9963 ;;		Nothing
  9964 ;; This function is called by:
  9965 ;;		_isr
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           	psect	text51
  9970  00249E                     __ptext51:
  9971                           	opt callstack 0
  9972  00249E                     _Ecg_Interrupt:
  9973                           	opt callstack 20
  9974  00249E                     
  9975                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
  9976  00249E  0E01               	movlw	1
  9977  0024A0  6E01               	movwf	??_Ecg_Interrupt^0,c
  9978  0024A2  5056               	movf	(_ECG_FLAGS+1)^0,w,c
  9979  0024A4  0B07               	andlw	7
  9980  0024A6  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
  9981  0024A8  5001               	movf	??_Ecg_Interrupt^0,w,c
  9982  0024AA  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
  9983  0024AC  5056               	movf	(_ECG_FLAGS+1)^0,w,c
  9984  0024AE  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
  9985  0024B0  0BF8               	andlw	-8
  9986  0024B2  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
  9987  0024B4  6E56               	movwf	(_ECG_FLAGS+1)^0,c
  9988  0024B6                     
  9989                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
  9990  0024B6  0100               	movlb	0	; () banked
  9991  0024B8  2BF2               	incf	(_ECG_HEARTRATE+3)& (0+255),f,b
  9992  0024BA                     
  9993                           ; BSR set to: 0
  9994                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
  9995  0024BA  8855               	bsf	_ECG_FLAGS^0,4,c
  9996  0024BC                     
  9997                           ; BSR set to: 0
  9998  0024BC  0012               	return		;funcret
  9999  0024BE                     __end_of_Ecg_Interrupt:
 10000                           	opt callstack 0
 10001                           
 10002 ;; *************** function _EUSART_RX_Interrupt *****************
 10003 ;; Defined at:
 10004 ;;		line 71 in file "eusart.c"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;		None
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;  c               1    0[COMRAM] unsigned char 
 10009 ;; Return value:  Size  Location     Type
 10010 ;;                  1    wreg      void 
 10011 ;; Registers used:
 10012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10018 ;;      Params:         0       0       0       0       0       0       0       0       0
 10019 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10020 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10021 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10022 ;;Total ram usage:        1 bytes
 10023 ;; Hardware stack levels used:    1
 10024 ;; This function calls:
 10025 ;;		Nothing
 10026 ;; This function is called by:
 10027 ;;		_isr
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text52
 10032  002204                     __ptext52:
 10033                           	opt callstack 0
 10034  002204                     _EUSART_RX_Interrupt:
 10035                           	opt callstack 20
 10036  002204                     
 10037                           ;eusart.c: 72: uint8_t c = RCREG;
 10038  002204  CFAE F001          	movff	4014,EUSART_RX_Interrupt@c	;volatile
 10039                           
 10040                           ;eusart.c: 73: if(OERR == 1) {
 10041  002208  A2AB               	btfss	4011,1,c	;volatile
 10042  00220A  EF09  F011         	goto	i2u298_41
 10043  00220E  EF0B  F011         	goto	i2u298_40
 10044  002212                     i2u298_41:
 10045  002212  EF0D  F011         	goto	i2l3988
 10046  002216                     i2u298_40:
 10047  002216                     
 10048                           ;eusart.c: 74: CREN = 0;
 10049  002216  98AB               	bcf	4011,4,c	;volatile
 10050                           
 10051                           ;eusart.c: 75: CREN = 1;
 10052  002218  88AB               	bsf	4011,4,c	;volatile
 10053  00221A                     i2l3988:
 10054                           
 10055                           ;eusart.c: 76: };eusart.c: 77: EUSART_RX.iWrite++;
 10056  00221A  0101               	movlb	1	; () banked
 10057  00221C  2B12               	incf	(_EUSART_RX+2)& (0+255),f,b
 10058  00221E                     
 10059                           ; BSR set to: 1
 10060                           ;eusart.c: 78: if(EUSART_RX.iWrite == 64) EUSART_RX.iWrite = 0;
 10061  00221E  0E40               	movlw	64
 10062  002220  1912               	xorwf	(_EUSART_RX+2)& (0+255),w,b
 10063  002222  A4D8               	btfss	status,2,c
 10064  002224  EF16  F011         	goto	i2u299_41
 10065  002228  EF18  F011         	goto	i2u299_40
 10066  00222C                     i2u299_41:
 10067  00222C  EF1A  F011         	goto	i2l3994
 10068  002230                     i2u299_40:
 10069  002230                     
 10070                           ; BSR set to: 1
 10071  002230  0E00               	movlw	0
 10072  002232  6F12               	movwf	(_EUSART_RX+2)& (0+255),b
 10073  002234                     i2l3994:
 10074                           
 10075                           ; BSR set to: 1
 10076                           ;eusart.c: 79: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
 10077  002234  0E14               	movlw	low (_EUSART_RX+4)
 10078  002236  2512               	addwf	(_EUSART_RX+2)& (0+255),w,b
 10079  002238  6ED9               	movwf	fsr2l,c
 10080  00223A  6ADA               	clrf	fsr2h,c
 10081  00223C  0E01               	movlw	high (_EUSART_RX+4)
 10082  00223E  22DA               	addwfc	fsr2h,f,c
 10083  002240  C001  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
 10084  002244                     
 10085                           ; BSR set to: 1
 10086  002244  0012               	return		;funcret
 10087  002246                     __end_of_EUSART_RX_Interrupt:
 10088                           	opt callstack 0
 10089                           
 10090                           	psect	rparam
 10091  0000                     
 10092                           	psect	temp
 10093  00005B                     btemp:
 10094                           	opt callstack 0
 10095  00005B                     	ds	1
 10096  0000                     int$flags	set	btemp
 10097  0000                     wtemp8	set	btemp+1
 10098  0000                     ttemp5	set	btemp+1
 10099  0000                     ttemp6	set	btemp+4
 10100  0000                     ttemp7	set	btemp+8
 10101                           tosu	equ	0xFFF
 10102                           tosh	equ	0xFFE
 10103                           tosl	equ	0xFFD
 10104                           stkptr	equ	0xFFC
 10105                           pclatu	equ	0xFFB
 10106                           pclath	equ	0xFFA
 10107                           pcl	equ	0xFF9
 10108                           tblptru	equ	0xFF8
 10109                           tblptrh	equ	0xFF7
 10110                           tblptrl	equ	0xFF6
 10111                           tablat	equ	0xFF5
 10112                           prodh	equ	0xFF4
 10113                           prodl	equ	0xFF3
 10114                           indf0	equ	0xFEF
 10115                           postinc0	equ	0xFEE
 10116                           postdec0	equ	0xFED
 10117                           preinc0	equ	0xFEC
 10118                           plusw0	equ	0xFEB
 10119                           fsr0h	equ	0xFEA
 10120                           fsr0l	equ	0xFE9
 10121                           wreg	equ	0xFE8
 10122                           indf1	equ	0xFE7
 10123                           postinc1	equ	0xFE6
 10124                           postdec1	equ	0xFE5
 10125                           preinc1	equ	0xFE4
 10126                           plusw1	equ	0xFE3
 10127                           fsr1h	equ	0xFE2
 10128                           fsr1l	equ	0xFE1
 10129                           bsr	equ	0xFE0
 10130                           indf2	equ	0xFDF
 10131                           postinc2	equ	0xFDE
 10132                           postdec2	equ	0xFDD
 10133                           preinc2	equ	0xFDC
 10134                           plusw2	equ	0xFDB
 10135                           fsr2h	equ	0xFDA
 10136                           fsr2l	equ	0xFD9
 10137                           status	equ	0xFD8


Data Sizes:
    Strings     289
    Constant    1598
    Data        66
    BSS         146
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      90
    BANK0           160     84     151
    BANK1           256    104     241
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    A6_Command@resp2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_28(CODE[3]), STR_23(CODE[3]), STR_19(CODE[3]), STR_11(CODE[3]), 

    A6_Command@resp1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), STR_22(CODE[3]), STR_18(CODE[3]), STR_10(CODE[3]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_25(CODE[2]), A6_SpeedGet@response(COMRAM[32]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_24(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_25(CODE[2]), NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_25(CODE[2]), A6_SpeedGet@response(COMRAM[32]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_25(CODE[2]), NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_25(CODE[2]), A6_SpeedGet@response(COMRAM[32]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_25(CODE[2]), NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_24(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_25(CODE[2]), NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_SpeedSet@request(BANK0[20]), STR_24(CODE[7]), STR_21(CODE[9]), STR_17(CODE[4]), 
		 -> STR_9(CODE[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_SpeedSet@request(BANK0[20]), STR_24(CODE[7]), STR_21(CODE[9]), STR_17(CODE[4]), 
		 -> STR_9(CODE[10]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), STR_20(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_SpeedSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 100
		 -> A6_SpeedSet@response(BANK0[32]), A6_SpeedGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), EUSART_RX(BANK1[100]), 
		 -> loop@response(BANK1[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> A6_SpeedSet@response(BANK0[32]), A6_SpeedGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), EUSART_RX(BANK1[100]), 
		 -> loop@response(BANK1[32]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_31(CODE[11]), STR_26(CODE[12]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> STR_3(CODE[23]), STR_2(CODE[28]), STR_1(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_SpeedAutoDetect@zzzz(BANK0[32]), A6_SpeedSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@zzzz_158(BANK1[32]), 
		 -> loop@zzzz(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_SpeedSet@request(BANK0[20]), STR_21(CODE[9]), STR_17(CODE[4]), STR_9(CODE[10]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_SpeedSet@response(BANK0[32]), A6_SpeedGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_ReadLine@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_SpeedSet@response(BANK0[32]), A6_SpeedGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    A6_SpeedGet@speedToken	PTR unsigned char  size(2) Largest target is 32
		 -> NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_25(CODE[2]), NULL(NULL[0]), A6_SpeedGet@response(COMRAM[32]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_SpeedSet@request(BANK0[20]), STR_21(CODE[9]), STR_17(CODE[4]), STR_9(CODE[10]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> A6_SpeedSet@response(BANK0[32]), A6_SpeedGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), EUSART_RX(BANK1[100]), 
		 -> loop@response(BANK1[32]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 100
		 -> A6_SpeedAutoDetect@zzzz(BANK0[32]), STR_30(CODE[19]), A6_SpeedSet@response(BANK0[32]), A6_SpeedSet@request(BANK0[20]), 
		 -> EUSART_RX.line(BANK1[32]), STR_16(CODE[28]), STR_15(CODE[11]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), 
		 -> EUSART_RX(BANK1[100]), loop@zzzz_158(BANK1[32]), STR_12(CODE[12]), loop@response(BANK1[32]), 
		 -> STR_8(CODE[11]), STR_7(CODE[13]), STR_6(CODE[11]), STR_5(CODE[23]), 
		 -> STR_4(CODE[21]), loop@zzzz(BANK1[32]), 

    printLine@str	PTR const unsigned char  size(2) Largest target is 100
		 -> A6_SpeedAutoDetect@zzzz(BANK0[32]), STR_30(CODE[19]), A6_SpeedSet@response(BANK0[32]), A6_SpeedSet@request(BANK0[20]), 
		 -> EUSART_RX.line(BANK1[32]), EUSART_RX(BANK1[100]), loop@zzzz_158(BANK1[32]), STR_12(CODE[12]), 
		 -> loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), STR_6(CODE[11]), 
		 -> STR_5(CODE[23]), STR_4(CODE[21]), loop@zzzz(BANK1[32]), 

    loop$151	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_7(CODE[13]), STR_6(CODE[11]), 

    loop$146	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_4(CODE[21]), loop@zzzz(BANK1[32]), 


Critical Paths under _main in COMRAM

    _loop->_sprintf
    _A6_SpeedSet->_sprintf
    _A6_SpeedGet->_A6_Command
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _atol->___lmul
    _TFT_Init->_TFT_FillScreen
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _TFT_DrawLine->_TFT_DrawPixel
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _TFT_FillScreen->_TFT_Flood
    _EUSART_Init->_memset
    _A6_SpeedAutoDetect->_sprintf
    _sprintf->_A6_SpeedGet
    ___llmod->___lldiv
    _printLine->_TFT_DrawString
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawFillRect
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_Flood
    _TFT_FullScreen->_TFT_SetAddrWindow
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister
    _EUSART_SetSpeed->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen

Critical Paths under _isr in COMRAM

    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_A6_SpeedSet
    _A6_SpeedSet->_sprintf
    _A6_Init->_A6_SpeedAutoDetect
    _A6_SpeedAutoDetect->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  268775
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               108   108      0  156866
                                             80 BANK0      4     4      0
                                              0 BANK1    104   104      0
                         _A6_Command
                         _A6_IsAlive
                 _A6_SpeedAutoDetect
                        _A6_SpeedGet
                        _A6_SpeedSet
                          _printLine
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _A6_SpeedSet                                         60    56      4   57283
                                             20 BANK0     60    56      4
                         _A6_Command
                         _A6_IsAlive
                        _A6_SpeedGet
                    _EUSART_SetSpeed
                          _printLine
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _A6_SpeedGet                                         44    40      4    8680
                                             34 COMRAM    44    40      4
                         _A6_Command
                               _atol
                            _sleepMS
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2078
                                             17 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strstr                                               4     0      4    1477
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              7     1      6     362
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     544
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4     834
                                             16 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            10    10      0   10568
                                             29 COMRAM    10    10      0
                     _TFT_FillScreen
                     _TFT_FullScreen
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0   56099
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (2) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Ok                              0     0      0   30938
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawLine                                        31    21     10    5824
                                             18 COMRAM    31    21     10
                      _TFT_DrawPixel
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     370
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Failure                         0     0      0   25114
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (2) _TFT_FillScreen                                       2     0      2    5356
                                             27 COMRAM     2     0      2
                          _TFT_Flood
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0     780
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              0     0      0   44462
                 _A6_SpeedAutoDetect
                            _sleepMS
 ---------------------------------------------------------------------------------
 (2) _A6_SpeedAutoDetect                                  33    33      0   44113
                                             20 BANK0     33    33      0
                         _A6_IsAlive
                    _EUSART_SetSpeed
                          _printLine
                            _sleepMS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    25      8    4633
                                             78 COMRAM     4     4      0
                                              0 BANK0     20    12      8
                        _A6_SpeedGet (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     349
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _printLine                                            4     0      4   33841
                                             73 COMRAM     4     0      4
                   _TFT_DrawFillRect
                     _TFT_DrawString
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawString                                      11     0     11   19758
                                             62 COMRAM    11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawChar                                        21    11     10   17756
                                             41 COMRAM    21    11     10
                   _TFT_DrawFillRect
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawPixel                                        6     0      6    3362
                                             12 COMRAM     6     0      6
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawFillRect                                    14     4     10   11911
                                             27 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1071
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _TFT_FullScreen                                       0     0      0    2896
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (6) _TFT_SetAddrWindow                                    8     0      8    2896
                                             12 COMRAM     8     0      8
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (6) _TFT_Flood                                           15     9      6    2950
                                             12 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TFT_WriteRegister                                    8     4      4    2156
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetSpeed                                     12     8      4     937
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _A6_IsAlive                                          33    33      0    4118
                                             34 COMRAM    33    33      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     395
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _A6_Command                                          16     5     11    3650
                                             18 COMRAM    16     5     11
                        _A6_ReadLine
                   _EUSART_TX_String
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6     780
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_String                                     3     0      3     219
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _EUSART_TX_Char                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _A6_ReadLine                                         14     9      5     363
                                              4 COMRAM    14     9      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (11) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_Interrupt                                 1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_SpeedAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _memset
           _strlen
         _strcmp
       _EUSART_SetSpeed
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_SpeedGet (ARG)
           _A6_Command
             _A6_ReadLine
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _memset
             _strlen
           _atol
             ___lmul
             _isdigit
           _sleepMS
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _sleepMS
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_WriteRegister
         ___awdiv
         _abs
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_FillScreen
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_WriteRegister
     _TFT_FullScreen
       _TFT_SetAddrWindow
         _TFT_WriteRegister
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _A6_Command
       _A6_ReadLine
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _memset
       _strlen
     _A6_IsAlive
       _A6_Command
         _A6_ReadLine
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _memset
         _strlen
       _strcmp
     _A6_SpeedAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _memset
           _strlen
         _strcmp
       _EUSART_SetSpeed
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_SpeedGet (ARG)
           _A6_Command
             _A6_ReadLine
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _memset
             _strlen
           _atol
             ___lmul
             _isdigit
           _sleepMS
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _A6_SpeedGet
       _A6_Command
         _A6_ReadLine
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _memset
         _strlen
       _atol
         ___lmul
         _isdigit
       _sleepMS
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_SpeedSet
       _A6_Command
         _A6_ReadLine
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _memset
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _memset
           _strlen
         _strcmp
       _A6_SpeedGet
         _A6_Command
           _A6_ReadLine
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _memset
           _strlen
         _atol
           ___lmul
           _isdigit
         _sleepMS
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _EUSART_SetSpeed
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_SpeedGet (ARG)
           _A6_Command
             _A6_ReadLine
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _memset
             _strlen
           _atol
             ___lmul
             _isdigit
           _sleepMS
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
       _strcmp
     _printLine
       _TFT_DrawFillRect
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_FullScreen
           _TFT_SetAddrWindow
             _TFT_WriteRegister
         _TFT_SetAddrWindow
           _TFT_WriteRegister
         ___wmul
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
     _sprintf
       _A6_SpeedGet (ARG)
         _A6_Command
           _A6_ReadLine
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _memset
           _strlen
         _atol
           ___lmul
           _isdigit
         _sleepMS
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     68      F1       7       94.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      97       5       94.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E2      20        0.0%
DATA                 0      0     1E2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 25 17:29:53 2019

                  __size_of_A6_IsAlive 007A                                     l93 2338  
                                   l87 049C                                     l96 207C  
                  __size_of_A6_Command 00E0                           ___awdiv@sign 000A  
                                   _x2 00BE                                     _x3 00D1  
                                   _x4 00C8                                     _x5 00B4  
                                   _x6 01E7                                     _x7 01DC  
                  ___wmul@multiplicand 0007                            __CFG_BORV$0 000000  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                                    l202 24DA  
                                  l205 1C32                                    l240 0CDC  
                                  l208 247C                                    l232 0C6C  
                                  l224 0BCE                                    l216 1474  
                                  l250 0DC6                                    l410 212A  
                                  l243 0D30                                    l235 1D9A  
                                  l219 22C2                                    l252 0DEE  
                                  l245 0DEC                                    l157 1E0C  
                                  l247 0D52                                    l263 08CE  
                                  l255 21BE                                    l272 0A84  
                                  l424 1D24                                    l187 2202  
                                  l427 22FE                                    l605 05C0  
                                  l278 199C                                    l462 1EE6  
                                  l471 250C                                    l535 1CAC  
                                  l359 2406                                    l551 109E  
                                  l632 2456                                    l608 0648  
                                  l465 1B36                                    l529 24F4  
                                  l546 0F50                                    l643 1F40  
                                  l468 24F8                                    l644 1F50  
                                  l477 2284                                    l629 0890  
                                  l566 1868                                    l559 1628  
                                  l666 190C                                    l579 12B8  
                                  l659 18FC        __end_of_Ecg_Background_Leads_Ok 1D26  
                                  l863 16EC                                    _GIE 007F97  
                         __CFG_CPB$OFF 000000                           printLine@str 004A  
                         __CFG_CPD$OFF 000000                           __CFG_BOR$OFF 000000  
                                  _abs 2372                                    _isr 0008  
                      __end_of_A6_Init 24F6                                    wreg 000FE8  
                 __size_of_A6_ReadLine 00BE                           TFT_Flood@len 000F  
                         ?_EUSART_Init 0001                           __CFG_LVP$OFF 000000  
                         TFT_Init@data 0020                           __CFG_WDT$OFF 000000  
                                 l1040 1AA2                                   ?_abs 0005  
                                 l1300 10A0                                   l1047 1AB2  
                                 l1320 2370                                   l1314 23D6  
                                 l3100 0CC6                                   l2300 1DF2  
                                 l1308 11C8                                   l1309 11D8  
                                 l1334 2178                                   l3110 0DA2  
                                 l2230 24C8                                   l2222 24BE  
                                 l2310 1E06                                   l2302 1DF6  
                                 l3200 17AC                                   l1328 20DC  
                                 l3112 0DBC                                   l3104 0D0C  
                                 l2232 24CA                                   l2224 24C2  
                                 l2312 1E08                                   l2304 1DFE  
                                 l1360 1396                                   l3210 1814  
                                 l3202 17B0                                   l3130 24F8  
                                 l3050 21C6                                   l3114 0DDA  
                                 l3106 0D26                                   l3122 1D26  
                                 l2234 24D8                                   l2226 24C4  
                                 l2314 1E0A                                   l2306 1E02  
                                 l1346 17AA                                   l1363 138E  
                                 l3220 1856                                   l3212 1816  
                                 l3204 17E0                                   l3132 2506  
                                 l3300 122E                                   l3060 21D8  
                                 l3052 21CA                                   l3108 0D3C  
                                 l3116 2432                                   l3124 1D6A  
                                 l2228 24C6                                   l2308 1E04  
                                 l3140 1B74                                   l3230 216C  
                                 l3310 1282                                   l3302 124C  
                                 l3070 21EC                                   l3062 21DC  
                                 l3054 21CE                                   l3118 244E  
                                 l3126 1D96                                   l1294 239C  
                                 l2270 1DA6                                   l3142 1BB0  
                                 l3134 1B38                                   l1366 1B38  
                                 l1358 12D4                                   l1295 23A4  
                                 l3216 1838                                   l3208 1802  
                                 l3224 212C                                   l3312 12A0  
                                 l3080 21FE                                   l3072 21F0  
                                 l3064 21E0                                   l3056 21D2  
                                 l3048 21C0                                   l3128 2286  
                                 l3160 08DC                                   l3152 0896  
                                 l3320 190E                                   l3240 23CC  
                                 l2280 1DCC                                   l2272 1DAC  
                                 l3400 10D4                                   l1368 1BB8  
                                 l3136 1B68                                   l3218 1854  
                                 l3226 2138                                   l3306 126E  
                                 l3082 2200                                   l3074 21F4  
                                 l3066 21E2                                   l3058 21D6  
                                 l3090 0C72                                   l3170 09B6  
                                 l3162 08EC                                   l3154 08CA  
                                 l3146 0892                                   l3322 1912  
                                 l3242 23D0                                   l3234 23A8  
                                 l3330 2372                                   l2290 1DDE  
                                 l2282 1DD0                                   l2274 1DC4  
                                 l2266 1D9C                                   l3250 1F06  
                                 l3410 1110                                   l3402 10E8  
                                 l1378 2014                                   l5010 01D2  
                                 l1387 154E                                   l1379 201C  
                                 l3228 213C                                   l3308 1280  
                                 l3340 20BA                                   l3076 21F6  
                                 l3068 21E8                                   l3092 0C76  
                                 l3084 1BBA                                   l3180 0A6E  
                                 l3172 09EC                                   l3164 0922  
                                 l3324 195C                                   l3316 2300  
                                 l3500 1A4A                                   l3236 23AC  
                                 l3332 2380                                   l2292 1DE2  
                                 l2284 1DD2                                   l2276 1DC6  
                                 l2268 1D9E                                   l3252 1F16  
                                 l3404 10FA                                   l3260 14AA  
                                 l5012 01E0                                   l5004 01BC  
                                 l1397 1FAE                                   l3190 2356  
                                 l3342 20D2                                   l3334 207E  
                                 l3430 186A                                   l3078 21FA  
                                 l3094 0C8A                                   l3086 2458  
                                 l3182 0A70                                   l3174 0A54  
                                 l3166 098E                                   l3326 1968  
                                 l3318 231A                                   l3510 1A9C  
                                 l3502 1A56                                   l3238 23BC  
                                 l2294 1DE4                                   l2286 1DD6  
                                 l2278 1DC8                                   l3254 1F20  
                                 l3246 1EE8                                   l3422 116E  
                                 l3406 10FC                                   l3270 1546  
                                 l3262 14E8                                   l3350 172C  
                                 l1398 1FB6                                   l5014 01FC  
                                 l5006 01EE                                   l3192 2246  
                                 l3184 233A                                   l3336 2082  
                                 l3440 18B2                                   l3432 187A  
                                 l3096 0C94                                   l3088 0C6E  
                                 l3176 0A56                                   l3168 09A6  
                                 l3328 196C                                   l3504 1A64  
                                 l2296 1DE8                                   l2288 1DDA  
                                 l3248 1EF8                                   l3424 1182  
                                 l3416 1126                                   l3408 1108  
                                 l3256 1476                                   l3360 17A2  
                                 l3280 1F7E                                   l3520 0E86  
                                 l3512 0DF0                                   l5008 020A  
                                 l3194 224A                                   l3186 2346  
                                 l3290 11DA                                   l3338 208A  
                                 l3450 18F6                                   l3442 18BC  
                                 l3434 1890                                   l3098 0C98  
                                 l3178 0A5A                                   l3506 1A82  
                                 l2298 1DF0                                   l3426 1192  
                                 l3266 1524                                   l3258 147A  
                                 l3354 1738                                   l3346 16EE  
                                 l3282 1FB8                                   l3274 1F52  
                                 l3530 0EB8                                   l3522 0E98  
                                 l3514 0DF8                                   l3196 226E  
                                 l3188 2352                                   l3292 11EC  
                                 l3444 18DA                                   l3436 1898  
                                 l3508 1A92                                   l4500 054C  
                                 l3460 1648                                   l3452 162A  
                                 l3700 0BD6                                   l3268 152C  
                                 l3348 16F2                                   l3356 1760  
                                 l3284 1FC4                                   l3276 1F5E  
                                 l3380 133A                                   l3372 12F2  
                                 l3364 12BA                                   l3532 0EF4  
                                 l3524 0EB4                                   l3516 0E28  
                                 l3540 0F2E                                   l3198 2272  
                                 l3294 11F4                                   l3446 18EA  
                                 l3438 18A4                                   l4502 0550  
                                 l4510 057E                                   l3470 167C  
                                 l3462 1656                                   l3454 162E  
                                 l3710 0C3A                                   l3702 0BE8  
                                 l3358 1772                                   l3286 1FCC  
                                 l3278 1F66                                   l3382 135A  
                                 l3374 130E                                   l3366 12CC  
                                 l3542 0F40                                   l3534 0F08  
                                 l3518 0E4E                                   l3296 120E  
                                 l3448 18EC                                   l3720 1AEE  
                                 l4520 061A                                   l4512 05CE  
                                 l4504 0572                                   l3480 16B6  
                                 l3472 1684                                   l3464 165E  
                                 l3456 163C                                   l3712 0C4A  
                                 l3704 0C08                                   l3800 1CAE  
                                 l3392 10A0                                   l3288 1FE4  
                                 l3384 1372                                   l3376 1326  
                                 l3368 12E6                                   l3536 0F0A  
                                 l4600 0F94                                   l3298 1212  
                                 l3722 1B24                                   l4530 066E  
                                 l4522 0622                                   l4514 05DC  
                                 l4506 0578                                   l3810 22C4  
                                 l3490 16DC                                   l3482 16BE  
                                 l3474 168C                                   l3466 1662  
                                 l3458 1644                                   l3706 0C24  
                                 l3714 0C4E                                   l3802 1CBA  
                                 l3394 10AC                                   l3386 137E  
                                 l3538 0F1A                                   l4610 1036  
                                 l4602 0FB8                                   l3724 1B2E  
                                 l3716 1AB4                                   l3660 204E  
                                 l4532 067A                                   l4524 0630  
                                 l4516 05F4                                   l3812 22D0  
                                 l3492 16E4                                   l3484 16C0  
                                 l3476 169A                                   l3468 166A  
                                 l3708 0C2C                                   l3804 1CE8  
                                 l3820 13BA                                   l3396 10B0  
                                 l3388 1386                                   l4612 105E  
                                 l4604 0FE8                                   l4700 02DE  
                                 l3662 1C34                                   l3726 1B32  
                                 l3718 1ABA                                   l4550 06F0  
                                 l4542 06A2                                   l4534 0696  
                                 l4526 0634                                   l4518 0600  
                                 l4630 156A                                   l4622 1550  
                                 l3486 16C6                                   l3478 16A0  
                                 l3806 1D12                                   l3830 141E  
                                 l3822 13C6                                   l3814 1398  
                                 l3398 10C2                                   l4614 1072  
                                 l4606 0FFC                                   l4710 0386  
                                 l4702 02F2                                   l3664 1C3C  
                                 l3672 1C98                                   l3656 201E  
                                 l3496 1A2C                                   l4560 074E  
                                 l4552 0702                                   l4528 0656  
                                 l4536 069E                                   l4640 1600  
                                 l4632 1596                                   l4624 1564  
                                 l3840 1E7C                                   l3680 21A2  
                                 l3488 16CC                                   l3808 1D1A  
                                 l3832 1438                                   l3824 13E4  
                                 l3816 139C                                   l4616 1086  
                                 l4608 1010                                   l4720 044A  
                                 l4712 03B6                                   l4704 0310  
                                 l3674 1CAA                                   l3666 1C6C  
                                 l3658 2024                                   l3498 1A42  
                                 l4570 0790                                   l4562 0756  
                                 l4554 0718                                   l4546 06DC  
                                 l4490 04D2                                   l4482 049E  
                                 l4642 1614                                   l4634 15AA  
                                 l3842 1E92                                   l3690 0B34  
                                 l3682 0A86                                   l3850 23D8  
                                 l3826 13E8                                   l3834 144C  
                                 l3818 13B2                                   l4722 045E  
                                 l4706 0362                                   l4714 03CA  
                                 l4650 0012                                   l3668 1C92  
                                 l4580 0838                                   l4572 07A6  
                                 l4564 0768                                   l4556 071E  
                                 l4548 06DE                                   l4492 04DE  
                                 l4484 04AC                                   l4644 1618  
                                 l4636 15E8                                   l3844 1E9A  
                                 l3692 0B64                                   l3684 0AD4  
                                 l3860 2404                                   l3852 23EE  
                                 l3836 1464                                   l3828 140A  
                                 l4724 0488                                   l4716 03E8  
                                 l4708 0372                                   l4660 00D0  
                                 l4652 0030                                   l4582 0844  
                                 l4574 07B2                                   l4566 0774  
                                 l4558 0742                                   l4494 04FC  
                                 l4486 04BE                                   l4646 24DC  
                                 l3846 1EAE                                   l3678 217A  
                                 l3694 0B70                                   l3686 0AE6  
                                 l3790 20F2                                   l3854 23F6  
                                 l3838 1468                                   l4718 043A  
                                 l4670 018E                                   l4662 00E6  
                                 l4654 0082                                   l4584 0848  
                                 l4576 07B6                                   l4568 0778  
                                 l4496 0506                                   l4488 04CA  
                                 l4648 24E0                                   l3848 1ECA  
                                 l3696 0B88                                   l3688 0B16  
                                 l3792 2100                                   l3784 20DE  
                                 l3856 23FA                                   l4592 0F52  
                                 l4680 0246                                   l4672 01A2  
                                 l4664 0110                                   l4656 0092  
                                 l4578 07C0                                   l4498 0522  
                                 l4586 0862                                   l3698 0BC2  
                                 l3794 2102                                   l3786 20E2  
                                 l3858 2400                                   l4594 0F66  
                                 l4690 029A                                   l4682 025E  
                                 l4666 013A                                   l4658 00BC  
                                 l4770 248E                                   l4762 247E  
                                 l4588 0884                                   l3796 2124  
                                 l3788 20F0                                   l4596 0F7E  
                                 l4692 02AE                                   l4684 026A  
                                 l4668 0164                                   l4676 01AA  
                                 l4772 2492                                   l4764 2482  
                                 l4694 02B2                                   l4686 0272  
                                 l4678 0220                                   l4766 2486  
                                 l4696 02C6                                   l4688 0286  
                                 l4768 248A                                   l4698 02D4  
                                 ?_isr 0001                                   STR_1 5F6B  
                                 STR_2 5EF9                                   STR_3 5F15  
                                 STR_4 5F43                                   STR_5 5F2C  
                                 STR_6 5FB9                                   STR_7 5F7E  
                                 STR_8 5FC4                                   STR_9 5FCF  
                                 _CREN 007D5C                                   u2000 14E8  
                                 u2001 14E4                                   u2010 1508  
                                 u2100 12A0                                   u2020 1546  
                                 u2101 129C                                   u2021 1542  
                                 u2005 14D8                          TFT_DrawChar@c 002E  
                                 u2110 2338                                   u2030 1F7E  
                                 u2111 2334                                   u2007 14CE  
                                 u2031 1F7A                                   u2120 1942  
                                 u2200 1792                                   u2040 1FAE  
                                 u2017 14FE                                   u2041 1FAA  
                                 u2130 198C                                   u2210 17A2  
                                 u2050 1FE4                                   u2211 179E  
                                 u2051 1FE0                          TFT_DrawChar@i 003E  
                                 u2140 199C                                   u2300 1182  
                                 u2060 2014                                   u2220 12CC  
                        TFT_DrawChar@j 003D                                   u2141 1998  
                                 u2301 117E                                   u2061 2010  
                                 u2221 12C8                                   _LATA 000F89  
                                 u2070 11EC                                   u2150 2380  
                                 u2310 1192                                   u2230 12E6  
                                 _LATB 000F8A                                   u2071 11E8  
                                 u2127 1938                                   u2151 237C  
                                 u2311 118E                                   u2207 1788  
                                 u2231 12E2                                   _LATC 000F8B  
                                 u2080 126A                                   u2160 20BA  
                                 u2320 1890                                   u2400 16DC  
                                 u2240 1326                                   u2081 1266  
                                 u2161 20B6                                   u2321 188C  
                                 u2137 1982                                   u2401 16D8  
                                 u2241 1322                                   u2090 1280  
                                 u2170 20D2                                   u2330 18B2  
                                 u2410 1A42                                   u2250 1372  
                                 u2091 127C                                   u2171 20CE  
                                 u2331 18AE                                   u2411 1A3E  
                                 u2251 136E                                   u2340 18DA  
                                 u1700 0D26                                   u2420 1A64  
                                 u2260 10C2                                   u2180 172C  
                                 u2341 18D6                                   u1701 0D22  
                                 u2421 1A60                                   u2261 10BE  
                                 u2181 1728                                   u1710 0D4E  
                                 u2430 1A82                                   u2350 163C  
                                 u2270 10D4                                   u2190 1772  
                                 u1711 0D4A                                   u2431 1A7E  
                                 u2351 1638                                   u2271 10D0  
                                 u2191 176E                                   u1720 0DBC  
                                 u1800 08EC                                   u3400 05CE  
                                 u2360 1656                                   u2280 10FA  
                                 u2440 0E4E                                   u1721 0DB8  
                                 u1801 08E8                                   u3401 05CA  
                                 u2361 1652                                   u2281 10F6  
                                 u2441 0E4A                                   u1730 0DEC  
                                 u1810 09A6                                   u3410 05DC  
                                 u2370 167C                                   u2290 1122  
                                 u2450 0E98                          TFT_DrawChar@x 002A  
                                 u1731 0DE8                                   u1811 09A2  
                                 u3411 05D8                                   u2371 1678  
                                 u2291 111E                                   u2451 0E94  
                        TFT_DrawChar@y 002C                                   u1900 1834  
                                 u1740 2506                                   u1820 09B6  
                                 u3500 0790                                   u3420 0630  
                                 u2380 169A                                   u2700 0AE6  
                                 u2460 0EF4                                   u1901 1830  
                                 u1741 2502                                   u1821 09B2  
                                 u3501 078C                                   u3421 062C  
                                 u2381 1696                                   u2701 0AE2  
                                 u2461 0EF0                                   u1910 1868  
                                 u1830 0A6E                                   u3510 07A6  
                                 u3430 0656                                   u2390 16B6  
                                 u2710 0B34                                   u1750 1B58  
                                 u2470 0F1A                                   u1911 1864  
                                 u1831 0A6A                                   u3511 07A2  
                                 u3431 0652                                   u2391 16B2  
                                 u2711 0B30                                   u2471 0F16  
                                 u1920 215C                                   u1680 0CB8  
                                 u1840 0A84                                   u3520 0862  
                                 u3440 06D8                                   u2720 0BC2  
                                 u1760 1B68                                   u2480 0F40  
                                 u3600 0082                                   u1841 0A80  
                                 u3521 085E                                   u3441 06D4  
                                 u2721 0BBE                                   u1761 1B64  
                                 u2481 0F3C                                   u3601 007E  
                                 u1850 2370                                   u1930 216C  
                                 u1690 0CD8                                   u3530 0884  
                                 u3450 06F0                                   u3370 04BE  
                                 u2730 0BE8                                   u1770 1BA0  
                                 u3610 025E                                   u1851 236C  
                                 u1931 2168                                   u1691 0CD4  
                                 u3531 0880                                   u3451 06EC  
                                 u3371 04BA                                   u2731 0BE4  
                                 u3611 025A                                   u1860 226A  
                                 u2660 1C92                                   u1940 23BC  
                                 u3460 0702                                   u3380 04FC  
                                 u2740 0C3A                                   u2820 20F0  
                                 u1780 1BB0                                   u3540 0F7E  
                                 u3620 029A                                   u2661 1C8E  
                                 u1685 0CAE                                   u1941 23B8  
                                 u3461 06FE                                   u3381 04F8  
                                 u2741 0C36                                   u2821 20EC  
                                 u1781 1BAC                                   u1757 1B4E  
                                 u3541 0F7A                                   u3621 0296  
                                 u1870 2284                                   u2670 1CAA  
                                 u1790 08DC                                   u1950 23CC  
                                 u3470 0718                                   u3390 056E  
                                 u2750 0C6C                                   u2830 2100  
                                 u3550 1036                                   u3630 02C6  
                                 u1871 2280                                   u1927 2152  
                                 u2671 1CA6                                   u1791 08D8  
                                 u1951 23C8                                   u3471 0714  
                                 u3391 056A                                   u2751 0C68  
                                 u2831 20FC                                   u3551 1032  
                                 u3631 02C2                                   u1880 17FE  
                                 u2760 1B0E                                   u3480 0742  
                                 u2680 0ACE                                   u2840 2116  
                                 u1960 1F06                                   u3560 1072  
                                 u3640 0310                                   u1881 17FA  
                                 u3481 073E                                   u2681 0AC8  
                                 u2841 210E                                   u1961 1F02  
                                 u1777 1B96                                   u3561 106E  
                                 u3641 030C                                   u1890 1814  
                                 u3490 0768                                   u3570 15AA  
                                 u2690 0AD0                                   u1970 1F40  
                                 u3650 0362                                   u1891 1810  
                                 u1867 2260                                   u3491 0764  
                                 u3571 15A6                                   u1971 1F3C  
                                 u3651 035E                                   _PEIE 007F96  
                                 u3580 1628                                   u2860 141E  
                                 u1980 149A                                   u3660 03E8  
                                 u2765 1B04                                   u3581 1624  
                                 u2861 141A                                   u3661 03E4  
                                 u2870 1464                                   u1990 14AA  
                                 u3670 043A                                   u3590 0030  
                                 u2871 1460                                   u1991 14A6  
                                 u3671 0436                                   u3591 002C  
                                 u2880 23EE                                   u2881 23EA  
                                 u2858 2118                                   u1987 1490  
                                 _RCIE 007CED                                   _RCIF 007CF5  
                                 u3757 1DB6                                   u3767 13A6  
                                 u3777 1428                                   u3787 24D0  
                                 _OERR 007D59                                   _RBPU 007F8F  
                                 _TXIF 007CF4                   __size_of_A6_SpeedGet 0162  
                 __size_of_A6_SpeedSet 014E                          TFT_DrawLine@t 0020  
                                 abs@a 0005                                   _atol 10A0  
                                 _main 247E                                   _init 1D9C  
                                 _tmp1 0108                                   _tmp2 0104  
                                 _tmp3 00F3                                   _tmp4 0100  
                                 _loop 0012                                   fsr0h 000FEA  
                                 indf0 000FEF                                   fsr2h 000FDA  
                                 fsr0l 000FE9                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 005B  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                      TFT_Flood@color_hi 001A  
                    TFT_Flood@color_lo 001B                          __CFG_IESO$OFF 000000  
                         ___param_bank 000000          ?_Ecg_Background_Leads_Failure 0001  
                                ??_abs 0007                                  ??_isr 0003  
                        __CFG_PLLDIV$1 000000                        ??_TFT_DrawPixel 0013  
                       __CFG_CCP2MX$ON 000000                         printLine@color 004C  
                                ?_atol 0011                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 16EE  
                                ?_loop 0001                                  STR_10 5FF8  
                                STR_11 5FFB                                  STR_20 5FF5  
                                STR_12 5F97                                  STR_13 5FF1  
                                STR_21 5FD9                                  STR_22 5FF8  
                                STR_14 5FED                                  STR_30 5F58  
                                STR_23 5FFB                                  STR_15 5FAE  
                                STR_31 5FA3                                  STR_24 5FE2  
                                STR_16 5EDD                                  STR_25 5FE7  
                                STR_17 5FE9                                  STR_18 5FF8  
                                STR_26 5F8B                                  STR_27 5FF8  
                                STR_19 5FFB                                  STR_28 5FFB  
                                STR_29 5FF5                        __end_of___lldiv 190E  
                      ___awdiv@divisor 0007                        __end_of___llmod 1AB4  
                       TFT_DrawChar@bg 0031                                  i2l164 1E70  
                                i2l405 24BC                                  i2l482 2244  
                      ___awdiv@counter 0009                                  _RCREG 000FAE  
                                _TMR3H 000FB3                                  _TMR3L 000FB2  
                                _SPBRG 000FAF                                  _PORTB 000F81  
                        __CFG_USBDIV$2 000000                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TXREG 000FAD                                  _Ecg_X 0059  
                                _Ecg_Y 0057                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                    ___lmul@multiplicand 0009  
                    __end_of_A6_SPEEDS 5E9F                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         TFT_DrawLine@x0 0013  
                       TFT_DrawLine@x1 0017                         TFT_DrawLine@y0 0015  
                       TFT_DrawLine@y1 0019                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                         TFT_DrawLine@dx 0030  
                       TFT_DrawLine@dy 0028                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                __size_of_Ecg_CheckLeads 004E  
                      __end_of_dpowers 5E93                        __end_of_isdigit 23D8  
                     __end_of_TFT_Font 5D9F                       __end_of_TFT_Init 1476  
                                atol@a 001A                                  atol@c 001E  
                                atol@s 0011                         TFT_DrawPixel@x 000D  
                       TFT_DrawPixel@y 000F                     __size_of_TFT_Flood 0182  
                      __end_of_sleepMS 233A                       _TFT_DrawFillRect 1D26  
                                tablat 000FF5                     __size_of_TFT_Reset 001E  
               __size_of_Ecg_Interrupt 0020                       __end_of_Ecg_Init 2408  
                                ttemp5 005C                                  ttemp6 005F  
                                ttemp7 0063                                  status 000FD8  
                                wtemp8 005C                        __end_of_sprintf 0892  
                      __end_of_strcspn 201E                        __end_of_strncmp 1550  
                    ??_EUSART_SetSpeed 0016                         __CFG_MCLRE$OFF 000000  
                       TFT_Flood@color 000D                        __initialization 199E  
                         __end_of_atol 11DA                           __end_of_main 249E  
                         __end_of_init 1E0E                           __end_of_loop 049E  
                            ??_A6_Init 0053                                 ??_atol 0015  
                               ??_main 0053                       ??_TFT_FillScreen 001E  
                               ??_init 0005                                 ??_loop 00B0  
                        __activetblptr 000002                       ??_TFT_DrawString 004A  
                         ??_A6_IsAlive 0023                           ??_A6_Command 001E  
                       _EUSART_TX_Char 24F6                       ___llmod@dividend 0012  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                     ___awdiv@dividend 0005                      _TFT_DrawChar$2092 0039  
                    _TFT_DrawChar$2093 003B                                 i2l4070 1E26  
                               i2l4080 1E4E                                 i2l4072 1E34  
                               i2l4074 1E42                                 i2l4082 1E50  
                               i2l4084 1E5E                                 i2l4076 1E46  
                               i2l4068 1E18                                 i2l4086 1E6C  
                               i2l4078 1E4A                                 i2l3980 24B6  
                               i2l3990 221E                                 i2l3982 24BA  
                               i2l3992 2230                                 i2l3984 2204  
                               i2l3994 2234                                 i2l3986 2216  
                               i2l3978 249E                                 i2l3988 221A  
                               _TMR3IE 007D01                                 _TMR3IF 007D09  
                               _SPBRGH 000FB0       __size_of_Ecg_Background_Leads_Ok 0078  
                       __CFG_XINST$OFF 000000                        TFT_DrawLine@err 002C  
                     ??_TFT_FullScreen 0015                                 ___lmul 1EE8  
                               ___wmul 2432                              ??___awdiv 0009  
                            ??___lldiv 000D                              ??___llmod 001A  
                    ?_EUSART_TX_String 0009                     __end_of_A6_IsAlive 1CAE  
                               _memset 233A                          _Ecg_Interrupt 249E  
                    __end_of_TFT_Flood 0DF0                                 clear_0 1A04  
                               clear_1 1A10                     __end_of_A6_Command 12BA  
                     ___awdiv@quotient 000B                      __end_of_TFT_Reset 24DC  
                   ??_EUSART_TX_String 000C                                 _strchr 1B38  
                               _strcmp 207E                                 _strlen 212C  
                       A6_IsAlive@loop 0043                                 _strtok 12BA  
                               _strspn 1F52                                 _strstr 16EE  
                         __pdataCOMRAM 0057                              ??_isdigit 0005  
                               loop@zz 01D8                           __mediumconst 589E  
               __end_of_EUSART_TX_Char 250E                              ??_sleepMS 0009  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                        TFT_DrawString@x 003F  
                      TFT_DrawString@y 0041                              ??_sprintf 004F  
                            ??_strcspn 000F                              ??_strncmp 000F  
                 __size_of_EUSART_Init 006C                             __accesstop 0060  
              __end_of__initialization 1A1E                        __CFG_PBADEN$OFF 000000  
                        ___rparam_used 000001                        TFT_Flood@blocks 0017  
                       __pcstackCOMRAM 0001                           __pidataBANK0 2408  
                         __pidataBANK1 250E                         ?_Ecg_Interrupt 0001  
                            ?_TFT_Init 0001             __end_of_A6_SpeedAutoDetect 162A  
                            ?_Ecg_Init 0001           __size_of_EUSART_RX_Interrupt 0042  
                      ?_EUSART_TX_Char 0001                         _Ecg_CheckLeads 20DE  
                         sprintf@width 0071                             __pbssBANK0 00DD  
                           __pbssBANK1 0100                                ?___lmul 0005  
                              ?___wmul 0005                             ??_TFT_Init 001E  
                              ?_memset 0005                                _A6_Init 24DC  
                       ___lmul@product 000D               __end_of_TFT_DrawFillRect 1D9C  
                              ?_strchr 0005                                ?_strcmp 0005  
                              ?_strlen 0005                          ??_A6_ReadLine 000A  
                              ?_strtok 0012                                ?_strspn 000B  
                              ?_strstr 0010                             ??_Ecg_Init 004A  
                   A6_ReadLine@timeout 0008                 TFT_WriteRegister@h_715 000B  
               TFT_WriteRegister@l_716 000C                 __end_of_Ecg_CheckLeads 212C  
                     TFT_DrawChar@line 0038                       TFT_DrawChar@size 0033  
                   __size_of_printLine 0060                           A6_ReadLine@t 000E  
                        ??_A6_SpeedGet 0027                          ??_A6_SpeedSet 0053  
                      _EUSART_SetSpeed 1AB4                              _A6_SPEEDS 5E93  
                            TFT_Init@i 0026                        __CFG_VREGEN$OFF 000000  
                TFT_DrawFillRect@color 0024                _Ecg_Background_Leads_Ok 1CAE  
                              __Hparam 0000                                __Lparam 0000  
                    A6_Command@command 0013                              _ECG_FLAGS 0055  
                      ??_Ecg_Interrupt 0001                                ___awdiv 162A  
                      __size_of___lmul 006A                                ___lldiv 186A  
                      __size_of___wmul 0026                                ___llmod 1A2C  
                      __CFG_STVREN$OFF 000000                      A6_Command@timeout 0019  
                        _ECG_HEARTBEAT 00DD                                __pcinit 199E  
                      __size_of_memset 0038                                __ramtop 0800  
                        _ECG_HEARTRATE 00EF                                __ptext0 247E  
                              __ptext1 0012                                __ptext2 0F52  
                              __ptext3 0DF0                                __ptext4 12BA  
                              __ptext5 1F52                                __ptext6 1FB8  
                              __ptext7 16EE                                __ptext8 1476  
                              __ptext9 1B38                    A6_SpeedGet@response 0027  
                __end_of_TFT_DrawPixel 22C4                        __size_of_strchr 0082  
                      __size_of_strcmp 0060                        __size_of_strlen 004E  
                      __size_of_strtok 00DE                        __size_of_strspn 0066  
                      __size_of_strstr 00BE                                _dpowers 5E6B  
                         __size_of_abs 0034                                _isdigit 23A6  
                         __size_of_isr 1E74                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                           A6_SpeedGet@j 004E  
                              _sleepMS 2300                    __end_of_A6_ReadLine 186A  
                              _sprintf 049E                                _strcspn 1FB8  
                              _strncmp 1476                         __pintcode_body 1E0E  
                            _EUSART_RX 0110                   end_of_initialization 1A1E  
                              memset@c 0007                                memset@n 0009  
                              memset@p 000B                          __Lmediumconst 589E  
                              int_func 1E0E                    __end_of_A6_SpeedGet 0F52  
                  __end_of_A6_SpeedSet 10A0                     TFT_WriteRegister@h 0009  
                   TFT_WriteRegister@l 000A                        ___lldiv@divisor 0009  
                      A6_SpeedGet@loop 0047                        ___lldiv@counter 0011  
                    __end_of_printLine 207E              Ecg_CheckLeads@leadsStatus 0008  
                            _RCSTAbits 000FAB                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                       TFT_DrawString@bg 0047  
                        ?_TFT_DrawChar 002A                          ?_TFT_DrawLine 0013  
                              strcmp@r 000B                                strlen@s 0005  
                              strspn@i 0010                              _PORTAbits 000F80  
                            _PORTCbits 000F82                __end_of_EUSART_SetSpeed 1B38  
                            _TFT_Flood 0C6E                              _TFT_Reset 24BE  
                 EUSART_SetSpeed@speed 0012              __size_of_EUSART_TX_String 0040  
            ??_Ecg_Background_Leads_Ok 004A                            TFT_Init@cmd 0024  
                            _TXSTAbits 000FAC                    _EUSART_RX_Interrupt 2204  
                       ??_TFT_DrawChar 0034                         ??_TFT_DrawLine 001D  
                       __end_of___lmul 1F52                         __end_of___wmul 2458  
                          _BAUDCONbits 000FB8                     A6_IsAlive@response 0023  
                        __pidataCOMRAM 2523                       ??_EUSART_TX_Char 0005  
                       __end_of_memset 2372                      __size_of_TFT_Init 00DE  
                         _MILLISECONDS 010C                            _A6_ReadLine 17AC  
                           ?_TFT_Flood 000D                         __end_of_strchr 1BBA  
                       __end_of_strcmp 20DE                         __end_of_strlen 217A  
                       __end_of_strtok 1398                         __end_of_strspn 1FB8  
                       __end_of_strstr 17AC                             ?_TFT_Reset 0001  
                  start_initialization 199E                   ?_EUSART_RX_Interrupt 0001  
                    __size_of_Ecg_Init 0030                            __end_of_abs 23A6  
                          __end_of_isr 1E7C                          ??_EUSART_Init 000D  
                  TFT_SetAddrWindow@x1 000D                    TFT_SetAddrWindow@x2 0011  
                  TFT_SetAddrWindow@y1 000F                    TFT_SetAddrWindow@y2 0013  
                          _A6_SpeedGet 0DF0                     _A6_SpeedAutoDetect 1550  
                          _A6_SpeedSet 0F52                __size_of_TFT_FillScreen 0046  
                  EUSART_TX_String@len 000B                    EUSART_TX_String@str 0009  
                  A6_SpeedAutoDetect@i 0094                        ___llmod@divisor 0016  
                      ___llmod@counter 001A                    ?_A6_SpeedAutoDetect 0001  
              __size_of_TFT_DrawString 0090                        A6_Command@resp1 0015  
                      A6_Command@resp2 0017                      _TFT_Init_Sequence 5D9F  
                             ??___lmul 000D                               ??___wmul 0009  
                A6_Command@responseLen 001D                            __pdataBANK0 00B4  
                          __pdataBANK1 01DC                       __CFG_LPT1OSC$OFF 000000  
                             ??_memset 000B                               ?_A6_Init 0001  
                    ?_TFT_DrawFillRect 001C                               ??_strchr 0009  
                             ??_strcmp 0009                               ??_strlen 0007  
                             ??_strtok 0016                               ??_strspn 000F  
                             ??_strstr 0014                   ??_A6_SpeedAutoDetect 0053  
                   ??_TFT_DrawFillRect 0026                     EUSART_SetSpeed@tmp 001A  
                     ?_EUSART_SetSpeed 0012                  ??_EUSART_RX_Interrupt 0001  
       ??_Ecg_Background_Leads_Failure 004A                __size_of_TFT_FullScreen 0026  
                          __pbssCOMRAM 0053                          __pcstackBANK0 0060  
                        __pcstackBANK1 0174                           loop@response 0174  
                         _isdigit$1812 0006                            sprintf@flag 0070  
                          sprintf@prec 0068                    __end_of_EUSART_Init 1EE8  
            __end_of_TFT_Init_Sequence 5E6B                            A6_Command@t 001F  
                            __pintcode 0008                          __pmediumconst 589E  
                         loop@zzzz_158 0194                               ?___awdiv 0005  
                             ?___lldiv 0005                               ?___llmod 0012  
                     ??_Ecg_CheckLeads 0007                  TFT_WriteRegister@data 0007  
               A6_SpeedAutoDetect@zzzz 0074                  A6_SpeedGet@speedToken 004C  
               A6_ReadLine@responseLen 0007                            ??_TFT_Flood 0013  
                             ?_isdigit 0001                   EUSART_RX_Interrupt@c 0001  
                          ??_TFT_Reset 0005                               ?_sleepMS 0005  
                    _TFT_WriteRegister 21C0                       _EUSART_TX_String 2246  
                             ?_sprintf 0060                   __end_of_TFT_DrawChar 0A86  
                             ?_strcspn 000B                               ?_strncmp 0009  
                 __end_of_TFT_DrawLine 0C6E                    A6_ReadLine@response 0005  
                   ?_TFT_WriteRegister 0005                         ___wmul@product 0009  
                    TFT_DrawChar@color 002F                    ??_TFT_WriteRegister 0009  
                             i2u306_40 1E26                               i2u306_41 1E22  
                             i2u307_40 1E34                               i2u307_41 1E30  
                             i2u308_40 1E5E                               i2u308_41 1E5A  
                             i2u309_40 1E6C                               i2u309_41 1E68  
                             i2u298_40 2216                               i2u298_41 2212  
                             i2u299_40 2230                               i2u299_41 222C  
                             _GO_nDONE 007E11                               _UCFGbits 000F6F  
                     __CFG_WDTPS$32768 000000                               _UCONbits 000F6D  
                            _printLine 201E                  __end_of_Ecg_Interrupt 24BE  
                             _TFT_Font 589F                               _TFT_Init 1398  
                     __size_of_A6_Init 001A                             _ADCON0bits 000FC2  
                           _ADCON1bits 000FC1                             _ADCON2bits 000FC0  
                    ___wmul@multiplier 0005                               _Ecg_Init 23D8  
                           TFT_Flood@i 0019                               _Ecg_Xold 00DB  
                             _Ecg_Yold 00D9              __end_of_TFT_WriteRegister 2204  
                   TFT_DrawPixel@color 0011                             _A6_IsAlive 1C34  
                      EUSART_TX_Char@c 0005                            _EUSART_Init 1E7C  
                    TFT_DrawFillRect@h 0022                             _A6_Command 11DA  
                    TFT_DrawFillRect@w 0020                      TFT_DrawFillRect@x 001C  
                    TFT_DrawFillRect@y 001E                      ___lmul@multiplier 0005  
                       _TFT_FillScreen 217A                              copy_data0 19B2  
                            copy_data1 19D2                              copy_data2 19F2  
                    _TFT_SetAddrWindow 1BBA                         _TFT_DrawString 190E  
               __size_of_TFT_DrawPixel 003E                     ?_TFT_SetAddrWindow 000D  
                             __Hrparam 0000                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0022                             _ECG_BUFFER 00EA  
                  TFT_DrawString@color 0045                             ?_printLine 004A  
                  ??_TFT_SetAddrWindow 0015                      TFT_DrawLine@t_760 0022  
                    TFT_DrawLine@t_761 0024                      TFT_DrawLine@t_762 0026  
                     __size_of___awdiv 00C4                       __size_of___lldiv 00A4  
                     __size_of___llmod 0088                      TFT_DrawLine@color 001B  
                    TFT_DrawLine@steep 002E                      TFT_DrawLine@ystep 002A  
                         ?_A6_ReadLine 0005                         _TFT_FullScreen 2458  
                   A6_Command@response 001B                             sprintf@val 006A  
                  A6_SpeedSet@response 0078                       __size_of_isdigit 0032  
                     A6_ReadLine@iLine 0012                 __end_of_TFT_FillScreen 21C0  
                             __ptext10 10A0                               __ptext11 1EE8  
                             __ptext20 162A                               __ptext12 1D9C  
                             __ptext21 22C4                               __ptext13 1398  
                             __ptext30 201E                               __ptext22 217A  
                             __ptext14 24BE                               __ptext31 190E  
                             __ptext23 1E7C                               __ptext15 23D8  
                             __ptext40 1AB4                               __ptext32 0892  
                             __ptext24 24DC                               __ptext16 20DE  
                             __ptext41 186A                               __ptext33 2286  
                             __ptext25 1550                               __ptext17 1CAE  
                             __ptext42 1C34                               __ptext34 1D26  
                             __ptext26 049E                               __ptext18 0A86  
                             __ptext51 249E                               __ptext43 207E  
                             __ptext35 2432                               __ptext27 23A6  
                             __ptext19 2372                               __ptext52 2204  
                             __ptext44 11DA                               __ptext36 2458  
                             __ptext28 1A2C                               __ptext45 212C  
                             __ptext37 1BBA                               __ptext29 2300  
                             __ptext46 233A                               __ptext38 0C6E  
                             __ptext47 2246                               __ptext39 21C0  
                             __ptext48 24F6                               __ptext49 17AC  
                     __size_of_sleepMS 003A                           ?_A6_SpeedGet 0023  
                         ?_A6_SpeedSet 0074                   TFT_WriteRegister@reg 0005  
            __end_of_TFT_SetAddrWindow 1C34                       __size_of_sprintf 03F4  
                     __size_of_strcspn 0066                       __size_of_strncmp 00DA  
               __end_of_TFT_DrawString 199E                               _loop$151 01D6  
                             _loop$146 01D4                              sleepMS@ms 0005  
                        __size_of_atol 013A                          __size_of_main 0020  
                        __size_of_init 0072                          __size_of_loop 048C  
                           strncmp@len 000D                         _ECG_ICON_HEART 5E9F  
                             int$flags 005B                               atol@sign 0019  
                  TFT_FillScreen@color 001C                 __end_of_TFT_FullScreen 247E  
                __CFG_CPUDIV$OSC1_PLL2 000000                          _TFT_DrawPixel 2286  
                          _OSCTUNEbits 000F9B                  __size_of_TFT_DrawChar 01F4  
                __size_of_TFT_DrawLine 01E8             __size_of_TFT_WriteRegister 0044  
                      ?_TFT_FillScreen 001C               ?_Ecg_Background_Leads_Ok 0001  
                             isdigit@c 0007                               memset@p1 0005  
                          ?_A6_IsAlive 0001                     TFT_DrawString@size 0049  
                          ?_A6_Command 0013                               intlevel2 0000  
                            sprintf@ap 006E                     A6_SpeedSet@request 0098  
                            sprintf@sp 0060              __size_of_TFT_DrawFillRect 0076  
                      ?_TFT_DrawString 003F                              strchr@chr 0007  
                             loop@zzzz 01B4                              strchr@ptr 0005  
                     ___lldiv@dividend 0005                 __end_of_ECG_ICON_HEART 5EDD  
                            strcspn@s1 000B                              strcspn@s2 000D  
                             sleepMS@t 0009                       A6_SpeedGet@speed 0048  
                            strncmp@s1 0009                              strncmp@s2 000B  
                           _OSCCONbits 000FD3               __end_of_EUSART_TX_String 2286  
                          ??_printLine 004E                           _TFT_DrawChar 0892  
                         _TFT_DrawLine 0A86            __end_of_EUSART_RX_Interrupt 2246  
                      ?_TFT_FullScreen 0001                      TFT_DrawString@str 0043  
                       ?_TFT_DrawPixel 000D                               sprintf@c 0073  
                             sprintf@f 0062            __size_of_A6_SpeedAutoDetect 00DA  
                             strcmp@s1 0005                               strcmp@s2 0007  
                     ___lldiv@quotient 000D                               strlen@cp 0007  
                             strcspn@i 0010                               strtok@s1 0012  
                             strtok@s2 0014                               strspn@s1 000B  
                             strspn@s2 000D                               strtok@sp 0053  
                             strstr@s1 0010                               strstr@s2 0012  
              A6_SpeedSet@currentSpeed 00AC                __size_of_EUSART_TX_Char 0018  
           __size_of_TFT_SetAddrWindow 007A                       A6_SpeedSet@speed 0074  
                   __CFG_FOSC$HSPLL_HS 000000               __size_of_EUSART_SetSpeed 0084  
 __end_of_Ecg_Background_Leads_Failure 2300  __size_of_Ecg_Background_Leads_Failure 003C  
         _Ecg_Background_Leads_Failure 22C4  
