

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 27 21:29:28 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92  0000                     
    93                           ; Version 2.10
    94                           ; Generated 31/07/2019 GMT
    95                           ; 
    96                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC18F2455 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     
   128                           	psect	idataCOMRAM
   129  002F90                     __pidataCOMRAM:
   130                           	opt callstack 0
   131                           
   132                           ;initializer for _Ecg_X
   133  002F90  00EF               	dw	239
   134                           
   135                           	psect	idataBANK0
   136  002F80                     __pidataBANK0:
   137                           	opt callstack 0
   138                           
   139                           ;initializer for _Ecg_Yold
   140  002F80  018F               	dw	399
   141                           
   142                           ;initializer for _Ecg_Y
   143  002F82  018F               	dw	399
   144                           
   145                           ;initializer for _Ecg_Xold
   146  002F84  00EF               	dw	239
   147                           
   148                           	psect	mediumconst
   149  00592C                     __pmediumconst:
   150                           	opt callstack 0
   151  00592C  00                 	db	0
   152  00592D                     _TFT_Font:
   153                           	opt callstack 0
   154  00592D  00                 	db	0
   155  00592E  00                 	db	0
   156  00592F  00                 	db	0
   157  005930  00                 	db	0
   158  005931  00                 	db	0
   159  005932  3E                 	db	62
   160  005933  5B                 	db	91
   161  005934  4F                 	db	79
   162  005935  5B                 	db	91
   163  005936  3E                 	db	62
   164  005937  3E                 	db	62
   165  005938  6B                 	db	107
   166  005939  4F                 	db	79
   167  00593A  6B                 	db	107
   168  00593B  3E                 	db	62
   169  00593C  1C                 	db	28
   170  00593D  3E                 	db	62
   171  00593E  7C                 	db	124
   172  00593F  3E                 	db	62
   173  005940  1C                 	db	28
   174  005941  18                 	db	24
   175  005942  3C                 	db	60
   176  005943  7E                 	db	126
   177  005944  3C                 	db	60
   178  005945  18                 	db	24
   179  005946  1C                 	db	28
   180  005947  57                 	db	87
   181  005948  7D                 	db	125
   182  005949  57                 	db	87
   183  00594A  1C                 	db	28
   184  00594B  1C                 	db	28
   185  00594C  5E                 	db	94
   186  00594D  7F                 	db	127
   187  00594E  5E                 	db	94
   188  00594F  1C                 	db	28
   189  005950  00                 	db	0
   190  005951  18                 	db	24
   191  005952  3C                 	db	60
   192  005953  18                 	db	24
   193  005954  00                 	db	0
   194  005955  FF                 	db	255
   195  005956  E7                 	db	231
   196  005957  C3                 	db	195
   197  005958  E7                 	db	231
   198  005959  FF                 	db	255
   199  00595A  00                 	db	0
   200  00595B  18                 	db	24
   201  00595C  24                 	db	36
   202  00595D  18                 	db	24
   203  00595E  00                 	db	0
   204  00595F  FF                 	db	255
   205  005960  E7                 	db	231
   206  005961  DB                 	db	219
   207  005962  E7                 	db	231
   208  005963  FF                 	db	255
   209  005964  30                 	db	48
   210  005965  48                 	db	72
   211  005966  3A                 	db	58
   212  005967  06                 	db	6
   213  005968  0E                 	db	14
   214  005969  26                 	db	38
   215  00596A  29                 	db	41
   216  00596B  79                 	db	121
   217  00596C  29                 	db	41
   218  00596D  26                 	db	38
   219  00596E  40                 	db	64
   220  00596F  7F                 	db	127
   221  005970  05                 	db	5
   222  005971  05                 	db	5
   223  005972  07                 	db	7
   224  005973  40                 	db	64
   225  005974  7F                 	db	127
   226  005975  05                 	db	5
   227  005976  25                 	db	37
   228  005977  3F                 	db	63
   229  005978  5A                 	db	90
   230  005979  3C                 	db	60
   231  00597A  E7                 	db	231
   232  00597B  3C                 	db	60
   233  00597C  5A                 	db	90
   234  00597D  7F                 	db	127
   235  00597E  3E                 	db	62
   236  00597F  1C                 	db	28
   237  005980  1C                 	db	28
   238  005981  08                 	db	8
   239  005982  08                 	db	8
   240  005983  1C                 	db	28
   241  005984  1C                 	db	28
   242  005985  3E                 	db	62
   243  005986  7F                 	db	127
   244  005987  14                 	db	20
   245  005988  22                 	db	34
   246  005989  7F                 	db	127
   247  00598A  22                 	db	34
   248  00598B  14                 	db	20
   249  00598C  5F                 	db	95
   250  00598D  5F                 	db	95
   251  00598E  00                 	db	0
   252  00598F  5F                 	db	95
   253  005990  5F                 	db	95
   254  005991  06                 	db	6
   255  005992  09                 	db	9
   256  005993  7F                 	db	127
   257  005994  01                 	db	1
   258  005995  7F                 	db	127
   259  005996  00                 	db	0
   260  005997  66                 	db	102
   261  005998  89                 	db	137
   262  005999  95                 	db	149
   263  00599A  6A                 	db	106
   264  00599B  60                 	db	96
   265  00599C  60                 	db	96
   266  00599D  60                 	db	96
   267  00599E  60                 	db	96
   268  00599F  60                 	db	96
   269  0059A0  94                 	db	148
   270  0059A1  A2                 	db	162
   271  0059A2  FF                 	db	255
   272  0059A3  A2                 	db	162
   273  0059A4  94                 	db	148
   274  0059A5  08                 	db	8
   275  0059A6  04                 	db	4
   276  0059A7  7E                 	db	126
   277  0059A8  04                 	db	4
   278  0059A9  08                 	db	8
   279  0059AA  10                 	db	16
   280  0059AB  20                 	db	32
   281  0059AC  7E                 	db	126
   282  0059AD  20                 	db	32
   283  0059AE  10                 	db	16
   284  0059AF  08                 	db	8
   285  0059B0  08                 	db	8
   286  0059B1  2A                 	db	42
   287  0059B2  1C                 	db	28
   288  0059B3  08                 	db	8
   289  0059B4  08                 	db	8
   290  0059B5  1C                 	db	28
   291  0059B6  2A                 	db	42
   292  0059B7  08                 	db	8
   293  0059B8  08                 	db	8
   294  0059B9  1E                 	db	30
   295  0059BA  10                 	db	16
   296  0059BB  10                 	db	16
   297  0059BC  10                 	db	16
   298  0059BD  10                 	db	16
   299  0059BE  0C                 	db	12
   300  0059BF  1E                 	db	30
   301  0059C0  0C                 	db	12
   302  0059C1  1E                 	db	30
   303  0059C2  0C                 	db	12
   304  0059C3  30                 	db	48
   305  0059C4  38                 	db	56
   306  0059C5  3E                 	db	62
   307  0059C6  38                 	db	56
   308  0059C7  30                 	db	48
   309  0059C8  06                 	db	6
   310  0059C9  0E                 	db	14
   311  0059CA  3E                 	db	62
   312  0059CB  0E                 	db	14
   313  0059CC  06                 	db	6
   314  0059CD  00                 	db	0
   315  0059CE  00                 	db	0
   316  0059CF  00                 	db	0
   317  0059D0  00                 	db	0
   318  0059D1  00                 	db	0
   319  0059D2  00                 	db	0
   320  0059D3  00                 	db	0
   321  0059D4  5F                 	db	95
   322  0059D5  00                 	db	0
   323  0059D6  00                 	db	0
   324  0059D7  00                 	db	0
   325  0059D8  07                 	db	7
   326  0059D9  00                 	db	0
   327  0059DA  07                 	db	7
   328  0059DB  00                 	db	0
   329  0059DC  14                 	db	20
   330  0059DD  7F                 	db	127
   331  0059DE  14                 	db	20
   332  0059DF  7F                 	db	127
   333  0059E0  14                 	db	20
   334  0059E1  24                 	db	36
   335  0059E2  2A                 	db	42
   336  0059E3  7F                 	db	127
   337  0059E4  2A                 	db	42
   338  0059E5  12                 	db	18
   339  0059E6  23                 	db	35
   340  0059E7  13                 	db	19
   341  0059E8  08                 	db	8
   342  0059E9  64                 	db	100
   343  0059EA  62                 	db	98
   344  0059EB  36                 	db	54
   345  0059EC  49                 	db	73
   346  0059ED  56                 	db	86
   347  0059EE  20                 	db	32
   348  0059EF  50                 	db	80
   349  0059F0  00                 	db	0
   350  0059F1  08                 	db	8
   351  0059F2  07                 	db	7
   352  0059F3  03                 	db	3
   353  0059F4  00                 	db	0
   354  0059F5  00                 	db	0
   355  0059F6  1C                 	db	28
   356  0059F7  22                 	db	34
   357  0059F8  41                 	db	65
   358  0059F9  00                 	db	0
   359  0059FA  00                 	db	0
   360  0059FB  41                 	db	65
   361  0059FC  22                 	db	34
   362  0059FD  1C                 	db	28
   363  0059FE  00                 	db	0
   364  0059FF  2A                 	db	42
   365  005A00  1C                 	db	28
   366  005A01  7F                 	db	127
   367  005A02  1C                 	db	28
   368  005A03  2A                 	db	42
   369  005A04  08                 	db	8
   370  005A05  08                 	db	8
   371  005A06  3E                 	db	62
   372  005A07  08                 	db	8
   373  005A08  08                 	db	8
   374  005A09  00                 	db	0
   375  005A0A  80                 	db	128
   376  005A0B  70                 	db	112
   377  005A0C  30                 	db	48
   378  005A0D  00                 	db	0
   379  005A0E  08                 	db	8
   380  005A0F  08                 	db	8
   381  005A10  08                 	db	8
   382  005A11  08                 	db	8
   383  005A12  08                 	db	8
   384  005A13  00                 	db	0
   385  005A14  00                 	db	0
   386  005A15  60                 	db	96
   387  005A16  60                 	db	96
   388  005A17  00                 	db	0
   389  005A18  20                 	db	32
   390  005A19  10                 	db	16
   391  005A1A  08                 	db	8
   392  005A1B  04                 	db	4
   393  005A1C  02                 	db	2
   394  005A1D  3E                 	db	62
   395  005A1E  51                 	db	81
   396  005A1F  49                 	db	73
   397  005A20  45                 	db	69
   398  005A21  3E                 	db	62
   399  005A22  00                 	db	0
   400  005A23  42                 	db	66
   401  005A24  7F                 	db	127
   402  005A25  40                 	db	64
   403  005A26  00                 	db	0
   404  005A27  72                 	db	114
   405  005A28  49                 	db	73
   406  005A29  49                 	db	73
   407  005A2A  49                 	db	73
   408  005A2B  46                 	db	70
   409  005A2C  21                 	db	33
   410  005A2D  41                 	db	65
   411  005A2E  49                 	db	73
   412  005A2F  4D                 	db	77
   413  005A30  33                 	db	51
   414  005A31  18                 	db	24
   415  005A32  14                 	db	20
   416  005A33  12                 	db	18
   417  005A34  7F                 	db	127
   418  005A35  10                 	db	16
   419  005A36  27                 	db	39
   420  005A37  45                 	db	69
   421  005A38  45                 	db	69
   422  005A39  45                 	db	69
   423  005A3A  39                 	db	57
   424  005A3B  3C                 	db	60
   425  005A3C  4A                 	db	74
   426  005A3D  49                 	db	73
   427  005A3E  49                 	db	73
   428  005A3F  31                 	db	49
   429  005A40  41                 	db	65
   430  005A41  21                 	db	33
   431  005A42  11                 	db	17
   432  005A43  09                 	db	9
   433  005A44  07                 	db	7
   434  005A45  36                 	db	54
   435  005A46  49                 	db	73
   436  005A47  49                 	db	73
   437  005A48  49                 	db	73
   438  005A49  36                 	db	54
   439  005A4A  46                 	db	70
   440  005A4B  49                 	db	73
   441  005A4C  49                 	db	73
   442  005A4D  29                 	db	41
   443  005A4E  1E                 	db	30
   444  005A4F  00                 	db	0
   445  005A50  00                 	db	0
   446  005A51  14                 	db	20
   447  005A52  00                 	db	0
   448  005A53  00                 	db	0
   449  005A54  00                 	db	0
   450  005A55  40                 	db	64
   451  005A56  34                 	db	52
   452  005A57  00                 	db	0
   453  005A58  00                 	db	0
   454  005A59  00                 	db	0
   455  005A5A  08                 	db	8
   456  005A5B  14                 	db	20
   457  005A5C  22                 	db	34
   458  005A5D  41                 	db	65
   459  005A5E  14                 	db	20
   460  005A5F  14                 	db	20
   461  005A60  14                 	db	20
   462  005A61  14                 	db	20
   463  005A62  14                 	db	20
   464  005A63  00                 	db	0
   465  005A64  41                 	db	65
   466  005A65  22                 	db	34
   467  005A66  14                 	db	20
   468  005A67  08                 	db	8
   469  005A68  02                 	db	2
   470  005A69  01                 	db	1
   471  005A6A  59                 	db	89
   472  005A6B  09                 	db	9
   473  005A6C  06                 	db	6
   474  005A6D  3E                 	db	62
   475  005A6E  41                 	db	65
   476  005A6F  5D                 	db	93
   477  005A70  59                 	db	89
   478  005A71  4E                 	db	78
   479  005A72  7C                 	db	124
   480  005A73  12                 	db	18
   481  005A74  11                 	db	17
   482  005A75  12                 	db	18
   483  005A76  7C                 	db	124
   484  005A77  7F                 	db	127
   485  005A78  49                 	db	73
   486  005A79  49                 	db	73
   487  005A7A  49                 	db	73
   488  005A7B  36                 	db	54
   489  005A7C  3E                 	db	62
   490  005A7D  41                 	db	65
   491  005A7E  41                 	db	65
   492  005A7F  41                 	db	65
   493  005A80  22                 	db	34
   494  005A81  7F                 	db	127
   495  005A82  41                 	db	65
   496  005A83  41                 	db	65
   497  005A84  41                 	db	65
   498  005A85  3E                 	db	62
   499  005A86  7F                 	db	127
   500  005A87  49                 	db	73
   501  005A88  49                 	db	73
   502  005A89  49                 	db	73
   503  005A8A  41                 	db	65
   504  005A8B  7F                 	db	127
   505  005A8C  09                 	db	9
   506  005A8D  09                 	db	9
   507  005A8E  09                 	db	9
   508  005A8F  01                 	db	1
   509  005A90  3E                 	db	62
   510  005A91  41                 	db	65
   511  005A92  41                 	db	65
   512  005A93  51                 	db	81
   513  005A94  73                 	db	115
   514  005A95  7F                 	db	127
   515  005A96  08                 	db	8
   516  005A97  08                 	db	8
   517  005A98  08                 	db	8
   518  005A99  7F                 	db	127
   519  005A9A  00                 	db	0
   520  005A9B  41                 	db	65
   521  005A9C  7F                 	db	127
   522  005A9D  41                 	db	65
   523  005A9E  00                 	db	0
   524  005A9F  20                 	db	32
   525  005AA0  40                 	db	64
   526  005AA1  41                 	db	65
   527  005AA2  3F                 	db	63
   528  005AA3  01                 	db	1
   529  005AA4  7F                 	db	127
   530  005AA5  08                 	db	8
   531  005AA6  14                 	db	20
   532  005AA7  22                 	db	34
   533  005AA8  41                 	db	65
   534  005AA9  7F                 	db	127
   535  005AAA  40                 	db	64
   536  005AAB  40                 	db	64
   537  005AAC  40                 	db	64
   538  005AAD  40                 	db	64
   539  005AAE  7F                 	db	127
   540  005AAF  02                 	db	2
   541  005AB0  1C                 	db	28
   542  005AB1  02                 	db	2
   543  005AB2  7F                 	db	127
   544  005AB3  7F                 	db	127
   545  005AB4  04                 	db	4
   546  005AB5  08                 	db	8
   547  005AB6  10                 	db	16
   548  005AB7  7F                 	db	127
   549  005AB8  3E                 	db	62
   550  005AB9  41                 	db	65
   551  005ABA  41                 	db	65
   552  005ABB  41                 	db	65
   553  005ABC  3E                 	db	62
   554  005ABD  7F                 	db	127
   555  005ABE  09                 	db	9
   556  005ABF  09                 	db	9
   557  005AC0  09                 	db	9
   558  005AC1  06                 	db	6
   559  005AC2  3E                 	db	62
   560  005AC3  41                 	db	65
   561  005AC4  51                 	db	81
   562  005AC5  21                 	db	33
   563  005AC6  5E                 	db	94
   564  005AC7  7F                 	db	127
   565  005AC8  09                 	db	9
   566  005AC9  19                 	db	25
   567  005ACA  29                 	db	41
   568  005ACB  46                 	db	70
   569  005ACC  26                 	db	38
   570  005ACD  49                 	db	73
   571  005ACE  49                 	db	73
   572  005ACF  49                 	db	73
   573  005AD0  32                 	db	50
   574  005AD1  03                 	db	3
   575  005AD2  01                 	db	1
   576  005AD3  7F                 	db	127
   577  005AD4  01                 	db	1
   578  005AD5  03                 	db	3
   579  005AD6  3F                 	db	63
   580  005AD7  40                 	db	64
   581  005AD8  40                 	db	64
   582  005AD9  40                 	db	64
   583  005ADA  3F                 	db	63
   584  005ADB  1F                 	db	31
   585  005ADC  20                 	db	32
   586  005ADD  40                 	db	64
   587  005ADE  20                 	db	32
   588  005ADF  1F                 	db	31
   589  005AE0  3F                 	db	63
   590  005AE1  40                 	db	64
   591  005AE2  38                 	db	56
   592  005AE3  40                 	db	64
   593  005AE4  3F                 	db	63
   594  005AE5  63                 	db	99
   595  005AE6  14                 	db	20
   596  005AE7  08                 	db	8
   597  005AE8  14                 	db	20
   598  005AE9  63                 	db	99
   599  005AEA  03                 	db	3
   600  005AEB  04                 	db	4
   601  005AEC  78                 	db	120
   602  005AED  04                 	db	4
   603  005AEE  03                 	db	3
   604  005AEF  61                 	db	97
   605  005AF0  59                 	db	89
   606  005AF1  49                 	db	73
   607  005AF2  4D                 	db	77
   608  005AF3  43                 	db	67
   609  005AF4  00                 	db	0
   610  005AF5  7F                 	db	127
   611  005AF6  41                 	db	65
   612  005AF7  41                 	db	65
   613  005AF8  41                 	db	65
   614  005AF9  02                 	db	2
   615  005AFA  04                 	db	4
   616  005AFB  08                 	db	8
   617  005AFC  10                 	db	16
   618  005AFD  20                 	db	32
   619  005AFE  00                 	db	0
   620  005AFF  41                 	db	65
   621  005B00  41                 	db	65
   622  005B01  41                 	db	65
   623  005B02  7F                 	db	127
   624  005B03  04                 	db	4
   625  005B04  02                 	db	2
   626  005B05  01                 	db	1
   627  005B06  02                 	db	2
   628  005B07  04                 	db	4
   629  005B08  40                 	db	64
   630  005B09  40                 	db	64
   631  005B0A  40                 	db	64
   632  005B0B  40                 	db	64
   633  005B0C  40                 	db	64
   634  005B0D  00                 	db	0
   635  005B0E  03                 	db	3
   636  005B0F  07                 	db	7
   637  005B10  08                 	db	8
   638  005B11  00                 	db	0
   639  005B12  20                 	db	32
   640  005B13  54                 	db	84
   641  005B14  54                 	db	84
   642  005B15  78                 	db	120
   643  005B16  40                 	db	64
   644  005B17  7F                 	db	127
   645  005B18  28                 	db	40
   646  005B19  44                 	db	68
   647  005B1A  44                 	db	68
   648  005B1B  38                 	db	56
   649  005B1C  38                 	db	56
   650  005B1D  44                 	db	68
   651  005B1E  44                 	db	68
   652  005B1F  44                 	db	68
   653  005B20  28                 	db	40
   654  005B21  38                 	db	56
   655  005B22  44                 	db	68
   656  005B23  44                 	db	68
   657  005B24  28                 	db	40
   658  005B25  7F                 	db	127
   659  005B26  38                 	db	56
   660  005B27  54                 	db	84
   661  005B28  54                 	db	84
   662  005B29  54                 	db	84
   663  005B2A  18                 	db	24
   664  005B2B  00                 	db	0
   665  005B2C  08                 	db	8
   666  005B2D  7E                 	db	126
   667  005B2E  09                 	db	9
   668  005B2F  02                 	db	2
   669  005B30  18                 	db	24
   670  005B31  A4                 	db	164
   671  005B32  A4                 	db	164
   672  005B33  9C                 	db	156
   673  005B34  78                 	db	120
   674  005B35  7F                 	db	127
   675  005B36  08                 	db	8
   676  005B37  04                 	db	4
   677  005B38  04                 	db	4
   678  005B39  78                 	db	120
   679  005B3A  00                 	db	0
   680  005B3B  44                 	db	68
   681  005B3C  7D                 	db	125
   682  005B3D  40                 	db	64
   683  005B3E  00                 	db	0
   684  005B3F  20                 	db	32
   685  005B40  40                 	db	64
   686  005B41  40                 	db	64
   687  005B42  3D                 	db	61
   688  005B43  00                 	db	0
   689  005B44  7F                 	db	127
   690  005B45  10                 	db	16
   691  005B46  28                 	db	40
   692  005B47  44                 	db	68
   693  005B48  00                 	db	0
   694  005B49  00                 	db	0
   695  005B4A  41                 	db	65
   696  005B4B  7F                 	db	127
   697  005B4C  40                 	db	64
   698  005B4D  00                 	db	0
   699  005B4E  7C                 	db	124
   700  005B4F  04                 	db	4
   701  005B50  78                 	db	120
   702  005B51  04                 	db	4
   703  005B52  78                 	db	120
   704  005B53  7C                 	db	124
   705  005B54  08                 	db	8
   706  005B55  04                 	db	4
   707  005B56  04                 	db	4
   708  005B57  78                 	db	120
   709  005B58  38                 	db	56
   710  005B59  44                 	db	68
   711  005B5A  44                 	db	68
   712  005B5B  44                 	db	68
   713  005B5C  38                 	db	56
   714  005B5D  FC                 	db	252
   715  005B5E  18                 	db	24
   716  005B5F  24                 	db	36
   717  005B60  24                 	db	36
   718  005B61  18                 	db	24
   719  005B62  18                 	db	24
   720  005B63  24                 	db	36
   721  005B64  24                 	db	36
   722  005B65  18                 	db	24
   723  005B66  FC                 	db	252
   724  005B67  7C                 	db	124
   725  005B68  08                 	db	8
   726  005B69  04                 	db	4
   727  005B6A  04                 	db	4
   728  005B6B  08                 	db	8
   729  005B6C  48                 	db	72
   730  005B6D  54                 	db	84
   731  005B6E  54                 	db	84
   732  005B6F  54                 	db	84
   733  005B70  24                 	db	36
   734  005B71  04                 	db	4
   735  005B72  04                 	db	4
   736  005B73  3F                 	db	63
   737  005B74  44                 	db	68
   738  005B75  24                 	db	36
   739  005B76  3C                 	db	60
   740  005B77  40                 	db	64
   741  005B78  40                 	db	64
   742  005B79  20                 	db	32
   743  005B7A  7C                 	db	124
   744  005B7B  1C                 	db	28
   745  005B7C  20                 	db	32
   746  005B7D  40                 	db	64
   747  005B7E  20                 	db	32
   748  005B7F  1C                 	db	28
   749  005B80  3C                 	db	60
   750  005B81  40                 	db	64
   751  005B82  30                 	db	48
   752  005B83  40                 	db	64
   753  005B84  3C                 	db	60
   754  005B85  44                 	db	68
   755  005B86  28                 	db	40
   756  005B87  10                 	db	16
   757  005B88  28                 	db	40
   758  005B89  44                 	db	68
   759  005B8A  4C                 	db	76
   760  005B8B  90                 	db	144
   761  005B8C  90                 	db	144
   762  005B8D  90                 	db	144
   763  005B8E  7C                 	db	124
   764  005B8F  44                 	db	68
   765  005B90  64                 	db	100
   766  005B91  54                 	db	84
   767  005B92  4C                 	db	76
   768  005B93  44                 	db	68
   769  005B94  00                 	db	0
   770  005B95  08                 	db	8
   771  005B96  36                 	db	54
   772  005B97  41                 	db	65
   773  005B98  00                 	db	0
   774  005B99  00                 	db	0
   775  005B9A  00                 	db	0
   776  005B9B  77                 	db	119
   777  005B9C  00                 	db	0
   778  005B9D  00                 	db	0
   779  005B9E  00                 	db	0
   780  005B9F  41                 	db	65
   781  005BA0  36                 	db	54
   782  005BA1  08                 	db	8
   783  005BA2  00                 	db	0
   784  005BA3  02                 	db	2
   785  005BA4  01                 	db	1
   786  005BA5  02                 	db	2
   787  005BA6  04                 	db	4
   788  005BA7  02                 	db	2
   789  005BA8  3C                 	db	60
   790  005BA9  26                 	db	38
   791  005BAA  23                 	db	35
   792  005BAB  26                 	db	38
   793  005BAC  3C                 	db	60
   794  005BAD  1E                 	db	30
   795  005BAE  A1                 	db	161
   796  005BAF  A1                 	db	161
   797  005BB0  61                 	db	97
   798  005BB1  12                 	db	18
   799  005BB2  3A                 	db	58
   800  005BB3  40                 	db	64
   801  005BB4  40                 	db	64
   802  005BB5  20                 	db	32
   803  005BB6  7A                 	db	122
   804  005BB7  38                 	db	56
   805  005BB8  54                 	db	84
   806  005BB9  54                 	db	84
   807  005BBA  55                 	db	85
   808  005BBB  59                 	db	89
   809  005BBC  21                 	db	33
   810  005BBD  55                 	db	85
   811  005BBE  55                 	db	85
   812  005BBF  79                 	db	121
   813  005BC0  41                 	db	65
   814  005BC1  22                 	db	34
   815  005BC2  54                 	db	84
   816  005BC3  54                 	db	84
   817  005BC4  78                 	db	120
   818  005BC5  42                 	db	66
   819  005BC6  21                 	db	33
   820  005BC7  55                 	db	85
   821  005BC8  54                 	db	84
   822  005BC9  78                 	db	120
   823  005BCA  40                 	db	64
   824  005BCB  20                 	db	32
   825  005BCC  54                 	db	84
   826  005BCD  55                 	db	85
   827  005BCE  79                 	db	121
   828  005BCF  40                 	db	64
   829  005BD0  0C                 	db	12
   830  005BD1  1E                 	db	30
   831  005BD2  52                 	db	82
   832  005BD3  72                 	db	114
   833  005BD4  12                 	db	18
   834  005BD5  39                 	db	57
   835  005BD6  55                 	db	85
   836  005BD7  55                 	db	85
   837  005BD8  55                 	db	85
   838  005BD9  59                 	db	89
   839  005BDA  39                 	db	57
   840  005BDB  54                 	db	84
   841  005BDC  54                 	db	84
   842  005BDD  54                 	db	84
   843  005BDE  59                 	db	89
   844  005BDF  39                 	db	57
   845  005BE0  55                 	db	85
   846  005BE1  54                 	db	84
   847  005BE2  54                 	db	84
   848  005BE3  58                 	db	88
   849  005BE4  00                 	db	0
   850  005BE5  00                 	db	0
   851  005BE6  45                 	db	69
   852  005BE7  7C                 	db	124
   853  005BE8  41                 	db	65
   854  005BE9  00                 	db	0
   855  005BEA  02                 	db	2
   856  005BEB  45                 	db	69
   857  005BEC  7D                 	db	125
   858  005BED  42                 	db	66
   859  005BEE  00                 	db	0
   860  005BEF  01                 	db	1
   861  005BF0  45                 	db	69
   862  005BF1  7C                 	db	124
   863  005BF2  40                 	db	64
   864  005BF3  7D                 	db	125
   865  005BF4  12                 	db	18
   866  005BF5  11                 	db	17
   867  005BF6  12                 	db	18
   868  005BF7  7D                 	db	125
   869  005BF8  F0                 	db	240
   870  005BF9  28                 	db	40
   871  005BFA  25                 	db	37
   872  005BFB  28                 	db	40
   873  005BFC  F0                 	db	240
   874  005BFD  7C                 	db	124
   875  005BFE  54                 	db	84
   876  005BFF  55                 	db	85
   877  005C00  45                 	db	69
   878  005C01  00                 	db	0
   879  005C02  20                 	db	32
   880  005C03  54                 	db	84
   881  005C04  54                 	db	84
   882  005C05  7C                 	db	124
   883  005C06  54                 	db	84
   884  005C07  7C                 	db	124
   885  005C08  0A                 	db	10
   886  005C09  09                 	db	9
   887  005C0A  7F                 	db	127
   888  005C0B  49                 	db	73
   889  005C0C  32                 	db	50
   890  005C0D  49                 	db	73
   891  005C0E  49                 	db	73
   892  005C0F  49                 	db	73
   893  005C10  32                 	db	50
   894  005C11  3A                 	db	58
   895  005C12  44                 	db	68
   896  005C13  44                 	db	68
   897  005C14  44                 	db	68
   898  005C15  3A                 	db	58
   899  005C16  32                 	db	50
   900  005C17  4A                 	db	74
   901  005C18  48                 	db	72
   902  005C19  48                 	db	72
   903  005C1A  30                 	db	48
   904  005C1B  3A                 	db	58
   905  005C1C  41                 	db	65
   906  005C1D  41                 	db	65
   907  005C1E  21                 	db	33
   908  005C1F  7A                 	db	122
   909  005C20  3A                 	db	58
   910  005C21  42                 	db	66
   911  005C22  40                 	db	64
   912  005C23  20                 	db	32
   913  005C24  78                 	db	120
   914  005C25  00                 	db	0
   915  005C26  9D                 	db	157
   916  005C27  A0                 	db	160
   917  005C28  A0                 	db	160
   918  005C29  7D                 	db	125
   919  005C2A  3D                 	db	61
   920  005C2B  42                 	db	66
   921  005C2C  42                 	db	66
   922  005C2D  42                 	db	66
   923  005C2E  3D                 	db	61
   924  005C2F  3D                 	db	61
   925  005C30  40                 	db	64
   926  005C31  40                 	db	64
   927  005C32  40                 	db	64
   928  005C33  3D                 	db	61
   929  005C34  3C                 	db	60
   930  005C35  24                 	db	36
   931  005C36  FF                 	db	255
   932  005C37  24                 	db	36
   933  005C38  24                 	db	36
   934  005C39  48                 	db	72
   935  005C3A  7E                 	db	126
   936  005C3B  49                 	db	73
   937  005C3C  43                 	db	67
   938  005C3D  66                 	db	102
   939  005C3E  2B                 	db	43
   940  005C3F  2F                 	db	47
   941  005C40  FC                 	db	252
   942  005C41  2F                 	db	47
   943  005C42  2B                 	db	43
   944  005C43  FF                 	db	255
   945  005C44  09                 	db	9
   946  005C45  29                 	db	41
   947  005C46  F6                 	db	246
   948  005C47  20                 	db	32
   949  005C48  C0                 	db	192
   950  005C49  88                 	db	136
   951  005C4A  7E                 	db	126
   952  005C4B  09                 	db	9
   953  005C4C  03                 	db	3
   954  005C4D  20                 	db	32
   955  005C4E  54                 	db	84
   956  005C4F  54                 	db	84
   957  005C50  79                 	db	121
   958  005C51  41                 	db	65
   959  005C52  00                 	db	0
   960  005C53  00                 	db	0
   961  005C54  44                 	db	68
   962  005C55  7D                 	db	125
   963  005C56  41                 	db	65
   964  005C57  30                 	db	48
   965  005C58  48                 	db	72
   966  005C59  48                 	db	72
   967  005C5A  4A                 	db	74
   968  005C5B  32                 	db	50
   969  005C5C  38                 	db	56
   970  005C5D  40                 	db	64
   971  005C5E  40                 	db	64
   972  005C5F  22                 	db	34
   973  005C60  7A                 	db	122
   974  005C61  00                 	db	0
   975  005C62  7A                 	db	122
   976  005C63  0A                 	db	10
   977  005C64  0A                 	db	10
   978  005C65  72                 	db	114
   979  005C66  7D                 	db	125
   980  005C67  0D                 	db	13
   981  005C68  19                 	db	25
   982  005C69  31                 	db	49
   983  005C6A  7D                 	db	125
   984  005C6B  26                 	db	38
   985  005C6C  29                 	db	41
   986  005C6D  29                 	db	41
   987  005C6E  2F                 	db	47
   988  005C6F  28                 	db	40
   989  005C70  26                 	db	38
   990  005C71  29                 	db	41
   991  005C72  29                 	db	41
   992  005C73  29                 	db	41
   993  005C74  26                 	db	38
   994  005C75  30                 	db	48
   995  005C76  48                 	db	72
   996  005C77  4D                 	db	77
   997  005C78  40                 	db	64
   998  005C79  20                 	db	32
   999  005C7A  38                 	db	56
  1000  005C7B  08                 	db	8
  1001  005C7C  08                 	db	8
  1002  005C7D  08                 	db	8
  1003  005C7E  08                 	db	8
  1004  005C7F  08                 	db	8
  1005  005C80  08                 	db	8
  1006  005C81  08                 	db	8
  1007  005C82  08                 	db	8
  1008  005C83  38                 	db	56
  1009  005C84  2F                 	db	47
  1010  005C85  10                 	db	16
  1011  005C86  C8                 	db	200
  1012  005C87  AC                 	db	172
  1013  005C88  BA                 	db	186
  1014  005C89  2F                 	db	47
  1015  005C8A  10                 	db	16
  1016  005C8B  28                 	db	40
  1017  005C8C  34                 	db	52
  1018  005C8D  FA                 	db	250
  1019  005C8E  00                 	db	0
  1020  005C8F  00                 	db	0
  1021  005C90  7B                 	db	123
  1022  005C91  00                 	db	0
  1023  005C92  00                 	db	0
  1024  005C93  08                 	db	8
  1025  005C94  14                 	db	20
  1026  005C95  2A                 	db	42
  1027  005C96  14                 	db	20
  1028  005C97  22                 	db	34
  1029  005C98  22                 	db	34
  1030  005C99  14                 	db	20
  1031  005C9A  2A                 	db	42
  1032  005C9B  14                 	db	20
  1033  005C9C  08                 	db	8
  1034  005C9D  55                 	db	85
  1035  005C9E  00                 	db	0
  1036  005C9F  55                 	db	85
  1037  005CA0  00                 	db	0
  1038  005CA1  55                 	db	85
  1039  005CA2  AA                 	db	170
  1040  005CA3  55                 	db	85
  1041  005CA4  AA                 	db	170
  1042  005CA5  55                 	db	85
  1043  005CA6  AA                 	db	170
  1044  005CA7  FF                 	db	255
  1045  005CA8  55                 	db	85
  1046  005CA9  FF                 	db	255
  1047  005CAA  55                 	db	85
  1048  005CAB  FF                 	db	255
  1049  005CAC  00                 	db	0
  1050  005CAD  00                 	db	0
  1051  005CAE  00                 	db	0
  1052  005CAF  FF                 	db	255
  1053  005CB0  00                 	db	0
  1054  005CB1  10                 	db	16
  1055  005CB2  10                 	db	16
  1056  005CB3  10                 	db	16
  1057  005CB4  FF                 	db	255
  1058  005CB5  00                 	db	0
  1059  005CB6  14                 	db	20
  1060  005CB7  14                 	db	20
  1061  005CB8  14                 	db	20
  1062  005CB9  FF                 	db	255
  1063  005CBA  00                 	db	0
  1064  005CBB  10                 	db	16
  1065  005CBC  10                 	db	16
  1066  005CBD  FF                 	db	255
  1067  005CBE  00                 	db	0
  1068  005CBF  FF                 	db	255
  1069  005CC0  10                 	db	16
  1070  005CC1  10                 	db	16
  1071  005CC2  F0                 	db	240
  1072  005CC3  10                 	db	16
  1073  005CC4  F0                 	db	240
  1074  005CC5  14                 	db	20
  1075  005CC6  14                 	db	20
  1076  005CC7  14                 	db	20
  1077  005CC8  FC                 	db	252
  1078  005CC9  00                 	db	0
  1079  005CCA  14                 	db	20
  1080  005CCB  14                 	db	20
  1081  005CCC  F7                 	db	247
  1082  005CCD  00                 	db	0
  1083  005CCE  FF                 	db	255
  1084  005CCF  00                 	db	0
  1085  005CD0  00                 	db	0
  1086  005CD1  FF                 	db	255
  1087  005CD2  00                 	db	0
  1088  005CD3  FF                 	db	255
  1089  005CD4  14                 	db	20
  1090  005CD5  14                 	db	20
  1091  005CD6  F4                 	db	244
  1092  005CD7  04                 	db	4
  1093  005CD8  FC                 	db	252
  1094  005CD9  14                 	db	20
  1095  005CDA  14                 	db	20
  1096  005CDB  17                 	db	23
  1097  005CDC  10                 	db	16
  1098  005CDD  1F                 	db	31
  1099  005CDE  10                 	db	16
  1100  005CDF  10                 	db	16
  1101  005CE0  1F                 	db	31
  1102  005CE1  10                 	db	16
  1103  005CE2  1F                 	db	31
  1104  005CE3  14                 	db	20
  1105  005CE4  14                 	db	20
  1106  005CE5  14                 	db	20
  1107  005CE6  1F                 	db	31
  1108  005CE7  00                 	db	0
  1109  005CE8  10                 	db	16
  1110  005CE9  10                 	db	16
  1111  005CEA  10                 	db	16
  1112  005CEB  F0                 	db	240
  1113  005CEC  00                 	db	0
  1114  005CED  00                 	db	0
  1115  005CEE  00                 	db	0
  1116  005CEF  00                 	db	0
  1117  005CF0  1F                 	db	31
  1118  005CF1  10                 	db	16
  1119  005CF2  10                 	db	16
  1120  005CF3  10                 	db	16
  1121  005CF4  10                 	db	16
  1122  005CF5  1F                 	db	31
  1123  005CF6  10                 	db	16
  1124  005CF7  10                 	db	16
  1125  005CF8  10                 	db	16
  1126  005CF9  10                 	db	16
  1127  005CFA  F0                 	db	240
  1128  005CFB  10                 	db	16
  1129  005CFC  00                 	db	0
  1130  005CFD  00                 	db	0
  1131  005CFE  00                 	db	0
  1132  005CFF  FF                 	db	255
  1133  005D00  10                 	db	16
  1134  005D01  10                 	db	16
  1135  005D02  10                 	db	16
  1136  005D03  10                 	db	16
  1137  005D04  10                 	db	16
  1138  005D05  10                 	db	16
  1139  005D06  10                 	db	16
  1140  005D07  10                 	db	16
  1141  005D08  10                 	db	16
  1142  005D09  FF                 	db	255
  1143  005D0A  10                 	db	16
  1144  005D0B  00                 	db	0
  1145  005D0C  00                 	db	0
  1146  005D0D  00                 	db	0
  1147  005D0E  FF                 	db	255
  1148  005D0F  14                 	db	20
  1149  005D10  00                 	db	0
  1150  005D11  00                 	db	0
  1151  005D12  FF                 	db	255
  1152  005D13  00                 	db	0
  1153  005D14  FF                 	db	255
  1154  005D15  00                 	db	0
  1155  005D16  00                 	db	0
  1156  005D17  1F                 	db	31
  1157  005D18  10                 	db	16
  1158  005D19  17                 	db	23
  1159  005D1A  00                 	db	0
  1160  005D1B  00                 	db	0
  1161  005D1C  FC                 	db	252
  1162  005D1D  04                 	db	4
  1163  005D1E  F4                 	db	244
  1164  005D1F  14                 	db	20
  1165  005D20  14                 	db	20
  1166  005D21  17                 	db	23
  1167  005D22  10                 	db	16
  1168  005D23  17                 	db	23
  1169  005D24  14                 	db	20
  1170  005D25  14                 	db	20
  1171  005D26  F4                 	db	244
  1172  005D27  04                 	db	4
  1173  005D28  F4                 	db	244
  1174  005D29  00                 	db	0
  1175  005D2A  00                 	db	0
  1176  005D2B  FF                 	db	255
  1177  005D2C  00                 	db	0
  1178  005D2D  F7                 	db	247
  1179  005D2E  14                 	db	20
  1180  005D2F  14                 	db	20
  1181  005D30  14                 	db	20
  1182  005D31  14                 	db	20
  1183  005D32  14                 	db	20
  1184  005D33  14                 	db	20
  1185  005D34  14                 	db	20
  1186  005D35  F7                 	db	247
  1187  005D36  00                 	db	0
  1188  005D37  F7                 	db	247
  1189  005D38  14                 	db	20
  1190  005D39  14                 	db	20
  1191  005D3A  14                 	db	20
  1192  005D3B  17                 	db	23
  1193  005D3C  14                 	db	20
  1194  005D3D  10                 	db	16
  1195  005D3E  10                 	db	16
  1196  005D3F  1F                 	db	31
  1197  005D40  10                 	db	16
  1198  005D41  1F                 	db	31
  1199  005D42  14                 	db	20
  1200  005D43  14                 	db	20
  1201  005D44  14                 	db	20
  1202  005D45  F4                 	db	244
  1203  005D46  14                 	db	20
  1204  005D47  10                 	db	16
  1205  005D48  10                 	db	16
  1206  005D49  F0                 	db	240
  1207  005D4A  10                 	db	16
  1208  005D4B  F0                 	db	240
  1209  005D4C  00                 	db	0
  1210  005D4D  00                 	db	0
  1211  005D4E  1F                 	db	31
  1212  005D4F  10                 	db	16
  1213  005D50  1F                 	db	31
  1214  005D51  00                 	db	0
  1215  005D52  00                 	db	0
  1216  005D53  00                 	db	0
  1217  005D54  1F                 	db	31
  1218  005D55  14                 	db	20
  1219  005D56  00                 	db	0
  1220  005D57  00                 	db	0
  1221  005D58  00                 	db	0
  1222  005D59  FC                 	db	252
  1223  005D5A  14                 	db	20
  1224  005D5B  00                 	db	0
  1225  005D5C  00                 	db	0
  1226  005D5D  F0                 	db	240
  1227  005D5E  10                 	db	16
  1228  005D5F  F0                 	db	240
  1229  005D60  10                 	db	16
  1230  005D61  10                 	db	16
  1231  005D62  FF                 	db	255
  1232  005D63  10                 	db	16
  1233  005D64  FF                 	db	255
  1234  005D65  14                 	db	20
  1235  005D66  14                 	db	20
  1236  005D67  14                 	db	20
  1237  005D68  FF                 	db	255
  1238  005D69  14                 	db	20
  1239  005D6A  10                 	db	16
  1240  005D6B  10                 	db	16
  1241  005D6C  10                 	db	16
  1242  005D6D  1F                 	db	31
  1243  005D6E  00                 	db	0
  1244  005D6F  00                 	db	0
  1245  005D70  00                 	db	0
  1246  005D71  00                 	db	0
  1247  005D72  F0                 	db	240
  1248  005D73  10                 	db	16
  1249  005D74  FF                 	db	255
  1250  005D75  FF                 	db	255
  1251  005D76  FF                 	db	255
  1252  005D77  FF                 	db	255
  1253  005D78  FF                 	db	255
  1254  005D79  F0                 	db	240
  1255  005D7A  F0                 	db	240
  1256  005D7B  F0                 	db	240
  1257  005D7C  F0                 	db	240
  1258  005D7D  F0                 	db	240
  1259  005D7E  FF                 	db	255
  1260  005D7F  FF                 	db	255
  1261  005D80  FF                 	db	255
  1262  005D81  00                 	db	0
  1263  005D82  00                 	db	0
  1264  005D83  00                 	db	0
  1265  005D84  00                 	db	0
  1266  005D85  00                 	db	0
  1267  005D86  FF                 	db	255
  1268  005D87  FF                 	db	255
  1269  005D88  0F                 	db	15
  1270  005D89  0F                 	db	15
  1271  005D8A  0F                 	db	15
  1272  005D8B  0F                 	db	15
  1273  005D8C  0F                 	db	15
  1274  005D8D  38                 	db	56
  1275  005D8E  44                 	db	68
  1276  005D8F  44                 	db	68
  1277  005D90  38                 	db	56
  1278  005D91  44                 	db	68
  1279  005D92  FC                 	db	252
  1280  005D93  4A                 	db	74
  1281  005D94  4A                 	db	74
  1282  005D95  4A                 	db	74
  1283  005D96  34                 	db	52
  1284  005D97  7E                 	db	126
  1285  005D98  02                 	db	2
  1286  005D99  02                 	db	2
  1287  005D9A  06                 	db	6
  1288  005D9B  06                 	db	6
  1289  005D9C  02                 	db	2
  1290  005D9D  7E                 	db	126
  1291  005D9E  02                 	db	2
  1292  005D9F  7E                 	db	126
  1293  005DA0  02                 	db	2
  1294  005DA1  63                 	db	99
  1295  005DA2  55                 	db	85
  1296  005DA3  49                 	db	73
  1297  005DA4  41                 	db	65
  1298  005DA5  63                 	db	99
  1299  005DA6  38                 	db	56
  1300  005DA7  44                 	db	68
  1301  005DA8  44                 	db	68
  1302  005DA9  3C                 	db	60
  1303  005DAA  04                 	db	4
  1304  005DAB  40                 	db	64
  1305  005DAC  7E                 	db	126
  1306  005DAD  20                 	db	32
  1307  005DAE  1E                 	db	30
  1308  005DAF  20                 	db	32
  1309  005DB0  06                 	db	6
  1310  005DB1  02                 	db	2
  1311  005DB2  7E                 	db	126
  1312  005DB3  02                 	db	2
  1313  005DB4  02                 	db	2
  1314  005DB5  99                 	db	153
  1315  005DB6  A5                 	db	165
  1316  005DB7  E7                 	db	231
  1317  005DB8  A5                 	db	165
  1318  005DB9  99                 	db	153
  1319  005DBA  1C                 	db	28
  1320  005DBB  2A                 	db	42
  1321  005DBC  49                 	db	73
  1322  005DBD  2A                 	db	42
  1323  005DBE  1C                 	db	28
  1324  005DBF  4C                 	db	76
  1325  005DC0  72                 	db	114
  1326  005DC1  01                 	db	1
  1327  005DC2  72                 	db	114
  1328  005DC3  4C                 	db	76
  1329  005DC4  30                 	db	48
  1330  005DC5  4A                 	db	74
  1331  005DC6  4D                 	db	77
  1332  005DC7  4D                 	db	77
  1333  005DC8  30                 	db	48
  1334  005DC9  30                 	db	48
  1335  005DCA  48                 	db	72
  1336  005DCB  78                 	db	120
  1337  005DCC  48                 	db	72
  1338  005DCD  30                 	db	48
  1339  005DCE  BC                 	db	188
  1340  005DCF  62                 	db	98
  1341  005DD0  5A                 	db	90
  1342  005DD1  46                 	db	70
  1343  005DD2  3D                 	db	61
  1344  005DD3  3E                 	db	62
  1345  005DD4  49                 	db	73
  1346  005DD5  49                 	db	73
  1347  005DD6  49                 	db	73
  1348  005DD7  00                 	db	0
  1349  005DD8  7E                 	db	126
  1350  005DD9  01                 	db	1
  1351  005DDA  01                 	db	1
  1352  005DDB  01                 	db	1
  1353  005DDC  7E                 	db	126
  1354  005DDD  2A                 	db	42
  1355  005DDE  2A                 	db	42
  1356  005DDF  2A                 	db	42
  1357  005DE0  2A                 	db	42
  1358  005DE1  2A                 	db	42
  1359  005DE2  44                 	db	68
  1360  005DE3  44                 	db	68
  1361  005DE4  5F                 	db	95
  1362  005DE5  44                 	db	68
  1363  005DE6  44                 	db	68
  1364  005DE7  40                 	db	64
  1365  005DE8  51                 	db	81
  1366  005DE9  4A                 	db	74
  1367  005DEA  44                 	db	68
  1368  005DEB  40                 	db	64
  1369  005DEC  40                 	db	64
  1370  005DED  44                 	db	68
  1371  005DEE  4A                 	db	74
  1372  005DEF  51                 	db	81
  1373  005DF0  40                 	db	64
  1374  005DF1  00                 	db	0
  1375  005DF2  00                 	db	0
  1376  005DF3  FF                 	db	255
  1377  005DF4  01                 	db	1
  1378  005DF5  03                 	db	3
  1379  005DF6  E0                 	db	224
  1380  005DF7  80                 	db	128
  1381  005DF8  FF                 	db	255
  1382  005DF9  00                 	db	0
  1383  005DFA  00                 	db	0
  1384  005DFB  08                 	db	8
  1385  005DFC  08                 	db	8
  1386  005DFD  6B                 	db	107
  1387  005DFE  6B                 	db	107
  1388  005DFF  08                 	db	8
  1389  005E00  36                 	db	54
  1390  005E01  12                 	db	18
  1391  005E02  36                 	db	54
  1392  005E03  24                 	db	36
  1393  005E04  36                 	db	54
  1394  005E05  06                 	db	6
  1395  005E06  0F                 	db	15
  1396  005E07  09                 	db	9
  1397  005E08  0F                 	db	15
  1398  005E09  06                 	db	6
  1399  005E0A  00                 	db	0
  1400  005E0B  00                 	db	0
  1401  005E0C  18                 	db	24
  1402  005E0D  18                 	db	24
  1403  005E0E  00                 	db	0
  1404  005E0F  00                 	db	0
  1405  005E10  00                 	db	0
  1406  005E11  10                 	db	16
  1407  005E12  10                 	db	16
  1408  005E13  00                 	db	0
  1409  005E14  30                 	db	48
  1410  005E15  40                 	db	64
  1411  005E16  FF                 	db	255
  1412  005E17  01                 	db	1
  1413  005E18  01                 	db	1
  1414  005E19  00                 	db	0
  1415  005E1A  1F                 	db	31
  1416  005E1B  01                 	db	1
  1417  005E1C  01                 	db	1
  1418  005E1D  1E                 	db	30
  1419  005E1E  00                 	db	0
  1420  005E1F  19                 	db	25
  1421  005E20  1D                 	db	29
  1422  005E21  17                 	db	23
  1423  005E22  12                 	db	18
  1424  005E23  00                 	db	0
  1425  005E24  3C                 	db	60
  1426  005E25  3C                 	db	60
  1427  005E26  3C                 	db	60
  1428  005E27  3C                 	db	60
  1429  005E28  00                 	db	0
  1430  005E29  00                 	db	0
  1431  005E2A  00                 	db	0
  1432  005E2B  00                 	db	0
  1433  005E2C  00                 	db	0
  1434  005E2D                     __end_of_TFT_Font:
  1435                           	opt callstack 0
  1436  005E2D                     _TFT_Init_Sequence:
  1437                           	opt callstack 0
  1438  005E2D  0702               	dw	1794
  1439  005E2F  3008               	dw	12296
  1440  005E31  0705               	dw	1797
  1441  005E33  0036               	dw	54
  1442  005E35  070B               	dw	1803
  1443  005E37  1213               	dw	4627
  1444  005E39  0001               	dw	1
  1445  005E3B  0100               	dw	256
  1446  005E3D  0002               	dw	2
  1447  005E3F  0100               	dw	256
  1448  005E41  0003               	dw	3
  1449  005E43  1030               	dw	4144
  1450  005E45  0008               	dw	8
  1451  005E47  0202               	dw	514
  1452  005E49  0009               	dw	9
  1453  005E4B  0000               	dw	0
  1454  005E4D  000C               	dw	12
  1455  005E4F  0000               	dw	0
  1456  005E51  000F               	dw	15
  1457  005E53  0000               	dw	0
  1458  005E55  0100               	dw	256
  1459  005E57  0000               	dw	0
  1460  005E59  0102               	dw	258
  1461  005E5B  0000               	dw	0
  1462  005E5D  0103               	dw	259
  1463  005E5F  0000               	dw	0
  1464  005E61  FFFF               	dw	65535
  1465  005E63  0001               	dw	1
  1466  005E65  0100               	dw	256
  1467  005E67  1190               	dw	4496
  1468  005E69  0101               	dw	257
  1469  005E6B  0227               	dw	551
  1470  005E6D  FFFF               	dw	65535
  1471  005E6F  0001               	dw	1
  1472  005E71  0102               	dw	258
  1473  005E73  01BD               	dw	445
  1474  005E75  FFFF               	dw	65535
  1475  005E77  0001               	dw	1
  1476  005E79  0103               	dw	259
  1477  005E7B  2D00               	dw	11520
  1478  005E7D  0281               	dw	641
  1479  005E7F  000E               	dw	14
  1480  005E81  FFFF               	dw	65535
  1481  005E83  0001               	dw	1
  1482  005E85  0200               	dw	512
  1483  005E87  0000               	dw	0
  1484  005E89  0201               	dw	513
  1485  005E8B  0000               	dw	0
  1486  005E8D  0300               	dw	768
  1487  005E8F  0000               	dw	0
  1488  005E91  0301               	dw	769
  1489  005E93  0707               	dw	1799
  1490  005E95  0302               	dw	770
  1491  005E97  0606               	dw	1542
  1492  005E99  0305               	dw	773
  1493  005E9B  0000               	dw	0
  1494  005E9D  0306               	dw	774
  1495  005E9F  0D00               	dw	3328
  1496  005EA1  0307               	dw	775
  1497  005EA3  0706               	dw	1798
  1498  005EA5  0308               	dw	776
  1499  005EA7  0005               	dw	5
  1500  005EA9  0309               	dw	777
  1501  005EAB  0007               	dw	7
  1502  005EAD  030C               	dw	780
  1503  005EAF  0000               	dw	0
  1504  005EB1  030D               	dw	781
  1505  005EB3  000A               	dw	10
  1506  005EB5  0210               	dw	528
  1507  005EB7  0000               	dw	0
  1508  005EB9  0211               	dw	529
  1509  005EBB  00EF               	dw	239
  1510  005EBD  0212               	dw	530
  1511  005EBF  0000               	dw	0
  1512  005EC1  0213               	dw	531
  1513  005EC3  018F               	dw	399
  1514  005EC5  0400               	dw	1024
  1515  005EC7  3100               	dw	12544
  1516  005EC9  0401               	dw	1025
  1517  005ECB  0001               	dw	1
  1518  005ECD  0404               	dw	1028
  1519  005ECF  0000               	dw	0
  1520  005ED1  0500               	dw	1280
  1521  005ED3  0000               	dw	0
  1522  005ED5  0501               	dw	1281
  1523  005ED7  0000               	dw	0
  1524  005ED9  0502               	dw	1282
  1525  005EDB  0000               	dw	0
  1526  005EDD  0503               	dw	1283
  1527  005EDF  0000               	dw	0
  1528  005EE1  0504               	dw	1284
  1529  005EE3  0000               	dw	0
  1530  005EE5  0505               	dw	1285
  1531  005EE7  0000               	dw	0
  1532  005EE9  0010               	dw	16
  1533  005EEB  0010               	dw	16
  1534  005EED  0011               	dw	17
  1535  005EEF  0600               	dw	1536
  1536  005EF1  0020               	dw	32
  1537  005EF3  0002               	dw	2
  1538  005EF5  0007               	dw	7
  1539  005EF7  0173               	dw	371
  1540  005EF9                     __end_of_TFT_Init_Sequence:
  1541                           	opt callstack 0
  1542  005EF9                     _dpowers:
  1543                           	opt callstack 0
  1544  005EF9  0001               	dw	1
  1545  005EFB  0000               	dw	0
  1546  005EFD  000A               	dw	10
  1547  005EFF  0000               	dw	0
  1548  005F01  0064               	dw	100
  1549  005F03  0000               	dw	0
  1550  005F05  03E8               	dw	1000
  1551  005F07  0000               	dw	0
  1552  005F09  2710               	dw	10000
  1553  005F0B  0000               	dw	0
  1554  005F0D  86A0               	dw	34464
  1555  005F0F  0001               	dw	1
  1556  005F11  4240               	dw	16960
  1557  005F13  000F               	dw	15
  1558  005F15  9680               	dw	38528
  1559  005F17  0098               	dw	152
  1560  005F19  E100               	dw	57600
  1561  005F1B  05F5               	dw	1525
  1562  005F1D  CA00               	dw	51712
  1563  005F1F  3B9A               	dw	15258
  1564  005F21                     __end_of_dpowers:
  1565                           	opt callstack 0
  1566  005F21                     _A6_BAUDRATES:
  1567                           	opt callstack 0
  1568  005F21  2580               	dw	9600
  1569  005F23  0000               	dw	0
  1570  005F25  E100               	dw	57600
  1571  005F27  0000               	dw	0
  1572  005F29  C200               	dw	49664
  1573  005F2B  0001               	dw	1
  1574  005F2D                     __end_of_A6_BAUDRATES:
  1575                           	opt callstack 0
  1576  005F2D                     _ECG_ICON_HEART:
  1577                           	opt callstack 0
  1578  005F2D  14                 	db	20
  1579  005F2E  14                 	db	20
  1580  005F2F  00                 	db	0
  1581  005F30  00                 	db	0
  1582  005F31  00                 	db	0
  1583  005F32  00                 	db	0
  1584  005F33  00                 	db	0
  1585  005F34  00                 	db	0
  1586  005F35  F8                 	db	248
  1587  005F36  F0                 	db	240
  1588  005F37  01                 	db	1
  1589  005F38  FC                 	db	252
  1590  005F39  F9                 	db	249
  1591  005F3A  03                 	db	3
  1592  005F3B  FC                 	db	252
  1593  005F3C  FF                 	db	255
  1594  005F3D  03                 	db	3
  1595  005F3E  FE                 	db	254
  1596  005F3F  FF                 	db	255
  1597  005F40  07                 	db	7
  1598  005F41  FE                 	db	254
  1599  005F42  FF                 	db	255
  1600  005F43  07                 	db	7
  1601  005F44  FE                 	db	254
  1602  005F45  FF                 	db	255
  1603  005F46  07                 	db	7
  1604  005F47  FE                 	db	254
  1605  005F48  FF                 	db	255
  1606  005F49  07                 	db	7
  1607  005F4A  FC                 	db	252
  1608  005F4B  FF                 	db	255
  1609  005F4C  03                 	db	3
  1610  005F4D  FC                 	db	252
  1611  005F4E  FF                 	db	255
  1612  005F4F  03                 	db	3
  1613  005F50  F8                 	db	248
  1614  005F51  FF                 	db	255
  1615  005F52  01                 	db	1
  1616  005F53  F0                 	db	240
  1617  005F54  FF                 	db	255
  1618  005F55  00                 	db	0
  1619  005F56  E0                 	db	224
  1620  005F57  7F                 	db	127
  1621  005F58  00                 	db	0
  1622  005F59  C0                 	db	192
  1623  005F5A  3F                 	db	63
  1624  005F5B  00                 	db	0
  1625  005F5C  80                 	db	128
  1626  005F5D  1F                 	db	31
  1627  005F5E  00                 	db	0
  1628  005F5F  00                 	db	0
  1629  005F60  0F                 	db	15
  1630  005F61  00                 	db	0
  1631  005F62  00                 	db	0
  1632  005F63  06                 	db	6
  1633  005F64  00                 	db	0
  1634  005F65  00                 	db	0
  1635  005F66  00                 	db	0
  1636  005F67  00                 	db	0
  1637  005F68  00                 	db	0
  1638  005F69  00                 	db	0
  1639  005F6A  00                 	db	0
  1640  005F6B                     __end_of_ECG_ICON_HEART:
  1641                           	opt callstack 0
  1642  0000                     _RCREG	set	4014
  1643  0000                     _TXREG	set	4013
  1644  0000                     _SPBRG	set	4015
  1645  0000                     _SPBRGH	set	4016
  1646  0000                     _BAUDCONbits	set	4024
  1647  0000                     _RCSTAbits	set	4011
  1648  0000                     _TXSTAbits	set	4012
  1649  0000                     _ADRESL	set	4035
  1650  0000                     _ADRESH	set	4036
  1651  0000                     _PORTAbits	set	3968
  1652  0000                     _PORTB	set	3969
  1653  0000                     _PORTCbits	set	3970
  1654  0000                     _TMR3L	set	4018
  1655  0000                     _TMR3H	set	4019
  1656  0000                     _T3CONbits	set	4017
  1657  0000                     _ADCON2bits	set	4032
  1658  0000                     _ADCON1bits	set	4033
  1659  0000                     _ADCON0bits	set	4034
  1660  0000                     _LATC	set	3979
  1661  0000                     _TRISC	set	3988
  1662  0000                     _LATB	set	3978
  1663  0000                     _TRISB	set	3987
  1664  0000                     _LATA	set	3977
  1665  0000                     _TRISA	set	3986
  1666  0000                     _UCFGbits	set	3951
  1667  0000                     _UCONbits	set	3949
  1668  0000                     _OSCTUNEbits	set	3995
  1669  0000                     _OSCCONbits	set	4051
  1670  0000                     _CREN	set	32092
  1671  0000                     _OERR	set	32089
  1672  0000                     _TXIF	set	31988
  1673  0000                     _GO_nDONE	set	32273
  1674  0000                     _RCIF	set	31989
  1675  0000                     _RCIE	set	31981
  1676  0000                     _TMR3IF	set	32009
  1677  0000                     _GIE	set	32663
  1678  0000                     _PEIE	set	32662
  1679  0000                     _TMR3IE	set	32001
  1680  0000                     _RBPU	set	32655
  1681  005F6B                     STR_3:
  1682                           
  1683                           ; BSR set to: 1
  1684  005F6B  2A                 	db	42
  1685  005F6C  2A                 	db	42
  1686  005F6D  2A                 	db	42
  1687  005F6E  20                 	db	32
  1688  005F6F  43                 	db	67	;'C'
  1689  005F70  6F                 	db	111	;'o'
  1690  005F71  6C                 	db	108	;'l'
  1691  005F72  6C                 	db	108	;'l'
  1692  005F73  65                 	db	101	;'e'
  1693  005F74  67                 	db	103	;'g'
  1694  005F75  61                 	db	97	;'a'
  1695  005F76  72                 	db	114	;'r'
  1696  005F77  65                 	db	101	;'e'
  1697  005F78  20                 	db	32
  1698  005F79  65                 	db	101	;'e'
  1699  005F7A  6C                 	db	108	;'l'
  1700  005F7B  65                 	db	101	;'e'
  1701  005F7C  74                 	db	116	;'t'
  1702  005F7D  74                 	db	116	;'t'
  1703  005F7E  72                 	db	114	;'r'
  1704  005F7F  6F                 	db	111	;'o'
  1705  005F80  64                 	db	100	;'d'
  1706  005F81  69                 	db	105	;'i'
  1707  005F82  20                 	db	32
  1708  005F83  2A                 	db	42
  1709  005F84  2A                 	db	42
  1710  005F85  2A                 	db	42
  1711  005F86  00                 	db	0
  1712  005F87                     STR_4:
  1713                           
  1714                           ; BSR set to: 1
  1715  005F87  41                 	db	65	;'A'
  1716  005F88  54                 	db	84	;'T'
  1717  005F89  2B                 	db	43
  1718  005F8A  43                 	db	67	;'C'
  1719  005F8B  4F                 	db	79	;'O'
  1720  005F8C  50                 	db	80	;'P'
  1721  005F8D  53                 	db	83	;'S'
  1722  005F8E  3D                 	db	61	;'='
  1723  005F8F  33                 	db	51	;'3'
  1724  005F90  2C                 	db	44
  1725  005F91  30                 	db	48	;'0'
  1726  005F92  0D                 	db	13
  1727  005F93  00                 	db	0
  1728  005F94                     STR_11:
  1729                           
  1730                           ; BSR set to: 1
  1731  005F94  41                 	db	65	;'A'
  1732  005F95  54                 	db	84	;'T'
  1733  005F96  2B                 	db	43
  1734  005F97  49                 	db	73	;'I'
  1735  005F98  50                 	db	80	;'P'
  1736  005F99  52                 	db	82	;'R'
  1737  005F9A  3D                 	db	61	;'='
  1738  005F9B  25                 	db	37
  1739  005F9C  6C                 	db	108	;'l'
  1740  005F9D  75                 	db	117	;'u'
  1741  005F9E  0D                 	db	13
  1742  005F9F  00                 	db	0
  1743  005FA0                     STR_2:
  1744                           
  1745                           ; BSR set to: 1
  1746  005FA0  46                 	db	70	;'F'
  1747  005FA1  72                 	db	114	;'r'
  1748  005FA2  65                 	db	101	;'e'
  1749  005FA3  71                 	db	113	;'q'
  1750  005FA4  75                 	db	117	;'u'
  1751  005FA5  65                 	db	101	;'e'
  1752  005FA6  6E                 	db	110	;'n'
  1753  005FA7  7A                 	db	122	;'z'
  1754  005FA8  61                 	db	97	;'a'
  1755  005FA9  3A                 	db	58	;':'
  1756  005FAA  00                 	db	0
  1757  005FAB                     
  1758                           ; BSR set to: 1
  1759  005FAB  41                 	db	65	;'A'
  1760  005FAC  54                 	db	84	;'T'
  1761  005FAD  2B                 	db	43
  1762  005FAE  43                 	db	67	;'C'
  1763  005FAF  52                 	db	82	;'R'
  1764  005FB0  45                 	db	69	;'E'
  1765  005FB1  47                 	db	71	;'G'
  1766  005FB2  3F                 	db	63	;'?'
  1767  005FB3  0D                 	db	13
  1768  005FB4  00                 	db	0
  1769  005FB5                     STR_25:
  1770                           
  1771                           ; BSR set to: 1
  1772  005FB5  41                 	db	65	;'A'
  1773  005FB6  54                 	db	84	;'T'
  1774  005FB7  2B                 	db	43
  1775  005FB8  43                 	db	67	;'C'
  1776  005FB9  4F                 	db	79	;'O'
  1777  005FBA  50                 	db	80	;'P'
  1778  005FBB  53                 	db	83	;'S'
  1779  005FBC  3F                 	db	63	;'?'
  1780  005FBD  0D                 	db	13
  1781  005FBE  00                 	db	0
  1782  005FBF                     STR_7:
  1783                           
  1784                           ; BSR set to: 1
  1785  005FBF  41                 	db	65	;'A'
  1786  005FC0  54                 	db	84	;'T'
  1787  005FC1  2B                 	db	43
  1788  005FC2  49                 	db	73	;'I'
  1789  005FC3  50                 	db	80	;'P'
  1790  005FC4  52                 	db	82	;'R'
  1791  005FC5  3F                 	db	63	;'?'
  1792  005FC6  0D                 	db	13
  1793  005FC7  00                 	db	0
  1794  005FC8                     STR_20:
  1795                           
  1796                           ; BSR set to: 1
  1797  005FC8  41                 	db	65	;'A'
  1798  005FC9  54                 	db	84	;'T'
  1799  005FCA  2B                 	db	43
  1800  005FCB  43                 	db	67	;'C'
  1801  005FCC  53                 	db	83	;'S'
  1802  005FCD  51                 	db	81	;'Q'
  1803  005FCE  0D                 	db	13
  1804  005FCF  00                 	db	0
  1805  005FD0                     STR_15:
  1806                           
  1807                           ; BSR set to: 1
  1808  005FD0  2B                 	db	43
  1809  005FD1  43                 	db	67	;'C'
  1810  005FD2  52                 	db	82	;'R'
  1811  005FD3  45                 	db	69	;'E'
  1812  005FD4  47                 	db	71	;'G'
  1813  005FD5  3A                 	db	58	;':'
  1814  005FD6  20                 	db	32
  1815  005FD7  00                 	db	0
  1816  005FD8                     STR_26:
  1817                           
  1818                           ; BSR set to: 1
  1819  005FD8  2B                 	db	43
  1820  005FD9  43                 	db	67	;'C'
  1821  005FDA  4F                 	db	79	;'O'
  1822  005FDB  50                 	db	80	;'P'
  1823  005FDC  53                 	db	83	;'S'
  1824  005FDD  3A                 	db	58	;':'
  1825  005FDE  20                 	db	32
  1826  005FDF  00                 	db	0
  1827  005FE0                     STR_21:
  1828                           
  1829                           ; BSR set to: 1
  1830  005FE0  2B                 	db	43
  1831  005FE1  43                 	db	67	;'C'
  1832  005FE2  53                 	db	83	;'S'
  1833  005FE3  51                 	db	81	;'Q'
  1834  005FE4  3A                 	db	58	;':'
  1835  005FE5  20                 	db	32
  1836  005FE6  00                 	db	0
  1837  005FE7                     STR_8:
  1838                           
  1839                           ; BSR set to: 1
  1840  005FE7  2B                 	db	43
  1841  005FE8  49                 	db	73	;'I'
  1842  005FE9  50                 	db	80	;'P'
  1843  005FEA  52                 	db	82	;'R'
  1844  005FEB  3A                 	db	58	;':'
  1845  005FEC  20                 	db	32
  1846  005FED  00                 	db	0
  1847  005FEE                     STR_5:
  1848                           
  1849                           ; BSR set to: 1
  1850  005FEE  41                 	db	65	;'A'
  1851  005FEF  54                 	db	84	;'T'
  1852  005FF0  0D                 	db	13
  1853  005FF1  00                 	db	0
  1854  005FF2                     STR_1:
  1855                           
  1856                           ; BSR set to: 1
  1857  005FF2  25                 	db	37
  1858  005FF3  33                 	db	51	;'3'
  1859  005FF4  64                 	db	100	;'d'
  1860  005FF5  00                 	db	0
  1861  005FF6                     STR_6:
  1862                           
  1863                           ; BSR set to: 1
  1864  005FF6  4F                 	db	79	;'O'
  1865  005FF7  4B                 	db	75	;'K'
  1866  005FF8  00                 	db	0
  1867  005FF9                     STR_32:
  1868                           
  1869                           ; BSR set to: 1
  1870  005FF9  22                 	db	34
  1871  005FFA  00                 	db	0
  1872  005FFB                     STR_18:
  1873                           
  1874                           ; BSR set to: 1
  1875  005FFB  2C                 	db	44
  1876  005FFC  00                 	db	0
  1877  005FFD                     STR_33:
  1878                           
  1879                           ; BSR set to: 1
  1880  005FFD  2D                 	db	45
  1881  005FFE  00                 	db	0
  1882  0000                     
  1883                           ; #config settings
  1884  005FFF  00                 	db	0	; dummy byte at the end
  1885  0000                     
  1886                           	psect	cinit
  1887  0027D4                     __pcinit:
  1888                           	opt callstack 0
  1889  0027D4                     start_initialization:
  1890                           	opt callstack 0
  1891  0027D4                     __initialization:
  1892                           	opt callstack 0
  1893                           
  1894                           ; Initialize objects allocated to BANK0 (6 bytes)
  1895                           ; load TBLPTR registers with __pidataBANK0
  1896  0027D4  0E80               	movlw	low __pidataBANK0
  1897  0027D6  6EF6               	movwf	tblptrl,c
  1898  0027D8  0E2F               	movlw	high __pidataBANK0
  1899  0027DA  6EF7               	movwf	tblptrh,c
  1900  0027DC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1901  0027DE  6EF8               	movwf	tblptru,c
  1902  0027E0  EE00  F0D4         	lfsr	0,__pdataBANK0
  1903  0027E4  EE10 F006          	lfsr	1,6
  1904  0027E8                     copy_data0:
  1905  0027E8  0009               	tblrd		*+
  1906  0027EA  CFF5 FFEE          	movff	tablat,postinc0
  1907  0027EE  50E5               	movf	postdec1,w,c
  1908  0027F0  50E1               	movf	fsr1l,w,c
  1909  0027F2  E1FA               	bnz	copy_data0
  1910                           
  1911                           ; Initialize objects allocated to COMRAM (2 bytes)
  1912                           ; load TBLPTR registers with __pidataCOMRAM
  1913  0027F4  0E90               	movlw	low __pidataCOMRAM
  1914  0027F6  6EF6               	movwf	tblptrl,c
  1915  0027F8  0E2F               	movlw	high __pidataCOMRAM
  1916  0027FA  6EF7               	movwf	tblptrh,c
  1917  0027FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1918  0027FE  6EF8               	movwf	tblptru,c
  1919  002800  0009               	tblrd		*+	;fetch initializer
  1920  002802  CFF5 F056          	movff	tablat,__pdataCOMRAM
  1921  002806  0009               	tblrd		*+	;fetch initializer
  1922  002808  CFF5 F057          	movff	tablat,__pdataCOMRAM+1
  1923                           
  1924                           ; Clear objects allocated to BANK1 (130 bytes)
  1925  00280C  EE01  F000         	lfsr	0,__pbssBANK1
  1926  002810  0E82               	movlw	130
  1927  002812                     clear_0:
  1928  002812  6AEE               	clrf	postinc0,c
  1929  002814  06E8               	decf	wreg,f,c
  1930  002816  E1FD               	bnz	clear_0
  1931                           
  1932                           ; Clear objects allocated to BANK0 (38 bytes)
  1933  002818  EE00  F0AE         	lfsr	0,__pbssBANK0
  1934  00281C  0E26               	movlw	38
  1935  00281E                     clear_1:
  1936  00281E  6AEE               	clrf	postinc0,c
  1937  002820  06E8               	decf	wreg,f,c
  1938  002822  E1FD               	bnz	clear_1
  1939                           
  1940                           ; Clear objects allocated to COMRAM (3 bytes)
  1941  002824  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1942  002826  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1943  002828  6A53               	clrf	__pbssCOMRAM& (0+255),c
  1944  00282A                     end_of_initialization:
  1945                           	opt callstack 0
  1946  00282A                     __end_of__initialization:
  1947                           	opt callstack 0
  1948  00282A  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1949  00282C  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1950  00282E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1951  002830  6EF8               	movwf	tblptru,c
  1952  002832  0100               	movlb	0
  1953  002834  EF95  F016         	goto	_main	;jump to C main() function
  1954                           
  1955                           	psect	bssCOMRAM
  1956  000053                     __pbssCOMRAM:
  1957                           	opt callstack 0
  1958  000053                     _TFT_ConsoleRow:
  1959                           	opt callstack 0
  1960  000053                     	ds	2
  1961  000055                     _TFT_Orientation:
  1962                           	opt callstack 0
  1963  000055                     	ds	1
  1964                           
  1965                           	psect	dataCOMRAM
  1966  000056                     __pdataCOMRAM:
  1967                           	opt callstack 0
  1968  000056                     _Ecg_X:
  1969                           	opt callstack 0
  1970  000056                     	ds	2
  1971                           
  1972                           	psect	bssBANK0
  1973  0000AE                     __pbssBANK0:
  1974                           	opt callstack 0
  1975  0000AE                     _ECG_HEARTBEAT:
  1976                           	opt callstack 0
  1977  0000AE                     	ds	13
  1978  0000BB                     _ECG_BUFFER:
  1979                           	opt callstack 0
  1980  0000BB                     	ds	5
  1981  0000C0                     _ECG_HEARTRATE:
  1982                           	opt callstack 0
  1983  0000C0                     	ds	4
  1984  0000C4                     _tmp1:
  1985                           	opt callstack 0
  1986  0000C4                     	ds	4
  1987  0000C8                     _A6_LAST_COMMAND_MILLISECONDS:
  1988                           	opt callstack 0
  1989  0000C8                     	ds	4
  1990  0000CC                     _MILLISECONDS:
  1991                           	opt callstack 0
  1992  0000CC                     	ds	4
  1993  0000D0                     strtok@sp:
  1994                           	opt callstack 0
  1995  0000D0                     	ds	2
  1996  0000D2                     _ECG_FLAGS:
  1997                           	opt callstack 0
  1998  0000D2                     	ds	2
  1999                           
  2000                           	psect	dataBANK0
  2001  0000D4                     __pdataBANK0:
  2002                           	opt callstack 0
  2003  0000D4                     _Ecg_Yold:
  2004                           	opt callstack 0
  2005  0000D4                     	ds	2
  2006  0000D6                     _Ecg_Y:
  2007                           	opt callstack 0
  2008  0000D6                     	ds	2
  2009  0000D8                     _Ecg_Xold:
  2010                           	opt callstack 0
  2011  0000D8                     	ds	2
  2012                           
  2013                           	psect	bssBANK1
  2014  000100                     __pbssBANK1:
  2015                           	opt callstack 0
  2016  000100                     _EUSART_RX:
  2017                           	opt callstack 0
  2018  000100                     	ds	130
  2019                           
  2020                           	psect	cstackBANK0
  2021  000060                     __pcstackBANK0:
  2022                           	opt callstack 0
  2023  000060                     TFT_DrawString@x:
  2024                           	opt callstack 0
  2025  000060                     A6_BaudRateSet@response:
  2026                           	opt callstack 0
  2027                           
  2028                           ; 32 bytes @ 0x0
  2029  000060                     	ds	2
  2030  000062                     TFT_DrawString@y:
  2031                           	opt callstack 0
  2032                           
  2033                           ; 2 bytes @ 0x2
  2034  000062                     	ds	2
  2035  000064                     TFT_DrawString@str:
  2036                           	opt callstack 0
  2037                           
  2038                           ; 2 bytes @ 0x4
  2039  000064                     	ds	2
  2040  000066                     TFT_DrawString@color:
  2041                           	opt callstack 0
  2042                           
  2043                           ; 2 bytes @ 0x6
  2044  000066                     	ds	2
  2045  000068                     TFT_DrawString@bg:
  2046                           	opt callstack 0
  2047                           
  2048                           ; 2 bytes @ 0x8
  2049  000068                     	ds	2
  2050  00006A                     TFT_DrawString@size:
  2051                           	opt callstack 0
  2052                           
  2053                           ; 1 bytes @ 0xA
  2054  00006A                     	ds	1
  2055  00006B                     ??_Ecg_ProcessHeartRate:
  2056                           
  2057                           ; 1 bytes @ 0xB
  2058  00006B                     	ds	12
  2059  000077                     Ecg_ProcessHeartRate@heartrateString:
  2060                           	opt callstack 0
  2061                           
  2062                           ; 5 bytes @ 0x17
  2063  000077                     	ds	5
  2064  00007C                     _Ecg_ProcessHeartRate$1017:
  2065                           	opt callstack 0
  2066                           
  2067                           ; 2 bytes @ 0x1C
  2068  00007C                     	ds	2
  2069  00007E                     _Ecg_ProcessHeartRate$1018:
  2070                           	opt callstack 0
  2071                           
  2072                           ; 2 bytes @ 0x1E
  2073  00007E                     	ds	2
  2074  000080                     Ecg_ProcessHeartRate@heartbeatAverage:
  2075                           	opt callstack 0
  2076  000080                     A6_BaudRateSet@request:
  2077                           	opt callstack 0
  2078                           
  2079                           ; 20 bytes @ 0x20
  2080  000080                     	ds	4
  2081  000084                     Ecg_ProcessHeartRate@heartrate:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 1 bytes @ 0x24
  2085  000084                     	ds	1
  2086  000085                     Ecg_ProcessHeartRate@jPrev:
  2087                           	opt callstack 0
  2088                           
  2089                           ; 1 bytes @ 0x25
  2090  000085                     	ds	1
  2091  000086                     Ecg_ProcessHeartRate@i:
  2092                           	opt callstack 0
  2093                           
  2094                           ; 1 bytes @ 0x26
  2095  000086                     	ds	1
  2096  000087                     Ecg_ProcessHeartRate@j:
  2097                           	opt callstack 0
  2098                           
  2099                           ; 1 bytes @ 0x27
  2100  000087                     	ds	1
  2101  000088                     loop@operator:
  2102                           	opt callstack 0
  2103                           
  2104                           ; 32 bytes @ 0x28
  2105  000088                     	ds	12
  2106  000094                     A6_BaudRateSet@currentBaudRate:
  2107                           	opt callstack 0
  2108                           
  2109                           ; 4 bytes @ 0x34
  2110  000094                     	ds	20
  2111  0000A8                     loop@RSSILevel:
  2112                           	opt callstack 0
  2113                           
  2114                           ; 1 bytes @ 0x48
  2115  0000A8                     	ds	1
  2116  0000A9                     loop@operatorX:
  2117                           	opt callstack 0
  2118                           
  2119                           ; 2 bytes @ 0x49
  2120  0000A9                     	ds	2
  2121  0000AB                     loop@operatorRSSIX:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 2 bytes @ 0x4B
  2125  0000AB                     	ds	2
  2126  0000AD                     loop@i:
  2127                           	opt callstack 0
  2128                           
  2129                           ; 1 bytes @ 0x4D
  2130  0000AD                     	ds	1
  2131                           
  2132                           	psect	cstackCOMRAM
  2133  000001                     __pcstackCOMRAM:
  2134                           	opt callstack 0
  2135  000001                     ??_Ecg_Interrupt:
  2136  000001                     ??_EUSART_RX_Interrupt:
  2137  000001                     
  2138                           ; 4 bytes @ 0x0
  2139  000001                     	ds	1
  2140  000002                     EUSART_RX_Interrupt@c:
  2141                           	opt callstack 0
  2142                           
  2143                           ; 1 bytes @ 0x1
  2144  000002                     	ds	1
  2145  000003                     ??_isr:
  2146                           
  2147                           ; 1 bytes @ 0x2
  2148  000003                     	ds	2
  2149  000005                     ??_init:
  2150  000005                     ??_TFT_Reset:
  2151  000005                     ??_Ecg_ProcessInterrupt:
  2152  000005                     ??_isdigit:
  2153  000005                     ?_TFT_GetWidth:
  2154                           	opt callstack 0
  2155  000005                     ?_abs:
  2156                           	opt callstack 0
  2157  000005                     ?_Ecg_CheckLeads:
  2158                           	opt callstack 0
  2159  000005                     ?_strlen:
  2160                           	opt callstack 0
  2161  000005                     ?_strcmp:
  2162                           	opt callstack 0
  2163  000005                     ?_strchr:
  2164                           	opt callstack 0
  2165  000005                     ?_TFT_GetHeight:
  2166                           	opt callstack 0
  2167  000005                     ?_Ecg_Read:
  2168                           	opt callstack 0
  2169  000005                     ?___wmul:
  2170                           	opt callstack 0
  2171  000005                     ?___awdiv:
  2172                           	opt callstack 0
  2173  000005                     ?___lwdiv:
  2174                           	opt callstack 0
  2175  000005                     ?___lmul:
  2176                           	opt callstack 0
  2177  000005                     ?___lldiv:
  2178                           	opt callstack 0
  2179  000005                     EUSART_TX_Char@c:
  2180                           	opt callstack 0
  2181  000005                     TFT_WriteRegister@reg:
  2182                           	opt callstack 0
  2183  000005                     EUSART_RX_AvailableData@timeout:
  2184                           	opt callstack 0
  2185  000005                     ___wmul@multiplier:
  2186                           	opt callstack 0
  2187  000005                     ___awdiv@dividend:
  2188                           	opt callstack 0
  2189  000005                     ___lwdiv@dividend:
  2190                           	opt callstack 0
  2191  000005                     abs@a:
  2192                           	opt callstack 0
  2193  000005                     memset@p1:
  2194                           	opt callstack 0
  2195  000005                     strcmp@s1:
  2196                           	opt callstack 0
  2197  000005                     strcpy@to:
  2198                           	opt callstack 0
  2199  000005                     strlen@s:
  2200                           	opt callstack 0
  2201  000005                     strchr@ptr:
  2202                           	opt callstack 0
  2203  000005                     sleepMS@ms:
  2204                           	opt callstack 0
  2205  000005                     ___lmul@multiplier:
  2206                           	opt callstack 0
  2207  000005                     ___lldiv@dividend:
  2208                           	opt callstack 0
  2209                           
  2210                           ; 4 bytes @ 0x4
  2211  000005                     	ds	1
  2212  000006                     _isdigit$1960:
  2213                           	opt callstack 0
  2214                           
  2215                           ; 1 bytes @ 0x5
  2216  000006                     	ds	1
  2217  000007                     ??_abs:
  2218  000007                     ??_Ecg_CheckLeads:
  2219  000007                     ??_EUSART_RX_AvailableData:
  2220  000007                     ??_Ecg_Read:
  2221  000007                     isdigit@c:
  2222                           	opt callstack 0
  2223  000007                     TFT_WriteRegister@data:
  2224                           	opt callstack 0
  2225  000007                     ___wmul@multiplicand:
  2226                           	opt callstack 0
  2227  000007                     ___awdiv@divisor:
  2228                           	opt callstack 0
  2229  000007                     ___lwdiv@divisor:
  2230                           	opt callstack 0
  2231  000007                     memset@c:
  2232                           	opt callstack 0
  2233  000007                     strcmp@s2:
  2234                           	opt callstack 0
  2235  000007                     strcpy@from:
  2236                           	opt callstack 0
  2237  000007                     strlen@cp:
  2238                           	opt callstack 0
  2239  000007                     strchr@chr:
  2240                           	opt callstack 0
  2241                           
  2242                           ; 2 bytes @ 0x6
  2243  000007                     	ds	1
  2244  000008                     Ecg_CheckLeads@leadsStatus:
  2245                           	opt callstack 0
  2246                           
  2247                           ; 1 bytes @ 0x7
  2248  000008                     	ds	1
  2249  000009                     ??_strcmp:
  2250  000009                     ??_strchr:
  2251  000009                     ?_strncmp:
  2252                           	opt callstack 0
  2253  000009                     TFT_WriteRegister@h:
  2254                           	opt callstack 0
  2255  000009                     ___awdiv@counter:
  2256                           	opt callstack 0
  2257  000009                     Ecg_Read@ecg:
  2258                           	opt callstack 0
  2259  000009                     EUSART_TX_String@str:
  2260                           	opt callstack 0
  2261  000009                     ___wmul@product:
  2262                           	opt callstack 0
  2263  000009                     ___lwdiv@quotient:
  2264                           	opt callstack 0
  2265  000009                     memset@n:
  2266                           	opt callstack 0
  2267  000009                     strcpy@cp:
  2268                           	opt callstack 0
  2269  000009                     strncmp@s1:
  2270                           	opt callstack 0
  2271  000009                     sleepMS@t:
  2272                           	opt callstack 0
  2273  000009                     ___lmul@multiplicand:
  2274                           	opt callstack 0
  2275  000009                     ___lldiv@divisor:
  2276                           	opt callstack 0
  2277                           
  2278                           ; 4 bytes @ 0x8
  2279  000009                     	ds	1
  2280  00000A                     TFT_WriteRegister@l:
  2281                           	opt callstack 0
  2282  00000A                     ___awdiv@sign:
  2283                           	opt callstack 0
  2284                           
  2285                           ; 1 bytes @ 0x9
  2286  00000A                     	ds	1
  2287  00000B                     ?_atoi:
  2288                           	opt callstack 0
  2289  00000B                     ?_strspn:
  2290                           	opt callstack 0
  2291  00000B                     ?_strcspn:
  2292                           	opt callstack 0
  2293  00000B                     TFT_WriteRegister@h_708:
  2294                           	opt callstack 0
  2295  00000B                     EUSART_TX_String@len:
  2296                           	opt callstack 0
  2297  00000B                     ___lwdiv@counter:
  2298                           	opt callstack 0
  2299  00000B                     strcmp@r:
  2300                           	opt callstack 0
  2301  00000B                     ___awdiv@quotient:
  2302                           	opt callstack 0
  2303  00000B                     atoi@s:
  2304                           	opt callstack 0
  2305  00000B                     memset@p:
  2306                           	opt callstack 0
  2307  00000B                     strcspn@s1:
  2308                           	opt callstack 0
  2309  00000B                     strncmp@s2:
  2310                           	opt callstack 0
  2311  00000B                     strspn@s1:
  2312                           	opt callstack 0
  2313  00000B                     EUSART_RX_AvailableData@t:
  2314                           	opt callstack 0
  2315                           
  2316                           ; 4 bytes @ 0xA
  2317  00000B                     	ds	1
  2318  00000C                     TFT_WriteRegister@l_709:
  2319                           	opt callstack 0
  2320                           
  2321                           ; 1 bytes @ 0xB
  2322  00000C                     	ds	1
  2323  00000D                     ??_atoi:
  2324  00000D                     TFT_SetAddrWindow@x1:
  2325                           	opt callstack 0
  2326  00000D                     TFT_DrawPixel@x:
  2327                           	opt callstack 0
  2328  00000D                     TFT_Flood@color:
  2329                           	opt callstack 0
  2330  00000D                     strcspn@s2:
  2331                           	opt callstack 0
  2332  00000D                     strncmp@len:
  2333                           	opt callstack 0
  2334  00000D                     strspn@s2:
  2335                           	opt callstack 0
  2336  00000D                     ___lmul@product:
  2337                           	opt callstack 0
  2338  00000D                     ___lldiv@quotient:
  2339                           	opt callstack 0
  2340                           
  2341                           ; 4 bytes @ 0xC
  2342  00000D                     	ds	2
  2343  00000F                     ??_strncmp:
  2344  00000F                     ??_strspn:
  2345  00000F                     ??_strcspn:
  2346  00000F                     atoi@sign:
  2347                           	opt callstack 0
  2348  00000F                     TFT_SetAddrWindow@y1:
  2349                           	opt callstack 0
  2350  00000F                     TFT_DrawPixel@y:
  2351                           	opt callstack 0
  2352  00000F                     EUSART_BufferGetChar@timeout:
  2353                           	opt callstack 0
  2354  00000F                     TFT_Flood@len:
  2355                           	opt callstack 0
  2356                           
  2357                           ; 4 bytes @ 0xE
  2358  00000F                     	ds	1
  2359  000010                     ?_strstr:
  2360                           	opt callstack 0
  2361  000010                     atoi@a:
  2362                           	opt callstack 0
  2363  000010                     strstr@s1:
  2364                           	opt callstack 0
  2365  000010                     strcspn@i:
  2366                           	opt callstack 0
  2367  000010                     strspn@i:
  2368                           	opt callstack 0
  2369                           
  2370                           ; 2 bytes @ 0xF
  2371  000010                     	ds	1
  2372  000011                     ?_atol:
  2373                           	opt callstack 0
  2374  000011                     ___lldiv@counter:
  2375                           	opt callstack 0
  2376  000011                     TFT_SetAddrWindow@x2:
  2377                           	opt callstack 0
  2378  000011                     TFT_DrawPixel@color:
  2379                           	opt callstack 0
  2380  000011                     A6_ReadLine@line:
  2381                           	opt callstack 0
  2382  000011                     atol@s:
  2383                           	opt callstack 0
  2384                           
  2385                           ; 2 bytes @ 0x10
  2386  000011                     	ds	1
  2387  000012                     ?_strtok:
  2388                           	opt callstack 0
  2389  000012                     ?___llmod:
  2390                           	opt callstack 0
  2391  000012                     strstr@s2:
  2392                           	opt callstack 0
  2393  000012                     strtok@s1:
  2394                           	opt callstack 0
  2395  000012                     EUSART_BaudRateSet@baudRate:
  2396                           	opt callstack 0
  2397  000012                     ___llmod@dividend:
  2398                           	opt callstack 0
  2399                           
  2400                           ; 4 bytes @ 0x11
  2401  000012                     	ds	1
  2402  000013                     ??_TFT_Flood:
  2403  000013                     A6_ReadLine@lineLen:
  2404                           	opt callstack 0
  2405  000013                     TFT_SetAddrWindow@y2:
  2406                           	opt callstack 0
  2407  000013                     TFT_DrawPixel@h:
  2408                           	opt callstack 0
  2409                           
  2410                           ; 2 bytes @ 0x12
  2411  000013                     	ds	1
  2412  000014                     A6_ReadLine@timeout:
  2413                           	opt callstack 0
  2414  000014                     strtok@s2:
  2415                           	opt callstack 0
  2416                           
  2417                           ; 2 bytes @ 0x13
  2418  000014                     	ds	1
  2419  000015                     ??_atol:
  2420  000015                     TFT_DrawPixel@v:
  2421                           	opt callstack 0
  2422                           
  2423                           ; 2 bytes @ 0x14
  2424  000015                     	ds	1
  2425  000016                     ??_EUSART_BaudRateSet:
  2426  000016                     A6_ReadLine@iResponse:
  2427                           	opt callstack 0
  2428  000016                     ___llmod@divisor:
  2429                           	opt callstack 0
  2430                           
  2431                           ; 4 bytes @ 0x15
  2432  000016                     	ds	1
  2433  000017                     A6_ReadLine@c:
  2434                           	opt callstack 0
  2435  000017                     TFT_DrawLine@x0:
  2436                           	opt callstack 0
  2437  000017                     TFT_Flood@blocks:
  2438                           	opt callstack 0
  2439  000017                     TFT_DrawBitmap@x:
  2440                           	opt callstack 0
  2441                           
  2442                           ; 2 bytes @ 0x16
  2443  000017                     	ds	1
  2444  000018                     A6_Command@command:
  2445                           	opt callstack 0
  2446                           
  2447                           ; 2 bytes @ 0x17
  2448  000018                     	ds	1
  2449  000019                     TFT_Flood@i:
  2450                           	opt callstack 0
  2451  000019                     atol@sign:
  2452                           	opt callstack 0
  2453  000019                     TFT_DrawLine@y0:
  2454                           	opt callstack 0
  2455  000019                     TFT_DrawBitmap@y:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x18
  2459  000019                     	ds	1
  2460  00001A                     TFT_Flood@color_hi:
  2461                           	opt callstack 0
  2462  00001A                     ___llmod@counter:
  2463                           	opt callstack 0
  2464  00001A                     A6_Command@timeout:
  2465                           	opt callstack 0
  2466  00001A                     EUSART_BaudRateSet@tmp:
  2467                           	opt callstack 0
  2468  00001A                     atol@a:
  2469                           	opt callstack 0
  2470                           
  2471                           ; 4 bytes @ 0x19
  2472  00001A                     	ds	1
  2473  00001B                     ?_sprintf:
  2474                           	opt callstack 0
  2475  00001B                     TFT_Flood@color_lo:
  2476                           	opt callstack 0
  2477  00001B                     TFT_DrawLine@x1:
  2478                           	opt callstack 0
  2479  00001B                     TFT_DrawBitmap@bitmap:
  2480                           	opt callstack 0
  2481  00001B                     sprintf@sp:
  2482                           	opt callstack 0
  2483                           
  2484                           ; 2 bytes @ 0x1A
  2485  00001B                     	ds	1
  2486  00001C                     TFT_FullScreen@color:
  2487                           	opt callstack 0
  2488  00001C                     A6_Command@response:
  2489                           	opt callstack 0
  2490                           
  2491                           ; 2 bytes @ 0x1B
  2492  00001C                     	ds	1
  2493  00001D                     TFT_DrawLine@y1:
  2494                           	opt callstack 0
  2495  00001D                     TFT_DrawBitmap@color:
  2496                           	opt callstack 0
  2497  00001D                     sprintf@f:
  2498                           	opt callstack 0
  2499                           
  2500                           ; 2 bytes @ 0x1C
  2501  00001D                     	ds	1
  2502  00001E                     A6_Command@responseLen:
  2503                           	opt callstack 0
  2504  00001E                     atol@c:
  2505                           	opt callstack 0
  2506  00001E                     TFT_OrientationSet@color:
  2507                           	opt callstack 0
  2508  00001E                     TFT_DrawFillRect@x:
  2509                           	opt callstack 0
  2510                           
  2511                           ; 2 bytes @ 0x1D
  2512  00001E                     	ds	1
  2513  00001F                     ??_TFT_DrawBitmap:
  2514  00001F                     ?_A6_BaudRateGet:
  2515                           	opt callstack 0
  2516  00001F                     TFT_DrawLine@color:
  2517                           	opt callstack 0
  2518  00001F                     A6_NetworkGetOperator@operator:
  2519                           	opt callstack 0
  2520  00001F                     A6_IsAlive@response:
  2521                           	opt callstack 0
  2522  00001F                     A6_NetworkGetRSSI@response:
  2523                           	opt callstack 0
  2524                           
  2525                           ; 32 bytes @ 0x1E
  2526  00001F                     	ds	1
  2527  000020                     TFT_OrientationSet@orientation:
  2528                           	opt callstack 0
  2529  000020                     TFT_DrawFillRect@y:
  2530                           	opt callstack 0
  2531                           
  2532                           ; 2 bytes @ 0x1F
  2533  000020                     	ds	1
  2534  000021                     ??_TFT_DrawLine:
  2535  000021                     A6_NetworkGetOperator@operatorLen:
  2536                           	opt callstack 0
  2537  000021                     TFT_Init@color:
  2538                           	opt callstack 0
  2539  000021                     TFT_DrawBitmap@j:
  2540                           	opt callstack 0
  2541                           
  2542                           ; 2 bytes @ 0x20
  2543  000021                     	ds	1
  2544  000022                     TFT_DrawFillRect@w:
  2545                           	opt callstack 0
  2546                           
  2547                           ; 2 bytes @ 0x21
  2548  000022                     	ds	1
  2549  000023                     ??_TFT_Init:
  2550  000023                     ??_sprintf:
  2551  000023                     TFT_DrawBitmap@w:
  2552                           	opt callstack 0
  2553  000023                     A6_NetworkGetOperator@operatorToken:
  2554                           	opt callstack 0
  2555  000023                     A6_BaudRateGet@response:
  2556                           	opt callstack 0
  2557                           
  2558                           ; 32 bytes @ 0x22
  2559  000023                     	ds	1
  2560  000024                     TFT_DrawBitmap@h:
  2561                           	opt callstack 0
  2562  000024                     TFT_DrawLine@t:
  2563                           	opt callstack 0
  2564  000024                     TFT_DrawFillRect@h:
  2565                           	opt callstack 0
  2566                           
  2567                           ; 2 bytes @ 0x23
  2568  000024                     	ds	1
  2569  000025                     TFT_DrawBitmap@byte:
  2570                           	opt callstack 0
  2571  000025                     TFT_Init@data:
  2572                           	opt callstack 0
  2573                           
  2574                           ; 2 bytes @ 0x24
  2575  000025                     	ds	1
  2576  000026                     TFT_DrawLine@t_767:
  2577                           	opt callstack 0
  2578  000026                     TFT_DrawFillRect@color:
  2579                           	opt callstack 0
  2580  000026                     TFT_DrawBitmap@i:
  2581                           	opt callstack 0
  2582                           
  2583                           ; 2 bytes @ 0x25
  2584  000026                     	ds	1
  2585  000027                     TFT_Init@initSequenceSize:
  2586                           	opt callstack 0
  2587  000027                     sprintf@prec:
  2588                           	opt callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x26
  2591  000027                     	ds	1
  2592  000028                     ??_TFT_DrawFillRect:
  2593  000028                     TFT_DrawLine@t_768:
  2594                           	opt callstack 0
  2595                           
  2596                           ; 2 bytes @ 0x27
  2597  000028                     	ds	1
  2598  000029                     TFT_Init@orientation:
  2599                           	opt callstack 0
  2600  000029                     sprintf@val:
  2601                           	opt callstack 0
  2602                           
  2603                           ; 4 bytes @ 0x28
  2604  000029                     	ds	1
  2605  00002A                     TFT_Init@cmd:
  2606                           	opt callstack 0
  2607  00002A                     TFT_DrawLine@t_769:
  2608                           	opt callstack 0
  2609                           
  2610                           ; 2 bytes @ 0x29
  2611  00002A                     	ds	2
  2612  00002C                     ??_Ecg_ProcessHeartbeat:
  2613  00002C                     TFT_Init@i:
  2614                           	opt callstack 0
  2615  00002C                     TFT_DrawLine@dy:
  2616                           	opt callstack 0
  2617                           
  2618                           ; 2 bytes @ 0x2B
  2619  00002C                     	ds	1
  2620  00002D                     sprintf@ap:
  2621                           	opt callstack 0
  2622                           
  2623                           ; 2 bytes @ 0x2C
  2624  00002D                     	ds	1
  2625  00002E                     TFT_DrawLine@ystep:
  2626                           	opt callstack 0
  2627  00002E                     Ecg_ProcessHeartbeat@ecgDeltaSum:
  2628                           	opt callstack 0
  2629                           
  2630                           ; 2 bytes @ 0x2D
  2631  00002E                     	ds	1
  2632  00002F                     sprintf@flag:
  2633                           	opt callstack 0
  2634                           
  2635                           ; 1 bytes @ 0x2E
  2636  00002F                     	ds	1
  2637  000030                     TFT_DrawLine@err:
  2638                           	opt callstack 0
  2639  000030                     Ecg_ProcessHeartbeat@ecgDeltaAbsSum:
  2640                           	opt callstack 0
  2641  000030                     sprintf@width:
  2642                           	opt callstack 0
  2643                           
  2644                           ; 2 bytes @ 0x2F
  2645  000030                     	ds	2
  2646  000032                     sprintf@c:
  2647                           	opt callstack 0
  2648  000032                     TFT_DrawLine@steep:
  2649                           	opt callstack 0
  2650  000032                     Ecg_ProcessHeartbeat@ecgDeltaDiff:
  2651                           	opt callstack 0
  2652                           
  2653                           ; 2 bytes @ 0x31
  2654  000032                     	ds	2
  2655  000034                     TFT_DrawLine@dx:
  2656                           	opt callstack 0
  2657  000034                     Ecg_ProcessHeartbeat@delta:
  2658                           	opt callstack 0
  2659                           
  2660                           ; 2 bytes @ 0x33
  2661  000034                     	ds	2
  2662  000036                     Ecg_ProcessHeartbeat@i:
  2663                           	opt callstack 0
  2664  000036                     TFT_DrawChar@x:
  2665                           	opt callstack 0
  2666  000036                     _Ecg_Draw$2248:
  2667                           	opt callstack 0
  2668                           
  2669                           ; 2 bytes @ 0x35
  2670  000036                     	ds	2
  2671  000038                     TFT_DrawChar@y:
  2672                           	opt callstack 0
  2673  000038                     Ecg_Draw@ecg:
  2674                           	opt callstack 0
  2675                           
  2676                           ; 2 bytes @ 0x37
  2677  000038                     	ds	2
  2678  00003A                     TFT_DrawChar@c:
  2679                           	opt callstack 0
  2680                           
  2681                           ; 1 bytes @ 0x39
  2682  00003A                     	ds	1
  2683  00003B                     TFT_DrawChar@color:
  2684                           	opt callstack 0
  2685                           
  2686                           ; 2 bytes @ 0x3A
  2687  00003B                     	ds	2
  2688  00003D                     TFT_DrawChar@bg:
  2689                           	opt callstack 0
  2690                           
  2691                           ; 2 bytes @ 0x3C
  2692  00003D                     	ds	2
  2693  00003F                     TFT_DrawChar@size:
  2694                           	opt callstack 0
  2695  00003F                     A6_BaudRateAutoDetect@i:
  2696                           	opt callstack 0
  2697  00003F                     A6_NetworkGetRSSI@RSSIToken:
  2698                           	opt callstack 0
  2699                           
  2700                           ; 2 bytes @ 0x3E
  2701  00003F                     	ds	1
  2702  000040                     ??_TFT_DrawChar:
  2703                           
  2704                           ; 1 bytes @ 0x3F
  2705  000040                     	ds	1
  2706  000041                     A6_NetworkGetRSSILevel@RSSI:
  2707                           	opt callstack 0
  2708                           
  2709                           ; 1 bytes @ 0x40
  2710  000041                     	ds	2
  2711  000043                     A6_BaudRateGet@baudRate:
  2712                           	opt callstack 0
  2713                           
  2714                           ; 4 bytes @ 0x42
  2715  000043                     	ds	1
  2716  000044                     TFT_DrawChar@line:
  2717                           	opt callstack 0
  2718                           
  2719                           ; 1 bytes @ 0x43
  2720  000044                     	ds	1
  2721  000045                     TFT_DrawChar@xl:
  2722                           	opt callstack 0
  2723                           
  2724                           ; 2 bytes @ 0x44
  2725  000045                     	ds	2
  2726  000047                     A6_BaudRateGet@baudRateToken:
  2727                           	opt callstack 0
  2728  000047                     _TFT_DrawChar$2245:
  2729                           	opt callstack 0
  2730                           
  2731                           ; 2 bytes @ 0x46
  2732  000047                     	ds	2
  2733  000049                     A6_BaudRateGet@j:
  2734                           	opt callstack 0
  2735  000049                     _TFT_DrawChar$2246:
  2736                           	opt callstack 0
  2737                           
  2738                           ; 2 bytes @ 0x48
  2739  000049                     	ds	1
  2740  00004A                     A6_BaudRateSet@baudRate:
  2741                           	opt callstack 0
  2742                           
  2743                           ; 4 bytes @ 0x49
  2744  00004A                     	ds	1
  2745  00004B                     TFT_DrawChar@j:
  2746                           	opt callstack 0
  2747                           
  2748                           ; 1 bytes @ 0x4A
  2749  00004B                     	ds	1
  2750  00004C                     TFT_DrawChar@i:
  2751                           	opt callstack 0
  2752                           
  2753                           ; 1 bytes @ 0x4B
  2754  00004C                     	ds	1
  2755  00004D                     ??_Ecg_Background_Leads_Ok:
  2756  00004D                     
  2757                           ; 1 bytes @ 0x4C
  2758  00004D                     	ds	1
  2759  00004E                     A6_Init@baudRate:
  2760                           	opt callstack 0
  2761                           
  2762                           ; 4 bytes @ 0x4D
  2763  00004E                     	ds	1
  2764  00004F                     ??_loop:
  2765  00004F                     
  2766                           ; 1 bytes @ 0x4E
  2767  00004F                     	ds	3
  2768  000052                     
  2769                           ; 1 bytes @ 0x51
  2770  000052                     	ds	1
  2771  000053                     
  2772                           ; 1 bytes @ 0x52
  2773 ;;
  2774 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2775 ;;
  2776 ;; *************** function _main *****************
  2777 ;; Defined at:
  2778 ;;		line 12 in file "main.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2792 ;;      Params:         0       0       0       0       0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2795 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels required when called:   12
  2798 ;; This function calls:
  2799 ;;		_A6_Init
  2800 ;;		_EUSART_Init
  2801 ;;		_Ecg_Init
  2802 ;;		_TFT_Init
  2803 ;;		_init
  2804 ;;		_loop
  2805 ;; This function is called by:
  2806 ;;		Startup code after reset
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text0
  2811  002D2A                     __ptext0:
  2812                           	opt callstack 0
  2813  002D2A                     _main:
  2814                           	opt callstack 19
  2815  002D2A                     
  2816                           ;main.c: 14: init();
  2817  002D2A  ECA7  F012         	call	_init	;wreg free
  2818  002D2E                     
  2819                           ;main.c: 15: TFT_Init(3, 0x0821);
  2820  002D2E  0E08               	movlw	8
  2821  002D30  6E22               	movwf	(TFT_Init@color+1)^0,c
  2822  002D32  0E21               	movlw	33
  2823  002D34  6E21               	movwf	TFT_Init@color^0,c
  2824  002D36  0E03               	movlw	3
  2825  002D38  ECA9  F00C         	call	_TFT_Init
  2826  002D3C                     
  2827                           ;main.c: 16: EUSART_Init();
  2828  002D3C  EC10  F016         	call	_EUSART_Init	;wreg free
  2829  002D40                     
  2830                           ;main.c: 17: Ecg_Init();
  2831  002D40  EC56  F017         	call	_Ecg_Init	;wreg free
  2832  002D44                     
  2833                           ;main.c: 18: A6_Init(115200);
  2834  002D44  0E00               	movlw	0
  2835  002D46  6E4E               	movwf	A6_Init@baudRate^0,c
  2836  002D48  0EC2               	movlw	194
  2837  002D4A  6E4F               	movwf	(A6_Init@baudRate+1)^0,c
  2838  002D4C  0E01               	movlw	1
  2839  002D4E  6E50               	movwf	(A6_Init@baudRate+2)^0,c
  2840  002D50  0E00               	movlw	0
  2841  002D52  6E51               	movwf	(A6_Init@baudRate+3)^0,c
  2842  002D54  ECB2  F016         	call	_A6_Init	;wreg free
  2843  002D58                     l4743:
  2844  002D58  EC78  F005         	call	_loop	;wreg free
  2845  002D5C  EFAC  F016         	goto	l4743
  2846  002D60  EF07  F000         	goto	start
  2847  002D64                     __end_of_main:
  2848                           	opt callstack 0
  2849                           
  2850 ;; *************** function _loop *****************
  2851 ;; Defined at:
  2852 ;;		line 28 in file "main.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  operatorRSSI    2   75[BANK0 ] unsigned int 
  2857 ;;  i               1   77[BANK0 ] unsigned char 
  2858 ;;  RSSILevel       1   72[BANK0 ] unsigned char 
  2859 ;;  operator       32   40[BANK0 ] unsigned char [32]
  2860 ;;  operatorX       2   73[BANK0 ] unsigned int 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2870 ;;      Params:         0       0       0       0       0       0       0       0       0
  2871 ;;      Locals:         0      38       0       0       0       0       0       0       0
  2872 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2873 ;;      Totals:         4      38       0       0       0       0       0       0       0
  2874 ;;Total ram usage:       42 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:   11
  2877 ;; This function calls:
  2878 ;;		_A6_NetworkGetOperator
  2879 ;;		_A6_NetworkGetRSSILevel
  2880 ;;		_Ecg_Process
  2881 ;;		_TFT_DrawFillRect
  2882 ;;		_TFT_DrawLine
  2883 ;;		_TFT_DrawString
  2884 ;;		_TFT_GetWidth
  2885 ;; This function is called by:
  2886 ;;		_main
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text1
  2891  000AF0                     __ptext1:
  2892                           	opt callstack 0
  2893  000AF0                     _loop:
  2894                           	opt callstack 19
  2895  000AF0                     
  2896                           ;main.c: 30: Ecg_Process();
  2897  000AF0  ECAC  F014         	call	_Ecg_Process	;wreg free
  2898  000AF4                     
  2899                           ;main.c: 32: if(tmp1 < (MILLISECONDS - 10000)) {
  2900  000AF4  0EF0               	movlw	240
  2901  000AF6  0100               	movlb	0	; () banked
  2902  000AF8  25CC               	addwf	_MILLISECONDS& (0+255),w,b
  2903  000AFA  6E4F               	movwf	??_loop^0,c
  2904  000AFC  0ED8               	movlw	216
  2905  000AFE  21CD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  2906  000B00  6E50               	movwf	(??_loop+1)^0,c
  2907  000B02  0EFF               	movlw	255
  2908  000B04  21CE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  2909  000B06  6E51               	movwf	(??_loop+2)^0,c
  2910  000B08  0EFF               	movlw	255
  2911  000B0A  21CF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  2912  000B0C  6E52               	movwf	(??_loop+3)^0,c
  2913  000B0E  504F               	movf	??_loop^0,w,c
  2914  000B10  5DC4               	subwf	_tmp1& (0+255),w,b
  2915  000B12  5050               	movf	(??_loop+1)^0,w,c
  2916  000B14  59C5               	subwfb	(_tmp1+1)& (0+255),w,b
  2917  000B16  5051               	movf	(??_loop+2)^0,w,c
  2918  000B18  59C6               	subwfb	(_tmp1+2)& (0+255),w,b
  2919  000B1A  5052               	movf	(??_loop+3)^0,w,c
  2920  000B1C  59C7               	subwfb	(_tmp1+3)& (0+255),w,b
  2921  000B1E  B0D8               	btfsc	status,0,c
  2922  000B20  EF94  F005         	goto	u4021
  2923  000B24  EF96  F005         	goto	u4020
  2924  000B28                     u4021:
  2925  000B28  EF3E  F006         	goto	l61
  2926  000B2C                     u4020:
  2927  000B2C                     
  2928                           ; BSR set to: 0
  2929                           ;main.c: 33: tmp1 = MILLISECONDS;
  2930  000B2C  C0CC  F0C4         	movff	_MILLISECONDS,_tmp1
  2931  000B30  C0CD  F0C5         	movff	_MILLISECONDS+1,_tmp1+1
  2932  000B34  C0CE  F0C6         	movff	_MILLISECONDS+2,_tmp1+2
  2933  000B38  C0CF  F0C7         	movff	_MILLISECONDS+3,_tmp1+3
  2934  000B3C                     
  2935                           ; BSR set to: 0
  2936                           ;main.c: 35: char operator[32];;main.c: 36: uint16_t operatorX = TFT_GetWidth() - 100;
  2937  000B3C  EC75  F015         	call	_TFT_GetWidth	;wreg free
  2938  000B40  0E9C               	movlw	156
  2939  000B42  2405               	addwf	?_TFT_GetWidth^0,w,c
  2940  000B44  0100               	movlb	0	; () banked
  2941  000B46  6FA9               	movwf	loop@operatorX& (0+255),b
  2942  000B48  0EFF               	movlw	255
  2943  000B4A  2006               	addwfc	(?_TFT_GetWidth+1)^0,w,c
  2944  000B4C  6FAA               	movwf	(loop@operatorX+1)& (0+255),b
  2945  000B4E                     
  2946                           ; BSR set to: 0
  2947                           ;main.c: 37: A6_NetworkGetOperator(operator, 32);
  2948  000B4E  0E88               	movlw	low loop@operator
  2949  000B50  6E1F               	movwf	A6_NetworkGetOperator@operator^0,c
  2950  000B52  0E00               	movlw	high loop@operator
  2951  000B54  6E20               	movwf	(A6_NetworkGetOperator@operator+1)^0,c
  2952  000B56  0E20               	movlw	32
  2953  000B58  6E21               	movwf	A6_NetworkGetOperator@operatorLen^0,c
  2954  000B5A  EC75  F008         	call	_A6_NetworkGetOperator	;wreg free
  2955  000B5E                     
  2956                           ;main.c: 38: TFT_DrawString(operatorX, 5, operator, 0xFFE0, 0x0821, 1);
  2957  000B5E  C0A9  F060         	movff	loop@operatorX,TFT_DrawString@x
  2958  000B62  C0AA  F061         	movff	loop@operatorX+1,TFT_DrawString@x+1
  2959  000B66  0E00               	movlw	0
  2960  000B68  0100               	movlb	0	; () banked
  2961  000B6A  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  2962  000B6C  0E05               	movlw	5
  2963  000B6E  6F62               	movwf	TFT_DrawString@y& (0+255),b
  2964  000B70  0E88               	movlw	low loop@operator
  2965  000B72  6F64               	movwf	TFT_DrawString@str& (0+255),b
  2966  000B74  0E00               	movlw	high loop@operator
  2967  000B76  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  2968  000B78  0EFF               	movlw	255
  2969  000B7A  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  2970  000B7C  0EE0               	movlw	224
  2971  000B7E  6F66               	movwf	TFT_DrawString@color& (0+255),b
  2972  000B80  0E08               	movlw	8
  2973  000B82  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  2974  000B84  0E21               	movlw	33
  2975  000B86  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  2976  000B88  0E01               	movlw	1
  2977  000B8A  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  2978  000B8C  EC1E  F010         	call	_TFT_DrawString	;wreg free
  2979  000B90                     
  2980                           ;main.c: 39: if(operator[0] != '-') {
  2981  000B90  0E2D               	movlw	45
  2982  000B92  0100               	movlb	0	; () banked
  2983  000B94  1988               	xorwf	loop@operator& (0+255),w,b
  2984  000B96  B4D8               	btfsc	status,2,c
  2985  000B98  EFD0  F005         	goto	u4031
  2986  000B9C  EFD2  F005         	goto	u4030
  2987  000BA0                     u4031:
  2988  000BA0  EF3E  F006         	goto	l61
  2989  000BA4                     u4030:
  2990  000BA4                     
  2991                           ; BSR set to: 0
  2992                           ;main.c: 40: uint8_t RSSILevel = A6_NetworkGetRSSILevel();
  2993  000BA4  ECF4  F011         	call	_A6_NetworkGetRSSILevel	;wreg free
  2994  000BA8  0100               	movlb	0	; () banked
  2995  000BAA  6FA8               	movwf	loop@RSSILevel& (0+255),b
  2996  000BAC                     
  2997                           ; BSR set to: 0
  2998                           ;main.c: 41: for(uint8_t i=0; i<5; i++) {
  2999  000BAC  0E00               	movlw	0
  3000  000BAE  6FAD               	movwf	loop@i& (0+255),b
  3001  000BB0                     l4707:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;main.c: 42: uint16_t operatorRSSIX = operatorX + (i * 6);
  3005  000BB0  51AD               	movf	loop@i& (0+255),w,b
  3006  000BB2  0D06               	mullw	6
  3007  000BB4  CFF3 F04F          	movff	prodl,??_loop
  3008  000BB8  CFF4 F050          	movff	prodh,??_loop+1
  3009  000BBC  51A9               	movf	loop@operatorX& (0+255),w,b
  3010  000BBE  244F               	addwf	??_loop^0,w,c
  3011  000BC0  6FAB               	movwf	loop@operatorRSSIX& (0+255),b
  3012  000BC2  51AA               	movf	(loop@operatorX+1)& (0+255),w,b
  3013  000BC4  2050               	addwfc	(??_loop+1)^0,w,c
  3014  000BC6  6FAC               	movwf	(loop@operatorRSSIX+1)& (0+255),b
  3015  000BC8                     
  3016                           ; BSR set to: 0
  3017                           ;main.c: 43: if(RSSILevel > i) {
  3018  000BC8  51A8               	movf	loop@RSSILevel& (0+255),w,b
  3019  000BCA  5DAD               	subwf	loop@i& (0+255),w,b
  3020  000BCC  B0D8               	btfsc	status,0,c
  3021  000BCE  EFEB  F005         	goto	u4041
  3022  000BD2  EFED  F005         	goto	u4040
  3023  000BD6                     u4041:
  3024  000BD6  EF05  F006         	goto	l4713
  3025  000BDA                     u4040:
  3026  000BDA                     
  3027                           ; BSR set to: 0
  3028                           ;main.c: 44: TFT_DrawFillRect(operatorRSSIX, 17, 5, 10, 0xFFE0);
  3029  000BDA  C0AB  F01E         	movff	loop@operatorRSSIX,TFT_DrawFillRect@x
  3030  000BDE  C0AC  F01F         	movff	loop@operatorRSSIX+1,TFT_DrawFillRect@x+1
  3031  000BE2  0E00               	movlw	0
  3032  000BE4  6E21               	movwf	(TFT_DrawFillRect@y+1)^0,c
  3033  000BE6  0E11               	movlw	17
  3034  000BE8  6E20               	movwf	TFT_DrawFillRect@y^0,c
  3035  000BEA  0E00               	movlw	0
  3036  000BEC  6E23               	movwf	(TFT_DrawFillRect@w+1)^0,c
  3037  000BEE  0E05               	movlw	5
  3038  000BF0  6E22               	movwf	TFT_DrawFillRect@w^0,c
  3039  000BF2  0E00               	movlw	0
  3040  000BF4  6E25               	movwf	(TFT_DrawFillRect@h+1)^0,c
  3041  000BF6  0E0A               	movlw	10
  3042  000BF8  6E24               	movwf	TFT_DrawFillRect@h^0,c
  3043  000BFA  0EFF               	movlw	255
  3044  000BFC  6E27               	movwf	(TFT_DrawFillRect@color+1)^0,c
  3045  000BFE  0EE0               	movlw	224
  3046  000C00  6E26               	movwf	TFT_DrawFillRect@color^0,c
  3047  000C02  ECB5  F011         	call	_TFT_DrawFillRect	;wreg free
  3048                           
  3049                           ;main.c: 45: } else {
  3050  000C06  EF34  F006         	goto	l4717
  3051  000C0A                     l4713:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;main.c: 46: TFT_DrawFillRect(operatorRSSIX, 17, 5, 10, 0x0821);
  3055  000C0A  C0AB  F01E         	movff	loop@operatorRSSIX,TFT_DrawFillRect@x
  3056  000C0E  C0AC  F01F         	movff	loop@operatorRSSIX+1,TFT_DrawFillRect@x+1
  3057  000C12  0E00               	movlw	0
  3058  000C14  6E21               	movwf	(TFT_DrawFillRect@y+1)^0,c
  3059  000C16  0E11               	movlw	17
  3060  000C18  6E20               	movwf	TFT_DrawFillRect@y^0,c
  3061  000C1A  0E00               	movlw	0
  3062  000C1C  6E23               	movwf	(TFT_DrawFillRect@w+1)^0,c
  3063  000C1E  0E05               	movlw	5
  3064  000C20  6E22               	movwf	TFT_DrawFillRect@w^0,c
  3065  000C22  0E00               	movlw	0
  3066  000C24  6E25               	movwf	(TFT_DrawFillRect@h+1)^0,c
  3067  000C26  0E0A               	movlw	10
  3068  000C28  6E24               	movwf	TFT_DrawFillRect@h^0,c
  3069  000C2A  0E08               	movlw	8
  3070  000C2C  6E27               	movwf	(TFT_DrawFillRect@color+1)^0,c
  3071  000C2E  0E21               	movlw	33
  3072  000C30  6E26               	movwf	TFT_DrawFillRect@color^0,c
  3073  000C32  ECB5  F011         	call	_TFT_DrawFillRect	;wreg free
  3074  000C36                     
  3075                           ;main.c: 47: TFT_DrawLine(operatorRSSIX, 26, (operatorRSSIX + 5), 26, 0xFFE0);
  3076  000C36  C0AB  F017         	movff	loop@operatorRSSIX,TFT_DrawLine@x0
  3077  000C3A  C0AC  F018         	movff	loop@operatorRSSIX+1,TFT_DrawLine@x0+1
  3078  000C3E  0E00               	movlw	0
  3079  000C40  6E1A               	movwf	(TFT_DrawLine@y0+1)^0,c
  3080  000C42  0E1A               	movlw	26
  3081  000C44  6E19               	movwf	TFT_DrawLine@y0^0,c
  3082  000C46  0E05               	movlw	5
  3083  000C48  0100               	movlb	0	; () banked
  3084  000C4A  25AB               	addwf	loop@operatorRSSIX& (0+255),w,b
  3085  000C4C  6E1B               	movwf	TFT_DrawLine@x1^0,c
  3086  000C4E  0E00               	movlw	0
  3087  000C50  21AC               	addwfc	(loop@operatorRSSIX+1)& (0+255),w,b
  3088  000C52  6E1C               	movwf	(TFT_DrawLine@x1+1)^0,c
  3089  000C54  0E00               	movlw	0
  3090  000C56  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  3091  000C58  0E1A               	movlw	26
  3092  000C5A  6E1D               	movwf	TFT_DrawLine@y1^0,c
  3093  000C5C  0EFF               	movlw	255
  3094  000C5E  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  3095  000C60  0EE0               	movlw	224
  3096  000C62  6E1F               	movwf	TFT_DrawLine@color^0,c
  3097  000C64  EC84  F004         	call	_TFT_DrawLine	;wreg free
  3098  000C68                     l4717:
  3099  000C68  0100               	movlb	0	; () banked
  3100  000C6A  2BAD               	incf	loop@i& (0+255),f,b
  3101  000C6C                     
  3102                           ; BSR set to: 0
  3103  000C6C  0E04               	movlw	4
  3104  000C6E  65AD               	cpfsgt	loop@i& (0+255),b
  3105  000C70  EF3C  F006         	goto	u4051
  3106  000C74  EF3E  F006         	goto	u4050
  3107  000C78                     u4051:
  3108  000C78  EFD8  F005         	goto	l4707
  3109  000C7C                     u4050:
  3110  000C7C                     l61:
  3111                           
  3112                           ; BSR set to: 0
  3113  000C7C  0012               	return		;funcret
  3114  000C7E                     __end_of_loop:
  3115                           	opt callstack 0
  3116                           
  3117 ;; *************** function _Ecg_Process *****************
  3118 ;; Defined at:
  3119 ;;		line 23 in file "ecg.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;		None
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;		None
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3133 ;;      Params:         0       0       0       0       0       0       0       0       0
  3134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3136 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3137 ;;Total ram usage:        0 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:   10
  3140 ;; This function calls:
  3141 ;;		_Ecg_ProcessEcg
  3142 ;;		_Ecg_ProcessHeartRate
  3143 ;;		_Ecg_ProcessInterrupt
  3144 ;; This function is called by:
  3145 ;;		_loop
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text2
  3150  002958                     __ptext2:
  3151                           	opt callstack 0
  3152  002958                     _Ecg_Process:
  3153                           	opt callstack 19
  3154  002958                     
  3155                           ;ecg.c: 24: if(ECG_FLAGS.processInterrupt) {
  3156  002958  0100               	movlb	0	; () banked
  3157  00295A  A9D2               	btfss	_ECG_FLAGS& (0+255),4,b
  3158  00295C  EFB2  F014         	goto	u3971
  3159  002960  EFB4  F014         	goto	u3970
  3160  002964                     u3971:
  3161  002964  EFB8  F014         	goto	l4659
  3162  002968                     u3970:
  3163  002968                     
  3164                           ; BSR set to: 0
  3165                           ;ecg.c: 25: Ecg_ProcessInterrupt();
  3166  002968  EC08  F017         	call	_Ecg_ProcessInterrupt	;wreg free
  3167  00296C                     
  3168                           ;ecg.c: 26: ECG_FLAGS.processInterrupt = 0;
  3169  00296C  0100               	movlb	0	; () banked
  3170  00296E  99D2               	bcf	_ECG_FLAGS& (0+255),4,b
  3171  002970                     l4659:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;ecg.c: 27: };ecg.c: 29: if(ECG_FLAGS.processEcg) {
  3175  002970  ABD2               	btfss	_ECG_FLAGS& (0+255),5,b
  3176  002972  EFBD  F014         	goto	u3981
  3177  002976  EFBF  F014         	goto	u3980
  3178  00297A                     u3981:
  3179  00297A  EFC3  F014         	goto	l4665
  3180  00297E                     u3980:
  3181  00297E                     
  3182                           ; BSR set to: 0
  3183                           ;ecg.c: 30: Ecg_ProcessEcg();
  3184  00297E  EC4E  F015         	call	_Ecg_ProcessEcg	;wreg free
  3185  002982                     
  3186                           ;ecg.c: 31: ECG_FLAGS.processEcg = 0;
  3187  002982  0100               	movlb	0	; () banked
  3188  002984  9BD2               	bcf	_ECG_FLAGS& (0+255),5,b
  3189  002986                     l4665:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;ecg.c: 32: };ecg.c: 34: if(ECG_FLAGS.processHeartRate && ECG_FLAGS.leadsOk) {
  3193  002986  A7D2               	btfss	_ECG_FLAGS& (0+255),3,b
  3194  002988  EFC8  F014         	goto	u3991
  3195  00298C  EFCA  F014         	goto	u3990
  3196  002990                     u3991:
  3197  002990  EFD5  F014         	goto	l421
  3198  002994                     u3990:
  3199  002994                     
  3200                           ; BSR set to: 0
  3201  002994  A3D2               	btfss	_ECG_FLAGS& (0+255),1,b
  3202  002996  EFCF  F014         	goto	u4001
  3203  00299A  EFD1  F014         	goto	u4000
  3204  00299E                     u4001:
  3205  00299E  EFD5  F014         	goto	l421
  3206  0029A2                     u4000:
  3207  0029A2                     
  3208                           ; BSR set to: 0
  3209                           ;ecg.c: 35: Ecg_ProcessHeartRate();
  3210  0029A2  ECBE  F007         	call	_Ecg_ProcessHeartRate	;wreg free
  3211  0029A6                     
  3212                           ;ecg.c: 36: ECG_FLAGS.processHeartRate = 0;
  3213  0029A6  0100               	movlb	0	; () banked
  3214  0029A8  97D2               	bcf	_ECG_FLAGS& (0+255),3,b
  3215  0029AA                     l421:
  3216                           
  3217                           ; BSR set to: 0
  3218  0029AA  0012               	return		;funcret
  3219  0029AC                     __end_of_Ecg_Process:
  3220                           	opt callstack 0
  3221                           
  3222 ;; *************** function _Ecg_ProcessInterrupt *****************
  3223 ;; Defined at:
  3224 ;;		line 40 in file "ecg.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;		None
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;		None
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3238 ;;      Params:         0       0       0       0       0       0       0       0       0
  3239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3240 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3241 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3242 ;;Total ram usage:        1 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    2
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_Ecg_Process
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text3
  3253  002E10                     __ptext3:
  3254                           	opt callstack 0
  3255  002E10                     _Ecg_ProcessInterrupt:
  3256                           	opt callstack 26
  3257  002E10                     
  3258                           ;ecg.c: 41: if(ECG_FLAGS.msecDelay >= (10 / 5)) {
  3259  002E10  0100               	movlb	0	; () banked
  3260  002E12  51D3               	movf	(_ECG_FLAGS+1)& (0+255),w,b
  3261  002E14  0B07               	andlw	7
  3262  002E16  6E05               	movwf	??_Ecg_ProcessInterrupt^0,c
  3263  002E18  0E01               	movlw	1
  3264  002E1A  6405               	cpfsgt	??_Ecg_ProcessInterrupt^0,c
  3265  002E1C  EF12  F017         	goto	u3321
  3266  002E20  EF14  F017         	goto	u3320
  3267  002E24                     u3321:
  3268  002E24  EF17  F017         	goto	l4127
  3269  002E28                     u3320:
  3270  002E28                     
  3271                           ; BSR set to: 0
  3272                           ;ecg.c: 42: ECG_FLAGS.processEcg = 1;
  3273  002E28  8BD2               	bsf	_ECG_FLAGS& (0+255),5,b
  3274  002E2A                     
  3275                           ; BSR set to: 0
  3276                           ;ecg.c: 43: ECG_FLAGS.msecDelay = 0;
  3277  002E2A  0EF8               	movlw	-8
  3278  002E2C  17D3               	andwf	(_ECG_FLAGS+1)& (0+255),f,b
  3279  002E2E                     l4127:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;ecg.c: 44: };ecg.c: 45: if(ECG_HEARTRATE.msecDelay >= (1200 / 5)) {
  3283  002E2E  0EEF               	movlw	239
  3284  002E30  65C3               	cpfsgt	(_ECG_HEARTRATE+3)& (0+255),b
  3285  002E32  EF1D  F017         	goto	u3331
  3286  002E36  EF1F  F017         	goto	u3330
  3287  002E3A                     u3331:
  3288  002E3A  EF22  F017         	goto	l426
  3289  002E3E                     u3330:
  3290  002E3E                     
  3291                           ; BSR set to: 0
  3292                           ;ecg.c: 46: ECG_FLAGS.processHeartRate = 1;
  3293  002E3E  87D2               	bsf	_ECG_FLAGS& (0+255),3,b
  3294  002E40                     
  3295                           ; BSR set to: 0
  3296                           ;ecg.c: 47: ECG_HEARTRATE.msecDelay = 0;
  3297  002E40  0E00               	movlw	0
  3298  002E42  6FC3               	movwf	(_ECG_HEARTRATE+3)& (0+255),b
  3299  002E44                     l426:
  3300                           
  3301                           ; BSR set to: 0
  3302  002E44  0012               	return		;funcret
  3303  002E46                     __end_of_Ecg_ProcessInterrupt:
  3304                           	opt callstack 0
  3305                           
  3306 ;; *************** function _Ecg_ProcessHeartRate *****************
  3307 ;; Defined at:
  3308 ;;		line 75 in file "ecg.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  j               1   39[BANK0 ] unsigned char 
  3313 ;;  i               1   38[BANK0 ] unsigned char 
  3314 ;;  jPrev           1   37[BANK0 ] unsigned char 
  3315 ;;  heartrateStr    5   23[BANK0 ] unsigned char [5]
  3316 ;;  heartbeatAve    4   32[BANK0 ] unsigned long 
  3317 ;;  heartrate       1   36[BANK0 ] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      void 
  3320 ;; Registers used:
  3321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3322 ;; Tracked objects:
  3323 ;;		On entry : 0/0
  3324 ;;		On exit  : 0/0
  3325 ;;		Unchanged: 0/0
  3326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3327 ;;      Params:         0       0       0       0       0       0       0       0       0
  3328 ;;      Locals:         0      17       0       0       0       0       0       0       0
  3329 ;;      Temps:          0      12       0       0       0       0       0       0       0
  3330 ;;      Totals:         0      29       0       0       0       0       0       0       0
  3331 ;;Total ram usage:       29 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    8
  3334 ;; This function calls:
  3335 ;;		_TFT_DrawString
  3336 ;;		___lldiv
  3337 ;;		_sprintf
  3338 ;; This function is called by:
  3339 ;;		_Ecg_Process
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text4
  3344  000F7C                     __ptext4:
  3345                           	opt callstack 0
  3346  000F7C                     _Ecg_ProcessHeartRate:
  3347                           	opt callstack 20
  3348  000F7C                     
  3349                           ;ecg.c: 77: char heartrateString[5];;ecg.c: 78: uint32_t heartbeatAverage = 0;
  3350  000F7C  0E00               	movlw	0
  3351  000F7E  0100               	movlb	0	; () banked
  3352  000F80  6F80               	movwf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),b
  3353  000F82  0E00               	movlw	0
  3354  000F84  6F81               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),b
  3355  000F86  0E00               	movlw	0
  3356  000F88  6F82               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),b
  3357  000F8A  0E00               	movlw	0
  3358  000F8C  6F83               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),b
  3359                           
  3360                           ;ecg.c: 80: for(uint8_t i=0, j=ECG_HEARTBEAT.i, jPrev=0; i<(3 - 1); i++) {
  3361  000F8E  0E00               	movlw	0
  3362  000F90  6F86               	movwf	Ecg_ProcessHeartRate@i& (0+255),b
  3363  000F92                     
  3364                           ; BSR set to: 0
  3365  000F92  C0BA  F087         	movff	_ECG_HEARTBEAT+12,Ecg_ProcessHeartRate@j
  3366  000F96                     l4625:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;ecg.c: 81: j = (j == 0) ? (3 - 1) : (j - 1);
  3370  000F96  5187               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  3371  000F98  B4D8               	btfsc	status,2,c
  3372  000F9A  EFD1  F007         	goto	u3941
  3373  000F9E  EFD3  F007         	goto	u3940
  3374  000FA2                     u3941:
  3375  000FA2  EFDB  F007         	goto	l4629
  3376  000FA6                     u3940:
  3377  000FA6                     
  3378                           ; BSR set to: 0
  3379  000FA6  0EFF               	movlw	255
  3380  000FA8  2587               	addwf	Ecg_ProcessHeartRate@j& (0+255),w,b
  3381  000FAA  6F7C               	movwf	_Ecg_ProcessHeartRate$1017& (0+255),b
  3382  000FAC  6B7D               	clrf	(_Ecg_ProcessHeartRate$1017+1)& (0+255),b
  3383  000FAE  0EFF               	movlw	255
  3384  000FB0  237D               	addwfc	(_Ecg_ProcessHeartRate$1017+1)& (0+255),f,b
  3385  000FB2  EFDF  F007         	goto	l4631
  3386  000FB6                     l4629:
  3387                           
  3388                           ; BSR set to: 0
  3389  000FB6  0E00               	movlw	0
  3390  000FB8  6F7D               	movwf	(_Ecg_ProcessHeartRate$1017+1)& (0+255),b
  3391  000FBA  0E02               	movlw	2
  3392  000FBC  6F7C               	movwf	_Ecg_ProcessHeartRate$1017& (0+255),b
  3393  000FBE                     l4631:
  3394                           
  3395                           ; BSR set to: 0
  3396  000FBE  C07C  F087         	movff	_Ecg_ProcessHeartRate$1017,Ecg_ProcessHeartRate@j
  3397                           
  3398                           ;ecg.c: 82: jPrev = (j == 0) ? (3 - 1) : (j - 1);
  3399  000FC2  5187               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  3400  000FC4  B4D8               	btfsc	status,2,c
  3401  000FC6  EFE7  F007         	goto	u3951
  3402  000FCA  EFE9  F007         	goto	u3950
  3403  000FCE                     u3951:
  3404  000FCE  EFF1  F007         	goto	l4635
  3405  000FD2                     u3950:
  3406  000FD2                     
  3407                           ; BSR set to: 0
  3408  000FD2  0EFF               	movlw	255
  3409  000FD4  2587               	addwf	Ecg_ProcessHeartRate@j& (0+255),w,b
  3410  000FD6  6F7E               	movwf	_Ecg_ProcessHeartRate$1018& (0+255),b
  3411  000FD8  6B7F               	clrf	(_Ecg_ProcessHeartRate$1018+1)& (0+255),b
  3412  000FDA  0EFF               	movlw	255
  3413  000FDC  237F               	addwfc	(_Ecg_ProcessHeartRate$1018+1)& (0+255),f,b
  3414  000FDE  EFF5  F007         	goto	l4637
  3415  000FE2                     l4635:
  3416                           
  3417                           ; BSR set to: 0
  3418  000FE2  0E00               	movlw	0
  3419  000FE4  6F7F               	movwf	(_Ecg_ProcessHeartRate$1018+1)& (0+255),b
  3420  000FE6  0E02               	movlw	2
  3421  000FE8  6F7E               	movwf	_Ecg_ProcessHeartRate$1018& (0+255),b
  3422  000FEA                     l4637:
  3423                           
  3424                           ; BSR set to: 0
  3425  000FEA  C07E  F085         	movff	_Ecg_ProcessHeartRate$1018,Ecg_ProcessHeartRate@jPrev
  3426  000FEE                     
  3427                           ; BSR set to: 0
  3428                           ;ecg.c: 83: heartbeatAverage += (ECG_HEARTBEAT.data[j] - ECG_HEARTBEAT.data[jPrev]);
  3429  000FEE  5185               	movf	Ecg_ProcessHeartRate@jPrev& (0+255),w,b
  3430  000FF0  0D04               	mullw	4
  3431  000FF2  0EAE               	movlw	low _ECG_HEARTBEAT
  3432  000FF4  24F3               	addwf	243,w,c
  3433  000FF6  6ED9               	movwf	fsr2l,c
  3434  000FF8  0E00               	movlw	high _ECG_HEARTBEAT
  3435  000FFA  20F4               	addwfc	prodh,w,c
  3436  000FFC  6EDA               	movwf	fsr2h,c
  3437  000FFE  CFDE F06B          	movff	postinc2,??_Ecg_ProcessHeartRate
  3438  001002  CFDE F06C          	movff	postinc2,??_Ecg_ProcessHeartRate+1
  3439  001006  CFDE F06D          	movff	postinc2,??_Ecg_ProcessHeartRate+2
  3440  00100A  CFDE F06E          	movff	postinc2,??_Ecg_ProcessHeartRate+3
  3441  00100E  5187               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  3442  001010  0D04               	mullw	4
  3443  001012  0EAE               	movlw	low _ECG_HEARTBEAT
  3444  001014  24F3               	addwf	243,w,c
  3445  001016  6ED9               	movwf	fsr2l,c
  3446  001018  0E00               	movlw	high _ECG_HEARTBEAT
  3447  00101A  20F4               	addwfc	prodh,w,c
  3448  00101C  6EDA               	movwf	fsr2h,c
  3449  00101E  CFDE F06F          	movff	postinc2,??_Ecg_ProcessHeartRate+4
  3450  001022  CFDE F070          	movff	postinc2,??_Ecg_ProcessHeartRate+5
  3451  001026  CFDE F071          	movff	postinc2,??_Ecg_ProcessHeartRate+6
  3452  00102A  CFDE F072          	movff	postinc2,??_Ecg_ProcessHeartRate+7
  3453  00102E  516B               	movf	??_Ecg_ProcessHeartRate& (0+255),w,b
  3454  001030  5D6F               	subwf	(??_Ecg_ProcessHeartRate+4)& (0+255),w,b
  3455  001032  6F73               	movwf	(??_Ecg_ProcessHeartRate+8)& (0+255),b
  3456  001034  516C               	movf	(??_Ecg_ProcessHeartRate+1)& (0+255),w,b
  3457  001036  5970               	subwfb	(??_Ecg_ProcessHeartRate+5)& (0+255),w,b
  3458  001038  6F74               	movwf	(??_Ecg_ProcessHeartRate+9)& (0+255),b
  3459  00103A  516D               	movf	(??_Ecg_ProcessHeartRate+2)& (0+255),w,b
  3460  00103C  5971               	subwfb	(??_Ecg_ProcessHeartRate+6)& (0+255),w,b
  3461  00103E  6F75               	movwf	(??_Ecg_ProcessHeartRate+10)& (0+255),b
  3462  001040  516E               	movf	(??_Ecg_ProcessHeartRate+3)& (0+255),w,b
  3463  001042  5972               	subwfb	(??_Ecg_ProcessHeartRate+7)& (0+255),w,b
  3464  001044  6F76               	movwf	(??_Ecg_ProcessHeartRate+11)& (0+255),b
  3465  001046  5173               	movf	(??_Ecg_ProcessHeartRate+8)& (0+255),w,b
  3466  001048  2780               	addwf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),f,b
  3467  00104A  5174               	movf	(??_Ecg_ProcessHeartRate+9)& (0+255),w,b
  3468  00104C  2381               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),f,b
  3469  00104E  5175               	movf	(??_Ecg_ProcessHeartRate+10)& (0+255),w,b
  3470  001050  2382               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),f,b
  3471  001052  5176               	movf	(??_Ecg_ProcessHeartRate+11)& (0+255),w,b
  3472  001054  2383               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),f,b
  3473  001056                     
  3474                           ; BSR set to: 0
  3475  001056  2B86               	incf	Ecg_ProcessHeartRate@i& (0+255),f,b
  3476  001058                     
  3477                           ; BSR set to: 0
  3478  001058  0E01               	movlw	1
  3479  00105A  6586               	cpfsgt	Ecg_ProcessHeartRate@i& (0+255),b
  3480  00105C  EF32  F008         	goto	u3961
  3481  001060  EF34  F008         	goto	u3960
  3482  001064                     u3961:
  3483  001064  EFCB  F007         	goto	l4625
  3484  001068                     u3960:
  3485  001068                     
  3486                           ; BSR set to: 0
  3487                           ;ecg.c: 84: };ecg.c: 85: heartbeatAverage /= (3 - 1);
  3488  001068  90D8               	bcf	status,0,c
  3489  00106A  3383               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),f,b
  3490  00106C  3382               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),f,b
  3491  00106E  3381               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),f,b
  3492  001070  3380               	rrcf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),f,b
  3493  001072                     
  3494                           ; BSR set to: 0
  3495                           ;ecg.c: 86: heartrate = (uint8_t)(60000 / heartbeatAverage);
  3496  001072  0E60               	movlw	96
  3497  001074  6E05               	movwf	___lldiv@dividend^0,c
  3498  001076  0EEA               	movlw	234
  3499  001078  6E06               	movwf	(___lldiv@dividend+1)^0,c
  3500  00107A  0E00               	movlw	0
  3501  00107C  6E07               	movwf	(___lldiv@dividend+2)^0,c
  3502  00107E  0E00               	movlw	0
  3503  001080  6E08               	movwf	(___lldiv@dividend+3)^0,c
  3504  001082  C080  F009         	movff	Ecg_ProcessHeartRate@heartbeatAverage,___lldiv@divisor
  3505  001086  C081  F00A         	movff	Ecg_ProcessHeartRate@heartbeatAverage+1,___lldiv@divisor+1
  3506  00108A  C082  F00B         	movff	Ecg_ProcessHeartRate@heartbeatAverage+2,___lldiv@divisor+2
  3507  00108E  C083  F00C         	movff	Ecg_ProcessHeartRate@heartbeatAverage+3,___lldiv@divisor+3
  3508  001092  EC7F  F00F         	call	___lldiv	;wreg free
  3509  001096  5005               	movf	?___lldiv^0,w,c
  3510  001098  0100               	movlb	0	; () banked
  3511  00109A  6F84               	movwf	Ecg_ProcessHeartRate@heartrate& (0+255),b
  3512  00109C                     
  3513                           ; BSR set to: 0
  3514                           ;ecg.c: 87: sprintf(heartrateString, "%3d", heartrate);
  3515  00109C  0E77               	movlw	low Ecg_ProcessHeartRate@heartrateString
  3516  00109E  6E1B               	movwf	sprintf@sp^0,c
  3517  0010A0  0E00               	movlw	high Ecg_ProcessHeartRate@heartrateString
  3518  0010A2  6E1C               	movwf	(sprintf@sp+1)^0,c
  3519  0010A4  0EF2               	movlw	low STR_1
  3520  0010A6  6E1D               	movwf	sprintf@f^0,c
  3521  0010A8  0E5F               	movlw	high STR_1
  3522  0010AA  6E1E               	movwf	(sprintf@f+1)^0,c
  3523  0010AC  C084  F01F         	movff	Ecg_ProcessHeartRate@heartrate,?_sprintf+4
  3524  0010B0  6A20               	clrf	(?_sprintf+5)^0,c
  3525  0010B2  EC09  F000         	call	_sprintf	;wreg free
  3526  0010B6                     
  3527                           ;ecg.c: 88: TFT_DrawString(135, 10, heartrateString, 0x07E0, 0x0821, 2);
  3528  0010B6  0E00               	movlw	0
  3529  0010B8  0100               	movlb	0	; () banked
  3530  0010BA  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  3531  0010BC  0E87               	movlw	135
  3532  0010BE  6F60               	movwf	TFT_DrawString@x& (0+255),b
  3533  0010C0  0E00               	movlw	0
  3534  0010C2  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  3535  0010C4  0E0A               	movlw	10
  3536  0010C6  6F62               	movwf	TFT_DrawString@y& (0+255),b
  3537  0010C8  0E77               	movlw	low Ecg_ProcessHeartRate@heartrateString
  3538  0010CA  6F64               	movwf	TFT_DrawString@str& (0+255),b
  3539  0010CC  0E00               	movlw	high Ecg_ProcessHeartRate@heartrateString
  3540  0010CE  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  3541  0010D0  0E07               	movlw	7
  3542  0010D2  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  3543  0010D4  0EE0               	movlw	224
  3544  0010D6  6F66               	movwf	TFT_DrawString@color& (0+255),b
  3545  0010D8  0E08               	movlw	8
  3546  0010DA  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  3547  0010DC  0E21               	movlw	33
  3548  0010DE  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  3549  0010E0  0E02               	movlw	2
  3550  0010E2  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  3551  0010E4  EC1E  F010         	call	_TFT_DrawString	;wreg free
  3552  0010E8  0012               	return		;funcret
  3553  0010EA                     __end_of_Ecg_ProcessHeartRate:
  3554                           	opt callstack 0
  3555                           
  3556 ;; *************** function _Ecg_ProcessEcg *****************
  3557 ;; Defined at:
  3558 ;;		line 51 in file "ecg.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3572 ;;      Params:         0       0       0       0       0       0       0       0       0
  3573 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3575 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    9
  3579 ;; This function calls:
  3580 ;;		_Ecg_Background_Leads_Failure
  3581 ;;		_Ecg_Background_Leads_Ok
  3582 ;;		_Ecg_CheckLeads
  3583 ;;		_Ecg_Draw
  3584 ;;		_Ecg_ProcessHeartbeat
  3585 ;; This function is called by:
  3586 ;;		_Ecg_Process
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text5
  3591  002A9C                     __ptext5:
  3592                           	opt callstack 0
  3593  002A9C                     _Ecg_ProcessEcg:
  3594                           	opt callstack 19
  3595  002A9C                     
  3596                           ;ecg.c: 52: Ecg_CheckLeads();
  3597  002A9C  ECFE  F014         	call	_Ecg_CheckLeads	;wreg free
  3598  002AA0                     
  3599                           ;ecg.c: 54: if(ECG_FLAGS.leadsOk) {
  3600  002AA0  0100               	movlb	0	; () banked
  3601  002AA2  A3D2               	btfss	_ECG_FLAGS& (0+255),1,b
  3602  002AA4  EF56  F015         	goto	u3911
  3603  002AA8  EF58  F015         	goto	u3910
  3604  002AAC                     u3911:
  3605  002AAC  EF69  F015         	goto	l429
  3606  002AB0                     u3910:
  3607  002AB0                     
  3608                           ; BSR set to: 0
  3609                           ;ecg.c: 56: if(ECG_FLAGS.leadsOkFlag == 0) {
  3610  002AB0  B5D2               	btfsc	_ECG_FLAGS& (0+255),2,b
  3611  002AB2  EF5D  F015         	goto	u3921
  3612  002AB6  EF5F  F015         	goto	u3920
  3613  002ABA                     u3921:
  3614  002ABA  EF63  F015         	goto	l4609
  3615  002ABE                     u3920:
  3616  002ABE                     
  3617                           ; BSR set to: 0
  3618                           ;ecg.c: 57: Ecg_Background_Leads_Ok();
  3619  002ABE  ECD1  F00F         	call	_Ecg_Background_Leads_Ok	;wreg free
  3620  002AC2                     
  3621                           ;ecg.c: 58: ECG_FLAGS.leadsOkFlag = 1;
  3622  002AC2  0100               	movlb	0	; () banked
  3623  002AC4  85D2               	bsf	_ECG_FLAGS& (0+255),2,b
  3624  002AC6                     l4609:
  3625                           
  3626                           ; BSR set to: 0
  3627                           ;ecg.c: 59: };ecg.c: 62: Ecg_Draw();
  3628  002AC6  ECC5  F00B         	call	_Ecg_Draw	;wreg free
  3629  002ACA                     
  3630                           ;ecg.c: 65: Ecg_ProcessHeartbeat();
  3631  002ACA  EC00  F007         	call	_Ecg_ProcessHeartbeat	;wreg free
  3632                           
  3633                           ;ecg.c: 66: } else {
  3634  002ACE  EF74  F015         	goto	l433
  3635  002AD2                     l429:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;ecg.c: 68: if(ECG_FLAGS.leadsOkFlag == 1) {
  3639  002AD2  A5D2               	btfss	_ECG_FLAGS& (0+255),2,b
  3640  002AD4  EF6E  F015         	goto	u3931
  3641  002AD8  EF70  F015         	goto	u3930
  3642  002ADC                     u3931:
  3643  002ADC  EF74  F015         	goto	l433
  3644  002AE0                     u3930:
  3645  002AE0                     
  3646                           ; BSR set to: 0
  3647                           ;ecg.c: 69: Ecg_Background_Leads_Failure();
  3648  002AE0  EC76  F016         	call	_Ecg_Background_Leads_Failure	;wreg free
  3649  002AE4                     
  3650                           ;ecg.c: 70: ECG_FLAGS.leadsOkFlag = 0;
  3651  002AE4  0100               	movlb	0	; () banked
  3652  002AE6  95D2               	bcf	_ECG_FLAGS& (0+255),2,b
  3653  002AE8                     l433:
  3654  002AE8  0012               	return		;funcret
  3655  002AEA                     __end_of_Ecg_ProcessEcg:
  3656                           	opt callstack 0
  3657                           
  3658 ;; *************** function _Ecg_ProcessHeartbeat *****************
  3659 ;; Defined at:
  3660 ;;		line 91 in file "ecg.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;		None
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;  delta           2   51[COMRAM] int 
  3665 ;;  i               1   53[COMRAM] unsigned char 
  3666 ;;  ecgDeltaDiff    2   49[COMRAM] int 
  3667 ;;  ecgDeltaAbsS    2   47[COMRAM] int 
  3668 ;;  ecgDeltaSum     2   45[COMRAM] int 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3678 ;;      Params:         0       0       0       0       0       0       0       0       0
  3679 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3680 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3681 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3682 ;;Total ram usage:       11 bytes
  3683 ;; Hardware stack levels used:    1
  3684 ;; Hardware stack levels required when called:    6
  3685 ;; This function calls:
  3686 ;;		_TFT_DrawBitmap
  3687 ;;		_TFT_DrawFillRect
  3688 ;;		_abs
  3689 ;; This function is called by:
  3690 ;;		_Ecg_ProcessEcg
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693                           
  3694                           	psect	text6
  3695  000E00                     __ptext6:
  3696                           	opt callstack 0
  3697  000E00                     _Ecg_ProcessHeartbeat:
  3698                           	opt callstack 21
  3699  000E00                     
  3700                           ;ecg.c: 92: if(ECG_HEARTRATE.processHeartbeat == 1) {
  3701  000E00  0100               	movlb	0	; () banked
  3702  000E02  ADC0               	btfss	_ECG_HEARTRATE& (0+255),6,b
  3703  000E04  EF06  F007         	goto	u2831
  3704  000E08  EF08  F007         	goto	u2830
  3705  000E0C                     u2831:
  3706  000E0C  EF8B  F007         	goto	l449
  3707  000E10                     u2830:
  3708  000E10                     
  3709                           ; BSR set to: 0
  3710                           ;ecg.c: 94: int16_t ecgDeltaSum=0, ecgDeltaAbsSum=0, ecgDeltaDiff=0;
  3711  000E10  0E00               	movlw	0
  3712  000E12  6E2F               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,c
  3713  000E14  0E00               	movlw	0
  3714  000E16  6E2E               	movwf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,c
  3715  000E18  0E00               	movlw	0
  3716  000E1A  6E31               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,c
  3717  000E1C  0E00               	movlw	0
  3718  000E1E  6E30               	movwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,c
  3719                           
  3720                           ;ecg.c: 95: for(uint8_t i=1; i<4; i++) {
  3721  000E20  0E01               	movlw	1
  3722  000E22  6E36               	movwf	Ecg_ProcessHeartbeat@i^0,c
  3723  000E24                     l3825:
  3724                           
  3725                           ;ecg.c: 96: int16_t delta = ECG_BUFFER.data[i] - ECG_BUFFER.data[i - 1];
  3726  000E24  0EBB               	movlw	low _ECG_BUFFER
  3727  000E26  2436               	addwf	Ecg_ProcessHeartbeat@i^0,w,c
  3728  000E28  6ED9               	movwf	fsr2l,c
  3729  000E2A  6ADA               	clrf	fsr2h,c
  3730  000E2C  0E00               	movlw	high _ECG_BUFFER
  3731  000E2E  22DA               	addwfc	fsr2h,f,c
  3732  000E30  50DF               	movf	indf2,w,c
  3733  000E32  6E2C               	movwf	??_Ecg_ProcessHeartbeat^0,c
  3734  000E34  0EBA               	movlw	low (_ECG_BUFFER+65535)
  3735  000E36  2436               	addwf	Ecg_ProcessHeartbeat@i^0,w,c
  3736  000E38  6ED9               	movwf	fsr2l,c
  3737  000E3A  6ADA               	clrf	fsr2h,c
  3738  000E3C  0E00               	movlw	high (_ECG_BUFFER+65535)
  3739  000E3E  22DA               	addwfc	fsr2h,f,c
  3740  000E40  50DF               	movf	indf2,w,c
  3741  000E42  6E2D               	movwf	(??_Ecg_ProcessHeartbeat+1)^0,c
  3742  000E44  502D               	movf	(??_Ecg_ProcessHeartbeat+1)^0,w,c
  3743  000E46  5C2C               	subwf	??_Ecg_ProcessHeartbeat^0,w,c
  3744  000E48  6E34               	movwf	Ecg_ProcessHeartbeat@delta^0,c
  3745  000E4A  6A35               	clrf	(Ecg_ProcessHeartbeat@delta+1)^0,c
  3746  000E4C  A0D8               	btfss	status,0,c
  3747  000E4E  0635               	decf	(Ecg_ProcessHeartbeat@delta+1)^0,f,c
  3748  000E50                     
  3749                           ;ecg.c: 97: ecgDeltaSum += delta;
  3750  000E50  5034               	movf	Ecg_ProcessHeartbeat@delta^0,w,c
  3751  000E52  262E               	addwf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,f,c
  3752  000E54  5035               	movf	(Ecg_ProcessHeartbeat@delta+1)^0,w,c
  3753  000E56  222F               	addwfc	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,f,c
  3754  000E58                     
  3755                           ;ecg.c: 98: ecgDeltaAbsSum += abs(delta);
  3756  000E58  C034  F005         	movff	Ecg_ProcessHeartbeat@delta,abs@a
  3757  000E5C  C035  F006         	movff	Ecg_ProcessHeartbeat@delta+1,abs@a+1
  3758  000E60  EC23  F017         	call	_abs	;wreg free
  3759  000E64  5005               	movf	?_abs^0,w,c
  3760  000E66  2630               	addwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,f,c
  3761  000E68  5006               	movf	(?_abs+1)^0,w,c
  3762  000E6A  2231               	addwfc	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,f,c
  3763  000E6C  2A36               	incf	Ecg_ProcessHeartbeat@i^0,f,c
  3764  000E6E  0E03               	movlw	3
  3765  000E70  6436               	cpfsgt	Ecg_ProcessHeartbeat@i^0,c
  3766  000E72  EF3D  F007         	goto	u2841
  3767  000E76  EF3F  F007         	goto	u2840
  3768  000E7A                     u2841:
  3769  000E7A  EF12  F007         	goto	l3825
  3770  000E7E                     u2840:
  3771  000E7E                     
  3772                           ;ecg.c: 99: };ecg.c: 100: ecgDeltaDiff = ecgDeltaAbsSum - ecgDeltaSum;
  3773  000E7E  502E               	movf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,w,c
  3774  000E80  5C30               	subwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,w,c
  3775  000E82  6E32               	movwf	Ecg_ProcessHeartbeat@ecgDeltaDiff^0,c
  3776  000E84  502F               	movf	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,w,c
  3777  000E86  5831               	subwfb	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,w,c
  3778  000E88  6E33               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,c
  3779                           
  3780                           ;ecg.c: 103: if(ecgDeltaDiff > 60) {
  3781  000E8A  BE33               	btfsc	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,7,c
  3782  000E8C  EF51  F007         	goto	u2851
  3783  000E90  5033               	movf	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,w,c
  3784  000E92  E109               	bnz	u2850
  3785  000E94  0E3D               	movlw	61
  3786  000E96  5C32               	subwf	Ecg_ProcessHeartbeat@ecgDeltaDiff^0,w,c
  3787  000E98  A0D8               	btfss	status,0,c
  3788  000E9A  EF51  F007         	goto	u2851
  3789  000E9E  EF53  F007         	goto	u2850
  3790  000EA2                     u2851:
  3791  000EA2  EFBD  F007         	goto	l458
  3792  000EA6                     u2850:
  3793  000EA6                     
  3794                           ;ecg.c: 105: ECG_HEARTBEAT.data[ECG_HEARTBEAT.i++] = MILLISECONDS;
  3795  000EA6  0100               	movlb	0	; () banked
  3796  000EA8  51BA               	movf	(_ECG_HEARTBEAT+12)& (0+255),w,b
  3797  000EAA  0D04               	mullw	4
  3798  000EAC  0EAE               	movlw	low _ECG_HEARTBEAT
  3799  000EAE  24F3               	addwf	243,w,c
  3800  000EB0  6ED9               	movwf	fsr2l,c
  3801  000EB2  0E00               	movlw	high _ECG_HEARTBEAT
  3802  000EB4  20F4               	addwfc	prodh,w,c
  3803  000EB6  6EDA               	movwf	fsr2h,c
  3804  000EB8  C0CC  FFDE         	movff	_MILLISECONDS,postinc2
  3805  000EBC  C0CD  FFDE         	movff	_MILLISECONDS+1,postinc2
  3806  000EC0  C0CE  FFDE         	movff	_MILLISECONDS+2,postinc2
  3807  000EC4  C0CF  FFDE         	movff	_MILLISECONDS+3,postinc2
  3808  000EC8                     
  3809                           ; BSR set to: 0
  3810  000EC8  2BBA               	incf	(_ECG_HEARTBEAT+12)& (0+255),f,b
  3811  000ECA                     
  3812                           ; BSR set to: 0
  3813                           ;ecg.c: 106: if(ECG_HEARTBEAT.i == 3) ECG_HEARTBEAT.i = 0;
  3814  000ECA  0E03               	movlw	3
  3815  000ECC  19BA               	xorwf	(_ECG_HEARTBEAT+12)& (0+255),w,b
  3816  000ECE  A4D8               	btfss	status,2,c
  3817  000ED0  EF6C  F007         	goto	u2861
  3818  000ED4  EF6E  F007         	goto	u2860
  3819  000ED8                     u2861:
  3820  000ED8  EF70  F007         	goto	l3845
  3821  000EDC                     u2860:
  3822  000EDC                     
  3823                           ; BSR set to: 0
  3824  000EDC  0E00               	movlw	0
  3825  000EDE  6FBA               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  3826  000EE0                     l3845:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;ecg.c: 109: TFT_DrawBitmap(180, 7, ECG_ICON_HEART, 0xF800);
  3830  000EE0  0E00               	movlw	0
  3831  000EE2  6E18               	movwf	(TFT_DrawBitmap@x+1)^0,c
  3832  000EE4  0EB4               	movlw	180
  3833  000EE6  6E17               	movwf	TFT_DrawBitmap@x^0,c
  3834  000EE8  0E00               	movlw	0
  3835  000EEA  6E1A               	movwf	(TFT_DrawBitmap@y+1)^0,c
  3836  000EEC  0E07               	movlw	7
  3837  000EEE  6E19               	movwf	TFT_DrawBitmap@y^0,c
  3838  000EF0  0E2D               	movlw	low _ECG_ICON_HEART
  3839  000EF2  6E1B               	movwf	TFT_DrawBitmap@bitmap^0,c
  3840  000EF4  0E5F               	movlw	high _ECG_ICON_HEART
  3841  000EF6  6E1C               	movwf	(TFT_DrawBitmap@bitmap+1)^0,c
  3842  000EF8  0EF8               	movlw	248
  3843  000EFA  6E1E               	movwf	(TFT_DrawBitmap@color+1)^0,c
  3844  000EFC  0E00               	movlw	0
  3845  000EFE  6E1D               	movwf	TFT_DrawBitmap@color^0,c
  3846  000F00  EC4F  F00B         	call	_TFT_DrawBitmap	;wreg free
  3847  000F04                     
  3848                           ;ecg.c: 110: ECG_HEARTRATE.heartIconMsecDelay = 100 / 5;
  3849  000F04  0E14               	movlw	20
  3850  000F06  0100               	movlb	0	; () banked
  3851  000F08  6FC1               	movwf	(_ECG_HEARTRATE+1)& (0+255),b
  3852  000F0A                     
  3853                           ; BSR set to: 0
  3854                           ;ecg.c: 111: ECG_HEARTRATE.heartIconShown = 1;
  3855  000F0A  8FC0               	bsf	_ECG_HEARTRATE& (0+255),7,b
  3856  000F0C                     
  3857                           ; BSR set to: 0
  3858                           ;ecg.c: 114: ECG_HEARTRATE.heartbeatMsecDelay = 250 / 5;
  3859  000F0C  0E32               	movlw	50
  3860  000F0E  6FC2               	movwf	(_ECG_HEARTRATE+2)& (0+255),b
  3861  000F10                     
  3862                           ; BSR set to: 0
  3863                           ;ecg.c: 115: ECG_HEARTRATE.processHeartbeat = 0;
  3864  000F10  9DC0               	bcf	_ECG_HEARTRATE& (0+255),6,b
  3865  000F12  EFBD  F007         	goto	l458
  3866  000F16                     l449:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;ecg.c: 119: if(ECG_HEARTRATE.heartIconShown == 1) {
  3870  000F16  AFC0               	btfss	_ECG_HEARTRATE& (0+255),7,b
  3871  000F18  EF90  F007         	goto	u2871
  3872  000F1C  EF92  F007         	goto	u2870
  3873  000F20                     u2871:
  3874  000F20  EFB3  F007         	goto	l3863
  3875  000F24                     u2870:
  3876  000F24                     
  3877                           ; BSR set to: 0
  3878                           ;ecg.c: 120: ECG_HEARTRATE.heartIconMsecDelay--;
  3879  000F24  07C1               	decf	(_ECG_HEARTRATE+1)& (0+255),f,b
  3880  000F26                     
  3881                           ; BSR set to: 0
  3882                           ;ecg.c: 121: if(ECG_HEARTRATE.heartIconMsecDelay == 0) {
  3883  000F26  51C1               	movf	(_ECG_HEARTRATE+1)& (0+255),w,b
  3884  000F28  A4D8               	btfss	status,2,c
  3885  000F2A  EF99  F007         	goto	u2881
  3886  000F2E  EF9B  F007         	goto	u2880
  3887  000F32                     u2881:
  3888  000F32  EFB3  F007         	goto	l3863
  3889  000F36                     u2880:
  3890  000F36                     
  3891                           ; BSR set to: 0
  3892                           ;ecg.c: 122: TFT_DrawFillRect(180, 7, 20, 20, 0x0821);
  3893  000F36  0E00               	movlw	0
  3894  000F38  6E1F               	movwf	(TFT_DrawFillRect@x+1)^0,c
  3895  000F3A  0EB4               	movlw	180
  3896  000F3C  6E1E               	movwf	TFT_DrawFillRect@x^0,c
  3897  000F3E  0E00               	movlw	0
  3898  000F40  6E21               	movwf	(TFT_DrawFillRect@y+1)^0,c
  3899  000F42  0E07               	movlw	7
  3900  000F44  6E20               	movwf	TFT_DrawFillRect@y^0,c
  3901  000F46  0E00               	movlw	0
  3902  000F48  6E23               	movwf	(TFT_DrawFillRect@w+1)^0,c
  3903  000F4A  0E14               	movlw	20
  3904  000F4C  6E22               	movwf	TFT_DrawFillRect@w^0,c
  3905  000F4E  0E00               	movlw	0
  3906  000F50  6E25               	movwf	(TFT_DrawFillRect@h+1)^0,c
  3907  000F52  0E14               	movlw	20
  3908  000F54  6E24               	movwf	TFT_DrawFillRect@h^0,c
  3909  000F56  0E08               	movlw	8
  3910  000F58  6E27               	movwf	(TFT_DrawFillRect@color+1)^0,c
  3911  000F5A  0E21               	movlw	33
  3912  000F5C  6E26               	movwf	TFT_DrawFillRect@color^0,c
  3913  000F5E  ECB5  F011         	call	_TFT_DrawFillRect	;wreg free
  3914  000F62                     
  3915                           ;ecg.c: 123: ECG_HEARTRATE.heartIconShown = 0;
  3916  000F62  0100               	movlb	0	; () banked
  3917  000F64  9FC0               	bcf	_ECG_HEARTRATE& (0+255),7,b
  3918  000F66                     l3863:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;ecg.c: 124: };ecg.c: 125: };ecg.c: 128: ECG_HEARTRATE.heartbeatMsecDelay--;
  3922  000F66  07C2               	decf	(_ECG_HEARTRATE+2)& (0+255),f,b
  3923  000F68                     
  3924                           ; BSR set to: 0
  3925                           ;ecg.c: 129: if(ECG_HEARTRATE.heartbeatMsecDelay == 0) {
  3926  000F68  51C2               	movf	(_ECG_HEARTRATE+2)& (0+255),w,b
  3927  000F6A  A4D8               	btfss	status,2,c
  3928  000F6C  EFBA  F007         	goto	u2891
  3929  000F70  EFBC  F007         	goto	u2890
  3930  000F74                     u2891:
  3931  000F74  EFBD  F007         	goto	l458
  3932  000F78                     u2890:
  3933  000F78                     
  3934                           ; BSR set to: 0
  3935                           ;ecg.c: 130: ECG_HEARTRATE.processHeartbeat = 1;
  3936  000F78  8DC0               	bsf	_ECG_HEARTRATE& (0+255),6,b
  3937  000F7A                     l458:
  3938  000F7A  0012               	return		;funcret
  3939  000F7C                     __end_of_Ecg_ProcessHeartbeat:
  3940                           	opt callstack 0
  3941                           
  3942 ;; *************** function _TFT_DrawBitmap *****************
  3943 ;; Defined at:
  3944 ;;		line 311 in file "TFT.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  x               2   22[COMRAM] unsigned int 
  3947 ;;  y               2   24[COMRAM] unsigned int 
  3948 ;;  bitmap          2   26[COMRAM] PTR const unsigned char 
  3949 ;;		 -> ECG_ICON_HEART(62), 
  3950 ;;  color           2   28[COMRAM] unsigned int 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  i               2   37[COMRAM] unsigned int 
  3953 ;;  j               2   32[COMRAM] unsigned int 
  3954 ;;  byte            1   36[COMRAM] unsigned char 
  3955 ;;  h               1   35[COMRAM] unsigned char 
  3956 ;;  w               1   34[COMRAM] unsigned char 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3966 ;;      Params:         8       0       0       0       0       0       0       0       0
  3967 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3968 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3969 ;;      Totals:        17       0       0       0       0       0       0       0       0
  3970 ;;Total ram usage:       17 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    4
  3973 ;; This function calls:
  3974 ;;		_TFT_DrawPixel
  3975 ;; This function is called by:
  3976 ;;		_Ecg_ProcessHeartbeat
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text7
  3981  00169E                     __ptext7:
  3982                           	opt callstack 0
  3983  00169E                     _TFT_DrawBitmap:
  3984                           	opt callstack 22
  3985  00169E                     
  3986                           ;TFT.c: 312: uint8_t w = *bitmap++;
  3987  00169E  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  3988  0016A2  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  3989  0016A6                     	if	0	;tblptru may be non-zero
  3990  0016A6                     	endif
  3991  0016A6                     	if	0	;tblptru may be non-zero
  3992  0016A6                     	endif
  3993  0016A6  0008               	tblrd		*
  3994  0016A8  CFF5 F023          	movff	tablat,TFT_DrawBitmap@w
  3995  0016AC  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  3996  0016AE  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  3997  0016B0                     
  3998                           ;TFT.c: 313: uint8_t h = *bitmap++;
  3999  0016B0  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4000  0016B4  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4001  0016B8                     	if	0	;tblptru may be non-zero
  4002  0016B8                     	endif
  4003  0016B8                     	if	0	;tblptru may be non-zero
  4004  0016B8                     	endif
  4005  0016B8  0008               	tblrd		*
  4006  0016BA  CFF5 F024          	movff	tablat,TFT_DrawBitmap@h
  4007  0016BE  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4008  0016C0  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4009  0016C2                     
  4010                           ;TFT.c: 314: uint8_t byte = 0;
  4011  0016C2  0E00               	movlw	0
  4012  0016C4  6E25               	movwf	TFT_DrawBitmap@byte^0,c
  4013  0016C6                     
  4014                           ;TFT.c: 316: for(uint16_t j=0; j<h; j++, y++) {
  4015  0016C6  0E00               	movlw	0
  4016  0016C8  6E22               	movwf	(TFT_DrawBitmap@j+1)^0,c
  4017  0016CA  0E00               	movlw	0
  4018  0016CC  6E21               	movwf	TFT_DrawBitmap@j^0,c
  4019  0016CE  EFB6  F00B         	goto	l3563
  4020  0016D2                     l3543:
  4021                           
  4022                           ;TFT.c: 317: for(uint16_t i=0; i<w; i++) {
  4023  0016D2  0E00               	movlw	0
  4024  0016D4  6E27               	movwf	(TFT_DrawBitmap@i+1)^0,c
  4025  0016D6  0E00               	movlw	0
  4026  0016D8  6E26               	movwf	TFT_DrawBitmap@i^0,c
  4027  0016DA  EFA4  F00B         	goto	l3559
  4028  0016DE                     l3545:
  4029                           
  4030                           ;TFT.c: 318: if(i & 7) {
  4031  0016DE  0E07               	movlw	7
  4032  0016E0  1426               	andwf	TFT_DrawBitmap@i^0,w,c
  4033  0016E2  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4034  0016E4  0E00               	movlw	0
  4035  0016E6  1427               	andwf	(TFT_DrawBitmap@i+1)^0,w,c
  4036  0016E8  6E20               	movwf	(??_TFT_DrawBitmap+1)^0,c
  4037  0016EA  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4038  0016EC  1020               	iorwf	(??_TFT_DrawBitmap+1)^0,w,c
  4039  0016EE  B4D8               	btfsc	status,2,c
  4040  0016F0  EF7C  F00B         	goto	u2391
  4041  0016F4  EF7E  F00B         	goto	u2390
  4042  0016F8                     u2391:
  4043  0016F8  EF82  F00B         	goto	l3549
  4044  0016FC                     u2390:
  4045  0016FC                     
  4046                           ;TFT.c: 319: byte >>= 1;
  4047  0016FC  90D8               	bcf	status,0,c
  4048  0016FE  3225               	rrcf	TFT_DrawBitmap@byte^0,f,c
  4049                           
  4050                           ;TFT.c: 320: } else {
  4051  001700  EF8B  F00B         	goto	l3553
  4052  001704                     l3549:
  4053                           
  4054                           ;TFT.c: 321: byte = *bitmap++;
  4055  001704  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4056  001708  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4057  00170C                     	if	0	;tblptru may be non-zero
  4058  00170C                     	endif
  4059  00170C                     	if	0	;tblptru may be non-zero
  4060  00170C                     	endif
  4061  00170C  0008               	tblrd		*
  4062  00170E  CFF5 F025          	movff	tablat,TFT_DrawBitmap@byte
  4063  001712  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4064  001714  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4065  001716                     l3553:
  4066                           
  4067                           ;TFT.c: 322: };TFT.c: 323: if(byte & 0x01) TFT_DrawPixel((x + i), y, color);
  4068  001716  A025               	btfss	TFT_DrawBitmap@byte^0,0,c
  4069  001718  EF90  F00B         	goto	u2401
  4070  00171C  EF92  F00B         	goto	u2400
  4071  001720                     u2401:
  4072  001720  EFA2  F00B         	goto	l3557
  4073  001724                     u2400:
  4074  001724  5026               	movf	TFT_DrawBitmap@i^0,w,c
  4075  001726  2417               	addwf	TFT_DrawBitmap@x^0,w,c
  4076  001728  6E0D               	movwf	TFT_DrawPixel@x^0,c
  4077  00172A  5027               	movf	(TFT_DrawBitmap@i+1)^0,w,c
  4078  00172C  2018               	addwfc	(TFT_DrawBitmap@x+1)^0,w,c
  4079  00172E  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  4080  001730  C019  F00F         	movff	TFT_DrawBitmap@y,TFT_DrawPixel@y
  4081  001734  C01A  F010         	movff	TFT_DrawBitmap@y+1,TFT_DrawPixel@y+1
  4082  001738  C01D  F011         	movff	TFT_DrawBitmap@color,TFT_DrawPixel@color
  4083  00173C  C01E  F012         	movff	TFT_DrawBitmap@color+1,TFT_DrawPixel@color+1
  4084  001740  EC18  F00D         	call	_TFT_DrawPixel	;wreg free
  4085  001744                     l3557:
  4086  001744  4A26               	infsnz	TFT_DrawBitmap@i^0,f,c
  4087  001746  2A27               	incf	(TFT_DrawBitmap@i+1)^0,f,c
  4088  001748                     l3559:
  4089  001748  5023               	movf	TFT_DrawBitmap@w^0,w,c
  4090  00174A  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4091  00174C  6A20               	clrf	(??_TFT_DrawBitmap+1)^0,c
  4092  00174E  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4093  001750  5C26               	subwf	TFT_DrawBitmap@i^0,w,c
  4094  001752  5020               	movf	(??_TFT_DrawBitmap+1)^0,w,c
  4095  001754  5827               	subwfb	(TFT_DrawBitmap@i+1)^0,w,c
  4096  001756  A0D8               	btfss	status,0,c
  4097  001758  EFB0  F00B         	goto	u2411
  4098  00175C  EFB2  F00B         	goto	u2410
  4099  001760                     u2411:
  4100  001760  EF6F  F00B         	goto	l3545
  4101  001764                     u2410:
  4102  001764  4A21               	infsnz	TFT_DrawBitmap@j^0,f,c
  4103  001766  2A22               	incf	(TFT_DrawBitmap@j+1)^0,f,c
  4104  001768  4A19               	infsnz	TFT_DrawBitmap@y^0,f,c
  4105  00176A  2A1A               	incf	(TFT_DrawBitmap@y+1)^0,f,c
  4106  00176C                     l3563:
  4107  00176C  5024               	movf	TFT_DrawBitmap@h^0,w,c
  4108  00176E  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4109  001770  6A20               	clrf	(??_TFT_DrawBitmap+1)^0,c
  4110  001772  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4111  001774  5C21               	subwf	TFT_DrawBitmap@j^0,w,c
  4112  001776  5020               	movf	(??_TFT_DrawBitmap+1)^0,w,c
  4113  001778  5822               	subwfb	(TFT_DrawBitmap@j+1)^0,w,c
  4114  00177A  A0D8               	btfss	status,0,c
  4115  00177C  EFC2  F00B         	goto	u2421
  4116  001780  EFC4  F00B         	goto	u2420
  4117  001784                     u2421:
  4118  001784  EF69  F00B         	goto	l3543
  4119  001788                     u2420:
  4120  001788  0012               	return		;funcret
  4121  00178A                     __end_of_TFT_DrawBitmap:
  4122                           	opt callstack 0
  4123                           
  4124 ;; *************** function _Ecg_Draw *****************
  4125 ;; Defined at:
  4126 ;;		line 165 in file "ecg.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  ecg             2   55[COMRAM] unsigned int 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4140 ;;      Params:         0       0       0       0       0       0       0       0       0
  4141 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4143 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4144 ;;Total ram usage:        4 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    6
  4147 ;; This function calls:
  4148 ;;		_Ecg_Read
  4149 ;;		_TFT_DrawFillRect
  4150 ;;		_TFT_DrawLine
  4151 ;;		_TFT_GetHeight
  4152 ;;		_TFT_GetWidth
  4153 ;;		___lwdiv
  4154 ;; This function is called by:
  4155 ;;		_Ecg_ProcessEcg
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text8
  4160  00178A                     __ptext8:
  4161                           	opt callstack 0
  4162  00178A                     _Ecg_Draw:
  4163                           	opt callstack 21
  4164  00178A                     
  4165                           ;ecg.c: 166: uint16_t ecg = Ecg_Read();
  4166  00178A  EC31  F012         	call	_Ecg_Read	;wreg free
  4167  00178E  C005  F038         	movff	?_Ecg_Read,Ecg_Draw@ecg
  4168  001792  C006  F039         	movff	?_Ecg_Read+1,Ecg_Draw@ecg+1
  4169  001796                     
  4170                           ;ecg.c: 167: ecg /= 5;
  4171  001796  C038  F005         	movff	Ecg_Draw@ecg,___lwdiv@dividend
  4172  00179A  C039  F006         	movff	Ecg_Draw@ecg+1,___lwdiv@dividend+1
  4173  00179E  0E00               	movlw	0
  4174  0017A0  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  4175  0017A2  0E05               	movlw	5
  4176  0017A4  6E07               	movwf	___lwdiv@divisor^0,c
  4177  0017A6  EC6D  F012         	call	___lwdiv	;wreg free
  4178  0017AA  C005  F038         	movff	?___lwdiv,Ecg_Draw@ecg
  4179  0017AE  C006  F039         	movff	?___lwdiv+1,Ecg_Draw@ecg+1
  4180  0017B2                     
  4181                           ;ecg.c: 168: Ecg_Y = TFT_GetHeight() - ecg;
  4182  0017B2  EC9C  F015         	call	_TFT_GetHeight	;wreg free
  4183  0017B6  5038               	movf	Ecg_Draw@ecg^0,w,c
  4184  0017B8  5C05               	subwf	?_TFT_GetHeight^0,w,c
  4185  0017BA  0100               	movlb	0	; () banked
  4186  0017BC  6FD6               	movwf	_Ecg_Y& (0+255),b
  4187  0017BE  5039               	movf	(Ecg_Draw@ecg+1)^0,w,c
  4188  0017C0  5806               	subwfb	(?_TFT_GetHeight+1)^0,w,c
  4189  0017C2  6FD7               	movwf	(_Ecg_Y+1)& (0+255),b
  4190  0017C4                     
  4191                           ; BSR set to: 0
  4192                           ;ecg.c: 169: TFT_DrawFillRect(Ecg_X, 33, 20, (TFT_GetHeight() - 33), 0x0821);
  4193  0017C4  EC9C  F015         	call	_TFT_GetHeight	;wreg free
  4194  0017C8  0EDF               	movlw	223
  4195  0017CA  2405               	addwf	?_TFT_GetHeight^0,w,c
  4196  0017CC  6E36               	movwf	_Ecg_Draw$2248^0,c
  4197  0017CE  0EFF               	movlw	255
  4198  0017D0  2006               	addwfc	(?_TFT_GetHeight+1)^0,w,c
  4199  0017D2  6E37               	movwf	(_Ecg_Draw$2248+1)^0,c
  4200  0017D4                     
  4201                           ;ecg.c: 169: TFT_DrawFillRect(Ecg_X, 33, 20, (TFT_GetHeight() - 33), 0x0821);
  4202  0017D4  C056  F01E         	movff	_Ecg_X,TFT_DrawFillRect@x
  4203  0017D8  C057  F01F         	movff	_Ecg_X+1,TFT_DrawFillRect@x+1
  4204  0017DC  0E00               	movlw	0
  4205  0017DE  6E21               	movwf	(TFT_DrawFillRect@y+1)^0,c
  4206  0017E0  0E21               	movlw	33
  4207  0017E2  6E20               	movwf	TFT_DrawFillRect@y^0,c
  4208  0017E4  0E00               	movlw	0
  4209  0017E6  6E23               	movwf	(TFT_DrawFillRect@w+1)^0,c
  4210  0017E8  0E14               	movlw	20
  4211  0017EA  6E22               	movwf	TFT_DrawFillRect@w^0,c
  4212  0017EC  C036  F024         	movff	_Ecg_Draw$2248,TFT_DrawFillRect@h
  4213  0017F0  C037  F025         	movff	_Ecg_Draw$2248+1,TFT_DrawFillRect@h+1
  4214  0017F4  0E08               	movlw	8
  4215  0017F6  6E27               	movwf	(TFT_DrawFillRect@color+1)^0,c
  4216  0017F8  0E21               	movlw	33
  4217  0017FA  6E26               	movwf	TFT_DrawFillRect@color^0,c
  4218  0017FC  ECB5  F011         	call	_TFT_DrawFillRect	;wreg free
  4219  001800                     
  4220                           ;ecg.c: 170: TFT_DrawLine(Ecg_Xold, Ecg_Yold, Ecg_X, Ecg_Y, 0x07E0);
  4221  001800  C0D8  F017         	movff	_Ecg_Xold,TFT_DrawLine@x0
  4222  001804  C0D9  F018         	movff	_Ecg_Xold+1,TFT_DrawLine@x0+1
  4223  001808  C0D4  F019         	movff	_Ecg_Yold,TFT_DrawLine@y0
  4224  00180C  C0D5  F01A         	movff	_Ecg_Yold+1,TFT_DrawLine@y0+1
  4225  001810  C056  F01B         	movff	_Ecg_X,TFT_DrawLine@x1
  4226  001814  C057  F01C         	movff	_Ecg_X+1,TFT_DrawLine@x1+1
  4227  001818  C0D6  F01D         	movff	_Ecg_Y,TFT_DrawLine@y1
  4228  00181C  C0D7  F01E         	movff	_Ecg_Y+1,TFT_DrawLine@y1+1
  4229  001820  0E07               	movlw	7
  4230  001822  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  4231  001824  0EE0               	movlw	224
  4232  001826  6E1F               	movwf	TFT_DrawLine@color^0,c
  4233  001828  EC84  F004         	call	_TFT_DrawLine	;wreg free
  4234  00182C                     
  4235                           ;ecg.c: 171: Ecg_Xold = Ecg_X;
  4236  00182C  C056  F0D8         	movff	_Ecg_X,_Ecg_Xold
  4237  001830  C057  F0D9         	movff	_Ecg_X+1,_Ecg_Xold+1
  4238  001834                     
  4239                           ;ecg.c: 172: Ecg_Yold = Ecg_Y;
  4240  001834  C0D6  F0D4         	movff	_Ecg_Y,_Ecg_Yold
  4241  001838  C0D7  F0D5         	movff	_Ecg_Y+1,_Ecg_Yold+1
  4242  00183C                     
  4243                           ;ecg.c: 173: Ecg_X++;
  4244  00183C  4A56               	infsnz	_Ecg_X^0,f,c
  4245  00183E  2A57               	incf	(_Ecg_X+1)^0,f,c
  4246  001840                     
  4247                           ;ecg.c: 174: if(Ecg_X == TFT_GetWidth()) {
  4248  001840  EC75  F015         	call	_TFT_GetWidth	;wreg free
  4249  001844  5056               	movf	_Ecg_X^0,w,c
  4250  001846  1805               	xorwf	?_TFT_GetWidth^0,w,c
  4251  001848  E107               	bnz	u2821
  4252  00184A  5057               	movf	(_Ecg_X+1)^0,w,c
  4253  00184C  1806               	xorwf	(?_TFT_GetWidth+1)^0,w,c
  4254  00184E  A4D8               	btfss	status,2,c
  4255  001850  EF2C  F00C         	goto	u2821
  4256  001854  EF2E  F00C         	goto	u2820
  4257  001858                     u2821:
  4258  001858  EF37  F00C         	goto	l477
  4259  00185C                     u2820:
  4260  00185C                     
  4261                           ;ecg.c: 175: Ecg_X = 0;
  4262  00185C  0E00               	movlw	0
  4263  00185E  6E57               	movwf	(_Ecg_X+1)^0,c
  4264  001860  0E00               	movlw	0
  4265  001862  6E56               	movwf	_Ecg_X^0,c
  4266                           
  4267                           ;ecg.c: 176: Ecg_Xold = 0;
  4268  001864  0E00               	movlw	0
  4269  001866  0100               	movlb	0	; () banked
  4270  001868  6FD9               	movwf	(_Ecg_Xold+1)& (0+255),b
  4271  00186A  0E00               	movlw	0
  4272  00186C  6FD8               	movwf	_Ecg_Xold& (0+255),b
  4273  00186E                     l477:
  4274  00186E  0012               	return		;funcret
  4275  001870                     __end_of_Ecg_Draw:
  4276                           	opt callstack 0
  4277                           
  4278 ;; *************** function ___lwdiv *****************
  4279 ;; Defined at:
  4280 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/lwdiv.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  dividend        2    4[COMRAM] unsigned int 
  4283 ;;  divisor         2    6[COMRAM] unsigned int 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  quotient        2    8[COMRAM] unsigned int 
  4286 ;;  counter         1   10[COMRAM] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2    4[COMRAM] unsigned int 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4296 ;;      Params:         4       0       0       0       0       0       0       0       0
  4297 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4299 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4300 ;;Total ram usage:        7 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    2
  4303 ;; This function calls:
  4304 ;;		Nothing
  4305 ;; This function is called by:
  4306 ;;		_Ecg_Draw
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text9
  4311  0024DA                     __ptext9:
  4312                           	opt callstack 0
  4313  0024DA                     ___lwdiv:
  4314                           	opt callstack 24
  4315  0024DA  0E00               	movlw	0
  4316  0024DC  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
  4317  0024DE  0E00               	movlw	0
  4318  0024E0  6E09               	movwf	___lwdiv@quotient^0,c
  4319  0024E2  5007               	movf	___lwdiv@divisor^0,w,c
  4320  0024E4  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4321  0024E6  B4D8               	btfsc	status,2,c
  4322  0024E8  EF78  F012         	goto	u2661
  4323  0024EC  EF7A  F012         	goto	u2660
  4324  0024F0                     u2661:
  4325  0024F0  EFA2  F012         	goto	l1227
  4326  0024F4                     u2660:
  4327  0024F4  0E01               	movlw	1
  4328  0024F6  6E0B               	movwf	___lwdiv@counter^0,c
  4329  0024F8  EF82  F012         	goto	l3713
  4330  0024FC                     l3711:
  4331  0024FC  90D8               	bcf	status,0,c
  4332  0024FE  3607               	rlcf	___lwdiv@divisor^0,f,c
  4333  002500  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4334  002502  2A0B               	incf	___lwdiv@counter^0,f,c
  4335  002504                     l3713:
  4336  002504  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
  4337  002506  EF87  F012         	goto	u2671
  4338  00250A  EF89  F012         	goto	u2670
  4339  00250E                     u2671:
  4340  00250E  EF7E  F012         	goto	l3711
  4341  002512                     u2670:
  4342  002512                     l3715:
  4343  002512  90D8               	bcf	status,0,c
  4344  002514  3609               	rlcf	___lwdiv@quotient^0,f,c
  4345  002516  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4346  002518  5007               	movf	___lwdiv@divisor^0,w,c
  4347  00251A  5C05               	subwf	___lwdiv@dividend^0,w,c
  4348  00251C  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  4349  00251E  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4350  002520  A0D8               	btfss	status,0,c
  4351  002522  EF95  F012         	goto	u2681
  4352  002526  EF97  F012         	goto	u2680
  4353  00252A                     u2681:
  4354  00252A  EF9C  F012         	goto	l3723
  4355  00252E                     u2680:
  4356  00252E  5007               	movf	___lwdiv@divisor^0,w,c
  4357  002530  5E05               	subwf	___lwdiv@dividend^0,f,c
  4358  002532  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  4359  002534  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4360  002536  8009               	bsf	___lwdiv@quotient^0,0,c
  4361  002538                     l3723:
  4362  002538  90D8               	bcf	status,0,c
  4363  00253A  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4364  00253C  3207               	rrcf	___lwdiv@divisor^0,f,c
  4365  00253E  2E0B               	decfsz	___lwdiv@counter^0,f,c
  4366  002540  EF89  F012         	goto	l3715
  4367  002544                     l1227:
  4368  002544  C009  F005         	movff	___lwdiv@quotient,?___lwdiv
  4369  002548  C00A  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4370  00254C  0012               	return		;funcret
  4371  00254E                     __end_of___lwdiv:
  4372                           	opt callstack 0
  4373                           
  4374 ;; *************** function _Ecg_Read *****************
  4375 ;; Defined at:
  4376 ;;		line 149 in file "ecg.c"
  4377 ;; Parameters:    Size  Location     Type
  4378 ;;		None
  4379 ;; Auto vars:     Size  Location     Type
  4380 ;;  ecg             2    8[COMRAM] unsigned int 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  2    4[COMRAM] unsigned int 
  4383 ;; Registers used:
  4384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4390 ;;      Params:         2       0       0       0       0       0       0       0       0
  4391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4392 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4393 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4394 ;;Total ram usage:        6 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    2
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_Ecg_Draw
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404                           	psect	text10
  4405  002462                     __ptext10:
  4406                           	opt callstack 0
  4407  002462                     _Ecg_Read:
  4408                           	opt callstack 24
  4409  002462                     
  4410                           ;ecg.c: 150: uint16_t ecg;;ecg.c: 151: ADCON0bits.CHS = 0b0000;
  4411  002462  0EC3               	movlw	-61
  4412  002464  16C2               	andwf	194,f,c	;volatile
  4413  002466                     
  4414                           ;ecg.c: 152: ADCON0bits.ADON = 1;
  4415  002466  80C2               	bsf	194,0,c	;volatile
  4416  002468                     
  4417                           ;ecg.c: 153: GO_nDONE = 1;
  4418  002468  82C2               	bsf	4034,1,c	;volatile
  4419  00246A                     l469:
  4420  00246A  B2C2               	btfsc	4034,1,c	;volatile
  4421  00246C  EF3A  F012         	goto	u2431
  4422  002470  EF3C  F012         	goto	u2430
  4423  002474                     u2431:
  4424  002474  EF35  F012         	goto	l469
  4425  002478                     u2430:
  4426  002478                     
  4427                           ;ecg.c: 155: ecg = ADRESH;
  4428  002478  CFC4 F009          	movff	4036,Ecg_Read@ecg	;volatile
  4429  00247C  6A0A               	clrf	(Ecg_Read@ecg+1)^0,c
  4430  00247E                     
  4431                           ;ecg.c: 156: ecg = ecg << 8;
  4432  00247E  5009               	movf	Ecg_Read@ecg^0,w,c
  4433  002480  6E0A               	movwf	(Ecg_Read@ecg+1)^0,c
  4434  002482  6A09               	clrf	Ecg_Read@ecg^0,c
  4435  002484                     
  4436                           ;ecg.c: 157: ecg &= 0xFF00;
  4437  002484  0E00               	movlw	0
  4438  002486  1609               	andwf	Ecg_Read@ecg^0,f,c
  4439  002488  0EFF               	movlw	255
  4440  00248A  160A               	andwf	(Ecg_Read@ecg+1)^0,f,c
  4441  00248C                     
  4442                           ;ecg.c: 158: ecg |= ADRESL;
  4443  00248C  50C3               	movf	195,w,c	;volatile
  4444  00248E  1209               	iorwf	Ecg_Read@ecg^0,f,c
  4445  002490                     
  4446                           ;ecg.c: 159: ADCON0bits.ADON = 0;
  4447  002490  90C2               	bcf	194,0,c	;volatile
  4448  002492                     
  4449                           ;ecg.c: 160: ECG_BUFFER.data[ECG_BUFFER.i++] = (uint8_t)(ecg >> 2);
  4450  002492  0EBB               	movlw	low _ECG_BUFFER
  4451  002494  0100               	movlb	0	; () banked
  4452  002496  25BF               	addwf	(_ECG_BUFFER+4)& (0+255),w,b
  4453  002498  6ED9               	movwf	fsr2l,c
  4454  00249A  6ADA               	clrf	fsr2h,c
  4455  00249C  0E00               	movlw	high _ECG_BUFFER
  4456  00249E  22DA               	addwfc	fsr2h,f,c
  4457  0024A0  C009  F007         	movff	Ecg_Read@ecg,??_Ecg_Read
  4458  0024A4  C00A  F008         	movff	Ecg_Read@ecg+1,??_Ecg_Read+1
  4459  0024A8  90D8               	bcf	status,0,c
  4460  0024AA  3208               	rrcf	(??_Ecg_Read+1)^0,f,c
  4461  0024AC  3207               	rrcf	??_Ecg_Read^0,f,c
  4462  0024AE  90D8               	bcf	status,0,c
  4463  0024B0  3208               	rrcf	(??_Ecg_Read+1)^0,f,c
  4464  0024B2  3207               	rrcf	??_Ecg_Read^0,f,c
  4465  0024B4  5007               	movf	??_Ecg_Read^0,w,c
  4466  0024B6  6EDF               	movwf	indf2,c
  4467  0024B8                     
  4468                           ; BSR set to: 0
  4469  0024B8  2BBF               	incf	(_ECG_BUFFER+4)& (0+255),f,b
  4470  0024BA                     
  4471                           ; BSR set to: 0
  4472                           ;ecg.c: 161: if(ECG_BUFFER.i == 4) ECG_BUFFER.i = 0;
  4473  0024BA  0E04               	movlw	4
  4474  0024BC  19BF               	xorwf	(_ECG_BUFFER+4)& (0+255),w,b
  4475  0024BE  A4D8               	btfss	status,2,c
  4476  0024C0  EF64  F012         	goto	u2441
  4477  0024C4  EF66  F012         	goto	u2440
  4478  0024C8                     u2441:
  4479  0024C8  EF68  F012         	goto	l3587
  4480  0024CC                     u2440:
  4481  0024CC                     
  4482                           ; BSR set to: 0
  4483  0024CC  0E00               	movlw	0
  4484  0024CE  6FBF               	movwf	(_ECG_BUFFER+4)& (0+255),b
  4485  0024D0                     l3587:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;ecg.c: 162: return ecg;
  4489  0024D0  C009  F005         	movff	Ecg_Read@ecg,?_Ecg_Read
  4490  0024D4  C00A  F006         	movff	Ecg_Read@ecg+1,?_Ecg_Read+1
  4491  0024D8                     
  4492                           ; BSR set to: 0
  4493  0024D8  0012               	return		;funcret
  4494  0024DA                     __end_of_Ecg_Read:
  4495                           	opt callstack 0
  4496                           
  4497 ;; *************** function _A6_NetworkGetRSSILevel *****************
  4498 ;; Defined at:
  4499 ;;		line 168 in file "A6Lib.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  RSSI            1   64[COMRAM] unsigned char 
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      char 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : 0/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4513 ;;      Params:         0       0       0       0       0       0       0       0       0
  4514 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4515 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4516 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4517 ;;Total ram usage:        1 bytes
  4518 ;; Hardware stack levels used:    1
  4519 ;; Hardware stack levels required when called:    7
  4520 ;; This function calls:
  4521 ;;		_A6_NetworkGetRSSI
  4522 ;; This function is called by:
  4523 ;;		_loop
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text11
  4528  0023E8                     __ptext11:
  4529                           	opt callstack 0
  4530  0023E8                     _A6_NetworkGetRSSILevel:
  4531                           	opt callstack 22
  4532  0023E8                     
  4533                           ;A6Lib.c: 169: uint8_t RSSI = A6_NetworkGetRSSI();
  4534  0023E8  ECBF  F00E         	call	_A6_NetworkGetRSSI	;wreg free
  4535  0023EC  6E41               	movwf	A6_NetworkGetRSSILevel@RSSI^0,c
  4536  0023EE                     
  4537                           ;A6Lib.c: 170: if(RSSI == 99) return -1;
  4538  0023EE  0E63               	movlw	99
  4539  0023F0  1841               	xorwf	A6_NetworkGetRSSILevel@RSSI^0,w,c
  4540  0023F2  A4D8               	btfss	status,2,c
  4541  0023F4  EFFE  F011         	goto	u3561
  4542  0023F8  EF00  F012         	goto	u3560
  4543  0023FC                     u3561:
  4544  0023FC  EF03  F012         	goto	l4307
  4545  002400                     u3560:
  4546  002400  0EFF               	movlw	255
  4547  002402  EF30  F012         	goto	l607
  4548  002406                     l4307:
  4549                           
  4550                           ;A6Lib.c: 171: if(RSSI < 3) return 0;
  4551  002406  0E03               	movlw	3
  4552  002408  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4553  00240A  EF09  F012         	goto	u3571
  4554  00240E  EF0B  F012         	goto	u3570
  4555  002412                     u3571:
  4556  002412  EF0E  F012         	goto	l4313
  4557  002416                     u3570:
  4558  002416  0E00               	movlw	0
  4559  002418  EF30  F012         	goto	l607
  4560  00241C                     l4313:
  4561                           
  4562                           ;A6Lib.c: 172: if(RSSI < 10) return 1;
  4563  00241C  0E0A               	movlw	10
  4564  00241E  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4565  002420  EF14  F012         	goto	u3581
  4566  002424  EF16  F012         	goto	u3580
  4567  002428                     u3581:
  4568  002428  EF19  F012         	goto	l4319
  4569  00242C                     u3580:
  4570  00242C  0E01               	movlw	1
  4571  00242E  EF30  F012         	goto	l607
  4572  002432                     l4319:
  4573                           
  4574                           ;A6Lib.c: 173: if(RSSI < 15) return 2;
  4575  002432  0E0F               	movlw	15
  4576  002434  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4577  002436  EF1F  F012         	goto	u3591
  4578  00243A  EF21  F012         	goto	u3590
  4579  00243E                     u3591:
  4580  00243E  EF24  F012         	goto	l4325
  4581  002442                     u3590:
  4582  002442  0E02               	movlw	2
  4583  002444  EF30  F012         	goto	l607
  4584  002448                     l4325:
  4585                           
  4586                           ;A6Lib.c: 174: if(RSSI < 20) return 3;
  4587  002448  0E14               	movlw	20
  4588  00244A  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4589  00244C  EF2A  F012         	goto	u3601
  4590  002450  EF2C  F012         	goto	u3600
  4591  002454                     u3601:
  4592  002454  EF2F  F012         	goto	l4331
  4593  002458                     u3600:
  4594  002458  0E03               	movlw	3
  4595  00245A  EF30  F012         	goto	l607
  4596  00245E                     l4331:
  4597                           
  4598                           ;A6Lib.c: 175: return 4;
  4599  00245E  0E04               	movlw	4
  4600  002460                     l607:
  4601  002460  0012               	return		;funcret
  4602  002462                     __end_of_A6_NetworkGetRSSILevel:
  4603                           	opt callstack 0
  4604                           
  4605 ;; *************** function _A6_NetworkGetRSSI *****************
  4606 ;; Defined at:
  4607 ;;		line 151 in file "A6Lib.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  response       32   30[COMRAM] unsigned char [32]
  4612 ;;  RSSIToken       2   62[COMRAM] PTR unsigned char 
  4613 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  4614 ;;		 -> loop@operator(32), 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      unsigned char 
  4617 ;; Registers used:
  4618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4624 ;;      Params:         0       0       0       0       0       0       0       0       0
  4625 ;;      Locals:        34       0       0       0       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4627 ;;      Totals:        34       0       0       0       0       0       0       0       0
  4628 ;;Total ram usage:       34 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    6
  4631 ;; This function calls:
  4632 ;;		_A6_Command
  4633 ;;		_atoi
  4634 ;;		_strstr
  4635 ;;		_strtok
  4636 ;; This function is called by:
  4637 ;;		_A6_NetworkGetRSSILevel
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           	psect	text12
  4642  001D7E                     __ptext12:
  4643                           	opt callstack 0
  4644  001D7E                     _A6_NetworkGetRSSI:
  4645                           	opt callstack 22
  4646  001D7E                     
  4647                           ;A6Lib.c: 152: char *RSSIToken;;A6Lib.c: 153: char response[32];;A6Lib.c: 155: A6_Comman
      +                          d("AT+CSQ\r", 0, response, 32);
  4648  001D7E  0EC8               	movlw	low STR_20
  4649  001D80  6E18               	movwf	A6_Command@command^0,c
  4650  001D82  0E5F               	movlw	high STR_20
  4651  001D84  6E19               	movwf	(A6_Command@command+1)^0,c
  4652  001D86  0E00               	movlw	0
  4653  001D88  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4654  001D8A  0E00               	movlw	0
  4655  001D8C  6E1A               	movwf	A6_Command@timeout^0,c
  4656  001D8E  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4657  001D90  6E1C               	movwf	A6_Command@response^0,c
  4658  001D92  0E00               	movlw	high A6_NetworkGetRSSI@response
  4659  001D94  6E1D               	movwf	(A6_Command@response+1)^0,c
  4660  001D96  0E20               	movlw	32
  4661  001D98  6E1E               	movwf	A6_Command@responseLen^0,c
  4662  001D9A  ECEF  F010         	call	_A6_Command	;wreg free
  4663  001D9E                     
  4664                           ;A6Lib.c: 156: if(strstr(response, "+CSQ: ") != (0)) {
  4665  001D9E  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4666  001DA0  6E10               	movwf	strstr@s1^0,c
  4667  001DA2  0E00               	movlw	high A6_NetworkGetRSSI@response
  4668  001DA4  6E11               	movwf	(strstr@s1+1)^0,c
  4669  001DA6  0EE0               	movlw	low STR_21
  4670  001DA8  6E12               	movwf	strstr@s2^0,c
  4671  001DAA  0E5F               	movlw	high STR_21
  4672  001DAC  6E13               	movwf	(strstr@s2+1)^0,c
  4673  001DAE  EC20  F00F         	call	_strstr	;wreg free
  4674  001DB2  5010               	movf	?_strstr^0,w,c
  4675  001DB4  1011               	iorwf	(?_strstr+1)^0,w,c
  4676  001DB6  B4D8               	btfsc	status,2,c
  4677  001DB8  EFE0  F00E         	goto	u3461
  4678  001DBC  EFE2  F00E         	goto	u3460
  4679  001DC0                     u3461:
  4680  001DC0  EF1E  F00F         	goto	l4255
  4681  001DC4                     u3460:
  4682  001DC4                     
  4683                           ;A6Lib.c: 157: RSSIToken = strtok(response, " ");
  4684  001DC4  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4685  001DC6  6E12               	movwf	strtok@s1^0,c
  4686  001DC8  0E00               	movlw	high A6_NetworkGetRSSI@response
  4687  001DCA  6E13               	movwf	(strtok@s1+1)^0,c
  4688  001DCC  0ED6               	movlw	low (STR_15+6)
  4689  001DCE  6E14               	movwf	strtok@s2^0,c
  4690  001DD0  0E5F               	movlw	high (STR_15+6)
  4691  001DD2  6E15               	movwf	(strtok@s2+1)^0,c
  4692  001DD4  EC38  F00C         	call	_strtok	;wreg free
  4693  001DD8  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4694  001DDC  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4695                           
  4696                           ;A6Lib.c: 158: RSSIToken = strtok((0), " ");
  4697  001DE0  0E00               	movlw	0
  4698  001DE2  6E12               	movwf	strtok@s1^0,c
  4699  001DE4  0E00               	movlw	0
  4700  001DE6  6E13               	movwf	(strtok@s1+1)^0,c
  4701  001DE8  0ED6               	movlw	low (STR_15+6)
  4702  001DEA  6E14               	movwf	strtok@s2^0,c
  4703  001DEC  0E5F               	movlw	high (STR_15+6)
  4704  001DEE  6E15               	movwf	(strtok@s2+1)^0,c
  4705  001DF0  EC38  F00C         	call	_strtok	;wreg free
  4706  001DF4  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4707  001DF8  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4708  001DFC                     
  4709                           ;A6Lib.c: 159: if(RSSIToken != (0)) {
  4710  001DFC  503F               	movf	A6_NetworkGetRSSI@RSSIToken^0,w,c
  4711  001DFE  1040               	iorwf	(A6_NetworkGetRSSI@RSSIToken+1)^0,w,c
  4712  001E00  B4D8               	btfsc	status,2,c
  4713  001E02  EF05  F00F         	goto	u3471
  4714  001E06  EF07  F00F         	goto	u3470
  4715  001E0A                     u3471:
  4716  001E0A  EF1E  F00F         	goto	l4255
  4717  001E0E                     u3470:
  4718  001E0E                     
  4719                           ;A6Lib.c: 160: RSSIToken = strtok(RSSIToken, ",");
  4720  001E0E  C03F  F012         	movff	A6_NetworkGetRSSI@RSSIToken,strtok@s1
  4721  001E12  C040  F013         	movff	A6_NetworkGetRSSI@RSSIToken+1,strtok@s1+1
  4722  001E16  0EFB               	movlw	low STR_18
  4723  001E18  6E14               	movwf	strtok@s2^0,c
  4724  001E1A  0E5F               	movlw	high STR_18
  4725  001E1C  6E15               	movwf	(strtok@s2+1)^0,c
  4726  001E1E  EC38  F00C         	call	_strtok	;wreg free
  4727  001E22  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4728  001E26  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4729  001E2A                     
  4730                           ;A6Lib.c: 161: return atoi(RSSIToken);
  4731  001E2A  C03F  F00B         	movff	A6_NetworkGetRSSI@RSSIToken,atoi@s
  4732  001E2E  C040  F00C         	movff	A6_NetworkGetRSSI@RSSIToken+1,atoi@s+1
  4733  001E32  EC41  F00A         	call	_atoi	;wreg free
  4734  001E36  500B               	movf	?_atoi^0,w,c
  4735  001E38  EF1F  F00F         	goto	l603
  4736  001E3C                     l4255:
  4737                           
  4738                           ;A6Lib.c: 162: };A6Lib.c: 163: };A6Lib.c: 165: return 0;
  4739  001E3C  0E00               	movlw	0
  4740  001E3E                     l603:
  4741  001E3E  0012               	return		;funcret
  4742  001E40                     __end_of_A6_NetworkGetRSSI:
  4743                           	opt callstack 0
  4744                           
  4745 ;; *************** function _atoi *****************
  4746 ;; Defined at:
  4747 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atoi.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4750 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  4751 ;;		 -> loop@operator(32), 
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;  a               2   15[COMRAM] int 
  4754 ;;  sign            1   14[COMRAM] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  2   10[COMRAM] int 
  4757 ;; Registers used:
  4758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4764 ;;      Params:         2       0       0       0       0       0       0       0       0
  4765 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4766 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4767 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4768 ;;Total ram usage:        7 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    3
  4771 ;; This function calls:
  4772 ;;		___wmul
  4773 ;;		_isdigit
  4774 ;; This function is called by:
  4775 ;;		_A6_NetworkGetRSSI
  4776 ;;		_A6_NetworkGetStatus
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text13
  4781  001482                     __ptext13:
  4782                           	opt callstack 0
  4783  001482                     _atoi:
  4784                           	opt callstack 24
  4785  001482  EF45  F00A         	goto	l4093
  4786  001486                     l4091:
  4787  001486  4A0B               	infsnz	atoi@s^0,f,c
  4788  001488  2A0C               	incf	(atoi@s+1)^0,f,c
  4789  00148A                     l4093:
  4790  00148A  C00B  FFD9         	movff	atoi@s,fsr2l
  4791  00148E  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4792  001492  0E20               	movlw	32
  4793  001494  18DE               	xorwf	postinc2,w,c
  4794  001496  B4D8               	btfsc	status,2,c
  4795  001498  EF50  F00A         	goto	u3251
  4796  00149C  EF52  F00A         	goto	u3250
  4797  0014A0                     u3251:
  4798  0014A0  EF43  F00A         	goto	l4091
  4799  0014A4                     u3250:
  4800  0014A4  C00B  FFD9         	movff	atoi@s,fsr2l
  4801  0014A8  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4802  0014AC  0E09               	movlw	9
  4803  0014AE  18DE               	xorwf	postinc2,w,c
  4804  0014B0  B4D8               	btfsc	status,2,c
  4805  0014B2  EF5D  F00A         	goto	u3261
  4806  0014B6  EF5F  F00A         	goto	u3260
  4807  0014BA                     u3261:
  4808  0014BA  EF43  F00A         	goto	l4091
  4809  0014BE                     u3260:
  4810  0014BE  0E00               	movlw	0
  4811  0014C0  6E11               	movwf	(atoi@a+1)^0,c
  4812  0014C2  0E00               	movlw	0
  4813  0014C4  6E10               	movwf	atoi@a^0,c
  4814  0014C6  0E00               	movlw	0
  4815  0014C8  6E0F               	movwf	atoi@sign^0,c
  4816  0014CA  C00B  FFD9         	movff	atoi@s,fsr2l
  4817  0014CE  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4818  0014D2  0E2D               	movlw	45
  4819  0014D4  18DE               	xorwf	postinc2,w,c
  4820  0014D6  A4D8               	btfss	status,2,c
  4821  0014D8  EF70  F00A         	goto	u3271
  4822  0014DC  EF72  F00A         	goto	u3270
  4823  0014E0                     u3271:
  4824  0014E0  EF77  F00A         	goto	l4103
  4825  0014E4                     u3270:
  4826  0014E4  2A0F               	incf	atoi@sign^0,f,c
  4827  0014E6  4A0B               	infsnz	atoi@s^0,f,c
  4828  0014E8  2A0C               	incf	(atoi@s+1)^0,f,c
  4829  0014EA  EFA4  F00A         	goto	l4111
  4830  0014EE                     l4103:
  4831  0014EE  C00B  FFD9         	movff	atoi@s,fsr2l
  4832  0014F2  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4833  0014F6  0E2B               	movlw	43
  4834  0014F8  18DE               	xorwf	postinc2,w,c
  4835  0014FA  A4D8               	btfss	status,2,c
  4836  0014FC  EF82  F00A         	goto	u3281
  4837  001500  EF84  F00A         	goto	u3280
  4838  001504                     u3281:
  4839  001504  EFA4  F00A         	goto	l4111
  4840  001508                     u3280:
  4841  001508                     l4105:
  4842  001508  4A0B               	infsnz	atoi@s^0,f,c
  4843  00150A  2A0C               	incf	(atoi@s+1)^0,f,c
  4844  00150C  EFA4  F00A         	goto	l4111
  4845  001510                     l4107:
  4846  001510  C010  F005         	movff	atoi@a,___wmul@multiplier
  4847  001514  C011  F006         	movff	atoi@a+1,___wmul@multiplier+1
  4848  001518  0E00               	movlw	0
  4849  00151A  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4850  00151C  0E0A               	movlw	10
  4851  00151E  6E07               	movwf	___wmul@multiplicand^0,c
  4852  001520  EC82  F017         	call	___wmul	;wreg free
  4853  001524  C00B  FFD9         	movff	atoi@s,fsr2l
  4854  001528  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4855  00152C  50DF               	movf	indf2,w,c
  4856  00152E  6E0D               	movwf	??_atoi^0,c
  4857  001530  500D               	movf	??_atoi^0,w,c
  4858  001532  2605               	addwf	?___wmul^0,f,c
  4859  001534  0E00               	movlw	0
  4860  001536  2206               	addwfc	(?___wmul+1)^0,f,c
  4861  001538  0ED0               	movlw	208
  4862  00153A  2405               	addwf	?___wmul^0,w,c
  4863  00153C  6E10               	movwf	atoi@a^0,c
  4864  00153E  0EFF               	movlw	255
  4865  001540  2006               	addwfc	(?___wmul+1)^0,w,c
  4866  001542  6E11               	movwf	(atoi@a+1)^0,c
  4867  001544  EF84  F00A         	goto	l4105
  4868  001548                     l4111:
  4869  001548  C00B  FFD9         	movff	atoi@s,fsr2l
  4870  00154C  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4871  001550  50DF               	movf	indf2,w,c
  4872  001552  EC3D  F017         	call	_isdigit
  4873  001556  B0D8               	btfsc	status,0,c
  4874  001558  EFB0  F00A         	goto	u3291
  4875  00155C  EFB2  F00A         	goto	u3290
  4876  001560                     u3291:
  4877  001560  EF88  F00A         	goto	l4107
  4878  001564                     u3290:
  4879  001564  500F               	movf	atoi@sign^0,w,c
  4880  001566  B4D8               	btfsc	status,2,c
  4881  001568  EFB8  F00A         	goto	u3301
  4882  00156C  EFBA  F00A         	goto	u3300
  4883  001570                     u3301:
  4884  001570  EFC8  F00A         	goto	l1425
  4885  001574                     u3300:
  4886  001574  C010  F00D         	movff	atoi@a,??_atoi
  4887  001578  C011  F00E         	movff	atoi@a+1,??_atoi+1
  4888  00157C  1E0D               	comf	??_atoi^0,f,c
  4889  00157E  1E0E               	comf	(??_atoi+1)^0,f,c
  4890  001580  4A0D               	infsnz	??_atoi^0,f,c
  4891  001582  2A0E               	incf	(??_atoi+1)^0,f,c
  4892  001584  C00D  F00B         	movff	??_atoi,?_atoi
  4893  001588  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  4894  00158C  EFCC  F00A         	goto	l1426
  4895  001590                     l1425:
  4896  001590  C010  F00B         	movff	atoi@a,?_atoi
  4897  001594  C011  F00C         	movff	atoi@a+1,?_atoi+1
  4898  001598                     l1426:
  4899  001598  0012               	return		;funcret
  4900  00159A                     __end_of_atoi:
  4901                           	opt callstack 0
  4902                           
  4903 ;; *************** function _A6_NetworkGetOperator *****************
  4904 ;; Defined at:
  4905 ;;		line 178 in file "A6Lib.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  operator        2   30[COMRAM] PTR unsigned char 
  4908 ;;		 -> loop@operator(32), 
  4909 ;;  operatorLen     1   32[COMRAM] unsigned char 
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;  operatorToke    2   34[COMRAM] PTR unsigned char 
  4912 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  4913 ;;		 -> loop@operator(32), 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4923 ;;      Params:         3       0       0       0       0       0       0       0       0
  4924 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4925 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4926 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4927 ;;Total ram usage:        6 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    6
  4930 ;; This function calls:
  4931 ;;		_A6_Command
  4932 ;;		_strcpy
  4933 ;;		_strstr
  4934 ;;		_strtok
  4935 ;; This function is called by:
  4936 ;;		_loop
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           	psect	text14
  4941  0010EA                     __ptext14:
  4942                           	opt callstack 0
  4943  0010EA                     _A6_NetworkGetOperator:
  4944                           	opt callstack 23
  4945  0010EA                     
  4946                           ;A6Lib.c: 179: char *operatorToken;;A6Lib.c: 181: A6_Command("AT+COPS?\r", 0, operator, 
      +                          32);
  4947  0010EA  0EB5               	movlw	low STR_25
  4948  0010EC  6E18               	movwf	A6_Command@command^0,c
  4949  0010EE  0E5F               	movlw	high STR_25
  4950  0010F0  6E19               	movwf	(A6_Command@command+1)^0,c
  4951  0010F2  0E00               	movlw	0
  4952  0010F4  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4953  0010F6  0E00               	movlw	0
  4954  0010F8  6E1A               	movwf	A6_Command@timeout^0,c
  4955  0010FA  C01F  F01C         	movff	A6_NetworkGetOperator@operator,A6_Command@response
  4956  0010FE  C020  F01D         	movff	A6_NetworkGetOperator@operator+1,A6_Command@response+1
  4957  001102  0E20               	movlw	32
  4958  001104  6E1E               	movwf	A6_Command@responseLen^0,c
  4959  001106  ECEF  F010         	call	_A6_Command	;wreg free
  4960  00110A                     
  4961                           ;A6Lib.c: 182: if(strstr(operator, "+COPS: ") != (0)) {
  4962  00110A  C01F  F010         	movff	A6_NetworkGetOperator@operator,strstr@s1
  4963  00110E  C020  F011         	movff	A6_NetworkGetOperator@operator+1,strstr@s1+1
  4964  001112  0ED8               	movlw	low STR_26
  4965  001114  6E12               	movwf	strstr@s2^0,c
  4966  001116  0E5F               	movlw	high STR_26
  4967  001118  6E13               	movwf	(strstr@s2+1)^0,c
  4968  00111A  EC20  F00F         	call	_strstr	;wreg free
  4969  00111E  5010               	movf	?_strstr^0,w,c
  4970  001120  1011               	iorwf	(?_strstr+1)^0,w,c
  4971  001122  B4D8               	btfsc	status,2,c
  4972  001124  EF96  F008         	goto	u3541
  4973  001128  EF98  F008         	goto	u3540
  4974  00112C                     u3541:
  4975  00112C  EF07  F009         	goto	l4297
  4976  001130                     u3540:
  4977  001130                     
  4978                           ;A6Lib.c: 183: operatorToken = strtok(operator, " ");
  4979  001130  C01F  F012         	movff	A6_NetworkGetOperator@operator,strtok@s1
  4980  001134  C020  F013         	movff	A6_NetworkGetOperator@operator+1,strtok@s1+1
  4981  001138  0ED6               	movlw	low (STR_15+6)
  4982  00113A  6E14               	movwf	strtok@s2^0,c
  4983  00113C  0E5F               	movlw	high (STR_15+6)
  4984  00113E  6E15               	movwf	(strtok@s2+1)^0,c
  4985  001140  EC38  F00C         	call	_strtok	;wreg free
  4986  001144  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  4987  001148  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  4988                           
  4989                           ;A6Lib.c: 184: operatorToken = strtok((0), " ");
  4990  00114C  0E00               	movlw	0
  4991  00114E  6E12               	movwf	strtok@s1^0,c
  4992  001150  0E00               	movlw	0
  4993  001152  6E13               	movwf	(strtok@s1+1)^0,c
  4994  001154  0ED6               	movlw	low (STR_15+6)
  4995  001156  6E14               	movwf	strtok@s2^0,c
  4996  001158  0E5F               	movlw	high (STR_15+6)
  4997  00115A  6E15               	movwf	(strtok@s2+1)^0,c
  4998  00115C  EC38  F00C         	call	_strtok	;wreg free
  4999  001160  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  5000  001164  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  5001                           
  5002                           ;A6Lib.c: 185: operatorToken = strtok(operatorToken, ",");
  5003  001168  C023  F012         	movff	A6_NetworkGetOperator@operatorToken,strtok@s1
  5004  00116C  C024  F013         	movff	A6_NetworkGetOperator@operatorToken+1,strtok@s1+1
  5005  001170  0EFB               	movlw	low STR_18
  5006  001172  6E14               	movwf	strtok@s2^0,c
  5007  001174  0E5F               	movlw	high STR_18
  5008  001176  6E15               	movwf	(strtok@s2+1)^0,c
  5009  001178  EC38  F00C         	call	_strtok	;wreg free
  5010  00117C  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  5011  001180  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  5012  001184                     
  5013                           ;A6Lib.c: 186: if(operatorToken[0] == '0') {
  5014  001184  C023  FFD9         	movff	A6_NetworkGetOperator@operatorToken,fsr2l
  5015  001188  C024  FFDA         	movff	A6_NetworkGetOperator@operatorToken+1,fsr2h
  5016  00118C  0E30               	movlw	48
  5017  00118E  18DE               	xorwf	postinc2,w,c
  5018  001190  A4D8               	btfss	status,2,c
  5019  001192  EFCD  F008         	goto	u3551
  5020  001196  EFCF  F008         	goto	u3550
  5021  00119A                     u3551:
  5022  00119A  EF07  F009         	goto	l4297
  5023  00119E                     u3550:
  5024  00119E                     
  5025                           ;A6Lib.c: 187: operatorToken = strtok((0), ",");
  5026  00119E  0E00               	movlw	0
  5027  0011A0  6E12               	movwf	strtok@s1^0,c
  5028  0011A2  0E00               	movlw	0
  5029  0011A4  6E13               	movwf	(strtok@s1+1)^0,c
  5030  0011A6  0EFB               	movlw	low STR_18
  5031  0011A8  6E14               	movwf	strtok@s2^0,c
  5032  0011AA  0E5F               	movlw	high STR_18
  5033  0011AC  6E15               	movwf	(strtok@s2+1)^0,c
  5034  0011AE  EC38  F00C         	call	_strtok	;wreg free
  5035  0011B2  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  5036  0011B6  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  5037                           
  5038                           ;A6Lib.c: 188: operatorToken = strtok((0), ",");
  5039  0011BA  0E00               	movlw	0
  5040  0011BC  6E12               	movwf	strtok@s1^0,c
  5041  0011BE  0E00               	movlw	0
  5042  0011C0  6E13               	movwf	(strtok@s1+1)^0,c
  5043  0011C2  0EFB               	movlw	low STR_18
  5044  0011C4  6E14               	movwf	strtok@s2^0,c
  5045  0011C6  0E5F               	movlw	high STR_18
  5046  0011C8  6E15               	movwf	(strtok@s2+1)^0,c
  5047  0011CA  EC38  F00C         	call	_strtok	;wreg free
  5048  0011CE  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  5049  0011D2  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  5050                           
  5051                           ;A6Lib.c: 189: operatorToken = strtok(++operatorToken, "\"");
  5052  0011D6  4A23               	infsnz	A6_NetworkGetOperator@operatorToken^0,f,c
  5053  0011D8  2A24               	incf	(A6_NetworkGetOperator@operatorToken+1)^0,f,c
  5054  0011DA  C023  F012         	movff	A6_NetworkGetOperator@operatorToken,strtok@s1
  5055  0011DE  C024  F013         	movff	A6_NetworkGetOperator@operatorToken+1,strtok@s1+1
  5056  0011E2  0EF9               	movlw	low STR_32
  5057  0011E4  6E14               	movwf	strtok@s2^0,c
  5058  0011E6  0E5F               	movlw	high STR_32
  5059  0011E8  6E15               	movwf	(strtok@s2+1)^0,c
  5060  0011EA  EC38  F00C         	call	_strtok	;wreg free
  5061  0011EE  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  5062  0011F2  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  5063                           
  5064                           ;A6Lib.c: 190: strcpy(operator, operatorToken);
  5065  0011F6  C01F  F005         	movff	A6_NetworkGetOperator@operator,strcpy@to
  5066  0011FA  C020  F006         	movff	A6_NetworkGetOperator@operator+1,strcpy@to+1
  5067  0011FE  C023  F007         	movff	A6_NetworkGetOperator@operatorToken,strcpy@from
  5068  001202  C024  F008         	movff	A6_NetworkGetOperator@operatorToken+1,strcpy@from+1
  5069  001206  ECD6  F014         	call	_strcpy	;wreg free
  5070  00120A  EF11  F009         	goto	l616
  5071  00120E                     l4297:
  5072                           
  5073                           ;A6Lib.c: 192: };A6Lib.c: 193: };A6Lib.c: 194: strcpy(operator, "-");
  5074  00120E  C01F  F005         	movff	A6_NetworkGetOperator@operator,strcpy@to
  5075  001212  C020  F006         	movff	A6_NetworkGetOperator@operator+1,strcpy@to+1
  5076  001216  0EFD               	movlw	low STR_33
  5077  001218  6E07               	movwf	strcpy@from^0,c
  5078  00121A  0E5F               	movlw	high STR_33
  5079  00121C  6E08               	movwf	(strcpy@from+1)^0,c
  5080  00121E  ECD6  F014         	call	_strcpy	;wreg free
  5081  001222                     l616:
  5082  001222  0012               	return		;funcret
  5083  001224                     __end_of_A6_NetworkGetOperator:
  5084                           	opt callstack 0
  5085                           
  5086 ;; *************** function _strcpy *****************
  5087 ;; Defined at:
  5088 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcpy.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  to              2    4[COMRAM] PTR unsigned char 
  5091 ;;		 -> loop@operator(32), 
  5092 ;;  from            2    6[COMRAM] PTR const unsigned char 
  5093 ;;		 -> STR_33(2), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), 
  5094 ;;		 -> NULL(0), loop@operator(32), 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  cp              2    8[COMRAM] PTR unsigned char 
  5097 ;;		 -> loop@operator(32), 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  2    4[COMRAM] PTR unsigned char 
  5100 ;; Registers used:
  5101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5107 ;;      Params:         4       0       0       0       0       0       0       0       0
  5108 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5110 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5111 ;;Total ram usage:        6 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    2
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_A6_NetworkGetOperator
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text15
  5122  0029AC                     __ptext15:
  5123                           	opt callstack 0
  5124  0029AC                     _strcpy:
  5125                           	opt callstack 26
  5126  0029AC  C005  F009         	movff	strcpy@to,strcpy@cp
  5127  0029B0  C006  F00A         	movff	strcpy@to+1,strcpy@cp+1
  5128  0029B4  EFE0  F014         	goto	l4263
  5129  0029B8                     l4261:
  5130  0029B8  4A09               	infsnz	strcpy@cp^0,f,c
  5131  0029BA  2A0A               	incf	(strcpy@cp+1)^0,f,c
  5132  0029BC  4A07               	infsnz	strcpy@from^0,f,c
  5133  0029BE  2A08               	incf	(strcpy@from+1)^0,f,c
  5134  0029C0                     l4263:
  5135  0029C0  C007  FFF6         	movff	strcpy@from,tblptrl
  5136  0029C4  C008  FFF7         	movff	strcpy@from+1,tblptrh
  5137  0029C8  6AF8               	clrf	tblptru,c
  5138  0029CA  C009  FFD9         	movff	strcpy@cp,fsr2l
  5139  0029CE  C00A  FFDA         	movff	strcpy@cp+1,fsr2h
  5140  0029D2  0E07               	movlw	(high __ramtop+-1)
  5141  0029D4  64F7               	cpfsgt	tblptrh,c
  5142  0029D6  D003               	bra	u3487
  5143  0029D8  0008               	tblrd		*
  5144  0029DA  50F5               	movf	tablat,w,c
  5145  0029DC  D005               	bra	u3480
  5146  0029DE                     u3487:
  5147  0029DE  CFF6 FFE1          	movff	tblptrl,fsr1l
  5148  0029E2  CFF7 FFE2          	movff	tblptrh,fsr1h
  5149  0029E6  50E7               	movf	indf1,w,c
  5150  0029E8                     u3480:
  5151  0029E8  6EDF               	movwf	indf2,c
  5152  0029EA  50DF               	movf	indf2,w,c
  5153  0029EC  A4D8               	btfss	status,2,c
  5154  0029EE  EFFB  F014         	goto	u3491
  5155  0029F2  EFFD  F014         	goto	u3490
  5156  0029F6                     u3491:
  5157  0029F6  EFDC  F014         	goto	l4261
  5158  0029FA                     u3490:
  5159  0029FA  0012               	return		;funcret
  5160  0029FC                     __end_of_strcpy:
  5161                           	opt callstack 0
  5162                           
  5163 ;; *************** function _init *****************
  5164 ;; Defined at:
  5165 ;;		line 15 in file "init.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5181 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5182 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5183 ;;Total ram usage:        2 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    2
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_main
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text16
  5194  00254E                     __ptext16:
  5195                           	opt callstack 0
  5196  00254E                     _init:
  5197                           	opt callstack 28
  5198  00254E                     
  5199                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  5200  00254E  9ED3               	bcf	211,7,c	;volatile
  5201  002550                     
  5202                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  5203  002550  0E70               	movlw	112
  5204  002552  12D3               	iorwf	211,f,c	;volatile
  5205                           
  5206                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  5207  002554  0EFC               	movlw	-4
  5208  002556  16D3               	andwf	211,f,c	;volatile
  5209  002558                     
  5210                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  5211  002558  8E9B               	bsf	155,7,c	;volatile
  5212                           
  5213                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  5214  00255A  0EE0               	movlw	-32
  5215  00255C  169B               	andwf	155,f,c	;volatile
  5216  00255E                     
  5217                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  5218  00255E  0E07               	movlw	7
  5219  002560  6E06               	movwf	(??_init+1)^0,c
  5220  002562  0E17               	movlw	23
  5221  002564  6E05               	movwf	??_init^0,c
  5222  002566  0E6A               	movlw	106
  5223  002568                     u4107:
  5224  002568  2EE8               	decfsz	wreg,f,c
  5225  00256A  D7FE               	bra	u4107
  5226  00256C  2E05               	decfsz	??_init^0,f,c
  5227  00256E  D7FC               	bra	u4107
  5228  002570  2E06               	decfsz	(??_init+1)^0,f,c
  5229  002572  D7FA               	bra	u4107
  5230  002574  D000               	nop2	
  5231  002576                     
  5232                           ;init.c: 27: UCONbits.USBEN = 0;
  5233  002576  966D               	bcf	109,3,c	;volatile
  5234  002578                     
  5235                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  5236  002578  866F               	bsf	111,3,c	;volatile
  5237  00257A                     
  5238                           ;init.c: 41: TRISA = 0b00001011;
  5239  00257A  0E0B               	movlw	11
  5240  00257C  6E92               	movwf	146,c	;volatile
  5241  00257E                     
  5242                           ;init.c: 42: LATA = 0x00;
  5243  00257E  0E00               	movlw	0
  5244  002580  6E89               	movwf	137,c	;volatile
  5245  002582                     
  5246                           ;init.c: 48: RBPU = 1;
  5247  002582  8EF1               	bsf	4081,7,c	;volatile
  5248  002584                     
  5249                           ;init.c: 49: TRISB = 0x00;
  5250  002584  0E00               	movlw	0
  5251  002586  6E93               	movwf	147,c	;volatile
  5252  002588                     
  5253                           ;init.c: 50: LATB = 0x00;
  5254  002588  0E00               	movlw	0
  5255  00258A  6E8A               	movwf	138,c	;volatile
  5256  00258C                     
  5257                           ;init.c: 63: TRISC = 0b11110000;
  5258  00258C  0EF0               	movlw	240
  5259  00258E  6E94               	movwf	148,c	;volatile
  5260  002590                     
  5261                           ;init.c: 64: LATC = 0x00;
  5262  002590  0E00               	movlw	0
  5263  002592  6E8B               	movwf	139,c	;volatile
  5264  002594                     
  5265                           ;init.c: 67: ADCON0bits.ADON = 0;
  5266  002594  90C2               	bcf	194,0,c	;volatile
  5267  002596                     
  5268                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  5269  002596  0ECF               	movlw	-49
  5270  002598  16C1               	andwf	193,f,c	;volatile
  5271  00259A                     
  5272                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  5273  00259A  50C1               	movf	193,w,c	;volatile
  5274  00259C  0BF0               	andlw	-16
  5275  00259E  090E               	iorlw	14
  5276  0025A0  6EC1               	movwf	193,c	;volatile
  5277  0025A2                     
  5278                           ;init.c: 70: ADCON2bits.ADFM = 1;
  5279  0025A2  8EC0               	bsf	192,7,c	;volatile
  5280  0025A4                     
  5281                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  5282  0025A4  0EC7               	movlw	-57
  5283  0025A6  16C0               	andwf	192,f,c	;volatile
  5284  0025A8                     
  5285                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  5286  0025A8  50C0               	movf	192,w,c	;volatile
  5287  0025AA  0BF8               	andlw	-8
  5288  0025AC  0902               	iorlw	2
  5289  0025AE  6EC0               	movwf	192,c	;volatile
  5290  0025B0                     
  5291                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  5292  0025B0  0ECF               	movlw	-49
  5293  0025B2  16B1               	andwf	177,f,c	;volatile
  5294  0025B4                     
  5295                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  5296  0025B4  92B1               	bcf	177,1,c	;volatile
  5297  0025B6                     
  5298                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  5299  0025B6  80B1               	bsf	177,0,c	;volatile
  5300  0025B8                     
  5301                           ;init.c: 78: TMR3IE = 1;
  5302  0025B8  82A0               	bsf	4000,1,c	;volatile
  5303  0025BA                     
  5304                           ;init.c: 81: PEIE = 1;
  5305  0025BA  8CF2               	bsf	4082,6,c	;volatile
  5306  0025BC                     
  5307                           ;init.c: 82: GIE = 1;
  5308  0025BC  8EF2               	bsf	4082,7,c	;volatile
  5309  0025BE  0012               	return		;funcret
  5310  0025C0                     __end_of_init:
  5311                           	opt callstack 0
  5312                           
  5313 ;; *************** function _TFT_Init *****************
  5314 ;; Defined at:
  5315 ;;		line 46 in file "TFT.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  orientation     1    wreg     unsigned char 
  5318 ;;  color           2   32[COMRAM] unsigned int 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  orientation     1   40[COMRAM] unsigned char 
  5321 ;;  i               2   43[COMRAM] unsigned int 
  5322 ;;  cmd             2   41[COMRAM] unsigned int 
  5323 ;;  initSequence    2   38[COMRAM] unsigned int 
  5324 ;;  data            2   36[COMRAM] unsigned int 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      void 
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5334 ;;      Params:         2       0       0       0       0       0       0       0       0
  5335 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5336 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5337 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5338 ;;Total ram usage:       13 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    6
  5341 ;; This function calls:
  5342 ;;		_TFT_OrientationSet
  5343 ;;		_TFT_Reset
  5344 ;;		_TFT_WriteRegister
  5345 ;; This function is called by:
  5346 ;;		_main
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text17
  5351  001952                     __ptext17:
  5352                           	opt callstack 0
  5353  001952                     _TFT_Init:
  5354                           	opt callstack 24
  5355                           
  5356                           ;incstack = 0
  5357                           ;TFT_Init@orientation stored from wreg
  5358  001952  6E29               	movwf	TFT_Init@orientation^0,c
  5359  001954                     
  5360                           ;TFT.c: 47: TFT_Reset();
  5361  001954  ECA5  F017         	call	_TFT_Reset	;wreg free
  5362  001958                     
  5363                           ;TFT.c: 48: _delay((unsigned long)((200)*(48000000/4000.0)));
  5364  001958  0E0D               	movlw	13
  5365  00195A  6E24               	movwf	(??_TFT_Init+1)^0,c
  5366  00195C  0E2D               	movlw	45
  5367  00195E  6E23               	movwf	??_TFT_Init^0,c
  5368  001960  0ED8               	movlw	216
  5369  001962                     u4117:
  5370  001962  2EE8               	decfsz	wreg,f,c
  5371  001964  D7FE               	bra	u4117
  5372  001966  2E23               	decfsz	??_TFT_Init^0,f,c
  5373  001968  D7FC               	bra	u4117
  5374  00196A  2E24               	decfsz	(??_TFT_Init+1)^0,f,c
  5375  00196C  D7FA               	bra	u4117
  5376  00196E                     
  5377                           ;TFT.c: 51: uint16_t i=0, cmd, data;
  5378  00196E  0E00               	movlw	0
  5379  001970  6E2D               	movwf	(TFT_Init@i+1)^0,c
  5380  001972  0E00               	movlw	0
  5381  001974  6E2C               	movwf	TFT_Init@i^0,c
  5382  001976                     
  5383                           ;TFT.c: 52: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  5384  001976  0E00               	movlw	0
  5385  001978  6E28               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  5386  00197A  0E66               	movlw	102
  5387  00197C  6E27               	movwf	TFT_Init@initSequenceSize^0,c
  5388                           
  5389                           ;TFT.c: 53: while(i != initSequenceSize) {
  5390  00197E  EF04  F00D         	goto	l4405
  5391  001982                     l4393:
  5392                           
  5393                           ;TFT.c: 54: cmd = TFT_Init_Sequence[i++];
  5394  001982  90D8               	bcf	status,0,c
  5395  001984  342C               	rlcf	TFT_Init@i^0,w,c
  5396  001986  6EF6               	movwf	tblptrl,c
  5397  001988  342D               	rlcf	(TFT_Init@i+1)^0,w,c
  5398  00198A  6EF7               	movwf	tblptrh,c
  5399  00198C  0E2D               	movlw	low _TFT_Init_Sequence
  5400  00198E  26F6               	addwf	tblptrl,f,c
  5401  001990  0E5E               	movlw	high _TFT_Init_Sequence
  5402  001992  22F7               	addwfc	tblptrh,f,c
  5403  001994                     	if	0	;There are less than 3 active tblptr bytes
  5404  001994                     	endif
  5405  001994  0009               	tblrd		*+
  5406  001996  CFF5 F02A          	movff	tablat,TFT_Init@cmd
  5407  00199A  000A               	tblrd		*-
  5408  00199C  CFF5 F02B          	movff	tablat,TFT_Init@cmd+1
  5409  0019A0  4A2C               	infsnz	TFT_Init@i^0,f,c
  5410  0019A2  2A2D               	incf	(TFT_Init@i+1)^0,f,c
  5411  0019A4                     
  5412                           ;TFT.c: 55: data = TFT_Init_Sequence[i++];
  5413  0019A4  90D8               	bcf	status,0,c
  5414  0019A6  342C               	rlcf	TFT_Init@i^0,w,c
  5415  0019A8  6EF6               	movwf	tblptrl,c
  5416  0019AA  342D               	rlcf	(TFT_Init@i+1)^0,w,c
  5417  0019AC  6EF7               	movwf	tblptrh,c
  5418  0019AE  0E2D               	movlw	low _TFT_Init_Sequence
  5419  0019B0  26F6               	addwf	tblptrl,f,c
  5420  0019B2  0E5E               	movlw	high _TFT_Init_Sequence
  5421  0019B4  22F7               	addwfc	tblptrh,f,c
  5422  0019B6                     	if	0	;There are less than 3 active tblptr bytes
  5423  0019B6                     	endif
  5424  0019B6  0009               	tblrd		*+
  5425  0019B8  CFF5 F025          	movff	tablat,TFT_Init@data
  5426  0019BC  000A               	tblrd		*-
  5427  0019BE  CFF5 F026          	movff	tablat,TFT_Init@data+1
  5428  0019C2  4A2C               	infsnz	TFT_Init@i^0,f,c
  5429  0019C4  2A2D               	incf	(TFT_Init@i+1)^0,f,c
  5430  0019C6                     
  5431                           ;TFT.c: 56: if(cmd == 0xFFFF) {
  5432  0019C6  282A               	incf	TFT_Init@cmd^0,w,c
  5433  0019C8  E106               	bnz	u3671
  5434  0019CA  282B               	incf	(TFT_Init@cmd+1)^0,w,c
  5435  0019CC  A4D8               	btfss	status,2,c
  5436  0019CE  EFEB  F00C         	goto	u3671
  5437  0019D2  EFED  F00C         	goto	u3670
  5438  0019D6                     u3671:
  5439  0019D6  EFFA  F00C         	goto	l4403
  5440  0019DA                     u3670:
  5441  0019DA                     
  5442                           ;TFT.c: 57: _delay((unsigned long)((200)*(48000000/4000.0)));
  5443  0019DA  0E0D               	movlw	13
  5444  0019DC  6E24               	movwf	(??_TFT_Init+1)^0,c
  5445  0019DE  0E2D               	movlw	45
  5446  0019E0  6E23               	movwf	??_TFT_Init^0,c
  5447  0019E2  0ED8               	movlw	216
  5448  0019E4                     u4127:
  5449  0019E4  2EE8               	decfsz	wreg,f,c
  5450  0019E6  D7FE               	bra	u4127
  5451  0019E8  2E23               	decfsz	??_TFT_Init^0,f,c
  5452  0019EA  D7FC               	bra	u4127
  5453  0019EC  2E24               	decfsz	(??_TFT_Init+1)^0,f,c
  5454  0019EE  D7FA               	bra	u4127
  5455                           
  5456                           ;TFT.c: 58: } else {
  5457  0019F0  EF04  F00D         	goto	l4405
  5458  0019F4                     l4403:
  5459                           
  5460                           ;TFT.c: 59: TFT_WriteRegister(cmd, data);
  5461  0019F4  C02A  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  5462  0019F8  C02B  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  5463  0019FC  C025  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  5464  001A00  C026  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  5465  001A04  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  5466  001A08                     l4405:
  5467  001A08  5027               	movf	TFT_Init@initSequenceSize^0,w,c
  5468  001A0A  182C               	xorwf	TFT_Init@i^0,w,c
  5469  001A0C  E107               	bnz	u3681
  5470  001A0E  5028               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  5471  001A10  182D               	xorwf	(TFT_Init@i+1)^0,w,c
  5472  001A12  A4D8               	btfss	status,2,c
  5473  001A14  EF0E  F00D         	goto	u3681
  5474  001A18  EF10  F00D         	goto	u3680
  5475  001A1C                     u3681:
  5476  001A1C  EFC1  F00C         	goto	l4393
  5477  001A20                     u3680:
  5478  001A20                     
  5479                           ;TFT.c: 60: };TFT.c: 61: };TFT.c: 64: TFT_OrientationSet(orientation, color);
  5480  001A20  C021  F01E         	movff	TFT_Init@color,TFT_OrientationSet@color
  5481  001A24  C022  F01F         	movff	TFT_Init@color+1,TFT_OrientationSet@color+1
  5482  001A28  5029               	movf	TFT_Init@orientation^0,w,c
  5483  001A2A  EC6E  F017         	call	_TFT_OrientationSet
  5484  001A2E  0012               	return		;funcret
  5485  001A30                     __end_of_TFT_Init:
  5486                           	opt callstack 0
  5487                           
  5488 ;; *************** function _TFT_Reset *****************
  5489 ;; Defined at:
  5490 ;;		line 67 in file "TFT.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;		None
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;		None
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5504 ;;      Params:         0       0       0       0       0       0       0       0       0
  5505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5506 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5507 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5508 ;;Total ram usage:        1 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    2
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_TFT_Init
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text18
  5519  002F4A                     __ptext18:
  5520                           	opt callstack 0
  5521  002F4A                     _TFT_Reset:
  5522                           	opt callstack 27
  5523  002F4A                     
  5524                           ;TFT.c: 68: TRISB = 0x00;;
  5525  002F4A  0E00               	movlw	0
  5526  002F4C  6E93               	movwf	147,c	;volatile
  5527  002F4E                     
  5528                           ;TFT.c: 69: PORTCbits.RC0 = 1;;
  5529  002F4E  8082               	bsf	130,0,c	;volatile
  5530  002F50                     
  5531                           ;TFT.c: 70: PORTAbits.RA5 = 1;;
  5532  002F50  8A80               	bsf	128,5,c	;volatile
  5533  002F52                     
  5534                           ;TFT.c: 71: PORTAbits.RA4 = 1;;
  5535  002F52  8880               	bsf	128,4,c	;volatile
  5536  002F54                     
  5537                           ;TFT.c: 72: PORTCbits.RC2 = 0;;
  5538  002F54  9482               	bcf	130,2,c	;volatile
  5539  002F56                     
  5540                           ;TFT.c: 73: _delay((unsigned long)((2)*(48000000/4000.0)));
  5541  002F56  0E20               	movlw	32
  5542  002F58  6E05               	movwf	??_TFT_Reset^0,c
  5543  002F5A  0E2A               	movlw	42
  5544  002F5C                     u4137:
  5545  002F5C  2EE8               	decfsz	wreg,f,c
  5546  002F5E  D7FE               	bra	u4137
  5547  002F60  2E05               	decfsz	??_TFT_Reset^0,f,c
  5548  002F62  D7FC               	bra	u4137
  5549  002F64                     
  5550                           ;TFT.c: 74: PORTCbits.RC2 = 1;;
  5551  002F64  8482               	bsf	130,2,c	;volatile
  5552  002F66  0012               	return		;funcret
  5553  002F68                     __end_of_TFT_Reset:
  5554                           	opt callstack 0
  5555                           
  5556 ;; *************** function _TFT_OrientationSet *****************
  5557 ;; Defined at:
  5558 ;;		line 109 in file "TFT.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  orientation     1    wreg     unsigned char 
  5561 ;;  color           2   29[COMRAM] unsigned int 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  orientation     1   31[COMRAM] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      void 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, cstack
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5573 ;;      Params:         2       0       0       0       0       0       0       0       0
  5574 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5576 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5577 ;;Total ram usage:        3 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    5
  5580 ;; This function calls:
  5581 ;;		_TFT_FullScreen
  5582 ;; This function is called by:
  5583 ;;		_TFT_Init
  5584 ;;		_TFT_ConsoleInit
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text19
  5589  002EDC                     __ptext19:
  5590                           	opt callstack 0
  5591  002EDC                     _TFT_OrientationSet:
  5592                           	opt callstack 24
  5593                           
  5594                           ;incstack = 0
  5595                           ;TFT_OrientationSet@orientation stored from wreg
  5596  002EDC  6E20               	movwf	TFT_OrientationSet@orientation^0,c
  5597  002EDE                     
  5598                           ;TFT.c: 110: if(orientation > 3) orientation = 0;
  5599  002EDE  0E03               	movlw	3
  5600  002EE0  6420               	cpfsgt	TFT_OrientationSet@orientation^0,c
  5601  002EE2  EF75  F017         	goto	u3611
  5602  002EE6  EF77  F017         	goto	u3610
  5603  002EEA                     u3611:
  5604  002EEA  EF79  F017         	goto	l4339
  5605  002EEE                     u3610:
  5606  002EEE  0E00               	movlw	0
  5607  002EF0  6E20               	movwf	TFT_OrientationSet@orientation^0,c
  5608  002EF2                     l4339:
  5609                           
  5610                           ;TFT.c: 111: TFT_Orientation = orientation;
  5611  002EF2  C020  F055         	movff	TFT_OrientationSet@orientation,_TFT_Orientation
  5612  002EF6                     
  5613                           ;TFT.c: 112: TFT_FullScreen(color);
  5614  002EF6  C01E  F01C         	movff	TFT_OrientationSet@color,TFT_FullScreen@color
  5615  002EFA  C01F  F01D         	movff	TFT_OrientationSet@color+1,TFT_FullScreen@color+1
  5616  002EFE  EC7E  F014         	call	_TFT_FullScreen	;wreg free
  5617  002F02  0012               	return		;funcret
  5618  002F04                     __end_of_TFT_OrientationSet:
  5619                           	opt callstack 0
  5620                           
  5621 ;; *************** function _Ecg_Init *****************
  5622 ;; Defined at:
  5623 ;;		line 12 in file "ecg.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    9
  5644 ;; This function calls:
  5645 ;;		_Ecg_Background_Leads_Failure
  5646 ;;		_Ecg_Background_Leads_Ok
  5647 ;;		_Ecg_CheckLeads
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text20
  5654  002EAC                     __ptext20:
  5655                           	opt callstack 0
  5656  002EAC                     _Ecg_Init:
  5657                           	opt callstack 21
  5658  002EAC                     
  5659                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  5660  002EAC  ECFE  F014         	call	_Ecg_CheckLeads	;wreg free
  5661  002EB0  5005               	movf	?_Ecg_CheckLeads^0,w,c
  5662  002EB2  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  5663  002EB4  A4D8               	btfss	status,2,c
  5664  002EB6  EF5F  F017         	goto	u4011
  5665  002EBA  EF61  F017         	goto	u4010
  5666  002EBE                     u4011:
  5667  002EBE  EF65  F017         	goto	l4677
  5668  002EC2                     u4010:
  5669  002EC2                     
  5670                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  5671  002EC2  ECD1  F00F         	call	_Ecg_Background_Leads_Ok	;wreg free
  5672                           
  5673                           ;ecg.c: 15: } else {
  5674  002EC6  EF67  F017         	goto	l4679
  5675  002ECA                     l4677:
  5676                           
  5677                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  5678  002ECA  EC76  F016         	call	_Ecg_Background_Leads_Failure	;wreg free
  5679  002ECE                     l4679:
  5680                           
  5681                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  5682  002ECE  0E00               	movlw	0
  5683  002ED0  0100               	movlb	0	; () banked
  5684  002ED2  6FBA               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  5685  002ED4                     
  5686                           ; BSR set to: 0
  5687                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  5688  002ED4  0E00               	movlw	0
  5689  002ED6  6FBF               	movwf	(_ECG_BUFFER+4)& (0+255),b
  5690  002ED8                     
  5691                           ; BSR set to: 0
  5692                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  5693  002ED8  8DC0               	bsf	_ECG_HEARTRATE& (0+255),6,b
  5694  002EDA                     
  5695                           ; BSR set to: 0
  5696  002EDA  0012               	return		;funcret
  5697  002EDC                     __end_of_Ecg_Init:
  5698                           	opt callstack 0
  5699                           
  5700 ;; *************** function _Ecg_CheckLeads *****************
  5701 ;; Defined at:
  5702 ;;		line 141 in file "ecg.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;		None
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  2    4[COMRAM] unsigned int 
  5709 ;; Registers used:
  5710 ;;		wreg, status,2, status,0
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5716 ;;      Params:         2       0       0       0       0       0       0       0       0
  5717 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5718 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5719 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5720 ;;Total ram usage:        4 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    2
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_Ecg_Init
  5727 ;;		_Ecg_ProcessEcg
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text21
  5732  0029FC                     __ptext21:
  5733                           	opt callstack 0
  5734  0029FC                     _Ecg_CheckLeads:
  5735                           	opt callstack 25
  5736  0029FC                     
  5737                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  5738  0029FC  0E00               	movlw	0
  5739  0029FE  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  5740  002A00                     
  5741                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  5742  002A00  AA82               	btfss	130,5,c	;volatile
  5743  002A02  EF05  F015         	goto	u2781
  5744  002A06  EF07  F015         	goto	u2780
  5745  002A0A                     u2781:
  5746  002A0A  EF08  F015         	goto	l3767
  5747  002A0E                     u2780:
  5748  002A0E  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  5749  002A10                     l3767:
  5750                           
  5751                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  5752  002A10  A882               	btfss	130,4,c	;volatile
  5753  002A12  EF0D  F015         	goto	u2791
  5754  002A16  EF0F  F015         	goto	u2790
  5755  002A1A                     u2791:
  5756  002A1A  EF10  F015         	goto	l3771
  5757  002A1E                     u2790:
  5758  002A1E  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  5759  002A20                     l3771:
  5760                           
  5761                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  5762  002A20  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  5763  002A22  B4D8               	btfsc	status,2,c
  5764  002A24  EF16  F015         	goto	u2801
  5765  002A28  EF1A  F015         	goto	u2800
  5766  002A2C                     u2801:
  5767  002A2C  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5768  002A2E  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  5769  002A30  EF1B  F015         	goto	u2818
  5770  002A34                     u2800:
  5771  002A34  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5772  002A36                     u2818:
  5773  002A36  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  5774  002A38  0100               	movlb	0	; () banked
  5775  002A3A  51D2               	movf	_ECG_FLAGS& (0+255),w,b
  5776  002A3C  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5777  002A3E  0BFD               	andlw	-3
  5778  002A40  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5779  002A42  6FD2               	movwf	_ECG_FLAGS& (0+255),b
  5780  002A44                     
  5781                           ; BSR set to: 0
  5782                           ;ecg.c: 146: return leadsStatus;
  5783  002A44  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  5784  002A48  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  5785  002A4A                     
  5786                           ; BSR set to: 0
  5787  002A4A  0012               	return		;funcret
  5788  002A4C                     __end_of_Ecg_CheckLeads:
  5789                           	opt callstack 0
  5790                           
  5791 ;; *************** function _Ecg_Background_Leads_Ok *****************
  5792 ;; Defined at:
  5793 ;;		line 180 in file "ecg.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;		None
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;		None
  5798 ;; Return value:  Size  Location     Type
  5799 ;;                  1    wreg      void 
  5800 ;; Registers used:
  5801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5802 ;; Tracked objects:
  5803 ;;		On entry : 0/0
  5804 ;;		On exit  : 0/0
  5805 ;;		Unchanged: 0/0
  5806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5807 ;;      Params:         0       0       0       0       0       0       0       0       0
  5808 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5809 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5810 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5811 ;;Total ram usage:        2 bytes
  5812 ;; Hardware stack levels used:    1
  5813 ;; Hardware stack levels required when called:    8
  5814 ;; This function calls:
  5815 ;;		_TFT_DrawLine
  5816 ;;		_TFT_DrawString
  5817 ;;		_TFT_FullScreen
  5818 ;;		_TFT_GetHeight
  5819 ;;		_TFT_GetWidth
  5820 ;; This function is called by:
  5821 ;;		_Ecg_Init
  5822 ;;		_Ecg_ProcessEcg
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text22
  5827  001FA2                     __ptext22:
  5828                           	opt callstack 0
  5829  001FA2                     _Ecg_Background_Leads_Ok:
  5830                           	opt callstack 19
  5831  001FA2                     
  5832                           ;ecg.c: 181: TFT_FullScreen(0x0821);
  5833  001FA2  0E08               	movlw	8
  5834  001FA4  6E1D               	movwf	(TFT_FullScreen@color+1)^0,c
  5835  001FA6  0E21               	movlw	33
  5836  001FA8  6E1C               	movwf	TFT_FullScreen@color^0,c
  5837  001FAA  EC7E  F014         	call	_TFT_FullScreen	;wreg free
  5838  001FAE                     
  5839                           ;ecg.c: 182: TFT_DrawString(8, 10, "Frequenza:", 0xFFFF, 0x0821, 2);
  5840  001FAE  0E00               	movlw	0
  5841  001FB0  0100               	movlb	0	; () banked
  5842  001FB2  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  5843  001FB4  0E08               	movlw	8
  5844  001FB6  6F60               	movwf	TFT_DrawString@x& (0+255),b
  5845  001FB8  0E00               	movlw	0
  5846  001FBA  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  5847  001FBC  0E0A               	movlw	10
  5848  001FBE  6F62               	movwf	TFT_DrawString@y& (0+255),b
  5849  001FC0  0EA0               	movlw	low STR_2
  5850  001FC2  6F64               	movwf	TFT_DrawString@str& (0+255),b
  5851  001FC4  0E5F               	movlw	high STR_2
  5852  001FC6  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  5853  001FC8  0EFF               	movlw	255
  5854  001FCA  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  5855  001FCC  6966               	setf	TFT_DrawString@color& (0+255),b
  5856  001FCE  0E08               	movlw	8
  5857  001FD0  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  5858  001FD2  0E21               	movlw	33
  5859  001FD4  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  5860  001FD6  0E02               	movlw	2
  5861  001FD8  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  5862  001FDA  EC1E  F010         	call	_TFT_DrawString	;wreg free
  5863  001FDE                     
  5864                           ;ecg.c: 183: TFT_DrawLine(0, (33 - 1), TFT_GetWidth(), (33 - 1), 0xFFFF);
  5865  001FDE  0E00               	movlw	0
  5866  001FE0  6E18               	movwf	(TFT_DrawLine@x0+1)^0,c
  5867  001FE2  0E00               	movlw	0
  5868  001FE4  6E17               	movwf	TFT_DrawLine@x0^0,c
  5869  001FE6  0E00               	movlw	0
  5870  001FE8  6E1A               	movwf	(TFT_DrawLine@y0+1)^0,c
  5871  001FEA  0E20               	movlw	32
  5872  001FEC  6E19               	movwf	TFT_DrawLine@y0^0,c
  5873  001FEE  EC75  F015         	call	_TFT_GetWidth	;wreg free
  5874  001FF2  C005  F01B         	movff	?_TFT_GetWidth,TFT_DrawLine@x1
  5875  001FF6  C006  F01C         	movff	?_TFT_GetWidth+1,TFT_DrawLine@x1+1
  5876  001FFA  0E00               	movlw	0
  5877  001FFC  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  5878  001FFE  0E20               	movlw	32
  5879  002000  6E1D               	movwf	TFT_DrawLine@y1^0,c
  5880  002002  0EFF               	movlw	255
  5881  002004  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  5882  002006  681F               	setf	TFT_DrawLine@color^0,c
  5883  002008  EC84  F004         	call	_TFT_DrawLine	;wreg free
  5884  00200C                     
  5885                           ;ecg.c: 184: Ecg_X = 0;
  5886  00200C  0E00               	movlw	0
  5887  00200E  6E57               	movwf	(_Ecg_X+1)^0,c
  5888  002010  0E00               	movlw	0
  5889  002012  6E56               	movwf	_Ecg_X^0,c
  5890  002014                     
  5891                           ;ecg.c: 185: Ecg_Xold = 0;
  5892  002014  0E00               	movlw	0
  5893  002016  0100               	movlb	0	; () banked
  5894  002018  6FD9               	movwf	(_Ecg_Xold+1)& (0+255),b
  5895  00201A  0E00               	movlw	0
  5896  00201C  6FD8               	movwf	_Ecg_Xold& (0+255),b
  5897  00201E                     
  5898                           ; BSR set to: 0
  5899                           ;ecg.c: 186: Ecg_Y = TFT_GetHeight() >> 1;
  5900  00201E  EC9C  F015         	call	_TFT_GetHeight	;wreg free
  5901  002022  90D8               	bcf	status,0,c
  5902  002024  3006               	rrcf	(?_TFT_GetHeight+1)^0,w,c
  5903  002026  6E4D               	movwf	??_Ecg_Background_Leads_Ok^0,c
  5904  002028  3005               	rrcf	?_TFT_GetHeight^0,w,c
  5905  00202A  0100               	movlb	0	; () banked
  5906  00202C  6FD6               	movwf	_Ecg_Y& (0+255),b
  5907  00202E  C04D  F0D7         	movff	??_Ecg_Background_Leads_Ok,_Ecg_Y+1
  5908  002032                     
  5909                           ; BSR set to: 0
  5910                           ;ecg.c: 187: Ecg_Yold = Ecg_Y;
  5911  002032  C0D6  F0D4         	movff	_Ecg_Y,_Ecg_Yold
  5912  002036  C0D7  F0D5         	movff	_Ecg_Y+1,_Ecg_Yold+1
  5913  00203A                     
  5914                           ; BSR set to: 0
  5915  00203A  0012               	return		;funcret
  5916  00203C                     __end_of_Ecg_Background_Leads_Ok:
  5917                           	opt callstack 0
  5918                           
  5919 ;; *************** function _Ecg_Background_Leads_Failure *****************
  5920 ;; Defined at:
  5921 ;;		line 190 in file "ecg.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5935 ;;      Params:         0       0       0       0       0       0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5938 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5939 ;;Total ram usage:        0 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    8
  5942 ;; This function calls:
  5943 ;;		_TFT_DrawString
  5944 ;;		_TFT_FullScreen
  5945 ;; This function is called by:
  5946 ;;		_Ecg_Init
  5947 ;;		_Ecg_ProcessEcg
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text23
  5952  002CEC                     __ptext23:
  5953                           	opt callstack 0
  5954  002CEC                     _Ecg_Background_Leads_Failure:
  5955                           	opt callstack 19
  5956  002CEC                     
  5957                           ;ecg.c: 191: TFT_FullScreen(0x0821);
  5958  002CEC  0E08               	movlw	8
  5959  002CEE  6E1D               	movwf	(TFT_FullScreen@color+1)^0,c
  5960  002CF0  0E21               	movlw	33
  5961  002CF2  6E1C               	movwf	TFT_FullScreen@color^0,c
  5962  002CF4  EC7E  F014         	call	_TFT_FullScreen	;wreg free
  5963  002CF8                     
  5964                           ;ecg.c: 192: TFT_DrawString(36, 75, "*** Collegare elettrodi ***", 0xFFFF, 0x0821, 2);
  5965  002CF8  0E00               	movlw	0
  5966  002CFA  0100               	movlb	0	; () banked
  5967  002CFC  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  5968  002CFE  0E24               	movlw	36
  5969  002D00  6F60               	movwf	TFT_DrawString@x& (0+255),b
  5970  002D02  0E00               	movlw	0
  5971  002D04  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  5972  002D06  0E4B               	movlw	75
  5973  002D08  6F62               	movwf	TFT_DrawString@y& (0+255),b
  5974  002D0A  0E6B               	movlw	low STR_3
  5975  002D0C  6F64               	movwf	TFT_DrawString@str& (0+255),b
  5976  002D0E  0E5F               	movlw	high STR_3
  5977  002D10  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  5978  002D12  0EFF               	movlw	255
  5979  002D14  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  5980  002D16  6966               	setf	TFT_DrawString@color& (0+255),b
  5981  002D18  0E08               	movlw	8
  5982  002D1A  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  5983  002D1C  0E21               	movlw	33
  5984  002D1E  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  5985  002D20  0E02               	movlw	2
  5986  002D22  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  5987  002D24  EC1E  F010         	call	_TFT_DrawString	;wreg free
  5988  002D28  0012               	return		;funcret
  5989  002D2A                     __end_of_Ecg_Background_Leads_Failure:
  5990                           	opt callstack 0
  5991                           
  5992 ;; *************** function _TFT_DrawString *****************
  5993 ;; Defined at:
  5994 ;;		line 303 in file "TFT.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  x               2    0[BANK0 ] unsigned int 
  5997 ;;  y               2    2[BANK0 ] unsigned int 
  5998 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  5999 ;;		 -> A6_Process_Random_Comms@response(32), STR_3(28), STR_2(11), Ecg_ProcessHeartRate@heartrateString(5), 
  6000 ;;		 -> loop@operator(32), 
  6001 ;;  color           2    6[BANK0 ] unsigned int 
  6002 ;;  bg              2    8[BANK0 ] unsigned int 
  6003 ;;  size            1   10[BANK0 ] unsigned char 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6015 ;;      Params:         0      11       0       0       0       0       0       0       0
  6016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6018 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6019 ;;Total ram usage:       11 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    7
  6022 ;; This function calls:
  6023 ;;		_TFT_DrawChar
  6024 ;; This function is called by:
  6025 ;;		_loop
  6026 ;;		_Ecg_ProcessHeartRate
  6027 ;;		_Ecg_Background_Leads_Ok
  6028 ;;		_Ecg_Background_Leads_Failure
  6029 ;;		_TFT_ConsolePrintLine
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text24
  6034  00203C                     __ptext24:
  6035                           	opt callstack 0
  6036  00203C                     _TFT_DrawString:
  6037                           	opt callstack 22
  6038  00203C                     
  6039                           ;TFT.c: 304: while(*str) {
  6040  00203C  EF4E  F010         	goto	l4579
  6041  002040                     l4573:
  6042                           
  6043                           ;TFT.c: 305: TFT_DrawChar(x, y, *str, color, bg, size);
  6044  002040  C060  F036         	movff	TFT_DrawString@x,TFT_DrawChar@x
  6045  002044  C061  F037         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  6046  002048  C062  F038         	movff	TFT_DrawString@y,TFT_DrawChar@y
  6047  00204C  C063  F039         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  6048  002050  C064  FFF6         	movff	TFT_DrawString@str,tblptrl
  6049  002054  C065  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  6050  002058  6AF8               	clrf	tblptru,c
  6051  00205A  0E07               	movlw	(high __ramtop+-1)
  6052  00205C  64F7               	cpfsgt	tblptrh,c
  6053  00205E  D003               	bra	u3887
  6054  002060  0008               	tblrd		*
  6055  002062  50F5               	movf	tablat,w,c
  6056  002064  D005               	bra	u3880
  6057  002066                     u3887:
  6058  002066  CFF6 FFE1          	movff	tblptrl,fsr1l
  6059  00206A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6060  00206E  50E7               	movf	indf1,w,c
  6061  002070                     u3880:
  6062  002070  6E3A               	movwf	TFT_DrawChar@c^0,c
  6063  002072  C066  F03B         	movff	TFT_DrawString@color,TFT_DrawChar@color
  6064  002076  C067  F03C         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  6065  00207A  C068  F03D         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  6066  00207E  C069  F03E         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  6067  002082  C06A  F03F         	movff	TFT_DrawString@size,TFT_DrawChar@size
  6068  002086  ECFE  F001         	call	_TFT_DrawChar	;wreg free
  6069  00208A                     
  6070                           ;TFT.c: 306: x += (6 * size);
  6071  00208A  0100               	movlb	0	; () banked
  6072  00208C  516A               	movf	TFT_DrawString@size& (0+255),w,b
  6073  00208E  0D06               	mullw	6
  6074  002090  50F3               	movf	243,w,c
  6075  002092  2760               	addwf	TFT_DrawString@x& (0+255),f,b
  6076  002094  50F4               	movf	244,w,c
  6077  002096  2361               	addwfc	(TFT_DrawString@x+1)& (0+255),f,b
  6078  002098                     
  6079                           ; BSR set to: 0
  6080                           ;TFT.c: 307: str++;
  6081  002098  4B64               	infsnz	TFT_DrawString@str& (0+255),f,b
  6082  00209A  2B65               	incf	(TFT_DrawString@str+1)& (0+255),f,b
  6083  00209C                     l4579:
  6084  00209C  C064  FFF6         	movff	TFT_DrawString@str,tblptrl
  6085  0020A0  C065  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  6086  0020A4  6AF8               	clrf	tblptru,c
  6087  0020A6  0E07               	movlw	(high __ramtop+-1)
  6088  0020A8  64F7               	cpfsgt	tblptrh,c
  6089  0020AA  D003               	bra	u3897
  6090  0020AC  0008               	tblrd		*
  6091  0020AE  50F5               	movf	tablat,w,c
  6092  0020B0  D005               	bra	u3890
  6093  0020B2                     u3897:
  6094  0020B2  CFF6 FFE1          	movff	tblptrl,fsr1l
  6095  0020B6  CFF7 FFE2          	movff	tblptrh,fsr1h
  6096  0020BA  50E7               	movf	indf1,w,c
  6097  0020BC                     u3890:
  6098  0020BC  0900               	iorlw	0
  6099  0020BE  A4D8               	btfss	status,2,c
  6100  0020C0  EF64  F010         	goto	u3901
  6101  0020C4  EF66  F010         	goto	u3900
  6102  0020C8                     u3901:
  6103  0020C8  EF20  F010         	goto	l4573
  6104  0020CC                     u3900:
  6105  0020CC  0012               	return		;funcret
  6106  0020CE                     __end_of_TFT_DrawString:
  6107                           	opt callstack 0
  6108                           
  6109 ;; *************** function _TFT_DrawChar *****************
  6110 ;; Defined at:
  6111 ;;		line 274 in file "TFT.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;  x               2   53[COMRAM] unsigned int 
  6114 ;;  y               2   55[COMRAM] unsigned int 
  6115 ;;  c               1   57[COMRAM] unsigned char 
  6116 ;;  color           2   58[COMRAM] unsigned int 
  6117 ;;  bg              2   60[COMRAM] unsigned int 
  6118 ;;  size            1   62[COMRAM] unsigned char 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  j               1   74[COMRAM] char 
  6121 ;;  xl              2   68[COMRAM] unsigned int 
  6122 ;;  line            1   67[COMRAM] unsigned char 
  6123 ;;  i               1   75[COMRAM] char 
  6124 ;; Return value:  Size  Location     Type
  6125 ;;                  1    wreg      void 
  6126 ;; Registers used:
  6127 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6128 ;; Tracked objects:
  6129 ;;		On entry : 0/0
  6130 ;;		On exit  : 0/0
  6131 ;;		Unchanged: 0/0
  6132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6133 ;;      Params:        10       0       0       0       0       0       0       0       0
  6134 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6135 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6136 ;;      Totals:        23       0       0       0       0       0       0       0       0
  6137 ;;Total ram usage:       23 bytes
  6138 ;; Hardware stack levels used:    1
  6139 ;; Hardware stack levels required when called:    6
  6140 ;; This function calls:
  6141 ;;		_TFT_DrawFillRect
  6142 ;;		_TFT_DrawLine
  6143 ;;		_TFT_DrawPixel
  6144 ;;		___wmul
  6145 ;; This function is called by:
  6146 ;;		_TFT_DrawString
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text25
  6151  0003FC                     __ptext25:
  6152                           	opt callstack 0
  6153  0003FC                     _TFT_DrawChar:
  6154                           	opt callstack 22
  6155  0003FC                     
  6156                           ;TFT.c: 275: for(int8_t i=0; i<5; i++ ) {
  6157  0003FC  0E00               	movlw	0
  6158  0003FE  6E4C               	movwf	TFT_DrawChar@i^0,c
  6159  000400                     l3441:
  6160                           
  6161                           ;TFT.c: 276: uint8_t line = TFT_Font[c * 5 + i];
  6162  000400  C04C  F040         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  6163  000404  6A41               	clrf	(??_TFT_DrawChar+1)^0,c
  6164  000406  BE40               	btfsc	??_TFT_DrawChar^0,7,c
  6165  000408  0641               	decf	(??_TFT_DrawChar+1)^0,f,c
  6166  00040A  503A               	movf	TFT_DrawChar@c^0,w,c
  6167  00040C  0D05               	mullw	5
  6168  00040E  0E2D               	movlw	low _TFT_Font
  6169  000410  6E42               	movwf	(??_TFT_DrawChar+2)^0,c
  6170  000412  0E59               	movlw	high _TFT_Font
  6171  000414  6E43               	movwf	(??_TFT_DrawChar+3)^0,c
  6172  000416  50F3               	movf	243,w,c
  6173  000418  2642               	addwf	(??_TFT_DrawChar+2)^0,f,c
  6174  00041A  50F4               	movf	244,w,c
  6175  00041C  2243               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  6176  00041E  5040               	movf	??_TFT_DrawChar^0,w,c
  6177  000420  2642               	addwf	(??_TFT_DrawChar+2)^0,f,c
  6178  000422  5041               	movf	(??_TFT_DrawChar+1)^0,w,c
  6179  000424  2243               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  6180  000426  C042  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  6181  00042A  C043  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  6182  00042E                     	if	0	;tblptru may be non-zero
  6183  00042E                     	endif
  6184  00042E                     	if	0	;tblptru may be non-zero
  6185  00042E                     	endif
  6186  00042E  0008               	tblrd		*
  6187  000430  CFF5 F044          	movff	tablat,TFT_DrawChar@line
  6188  000434                     
  6189                           ;TFT.c: 277: for(int8_t j=0; j<8; j++, line >>= 1) {
  6190  000434  0E00               	movlw	0
  6191  000436  6E4B               	movwf	TFT_DrawChar@j^0,c
  6192  000438                     l295:
  6193                           
  6194                           ;TFT.c: 278: if(line & 1) {
  6195  000438  A044               	btfss	TFT_DrawChar@line^0,0,c
  6196  00043A  EF21  F002         	goto	u2201
  6197  00043E  EF23  F002         	goto	u2200
  6198  000442                     u2201:
  6199  000442  EF79  F002         	goto	l3455
  6200  000446                     u2200:
  6201  000446                     
  6202                           ;TFT.c: 279: if(size == 1) {
  6203  000446  043F               	decf	TFT_DrawChar@size^0,w,c
  6204  000448  A4D8               	btfss	status,2,c
  6205  00044A  EF29  F002         	goto	u2211
  6206  00044E  EF2B  F002         	goto	u2210
  6207  000452                     u2211:
  6208  000452  EF43  F002         	goto	l3453
  6209  000456                     u2210:
  6210  000456                     
  6211                           ;TFT.c: 280: TFT_DrawPixel((x + i), (y + j), color);
  6212  000456  5036               	movf	TFT_DrawChar@x^0,w,c
  6213  000458  244C               	addwf	TFT_DrawChar@i^0,w,c
  6214  00045A  6E0D               	movwf	TFT_DrawPixel@x^0,c
  6215  00045C  0E00               	movlw	0
  6216  00045E  BE4C               	btfsc	TFT_DrawChar@i^0,7,c
  6217  000460  0EFF               	movlw	255
  6218  000462  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6219  000464  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  6220  000466  5038               	movf	TFT_DrawChar@y^0,w,c
  6221  000468  244B               	addwf	TFT_DrawChar@j^0,w,c
  6222  00046A  6E0F               	movwf	TFT_DrawPixel@y^0,c
  6223  00046C  0E00               	movlw	0
  6224  00046E  BE4B               	btfsc	TFT_DrawChar@j^0,7,c
  6225  000470  0EFF               	movlw	255
  6226  000472  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6227  000474  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  6228  000476  C03B  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  6229  00047A  C03C  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  6230  00047E  EC18  F00D         	call	_TFT_DrawPixel	;wreg free
  6231                           
  6232                           ;TFT.c: 281: } else {
  6233  000482  EFD9  F002         	goto	l3463
  6234  000486                     l3453:
  6235                           
  6236                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6237  000486  504C               	movf	TFT_DrawChar@i^0,w,c
  6238  000488  6E05               	movwf	___wmul@multiplier^0,c
  6239  00048A  6A06               	clrf	(___wmul@multiplier+1)^0,c
  6240  00048C  BE05               	btfsc	___wmul@multiplier^0,7,c
  6241  00048E  0606               	decf	(___wmul@multiplier+1)^0,f,c
  6242  000490  C03F  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6243  000494  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  6244  000496  EC82  F017         	call	___wmul	;wreg free
  6245  00049A  5036               	movf	TFT_DrawChar@x^0,w,c
  6246  00049C  2405               	addwf	?___wmul^0,w,c
  6247  00049E  6E47               	movwf	_TFT_DrawChar$2245^0,c
  6248  0004A0  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6249  0004A2  2006               	addwfc	(?___wmul+1)^0,w,c
  6250  0004A4  6E48               	movwf	(_TFT_DrawChar$2245+1)^0,c
  6251                           
  6252                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6253  0004A6  504B               	movf	TFT_DrawChar@j^0,w,c
  6254  0004A8  6E05               	movwf	___wmul@multiplier^0,c
  6255  0004AA  6A06               	clrf	(___wmul@multiplier+1)^0,c
  6256  0004AC  BE05               	btfsc	___wmul@multiplier^0,7,c
  6257  0004AE  0606               	decf	(___wmul@multiplier+1)^0,f,c
  6258  0004B0  C03F  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6259  0004B4  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  6260  0004B6  EC82  F017         	call	___wmul	;wreg free
  6261  0004BA  5038               	movf	TFT_DrawChar@y^0,w,c
  6262  0004BC  2405               	addwf	?___wmul^0,w,c
  6263  0004BE  6E49               	movwf	_TFT_DrawChar$2246^0,c
  6264  0004C0  5039               	movf	(TFT_DrawChar@y+1)^0,w,c
  6265  0004C2  2006               	addwfc	(?___wmul+1)^0,w,c
  6266  0004C4  6E4A               	movwf	(_TFT_DrawChar$2246+1)^0,c
  6267                           
  6268                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6269  0004C6  C047  F01E         	movff	_TFT_DrawChar$2245,TFT_DrawFillRect@x
  6270  0004CA  C048  F01F         	movff	_TFT_DrawChar$2245+1,TFT_DrawFillRect@x+1
  6271  0004CE  C049  F020         	movff	_TFT_DrawChar$2246,TFT_DrawFillRect@y
  6272  0004D2  C04A  F021         	movff	_TFT_DrawChar$2246+1,TFT_DrawFillRect@y+1
  6273  0004D6  C03F  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6274  0004DA  6A23               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6275  0004DC  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6276  0004E0  6A25               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6277  0004E2  C03B  F026         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  6278  0004E6  C03C  F027         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  6279  0004EA  ECB5  F011         	call	_TFT_DrawFillRect	;wreg free
  6280  0004EE  EFD9  F002         	goto	l3463
  6281  0004F2                     l3455:
  6282  0004F2  503B               	movf	TFT_DrawChar@color^0,w,c
  6283  0004F4  183D               	xorwf	TFT_DrawChar@bg^0,w,c
  6284  0004F6  E109               	bnz	u2220
  6285  0004F8  503C               	movf	(TFT_DrawChar@color+1)^0,w,c
  6286  0004FA  183E               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  6287  0004FC  B4D8               	btfsc	status,2,c
  6288  0004FE  EF83  F002         	goto	u2221
  6289  000502  EF85  F002         	goto	u2220
  6290  000506                     u2221:
  6291  000506  EFD9  F002         	goto	l3463
  6292  00050A                     u2220:
  6293  00050A                     
  6294                           ;TFT.c: 285: if(size == 1) {
  6295  00050A  043F               	decf	TFT_DrawChar@size^0,w,c
  6296  00050C  A4D8               	btfss	status,2,c
  6297  00050E  EF8B  F002         	goto	u2231
  6298  000512  EF8D  F002         	goto	u2230
  6299  000516                     u2231:
  6300  000516  EFA5  F002         	goto	l3461
  6301  00051A                     u2230:
  6302  00051A                     
  6303                           ;TFT.c: 286: TFT_DrawPixel((x + i), (y + j), bg);
  6304  00051A  5036               	movf	TFT_DrawChar@x^0,w,c
  6305  00051C  244C               	addwf	TFT_DrawChar@i^0,w,c
  6306  00051E  6E0D               	movwf	TFT_DrawPixel@x^0,c
  6307  000520  0E00               	movlw	0
  6308  000522  BE4C               	btfsc	TFT_DrawChar@i^0,7,c
  6309  000524  0EFF               	movlw	255
  6310  000526  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6311  000528  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  6312  00052A  5038               	movf	TFT_DrawChar@y^0,w,c
  6313  00052C  244B               	addwf	TFT_DrawChar@j^0,w,c
  6314  00052E  6E0F               	movwf	TFT_DrawPixel@y^0,c
  6315  000530  0E00               	movlw	0
  6316  000532  BE4B               	btfsc	TFT_DrawChar@j^0,7,c
  6317  000534  0EFF               	movlw	255
  6318  000536  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6319  000538  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  6320  00053A  C03D  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  6321  00053E  C03E  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  6322  000542  EC18  F00D         	call	_TFT_DrawPixel	;wreg free
  6323                           
  6324                           ;TFT.c: 287: } else {
  6325  000546  EFD9  F002         	goto	l3463
  6326  00054A                     l3461:
  6327                           
  6328                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6329  00054A  504C               	movf	TFT_DrawChar@i^0,w,c
  6330  00054C  6E05               	movwf	___wmul@multiplier^0,c
  6331  00054E  6A06               	clrf	(___wmul@multiplier+1)^0,c
  6332  000550  BE05               	btfsc	___wmul@multiplier^0,7,c
  6333  000552  0606               	decf	(___wmul@multiplier+1)^0,f,c
  6334  000554  C03F  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6335  000558  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  6336  00055A  EC82  F017         	call	___wmul	;wreg free
  6337  00055E  5036               	movf	TFT_DrawChar@x^0,w,c
  6338  000560  2405               	addwf	?___wmul^0,w,c
  6339  000562  6E47               	movwf	_TFT_DrawChar$2245^0,c
  6340  000564  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6341  000566  2006               	addwfc	(?___wmul+1)^0,w,c
  6342  000568  6E48               	movwf	(_TFT_DrawChar$2245+1)^0,c
  6343                           
  6344                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6345  00056A  504B               	movf	TFT_DrawChar@j^0,w,c
  6346  00056C  6E05               	movwf	___wmul@multiplier^0,c
  6347  00056E  6A06               	clrf	(___wmul@multiplier+1)^0,c
  6348  000570  BE05               	btfsc	___wmul@multiplier^0,7,c
  6349  000572  0606               	decf	(___wmul@multiplier+1)^0,f,c
  6350  000574  C03F  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6351  000578  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  6352  00057A  EC82  F017         	call	___wmul	;wreg free
  6353  00057E  5038               	movf	TFT_DrawChar@y^0,w,c
  6354  000580  2405               	addwf	?___wmul^0,w,c
  6355  000582  6E49               	movwf	_TFT_DrawChar$2246^0,c
  6356  000584  5039               	movf	(TFT_DrawChar@y+1)^0,w,c
  6357  000586  2006               	addwfc	(?___wmul+1)^0,w,c
  6358  000588  6E4A               	movwf	(_TFT_DrawChar$2246+1)^0,c
  6359                           
  6360                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6361  00058A  C047  F01E         	movff	_TFT_DrawChar$2245,TFT_DrawFillRect@x
  6362  00058E  C048  F01F         	movff	_TFT_DrawChar$2245+1,TFT_DrawFillRect@x+1
  6363  000592  C049  F020         	movff	_TFT_DrawChar$2246,TFT_DrawFillRect@y
  6364  000596  C04A  F021         	movff	_TFT_DrawChar$2246+1,TFT_DrawFillRect@y+1
  6365  00059A  C03F  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6366  00059E  6A23               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6367  0005A0  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6368  0005A4  6A25               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6369  0005A6  C03D  F026         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  6370  0005AA  C03E  F027         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  6371  0005AE  ECB5  F011         	call	_TFT_DrawFillRect	;wreg free
  6372  0005B2                     l3463:
  6373  0005B2  2A4B               	incf	TFT_DrawChar@j^0,f,c
  6374  0005B4  90D8               	bcf	status,0,c
  6375  0005B6  3244               	rrcf	TFT_DrawChar@line^0,f,c
  6376  0005B8  504B               	movf	TFT_DrawChar@j^0,w,c
  6377  0005BA  0A80               	xorlw	128
  6378  0005BC  0F78               	addlw	-136
  6379  0005BE  A0D8               	btfss	status,0,c
  6380  0005C0  EFE4  F002         	goto	u2241
  6381  0005C4  EFE6  F002         	goto	u2240
  6382  0005C8                     u2241:
  6383  0005C8  EF1C  F002         	goto	l295
  6384  0005CC                     u2240:
  6385  0005CC  2A4C               	incf	TFT_DrawChar@i^0,f,c
  6386  0005CE  504C               	movf	TFT_DrawChar@i^0,w,c
  6387  0005D0  0A80               	xorlw	128
  6388  0005D2  0F7B               	addlw	-133
  6389  0005D4  A0D8               	btfss	status,0,c
  6390  0005D6  EFEF  F002         	goto	u2251
  6391  0005DA  EFF1  F002         	goto	u2250
  6392  0005DE                     u2251:
  6393  0005DE  EF00  F002         	goto	l3441
  6394  0005E2                     u2250:
  6395  0005E2                     
  6396                           ;TFT.c: 289: };TFT.c: 290: };TFT.c: 291: };TFT.c: 292: };TFT.c: 293: if(bg != color) {
  6397  0005E2  503B               	movf	TFT_DrawChar@color^0,w,c
  6398  0005E4  183D               	xorwf	TFT_DrawChar@bg^0,w,c
  6399  0005E6  E109               	bnz	u2260
  6400  0005E8  503C               	movf	(TFT_DrawChar@color+1)^0,w,c
  6401  0005EA  183E               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  6402  0005EC  B4D8               	btfsc	status,2,c
  6403  0005EE  EFFB  F002         	goto	u2261
  6404  0005F2  EFFD  F002         	goto	u2260
  6405  0005F6                     u2261:
  6406  0005F6  EF44  F003         	goto	l307
  6407  0005FA                     u2260:
  6408  0005FA                     
  6409                           ;TFT.c: 294: if(size == 1) {
  6410  0005FA  043F               	decf	TFT_DrawChar@size^0,w,c
  6411  0005FC  A4D8               	btfss	status,2,c
  6412  0005FE  EF03  F003         	goto	u2271
  6413  000602  EF05  F003         	goto	u2270
  6414  000606                     u2271:
  6415  000606  EF25  F003         	goto	l3481
  6416  00060A                     u2270:
  6417  00060A                     
  6418                           ;TFT.c: 295: uint16_t xl = x + 5;
  6419  00060A  0E05               	movlw	5
  6420  00060C  2436               	addwf	TFT_DrawChar@x^0,w,c
  6421  00060E  6E45               	movwf	TFT_DrawChar@xl^0,c
  6422  000610  0E00               	movlw	0
  6423  000612  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6424  000614  6E46               	movwf	(TFT_DrawChar@xl+1)^0,c
  6425  000616                     
  6426                           ;TFT.c: 296: TFT_DrawLine(xl, y, xl, y + 7, bg);
  6427  000616  C045  F017         	movff	TFT_DrawChar@xl,TFT_DrawLine@x0
  6428  00061A  C046  F018         	movff	TFT_DrawChar@xl+1,TFT_DrawLine@x0+1
  6429  00061E  C038  F019         	movff	TFT_DrawChar@y,TFT_DrawLine@y0
  6430  000622  C039  F01A         	movff	TFT_DrawChar@y+1,TFT_DrawLine@y0+1
  6431  000626  C045  F01B         	movff	TFT_DrawChar@xl,TFT_DrawLine@x1
  6432  00062A  C046  F01C         	movff	TFT_DrawChar@xl+1,TFT_DrawLine@x1+1
  6433  00062E  0E07               	movlw	7
  6434  000630  2438               	addwf	TFT_DrawChar@y^0,w,c
  6435  000632  6E1D               	movwf	TFT_DrawLine@y1^0,c
  6436  000634  0E00               	movlw	0
  6437  000636  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6438  000638  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  6439  00063A  C03D  F01F         	movff	TFT_DrawChar@bg,TFT_DrawLine@color
  6440  00063E  C03E  F020         	movff	TFT_DrawChar@bg+1,TFT_DrawLine@color+1
  6441  000642  EC84  F004         	call	_TFT_DrawLine	;wreg free
  6442                           
  6443                           ;TFT.c: 297: } else {
  6444  000646  EF44  F003         	goto	l307
  6445  00064A                     l3481:
  6446                           
  6447                           ;TFT.c: 298: TFT_DrawFillRect((x + 5 * size), y, size, 8 * size, bg);
  6448  00064A  503F               	movf	TFT_DrawChar@size^0,w,c
  6449  00064C  0D05               	mullw	5
  6450  00064E  CFF3 F040          	movff	prodl,??_TFT_DrawChar
  6451  000652  CFF4 F041          	movff	prodh,??_TFT_DrawChar+1
  6452  000656  5036               	movf	TFT_DrawChar@x^0,w,c
  6453  000658  2440               	addwf	??_TFT_DrawChar^0,w,c
  6454  00065A  6E1E               	movwf	TFT_DrawFillRect@x^0,c
  6455  00065C  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6456  00065E  2041               	addwfc	(??_TFT_DrawChar+1)^0,w,c
  6457  000660  6E1F               	movwf	(TFT_DrawFillRect@x+1)^0,c
  6458  000662  C038  F020         	movff	TFT_DrawChar@y,TFT_DrawFillRect@y
  6459  000666  C039  F021         	movff	TFT_DrawChar@y+1,TFT_DrawFillRect@y+1
  6460  00066A  C03F  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6461  00066E  6A23               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6462  000670  503F               	movf	TFT_DrawChar@size^0,w,c
  6463  000672  0D08               	mullw	8
  6464  000674  CFF3 F024          	movff	prodl,TFT_DrawFillRect@h
  6465  000678  CFF4 F025          	movff	prodh,TFT_DrawFillRect@h+1
  6466  00067C  C03D  F026         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  6467  000680  C03E  F027         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  6468  000684  ECB5  F011         	call	_TFT_DrawFillRect	;wreg free
  6469  000688                     l307:
  6470  000688  0012               	return		;funcret
  6471  00068A                     __end_of_TFT_DrawChar:
  6472                           	opt callstack 0
  6473                           
  6474 ;; *************** function _TFT_DrawLine *****************
  6475 ;; Defined at:
  6476 ;;		line 192 in file "TFT.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  x0              2   22[COMRAM] int 
  6479 ;;  y0              2   24[COMRAM] int 
  6480 ;;  x1              2   26[COMRAM] int 
  6481 ;;  y1              2   28[COMRAM] int 
  6482 ;;  color           2   30[COMRAM] unsigned int 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  t               2   41[COMRAM] int 
  6485 ;;  t               2   39[COMRAM] int 
  6486 ;;  t               2   37[COMRAM] int 
  6487 ;;  t               2   35[COMRAM] int 
  6488 ;;  dx              2   51[COMRAM] int 
  6489 ;;  steep           2   49[COMRAM] int 
  6490 ;;  err             2   47[COMRAM] int 
  6491 ;;  ystep           2   45[COMRAM] int 
  6492 ;;  dy              2   43[COMRAM] int 
  6493 ;; Return value:  Size  Location     Type
  6494 ;;                  1    wreg      void 
  6495 ;; Registers used:
  6496 ;;		wreg, status,2, status,0, cstack
  6497 ;; Tracked objects:
  6498 ;;		On entry : 0/0
  6499 ;;		On exit  : 0/0
  6500 ;;		Unchanged: 0/0
  6501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6502 ;;      Params:        10       0       0       0       0       0       0       0       0
  6503 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6504 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6505 ;;      Totals:        31       0       0       0       0       0       0       0       0
  6506 ;;Total ram usage:       31 bytes
  6507 ;; Hardware stack levels used:    1
  6508 ;; Hardware stack levels required when called:    4
  6509 ;; This function calls:
  6510 ;;		_TFT_DrawPixel
  6511 ;;		___awdiv
  6512 ;;		_abs
  6513 ;; This function is called by:
  6514 ;;		_loop
  6515 ;;		_TFT_DrawChar
  6516 ;;		_Ecg_Draw
  6517 ;;		_Ecg_Background_Leads_Ok
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text26
  6522  000908                     __ptext26:
  6523                           	opt callstack 0
  6524  000908                     _TFT_DrawLine:
  6525                           	opt callstack 23
  6526  000908                     
  6527                           ;TFT.c: 193: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  6528  000908  5017               	movf	TFT_DrawLine@x0^0,w,c
  6529  00090A  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6530  00090C  6E05               	movwf	abs@a^0,c
  6531  00090E  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6532  000910  581C               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6533  000912  6E06               	movwf	(abs@a+1)^0,c
  6534  000914  EC23  F017         	call	_abs	;wreg free
  6535  000918  C005  F021         	movff	?_abs,??_TFT_DrawLine
  6536  00091C  C006  F022         	movff	?_abs+1,??_TFT_DrawLine+1
  6537  000920  5019               	movf	TFT_DrawLine@y0^0,w,c
  6538  000922  5C1D               	subwf	TFT_DrawLine@y1^0,w,c
  6539  000924  6E05               	movwf	abs@a^0,c
  6540  000926  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6541  000928  581E               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6542  00092A  6E06               	movwf	(abs@a+1)^0,c
  6543  00092C  EC23  F017         	call	_abs	;wreg free
  6544  000930  5005               	movf	?_abs^0,w,c
  6545  000932  5C21               	subwf	??_TFT_DrawLine^0,w,c
  6546  000934  5022               	movf	(??_TFT_DrawLine+1)^0,w,c
  6547  000936  0A80               	xorlw	128
  6548  000938  6E23               	movwf	(??_TFT_DrawLine+2)^0,c
  6549  00093A  5006               	movf	(?_abs+1)^0,w,c
  6550  00093C  0A80               	xorlw	128
  6551  00093E  5823               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  6552  000940  A0D8               	btfss	status,0,c
  6553  000942  EFA5  F004         	goto	u2091
  6554  000946  EFA8  F004         	goto	u2090
  6555  00094A                     u2091:
  6556  00094A  0E01               	movlw	1
  6557  00094C  EFA9  F004         	goto	u2100
  6558  000950                     u2090:
  6559  000950  0E00               	movlw	0
  6560  000952                     u2100:
  6561  000952  6E32               	movwf	TFT_DrawLine@steep^0,c
  6562  000954  6A33               	clrf	(TFT_DrawLine@steep+1)^0,c
  6563  000956                     
  6564                           ;TFT.c: 194: if(steep) {
  6565  000956  5032               	movf	TFT_DrawLine@steep^0,w,c
  6566  000958  1033               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6567  00095A  B4D8               	btfsc	status,2,c
  6568  00095C  EFB2  F004         	goto	u2111
  6569  000960  EFB4  F004         	goto	u2110
  6570  000964                     u2111:
  6571  000964  EFCC  F004         	goto	l3389
  6572  000968                     u2110:
  6573  000968                     
  6574                           ;TFT.c: 195: { int16_t t = x0; x0 = y0; y0 = t; };
  6575  000968  C017  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  6576  00096C  C018  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  6577  000970  C019  F017         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  6578  000974  C01A  F018         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  6579  000978  C024  F019         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  6580  00097C  C025  F01A         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  6581                           
  6582                           ;TFT.c: 196: { int16_t t = x1; x1 = y1; y1 = t; };
  6583  000980  C01B  F026         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_767
  6584  000984  C01C  F027         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_767+1
  6585  000988  C01D  F01B         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  6586  00098C  C01E  F01C         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  6587  000990  C026  F01D         	movff	TFT_DrawLine@t_767,TFT_DrawLine@y1
  6588  000994  C027  F01E         	movff	TFT_DrawLine@t_767+1,TFT_DrawLine@y1+1
  6589  000998                     l3389:
  6590                           
  6591                           ;TFT.c: 197: };TFT.c: 198: if(x0 > x1) {
  6592  000998  5017               	movf	TFT_DrawLine@x0^0,w,c
  6593  00099A  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6594  00099C  501C               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6595  00099E  0A80               	xorlw	128
  6596  0009A0  6E21               	movwf	??_TFT_DrawLine^0,c
  6597  0009A2  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6598  0009A4  0A80               	xorlw	128
  6599  0009A6  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6600  0009A8  B0D8               	btfsc	status,0,c
  6601  0009AA  EFD9  F004         	goto	u2121
  6602  0009AE  EFDB  F004         	goto	u2120
  6603  0009B2                     u2121:
  6604  0009B2  EFF3  F004         	goto	l3393
  6605  0009B6                     u2120:
  6606  0009B6                     
  6607                           ;TFT.c: 199: { int16_t t = x0; x0 = x1; x1 = t; };
  6608  0009B6  C017  F028         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_768
  6609  0009BA  C018  F029         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_768+1
  6610  0009BE  C01B  F017         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  6611  0009C2  C01C  F018         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  6612  0009C6  C028  F01B         	movff	TFT_DrawLine@t_768,TFT_DrawLine@x1
  6613  0009CA  C029  F01C         	movff	TFT_DrawLine@t_768+1,TFT_DrawLine@x1+1
  6614                           
  6615                           ;TFT.c: 200: { int16_t t = y0; y0 = y1; y1 = t; };
  6616  0009CE  C019  F02A         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_769
  6617  0009D2  C01A  F02B         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_769+1
  6618  0009D6  C01D  F019         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  6619  0009DA  C01E  F01A         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  6620  0009DE  C02A  F01D         	movff	TFT_DrawLine@t_769,TFT_DrawLine@y1
  6621  0009E2  C02B  F01E         	movff	TFT_DrawLine@t_769+1,TFT_DrawLine@y1+1
  6622  0009E6                     l3393:
  6623                           
  6624                           ;TFT.c: 201: };TFT.c: 203: int16_t dx, dy;;TFT.c: 204: dx = x1 - x0;
  6625  0009E6  5017               	movf	TFT_DrawLine@x0^0,w,c
  6626  0009E8  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6627  0009EA  6E34               	movwf	TFT_DrawLine@dx^0,c
  6628  0009EC  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6629  0009EE  581C               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6630  0009F0  6E35               	movwf	(TFT_DrawLine@dx+1)^0,c
  6631  0009F2                     
  6632                           ;TFT.c: 205: dy = abs(y1 - y0);
  6633  0009F2  5019               	movf	TFT_DrawLine@y0^0,w,c
  6634  0009F4  5C1D               	subwf	TFT_DrawLine@y1^0,w,c
  6635  0009F6  6E05               	movwf	abs@a^0,c
  6636  0009F8  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6637  0009FA  581E               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6638  0009FC  6E06               	movwf	(abs@a+1)^0,c
  6639  0009FE  EC23  F017         	call	_abs	;wreg free
  6640  000A02  C005  F02C         	movff	?_abs,TFT_DrawLine@dy
  6641  000A06  C006  F02D         	movff	?_abs+1,TFT_DrawLine@dy+1
  6642  000A0A                     
  6643                           ;TFT.c: 207: int16_t err = dx / 2;
  6644  000A0A  C034  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  6645  000A0E  C035  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  6646  000A12  0E00               	movlw	0
  6647  000A14  6E08               	movwf	(___awdiv@divisor+1)^0,c
  6648  000A16  0E02               	movlw	2
  6649  000A18  6E07               	movwf	___awdiv@divisor^0,c
  6650  000A1A  EC5D  F00E         	call	___awdiv	;wreg free
  6651  000A1E  C005  F030         	movff	?___awdiv,TFT_DrawLine@err
  6652  000A22  C006  F031         	movff	?___awdiv+1,TFT_DrawLine@err+1
  6653                           
  6654                           ;TFT.c: 208: int16_t ystep;;TFT.c: 210: if(y0 < y1) {
  6655  000A26  501D               	movf	TFT_DrawLine@y1^0,w,c
  6656  000A28  5C19               	subwf	TFT_DrawLine@y0^0,w,c
  6657  000A2A  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6658  000A2C  0A80               	xorlw	128
  6659  000A2E  6E21               	movwf	??_TFT_DrawLine^0,c
  6660  000A30  501E               	movf	(TFT_DrawLine@y1+1)^0,w,c
  6661  000A32  0A80               	xorlw	128
  6662  000A34  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6663  000A36  B0D8               	btfsc	status,0,c
  6664  000A38  EF20  F005         	goto	u2131
  6665  000A3C  EF22  F005         	goto	u2130
  6666  000A40                     u2131:
  6667  000A40  EF28  F005         	goto	l262
  6668  000A44                     u2130:
  6669  000A44                     
  6670                           ;TFT.c: 211: ystep = 1;
  6671  000A44  0E00               	movlw	0
  6672  000A46  6E2F               	movwf	(TFT_DrawLine@ystep+1)^0,c
  6673  000A48  0E01               	movlw	1
  6674  000A4A  6E2E               	movwf	TFT_DrawLine@ystep^0,c
  6675                           
  6676                           ;TFT.c: 212: } else {
  6677  000A4C  EF68  F005         	goto	l3415
  6678  000A50                     l262:
  6679                           
  6680                           ;TFT.c: 213: ystep = -1;
  6681  000A50  682E               	setf	TFT_DrawLine@ystep^0,c
  6682  000A52  682F               	setf	(TFT_DrawLine@ystep+1)^0,c
  6683  000A54  EF68  F005         	goto	l3415
  6684  000A58                     l3401:
  6685                           
  6686                           ;TFT.c: 217: if(steep) {
  6687  000A58  5032               	movf	TFT_DrawLine@steep^0,w,c
  6688  000A5A  1033               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6689  000A5C  B4D8               	btfsc	status,2,c
  6690  000A5E  EF33  F005         	goto	u2141
  6691  000A62  EF35  F005         	goto	u2140
  6692  000A66                     u2141:
  6693  000A66  EF45  F005         	goto	l3405
  6694  000A6A                     u2140:
  6695  000A6A                     
  6696                           ;TFT.c: 218: TFT_DrawPixel(y0, x0, color);
  6697  000A6A  C019  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  6698  000A6E  C01A  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  6699  000A72  C017  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  6700  000A76  C018  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  6701  000A7A  C01F  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6702  000A7E  C020  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6703  000A82  EC18  F00D         	call	_TFT_DrawPixel	;wreg free
  6704                           
  6705                           ;TFT.c: 219: } else {
  6706  000A86  EF53  F005         	goto	l3407
  6707  000A8A                     l3405:
  6708                           
  6709                           ;TFT.c: 220: TFT_DrawPixel(x0, y0, color);
  6710  000A8A  C017  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  6711  000A8E  C018  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  6712  000A92  C019  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  6713  000A96  C01A  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  6714  000A9A  C01F  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6715  000A9E  C020  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6716  000AA2  EC18  F00D         	call	_TFT_DrawPixel	;wreg free
  6717  000AA6                     l3407:
  6718                           
  6719                           ;TFT.c: 221: };TFT.c: 222: err -= dy;
  6720  000AA6  502C               	movf	TFT_DrawLine@dy^0,w,c
  6721  000AA8  5E30               	subwf	TFT_DrawLine@err^0,f,c
  6722  000AAA  502D               	movf	(TFT_DrawLine@dy+1)^0,w,c
  6723  000AAC  5A31               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  6724  000AAE                     
  6725                           ;TFT.c: 223: if(err < 0) {
  6726  000AAE  BE31               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  6727  000AB0  EF5E  F005         	goto	u2150
  6728  000AB4  EF5C  F005         	goto	u2151
  6729  000AB8                     u2151:
  6730  000AB8  EF66  F005         	goto	l3413
  6731  000ABC                     u2150:
  6732  000ABC                     
  6733                           ;TFT.c: 224: y0 += ystep;
  6734  000ABC  502E               	movf	TFT_DrawLine@ystep^0,w,c
  6735  000ABE  2619               	addwf	TFT_DrawLine@y0^0,f,c
  6736  000AC0  502F               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  6737  000AC2  221A               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  6738                           
  6739                           ;TFT.c: 225: err += dx;
  6740  000AC4  5034               	movf	TFT_DrawLine@dx^0,w,c
  6741  000AC6  2630               	addwf	TFT_DrawLine@err^0,f,c
  6742  000AC8  5035               	movf	(TFT_DrawLine@dx+1)^0,w,c
  6743  000ACA  2231               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  6744  000ACC                     l3413:
  6745  000ACC  4A17               	infsnz	TFT_DrawLine@x0^0,f,c
  6746  000ACE  2A18               	incf	(TFT_DrawLine@x0+1)^0,f,c
  6747  000AD0                     l3415:
  6748  000AD0  501B               	movf	TFT_DrawLine@x1^0,w,c
  6749  000AD2  5C17               	subwf	TFT_DrawLine@x0^0,w,c
  6750  000AD4  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6751  000AD6  0A80               	xorlw	128
  6752  000AD8  6E21               	movwf	??_TFT_DrawLine^0,c
  6753  000ADA  501C               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6754  000ADC  0A80               	xorlw	128
  6755  000ADE  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6756  000AE0  A0D8               	btfss	status,0,c
  6757  000AE2  EF75  F005         	goto	u2161
  6758  000AE6  EF77  F005         	goto	u2160
  6759  000AEA                     u2161:
  6760  000AEA  EF2C  F005         	goto	l3401
  6761  000AEE                     u2160:
  6762  000AEE  0012               	return		;funcret
  6763  000AF0                     __end_of_TFT_DrawLine:
  6764                           	opt callstack 0
  6765                           
  6766 ;; *************** function _abs *****************
  6767 ;; Defined at:
  6768 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  a               2    4[COMRAM] int 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;		None
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  2    4[COMRAM] int 
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6782 ;;      Params:         2       0       0       0       0       0       0       0       0
  6783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6784 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6785 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6786 ;;Total ram usage:        4 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    2
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_TFT_DrawLine
  6793 ;;		_Ecg_ProcessHeartbeat
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text27
  6798  002E46                     __ptext27:
  6799                           	opt callstack 0
  6800  002E46                     _abs:
  6801                           	opt callstack 24
  6802  002E46  BE06               	btfsc	(abs@a+1)^0,7,c
  6803  002E48  EF2A  F017         	goto	u2020
  6804  002E4C  EF28  F017         	goto	u2021
  6805  002E50                     u2021:
  6806  002E50  EF38  F017         	goto	l1410
  6807  002E54                     u2020:
  6808  002E54  C005  F007         	movff	abs@a,??_abs
  6809  002E58  C006  F008         	movff	abs@a+1,??_abs+1
  6810  002E5C  1E07               	comf	??_abs^0,f,c
  6811  002E5E  1E08               	comf	(??_abs+1)^0,f,c
  6812  002E60  4A07               	infsnz	??_abs^0,f,c
  6813  002E62  2A08               	incf	(??_abs+1)^0,f,c
  6814  002E64  C007  F005         	movff	??_abs,?_abs
  6815  002E68  C008  F006         	movff	??_abs+1,?_abs+1
  6816  002E6C  EF3C  F017         	goto	l1411
  6817  002E70                     l1410:
  6818  002E70  C005  F005         	movff	abs@a,?_abs
  6819  002E74  C006  F006         	movff	abs@a+1,?_abs+1
  6820  002E78                     l1411:
  6821  002E78  0012               	return		;funcret
  6822  002E7A                     __end_of_abs:
  6823                           	opt callstack 0
  6824                           
  6825 ;; *************** function ___awdiv *****************
  6826 ;; Defined at:
  6827 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  dividend        2    4[COMRAM] int 
  6830 ;;  divisor         2    6[COMRAM] int 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  quotient        2   10[COMRAM] int 
  6833 ;;  sign            1    9[COMRAM] unsigned char 
  6834 ;;  counter         1    8[COMRAM] unsigned char 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  2    4[COMRAM] int 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6844 ;;      Params:         4       0       0       0       0       0       0       0       0
  6845 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6847 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6848 ;;Total ram usage:        8 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    2
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_TFT_DrawLine
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text28
  6859  001CBA                     __ptext28:
  6860                           	opt callstack 0
  6861  001CBA                     ___awdiv:
  6862                           	opt callstack 24
  6863  001CBA  0E00               	movlw	0
  6864  001CBC  6E0A               	movwf	___awdiv@sign^0,c
  6865  001CBE  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6866  001CC0  EF66  F00E         	goto	u2030
  6867  001CC4  EF64  F00E         	goto	u2031
  6868  001CC8                     u2031:
  6869  001CC8  EF6C  F00E         	goto	l3341
  6870  001CCC                     u2030:
  6871  001CCC  6C07               	negf	___awdiv@divisor^0,c
  6872  001CCE  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6873  001CD0  B0D8               	btfsc	status,0,c
  6874  001CD2  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6875  001CD4  0E01               	movlw	1
  6876  001CD6  6E0A               	movwf	___awdiv@sign^0,c
  6877  001CD8                     l3341:
  6878  001CD8  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6879  001CDA  EF73  F00E         	goto	u2040
  6880  001CDE  EF71  F00E         	goto	u2041
  6881  001CE2                     u2041:
  6882  001CE2  EF79  F00E         	goto	l3347
  6883  001CE6                     u2040:
  6884  001CE6  6C05               	negf	___awdiv@dividend^0,c
  6885  001CE8  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6886  001CEA  B0D8               	btfsc	status,0,c
  6887  001CEC  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6888  001CEE  0E01               	movlw	1
  6889  001CF0  1A0A               	xorwf	___awdiv@sign^0,f,c
  6890  001CF2                     l3347:
  6891  001CF2  0E00               	movlw	0
  6892  001CF4  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6893  001CF6  0E00               	movlw	0
  6894  001CF8  6E0B               	movwf	___awdiv@quotient^0,c
  6895  001CFA  5007               	movf	___awdiv@divisor^0,w,c
  6896  001CFC  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6897  001CFE  B4D8               	btfsc	status,2,c
  6898  001D00  EF84  F00E         	goto	u2051
  6899  001D04  EF86  F00E         	goto	u2050
  6900  001D08                     u2051:
  6901  001D08  EFAE  F00E         	goto	l3369
  6902  001D0C                     u2050:
  6903  001D0C  0E01               	movlw	1
  6904  001D0E  6E09               	movwf	___awdiv@counter^0,c
  6905  001D10  EF8E  F00E         	goto	l3355
  6906  001D14                     l3353:
  6907  001D14  90D8               	bcf	status,0,c
  6908  001D16  3607               	rlcf	___awdiv@divisor^0,f,c
  6909  001D18  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6910  001D1A  2A09               	incf	___awdiv@counter^0,f,c
  6911  001D1C                     l3355:
  6912  001D1C  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6913  001D1E  EF93  F00E         	goto	u2061
  6914  001D22  EF95  F00E         	goto	u2060
  6915  001D26                     u2061:
  6916  001D26  EF8A  F00E         	goto	l3353
  6917  001D2A                     u2060:
  6918  001D2A                     l3357:
  6919  001D2A  90D8               	bcf	status,0,c
  6920  001D2C  360B               	rlcf	___awdiv@quotient^0,f,c
  6921  001D2E  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6922  001D30  5007               	movf	___awdiv@divisor^0,w,c
  6923  001D32  5C05               	subwf	___awdiv@dividend^0,w,c
  6924  001D34  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6925  001D36  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6926  001D38  A0D8               	btfss	status,0,c
  6927  001D3A  EFA1  F00E         	goto	u2071
  6928  001D3E  EFA3  F00E         	goto	u2070
  6929  001D42                     u2071:
  6930  001D42  EFA8  F00E         	goto	l3365
  6931  001D46                     u2070:
  6932  001D46  5007               	movf	___awdiv@divisor^0,w,c
  6933  001D48  5E05               	subwf	___awdiv@dividend^0,f,c
  6934  001D4A  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6935  001D4C  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6936  001D4E  800B               	bsf	___awdiv@quotient^0,0,c
  6937  001D50                     l3365:
  6938  001D50  90D8               	bcf	status,0,c
  6939  001D52  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6940  001D54  3207               	rrcf	___awdiv@divisor^0,f,c
  6941  001D56  2E09               	decfsz	___awdiv@counter^0,f,c
  6942  001D58  EF95  F00E         	goto	l3357
  6943  001D5C                     l3369:
  6944  001D5C  500A               	movf	___awdiv@sign^0,w,c
  6945  001D5E  B4D8               	btfsc	status,2,c
  6946  001D60  EFB4  F00E         	goto	u2081
  6947  001D64  EFB6  F00E         	goto	u2080
  6948  001D68                     u2081:
  6949  001D68  EFBA  F00E         	goto	l3373
  6950  001D6C                     u2080:
  6951  001D6C  6C0B               	negf	___awdiv@quotient^0,c
  6952  001D6E  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6953  001D70  B0D8               	btfsc	status,0,c
  6954  001D72  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6955  001D74                     l3373:
  6956  001D74  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6957  001D78  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6958  001D7C  0012               	return		;funcret
  6959  001D7E                     __end_of___awdiv:
  6960                           	opt callstack 0
  6961                           
  6962 ;; *************** function _TFT_DrawPixel *****************
  6963 ;; Defined at:
  6964 ;;		line 167 in file "TFT.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  x               2   12[COMRAM] unsigned int 
  6967 ;;  y               2   14[COMRAM] unsigned int 
  6968 ;;  color           2   16[COMRAM] unsigned int 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  v               2   20[COMRAM] unsigned int 
  6971 ;;  h               2   18[COMRAM] unsigned int 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6981 ;;      Params:         6       0       0       0       0       0       0       0       0
  6982 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6984 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6985 ;;Total ram usage:       10 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    3
  6988 ;; This function calls:
  6989 ;;		_TFT_OrientationGet
  6990 ;;		_TFT_WriteRegister
  6991 ;; This function is called by:
  6992 ;;		_TFT_DrawLine
  6993 ;;		_TFT_DrawChar
  6994 ;;		_TFT_DrawBitmap
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text29
  6999  001A30                     __ptext29:
  7000                           	opt callstack 0
  7001  001A30                     _TFT_DrawPixel:
  7002                           	opt callstack 24
  7003  001A30                     
  7004                           ;TFT.c: 168: uint16_t h, v;;TFT.c: 169: switch(TFT_OrientationGet()) {
  7005  001A30  EF52  F00D         	goto	l3319
  7006  001A34                     l252:
  7007                           
  7008                           ;TFT.c: 171: h = x;
  7009  001A34  C00D  F013         	movff	TFT_DrawPixel@x,TFT_DrawPixel@h
  7010  001A38  C00E  F014         	movff	TFT_DrawPixel@x+1,TFT_DrawPixel@h+1
  7011                           
  7012                           ;TFT.c: 172: v = y;
  7013  001A3C  C00F  F015         	movff	TFT_DrawPixel@y,TFT_DrawPixel@v
  7014  001A40  C010  F016         	movff	TFT_DrawPixel@y+1,TFT_DrawPixel@v+1
  7015                           
  7016                           ;TFT.c: 173: break;
  7017  001A44  EF66  F00D         	goto	l3321
  7018  001A48                     l3309:
  7019                           
  7020                           ;TFT.c: 175: h = 240 - y - 1;
  7021  001A48  500F               	movf	TFT_DrawPixel@y^0,w,c
  7022  001A4A  08EF               	sublw	239
  7023  001A4C  6E13               	movwf	TFT_DrawPixel@h^0,c
  7024  001A4E  5010               	movf	(TFT_DrawPixel@y+1)^0,w,c
  7025  001A50  A0D8               	btfss	status,0,c
  7026  001A52  2AE8               	incf	wreg,f,c
  7027  001A54  0800               	sublw	0
  7028  001A56  6E14               	movwf	(TFT_DrawPixel@h+1)^0,c
  7029  001A58                     
  7030                           ;TFT.c: 176: v = x;
  7031  001A58  C00D  F015         	movff	TFT_DrawPixel@x,TFT_DrawPixel@v
  7032  001A5C  C00E  F016         	movff	TFT_DrawPixel@x+1,TFT_DrawPixel@v+1
  7033                           
  7034                           ;TFT.c: 177: break;
  7035  001A60  EF66  F00D         	goto	l3321
  7036  001A64                     l3313:
  7037                           
  7038                           ;TFT.c: 179: h = 240 - x - 1;
  7039  001A64  500D               	movf	TFT_DrawPixel@x^0,w,c
  7040  001A66  08EF               	sublw	239
  7041  001A68  6E13               	movwf	TFT_DrawPixel@h^0,c
  7042  001A6A  500E               	movf	(TFT_DrawPixel@x+1)^0,w,c
  7043  001A6C  A0D8               	btfss	status,0,c
  7044  001A6E  2AE8               	incf	wreg,f,c
  7045  001A70  0800               	sublw	0
  7046  001A72  6E14               	movwf	(TFT_DrawPixel@h+1)^0,c
  7047                           
  7048                           ;TFT.c: 180: v = 400 - y - 1;
  7049  001A74  500F               	movf	TFT_DrawPixel@y^0,w,c
  7050  001A76  088F               	sublw	143
  7051  001A78  6E15               	movwf	TFT_DrawPixel@v^0,c
  7052  001A7A  5010               	movf	(TFT_DrawPixel@y+1)^0,w,c
  7053  001A7C  A0D8               	btfss	status,0,c
  7054  001A7E  2AE8               	incf	wreg,f,c
  7055  001A80  0801               	sublw	1
  7056  001A82  6E16               	movwf	(TFT_DrawPixel@v+1)^0,c
  7057                           
  7058                           ;TFT.c: 181: break;
  7059  001A84  EF66  F00D         	goto	l3321
  7060  001A88                     l256:
  7061                           
  7062                           ;TFT.c: 183: h = y;
  7063  001A88  C00F  F013         	movff	TFT_DrawPixel@y,TFT_DrawPixel@h
  7064  001A8C  C010  F014         	movff	TFT_DrawPixel@y+1,TFT_DrawPixel@h+1
  7065  001A90                     
  7066                           ;TFT.c: 184: v = 400 - x - 1;
  7067  001A90  500D               	movf	TFT_DrawPixel@x^0,w,c
  7068  001A92  088F               	sublw	143
  7069  001A94  6E15               	movwf	TFT_DrawPixel@v^0,c
  7070  001A96  500E               	movf	(TFT_DrawPixel@x+1)^0,w,c
  7071  001A98  A0D8               	btfss	status,0,c
  7072  001A9A  2AE8               	incf	wreg,f,c
  7073  001A9C  0801               	sublw	1
  7074  001A9E  6E16               	movwf	(TFT_DrawPixel@v+1)^0,c
  7075                           
  7076                           ;TFT.c: 185: break;
  7077  001AA0  EF66  F00D         	goto	l3321
  7078  001AA4                     l3319:
  7079  001AA4  ECC6  F017         	call	_TFT_OrientationGet	;wreg free
  7080                           
  7081                           ; Switch size 1, requested type "simple"
  7082                           ; Number of cases is 4, Range of values is 0 to 3
  7083                           ; switch strategies available:
  7084                           ; Name         Instructions Cycles
  7085                           ; simple_byte           13     7 (average)
  7086                           ;	Chosen strategy is simple_byte
  7087  001AA8  0A00               	xorlw	0	; case 0
  7088  001AAA  B4D8               	btfsc	status,2,c
  7089  001AAC  EF1A  F00D         	goto	l252
  7090  001AB0  0A01               	xorlw	1	; case 1
  7091  001AB2  B4D8               	btfsc	status,2,c
  7092  001AB4  EF24  F00D         	goto	l3309
  7093  001AB8  0A03               	xorlw	3	; case 2
  7094  001ABA  B4D8               	btfsc	status,2,c
  7095  001ABC  EF32  F00D         	goto	l3313
  7096  001AC0  0A01               	xorlw	1	; case 3
  7097  001AC2  B4D8               	btfsc	status,2,c
  7098  001AC4  EF44  F00D         	goto	l256
  7099  001AC8  EF66  F00D         	goto	l3321
  7100  001ACC                     l3321:
  7101                           
  7102                           ;TFT.c: 187: TFT_WriteRegister(0x0200, h);
  7103  001ACC  0E02               	movlw	2
  7104  001ACE  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7105  001AD0  0E00               	movlw	0
  7106  001AD2  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7107  001AD4  C013  F007         	movff	TFT_DrawPixel@h,TFT_WriteRegister@data
  7108  001AD8  C014  F008         	movff	TFT_DrawPixel@h+1,TFT_WriteRegister@data+1
  7109  001ADC  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7110                           
  7111                           ;TFT.c: 188: TFT_WriteRegister(0x0201, v);
  7112  001AE0  0E02               	movlw	2
  7113  001AE2  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7114  001AE4  0E01               	movlw	1
  7115  001AE6  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7116  001AE8  C015  F007         	movff	TFT_DrawPixel@v,TFT_WriteRegister@data
  7117  001AEC  C016  F008         	movff	TFT_DrawPixel@v+1,TFT_WriteRegister@data+1
  7118  001AF0  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7119                           
  7120                           ;TFT.c: 189: TFT_WriteRegister(0x0202, color);
  7121  001AF4  0E02               	movlw	2
  7122  001AF6  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7123  001AF8  0E02               	movlw	2
  7124  001AFA  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7125  001AFC  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  7126  001B00  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  7127  001B04  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7128  001B08  0012               	return		;funcret
  7129  001B0A                     __end_of_TFT_DrawPixel:
  7130                           	opt callstack 0
  7131                           
  7132 ;; *************** function _TFT_DrawFillRect *****************
  7133 ;; Defined at:
  7134 ;;		line 230 in file "TFT.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  x               2   29[COMRAM] unsigned int 
  7137 ;;  y               2   31[COMRAM] unsigned int 
  7138 ;;  w               2   33[COMRAM] unsigned int 
  7139 ;;  h               2   35[COMRAM] unsigned int 
  7140 ;;  color           2   37[COMRAM] unsigned int 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;		None
  7143 ;; Return value:  Size  Location     Type
  7144 ;;                  1    wreg      void 
  7145 ;; Registers used:
  7146 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7147 ;; Tracked objects:
  7148 ;;		On entry : 0/0
  7149 ;;		On exit  : 0/0
  7150 ;;		Unchanged: 0/0
  7151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7152 ;;      Params:        10       0       0       0       0       0       0       0       0
  7153 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7154 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7155 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7156 ;;Total ram usage:       14 bytes
  7157 ;; Hardware stack levels used:    1
  7158 ;; Hardware stack levels required when called:    5
  7159 ;; This function calls:
  7160 ;;		_TFT_Flood
  7161 ;;		_TFT_FullScreen
  7162 ;;		_TFT_SetAddrWindow
  7163 ;;		___wmul
  7164 ;; This function is called by:
  7165 ;;		_loop
  7166 ;;		_TFT_DrawChar
  7167 ;;		_Ecg_ProcessHeartbeat
  7168 ;;		_Ecg_Draw
  7169 ;;		_TFT_ConsolePrintLine
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text30
  7174  00236A                     __ptext30:
  7175                           	opt callstack 0
  7176  00236A                     _TFT_DrawFillRect:
  7177                           	opt callstack 22
  7178  00236A                     
  7179                           ;TFT.c: 231: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h - 1));
  7180  00236A  C01E  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  7181  00236E  C01F  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  7182  002372  C020  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  7183  002376  C021  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  7184  00237A  5022               	movf	TFT_DrawFillRect@w^0,w,c
  7185  00237C  241E               	addwf	TFT_DrawFillRect@x^0,w,c
  7186  00237E  6E28               	movwf	??_TFT_DrawFillRect^0,c
  7187  002380  5023               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  7188  002382  201F               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  7189  002384  6E29               	movwf	(??_TFT_DrawFillRect+1)^0,c
  7190  002386  0EFF               	movlw	255
  7191  002388  2428               	addwf	??_TFT_DrawFillRect^0,w,c
  7192  00238A  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  7193  00238C  0EFF               	movlw	255
  7194  00238E  2029               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  7195  002390  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  7196  002392  5024               	movf	TFT_DrawFillRect@h^0,w,c
  7197  002394  2420               	addwf	TFT_DrawFillRect@y^0,w,c
  7198  002396  6E2A               	movwf	(??_TFT_DrawFillRect+2)^0,c
  7199  002398  5025               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  7200  00239A  2021               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  7201  00239C  6E2B               	movwf	(??_TFT_DrawFillRect+3)^0,c
  7202  00239E  0EFF               	movlw	255
  7203  0023A0  242A               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  7204  0023A2  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  7205  0023A4  0EFF               	movlw	255
  7206  0023A6  202B               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  7207  0023A8  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  7208  0023AA  EC45  F003         	call	_TFT_SetAddrWindow	;wreg free
  7209  0023AE                     
  7210                           ;TFT.c: 232: TFT_Flood(color, (w * h));
  7211  0023AE  C026  F00D         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  7212  0023B2  C027  F00E         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  7213  0023B6  C022  F005         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  7214  0023BA  C023  F006         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  7215  0023BE  C024  F007         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  7216  0023C2  C025  F008         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  7217  0023C6  EC82  F017         	call	___wmul	;wreg free
  7218  0023CA  C005  F00F         	movff	?___wmul,TFT_Flood@len
  7219  0023CE  C006  F010         	movff	?___wmul+1,TFT_Flood@len+1
  7220  0023D2  6A11               	clrf	(TFT_Flood@len+2)^0,c
  7221  0023D4  6A12               	clrf	(TFT_Flood@len+3)^0,c
  7222  0023D6  EC3F  F006         	call	_TFT_Flood	;wreg free
  7223  0023DA                     
  7224                           ;TFT.c: 233: TFT_FullScreen(0);
  7225  0023DA  0E00               	movlw	0
  7226  0023DC  6E1D               	movwf	(TFT_FullScreen@color+1)^0,c
  7227  0023DE  0E00               	movlw	0
  7228  0023E0  6E1C               	movwf	TFT_FullScreen@color^0,c
  7229  0023E2  EC7E  F014         	call	_TFT_FullScreen	;wreg free
  7230  0023E6  0012               	return		;funcret
  7231  0023E8                     __end_of_TFT_DrawFillRect:
  7232                           	opt callstack 0
  7233                           
  7234 ;; *************** function _TFT_FullScreen *****************
  7235 ;; Defined at:
  7236 ;;		line 160 in file "TFT.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  color           2   27[COMRAM] unsigned int 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      void 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7250 ;;      Params:         2       0       0       0       0       0       0       0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7253 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7254 ;;Total ram usage:        2 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    4
  7257 ;; This function calls:
  7258 ;;		_TFT_Flood
  7259 ;;		_TFT_GetHeight
  7260 ;;		_TFT_GetWidth
  7261 ;;		_TFT_SetAddrWindow
  7262 ;; This function is called by:
  7263 ;;		_TFT_OrientationSet
  7264 ;;		_TFT_DrawFillRect
  7265 ;;		_Ecg_Background_Leads_Ok
  7266 ;;		_Ecg_Background_Leads_Failure
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text31
  7271  0028FC                     __ptext31:
  7272                           	opt callstack 0
  7273  0028FC                     _TFT_FullScreen:
  7274                           	opt callstack 22
  7275  0028FC                     
  7276                           ;TFT.c: 161: TFT_SetAddrWindow(0, 0, TFT_GetWidth(), TFT_GetHeight());
  7277  0028FC  0E00               	movlw	0
  7278  0028FE  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  7279  002900  0E00               	movlw	0
  7280  002902  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  7281  002904  0E00               	movlw	0
  7282  002906  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  7283  002908  0E00               	movlw	0
  7284  00290A  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  7285  00290C  EC75  F015         	call	_TFT_GetWidth	;wreg free
  7286  002910  C005  F011         	movff	?_TFT_GetWidth,TFT_SetAddrWindow@x2
  7287  002914  C006  F012         	movff	?_TFT_GetWidth+1,TFT_SetAddrWindow@x2+1
  7288  002918  EC9C  F015         	call	_TFT_GetHeight	;wreg free
  7289  00291C  C005  F013         	movff	?_TFT_GetHeight,TFT_SetAddrWindow@y2
  7290  002920  C006  F014         	movff	?_TFT_GetHeight+1,TFT_SetAddrWindow@y2+1
  7291  002924  EC45  F003         	call	_TFT_SetAddrWindow	;wreg free
  7292  002928                     
  7293                           ;TFT.c: 162: if(color != 0) {
  7294  002928  501C               	movf	TFT_FullScreen@color^0,w,c
  7295  00292A  101D               	iorwf	(TFT_FullScreen@color+1)^0,w,c
  7296  00292C  B4D8               	btfsc	status,2,c
  7297  00292E  EF9B  F014         	goto	u2011
  7298  002932  EF9D  F014         	goto	u2010
  7299  002936                     u2011:
  7300  002936  EFAB  F014         	goto	l248
  7301  00293A                     u2010:
  7302  00293A                     
  7303                           ;TFT.c: 163: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  7304  00293A  C01C  F00D         	movff	TFT_FullScreen@color,TFT_Flood@color
  7305  00293E  C01D  F00E         	movff	TFT_FullScreen@color+1,TFT_Flood@color+1
  7306  002942  0E00               	movlw	0
  7307  002944  6E0F               	movwf	TFT_Flood@len^0,c
  7308  002946  0E77               	movlw	119
  7309  002948  6E10               	movwf	(TFT_Flood@len+1)^0,c
  7310  00294A  0E01               	movlw	1
  7311  00294C  6E11               	movwf	(TFT_Flood@len+2)^0,c
  7312  00294E  0E00               	movlw	0
  7313  002950  6E12               	movwf	(TFT_Flood@len+3)^0,c
  7314  002952  EC3F  F006         	call	_TFT_Flood	;wreg free
  7315  002956                     l248:
  7316  002956  0012               	return		;funcret
  7317  002958                     __end_of_TFT_FullScreen:
  7318                           	opt callstack 0
  7319                           
  7320 ;; *************** function _TFT_SetAddrWindow *****************
  7321 ;; Defined at:
  7322 ;;		line 115 in file "TFT.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  x1              2   12[COMRAM] unsigned int 
  7325 ;;  y1              2   14[COMRAM] unsigned int 
  7326 ;;  x2              2   16[COMRAM] unsigned int 
  7327 ;;  y2              2   18[COMRAM] unsigned int 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0, cstack
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7339 ;;      Params:         8       0       0       0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7342 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7343 ;;Total ram usage:        8 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; Hardware stack levels required when called:    3
  7346 ;; This function calls:
  7347 ;;		_TFT_OrientationGet
  7348 ;;		_TFT_WriteRegister
  7349 ;; This function is called by:
  7350 ;;		_TFT_FullScreen
  7351 ;;		_TFT_DrawFillRect
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text32
  7356  00068A                     __ptext32:
  7357                           	opt callstack 0
  7358  00068A                     _TFT_SetAddrWindow:
  7359                           	opt callstack 23
  7360  00068A                     
  7361                           ;TFT.c: 116: switch(TFT_OrientationGet()) {
  7362  00068A  EF6F  F004         	goto	l3271
  7363  00068E                     l3249:
  7364                           
  7365                           ;TFT.c: 119: TFT_WriteRegister(0x0210, x1);
  7366  00068E  0E02               	movlw	2
  7367  000690  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7368  000692  0E10               	movlw	16
  7369  000694  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7370  000696  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7371  00069A  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7372  00069E  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7373                           
  7374                           ;TFT.c: 120: TFT_WriteRegister(0x0211, x2);
  7375  0006A2  0E02               	movlw	2
  7376  0006A4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7377  0006A6  0E11               	movlw	17
  7378  0006A8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7379  0006AA  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  7380  0006AE  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  7381  0006B2  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7382                           
  7383                           ;TFT.c: 121: TFT_WriteRegister(0x0212, y1);
  7384  0006B6  0E02               	movlw	2
  7385  0006B8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7386  0006BA  0E12               	movlw	18
  7387  0006BC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7388  0006BE  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7389  0006C2  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7390  0006C6  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7391                           
  7392                           ;TFT.c: 122: TFT_WriteRegister(0x0213, y2);
  7393  0006CA  0E02               	movlw	2
  7394  0006CC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7395  0006CE  0E13               	movlw	19
  7396  0006D0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7397  0006D2  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7398  0006D6  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7399  0006DA  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7400                           
  7401                           ;TFT.c: 124: TFT_WriteRegister(0x0200, x1);
  7402  0006DE  0E02               	movlw	2
  7403  0006E0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7404  0006E2  0E00               	movlw	0
  7405  0006E4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7406  0006E6  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7407  0006EA  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7408  0006EE  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7409                           
  7410                           ;TFT.c: 125: TFT_WriteRegister(0x0201, y2);
  7411  0006F2  0E02               	movlw	2
  7412  0006F4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7413  0006F6  0E01               	movlw	1
  7414  0006F8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7415  0006FA  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7416  0006FE  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7417  000702  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7418                           
  7419                           ;TFT.c: 126: break;
  7420  000706  EF83  F004         	goto	l244
  7421  00070A                     l3251:
  7422                           
  7423                           ;TFT.c: 129: TFT_WriteRegister(0x0210, 240 - 1 - y2);
  7424  00070A  0E02               	movlw	2
  7425  00070C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7426  00070E  0E10               	movlw	16
  7427  000710  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7428  000712  5013               	movf	TFT_SetAddrWindow@y2^0,w,c
  7429  000714  08EF               	sublw	239
  7430  000716  6E07               	movwf	TFT_WriteRegister@data^0,c
  7431  000718  5014               	movf	(TFT_SetAddrWindow@y2+1)^0,w,c
  7432  00071A  A0D8               	btfss	status,0,c
  7433  00071C  2AE8               	incf	wreg,f,c
  7434  00071E  0800               	sublw	0
  7435  000720  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7436  000722  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7437                           
  7438                           ;TFT.c: 130: TFT_WriteRegister(0x0211, 240 - 1 - y1);
  7439  000726  0E02               	movlw	2
  7440  000728  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7441  00072A  0E11               	movlw	17
  7442  00072C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7443  00072E  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7444  000730  08EF               	sublw	239
  7445  000732  6E07               	movwf	TFT_WriteRegister@data^0,c
  7446  000734  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7447  000736  A0D8               	btfss	status,0,c
  7448  000738  2AE8               	incf	wreg,f,c
  7449  00073A  0800               	sublw	0
  7450  00073C  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7451  00073E  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7452  000742                     
  7453                           ;TFT.c: 131: TFT_WriteRegister(0x0212, x1);
  7454  000742  0E02               	movlw	2
  7455  000744  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7456  000746  0E12               	movlw	18
  7457  000748  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7458  00074A  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7459  00074E  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7460  000752  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7461  000756                     
  7462                           ;TFT.c: 132: TFT_WriteRegister(0x0213, x2);
  7463  000756  0E02               	movlw	2
  7464  000758  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7465  00075A  0E13               	movlw	19
  7466  00075C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7467  00075E  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  7468  000762  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  7469  000766  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7470                           
  7471                           ;TFT.c: 134: TFT_WriteRegister(0x0200, 240 - 1 - y1);
  7472  00076A  0E02               	movlw	2
  7473  00076C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7474  00076E  0E00               	movlw	0
  7475  000770  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7476  000772  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7477  000774  08EF               	sublw	239
  7478  000776  6E07               	movwf	TFT_WriteRegister@data^0,c
  7479  000778  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7480  00077A  A0D8               	btfss	status,0,c
  7481  00077C  2AE8               	incf	wreg,f,c
  7482  00077E  0800               	sublw	0
  7483  000780  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7484  000782  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7485  000786                     
  7486                           ;TFT.c: 135: TFT_WriteRegister(0x0201, x1);
  7487  000786  0E02               	movlw	2
  7488  000788  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7489  00078A  0E01               	movlw	1
  7490  00078C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7491  00078E  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7492  000792  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7493  000796  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7494                           
  7495                           ;TFT.c: 136: break;
  7496  00079A  EF83  F004         	goto	l244
  7497  00079E                     l3259:
  7498                           
  7499                           ;TFT.c: 139: TFT_WriteRegister(0x0210, 240 - 1 - x2);
  7500  00079E  0E02               	movlw	2
  7501  0007A0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7502  0007A2  0E10               	movlw	16
  7503  0007A4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7504  0007A6  5011               	movf	TFT_SetAddrWindow@x2^0,w,c
  7505  0007A8  08EF               	sublw	239
  7506  0007AA  6E07               	movwf	TFT_WriteRegister@data^0,c
  7507  0007AC  5012               	movf	(TFT_SetAddrWindow@x2+1)^0,w,c
  7508  0007AE  A0D8               	btfss	status,0,c
  7509  0007B0  2AE8               	incf	wreg,f,c
  7510  0007B2  0800               	sublw	0
  7511  0007B4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7512  0007B6  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7513                           
  7514                           ;TFT.c: 140: TFT_WriteRegister(0x0211, 240 - 1 - x1);
  7515  0007BA  0E02               	movlw	2
  7516  0007BC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7517  0007BE  0E11               	movlw	17
  7518  0007C0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7519  0007C2  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7520  0007C4  08EF               	sublw	239
  7521  0007C6  6E07               	movwf	TFT_WriteRegister@data^0,c
  7522  0007C8  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7523  0007CA  A0D8               	btfss	status,0,c
  7524  0007CC  2AE8               	incf	wreg,f,c
  7525  0007CE  0800               	sublw	0
  7526  0007D0  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7527  0007D2  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7528                           
  7529                           ;TFT.c: 141: TFT_WriteRegister(0x0212, 400 - 1 - y2);
  7530  0007D6  0E02               	movlw	2
  7531  0007D8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7532  0007DA  0E12               	movlw	18
  7533  0007DC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7534  0007DE  5013               	movf	TFT_SetAddrWindow@y2^0,w,c
  7535  0007E0  088F               	sublw	143
  7536  0007E2  6E07               	movwf	TFT_WriteRegister@data^0,c
  7537  0007E4  5014               	movf	(TFT_SetAddrWindow@y2+1)^0,w,c
  7538  0007E6  A0D8               	btfss	status,0,c
  7539  0007E8  2AE8               	incf	wreg,f,c
  7540  0007EA  0801               	sublw	1
  7541  0007EC  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7542  0007EE  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7543                           
  7544                           ;TFT.c: 142: TFT_WriteRegister(0x0213, 400 - 1 - y1);
  7545  0007F2  0E02               	movlw	2
  7546  0007F4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7547  0007F6  0E13               	movlw	19
  7548  0007F8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7549  0007FA  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7550  0007FC  088F               	sublw	143
  7551  0007FE  6E07               	movwf	TFT_WriteRegister@data^0,c
  7552  000800  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7553  000802  A0D8               	btfss	status,0,c
  7554  000804  2AE8               	incf	wreg,f,c
  7555  000806  0801               	sublw	1
  7556  000808  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7557  00080A  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7558                           
  7559                           ;TFT.c: 144: TFT_WriteRegister(0x0200, 240 - 1 - x1);
  7560  00080E  0E02               	movlw	2
  7561  000810  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7562  000812  0E00               	movlw	0
  7563  000814  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7564  000816  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7565  000818  08EF               	sublw	239
  7566  00081A  6E07               	movwf	TFT_WriteRegister@data^0,c
  7567  00081C  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7568  00081E  A0D8               	btfss	status,0,c
  7569  000820  2AE8               	incf	wreg,f,c
  7570  000822  0800               	sublw	0
  7571  000824  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7572  000826  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7573                           
  7574                           ;TFT.c: 145: TFT_WriteRegister(0x0201, 400 - 1 - y1);
  7575  00082A  0E02               	movlw	2
  7576  00082C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7577  00082E  0E01               	movlw	1
  7578  000830  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7579  000832  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7580  000834  088F               	sublw	143
  7581  000836  6E07               	movwf	TFT_WriteRegister@data^0,c
  7582  000838  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7583  00083A  A0D8               	btfss	status,0,c
  7584  00083C  2AE8               	incf	wreg,f,c
  7585  00083E  0801               	sublw	1
  7586  000840  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7587  000842  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7588                           
  7589                           ;TFT.c: 146: break;
  7590  000846  EF83  F004         	goto	l244
  7591  00084A                     l3261:
  7592                           
  7593                           ;TFT.c: 149: TFT_WriteRegister(0x0210, y1);
  7594  00084A  0E02               	movlw	2
  7595  00084C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7596  00084E  0E10               	movlw	16
  7597  000850  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7598  000852  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7599  000856  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7600  00085A  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7601                           
  7602                           ;TFT.c: 150: TFT_WriteRegister(0x0211, y2);
  7603  00085E  0E02               	movlw	2
  7604  000860  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7605  000862  0E11               	movlw	17
  7606  000864  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7607  000866  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7608  00086A  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7609  00086E  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7610  000872                     
  7611                           ;TFT.c: 151: TFT_WriteRegister(0x0212, 400 - 1 - x2);
  7612  000872  0E02               	movlw	2
  7613  000874  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7614  000876  0E12               	movlw	18
  7615  000878  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7616  00087A  5011               	movf	TFT_SetAddrWindow@x2^0,w,c
  7617  00087C  088F               	sublw	143
  7618  00087E  6E07               	movwf	TFT_WriteRegister@data^0,c
  7619  000880  5012               	movf	(TFT_SetAddrWindow@x2+1)^0,w,c
  7620  000882  A0D8               	btfss	status,0,c
  7621  000884  2AE8               	incf	wreg,f,c
  7622  000886  0801               	sublw	1
  7623  000888  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7624  00088A  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7625  00088E                     
  7626                           ;TFT.c: 152: TFT_WriteRegister(0x0213, 400 - 1 - x1);
  7627  00088E  0E02               	movlw	2
  7628  000890  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7629  000892  0E13               	movlw	19
  7630  000894  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7631  000896  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7632  000898  088F               	sublw	143
  7633  00089A  6E07               	movwf	TFT_WriteRegister@data^0,c
  7634  00089C  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7635  00089E  A0D8               	btfss	status,0,c
  7636  0008A0  2AE8               	incf	wreg,f,c
  7637  0008A2  0801               	sublw	1
  7638  0008A4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7639  0008A6  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7640                           
  7641                           ;TFT.c: 154: TFT_WriteRegister(0x0200, y1);
  7642  0008AA  0E02               	movlw	2
  7643  0008AC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7644  0008AE  0E00               	movlw	0
  7645  0008B0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7646  0008B2  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7647  0008B6  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7648  0008BA  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7649  0008BE                     
  7650                           ;TFT.c: 155: TFT_WriteRegister(0x0201, 400 - 1 - x1);
  7651  0008BE  0E02               	movlw	2
  7652  0008C0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7653  0008C2  0E01               	movlw	1
  7654  0008C4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7655  0008C6  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7656  0008C8  088F               	sublw	143
  7657  0008CA  6E07               	movwf	TFT_WriteRegister@data^0,c
  7658  0008CC  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7659  0008CE  A0D8               	btfss	status,0,c
  7660  0008D0  2AE8               	incf	wreg,f,c
  7661  0008D2  0801               	sublw	1
  7662  0008D4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7663  0008D6  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7664                           
  7665                           ;TFT.c: 156: break;
  7666  0008DA  EF83  F004         	goto	l244
  7667  0008DE                     l3271:
  7668  0008DE  ECC6  F017         	call	_TFT_OrientationGet	;wreg free
  7669                           
  7670                           ; Switch size 1, requested type "simple"
  7671                           ; Number of cases is 4, Range of values is 0 to 3
  7672                           ; switch strategies available:
  7673                           ; Name         Instructions Cycles
  7674                           ; simple_byte           13     7 (average)
  7675                           ;	Chosen strategy is simple_byte
  7676  0008E2  0A00               	xorlw	0	; case 0
  7677  0008E4  B4D8               	btfsc	status,2,c
  7678  0008E6  EF47  F003         	goto	l3249
  7679  0008EA  0A01               	xorlw	1	; case 1
  7680  0008EC  B4D8               	btfsc	status,2,c
  7681  0008EE  EF85  F003         	goto	l3251
  7682  0008F2  0A03               	xorlw	3	; case 2
  7683  0008F4  B4D8               	btfsc	status,2,c
  7684  0008F6  EFCF  F003         	goto	l3259
  7685  0008FA  0A01               	xorlw	1	; case 3
  7686  0008FC  B4D8               	btfsc	status,2,c
  7687  0008FE  EF25  F004         	goto	l3261
  7688  000902  EF83  F004         	goto	l244
  7689  000906                     l244:
  7690  000906  0012               	return		;funcret
  7691  000908                     __end_of_TFT_SetAddrWindow:
  7692                           	opt callstack 0
  7693                           
  7694 ;; *************** function _TFT_GetWidth *****************
  7695 ;; Defined at:
  7696 ;;		line 81 in file "TFT.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;		None
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  2    4[COMRAM] unsigned int 
  7703 ;; Registers used:
  7704 ;;		wreg, status,2, status,0, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7710 ;;      Params:         2       0       0       0       0       0       0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7713 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7714 ;;Total ram usage:        2 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:    3
  7717 ;; This function calls:
  7718 ;;		_TFT_OrientationGet
  7719 ;; This function is called by:
  7720 ;;		_loop
  7721 ;;		_TFT_FullScreen
  7722 ;;		_Ecg_Draw
  7723 ;;		_Ecg_Background_Leads_Ok
  7724 ;;		_TFT_ConsolePrintLine
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           	psect	text33
  7729  002AEA                     __ptext33:
  7730                           	opt callstack 0
  7731  002AEA                     _TFT_GetWidth:
  7732                           	opt callstack 26
  7733  002AEA                     
  7734                           ;TFT.c: 82: switch(TFT_OrientationGet()) {
  7735  002AEA  EF83  F015         	goto	l3223
  7736  002AEE                     l3213:
  7737                           
  7738                           ;TFT.c: 84: case 2:;TFT.c: 85: return 240 - 1;
  7739  002AEE  0E00               	movlw	0
  7740  002AF0  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7741  002AF2  0EEF               	movlw	239
  7742  002AF4  6E05               	movwf	?_TFT_GetWidth^0,c
  7743  002AF6  EF9B  F015         	goto	l216
  7744  002AFA                     l3217:
  7745                           
  7746                           ;TFT.c: 87: case 3:;TFT.c: 88: return 400 - 1;
  7747  002AFA  0E01               	movlw	1
  7748  002AFC  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7749  002AFE  0E8F               	movlw	143
  7750  002B00  6E05               	movwf	?_TFT_GetWidth^0,c
  7751  002B02  EF9B  F015         	goto	l216
  7752  002B06                     l3223:
  7753  002B06  ECC6  F017         	call	_TFT_OrientationGet	;wreg free
  7754                           
  7755                           ; Switch size 1, requested type "simple"
  7756                           ; Number of cases is 4, Range of values is 0 to 3
  7757                           ; switch strategies available:
  7758                           ; Name         Instructions Cycles
  7759                           ; simple_byte           13     7 (average)
  7760                           ;	Chosen strategy is simple_byte
  7761  002B0A  0A00               	xorlw	0	; case 0
  7762  002B0C  B4D8               	btfsc	status,2,c
  7763  002B0E  EF77  F015         	goto	l3213
  7764  002B12  0A01               	xorlw	1	; case 1
  7765  002B14  B4D8               	btfsc	status,2,c
  7766  002B16  EF7D  F015         	goto	l3217
  7767  002B1A  0A03               	xorlw	3	; case 2
  7768  002B1C  B4D8               	btfsc	status,2,c
  7769  002B1E  EF77  F015         	goto	l3213
  7770  002B22  0A01               	xorlw	1	; case 3
  7771  002B24  B4D8               	btfsc	status,2,c
  7772  002B26  EF7D  F015         	goto	l3217
  7773  002B2A  EF97  F015         	goto	l3225
  7774  002B2E                     l3225:
  7775                           
  7776                           ;TFT.c: 90: return 0;
  7777  002B2E  0E00               	movlw	0
  7778  002B30  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7779  002B32  0E00               	movlw	0
  7780  002B34  6E05               	movwf	?_TFT_GetWidth^0,c
  7781  002B36                     l216:
  7782  002B36  0012               	return		;funcret
  7783  002B38                     __end_of_TFT_GetWidth:
  7784                           	opt callstack 0
  7785                           
  7786 ;; *************** function _TFT_GetHeight *****************
  7787 ;; Defined at:
  7788 ;;		line 93 in file "TFT.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;		None
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  2    4[COMRAM] unsigned int 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7802 ;;      Params:         2       0       0       0       0       0       0       0       0
  7803 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7805 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7806 ;;Total ram usage:        2 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    3
  7809 ;; This function calls:
  7810 ;;		_TFT_OrientationGet
  7811 ;; This function is called by:
  7812 ;;		_TFT_FullScreen
  7813 ;;		_Ecg_Draw
  7814 ;;		_Ecg_Background_Leads_Ok
  7815 ;;		_TFT_ConsolePrintLine
  7816 ;; This function uses a non-reentrant model
  7817 ;;
  7818                           
  7819                           	psect	text34
  7820  002B38                     __ptext34:
  7821                           	opt callstack 0
  7822  002B38                     _TFT_GetHeight:
  7823                           	opt callstack 22
  7824  002B38                     
  7825                           ;TFT.c: 94: switch(TFT_OrientationGet()) {
  7826  002B38  EFAA  F015         	goto	l3241
  7827  002B3C                     l3231:
  7828                           
  7829                           ;TFT.c: 96: case 2:;TFT.c: 97: return 400 - 1;
  7830  002B3C  0E01               	movlw	1
  7831  002B3E  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  7832  002B40  0E8F               	movlw	143
  7833  002B42  6E05               	movwf	?_TFT_GetHeight^0,c
  7834  002B44  EFC2  F015         	goto	l225
  7835  002B48                     l3235:
  7836                           
  7837                           ;TFT.c: 99: case 3:;TFT.c: 100: return 240 - 1;
  7838  002B48  0E00               	movlw	0
  7839  002B4A  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  7840  002B4C  0EEF               	movlw	239
  7841  002B4E  6E05               	movwf	?_TFT_GetHeight^0,c
  7842  002B50  EFC2  F015         	goto	l225
  7843  002B54                     l3241:
  7844  002B54  ECC6  F017         	call	_TFT_OrientationGet	;wreg free
  7845                           
  7846                           ; Switch size 1, requested type "simple"
  7847                           ; Number of cases is 4, Range of values is 0 to 3
  7848                           ; switch strategies available:
  7849                           ; Name         Instructions Cycles
  7850                           ; simple_byte           13     7 (average)
  7851                           ;	Chosen strategy is simple_byte
  7852  002B58  0A00               	xorlw	0	; case 0
  7853  002B5A  B4D8               	btfsc	status,2,c
  7854  002B5C  EF9E  F015         	goto	l3231
  7855  002B60  0A01               	xorlw	1	; case 1
  7856  002B62  B4D8               	btfsc	status,2,c
  7857  002B64  EFA4  F015         	goto	l3235
  7858  002B68  0A03               	xorlw	3	; case 2
  7859  002B6A  B4D8               	btfsc	status,2,c
  7860  002B6C  EF9E  F015         	goto	l3231
  7861  002B70  0A01               	xorlw	1	; case 3
  7862  002B72  B4D8               	btfsc	status,2,c
  7863  002B74  EFA4  F015         	goto	l3235
  7864  002B78  EFBE  F015         	goto	l3243
  7865  002B7C                     l3243:
  7866                           
  7867                           ;TFT.c: 102: return 0;
  7868  002B7C  0E00               	movlw	0
  7869  002B7E  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  7870  002B80  0E00               	movlw	0
  7871  002B82  6E05               	movwf	?_TFT_GetHeight^0,c
  7872  002B84                     l225:
  7873  002B84  0012               	return		;funcret
  7874  002B86                     __end_of_TFT_GetHeight:
  7875                           	opt callstack 0
  7876                           
  7877 ;; *************** function _TFT_OrientationGet *****************
  7878 ;; Defined at:
  7879 ;;		line 105 in file "TFT.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;		None
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;		None
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      unsigned char 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7893 ;;      Params:         0       0       0       0       0       0       0       0       0
  7894 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7896 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7897 ;;Total ram usage:        0 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    2
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_TFT_GetWidth
  7904 ;;		_TFT_GetHeight
  7905 ;;		_TFT_SetAddrWindow
  7906 ;;		_TFT_DrawPixel
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text35
  7911  002F8C                     __ptext35:
  7912                           	opt callstack 0
  7913  002F8C                     _TFT_OrientationGet:
  7914                           	opt callstack 26
  7915  002F8C                     
  7916                           ;TFT.c: 106: return TFT_Orientation;
  7917  002F8C  5055               	movf	_TFT_Orientation^0,w,c
  7918  002F8E  0012               	return		;funcret
  7919  002F90                     __end_of_TFT_OrientationGet:
  7920                           	opt callstack 0
  7921                           
  7922 ;; *************** function _TFT_Flood *****************
  7923 ;; Defined at:
  7924 ;;		line 236 in file "TFT.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  color           2   12[COMRAM] unsigned int 
  7927 ;;  len             4   14[COMRAM] unsigned long 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  blocks          2   22[COMRAM] unsigned int 
  7930 ;;  color_lo        1   26[COMRAM] unsigned char 
  7931 ;;  color_hi        1   25[COMRAM] unsigned char 
  7932 ;;  i               1   24[COMRAM] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  1    wreg      void 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0, cstack
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7942 ;;      Params:         6       0       0       0       0       0       0       0       0
  7943 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7944 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7945 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7946 ;;Total ram usage:       15 bytes
  7947 ;; Hardware stack levels used:    1
  7948 ;; Hardware stack levels required when called:    3
  7949 ;; This function calls:
  7950 ;;		_TFT_WriteRegister
  7951 ;; This function is called by:
  7952 ;;		_TFT_FullScreen
  7953 ;;		_TFT_DrawFillRect
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text36
  7958  000C7E                     __ptext36:
  7959                           	opt callstack 0
  7960  000C7E                     _TFT_Flood:
  7961                           	opt callstack 22
  7962  000C7E                     
  7963                           ;TFT.c: 237: uint16_t blocks;;TFT.c: 238: uint8_t i;;TFT.c: 239: uint8_t color_hi = colo
      +                          r >> 8;
  7964  000C7E  500E               	movf	(TFT_Flood@color+1)^0,w,c
  7965  000C80  6E1A               	movwf	TFT_Flood@color_hi^0,c
  7966  000C82                     
  7967                           ;TFT.c: 240: uint8_t color_lo = color;
  7968  000C82  C00D  F01B         	movff	TFT_Flood@color,TFT_Flood@color_lo
  7969  000C86                     
  7970                           ;TFT.c: 243: TFT_WriteRegister(0x0202, color);
  7971  000C86  0E02               	movlw	2
  7972  000C88  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7973  000C8A  0E02               	movlw	2
  7974  000C8C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7975  000C8E  C00D  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  7976  000C92  C00E  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  7977  000C96  EC34  F016         	call	_TFT_WriteRegister	;wreg free
  7978  000C9A                     
  7979                           ;TFT.c: 244: len--;
  7980  000C9A  060F               	decf	TFT_Flood@len^0,f,c
  7981  000C9C  0E00               	movlw	0
  7982  000C9E  5A10               	subwfb	(TFT_Flood@len+1)^0,f,c
  7983  000CA0  5A11               	subwfb	(TFT_Flood@len+2)^0,f,c
  7984  000CA2  5A12               	subwfb	(TFT_Flood@len+3)^0,f,c
  7985  000CA4                     
  7986                           ;TFT.c: 248: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  7987  000CA4  9082               	bcf	130,0,c	;volatile
  7988  000CA6  F000               	nop		;# 
  7989  000CA8                     
  7990                           ;TFT.c: 249: blocks = (uint16_t)(len / 4);
  7991  000CA8  C00F  F013         	movff	TFT_Flood@len,??_TFT_Flood
  7992  000CAC  C010  F014         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  7993  000CB0  C011  F015         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  7994  000CB4  C012  F016         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  7995  000CB8  0E03               	movlw	3
  7996  000CBA  EF64  F006         	goto	u1950
  7997  000CBE                     u1955:
  7998  000CBE  90D8               	bcf	status,0,c
  7999  000CC0  3216               	rrcf	(??_TFT_Flood+3)^0,f,c
  8000  000CC2  3215               	rrcf	(??_TFT_Flood+2)^0,f,c
  8001  000CC4  3214               	rrcf	(??_TFT_Flood+1)^0,f,c
  8002  000CC6  3213               	rrcf	??_TFT_Flood^0,f,c
  8003  000CC8                     u1950:
  8004  000CC8  2EE8               	decfsz	wreg,f,c
  8005  000CCA  EF5F  F006         	goto	u1955
  8006  000CCE  C013  F017         	movff	??_TFT_Flood,TFT_Flood@blocks
  8007  000CD2  C014  F018         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  8008  000CD6                     
  8009                           ;TFT.c: 250: if(color_hi == color_lo) {
  8010  000CD6  501B               	movf	TFT_Flood@color_lo^0,w,c
  8011  000CD8  181A               	xorwf	TFT_Flood@color_hi^0,w,c
  8012  000CDA  A4D8               	btfss	status,2,c
  8013  000CDC  EF72  F006         	goto	u1961
  8014  000CE0  EF74  F006         	goto	u1960
  8015  000CE4                     u1961:
  8016  000CE4  EFD9  F006         	goto	l3295
  8017  000CE8                     u1960:
  8018  000CE8  EF8E  F006         	goto	l3289
  8019  000CEC                     l278:
  8020                           
  8021                           ;TFT.c: 252: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8022  000CEC  9A80               	bcf	128,5,c	;volatile
  8023  000CEE  F000               	nop		;# 
  8024  000CF0  8A80               	bsf	128,5,c	;volatile
  8025  000CF2  9A80               	bcf	128,5,c	;volatile
  8026  000CF4  F000               	nop		;# 
  8027  000CF6  8A80               	bsf	128,5,c	;volatile
  8028                           
  8029                           ;TFT.c: 253: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8030  000CF8  9A80               	bcf	128,5,c	;volatile
  8031  000CFA  F000               	nop		;# 
  8032  000CFC  8A80               	bsf	128,5,c	;volatile
  8033  000CFE  9A80               	bcf	128,5,c	;volatile
  8034  000D00  F000               	nop		;# 
  8035  000D02  8A80               	bsf	128,5,c	;volatile
  8036                           
  8037                           ;TFT.c: 254: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8038  000D04  9A80               	bcf	128,5,c	;volatile
  8039  000D06  F000               	nop		;# 
  8040  000D08  8A80               	bsf	128,5,c	;volatile
  8041  000D0A  9A80               	bcf	128,5,c	;volatile
  8042  000D0C  F000               	nop		;# 
  8043  000D0E  8A80               	bsf	128,5,c	;volatile
  8044                           
  8045                           ;TFT.c: 255: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8046  000D10  9A80               	bcf	128,5,c	;volatile
  8047  000D12  F000               	nop		;# 
  8048  000D14  8A80               	bsf	128,5,c	;volatile
  8049  000D16  9A80               	bcf	128,5,c	;volatile
  8050  000D18  F000               	nop		;# 
  8051  000D1A  8A80               	bsf	128,5,c	;volatile
  8052  000D1C                     l3289:
  8053  000D1C  0617               	decf	TFT_Flood@blocks^0,f,c
  8054  000D1E  A0D8               	btfss	status,0,c
  8055  000D20  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  8056  000D22  2817               	incf	TFT_Flood@blocks^0,w,c
  8057  000D24  E106               	bnz	u1971
  8058  000D26  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  8059  000D28  A4D8               	btfss	status,2,c
  8060  000D2A  EF99  F006         	goto	u1971
  8061  000D2E  EF9B  F006         	goto	u1970
  8062  000D32                     u1971:
  8063  000D32  EF76  F006         	goto	l278
  8064  000D36                     u1970:
  8065  000D36                     
  8066                           ;TFT.c: 256: };TFT.c: 257: for(i = (uint8_t)len & 3; i--; ) {
  8067  000D36  500F               	movf	TFT_Flood@len^0,w,c
  8068  000D38  0B03               	andlw	3
  8069  000D3A  6E19               	movwf	TFT_Flood@i^0,c
  8070  000D3C  EFA6  F006         	goto	l3293
  8071  000D40                     l281:
  8072                           
  8073                           ;TFT.c: 258: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8074  000D40  9A80               	bcf	128,5,c	;volatile
  8075  000D42  F000               	nop		;# 
  8076  000D44  8A80               	bsf	128,5,c	;volatile
  8077  000D46  9A80               	bcf	128,5,c	;volatile
  8078  000D48  F000               	nop		;# 
  8079  000D4A  8A80               	bsf	128,5,c	;volatile
  8080  000D4C                     l3293:
  8081  000D4C  0619               	decf	TFT_Flood@i^0,f,c
  8082  000D4E  2819               	incf	TFT_Flood@i^0,w,c
  8083  000D50  A4D8               	btfss	status,2,c
  8084  000D52  EFAD  F006         	goto	u1981
  8085  000D56  EFAF  F006         	goto	u1980
  8086  000D5A                     u1981:
  8087  000D5A  EFA0  F006         	goto	l281
  8088  000D5E                     u1980:
  8089  000D5E  EFFE  F006         	goto	l283
  8090  000D62                     l285:
  8091                           
  8092                           ;TFT.c: 262: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8093  000D62  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8094  000D66  9A80               	bcf	128,5,c	;volatile
  8095  000D68  F000               	nop		;# 
  8096  000D6A  8A80               	bsf	128,5,c	;volatile
  8097  000D6C  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8098  000D70  9A80               	bcf	128,5,c	;volatile
  8099  000D72  F000               	nop		;# 
  8100  000D74  8A80               	bsf	128,5,c	;volatile
  8101                           
  8102                           ;TFT.c: 263: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8103  000D76  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8104  000D7A  9A80               	bcf	128,5,c	;volatile
  8105  000D7C  F000               	nop		;# 
  8106  000D7E  8A80               	bsf	128,5,c	;volatile
  8107  000D80  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8108  000D84  9A80               	bcf	128,5,c	;volatile
  8109  000D86  F000               	nop		;# 
  8110  000D88  8A80               	bsf	128,5,c	;volatile
  8111                           
  8112                           ;TFT.c: 264: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8113  000D8A  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8114  000D8E  9A80               	bcf	128,5,c	;volatile
  8115  000D90  F000               	nop		;# 
  8116  000D92  8A80               	bsf	128,5,c	;volatile
  8117  000D94  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8118  000D98  9A80               	bcf	128,5,c	;volatile
  8119  000D9A  F000               	nop		;# 
  8120  000D9C  8A80               	bsf	128,5,c	;volatile
  8121                           
  8122                           ;TFT.c: 265: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8123  000D9E  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8124  000DA2  9A80               	bcf	128,5,c	;volatile
  8125  000DA4  F000               	nop		;# 
  8126  000DA6  8A80               	bsf	128,5,c	;volatile
  8127  000DA8  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8128  000DAC  9A80               	bcf	128,5,c	;volatile
  8129  000DAE  F000               	nop		;# 
  8130  000DB0  8A80               	bsf	128,5,c	;volatile
  8131  000DB2                     l3295:
  8132  000DB2  0617               	decf	TFT_Flood@blocks^0,f,c
  8133  000DB4  A0D8               	btfss	status,0,c
  8134  000DB6  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  8135  000DB8  2817               	incf	TFT_Flood@blocks^0,w,c
  8136  000DBA  E106               	bnz	u1991
  8137  000DBC  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  8138  000DBE  A4D8               	btfss	status,2,c
  8139  000DC0  EFE4  F006         	goto	u1991
  8140  000DC4  EFE6  F006         	goto	u1990
  8141  000DC8                     u1991:
  8142  000DC8  EFB1  F006         	goto	l285
  8143  000DCC                     u1990:
  8144  000DCC                     
  8145                           ;TFT.c: 266: };TFT.c: 267: for(i = (uint8_t)len & 3; i--; ) {
  8146  000DCC  500F               	movf	TFT_Flood@len^0,w,c
  8147  000DCE  0B03               	andlw	3
  8148  000DD0  6E19               	movwf	TFT_Flood@i^0,c
  8149  000DD2  EFF5  F006         	goto	l3299
  8150  000DD6                     l288:
  8151                           
  8152                           ;TFT.c: 268: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8153  000DD6  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8154  000DDA  9A80               	bcf	128,5,c	;volatile
  8155  000DDC  F000               	nop		;# 
  8156  000DDE  8A80               	bsf	128,5,c	;volatile
  8157  000DE0  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8158  000DE4  9A80               	bcf	128,5,c	;volatile
  8159  000DE6  F000               	nop		;# 
  8160  000DE8  8A80               	bsf	128,5,c	;volatile
  8161  000DEA                     l3299:
  8162  000DEA  0619               	decf	TFT_Flood@i^0,f,c
  8163  000DEC  2819               	incf	TFT_Flood@i^0,w,c
  8164  000DEE  A4D8               	btfss	status,2,c
  8165  000DF0  EFFC  F006         	goto	u2001
  8166  000DF4  EFFE  F006         	goto	u2000
  8167  000DF8                     u2001:
  8168  000DF8  EFEB  F006         	goto	l288
  8169  000DFC                     u2000:
  8170  000DFC                     l283:
  8171                           
  8172                           ;TFT.c: 269: };TFT.c: 270: };TFT.c: 271: PORTCbits.RC0 = 1;;
  8173  000DFC  8082               	bsf	130,0,c	;volatile
  8174  000DFE  0012               	return		;funcret
  8175  000E00                     __end_of_TFT_Flood:
  8176                           	opt callstack 0
  8177                           
  8178 ;; *************** function _TFT_WriteRegister *****************
  8179 ;; Defined at:
  8180 ;;		line 12 in file "TFT.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  reg             2    4[COMRAM] unsigned int 
  8183 ;;  data            2    6[COMRAM] unsigned int 
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;  l               1   11[COMRAM] unsigned char 
  8186 ;;  h               1   10[COMRAM] unsigned char 
  8187 ;;  l               1    9[COMRAM] unsigned char 
  8188 ;;  h               1    8[COMRAM] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, status,2
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8198 ;;      Params:         4       0       0       0       0       0       0       0       0
  8199 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8201 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8202 ;;Total ram usage:        8 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    2
  8205 ;; This function calls:
  8206 ;;		Nothing
  8207 ;; This function is called by:
  8208 ;;		_TFT_Init
  8209 ;;		_TFT_SetAddrWindow
  8210 ;;		_TFT_DrawPixel
  8211 ;;		_TFT_Flood
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text37
  8216  002C68                     __ptext37:
  8217                           	opt callstack 0
  8218  002C68                     _TFT_WriteRegister:
  8219                           	opt callstack 24
  8220  002C68                     
  8221                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  8222  002C68  9082               	bcf	130,0,c	;volatile
  8223  002C6A  F000               	nop		;# 
  8224                           
  8225                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  8226  002C6C  9282               	bcf	130,1,c	;volatile
  8227  002C6E  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
  8228  002C70  6E09               	movwf	TFT_WriteRegister@h^0,c
  8229  002C72  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
  8230  002C76  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
  8231  002C7A  9A80               	bcf	128,5,c	;volatile
  8232  002C7C  F000               	nop		;# 
  8233  002C7E  8A80               	bsf	128,5,c	;volatile
  8234  002C80  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
  8235  002C84  9A80               	bcf	128,5,c	;volatile
  8236  002C86  F000               	nop		;# 
  8237  002C88  8A80               	bsf	128,5,c	;volatile
  8238  002C8A                     
  8239                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  8240  002C8A  8282               	bsf	130,1,c	;volatile
  8241  002C8C  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
  8242  002C8E  6E0B               	movwf	TFT_WriteRegister@h_708^0,c
  8243  002C90  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_709
  8244  002C94  C00B  FF81         	movff	TFT_WriteRegister@h_708,3969	;volatile
  8245  002C98  9A80               	bcf	128,5,c	;volatile
  8246  002C9A  F000               	nop		;# 
  8247  002C9C  8A80               	bsf	128,5,c	;volatile
  8248  002C9E  C00C  FF81         	movff	TFT_WriteRegister@l_709,3969	;volatile
  8249  002CA2  9A80               	bcf	128,5,c	;volatile
  8250  002CA4  F000               	nop		;# 
  8251  002CA6  8A80               	bsf	128,5,c	;volatile
  8252  002CA8                     
  8253                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
  8254  002CA8  8082               	bsf	130,0,c	;volatile
  8255  002CAA  0012               	return		;funcret
  8256  002CAC                     __end_of_TFT_WriteRegister:
  8257                           	opt callstack 0
  8258                           
  8259 ;; *************** function _EUSART_Init *****************
  8260 ;; Defined at:
  8261 ;;		line 12 in file "EUSART.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8278 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8279 ;;Total ram usage:        0 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    3
  8282 ;; This function calls:
  8283 ;;		_memset
  8284 ;; This function is called by:
  8285 ;;		_main
  8286 ;; This function uses a non-reentrant model
  8287 ;;
  8288                           
  8289                           	psect	text38
  8290  002C20                     __ptext38:
  8291                           	opt callstack 0
  8292  002C20                     _EUSART_Init:
  8293                           	opt callstack 27
  8294  002C20                     
  8295                           ;EUSART.c: 14: TXSTAbits.TX9 = 0;
  8296  002C20  9CAC               	bcf	172,6,c	;volatile
  8297                           
  8298                           ;EUSART.c: 15: TXSTAbits.TXEN = 1;
  8299  002C22  8AAC               	bsf	172,5,c	;volatile
  8300                           
  8301                           ;EUSART.c: 16: TXSTAbits.SYNC = 0;
  8302  002C24  98AC               	bcf	172,4,c	;volatile
  8303                           
  8304                           ;EUSART.c: 17: TXSTAbits.SENDB = 0;
  8305  002C26  96AC               	bcf	172,3,c	;volatile
  8306                           
  8307                           ;EUSART.c: 18: TXSTAbits.BRGH = 1;
  8308  002C28  84AC               	bsf	172,2,c	;volatile
  8309                           
  8310                           ;EUSART.c: 21: RCSTAbits.SPEN = 1;
  8311  002C2A  8EAB               	bsf	171,7,c	;volatile
  8312                           
  8313                           ;EUSART.c: 22: RCSTAbits.RX9 = 0;
  8314  002C2C  9CAB               	bcf	171,6,c	;volatile
  8315                           
  8316                           ;EUSART.c: 23: RCSTAbits.CREN = 1;
  8317  002C2E  88AB               	bsf	171,4,c	;volatile
  8318                           
  8319                           ;EUSART.c: 26: BAUDCONbits.BRG16 = 1;
  8320  002C30  86B8               	bsf	184,3,c	;volatile
  8321                           
  8322                           ;EUSART.c: 27: BAUDCONbits.WUE = 0;
  8323  002C32  92B8               	bcf	184,1,c	;volatile
  8324                           
  8325                           ;EUSART.c: 28: BAUDCONbits.ABDEN = 0;
  8326  002C34  90B8               	bcf	184,0,c	;volatile
  8327  002C36                     
  8328                           ;EUSART.c: 29: SPBRGH = 0x04;
  8329  002C36  0E04               	movlw	4
  8330  002C38  6EB0               	movwf	176,c	;volatile
  8331                           
  8332                           ;EUSART.c: 30: SPBRG = 0xE1;
  8333  002C3A  0EE1               	movlw	225
  8334  002C3C  6EAF               	movwf	175,c	;volatile
  8335  002C3E                     
  8336                           ;EUSART.c: 33: RCIE = 1;
  8337  002C3E  8A9D               	bsf	3997,5,c	;volatile
  8338                           
  8339                           ;EUSART.c: 36: EUSART_RX.iRead = 0;
  8340  002C40  0E00               	movlw	0
  8341  002C42  0101               	movlb	1	; () banked
  8342  002C44  6F00               	movwf	_EUSART_RX& (0+255),b
  8343                           
  8344                           ;EUSART.c: 37: EUSART_RX.iWrite = 0;
  8345  002C46  0E00               	movlw	0
  8346  002C48  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
  8347  002C4A                     
  8348                           ; BSR set to: 1
  8349                           ;EUSART.c: 38: memset(EUSART_RX.buffer, 0x00, 128);
  8350  002C4A  0E02               	movlw	low (_EUSART_RX+2)
  8351  002C4C  6E05               	movwf	memset@p1^0,c
  8352  002C4E  0E01               	movlw	high (_EUSART_RX+2)
  8353  002C50  6E06               	movwf	(memset@p1+1)^0,c
  8354  002C52  0E00               	movlw	0
  8355  002C54  6E08               	movwf	(memset@c+1)^0,c
  8356  002C56  0E00               	movlw	0
  8357  002C58  6E07               	movwf	memset@c^0,c
  8358  002C5A  0E00               	movlw	0
  8359  002C5C  6E0A               	movwf	(memset@n+1)^0,c
  8360  002C5E  0E80               	movlw	128
  8361  002C60  6E09               	movwf	memset@n^0,c
  8362  002C62  ECEC  F016         	call	_memset	;wreg free
  8363  002C66  0012               	return		;funcret
  8364  002C68                     __end_of_EUSART_Init:
  8365                           	opt callstack 0
  8366                           
  8367 ;; *************** function _A6_Init *****************
  8368 ;; Defined at:
  8369 ;;		line 12 in file "A6Lib.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  baudRate        4   77[COMRAM] const unsigned long 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8383 ;;      Params:         4       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:        4 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; Hardware stack levels required when called:    8
  8390 ;; This function calls:
  8391 ;;		_A6_BaudRateAutoDetect
  8392 ;;		_A6_BaudRateSet
  8393 ;;		_A6_Command
  8394 ;; This function is called by:
  8395 ;;		_main
  8396 ;; This function uses a non-reentrant model
  8397 ;;
  8398                           
  8399                           	psect	text39
  8400  002D64                     __ptext39:
  8401                           	opt callstack 0
  8402  002D64                     _A6_Init:
  8403                           	opt callstack 22
  8404  002D64                     
  8405                           ;A6Lib.c: 13: A6_BaudRateAutoDetect();
  8406  002D64  ECE0  F012         	call	_A6_BaudRateAutoDetect	;wreg free
  8407                           
  8408                           ;A6Lib.c: 14: A6_BaudRateSet(baudRate);
  8409  002D68  C04E  F04A         	movff	A6_Init@baudRate,A6_BaudRateSet@baudRate
  8410  002D6C  C04F  F04B         	movff	A6_Init@baudRate+1,A6_BaudRateSet@baudRate+1
  8411  002D70  C050  F04C         	movff	A6_Init@baudRate+2,A6_BaudRateSet@baudRate+2
  8412  002D74  C051  F04D         	movff	A6_Init@baudRate+3,A6_BaudRateSet@baudRate+3
  8413  002D78  ECCD  F00A         	call	_A6_BaudRateSet	;wreg free
  8414  002D7C                     
  8415                           ;A6Lib.c: 15: A6_Command("AT+COPS=3,0\r", 0, (0), 0);
  8416  002D7C  0E87               	movlw	low STR_4
  8417  002D7E  6E18               	movwf	A6_Command@command^0,c
  8418  002D80  0E5F               	movlw	high STR_4
  8419  002D82  6E19               	movwf	(A6_Command@command+1)^0,c
  8420  002D84  0E00               	movlw	0
  8421  002D86  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  8422  002D88  0E00               	movlw	0
  8423  002D8A  6E1A               	movwf	A6_Command@timeout^0,c
  8424  002D8C  0E00               	movlw	0
  8425  002D8E  6E1C               	movwf	A6_Command@response^0,c
  8426  002D90  0E00               	movlw	0
  8427  002D92  6E1D               	movwf	(A6_Command@response+1)^0,c
  8428  002D94  0E00               	movlw	0
  8429  002D96  6E1E               	movwf	A6_Command@responseLen^0,c
  8430  002D98  ECEF  F010         	call	_A6_Command	;wreg free
  8431  002D9C  0012               	return		;funcret
  8432  002D9E                     __end_of_A6_Init:
  8433                           	opt callstack 0
  8434                           
  8435 ;; *************** function _A6_BaudRateSet *****************
  8436 ;; Defined at:
  8437 ;;		line 85 in file "A6Lib.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  baudRate        4   73[COMRAM] const unsigned long 
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;  response       32    0[BANK0 ] unsigned char [32]
  8442 ;;  request        20   32[BANK0 ] unsigned char [20]
  8443 ;;  currentBaudR    4   52[BANK0 ] unsigned long 
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  4   73[COMRAM] unsigned long 
  8446 ;; Registers used:
  8447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 0/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8453 ;;      Params:         4       0       0       0       0       0       0       0       0
  8454 ;;      Locals:         0      56       0       0       0       0       0       0       0
  8455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8456 ;;      Totals:         4      56       0       0       0       0       0       0       0
  8457 ;;Total ram usage:       60 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:    7
  8460 ;; This function calls:
  8461 ;;		_A6_BaudRateGet
  8462 ;;		_A6_Command
  8463 ;;		_A6_IsAlive
  8464 ;;		_EUSART_BaudRateSet
  8465 ;;		_sleepMS
  8466 ;;		_sprintf
  8467 ;;		_strcmp
  8468 ;; This function is called by:
  8469 ;;		_A6_Init
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           	psect	text40
  8474  00159A                     __ptext40:
  8475                           	opt callstack 0
  8476  00159A                     _A6_BaudRateSet:
  8477                           	opt callstack 22
  8478  00159A                     
  8479                           ;A6Lib.c: 86: char request[20];;A6Lib.c: 87: char response[32];;A6Lib.c: 88: uint32_t cu
      +                          rrentBaudRate = A6_BaudRateGet();
  8480  00159A  ECAF  F009         	call	_A6_BaudRateGet	;wreg free
  8481  00159E  C01F  F094         	movff	?_A6_BaudRateGet,A6_BaudRateSet@currentBaudRate
  8482  0015A2  C020  F095         	movff	?_A6_BaudRateGet+1,A6_BaudRateSet@currentBaudRate+1
  8483  0015A6  C021  F096         	movff	?_A6_BaudRateGet+2,A6_BaudRateSet@currentBaudRate+2
  8484  0015AA  C022  F097         	movff	?_A6_BaudRateGet+3,A6_BaudRateSet@currentBaudRate+3
  8485  0015AE                     
  8486                           ;A6Lib.c: 91: if(currentBaudRate == 0) return 0;
  8487  0015AE  0100               	movlb	0	; () banked
  8488  0015B0  5194               	movf	A6_BaudRateSet@currentBaudRate& (0+255),w,b
  8489  0015B2  1195               	iorwf	(A6_BaudRateSet@currentBaudRate+1)& (0+255),w,b
  8490  0015B4  1196               	iorwf	(A6_BaudRateSet@currentBaudRate+2)& (0+255),w,b
  8491  0015B6  1197               	iorwf	(A6_BaudRateSet@currentBaudRate+3)& (0+255),w,b
  8492  0015B8  A4D8               	btfss	status,2,c
  8493  0015BA  EFE1  F00A         	goto	u3641
  8494  0015BE  EFE3  F00A         	goto	u3640
  8495  0015C2                     u3641:
  8496  0015C2  EFE5  F00A         	goto	l4367
  8497  0015C6                     u3640:
  8498  0015C6  EF4E  F00B         	goto	l579
  8499  0015CA                     l4367:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;A6Lib.c: 94: sprintf(request, "AT+IPR=%lu\r", baudRate);
  8503  0015CA  0E80               	movlw	low A6_BaudRateSet@request
  8504  0015CC  6E1B               	movwf	sprintf@sp^0,c
  8505  0015CE  0E00               	movlw	high A6_BaudRateSet@request
  8506  0015D0  6E1C               	movwf	(sprintf@sp+1)^0,c
  8507  0015D2  0E94               	movlw	low STR_11
  8508  0015D4  6E1D               	movwf	sprintf@f^0,c
  8509  0015D6  0E5F               	movlw	high STR_11
  8510  0015D8  6E1E               	movwf	(sprintf@f+1)^0,c
  8511  0015DA  C04A  F01F         	movff	A6_BaudRateSet@baudRate,?_sprintf+4
  8512  0015DE  C04B  F020         	movff	A6_BaudRateSet@baudRate+1,?_sprintf+5
  8513  0015E2  C04C  F021         	movff	A6_BaudRateSet@baudRate+2,?_sprintf+6
  8514  0015E6  C04D  F022         	movff	A6_BaudRateSet@baudRate+3,?_sprintf+7
  8515  0015EA  EC09  F000         	call	_sprintf	;wreg free
  8516  0015EE                     
  8517                           ;A6Lib.c: 95: A6_Command(request, 0, response, 32);
  8518  0015EE  0E80               	movlw	low A6_BaudRateSet@request
  8519  0015F0  6E18               	movwf	A6_Command@command^0,c
  8520  0015F2  0E00               	movlw	high A6_BaudRateSet@request
  8521  0015F4  6E19               	movwf	(A6_Command@command+1)^0,c
  8522  0015F6  0E00               	movlw	0
  8523  0015F8  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  8524  0015FA  0E00               	movlw	0
  8525  0015FC  6E1A               	movwf	A6_Command@timeout^0,c
  8526  0015FE  0E60               	movlw	low A6_BaudRateSet@response
  8527  001600  6E1C               	movwf	A6_Command@response^0,c
  8528  001602  0E00               	movlw	high A6_BaudRateSet@response
  8529  001604  6E1D               	movwf	(A6_Command@response+1)^0,c
  8530  001606  0E20               	movlw	32
  8531  001608  6E1E               	movwf	A6_Command@responseLen^0,c
  8532  00160A  ECEF  F010         	call	_A6_Command	;wreg free
  8533  00160E                     
  8534                           ;A6Lib.c: 96: sleepMS(250);
  8535  00160E  0EFA               	movlw	250
  8536  001610  6E05               	movwf	sleepMS@ms^0,c
  8537  001612  0E00               	movlw	0
  8538  001614  6E06               	movwf	(sleepMS@ms+1)^0,c
  8539  001616  0E00               	movlw	0
  8540  001618  6E07               	movwf	(sleepMS@ms+2)^0,c
  8541  00161A  0E00               	movlw	0
  8542  00161C  6E08               	movwf	(sleepMS@ms+3)^0,c
  8543  00161E  ECCF  F016         	call	_sleepMS	;wreg free
  8544  001622                     
  8545                           ;A6Lib.c: 97: if(strcmp(response, "OK") == 0) {
  8546  001622  0E60               	movlw	low A6_BaudRateSet@response
  8547  001624  6E05               	movwf	strcmp@s1^0,c
  8548  001626  0E00               	movlw	high A6_BaudRateSet@response
  8549  001628  6E06               	movwf	(strcmp@s1+1)^0,c
  8550  00162A  0EF6               	movlw	low STR_6
  8551  00162C  6E07               	movwf	strcmp@s2^0,c
  8552  00162E  0E5F               	movlw	high STR_6
  8553  001630  6E08               	movwf	(strcmp@s2+1)^0,c
  8554  001632  EC4E  F014         	call	_strcmp	;wreg free
  8555  001636  5005               	movf	?_strcmp^0,w,c
  8556  001638  1006               	iorwf	(?_strcmp+1)^0,w,c
  8557  00163A  A4D8               	btfss	status,2,c
  8558  00163C  EF22  F00B         	goto	u3651
  8559  001640  EF24  F00B         	goto	u3650
  8560  001644                     u3651:
  8561  001644  EF44  F00B         	goto	l4381
  8562  001648                     u3650:
  8563  001648                     
  8564                           ;A6Lib.c: 99: EUSART_BaudRateSet(baudRate);
  8565  001648  C04A  F012         	movff	A6_BaudRateSet@baudRate,EUSART_BaudRateSet@baudRate
  8566  00164C  C04B  F013         	movff	A6_BaudRateSet@baudRate+1,EUSART_BaudRateSet@baudRate+1
  8567  001650  C04C  F014         	movff	A6_BaudRateSet@baudRate+2,EUSART_BaudRateSet@baudRate+2
  8568  001654  C04D  F015         	movff	A6_BaudRateSet@baudRate+3,EUSART_BaudRateSet@baudRate+3
  8569  001658  EC32  F011         	call	_EUSART_BaudRateSet	;wreg free
  8570                           
  8571                           ;A6Lib.c: 100: sleepMS(150);
  8572  00165C  0E96               	movlw	150
  8573  00165E  6E05               	movwf	sleepMS@ms^0,c
  8574  001660  0E00               	movlw	0
  8575  001662  6E06               	movwf	(sleepMS@ms+1)^0,c
  8576  001664  0E00               	movlw	0
  8577  001666  6E07               	movwf	(sleepMS@ms+2)^0,c
  8578  001668  0E00               	movlw	0
  8579  00166A  6E08               	movwf	(sleepMS@ms+3)^0,c
  8580  00166C  ECCF  F016         	call	_sleepMS	;wreg free
  8581  001670                     
  8582                           ;A6Lib.c: 101: if(A6_IsAlive() == 1) {
  8583  001670  EC26  F015         	call	_A6_IsAlive	;wreg free
  8584  001674  06E8               	decf	wreg,f,c
  8585  001676  A4D8               	btfss	status,2,c
  8586  001678  EF40  F00B         	goto	u3661
  8587  00167C  EF42  F00B         	goto	u3660
  8588  001680                     u3661:
  8589  001680  EF44  F00B         	goto	l4381
  8590  001684                     u3660:
  8591  001684  EF4E  F00B         	goto	l579
  8592  001688                     l4381:
  8593                           
  8594                           ;A6Lib.c: 103: };A6Lib.c: 104: };A6Lib.c: 107: EUSART_BaudRateSet(currentBaudRate);
  8595  001688  C094  F012         	movff	A6_BaudRateSet@currentBaudRate,EUSART_BaudRateSet@baudRate
  8596  00168C  C095  F013         	movff	A6_BaudRateSet@currentBaudRate+1,EUSART_BaudRateSet@baudRate+1
  8597  001690  C096  F014         	movff	A6_BaudRateSet@currentBaudRate+2,EUSART_BaudRateSet@baudRate+2
  8598  001694  C097  F015         	movff	A6_BaudRateSet@currentBaudRate+3,EUSART_BaudRateSet@baudRate+3
  8599  001698  EC32  F011         	call	_EUSART_BaudRateSet	;wreg free
  8600  00169C                     l579:
  8601  00169C  0012               	return		;funcret
  8602  00169E                     __end_of_A6_BaudRateSet:
  8603                           	opt callstack 0
  8604                           
  8605 ;; *************** function _sprintf *****************
  8606 ;; Defined at:
  8607 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  sp              2   26[COMRAM] PTR unsigned char 
  8610 ;;		 -> A6_BaudRateSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), 
  8611 ;;  f               2   28[COMRAM] PTR const unsigned char 
  8612 ;;		 -> STR_11(12), STR_1(4), 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;  val             4   40[COMRAM] unsigned long 
  8615 ;;  tmpval          4    0        struct .
  8616 ;;  cp              3    0        PTR const unsigned char 
  8617 ;;  width           2   47[COMRAM] int 
  8618 ;;  ap              2   44[COMRAM] PTR void [1]
  8619 ;;		 -> ?_sprintf(2), 
  8620 ;;  prec            2   38[COMRAM] int 
  8621 ;;  len             2    0        unsigned int 
  8622 ;;  c               1   49[COMRAM] unsigned char 
  8623 ;;  flag            1   46[COMRAM] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  2   26[COMRAM] int 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8633 ;;      Params:         8       0       0       0       0       0       0       0       0
  8634 ;;      Locals:        12       0       0       0       0       0       0       0       0
  8635 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8636 ;;      Totals:        24       0       0       0       0       0       0       0       0
  8637 ;;Total ram usage:       24 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    3
  8640 ;; This function calls:
  8641 ;;		___lldiv
  8642 ;;		___llmod
  8643 ;;		___wmul
  8644 ;;		_isdigit
  8645 ;; This function is called by:
  8646 ;;		_Ecg_ProcessHeartRate
  8647 ;;		_A6_BaudRateSet
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text41
  8652  000012                     __ptext41:
  8653                           	opt callstack 0
  8654  000012                     _sprintf:
  8655                           	opt callstack 24
  8656  000012                     
  8657                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  8658  000012  0E1F               	movlw	low (?_sprintf+4)
  8659  000014  6E2D               	movwf	sprintf@ap^0,c
  8660  000016  0E00               	movlw	high (?_sprintf+4)
  8661  000018  6E2E               	movwf	(sprintf@ap+1)^0,c
  8662                           
  8663                           ;doprnt.c: 553: while((c = *f++)) {
  8664  00001A  EFE6  F001         	goto	l3973
  8665  00001E                     l3871:
  8666                           
  8667                           ;doprnt.c: 555: if(c != '%')
  8668  00001E  0E25               	movlw	37
  8669  000020  1832               	xorwf	sprintf@c^0,w,c
  8670  000022  B4D8               	btfsc	status,2,c
  8671  000024  EF16  F000         	goto	u2901
  8672  000028  EF18  F000         	goto	u2900
  8673  00002C                     u2901:
  8674  00002C  EF22  F000         	goto	l3877
  8675  000030                     u2900:
  8676  000030                     
  8677                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  8678  000030  C01B  FFD9         	movff	sprintf@sp,fsr2l
  8679  000034  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  8680  000038  C032  FFDF         	movff	sprintf@c,indf2
  8681  00003C  4A1B               	infsnz	sprintf@sp^0,f,c
  8682  00003E  2A1C               	incf	(sprintf@sp+1)^0,f,c
  8683                           
  8684                           ;doprnt.c: 559: continue;
  8685  000040  EFE6  F001         	goto	l3973
  8686  000044                     l3877:
  8687                           
  8688                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  8689  000044  0E00               	movlw	0
  8690  000046  6E31               	movwf	(sprintf@width+1)^0,c
  8691  000048  0E00               	movlw	0
  8692  00004A  6E30               	movwf	sprintf@width^0,c
  8693                           
  8694                           ;doprnt.c: 565: flag = 0;
  8695  00004C  0E00               	movlw	0
  8696  00004E  6E2F               	movwf	sprintf@flag^0,c
  8697  000050                     
  8698                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  8699  000050  C01D  FFF6         	movff	sprintf@f,tblptrl
  8700  000054  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8701  000058                     	if	0	;tblptru may be non-zero
  8702  000058                     	endif
  8703  000058                     	if	0	;tblptru may be non-zero
  8704  000058                     	endif
  8705  000058  0008               	tblrd		*
  8706  00005A  50F5               	movf	tablat,w,c
  8707  00005C  EC3D  F017         	call	_isdigit
  8708  000060  A0D8               	btfss	status,0,c
  8709  000062  EF35  F000         	goto	u2911
  8710  000066  EF37  F000         	goto	u2910
  8711  00006A                     u2911:
  8712  00006A  EF76  F000         	goto	l3897
  8713  00006E                     u2910:
  8714  00006E                     
  8715                           ;doprnt.c: 615: width = 0;
  8716  00006E  0E00               	movlw	0
  8717  000070  6E31               	movwf	(sprintf@width+1)^0,c
  8718  000072  0E00               	movlw	0
  8719  000074  6E30               	movwf	sprintf@width^0,c
  8720  000076                     l3883:
  8721                           
  8722                           ;doprnt.c: 617: width *= 10;
  8723  000076  C030  F005         	movff	sprintf@width,___wmul@multiplier
  8724  00007A  C031  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  8725  00007E  0E00               	movlw	0
  8726  000080  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  8727  000082  0E0A               	movlw	10
  8728  000084  6E07               	movwf	___wmul@multiplicand^0,c
  8729  000086  EC82  F017         	call	___wmul	;wreg free
  8730  00008A  C005  F030         	movff	?___wmul,sprintf@width
  8731  00008E  C006  F031         	movff	?___wmul+1,sprintf@width+1
  8732  000092                     
  8733                           ;doprnt.c: 618: width += *f++ - '0';
  8734  000092  0ED0               	movlw	208
  8735  000094  6E23               	movwf	??_sprintf^0,c
  8736  000096  0EFF               	movlw	255
  8737  000098  6E24               	movwf	(??_sprintf+1)^0,c
  8738  00009A  C01D  FFF6         	movff	sprintf@f,tblptrl
  8739  00009E  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8740  0000A2                     	if	0	;tblptru may be non-zero
  8741  0000A2                     	endif
  8742  0000A2                     	if	0	;tblptru may be non-zero
  8743  0000A2                     	endif
  8744  0000A2  0008               	tblrd		*
  8745  0000A4  50F5               	movf	tablat,w,c
  8746  0000A6  6E25               	movwf	(??_sprintf+2)^0,c
  8747  0000A8  6A26               	clrf	(??_sprintf+3)^0,c
  8748  0000AA  5023               	movf	??_sprintf^0,w,c
  8749  0000AC  2625               	addwf	(??_sprintf+2)^0,f,c
  8750  0000AE  5024               	movf	(??_sprintf+1)^0,w,c
  8751  0000B0  2226               	addwfc	(??_sprintf+3)^0,f,c
  8752  0000B2  5025               	movf	(??_sprintf+2)^0,w,c
  8753  0000B4  2630               	addwf	sprintf@width^0,f,c
  8754  0000B6  5026               	movf	(??_sprintf+3)^0,w,c
  8755  0000B8  2231               	addwfc	(sprintf@width+1)^0,f,c
  8756  0000BA  4A1D               	infsnz	sprintf@f^0,f,c
  8757  0000BC  2A1E               	incf	(sprintf@f+1)^0,f,c
  8758  0000BE                     
  8759                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  8760  0000BE  C01D  FFF6         	movff	sprintf@f,tblptrl
  8761  0000C2  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8762  0000C6                     	if	0	;tblptru may be non-zero
  8763  0000C6                     	endif
  8764  0000C6                     	if	0	;tblptru may be non-zero
  8765  0000C6                     	endif
  8766  0000C6  0008               	tblrd		*
  8767  0000C8  50F5               	movf	tablat,w,c
  8768  0000CA  EC3D  F017         	call	_isdigit
  8769  0000CE  B0D8               	btfsc	status,0,c
  8770  0000D0  EF6C  F000         	goto	u2921
  8771  0000D4  EF6E  F000         	goto	u2920
  8772  0000D8                     u2921:
  8773  0000D8  EF3B  F000         	goto	l3883
  8774  0000DC                     u2920:
  8775  0000DC  EF76  F000         	goto	l3897
  8776  0000E0                     l3891:
  8777                           
  8778                           ;doprnt.c: 669: flag |= 0x10;
  8779  0000E0  882F               	bsf	sprintf@flag^0,4,c
  8780                           
  8781                           ;doprnt.c: 670: goto loop;
  8782  0000E2  EF76  F000         	goto	l3897
  8783  0000E6                     l3893:
  8784                           
  8785                           ;doprnt.c: 844: flag |= 0x40;
  8786  0000E6  8C2F               	bsf	sprintf@flag^0,6,c
  8787                           
  8788                           ;doprnt.c: 845: break;
  8789  0000E8  EF96  F000         	goto	l721
  8790  0000EC                     l3897:
  8791  0000EC  C01D  FFF6         	movff	sprintf@f,tblptrl
  8792  0000F0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8793  0000F4  4A1D               	infsnz	sprintf@f^0,f,c
  8794  0000F6  2A1E               	incf	(sprintf@f+1)^0,f,c
  8795  0000F8                     	if	0	;tblptru may be non-zero
  8796  0000F8                     	endif
  8797  0000F8                     	if	0	;tblptru may be non-zero
  8798  0000F8                     	endif
  8799  0000F8  0008               	tblrd		*
  8800  0000FA  CFF5 F032          	movff	tablat,sprintf@c
  8801  0000FE  5032               	movf	sprintf@c^0,w,c
  8802                           
  8803                           ; Switch size 1, requested type "simple"
  8804                           ; Number of cases is 5, Range of values is 0 to 117
  8805                           ; switch strategies available:
  8806                           ; Name         Instructions Cycles
  8807                           ; simple_byte           16     9 (average)
  8808                           ;	Chosen strategy is simple_byte
  8809  000100  0A00               	xorlw	0	; case 0
  8810  000102  B4D8               	btfsc	status,2,c
  8811  000104  EFF7  F001         	goto	l3975
  8812  000108  0A64               	xorlw	100	; case 100
  8813  00010A  B4D8               	btfsc	status,2,c
  8814  00010C  EF96  F000         	goto	l721
  8815  000110  0A0D               	xorlw	13	; case 105
  8816  000112  B4D8               	btfsc	status,2,c
  8817  000114  EF96  F000         	goto	l721
  8818  000118  0A05               	xorlw	5	; case 108
  8819  00011A  B4D8               	btfsc	status,2,c
  8820  00011C  EF70  F000         	goto	l3891
  8821  000120  0A19               	xorlw	25	; case 117
  8822  000122  B4D8               	btfsc	status,2,c
  8823  000124  EF73  F000         	goto	l3893
  8824  000128  EFE6  F001         	goto	l3973
  8825  00012C                     l721:
  8826                           
  8827                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  8828  00012C  BC2F               	btfsc	sprintf@flag^0,6,c
  8829  00012E  EF9B  F000         	goto	u2931
  8830  000132  EF9D  F000         	goto	u2930
  8831  000136                     u2931:
  8832  000136  EFDA  F000         	goto	l724
  8833  00013A                     u2930:
  8834  00013A                     
  8835                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  8836  00013A  A82F               	btfss	sprintf@flag^0,4,c
  8837  00013C  EFA2  F000         	goto	u2941
  8838  000140  EFA4  F000         	goto	u2940
  8839  000144                     u2941:
  8840  000144  EFB6  F000         	goto	l3905
  8841  000148                     u2940:
  8842  000148                     
  8843                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  8844  000148  C02D  FFD9         	movff	sprintf@ap,fsr2l
  8845  00014C  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  8846  000150  CFDE F029          	movff	postinc2,sprintf@val
  8847  000154  CFDE F02A          	movff	postinc2,sprintf@val+1
  8848  000158  CFDE F02B          	movff	postinc2,sprintf@val+2
  8849  00015C  CFDE F02C          	movff	postinc2,sprintf@val+3
  8850  000160  0E04               	movlw	4
  8851  000162  262D               	addwf	sprintf@ap^0,f,c
  8852  000164  0E00               	movlw	0
  8853  000166  222E               	addwfc	(sprintf@ap+1)^0,f,c
  8854  000168  EFC7  F000         	goto	l3909
  8855  00016C                     l3905:
  8856                           
  8857                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  8858  00016C  C02D  FFD9         	movff	sprintf@ap,fsr2l
  8859  000170  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  8860  000174  CFDE F029          	movff	postinc2,sprintf@val
  8861  000178  CFDD F02A          	movff	postdec2,sprintf@val+1
  8862  00017C  0E00               	movlw	0
  8863  00017E  BE2A               	btfsc	(sprintf@val+1)^0,7,c
  8864  000180  0EFF               	movlw	-1
  8865  000182  6E2B               	movwf	(sprintf@val+2)^0,c
  8866  000184  6E2C               	movwf	(sprintf@val+3)^0,c
  8867  000186  0E02               	movlw	2
  8868  000188  262D               	addwf	sprintf@ap^0,f,c
  8869  00018A  0E00               	movlw	0
  8870  00018C  222E               	addwfc	(sprintf@ap+1)^0,f,c
  8871  00018E                     l3909:
  8872                           
  8873                           ;doprnt.c: 1287: if((long)val < 0) {
  8874  00018E  BE2C               	btfsc	(sprintf@val+3)^0,7,c
  8875  000190  EFCE  F000         	goto	u2950
  8876  000194  EFCC  F000         	goto	u2951
  8877  000198                     u2951:
  8878  000198  EF05  F001         	goto	l3923
  8879  00019C                     u2950:
  8880  00019C                     
  8881                           ;doprnt.c: 1288: flag |= 0x03;
  8882  00019C  0E03               	movlw	3
  8883  00019E  122F               	iorwf	sprintf@flag^0,f,c
  8884  0001A0                     
  8885                           ;doprnt.c: 1289: val = -val;
  8886  0001A0  1E2C               	comf	(sprintf@val+3)^0,f,c
  8887  0001A2  1E2B               	comf	(sprintf@val+2)^0,f,c
  8888  0001A4  1E2A               	comf	(sprintf@val+1)^0,f,c
  8889  0001A6  6C29               	negf	sprintf@val^0,c
  8890  0001A8  0E00               	movlw	0
  8891  0001AA  222A               	addwfc	(sprintf@val+1)^0,f,c
  8892  0001AC  222B               	addwfc	(sprintf@val+2)^0,f,c
  8893  0001AE  222C               	addwfc	(sprintf@val+3)^0,f,c
  8894  0001B0  EF05  F001         	goto	l3923
  8895  0001B4                     l724:
  8896                           
  8897                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  8898  0001B4  A82F               	btfss	sprintf@flag^0,4,c
  8899  0001B6  EFDF  F000         	goto	u2961
  8900  0001BA  EFE1  F000         	goto	u2960
  8901  0001BE                     u2961:
  8902  0001BE  EFF3  F000         	goto	l3919
  8903  0001C2                     u2960:
  8904  0001C2                     
  8905                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  8906  0001C2  C02D  FFD9         	movff	sprintf@ap,fsr2l
  8907  0001C6  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  8908  0001CA  CFDE F029          	movff	postinc2,sprintf@val
  8909  0001CE  CFDE F02A          	movff	postinc2,sprintf@val+1
  8910  0001D2  CFDE F02B          	movff	postinc2,sprintf@val+2
  8911  0001D6  CFDE F02C          	movff	postinc2,sprintf@val+3
  8912  0001DA  0E04               	movlw	4
  8913  0001DC  262D               	addwf	sprintf@ap^0,f,c
  8914  0001DE  0E00               	movlw	0
  8915  0001E0  222E               	addwfc	(sprintf@ap+1)^0,f,c
  8916  0001E2  EF05  F001         	goto	l3923
  8917  0001E6                     l3919:
  8918                           
  8919                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  8920  0001E6  C02D  FFD9         	movff	sprintf@ap,fsr2l
  8921  0001EA  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  8922  0001EE  CFDE F023          	movff	postinc2,??_sprintf
  8923  0001F2  CFDD F024          	movff	postdec2,??_sprintf+1
  8924  0001F6  C023  F029         	movff	??_sprintf,sprintf@val
  8925  0001FA  C024  F02A         	movff	??_sprintf+1,sprintf@val+1
  8926  0001FE  6A2B               	clrf	(sprintf@val+2)^0,c
  8927  000200  6A2C               	clrf	(sprintf@val+3)^0,c
  8928  000202  0E02               	movlw	2
  8929  000204  262D               	addwf	sprintf@ap^0,f,c
  8930  000206  0E00               	movlw	0
  8931  000208  222E               	addwfc	(sprintf@ap+1)^0,f,c
  8932  00020A                     l3923:
  8933                           
  8934                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  8935  00020A  0E01               	movlw	1
  8936  00020C  6E32               	movwf	sprintf@c^0,c
  8937  00020E                     l3929:
  8938                           
  8939                           ;doprnt.c: 1332: if(val < dpowers[c])
  8940  00020E  5032               	movf	sprintf@c^0,w,c
  8941  000210  0D04               	mullw	4
  8942  000212  0EF9               	movlw	low _dpowers
  8943  000214  24F3               	addwf	243,w,c
  8944  000216  6EF6               	movwf	tblptrl,c
  8945  000218  0E5E               	movlw	high _dpowers
  8946  00021A  20F4               	addwfc	244,w,c
  8947  00021C  6EF7               	movwf	tblptrh,c
  8948  00021E                     	if	0	;There are less than 3 active tblptr bytes
  8949  00021E                     	endif
  8950  00021E  0009               	tblrd		*+
  8951  000220  50F5               	movf	tablat,w,c
  8952  000222  5C29               	subwf	sprintf@val^0,w,c
  8953  000224  0009               	tblrd		*+
  8954  000226  50F5               	movf	tablat,w,c
  8955  000228  582A               	subwfb	(sprintf@val+1)^0,w,c
  8956  00022A  0009               	tblrd		*+
  8957  00022C  50F5               	movf	tablat,w,c
  8958  00022E  582B               	subwfb	(sprintf@val+2)^0,w,c
  8959  000230  0009               	tblrd		*+
  8960  000232  50F5               	movf	tablat,w,c
  8961  000234  582C               	subwfb	(sprintf@val+3)^0,w,c
  8962  000236  B0D8               	btfsc	status,0,c
  8963  000238  EF20  F001         	goto	u2971
  8964  00023C  EF22  F001         	goto	u2970
  8965  000240                     u2971:
  8966  000240  EF24  F001         	goto	l3933
  8967  000244                     u2970:
  8968  000244  EF2E  F001         	goto	l3937
  8969  000248                     l3933:
  8970  000248  2A32               	incf	sprintf@c^0,f,c
  8971  00024A  0E0A               	movlw	10
  8972  00024C  1832               	xorwf	sprintf@c^0,w,c
  8973  00024E  A4D8               	btfss	status,2,c
  8974  000250  EF2C  F001         	goto	u2981
  8975  000254  EF2E  F001         	goto	u2980
  8976  000258                     u2981:
  8977  000258  EF07  F001         	goto	l3929
  8978  00025C                     u2980:
  8979  00025C                     l3937:
  8980                           
  8981                           ;doprnt.c: 1371: if(width && flag & 0x03)
  8982  00025C  5030               	movf	sprintf@width^0,w,c
  8983  00025E  1031               	iorwf	(sprintf@width+1)^0,w,c
  8984  000260  B4D8               	btfsc	status,2,c
  8985  000262  EF35  F001         	goto	u2991
  8986  000266  EF37  F001         	goto	u2990
  8987  00026A                     u2991:
  8988  00026A  EF45  F001         	goto	l3943
  8989  00026E                     u2990:
  8990  00026E  C02F  F023         	movff	sprintf@flag,??_sprintf
  8991  000272  0E03               	movlw	3
  8992  000274  1623               	andwf	??_sprintf^0,f,c
  8993  000276  B4D8               	btfsc	status,2,c
  8994  000278  EF40  F001         	goto	u3001
  8995  00027C  EF42  F001         	goto	u3000
  8996  000280                     u3001:
  8997  000280  EF45  F001         	goto	l3943
  8998  000284                     u3000:
  8999  000284                     
  9000                           ;doprnt.c: 1372: width--;
  9001  000284  0630               	decf	sprintf@width^0,f,c
  9002  000286  A0D8               	btfss	status,0,c
  9003  000288  0631               	decf	(sprintf@width+1)^0,f,c
  9004  00028A                     l3943:
  9005                           
  9006                           ;doprnt.c: 1407: if(width > c)
  9007  00028A  5032               	movf	sprintf@c^0,w,c
  9008  00028C  6E23               	movwf	??_sprintf^0,c
  9009  00028E  6A24               	clrf	(??_sprintf+1)^0,c
  9010  000290  5030               	movf	sprintf@width^0,w,c
  9011  000292  5C23               	subwf	??_sprintf^0,w,c
  9012  000294  5024               	movf	(??_sprintf+1)^0,w,c
  9013  000296  0A80               	xorlw	128
  9014  000298  6E25               	movwf	(??_sprintf+2)^0,c
  9015  00029A  5031               	movf	(sprintf@width+1)^0,w,c
  9016  00029C  0A80               	xorlw	128
  9017  00029E  5825               	subwfb	(??_sprintf+2)^0,w,c
  9018  0002A0  B0D8               	btfsc	status,0,c
  9019  0002A2  EF55  F001         	goto	u3011
  9020  0002A6  EF57  F001         	goto	u3010
  9021  0002AA                     u3011:
  9022  0002AA  EF5D  F001         	goto	l3947
  9023  0002AE                     u3010:
  9024  0002AE                     
  9025                           ;doprnt.c: 1408: width -= c;
  9026  0002AE  5032               	movf	sprintf@c^0,w,c
  9027  0002B0  5E30               	subwf	sprintf@width^0,f,c
  9028  0002B2  0E00               	movlw	0
  9029  0002B4  5A31               	subwfb	(sprintf@width+1)^0,f,c
  9030  0002B6  EF61  F001         	goto	l3949
  9031  0002BA                     l3947:
  9032                           
  9033                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  9034  0002BA  0E00               	movlw	0
  9035  0002BC  6E31               	movwf	(sprintf@width+1)^0,c
  9036  0002BE  0E00               	movlw	0
  9037  0002C0  6E30               	movwf	sprintf@width^0,c
  9038  0002C2                     l3949:
  9039                           
  9040                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  9041  0002C2  5030               	movf	sprintf@width^0,w,c
  9042  0002C4  1031               	iorwf	(sprintf@width+1)^0,w,c
  9043  0002C6  B4D8               	btfsc	status,2,c
  9044  0002C8  EF68  F001         	goto	u3021
  9045  0002CC  EF6A  F001         	goto	u3020
  9046  0002D0                     u3021:
  9047  0002D0  EF7E  F001         	goto	l3957
  9048  0002D4                     u3020:
  9049  0002D4                     l3951:
  9050                           
  9051                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  9052  0002D4  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9053  0002D8  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9054  0002DC  0E20               	movlw	32
  9055  0002DE  6EDF               	movwf	indf2,c
  9056  0002E0  4A1B               	infsnz	sprintf@sp^0,f,c
  9057  0002E2  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9058  0002E4                     
  9059                           ;doprnt.c: 1457: while(--width);
  9060  0002E4  0630               	decf	sprintf@width^0,f,c
  9061  0002E6  A0D8               	btfss	status,0,c
  9062  0002E8  0631               	decf	(sprintf@width+1)^0,f,c
  9063  0002EA  5030               	movf	sprintf@width^0,w,c
  9064  0002EC  1031               	iorwf	(sprintf@width+1)^0,w,c
  9065  0002EE  A4D8               	btfss	status,2,c
  9066  0002F0  EF7C  F001         	goto	u3031
  9067  0002F4  EF7E  F001         	goto	u3030
  9068  0002F8                     u3031:
  9069  0002F8  EF6A  F001         	goto	l3951
  9070  0002FC                     u3030:
  9071  0002FC                     l3957:
  9072                           
  9073                           ;doprnt.c: 1464: if(flag & 0x03)
  9074  0002FC  C02F  F023         	movff	sprintf@flag,??_sprintf
  9075  000300  0E03               	movlw	3
  9076  000302  1623               	andwf	??_sprintf^0,f,c
  9077  000304  B4D8               	btfsc	status,2,c
  9078  000306  EF87  F001         	goto	u3041
  9079  00030A  EF89  F001         	goto	u3040
  9080  00030E                     u3041:
  9081  00030E  EF91  F001         	goto	l3963
  9082  000312                     u3040:
  9083  000312                     
  9084                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  9085  000312  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9086  000316  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9087  00031A  0E2D               	movlw	45
  9088  00031C  6EDF               	movwf	indf2,c
  9089  00031E  4A1B               	infsnz	sprintf@sp^0,f,c
  9090  000320  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9091  000322                     l3963:
  9092                           
  9093                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  9094  000322  C032  F027         	movff	sprintf@c,sprintf@prec
  9095  000326  6A28               	clrf	(sprintf@prec+1)^0,c
  9096                           
  9097                           ;doprnt.c: 1500: while(prec--) {
  9098  000328  EFD9  F001         	goto	l3971
  9099  00032C                     l3965:
  9100                           
  9101                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  9102  00032C  C027  F023         	movff	sprintf@prec,??_sprintf
  9103  000330  C028  F024         	movff	sprintf@prec+1,??_sprintf+1
  9104  000334  90D8               	bcf	status,0,c
  9105  000336  3623               	rlcf	??_sprintf^0,f,c
  9106  000338  3624               	rlcf	(??_sprintf+1)^0,f,c
  9107  00033A  90D8               	bcf	status,0,c
  9108  00033C  3623               	rlcf	??_sprintf^0,f,c
  9109  00033E  3624               	rlcf	(??_sprintf+1)^0,f,c
  9110  000340  0EF9               	movlw	low _dpowers
  9111  000342  2423               	addwf	??_sprintf^0,w,c
  9112  000344  6EF6               	movwf	tblptrl,c
  9113  000346  0E5E               	movlw	high _dpowers
  9114  000348  2024               	addwfc	(??_sprintf+1)^0,w,c
  9115  00034A  6EF7               	movwf	tblptrh,c
  9116  00034C                     	if	0	;There are less than 3 active tblptr bytes
  9117  00034C                     	endif
  9118  00034C  0009               	tblrd		*+
  9119  00034E  CFF5 F009          	movff	tablat,___lldiv@divisor
  9120  000352  0009               	tblrd		*+
  9121  000354  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  9122  000358  0009               	tblrd		*+
  9123  00035A  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  9124  00035E  000A               	tblrd		*-
  9125  000360  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  9126  000364  C029  F005         	movff	sprintf@val,___lldiv@dividend
  9127  000368  C02A  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  9128  00036C  C02B  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  9129  000370  C02C  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  9130  000374  EC7F  F00F         	call	___lldiv	;wreg free
  9131  000378  C005  F012         	movff	?___lldiv,___llmod@dividend
  9132  00037C  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  9133  000380  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  9134  000384  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  9135  000388  0E0A               	movlw	10
  9136  00038A  6E16               	movwf	___llmod@divisor^0,c
  9137  00038C  0E00               	movlw	0
  9138  00038E  6E17               	movwf	(___llmod@divisor+1)^0,c
  9139  000390  0E00               	movlw	0
  9140  000392  6E18               	movwf	(___llmod@divisor+2)^0,c
  9141  000394  0E00               	movlw	0
  9142  000396  6E19               	movwf	(___llmod@divisor+3)^0,c
  9143  000398  EC67  F010         	call	___llmod	;wreg free
  9144  00039C  5012               	movf	?___llmod^0,w,c
  9145  00039E  0F30               	addlw	48
  9146  0003A0  6E32               	movwf	sprintf@c^0,c
  9147  0003A2                     
  9148                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  9149  0003A2  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9150  0003A6  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9151  0003AA  C032  FFDF         	movff	sprintf@c,indf2
  9152  0003AE  4A1B               	infsnz	sprintf@sp^0,f,c
  9153  0003B0  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9154  0003B2                     l3971:
  9155  0003B2  0627               	decf	sprintf@prec^0,f,c
  9156  0003B4  A0D8               	btfss	status,0,c
  9157  0003B6  0628               	decf	(sprintf@prec+1)^0,f,c
  9158  0003B8  2827               	incf	sprintf@prec^0,w,c
  9159  0003BA  E106               	bnz	u3051
  9160  0003BC  2828               	incf	(sprintf@prec+1)^0,w,c
  9161  0003BE  A4D8               	btfss	status,2,c
  9162  0003C0  EFE4  F001         	goto	u3051
  9163  0003C4  EFE6  F001         	goto	u3050
  9164  0003C8                     u3051:
  9165  0003C8  EF96  F001         	goto	l3965
  9166  0003CC                     u3050:
  9167  0003CC                     l3973:
  9168  0003CC  C01D  FFF6         	movff	sprintf@f,tblptrl
  9169  0003D0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  9170  0003D4  4A1D               	infsnz	sprintf@f^0,f,c
  9171  0003D6  2A1E               	incf	(sprintf@f+1)^0,f,c
  9172  0003D8                     	if	0	;tblptru may be non-zero
  9173  0003D8                     	endif
  9174  0003D8                     	if	0	;tblptru may be non-zero
  9175  0003D8                     	endif
  9176  0003D8  0008               	tblrd		*
  9177  0003DA  CFF5 F032          	movff	tablat,sprintf@c
  9178  0003DE  5032               	movf	sprintf@c^0,w,c
  9179  0003E0  A4D8               	btfss	status,2,c
  9180  0003E2  EFF5  F001         	goto	u3061
  9181  0003E6  EFF7  F001         	goto	u3060
  9182  0003EA                     u3061:
  9183  0003EA  EF0F  F000         	goto	l3871
  9184  0003EE                     u3060:
  9185  0003EE                     l3975:
  9186                           
  9187                           ;doprnt.c: 1564: *sp = 0;
  9188  0003EE  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9189  0003F2  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9190  0003F6  0E00               	movlw	0
  9191  0003F8  6EDF               	movwf	indf2,c
  9192  0003FA  0012               	return		;funcret
  9193  0003FC                     __end_of_sprintf:
  9194                           	opt callstack 0
  9195                           
  9196 ;; *************** function ___wmul *****************
  9197 ;; Defined at:
  9198 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  multiplier      2    4[COMRAM] unsigned int 
  9201 ;;  multiplicand    2    6[COMRAM] unsigned int 
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;  product         2    8[COMRAM] unsigned int 
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  2    4[COMRAM] unsigned int 
  9206 ;; Registers used:
  9207 ;;		wreg, status,2, status,0, prodl, prodh
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9213 ;;      Params:         4       0       0       0       0       0       0       0       0
  9214 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9216 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9217 ;;Total ram usage:        6 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; Hardware stack levels required when called:    2
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		_TFT_DrawFillRect
  9224 ;;		_TFT_DrawChar
  9225 ;;		_sprintf
  9226 ;;		_atoi
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           	psect	text42
  9231  002F04                     __ptext42:
  9232                           	opt callstack 0
  9233  002F04                     ___wmul:
  9234                           	opt callstack 25
  9235  002F04  5005               	movf	___wmul@multiplier^0,w,c
  9236  002F06  0207               	mulwf	___wmul@multiplicand^0,c
  9237  002F08  CFF3 F009          	movff	prodl,___wmul@product
  9238  002F0C  CFF4 F00A          	movff	prodh,___wmul@product+1
  9239  002F10  5005               	movf	___wmul@multiplier^0,w,c
  9240  002F12  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  9241  002F14  50F3               	movf	243,w,c
  9242  002F16  260A               	addwf	(___wmul@product+1)^0,f,c
  9243  002F18  5006               	movf	(___wmul@multiplier+1)^0,w,c
  9244  002F1A  0207               	mulwf	___wmul@multiplicand^0,c
  9245  002F1C  50F3               	movf	243,w,c
  9246  002F1E  260A               	addwf	(___wmul@product+1)^0,f,c
  9247  002F20  C009  F005         	movff	___wmul@product,?___wmul
  9248  002F24  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  9249  002F28  0012               	return		;funcret
  9250  002F2A                     __end_of___wmul:
  9251                           	opt callstack 0
  9252                           
  9253 ;; *************** function ___llmod *****************
  9254 ;; Defined at:
  9255 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  dividend        4   17[COMRAM] unsigned long 
  9258 ;;  divisor         4   21[COMRAM] unsigned long 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;  counter         1   25[COMRAM] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  4   17[COMRAM] unsigned long 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9270 ;;      Params:         8       0       0       0       0       0       0       0       0
  9271 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9272 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9273 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9274 ;;Total ram usage:        9 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    2
  9277 ;; This function calls:
  9278 ;;		Nothing
  9279 ;; This function is called by:
  9280 ;;		_sprintf
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           	psect	text43
  9285  0020CE                     __ptext43:
  9286                           	opt callstack 0
  9287  0020CE                     ___llmod:
  9288                           	opt callstack 24
  9289  0020CE  5016               	movf	___llmod@divisor^0,w,c
  9290  0020D0  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  9291  0020D2  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  9292  0020D4  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  9293  0020D6  B4D8               	btfsc	status,2,c
  9294  0020D8  EF70  F010         	goto	u2631
  9295  0020DC  EF72  F010         	goto	u2630
  9296  0020E0                     u2631:
  9297  0020E0  EFA2  F010         	goto	l1156
  9298  0020E4                     u2630:
  9299  0020E4  0E01               	movlw	1
  9300  0020E6  6E1A               	movwf	___llmod@counter^0,c
  9301  0020E8  EF7C  F010         	goto	l3695
  9302  0020EC                     l3693:
  9303  0020EC  90D8               	bcf	status,0,c
  9304  0020EE  3616               	rlcf	___llmod@divisor^0,f,c
  9305  0020F0  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  9306  0020F2  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  9307  0020F4  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  9308  0020F6  2A1A               	incf	___llmod@counter^0,f,c
  9309  0020F8                     l3695:
  9310  0020F8  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  9311  0020FA  EF81  F010         	goto	u2641
  9312  0020FE  EF83  F010         	goto	u2640
  9313  002102                     u2641:
  9314  002102  EF76  F010         	goto	l3693
  9315  002106                     u2640:
  9316  002106                     l3697:
  9317  002106  5016               	movf	___llmod@divisor^0,w,c
  9318  002108  5C12               	subwf	___llmod@dividend^0,w,c
  9319  00210A  5017               	movf	(___llmod@divisor+1)^0,w,c
  9320  00210C  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  9321  00210E  5018               	movf	(___llmod@divisor+2)^0,w,c
  9322  002110  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  9323  002112  5019               	movf	(___llmod@divisor+3)^0,w,c
  9324  002114  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  9325  002116  A0D8               	btfss	status,0,c
  9326  002118  EF90  F010         	goto	u2651
  9327  00211C  EF92  F010         	goto	u2650
  9328  002120                     u2651:
  9329  002120  EF9A  F010         	goto	l3701
  9330  002124                     u2650:
  9331  002124  5016               	movf	___llmod@divisor^0,w,c
  9332  002126  5E12               	subwf	___llmod@dividend^0,f,c
  9333  002128  5017               	movf	(___llmod@divisor+1)^0,w,c
  9334  00212A  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  9335  00212C  5018               	movf	(___llmod@divisor+2)^0,w,c
  9336  00212E  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  9337  002130  5019               	movf	(___llmod@divisor+3)^0,w,c
  9338  002132  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  9339  002134                     l3701:
  9340  002134  90D8               	bcf	status,0,c
  9341  002136  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  9342  002138  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  9343  00213A  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  9344  00213C  3216               	rrcf	___llmod@divisor^0,f,c
  9345  00213E  2E1A               	decfsz	___llmod@counter^0,f,c
  9346  002140  EF83  F010         	goto	l3697
  9347  002144                     l1156:
  9348  002144  C012  F012         	movff	___llmod@dividend,?___llmod
  9349  002148  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  9350  00214C  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  9351  002150  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  9352  002154  0012               	return		;funcret
  9353  002156                     __end_of___llmod:
  9354                           	opt callstack 0
  9355                           
  9356 ;; *************** function _A6_BaudRateGet *****************
  9357 ;; Defined at:
  9358 ;;		line 63 in file "A6Lib.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;		None
  9361 ;; Auto vars:     Size  Location     Type
  9362 ;;  j               1   72[COMRAM] unsigned char 
  9363 ;;  response       32   34[COMRAM] unsigned char [32]
  9364 ;;  baudRate        4   66[COMRAM] unsigned long 
  9365 ;;  baudRateToke    2   70[COMRAM] PTR unsigned char 
  9366 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9367 ;;		 -> loop@operator(32), 
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  4   30[COMRAM] unsigned long 
  9370 ;; Registers used:
  9371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9377 ;;      Params:         4       0       0       0       0       0       0       0       0
  9378 ;;      Locals:        39       0       0       0       0       0       0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9380 ;;      Totals:        43       0       0       0       0       0       0       0       0
  9381 ;;Total ram usage:       43 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:    6
  9384 ;; This function calls:
  9385 ;;		_A6_Command
  9386 ;;		_atol
  9387 ;;		_strstr
  9388 ;;		_strtok
  9389 ;; This function is called by:
  9390 ;;		_A6_BaudRateSet
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text44
  9395  00135E                     __ptext44:
  9396                           	opt callstack 0
  9397  00135E                     _A6_BaudRateGet:
  9398                           	opt callstack 22
  9399  00135E                     
  9400                           ;A6Lib.c: 64: uint32_t baudRate;;A6Lib.c: 65: char *baudRateToken;;A6Lib.c: 66: char res
      +                          ponse[32];;A6Lib.c: 68: A6_Command("AT+IPR?\r", 0, response, 32);
  9401  00135E  0EBF               	movlw	low STR_7
  9402  001360  6E18               	movwf	A6_Command@command^0,c
  9403  001362  0E5F               	movlw	high STR_7
  9404  001364  6E19               	movwf	(A6_Command@command+1)^0,c
  9405  001366  0E00               	movlw	0
  9406  001368  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  9407  00136A  0E00               	movlw	0
  9408  00136C  6E1A               	movwf	A6_Command@timeout^0,c
  9409  00136E  0E23               	movlw	low A6_BaudRateGet@response
  9410  001370  6E1C               	movwf	A6_Command@response^0,c
  9411  001372  0E00               	movlw	high A6_BaudRateGet@response
  9412  001374  6E1D               	movwf	(A6_Command@response+1)^0,c
  9413  001376  0E20               	movlw	32
  9414  001378  6E1E               	movwf	A6_Command@responseLen^0,c
  9415  00137A  ECEF  F010         	call	_A6_Command	;wreg free
  9416  00137E                     
  9417                           ;A6Lib.c: 69: if(strstr(response, "+IPR: ") != (0)) {
  9418  00137E  0E23               	movlw	low A6_BaudRateGet@response
  9419  001380  6E10               	movwf	strstr@s1^0,c
  9420  001382  0E00               	movlw	high A6_BaudRateGet@response
  9421  001384  6E11               	movwf	(strstr@s1+1)^0,c
  9422  001386  0EE7               	movlw	low STR_8
  9423  001388  6E12               	movwf	strstr@s2^0,c
  9424  00138A  0E5F               	movlw	high STR_8
  9425  00138C  6E13               	movwf	(strstr@s2+1)^0,c
  9426  00138E  EC20  F00F         	call	_strstr	;wreg free
  9427  001392  5010               	movf	?_strstr^0,w,c
  9428  001394  1011               	iorwf	(?_strstr+1)^0,w,c
  9429  001396  B4D8               	btfsc	status,2,c
  9430  001398  EFD0  F009         	goto	u3411
  9431  00139C  EFD2  F009         	goto	u3410
  9432  0013A0                     u3411:
  9433  0013A0  EF38  F00A         	goto	l4223
  9434  0013A4                     u3410:
  9435  0013A4                     
  9436                           ;A6Lib.c: 70: baudRateToken = strtok(response, " ");
  9437  0013A4  0E23               	movlw	low A6_BaudRateGet@response
  9438  0013A6  6E12               	movwf	strtok@s1^0,c
  9439  0013A8  0E00               	movlw	high A6_BaudRateGet@response
  9440  0013AA  6E13               	movwf	(strtok@s1+1)^0,c
  9441  0013AC  0ED6               	movlw	low (STR_15+6)
  9442  0013AE  6E14               	movwf	strtok@s2^0,c
  9443  0013B0  0E5F               	movlw	high (STR_15+6)
  9444  0013B2  6E15               	movwf	(strtok@s2+1)^0,c
  9445  0013B4  EC38  F00C         	call	_strtok	;wreg free
  9446  0013B8  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  9447  0013BC  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  9448                           
  9449                           ;A6Lib.c: 71: baudRateToken = strtok((0), " ");
  9450  0013C0  0E00               	movlw	0
  9451  0013C2  6E12               	movwf	strtok@s1^0,c
  9452  0013C4  0E00               	movlw	0
  9453  0013C6  6E13               	movwf	(strtok@s1+1)^0,c
  9454  0013C8  0ED6               	movlw	low (STR_15+6)
  9455  0013CA  6E14               	movwf	strtok@s2^0,c
  9456  0013CC  0E5F               	movlw	high (STR_15+6)
  9457  0013CE  6E15               	movwf	(strtok@s2+1)^0,c
  9458  0013D0  EC38  F00C         	call	_strtok	;wreg free
  9459  0013D4  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  9460  0013D8  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  9461  0013DC                     
  9462                           ;A6Lib.c: 72: if(baudRateToken != (0)) {
  9463  0013DC  5047               	movf	A6_BaudRateGet@baudRateToken^0,w,c
  9464  0013DE  1048               	iorwf	(A6_BaudRateGet@baudRateToken+1)^0,w,c
  9465  0013E0  B4D8               	btfsc	status,2,c
  9466  0013E2  EFF5  F009         	goto	u3421
  9467  0013E6  EFF7  F009         	goto	u3420
  9468  0013EA                     u3421:
  9469  0013EA  EF38  F00A         	goto	l4223
  9470  0013EE                     u3420:
  9471  0013EE                     
  9472                           ;A6Lib.c: 73: baudRate = atol(baudRateToken);
  9473  0013EE  C047  F011         	movff	A6_BaudRateGet@baudRateToken,atol@s
  9474  0013F2  C048  F012         	movff	A6_BaudRateGet@baudRateToken+1,atol@s+1
  9475  0013F6  EC12  F009         	call	_atol	;wreg free
  9476  0013FA  C011  F043         	movff	?_atol,A6_BaudRateGet@baudRate
  9477  0013FE  C012  F044         	movff	?_atol+1,A6_BaudRateGet@baudRate+1
  9478  001402  C013  F045         	movff	?_atol+2,A6_BaudRateGet@baudRate+2
  9479  001406  C014  F046         	movff	?_atol+3,A6_BaudRateGet@baudRate+3
  9480  00140A                     
  9481                           ;A6Lib.c: 74: for(uint8_t j=0; j<3; j++) {
  9482  00140A  0E00               	movlw	0
  9483  00140C  6E49               	movwf	A6_BaudRateGet@j^0,c
  9484  00140E                     l4215:
  9485                           
  9486                           ;A6Lib.c: 75: if(baudRate == A6_BAUDRATES[j]) {
  9487  00140E  5049               	movf	A6_BaudRateGet@j^0,w,c
  9488  001410  0D04               	mullw	4
  9489  001412  0E21               	movlw	low _A6_BAUDRATES
  9490  001414  24F3               	addwf	243,w,c
  9491  001416  6EF6               	movwf	tblptrl,c
  9492  001418  0E5F               	movlw	high _A6_BAUDRATES
  9493  00141A  20F4               	addwfc	244,w,c
  9494  00141C  6EF7               	movwf	tblptrh,c
  9495  00141E                     	if	0	;There are less than 3 active tblptr bytes
  9496  00141E                     	endif
  9497  00141E  5043               	movf	A6_BaudRateGet@baudRate^0,w,c
  9498  001420  0009               	tblrd		*+
  9499  001422  18F5               	xorwf	tablat,w,c
  9500  001424  E110               	bnz	u3431
  9501  001426  5044               	movf	(A6_BaudRateGet@baudRate+1)^0,w,c
  9502  001428  0009               	tblrd		*+
  9503  00142A  18F5               	xorwf	tablat,w,c
  9504  00142C  E10C               	bnz	u3431
  9505  00142E  5045               	movf	(A6_BaudRateGet@baudRate+2)^0,w,c
  9506  001430  0009               	tblrd		*+
  9507  001432  18F5               	xorwf	tablat,w,c
  9508  001434  E108               	bnz	u3431
  9509  001436  5046               	movf	(A6_BaudRateGet@baudRate+3)^0,w,c
  9510  001438  0009               	tblrd		*+
  9511  00143A  18F5               	xorwf	tablat,w,c
  9512  00143C  A4D8               	btfss	status,2,c
  9513  00143E  EF23  F00A         	goto	u3431
  9514  001442  EF25  F00A         	goto	u3430
  9515  001446                     u3431:
  9516  001446  EF2F  F00A         	goto	l4219
  9517  00144A                     u3430:
  9518  00144A                     
  9519                           ;A6Lib.c: 76: return baudRate;
  9520  00144A  C043  F01F         	movff	A6_BaudRateGet@baudRate,?_A6_BaudRateGet
  9521  00144E  C044  F020         	movff	A6_BaudRateGet@baudRate+1,?_A6_BaudRateGet+1
  9522  001452  C045  F021         	movff	A6_BaudRateGet@baudRate+2,?_A6_BaudRateGet+2
  9523  001456  C046  F022         	movff	A6_BaudRateGet@baudRate+3,?_A6_BaudRateGet+3
  9524  00145A  EF40  F00A         	goto	l575
  9525  00145E                     l4219:
  9526  00145E  2A49               	incf	A6_BaudRateGet@j^0,f,c
  9527  001460  0E02               	movlw	2
  9528  001462  6449               	cpfsgt	A6_BaudRateGet@j^0,c
  9529  001464  EF36  F00A         	goto	u3441
  9530  001468  EF38  F00A         	goto	u3440
  9531  00146C                     u3441:
  9532  00146C  EF07  F00A         	goto	l4215
  9533  001470                     u3440:
  9534  001470                     l4223:
  9535                           
  9536                           ;A6Lib.c: 77: };A6Lib.c: 78: };A6Lib.c: 79: };A6Lib.c: 80: };A6Lib.c: 82: return 0;
  9537  001470  0E00               	movlw	0
  9538  001472  6E1F               	movwf	?_A6_BaudRateGet^0,c
  9539  001474  0E00               	movlw	0
  9540  001476  6E20               	movwf	(?_A6_BaudRateGet+1)^0,c
  9541  001478  0E00               	movlw	0
  9542  00147A  6E21               	movwf	(?_A6_BaudRateGet+2)^0,c
  9543  00147C  0E00               	movlw	0
  9544  00147E  6E22               	movwf	(?_A6_BaudRateGet+3)^0,c
  9545  001480                     l575:
  9546  001480  0012               	return		;funcret
  9547  001482                     __end_of_A6_BaudRateGet:
  9548                           	opt callstack 0
  9549                           
  9550 ;; *************** function _strtok *****************
  9551 ;; Defined at:
  9552 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strtok.c"
  9553 ;; Parameters:    Size  Location     Type
  9554 ;;  s1              2   17[COMRAM] PTR unsigned char 
  9555 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9556 ;;		 -> loop@operator(32), 
  9557 ;;  s2              2   19[COMRAM] PTR const unsigned char 
  9558 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
  9559 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
  9560 ;;		 -> STR_22(2), STR_19(2), STR_18(2), STR_17(2), 
  9561 ;;		 -> STR_16(2), STR_10(2), STR_9(2), 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;		None
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  2   17[COMRAM] PTR unsigned char 
  9566 ;; Registers used:
  9567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9573 ;;      Params:         4       0       0       0       0       0       0       0       0
  9574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9576 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9577 ;;Total ram usage:        4 bytes
  9578 ;; Hardware stack levels used:    1
  9579 ;; Hardware stack levels required when called:    4
  9580 ;; This function calls:
  9581 ;;		_strcspn
  9582 ;;		_strspn
  9583 ;; This function is called by:
  9584 ;;		_A6_BaudRateGet
  9585 ;;		_A6_NetworkGetRSSI
  9586 ;;		_A6_NetworkGetOperator
  9587 ;;		_A6_NetworkGetStatus
  9588 ;; This function uses a non-reentrant model
  9589 ;;
  9590                           
  9591                           	psect	text45
  9592  001870                     __ptext45:
  9593                           	opt callstack 0
  9594  001870                     _strtok:
  9595                           	opt callstack 23
  9596  001870  5012               	movf	strtok@s1^0,w,c
  9597  001872  1013               	iorwf	(strtok@s1+1)^0,w,c
  9598  001874  A4D8               	btfss	status,2,c
  9599  001876  EF3F  F00C         	goto	u3151
  9600  00187A  EF41  F00C         	goto	u3150
  9601  00187E                     u3151:
  9602  00187E  EF45  F00C         	goto	l1495
  9603  001882                     u3150:
  9604  001882  C0D0  F012         	movff	strtok@sp,strtok@s1
  9605  001886  C0D1  F013         	movff	strtok@sp+1,strtok@s1+1
  9606  00188A                     l1495:
  9607  00188A  5012               	movf	strtok@s1^0,w,c
  9608  00188C  1013               	iorwf	(strtok@s1+1)^0,w,c
  9609  00188E  A4D8               	btfss	status,2,c
  9610  001890  EF4C  F00C         	goto	u3161
  9611  001894  EF4E  F00C         	goto	u3160
  9612  001898                     u3161:
  9613  001898  EF54  F00C         	goto	l4031
  9614  00189C                     u3160:
  9615  00189C  0E00               	movlw	0
  9616  00189E  6E12               	movwf	?_strtok^0,c
  9617  0018A0  0E00               	movlw	0
  9618  0018A2  6E13               	movwf	(?_strtok+1)^0,c
  9619  0018A4  EFA8  F00C         	goto	l1497
  9620  0018A8                     l4031:
  9621  0018A8  C012  F00B         	movff	strtok@s1,strspn@s1
  9622  0018AC  C013  F00C         	movff	strtok@s1+1,strspn@s1+1
  9623  0018B0  C014  F00D         	movff	strtok@s2,strspn@s2
  9624  0018B4  C015  F00E         	movff	strtok@s2+1,strspn@s2+1
  9625  0018B8  EC84  F013         	call	_strspn	;wreg free
  9626  0018BC  500B               	movf	?_strspn^0,w,c
  9627  0018BE  2612               	addwf	strtok@s1^0,f,c
  9628  0018C0  500C               	movf	(?_strspn+1)^0,w,c
  9629  0018C2  2213               	addwfc	(strtok@s1+1)^0,f,c
  9630  0018C4  C012  FFD9         	movff	strtok@s1,fsr2l
  9631  0018C8  C013  FFDA         	movff	strtok@s1+1,fsr2h
  9632  0018CC  50DF               	movf	indf2,w,c
  9633  0018CE  A4D8               	btfss	status,2,c
  9634  0018D0  EF6C  F00C         	goto	u3171
  9635  0018D4  EF6E  F00C         	goto	u3170
  9636  0018D8                     u3171:
  9637  0018D8  EF79  F00C         	goto	l4039
  9638  0018DC                     u3170:
  9639  0018DC  0E00               	movlw	0
  9640  0018DE  0100               	movlb	0	; () banked
  9641  0018E0  6FD0               	movwf	strtok@sp& (0+255),b
  9642  0018E2  0E00               	movlw	0
  9643  0018E4  6FD1               	movwf	(strtok@sp+1)& (0+255),b
  9644  0018E6  C0D0  F012         	movff	strtok@sp,?_strtok
  9645  0018EA  C0D1  F013         	movff	strtok@sp+1,?_strtok+1
  9646  0018EE  EFA8  F00C         	goto	l1497
  9647  0018F2                     l4039:
  9648  0018F2  C012  F00B         	movff	strtok@s1,strcspn@s1
  9649  0018F6  C013  F00C         	movff	strtok@s1+1,strcspn@s1+1
  9650  0018FA  C014  F00D         	movff	strtok@s2,strcspn@s2
  9651  0018FE  C015  F00E         	movff	strtok@s2+1,strcspn@s2+1
  9652  001902  ECB7  F013         	call	_strcspn	;wreg free
  9653  001906  500B               	movf	?_strcspn^0,w,c
  9654  001908  2412               	addwf	strtok@s1^0,w,c
  9655  00190A  0100               	movlb	0	; () banked
  9656  00190C  6FD0               	movwf	strtok@sp& (0+255),b
  9657  00190E  500C               	movf	(?_strcspn+1)^0,w,c
  9658  001910  2013               	addwfc	(strtok@s1+1)^0,w,c
  9659  001912  6FD1               	movwf	(strtok@sp+1)& (0+255),b
  9660  001914                     
  9661                           ; BSR set to: 0
  9662  001914  C0D0  FFD9         	movff	strtok@sp,fsr2l
  9663  001918  C0D1  FFDA         	movff	strtok@sp+1,fsr2h
  9664  00191C  50DF               	movf	indf2,w,c
  9665  00191E  B4D8               	btfsc	status,2,c
  9666  001920  EF94  F00C         	goto	u3181
  9667  001924  EF96  F00C         	goto	u3180
  9668  001928                     u3181:
  9669  001928  EFA0  F00C         	goto	l4047
  9670  00192C                     u3180:
  9671  00192C                     
  9672                           ; BSR set to: 0
  9673  00192C  C0D0  FFD9         	movff	strtok@sp,fsr2l
  9674  001930  C0D1  FFDA         	movff	strtok@sp+1,fsr2h
  9675  001934  0E00               	movlw	0
  9676  001936  6EDF               	movwf	indf2,c
  9677  001938                     
  9678                           ; BSR set to: 0
  9679  001938  4BD0               	infsnz	strtok@sp& (0+255),f,b
  9680  00193A  2BD1               	incf	(strtok@sp+1)& (0+255),f,b
  9681  00193C  EFA4  F00C         	goto	l1500
  9682  001940                     l4047:
  9683                           
  9684                           ; BSR set to: 0
  9685  001940  0E00               	movlw	0
  9686  001942  6FD0               	movwf	strtok@sp& (0+255),b
  9687  001944  0E00               	movlw	0
  9688  001946  6FD1               	movwf	(strtok@sp+1)& (0+255),b
  9689  001948                     l1500:
  9690                           
  9691                           ; BSR set to: 0
  9692  001948  C012  F012         	movff	strtok@s1,?_strtok
  9693  00194C  C013  F013         	movff	strtok@s1+1,?_strtok+1
  9694  001950                     l1497:
  9695  001950  0012               	return		;funcret
  9696  001952                     __end_of_strtok:
  9697                           	opt callstack 0
  9698                           
  9699 ;; *************** function _strspn *****************
  9700 ;; Defined at:
  9701 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strspn.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  9704 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9705 ;;		 -> loop@operator(32), 
  9706 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  9707 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
  9708 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
  9709 ;;		 -> STR_22(2), STR_19(2), STR_18(2), STR_17(2), 
  9710 ;;		 -> STR_16(2), STR_10(2), STR_9(2), 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  i               2   15[COMRAM] unsigned int 
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  2   10[COMRAM] unsigned int 
  9715 ;; Registers used:
  9716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9722 ;;      Params:         4       0       0       0       0       0       0       0       0
  9723 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9724 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9725 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9726 ;;Total ram usage:        7 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    3
  9729 ;; This function calls:
  9730 ;;		_strchr
  9731 ;; This function is called by:
  9732 ;;		_strtok
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           	psect	text46
  9737  002708                     __ptext46:
  9738                           	opt callstack 0
  9739  002708                     _strspn:
  9740                           	opt callstack 23
  9741  002708  0E00               	movlw	0
  9742  00270A  6E11               	movwf	(strspn@i+1)^0,c
  9743  00270C  0E00               	movlw	0
  9744  00270E  6E10               	movwf	strspn@i^0,c
  9745  002710  EF8E  F013         	goto	l3749
  9746  002714                     l3747:
  9747  002714  4A0B               	infsnz	strspn@s1^0,f,c
  9748  002716  2A0C               	incf	(strspn@s1+1)^0,f,c
  9749  002718  4A10               	infsnz	strspn@i^0,f,c
  9750  00271A  2A11               	incf	(strspn@i+1)^0,f,c
  9751  00271C                     l3749:
  9752  00271C  C00B  FFD9         	movff	strspn@s1,fsr2l
  9753  002720  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  9754  002724  50DF               	movf	indf2,w,c
  9755  002726  B4D8               	btfsc	status,2,c
  9756  002728  EF98  F013         	goto	u2741
  9757  00272C  EF9A  F013         	goto	u2740
  9758  002730                     u2741:
  9759  002730  EFB2  F013         	goto	l1534
  9760  002734                     u2740:
  9761  002734  C00D  F005         	movff	strspn@s2,strchr@ptr
  9762  002738  C00E  F006         	movff	strspn@s2+1,strchr@ptr+1
  9763  00273C  C00B  FFD9         	movff	strspn@s1,fsr2l
  9764  002740  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  9765  002744  50DF               	movf	indf2,w,c
  9766  002746  6E0F               	movwf	??_strspn^0,c
  9767  002748  500F               	movf	??_strspn^0,w,c
  9768  00274A  6E07               	movwf	strchr@chr^0,c
  9769  00274C  6A08               	clrf	(strchr@chr+1)^0,c
  9770  00274E  EC74  F011         	call	_strchr	;wreg free
  9771  002752  5005               	movf	?_strchr^0,w,c
  9772  002754  1006               	iorwf	(?_strchr+1)^0,w,c
  9773  002756  A4D8               	btfss	status,2,c
  9774  002758  EFB0  F013         	goto	u2751
  9775  00275C  EFB2  F013         	goto	u2750
  9776  002760                     u2751:
  9777  002760  EF8A  F013         	goto	l3747
  9778  002764                     u2750:
  9779  002764                     l1534:
  9780  002764  C010  F00B         	movff	strspn@i,?_strspn
  9781  002768  C011  F00C         	movff	strspn@i+1,?_strspn+1
  9782  00276C  0012               	return		;funcret
  9783  00276E                     __end_of_strspn:
  9784                           	opt callstack 0
  9785                           
  9786 ;; *************** function _strcspn *****************
  9787 ;; Defined at:
  9788 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcspn.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  9791 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9792 ;;		 -> loop@operator(32), 
  9793 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  9794 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
  9795 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
  9796 ;;		 -> STR_22(2), STR_19(2), STR_18(2), STR_17(2), 
  9797 ;;		 -> STR_16(2), STR_10(2), STR_9(2), 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;  i               2   15[COMRAM] unsigned int 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  2   10[COMRAM] unsigned int 
  9802 ;; Registers used:
  9803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9809 ;;      Params:         4       0       0       0       0       0       0       0       0
  9810 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9811 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9812 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9813 ;;Total ram usage:        7 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    3
  9816 ;; This function calls:
  9817 ;;		_strchr
  9818 ;; This function is called by:
  9819 ;;		_strtok
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           	psect	text47
  9824  00276E                     __ptext47:
  9825                           	opt callstack 0
  9826  00276E                     _strcspn:
  9827                           	opt callstack 23
  9828  00276E  0E00               	movlw	0
  9829  002770  6E11               	movwf	(strcspn@i+1)^0,c
  9830  002772  0E00               	movlw	0
  9831  002774  6E10               	movwf	strcspn@i^0,c
  9832  002776  EFC1  F013         	goto	l3757
  9833  00277A                     l3755:
  9834  00277A  4A0B               	infsnz	strcspn@s1^0,f,c
  9835  00277C  2A0C               	incf	(strcspn@s1+1)^0,f,c
  9836  00277E  4A10               	infsnz	strcspn@i^0,f,c
  9837  002780  2A11               	incf	(strcspn@i+1)^0,f,c
  9838  002782                     l3757:
  9839  002782  C00B  FFD9         	movff	strcspn@s1,fsr2l
  9840  002786  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  9841  00278A  50DF               	movf	indf2,w,c
  9842  00278C  B4D8               	btfsc	status,2,c
  9843  00278E  EFCB  F013         	goto	u2761
  9844  002792  EFCD  F013         	goto	u2760
  9845  002796                     u2761:
  9846  002796  EFE5  F013         	goto	l1515
  9847  00279A                     u2760:
  9848  00279A  C00D  F005         	movff	strcspn@s2,strchr@ptr
  9849  00279E  C00E  F006         	movff	strcspn@s2+1,strchr@ptr+1
  9850  0027A2  C00B  FFD9         	movff	strcspn@s1,fsr2l
  9851  0027A6  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  9852  0027AA  50DF               	movf	indf2,w,c
  9853  0027AC  6E0F               	movwf	??_strcspn^0,c
  9854  0027AE  500F               	movf	??_strcspn^0,w,c
  9855  0027B0  6E07               	movwf	strchr@chr^0,c
  9856  0027B2  6A08               	clrf	(strchr@chr+1)^0,c
  9857  0027B4  EC74  F011         	call	_strchr	;wreg free
  9858  0027B8  5005               	movf	?_strchr^0,w,c
  9859  0027BA  1006               	iorwf	(?_strchr+1)^0,w,c
  9860  0027BC  B4D8               	btfsc	status,2,c
  9861  0027BE  EFE3  F013         	goto	u2771
  9862  0027C2  EFE5  F013         	goto	u2770
  9863  0027C6                     u2771:
  9864  0027C6  EFBD  F013         	goto	l3755
  9865  0027CA                     u2770:
  9866  0027CA                     l1515:
  9867  0027CA  C010  F00B         	movff	strcspn@i,?_strcspn
  9868  0027CE  C011  F00C         	movff	strcspn@i+1,?_strcspn+1
  9869  0027D2  0012               	return		;funcret
  9870  0027D4                     __end_of_strcspn:
  9871                           	opt callstack 0
  9872                           
  9873 ;; *************** function _strstr *****************
  9874 ;; Defined at:
  9875 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strstr.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  9878 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
  9879 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
  9880 ;;		 -> STR_22(2), A6_NetworkGetRSSI@response(32), STR_19(2), STR_18(2), 
  9881 ;;		 -> STR_17(2), STR_16(2), A6_NetworkGetStatus@response(32), STR_10(2), 
  9882 ;;		 -> STR_9(2), A6_BaudRateGet@response(32), NULL(0), loop@operator(32), 
  9883 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  9884 ;;		 -> STR_26(8), STR_21(7), STR_15(8), STR_8(7), 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;		None
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  2   15[COMRAM] PTR unsigned char 
  9889 ;; Registers used:
  9890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9896 ;;      Params:         4       0       0       0       0       0       0       0       0
  9897 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9898 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9899 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9900 ;;Total ram usage:        4 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    3
  9903 ;; This function calls:
  9904 ;;		_strchr
  9905 ;;		_strlen
  9906 ;;		_strncmp
  9907 ;; This function is called by:
  9908 ;;		_A6_BaudRateGet
  9909 ;;		_A6_NetworkGetRSSI
  9910 ;;		_A6_NetworkGetOperator
  9911 ;;		_A6_NetworkGetStatus
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text48
  9916  001E40                     __ptext48:
  9917                           	opt callstack 0
  9918  001E40                     _strstr:
  9919                           	opt callstack 24
  9920  001E40  EF59  F00F         	goto	l4015
  9921  001E44                     l4007:
  9922  001E44  C010  F009         	movff	strstr@s1,strncmp@s1
  9923  001E48  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
  9924  001E4C  C012  F00B         	movff	strstr@s2,strncmp@s2
  9925  001E50  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
  9926  001E54  C012  F005         	movff	strstr@s2,strlen@s
  9927  001E58  C013  F006         	movff	strstr@s2+1,strlen@s+1
  9928  001E5C  ECC3  F015         	call	_strlen	;wreg free
  9929  001E60  C005  F00D         	movff	?_strlen,strncmp@len
  9930  001E64  C006  F00E         	movff	?_strlen+1,strncmp@len+1
  9931  001E68  EC85  F00D         	call	_strncmp	;wreg free
  9932  001E6C  5009               	movf	?_strncmp^0,w,c
  9933  001E6E  100A               	iorwf	(?_strncmp+1)^0,w,c
  9934  001E70  A4D8               	btfss	status,2,c
  9935  001E72  EF3D  F00F         	goto	u3111
  9936  001E76  EF3F  F00F         	goto	u3110
  9937  001E7A                     u3111:
  9938  001E7A  EF45  F00F         	goto	l4013
  9939  001E7E                     u3110:
  9940  001E7E  C010  F010         	movff	strstr@s1,?_strstr
  9941  001E82  C011  F011         	movff	strstr@s1+1,?_strstr+1
  9942  001E86  EF7E  F00F         	goto	l1483
  9943  001E8A                     l4013:
  9944  001E8A  0E01               	movlw	1
  9945  001E8C  2410               	addwf	strstr@s1^0,w,c
  9946  001E8E  6E05               	movwf	strchr@ptr^0,c
  9947  001E90  0E00               	movlw	0
  9948  001E92  2011               	addwfc	(strstr@s1+1)^0,w,c
  9949  001E94  6E06               	movwf	(strchr@ptr+1)^0,c
  9950  001E96  C012  FFF6         	movff	strstr@s2,tblptrl
  9951  001E9A  C013  FFF7         	movff	strstr@s2+1,tblptrh
  9952  001E9E                     	if	0	;tblptru may be non-zero
  9953  001E9E                     	endif
  9954  001E9E                     	if	0	;tblptru may be non-zero
  9955  001E9E                     	endif
  9956  001E9E  0008               	tblrd		*
  9957  001EA0  50F5               	movf	tablat,w,c
  9958  001EA2  6E07               	movwf	strchr@chr^0,c
  9959  001EA4  6A08               	clrf	(strchr@chr+1)^0,c
  9960  001EA6  EC74  F011         	call	_strchr	;wreg free
  9961  001EAA  C005  F010         	movff	?_strchr,strstr@s1
  9962  001EAE  C006  F011         	movff	?_strchr+1,strstr@s1+1
  9963  001EB2                     l4015:
  9964  001EB2  5010               	movf	strstr@s1^0,w,c
  9965  001EB4  1011               	iorwf	(strstr@s1+1)^0,w,c
  9966  001EB6  B4D8               	btfsc	status,2,c
  9967  001EB8  EF60  F00F         	goto	u3121
  9968  001EBC  EF62  F00F         	goto	u3120
  9969  001EC0                     u3121:
  9970  001EC0  EF7A  F00F         	goto	l4019
  9971  001EC4                     u3120:
  9972  001EC4  C010  FFF6         	movff	strstr@s1,tblptrl
  9973  001EC8  C011  FFF7         	movff	strstr@s1+1,tblptrh
  9974  001ECC  6AF8               	clrf	tblptru,c
  9975  001ECE  0E07               	movlw	(high __ramtop+-1)
  9976  001ED0  64F7               	cpfsgt	tblptrh,c
  9977  001ED2  D003               	bra	u3137
  9978  001ED4  0008               	tblrd		*
  9979  001ED6  50F5               	movf	tablat,w,c
  9980  001ED8  D005               	bra	u3130
  9981  001EDA                     u3137:
  9982  001EDA  CFF6 FFE1          	movff	tblptrl,fsr1l
  9983  001EDE  CFF7 FFE2          	movff	tblptrh,fsr1h
  9984  001EE2  50E7               	movf	indf1,w,c
  9985  001EE4                     u3130:
  9986  001EE4  0900               	iorlw	0
  9987  001EE6  A4D8               	btfss	status,2,c
  9988  001EE8  EF78  F00F         	goto	u3141
  9989  001EEC  EF7A  F00F         	goto	u3140
  9990  001EF0                     u3141:
  9991  001EF0  EF22  F00F         	goto	l4007
  9992  001EF4                     u3140:
  9993  001EF4                     l4019:
  9994  001EF4  0E00               	movlw	0
  9995  001EF6  6E10               	movwf	?_strstr^0,c
  9996  001EF8  0E00               	movlw	0
  9997  001EFA  6E11               	movwf	(?_strstr+1)^0,c
  9998  001EFC                     l1483:
  9999  001EFC  0012               	return		;funcret
 10000  001EFE                     __end_of_strstr:
 10001                           	opt callstack 0
 10002                           
 10003 ;; *************** function _strncmp *****************
 10004 ;; Defined at:
 10005 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strncmp.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  s1              2    8[COMRAM] PTR const unsigned char 
 10008 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
 10009 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
 10010 ;;		 -> STR_22(2), A6_NetworkGetRSSI@response(32), STR_19(2), STR_18(2), 
 10011 ;;		 -> STR_17(2), STR_16(2), A6_NetworkGetStatus@response(32), STR_10(2), 
 10012 ;;		 -> STR_9(2), A6_BaudRateGet@response(32), NULL(0), loop@operator(32), 
 10013 ;;  s2              2   10[COMRAM] PTR const unsigned char 
 10014 ;;		 -> STR_26(8), STR_21(7), STR_15(8), STR_8(7), 
 10015 ;;  len             2   12[COMRAM] unsigned int 
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;		None
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  2    8[COMRAM] int 
 10020 ;; Registers used:
 10021 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10022 ;; Tracked objects:
 10023 ;;		On entry : 0/0
 10024 ;;		On exit  : 0/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10027 ;;      Params:         6       0       0       0       0       0       0       0       0
 10028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10029 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10030 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10031 ;;Total ram usage:        7 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:    2
 10034 ;; This function calls:
 10035 ;;		Nothing
 10036 ;; This function is called by:
 10037 ;;		_strstr
 10038 ;; This function uses a non-reentrant model
 10039 ;;
 10040                           
 10041                           	psect	text49
 10042  001B0A                     __ptext49:
 10043                           	opt callstack 0
 10044  001B0A                     _strncmp:
 10045                           	opt callstack 24
 10046  001B0A  EFE0  F00D         	goto	l3739
 10047  001B0E                     l3729:
 10048  001B0E  C009  FFF6         	movff	strncmp@s1,tblptrl
 10049  001B12  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10050  001B16  6AF8               	clrf	tblptru,c
 10051  001B18  0E07               	movlw	(high __ramtop+-1)
 10052  001B1A  64F7               	cpfsgt	tblptrh,c
 10053  001B1C  D003               	bra	u2697
 10054  001B1E  0008               	tblrd		*
 10055  001B20  50F5               	movf	tablat,w,c
 10056  001B22  D005               	bra	u2690
 10057  001B24                     u2697:
 10058  001B24  CFF6 FFE1          	movff	tblptrl,fsr1l
 10059  001B28  CFF7 FFE2          	movff	tblptrh,fsr1h
 10060  001B2C  50E7               	movf	indf1,w,c
 10061  001B2E                     u2690:
 10062  001B2E  0900               	iorlw	0
 10063  001B30  B4D8               	btfsc	status,2,c
 10064  001B32  EF9D  F00D         	goto	u2701
 10065  001B36  EF9F  F00D         	goto	u2700
 10066  001B3A                     u2701:
 10067  001B3A  EFBE  F00D         	goto	l3733
 10068  001B3E                     u2700:
 10069  001B3E  C00B  FFF6         	movff	strncmp@s2,tblptrl
 10070  001B42  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
 10071  001B46                     	if	0	;tblptru may be non-zero
 10072  001B46                     	endif
 10073  001B46                     	if	0	;tblptru may be non-zero
 10074  001B46                     	endif
 10075  001B46  0008               	tblrd		*
 10076  001B48  CFF5 F00F          	movff	tablat,??_strncmp
 10077  001B4C  C009  FFF6         	movff	strncmp@s1,tblptrl
 10078  001B50  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10079  001B54  6AF8               	clrf	tblptru,c
 10080  001B56  0E07               	movlw	(high __ramtop+-1)
 10081  001B58  64F7               	cpfsgt	tblptrh,c
 10082  001B5A  D003               	bra	u2717
 10083  001B5C  0008               	tblrd		*
 10084  001B5E  50F5               	movf	tablat,w,c
 10085  001B60  D005               	bra	u2715
 10086  001B62                     u2717:
 10087  001B62  CFF6 FFE1          	movff	tblptrl,fsr1l
 10088  001B66  CFF7 FFE2          	movff	tblptrh,fsr1h
 10089  001B6A  50E7               	movf	indf1,w,c
 10090  001B6C                     u2715:
 10091  001B6C  180F               	xorwf	??_strncmp^0,w,c
 10092  001B6E  B4D8               	btfsc	status,2,c
 10093  001B70  EFBC  F00D         	goto	u2711
 10094  001B74  EFBE  F00D         	goto	u2710
 10095  001B78                     u2711:
 10096  001B78  EFDC  F00D         	goto	l3737
 10097  001B7C                     u2710:
 10098  001B7C                     l3733:
 10099  001B7C  C009  FFF6         	movff	strncmp@s1,tblptrl
 10100  001B80  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10101  001B84  6AF8               	clrf	tblptru,c
 10102  001B86  0E07               	movlw	(high __ramtop+-1)
 10103  001B88  64F7               	cpfsgt	tblptrh,c
 10104  001B8A  D003               	bra	u2727
 10105  001B8C  0008               	tblrd		*
 10106  001B8E  50F5               	movf	tablat,w,c
 10107  001B90  D005               	bra	u2720
 10108  001B92                     u2727:
 10109  001B92  CFF6 FFE1          	movff	tblptrl,fsr1l
 10110  001B96  CFF7 FFE2          	movff	tblptrh,fsr1h
 10111  001B9A  50E7               	movf	indf1,w,c
 10112  001B9C                     u2720:
 10113  001B9C  6E0F               	movwf	??_strncmp^0,c
 10114  001B9E  C00B  FFF6         	movff	strncmp@s2,tblptrl
 10115  001BA2  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
 10116  001BA6                     	if	0	;tblptru may be non-zero
 10117  001BA6                     	endif
 10118  001BA6                     	if	0	;tblptru may be non-zero
 10119  001BA6                     	endif
 10120  001BA6  0008               	tblrd		*
 10121  001BA8  50F5               	movf	tablat,w,c
 10122  001BAA  5C0F               	subwf	??_strncmp^0,w,c
 10123  001BAC  6E09               	movwf	?_strncmp^0,c
 10124  001BAE  6A0A               	clrf	(?_strncmp+1)^0,c
 10125  001BB0  A0D8               	btfss	status,0,c
 10126  001BB2  060A               	decf	(?_strncmp+1)^0,f,c
 10127  001BB4  EFF1  F00D         	goto	l1524
 10128  001BB8                     l3737:
 10129  001BB8  4A09               	infsnz	strncmp@s1^0,f,c
 10130  001BBA  2A0A               	incf	(strncmp@s1+1)^0,f,c
 10131  001BBC  4A0B               	infsnz	strncmp@s2^0,f,c
 10132  001BBE  2A0C               	incf	(strncmp@s2+1)^0,f,c
 10133  001BC0                     l3739:
 10134  001BC0  060D               	decf	strncmp@len^0,f,c
 10135  001BC2  A0D8               	btfss	status,0,c
 10136  001BC4  060E               	decf	(strncmp@len+1)^0,f,c
 10137  001BC6  280D               	incf	strncmp@len^0,w,c
 10138  001BC8  E106               	bnz	u2731
 10139  001BCA  280E               	incf	(strncmp@len+1)^0,w,c
 10140  001BCC  A4D8               	btfss	status,2,c
 10141  001BCE  EFEB  F00D         	goto	u2731
 10142  001BD2  EFED  F00D         	goto	u2730
 10143  001BD6                     u2731:
 10144  001BD6  EF87  F00D         	goto	l3729
 10145  001BDA                     u2730:
 10146  001BDA  0E00               	movlw	0
 10147  001BDC  6E0A               	movwf	(?_strncmp+1)^0,c
 10148  001BDE  0E00               	movlw	0
 10149  001BE0  6E09               	movwf	?_strncmp^0,c
 10150  001BE2                     l1524:
 10151  001BE2  0012               	return		;funcret
 10152  001BE4                     __end_of_strncmp:
 10153                           	opt callstack 0
 10154                           
 10155 ;; *************** function _strchr *****************
 10156 ;; Defined at:
 10157 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strchr.c"
 10158 ;; Parameters:    Size  Location     Type
 10159 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
 10160 ;;		 -> STR_32(2), STR_31(2), STR_30(2), STR_29(2), 
 10161 ;;		 -> STR_28(2), STR_27(2), STR_24(2), STR_23(2), 
 10162 ;;		 -> STR_22(2), A6_NetworkGetRSSI@response(32), STR_19(2), STR_18(2), 
 10163 ;;		 -> STR_17(2), STR_16(2), A6_NetworkGetStatus@response(32), STR_10(2), 
 10164 ;;		 -> STR_9(2), A6_BaudRateGet@response(32), NULL(0), loop@operator(32), 
 10165 ;;  chr             2    6[COMRAM] int 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;		None
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  2    4[COMRAM] PTR unsigned char 
 10170 ;; Registers used:
 10171 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10177 ;;      Params:         4       0       0       0       0       0       0       0       0
 10178 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10179 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10180 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10181 ;;Total ram usage:        6 bytes
 10182 ;; Hardware stack levels used:    1
 10183 ;; Hardware stack levels required when called:    2
 10184 ;; This function calls:
 10185 ;;		Nothing
 10186 ;; This function is called by:
 10187 ;;		_strstr
 10188 ;;		_strcspn
 10189 ;;		_strspn
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192                           
 10193                           	psect	text50
 10194  0022E8                     __ptext50:
 10195                           	opt callstack 0
 10196  0022E8                     _strchr:
 10197                           	opt callstack 23
 10198  0022E8                     l1503:
 10199  0022E8  C005  FFF6         	movff	strchr@ptr,tblptrl
 10200  0022EC  C006  FFF7         	movff	strchr@ptr+1,tblptrh
 10201  0022F0  6AF8               	clrf	tblptru,c
 10202  0022F2  0E07               	movlw	(high __ramtop+-1)
 10203  0022F4  64F7               	cpfsgt	tblptrh,c
 10204  0022F6  D003               	bra	u2327
 10205  0022F8  0008               	tblrd		*
 10206  0022FA  50F5               	movf	tablat,w,c
 10207  0022FC  D005               	bra	u2320
 10208  0022FE                     u2327:
 10209  0022FE  CFF6 FFE1          	movff	tblptrl,fsr1l
 10210  002302  CFF7 FFE2          	movff	tblptrh,fsr1h
 10211  002306  50E7               	movf	indf1,w,c
 10212  002308                     u2320:
 10213  002308  1807               	xorwf	strchr@chr^0,w,c
 10214  00230A  A4D8               	btfss	status,2,c
 10215  00230C  EF8A  F011         	goto	u2331
 10216  002310  EF8C  F011         	goto	u2330
 10217  002314                     u2331:
 10218  002314  EF92  F011         	goto	l3517
 10219  002318                     u2330:
 10220  002318  C005  F005         	movff	strchr@ptr,?_strchr
 10221  00231C  C006  F006         	movff	strchr@ptr+1,?_strchr+1
 10222  002320  EFB4  F011         	goto	l1505
 10223  002324                     l3517:
 10224  002324  5005               	movf	strchr@ptr^0,w,c
 10225  002326  6E09               	movwf	??_strchr^0,c
 10226  002328  5006               	movf	(strchr@ptr+1)^0,w,c
 10227  00232A  6E0A               	movwf	(??_strchr+1)^0,c
 10228  00232C  4A05               	infsnz	strchr@ptr^0,f,c
 10229  00232E  2A06               	incf	(strchr@ptr+1)^0,f,c
 10230  002330  C009  FFF6         	movff	??_strchr,tblptrl
 10231  002334  C00A  FFF7         	movff	??_strchr+1,tblptrh
 10232  002338  6AF8               	clrf	tblptru,c
 10233  00233A  0E07               	movlw	(high __ramtop+-1)
 10234  00233C  64F7               	cpfsgt	tblptrh,c
 10235  00233E  D003               	bra	u2347
 10236  002340  0008               	tblrd		*
 10237  002342  50F5               	movf	tablat,w,c
 10238  002344  D005               	bra	u2340
 10239  002346                     u2347:
 10240  002346  CFF6 FFE1          	movff	tblptrl,fsr1l
 10241  00234A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10242  00234E  50E7               	movf	indf1,w,c
 10243  002350                     u2340:
 10244  002350  0900               	iorlw	0
 10245  002352  A4D8               	btfss	status,2,c
 10246  002354  EFAE  F011         	goto	u2351
 10247  002358  EFB0  F011         	goto	u2350
 10248  00235C                     u2351:
 10249  00235C  EF74  F011         	goto	l1503
 10250  002360                     u2350:
 10251  002360  0E00               	movlw	0
 10252  002362  6E05               	movwf	?_strchr^0,c
 10253  002364  0E00               	movlw	0
 10254  002366  6E06               	movwf	(?_strchr+1)^0,c
 10255  002368                     l1505:
 10256  002368  0012               	return		;funcret
 10257  00236A                     __end_of_strchr:
 10258                           	opt callstack 0
 10259                           
 10260 ;; *************** function _atol *****************
 10261 ;; Defined at:
 10262 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atol.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  s               2   16[COMRAM] PTR const unsigned char 
 10265 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
 10266 ;;		 -> loop@operator(32), 
 10267 ;; Auto vars:     Size  Location     Type
 10268 ;;  a               4   25[COMRAM] long 
 10269 ;;  c               1   29[COMRAM] unsigned char 
 10270 ;;  sign            1   24[COMRAM] unsigned char 
 10271 ;; Return value:  Size  Location     Type
 10272 ;;                  4   16[COMRAM] long 
 10273 ;; Registers used:
 10274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10275 ;; Tracked objects:
 10276 ;;		On entry : 0/0
 10277 ;;		On exit  : 0/0
 10278 ;;		Unchanged: 0/0
 10279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10280 ;;      Params:         4       0       0       0       0       0       0       0       0
 10281 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10282 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10283 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10284 ;;Total ram usage:       14 bytes
 10285 ;; Hardware stack levels used:    1
 10286 ;; Hardware stack levels required when called:    3
 10287 ;; This function calls:
 10288 ;;		___lmul
 10289 ;;		_isdigit
 10290 ;; This function is called by:
 10291 ;;		_A6_BaudRateGet
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text51
 10296  001224                     __ptext51:
 10297                           	opt callstack 0
 10298  001224                     _atol:
 10299                           	opt callstack 24
 10300  001224                     l1431:
 10301  001224  C011  FFD9         	movff	atol@s,fsr2l
 10302  001228  C012  FFDA         	movff	atol@s+1,fsr2h
 10303  00122C  50DF               	movf	indf2,w,c
 10304  00122E  6E1E               	movwf	atol@c^0,c
 10305  001230  4A11               	infsnz	atol@s^0,f,c
 10306  001232  2A12               	incf	(atol@s+1)^0,f,c
 10307  001234  0E20               	movlw	32
 10308  001236  181E               	xorwf	atol@c^0,w,c
 10309  001238  B4D8               	btfsc	status,2,c
 10310  00123A  EF21  F009         	goto	u3191
 10311  00123E  EF23  F009         	goto	u3190
 10312  001242                     u3191:
 10313  001242  EF12  F009         	goto	l1431
 10314  001246                     u3190:
 10315  001246  0E09               	movlw	9
 10316  001248  181E               	xorwf	atol@c^0,w,c
 10317  00124A  B4D8               	btfsc	status,2,c
 10318  00124C  EF2A  F009         	goto	u3201
 10319  001250  EF2C  F009         	goto	u3200
 10320  001254                     u3201:
 10321  001254  EF12  F009         	goto	l1431
 10322  001258                     u3200:
 10323  001258  0E00               	movlw	0
 10324  00125A  6E1A               	movwf	atol@a^0,c
 10325  00125C  0E00               	movlw	0
 10326  00125E  6E1B               	movwf	(atol@a+1)^0,c
 10327  001260  0E00               	movlw	0
 10328  001262  6E1C               	movwf	(atol@a+2)^0,c
 10329  001264  0E00               	movlw	0
 10330  001266  6E1D               	movwf	(atol@a+3)^0,c
 10331  001268  0E00               	movlw	0
 10332  00126A  6E19               	movwf	atol@sign^0,c
 10333  00126C  0E2D               	movlw	45
 10334  00126E  181E               	xorwf	atol@c^0,w,c
 10335  001270  A4D8               	btfss	status,2,c
 10336  001272  EF3D  F009         	goto	u3211
 10337  001276  EF3F  F009         	goto	u3210
 10338  00127A                     u3211:
 10339  00127A  EF4A  F009         	goto	l4069
 10340  00127E                     u3210:
 10341  00127E  2A19               	incf	atol@sign^0,f,c
 10342  001280                     l4065:
 10343  001280  C011  FFD9         	movff	atol@s,fsr2l
 10344  001284  C012  FFDA         	movff	atol@s+1,fsr2h
 10345  001288  50DF               	movf	indf2,w,c
 10346  00128A  6E1E               	movwf	atol@c^0,c
 10347  00128C  4A11               	infsnz	atol@s^0,f,c
 10348  00128E  2A12               	incf	(atol@s+1)^0,f,c
 10349  001290  EF79  F009         	goto	l4081
 10350  001294                     l4069:
 10351  001294  0E2B               	movlw	43
 10352  001296  181E               	xorwf	atol@c^0,w,c
 10353  001298  A4D8               	btfss	status,2,c
 10354  00129A  EF51  F009         	goto	u3221
 10355  00129E  EF53  F009         	goto	u3220
 10356  0012A2                     u3221:
 10357  0012A2  EF79  F009         	goto	l4081
 10358  0012A6                     u3220:
 10359  0012A6  EF40  F009         	goto	l4065
 10360  0012AA                     l4075:
 10361  0012AA  C01A  F005         	movff	atol@a,___lmul@multiplier
 10362  0012AE  C01B  F006         	movff	atol@a+1,___lmul@multiplier+1
 10363  0012B2  C01C  F007         	movff	atol@a+2,___lmul@multiplier+2
 10364  0012B6  C01D  F008         	movff	atol@a+3,___lmul@multiplier+3
 10365  0012BA  0E0A               	movlw	10
 10366  0012BC  6E09               	movwf	___lmul@multiplicand^0,c
 10367  0012BE  0E00               	movlw	0
 10368  0012C0  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
 10369  0012C2  0E00               	movlw	0
 10370  0012C4  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
 10371  0012C6  0E00               	movlw	0
 10372  0012C8  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
 10373  0012CA  EC4F  F013         	call	___lmul	;wreg free
 10374  0012CE  C01E  F015         	movff	atol@c,??_atol
 10375  0012D2  0ED0               	movlw	208
 10376  0012D4  2615               	addwf	??_atol^0,f,c
 10377  0012D6  5015               	movf	??_atol^0,w,c
 10378  0012D8  2405               	addwf	?___lmul^0,w,c
 10379  0012DA  6E1A               	movwf	atol@a^0,c
 10380  0012DC  0E00               	movlw	0
 10381  0012DE  2006               	addwfc	(?___lmul+1)^0,w,c
 10382  0012E0  6E1B               	movwf	(atol@a+1)^0,c
 10383  0012E2  0E00               	movlw	0
 10384  0012E4  2007               	addwfc	(?___lmul+2)^0,w,c
 10385  0012E6  6E1C               	movwf	(atol@a+2)^0,c
 10386  0012E8  0E00               	movlw	0
 10387  0012EA  2008               	addwfc	(?___lmul+3)^0,w,c
 10388  0012EC  6E1D               	movwf	(atol@a+3)^0,c
 10389  0012EE  EF40  F009         	goto	l4065
 10390  0012F2                     l4081:
 10391  0012F2  501E               	movf	atol@c^0,w,c
 10392  0012F4  EC3D  F017         	call	_isdigit
 10393  0012F8  B0D8               	btfsc	status,0,c
 10394  0012FA  EF81  F009         	goto	u3231
 10395  0012FE  EF83  F009         	goto	u3230
 10396  001302                     u3231:
 10397  001302  EF55  F009         	goto	l4075
 10398  001306                     u3230:
 10399  001306  5019               	movf	atol@sign^0,w,c
 10400  001308  B4D8               	btfsc	status,2,c
 10401  00130A  EF89  F009         	goto	u3241
 10402  00130E  EF8B  F009         	goto	u3240
 10403  001312                     u3241:
 10404  001312  EFA6  F009         	goto	l1439
 10405  001316                     u3240:
 10406  001316  C01A  F015         	movff	atol@a,??_atol
 10407  00131A  C01B  F016         	movff	atol@a+1,??_atol+1
 10408  00131E  C01C  F017         	movff	atol@a+2,??_atol+2
 10409  001322  C01D  F018         	movff	atol@a+3,??_atol+3
 10410  001326  1E15               	comf	??_atol^0,f,c
 10411  001328  1E16               	comf	(??_atol+1)^0,f,c
 10412  00132A  1E17               	comf	(??_atol+2)^0,f,c
 10413  00132C  1E18               	comf	(??_atol+3)^0,f,c
 10414  00132E  2A15               	incf	??_atol^0,f,c
 10415  001330  0E00               	movlw	0
 10416  001332  2216               	addwfc	(??_atol+1)^0,f,c
 10417  001334  2217               	addwfc	(??_atol+2)^0,f,c
 10418  001336  2218               	addwfc	(??_atol+3)^0,f,c
 10419  001338  C015  F011         	movff	??_atol,?_atol
 10420  00133C  C016  F012         	movff	??_atol+1,?_atol+1
 10421  001340  C017  F013         	movff	??_atol+2,?_atol+2
 10422  001344  C018  F014         	movff	??_atol+3,?_atol+3
 10423  001348  EFAE  F009         	goto	l1440
 10424  00134C                     l1439:
 10425  00134C  C01A  F011         	movff	atol@a,?_atol
 10426  001350  C01B  F012         	movff	atol@a+1,?_atol+1
 10427  001354  C01C  F013         	movff	atol@a+2,?_atol+2
 10428  001358  C01D  F014         	movff	atol@a+3,?_atol+3
 10429  00135C                     l1440:
 10430  00135C  0012               	return		;funcret
 10431  00135E                     __end_of_atol:
 10432                           	opt callstack 0
 10433                           
 10434 ;; *************** function _isdigit *****************
 10435 ;; Defined at:
 10436 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;  c               1    wreg     unsigned char 
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;  c               1    6[COMRAM] unsigned char 
 10441 ;; Return value:  Size  Location     Type
 10442 ;;		None               void
 10443 ;; Registers used:
 10444 ;;		wreg, status,2, status,0
 10445 ;; Tracked objects:
 10446 ;;		On entry : 0/0
 10447 ;;		On exit  : 0/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10450 ;;      Params:         0       0       0       0       0       0       0       0       0
 10451 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10452 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10453 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10454 ;;Total ram usage:        3 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:    2
 10457 ;; This function calls:
 10458 ;;		Nothing
 10459 ;; This function is called by:
 10460 ;;		_sprintf
 10461 ;;		_atoi
 10462 ;;		_atol
 10463 ;; This function uses a non-reentrant model
 10464 ;;
 10465                           
 10466                           	psect	text52
 10467  002E7A                     __ptext52:
 10468                           	opt callstack 0
 10469  002E7A                     _isdigit:
 10470                           	opt callstack 24
 10471                           
 10472                           ;incstack = 0
 10473                           ;isdigit@c stored from wreg
 10474  002E7A  6E07               	movwf	isdigit@c^0,c
 10475  002E7C  0E00               	movlw	0
 10476  002E7E  6E06               	movwf	_isdigit$1960^0,c
 10477  002E80  0E3A               	movlw	58
 10478  002E82  6007               	cpfslt	isdigit@c^0,c
 10479  002E84  EF46  F017         	goto	u2561
 10480  002E88  EF48  F017         	goto	u2560
 10481  002E8C                     u2561:
 10482  002E8C  EF52  F017         	goto	l3653
 10483  002E90                     u2560:
 10484  002E90  0E2F               	movlw	47
 10485  002E92  6407               	cpfsgt	isdigit@c^0,c
 10486  002E94  EF4E  F017         	goto	u2571
 10487  002E98  EF50  F017         	goto	u2570
 10488  002E9C                     u2571:
 10489  002E9C  EF52  F017         	goto	l3653
 10490  002EA0                     u2570:
 10491  002EA0  0E01               	movlw	1
 10492  002EA2  6E06               	movwf	_isdigit$1960^0,c
 10493  002EA4                     l3653:
 10494  002EA4  C006  F005         	movff	_isdigit$1960,??_isdigit
 10495  002EA8  3005               	rrcf	??_isdigit^0,w,c
 10496  002EAA  0012               	return		;funcret
 10497  002EAC                     __end_of_isdigit:
 10498                           	opt callstack 0
 10499                           
 10500 ;; *************** function ___lmul *****************
 10501 ;; Defined at:
 10502 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  multiplier      4    4[COMRAM] unsigned long 
 10505 ;;  multiplicand    4    8[COMRAM] unsigned long 
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;  product         4   12[COMRAM] unsigned long 
 10508 ;; Return value:  Size  Location     Type
 10509 ;;                  4    4[COMRAM] unsigned long 
 10510 ;; Registers used:
 10511 ;;		wreg, status,2, status,0
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10517 ;;      Params:         8       0       0       0       0       0       0       0       0
 10518 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10519 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10520 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10521 ;;Total ram usage:       12 bytes
 10522 ;; Hardware stack levels used:    1
 10523 ;; Hardware stack levels required when called:    2
 10524 ;; This function calls:
 10525 ;;		Nothing
 10526 ;; This function is called by:
 10527 ;;		_atol
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           	psect	text53
 10532  00269E                     __ptext53:
 10533                           	opt callstack 0
 10534  00269E                     ___lmul:
 10535                           	opt callstack 24
 10536  00269E  0E00               	movlw	0
 10537  0026A0  6E0D               	movwf	___lmul@product^0,c
 10538  0026A2  0E00               	movlw	0
 10539  0026A4  6E0E               	movwf	(___lmul@product+1)^0,c
 10540  0026A6  0E00               	movlw	0
 10541  0026A8  6E0F               	movwf	(___lmul@product+2)^0,c
 10542  0026AA  0E00               	movlw	0
 10543  0026AC  6E10               	movwf	(___lmul@product+3)^0,c
 10544  0026AE                     l3659:
 10545  0026AE  A005               	btfss	___lmul@multiplier^0,0,c
 10546  0026B0  EF5C  F013         	goto	u2581
 10547  0026B4  EF5E  F013         	goto	u2580
 10548  0026B8                     u2581:
 10549  0026B8  EF66  F013         	goto	l3663
 10550  0026BC                     u2580:
 10551  0026BC  5009               	movf	___lmul@multiplicand^0,w,c
 10552  0026BE  260D               	addwf	___lmul@product^0,f,c
 10553  0026C0  500A               	movf	(___lmul@multiplicand+1)^0,w,c
 10554  0026C2  220E               	addwfc	(___lmul@product+1)^0,f,c
 10555  0026C4  500B               	movf	(___lmul@multiplicand+2)^0,w,c
 10556  0026C6  220F               	addwfc	(___lmul@product+2)^0,f,c
 10557  0026C8  500C               	movf	(___lmul@multiplicand+3)^0,w,c
 10558  0026CA  2210               	addwfc	(___lmul@product+3)^0,f,c
 10559  0026CC                     l3663:
 10560  0026CC  90D8               	bcf	status,0,c
 10561  0026CE  3609               	rlcf	___lmul@multiplicand^0,f,c
 10562  0026D0  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
 10563  0026D2  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
 10564  0026D4  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
 10565  0026D6  90D8               	bcf	status,0,c
 10566  0026D8  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
 10567  0026DA  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
 10568  0026DC  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
 10569  0026DE  3205               	rrcf	___lmul@multiplier^0,f,c
 10570  0026E0  5005               	movf	___lmul@multiplier^0,w,c
 10571  0026E2  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
 10572  0026E4  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
 10573  0026E6  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
 10574  0026E8  A4D8               	btfss	status,2,c
 10575  0026EA  EF79  F013         	goto	u2591
 10576  0026EE  EF7B  F013         	goto	u2590
 10577  0026F2                     u2591:
 10578  0026F2  EF57  F013         	goto	l3659
 10579  0026F6                     u2590:
 10580  0026F6  C00D  F005         	movff	___lmul@product,?___lmul
 10581  0026FA  C00E  F006         	movff	___lmul@product+1,?___lmul+1
 10582  0026FE  C00F  F007         	movff	___lmul@product+2,?___lmul+2
 10583  002702  C010  F008         	movff	___lmul@product+3,?___lmul+3
 10584  002706  0012               	return		;funcret
 10585  002708                     __end_of___lmul:
 10586                           	opt callstack 0
 10587                           
 10588 ;; *************** function _A6_BaudRateAutoDetect *****************
 10589 ;; Defined at:
 10590 ;;		line 111 in file "A6Lib.c"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;  i               1   62[COMRAM] unsigned char 
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  4  485[None  ] unsigned long 
 10597 ;; Registers used:
 10598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10604 ;;      Params:         0       0       0       0       0       0       0       0       0
 10605 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10606 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10607 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10608 ;;Total ram usage:        1 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    7
 10611 ;; This function calls:
 10612 ;;		_A6_IsAlive
 10613 ;;		_EUSART_BaudRateSet
 10614 ;;		_sleepMS
 10615 ;; This function is called by:
 10616 ;;		_A6_Init
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           	psect	text54
 10621  0025C0                     __ptext54:
 10622                           	opt callstack 0
 10623  0025C0                     _A6_BaudRateAutoDetect:
 10624                           	opt callstack 22
 10625  0025C0                     
 10626                           ;A6Lib.c: 112: for(uint8_t i=0; i<3; i++) {
 10627  0025C0  0E00               	movlw	0
 10628  0025C2  6E3F               	movwf	A6_BaudRateAutoDetect@i^0,c
 10629  0025C4                     l4349:
 10630                           
 10631                           ;A6Lib.c: 113: EUSART_BaudRateSet(A6_BAUDRATES[i]);
 10632  0025C4  503F               	movf	A6_BaudRateAutoDetect@i^0,w,c
 10633  0025C6  0D04               	mullw	4
 10634  0025C8  0E21               	movlw	low _A6_BAUDRATES
 10635  0025CA  24F3               	addwf	243,w,c
 10636  0025CC  6EF6               	movwf	tblptrl,c
 10637  0025CE  0E5F               	movlw	high _A6_BAUDRATES
 10638  0025D0  20F4               	addwfc	244,w,c
 10639  0025D2  6EF7               	movwf	tblptrh,c
 10640  0025D4                     	if	0	;There are less than 3 active tblptr bytes
 10641  0025D4                     	endif
 10642  0025D4  0009               	tblrd		*+
 10643  0025D6  CFF5 F012          	movff	tablat,EUSART_BaudRateSet@baudRate
 10644  0025DA  0009               	tblrd		*+
 10645  0025DC  CFF5 F013          	movff	tablat,EUSART_BaudRateSet@baudRate+1
 10646  0025E0  0009               	tblrd		*+
 10647  0025E2  CFF5 F014          	movff	tablat,EUSART_BaudRateSet@baudRate+2
 10648  0025E6  000A               	tblrd		*-
 10649  0025E8  CFF5 F015          	movff	tablat,EUSART_BaudRateSet@baudRate+3
 10650  0025EC  EC32  F011         	call	_EUSART_BaudRateSet	;wreg free
 10651  0025F0                     
 10652                           ;A6Lib.c: 114: if(A6_IsAlive() == 1) {
 10653  0025F0  EC26  F015         	call	_A6_IsAlive	;wreg free
 10654  0025F4  06E8               	decf	wreg,f,c
 10655  0025F6  A4D8               	btfss	status,2,c
 10656  0025F8  EF00  F013         	goto	u3621
 10657  0025FC  EF02  F013         	goto	u3620
 10658  002600                     u3621:
 10659  002600  EF04  F013         	goto	l4355
 10660  002604                     u3620:
 10661  002604  EF17  F013         	goto	l587
 10662  002608                     l4355:
 10663                           
 10664                           ;A6Lib.c: 116: };A6Lib.c: 117: sleepMS(100);
 10665  002608  0E64               	movlw	100
 10666  00260A  6E05               	movwf	sleepMS@ms^0,c
 10667  00260C  0E00               	movlw	0
 10668  00260E  6E06               	movwf	(sleepMS@ms+1)^0,c
 10669  002610  0E00               	movlw	0
 10670  002612  6E07               	movwf	(sleepMS@ms+2)^0,c
 10671  002614  0E00               	movlw	0
 10672  002616  6E08               	movwf	(sleepMS@ms+3)^0,c
 10673  002618  ECCF  F016         	call	_sleepMS	;wreg free
 10674  00261C  2A3F               	incf	A6_BaudRateAutoDetect@i^0,f,c
 10675  00261E  0E02               	movlw	2
 10676  002620  643F               	cpfsgt	A6_BaudRateAutoDetect@i^0,c
 10677  002622  EF15  F013         	goto	u3631
 10678  002626  EF17  F013         	goto	u3630
 10679  00262A                     u3631:
 10680  00262A  EFE2  F012         	goto	l4349
 10681  00262E                     u3630:
 10682  00262E                     l587:
 10683  00262E  0012               	return		;funcret
 10684  002630                     __end_of_A6_BaudRateAutoDetect:
 10685                           	opt callstack 0
 10686                           
 10687 ;; *************** function _sleepMS *****************
 10688 ;; Defined at:
 10689 ;;		line 91 in file "init.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;  ms              4    4[COMRAM] unsigned long 
 10692 ;; Auto vars:     Size  Location     Type
 10693 ;;  t               4    8[COMRAM] unsigned long 
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  1    wreg      void 
 10696 ;; Registers used:
 10697 ;;		wreg, status,2, status,0
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10703 ;;      Params:         4       0       0       0       0       0       0       0       0
 10704 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10706 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10707 ;;Total ram usage:        8 bytes
 10708 ;; Hardware stack levels used:    1
 10709 ;; Hardware stack levels required when called:    2
 10710 ;; This function calls:
 10711 ;;		Nothing
 10712 ;; This function is called by:
 10713 ;;		_A6_BaudRateSet
 10714 ;;		_A6_BaudRateAutoDetect
 10715 ;; This function uses a non-reentrant model
 10716 ;;
 10717                           
 10718                           	psect	text55
 10719  002D9E                     __ptext55:
 10720                           	opt callstack 0
 10721  002D9E                     _sleepMS:
 10722                           	opt callstack 26
 10723  002D9E                     
 10724                           ;init.c: 92: uint32_t t = MILLISECONDS + ms;
 10725  002D9E  5005               	movf	sleepMS@ms^0,w,c
 10726  002DA0  0100               	movlb	0	; () banked
 10727  002DA2  25CC               	addwf	_MILLISECONDS& (0+255),w,b
 10728  002DA4  6E09               	movwf	sleepMS@t^0,c
 10729  002DA6  5006               	movf	(sleepMS@ms+1)^0,w,c
 10730  002DA8  21CD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
 10731  002DAA  6E0A               	movwf	(sleepMS@t+1)^0,c
 10732  002DAC  5007               	movf	(sleepMS@ms+2)^0,w,c
 10733  002DAE  21CE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
 10734  002DB0  6E0B               	movwf	(sleepMS@t+2)^0,c
 10735  002DB2  5008               	movf	(sleepMS@ms+3)^0,w,c
 10736  002DB4  21CF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
 10737  002DB6  6E0C               	movwf	(sleepMS@t+3)^0,c
 10738  002DB8                     l4119:
 10739                           
 10740                           ; BSR set to: 0
 10741  002DB8  5009               	movf	sleepMS@t^0,w,c
 10742  002DBA  5DCC               	subwf	_MILLISECONDS& (0+255),w,b
 10743  002DBC  500A               	movf	(sleepMS@t+1)^0,w,c
 10744  002DBE  59CD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
 10745  002DC0  500B               	movf	(sleepMS@t+2)^0,w,c
 10746  002DC2  59CE               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
 10747  002DC4  500C               	movf	(sleepMS@t+3)^0,w,c
 10748  002DC6  59CF               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
 10749  002DC8  A0D8               	btfss	status,0,c
 10750  002DCA  EFE9  F016         	goto	u3311
 10751  002DCE  EFEB  F016         	goto	u3310
 10752  002DD2                     u3311:
 10753  002DD2  EFDC  F016         	goto	l4119
 10754  002DD6                     u3310:
 10755  002DD6                     
 10756                           ; BSR set to: 0
 10757  002DD6  0012               	return		;funcret
 10758  002DD8                     __end_of_sleepMS:
 10759                           	opt callstack 0
 10760                           
 10761 ;; *************** function _EUSART_BaudRateSet *****************
 10762 ;; Defined at:
 10763 ;;		line 41 in file "EUSART.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  baudRate        4   17[COMRAM] const unsigned long 
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;  tmp             4   25[COMRAM] unsigned long 
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  1    wreg      void 
 10770 ;; Registers used:
 10771 ;;		wreg, status,2, status,0, cstack
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10777 ;;      Params:         4       0       0       0       0       0       0       0       0
 10778 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10779 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10780 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10781 ;;Total ram usage:       12 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:    3
 10784 ;; This function calls:
 10785 ;;		___lldiv
 10786 ;; This function is called by:
 10787 ;;		_A6_BaudRateSet
 10788 ;;		_A6_BaudRateAutoDetect
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           	psect	text56
 10793  002264                     __ptext56:
 10794                           	opt callstack 0
 10795  002264                     _EUSART_BaudRateSet:
 10796                           	opt callstack 25
 10797  002264                     
 10798                           ;EUSART.c: 42: TXSTAbits.SYNC = 0;
 10799  002264  98AC               	bcf	172,4,c	;volatile
 10800                           
 10801                           ;EUSART.c: 43: TXSTAbits.BRGH = 1;
 10802  002266  84AC               	bsf	172,2,c	;volatile
 10803                           
 10804                           ;EUSART.c: 44: BAUDCONbits.BRG16 = 1;
 10805  002268  86B8               	bsf	184,3,c	;volatile
 10806  00226A                     
 10807                           ;EUSART.c: 46: uint32_t tmp = (48000000 / baudRate);
 10808  00226A  0E00               	movlw	0
 10809  00226C  6E05               	movwf	___lldiv@dividend^0,c
 10810  00226E  0E6C               	movlw	108
 10811  002270  6E06               	movwf	(___lldiv@dividend+1)^0,c
 10812  002272  0EDC               	movlw	220
 10813  002274  6E07               	movwf	(___lldiv@dividend+2)^0,c
 10814  002276  0E02               	movlw	2
 10815  002278  6E08               	movwf	(___lldiv@dividend+3)^0,c
 10816  00227A  C012  F009         	movff	EUSART_BaudRateSet@baudRate,___lldiv@divisor
 10817  00227E  C013  F00A         	movff	EUSART_BaudRateSet@baudRate+1,___lldiv@divisor+1
 10818  002282  C014  F00B         	movff	EUSART_BaudRateSet@baudRate+2,___lldiv@divisor+2
 10819  002286  C015  F00C         	movff	EUSART_BaudRateSet@baudRate+3,___lldiv@divisor+3
 10820  00228A  EC7F  F00F         	call	___lldiv	;wreg free
 10821  00228E  C005  F01A         	movff	?___lldiv,EUSART_BaudRateSet@tmp
 10822  002292  C006  F01B         	movff	?___lldiv+1,EUSART_BaudRateSet@tmp+1
 10823  002296  C007  F01C         	movff	?___lldiv+2,EUSART_BaudRateSet@tmp+2
 10824  00229A  C008  F01D         	movff	?___lldiv+3,EUSART_BaudRateSet@tmp+3
 10825  00229E                     
 10826                           ;EUSART.c: 47: tmp = tmp / 4;
 10827  00229E  C01A  F016         	movff	EUSART_BaudRateSet@tmp,??_EUSART_BaudRateSet
 10828  0022A2  C01B  F017         	movff	EUSART_BaudRateSet@tmp+1,??_EUSART_BaudRateSet+1
 10829  0022A6  C01C  F018         	movff	EUSART_BaudRateSet@tmp+2,??_EUSART_BaudRateSet+2
 10830  0022AA  C01D  F019         	movff	EUSART_BaudRateSet@tmp+3,??_EUSART_BaudRateSet+3
 10831  0022AE  0E03               	movlw	3
 10832  0022B0  EF5F  F011         	goto	u3450
 10833  0022B4                     u3455:
 10834  0022B4  90D8               	bcf	status,0,c
 10835  0022B6  3219               	rrcf	(??_EUSART_BaudRateSet+3)^0,f,c
 10836  0022B8  3218               	rrcf	(??_EUSART_BaudRateSet+2)^0,f,c
 10837  0022BA  3217               	rrcf	(??_EUSART_BaudRateSet+1)^0,f,c
 10838  0022BC  3216               	rrcf	??_EUSART_BaudRateSet^0,f,c
 10839  0022BE                     u3450:
 10840  0022BE  2EE8               	decfsz	wreg,f,c
 10841  0022C0  EF5A  F011         	goto	u3455
 10842  0022C4  C016  F01A         	movff	??_EUSART_BaudRateSet,EUSART_BaudRateSet@tmp
 10843  0022C8  C017  F01B         	movff	??_EUSART_BaudRateSet+1,EUSART_BaudRateSet@tmp+1
 10844  0022CC  C018  F01C         	movff	??_EUSART_BaudRateSet+2,EUSART_BaudRateSet@tmp+2
 10845  0022D0  C019  F01D         	movff	??_EUSART_BaudRateSet+3,EUSART_BaudRateSet@tmp+3
 10846  0022D4                     
 10847                           ;EUSART.c: 48: tmp--;
 10848  0022D4  061A               	decf	EUSART_BaudRateSet@tmp^0,f,c
 10849  0022D6  0E00               	movlw	0
 10850  0022D8  5A1B               	subwfb	(EUSART_BaudRateSet@tmp+1)^0,f,c
 10851  0022DA  5A1C               	subwfb	(EUSART_BaudRateSet@tmp+2)^0,f,c
 10852  0022DC  5A1D               	subwfb	(EUSART_BaudRateSet@tmp+3)^0,f,c
 10853  0022DE                     
 10854                           ;EUSART.c: 50: SPBRG = (uint8_t) tmp;
 10855  0022DE  C01A  FFAF         	movff	EUSART_BaudRateSet@tmp,4015	;volatile
 10856  0022E2                     
 10857                           ;EUSART.c: 51: SPBRGH = (uint8_t) (tmp >> 8);
 10858  0022E2  C01B  FFB0         	movff	EUSART_BaudRateSet@tmp+1,4016	;volatile
 10859  0022E6  0012               	return		;funcret
 10860  0022E8                     __end_of_EUSART_BaudRateSet:
 10861                           	opt callstack 0
 10862                           
 10863 ;; *************** function ___lldiv *****************
 10864 ;; Defined at:
 10865 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  dividend        4    4[COMRAM] unsigned long 
 10868 ;;  divisor         4    8[COMRAM] unsigned long 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;  quotient        4   12[COMRAM] unsigned long 
 10871 ;;  counter         1   16[COMRAM] unsigned char 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  4    4[COMRAM] unsigned long 
 10874 ;; Registers used:
 10875 ;;		wreg, status,2, status,0
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10881 ;;      Params:         8       0       0       0       0       0       0       0       0
 10882 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10883 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10884 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10885 ;;Total ram usage:       13 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    2
 10888 ;; This function calls:
 10889 ;;		Nothing
 10890 ;; This function is called by:
 10891 ;;		_Ecg_ProcessHeartRate
 10892 ;;		_EUSART_BaudRateSet
 10893 ;;		_sprintf
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text57
 10898  001EFE                     __ptext57:
 10899                           	opt callstack 0
 10900  001EFE                     ___lldiv:
 10901                           	opt callstack 24
 10902  001EFE  0E00               	movlw	0
 10903  001F00  6E0D               	movwf	___lldiv@quotient^0,c
 10904  001F02  0E00               	movlw	0
 10905  001F04  6E0E               	movwf	(___lldiv@quotient+1)^0,c
 10906  001F06  0E00               	movlw	0
 10907  001F08  6E0F               	movwf	(___lldiv@quotient+2)^0,c
 10908  001F0A  0E00               	movlw	0
 10909  001F0C  6E10               	movwf	(___lldiv@quotient+3)^0,c
 10910  001F0E  5009               	movf	___lldiv@divisor^0,w,c
 10911  001F10  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
 10912  001F12  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
 10913  001F14  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
 10914  001F16  B4D8               	btfsc	status,2,c
 10915  001F18  EF90  F00F         	goto	u2601
 10916  001F1C  EF92  F00F         	goto	u2600
 10917  001F20                     u2601:
 10918  001F20  EFC8  F00F         	goto	l775
 10919  001F24                     u2600:
 10920  001F24  0E01               	movlw	1
 10921  001F26  6E11               	movwf	___lldiv@counter^0,c
 10922  001F28  EF9C  F00F         	goto	l3675
 10923  001F2C                     l3673:
 10924  001F2C  90D8               	bcf	status,0,c
 10925  001F2E  3609               	rlcf	___lldiv@divisor^0,f,c
 10926  001F30  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
 10927  001F32  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
 10928  001F34  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
 10929  001F36  2A11               	incf	___lldiv@counter^0,f,c
 10930  001F38                     l3675:
 10931  001F38  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
 10932  001F3A  EFA1  F00F         	goto	u2611
 10933  001F3E  EFA3  F00F         	goto	u2610
 10934  001F42                     u2611:
 10935  001F42  EF96  F00F         	goto	l3673
 10936  001F46                     u2610:
 10937  001F46                     l3677:
 10938  001F46  90D8               	bcf	status,0,c
 10939  001F48  360D               	rlcf	___lldiv@quotient^0,f,c
 10940  001F4A  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
 10941  001F4C  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
 10942  001F4E  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
 10943  001F50  5009               	movf	___lldiv@divisor^0,w,c
 10944  001F52  5C05               	subwf	___lldiv@dividend^0,w,c
 10945  001F54  500A               	movf	(___lldiv@divisor+1)^0,w,c
 10946  001F56  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
 10947  001F58  500B               	movf	(___lldiv@divisor+2)^0,w,c
 10948  001F5A  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
 10949  001F5C  500C               	movf	(___lldiv@divisor+3)^0,w,c
 10950  001F5E  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
 10951  001F60  A0D8               	btfss	status,0,c
 10952  001F62  EFB5  F00F         	goto	u2621
 10953  001F66  EFB7  F00F         	goto	u2620
 10954  001F6A                     u2621:
 10955  001F6A  EFC0  F00F         	goto	l3685
 10956  001F6E                     u2620:
 10957  001F6E  5009               	movf	___lldiv@divisor^0,w,c
 10958  001F70  5E05               	subwf	___lldiv@dividend^0,f,c
 10959  001F72  500A               	movf	(___lldiv@divisor+1)^0,w,c
 10960  001F74  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
 10961  001F76  500B               	movf	(___lldiv@divisor+2)^0,w,c
 10962  001F78  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
 10963  001F7A  500C               	movf	(___lldiv@divisor+3)^0,w,c
 10964  001F7C  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
 10965  001F7E  800D               	bsf	___lldiv@quotient^0,0,c
 10966  001F80                     l3685:
 10967  001F80  90D8               	bcf	status,0,c
 10968  001F82  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
 10969  001F84  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
 10970  001F86  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
 10971  001F88  3209               	rrcf	___lldiv@divisor^0,f,c
 10972  001F8A  2E11               	decfsz	___lldiv@counter^0,f,c
 10973  001F8C  EFA3  F00F         	goto	l3677
 10974  001F90                     l775:
 10975  001F90  C00D  F005         	movff	___lldiv@quotient,?___lldiv
 10976  001F94  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
 10977  001F98  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
 10978  001F9C  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
 10979  001FA0  0012               	return		;funcret
 10980  001FA2                     __end_of___lldiv:
 10981                           	opt callstack 0
 10982                           
 10983 ;; *************** function _A6_IsAlive *****************
 10984 ;; Defined at:
 10985 ;;		line 54 in file "A6Lib.c"
 10986 ;; Parameters:    Size  Location     Type
 10987 ;;		None
 10988 ;; Auto vars:     Size  Location     Type
 10989 ;;  response       32   30[COMRAM] unsigned char [32]
 10990 ;; Return value:  Size  Location     Type
 10991 ;;                  1    wreg      unsigned char 
 10992 ;; Registers used:
 10993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10994 ;; Tracked objects:
 10995 ;;		On entry : 0/0
 10996 ;;		On exit  : 0/0
 10997 ;;		Unchanged: 0/0
 10998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10999 ;;      Params:         0       0       0       0       0       0       0       0       0
 11000 ;;      Locals:        32       0       0       0       0       0       0       0       0
 11001 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11002 ;;      Totals:        32       0       0       0       0       0       0       0       0
 11003 ;;Total ram usage:       32 bytes
 11004 ;; Hardware stack levels used:    1
 11005 ;; Hardware stack levels required when called:    6
 11006 ;; This function calls:
 11007 ;;		_A6_Command
 11008 ;;		_strcmp
 11009 ;; This function is called by:
 11010 ;;		_A6_BaudRateSet
 11011 ;;		_A6_BaudRateAutoDetect
 11012 ;; This function uses a non-reentrant model
 11013 ;;
 11014                           
 11015                           	psect	text58
 11016  002A4C                     __ptext58:
 11017                           	opt callstack 0
 11018  002A4C                     _A6_IsAlive:
 11019                           	opt callstack 22
 11020  002A4C                     
 11021                           ;A6Lib.c: 55: char response[32];;A6Lib.c: 56: A6_Command("AT\r", 0, response, 32);
 11022  002A4C  0EEE               	movlw	low STR_5
 11023  002A4E  6E18               	movwf	A6_Command@command^0,c
 11024  002A50  0E5F               	movlw	high STR_5
 11025  002A52  6E19               	movwf	(A6_Command@command+1)^0,c
 11026  002A54  0E00               	movlw	0
 11027  002A56  6E1B               	movwf	(A6_Command@timeout+1)^0,c
 11028  002A58  0E00               	movlw	0
 11029  002A5A  6E1A               	movwf	A6_Command@timeout^0,c
 11030  002A5C  0E1F               	movlw	low A6_IsAlive@response
 11031  002A5E  6E1C               	movwf	A6_Command@response^0,c
 11032  002A60  0E00               	movlw	high A6_IsAlive@response
 11033  002A62  6E1D               	movwf	(A6_Command@response+1)^0,c
 11034  002A64  0E20               	movlw	32
 11035  002A66  6E1E               	movwf	A6_Command@responseLen^0,c
 11036  002A68  ECEF  F010         	call	_A6_Command	;wreg free
 11037  002A6C                     
 11038                           ;A6Lib.c: 57: if(strcmp(response, "OK") == 0) {
 11039  002A6C  0E1F               	movlw	low A6_IsAlive@response
 11040  002A6E  6E05               	movwf	strcmp@s1^0,c
 11041  002A70  0E00               	movlw	high A6_IsAlive@response
 11042  002A72  6E06               	movwf	(strcmp@s1+1)^0,c
 11043  002A74  0EF6               	movlw	low STR_6
 11044  002A76  6E07               	movwf	strcmp@s2^0,c
 11045  002A78  0E5F               	movlw	high STR_6
 11046  002A7A  6E08               	movwf	(strcmp@s2+1)^0,c
 11047  002A7C  EC4E  F014         	call	_strcmp	;wreg free
 11048  002A80  5005               	movf	?_strcmp^0,w,c
 11049  002A82  1006               	iorwf	(?_strcmp+1)^0,w,c
 11050  002A84  A4D8               	btfss	status,2,c
 11051  002A86  EF47  F015         	goto	u3401
 11052  002A8A  EF49  F015         	goto	u3400
 11053  002A8E                     u3401:
 11054  002A8E  EF4C  F015         	goto	l4195
 11055  002A92                     u3400:
 11056  002A92                     
 11057                           ;A6Lib.c: 58: return 1;
 11058  002A92  0E01               	movlw	1
 11059  002A94  EF4D  F015         	goto	l567
 11060  002A98                     l4195:
 11061                           
 11062                           ;A6Lib.c: 59: };A6Lib.c: 60: return 0;
 11063  002A98  0E00               	movlw	0
 11064  002A9A                     l567:
 11065  002A9A  0012               	return		;funcret
 11066  002A9C                     __end_of_A6_IsAlive:
 11067                           	opt callstack 0
 11068                           
 11069 ;; *************** function _strcmp *****************
 11070 ;; Defined at:
 11071 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
 11072 ;; Parameters:    Size  Location     Type
 11073 ;;  s1              2    4[COMRAM] PTR const unsigned char 
 11074 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_IsAlive@response(32), 
 11075 ;;  s2              2    6[COMRAM] PTR const unsigned char 
 11076 ;;		 -> STR_13(3), STR_12(3), STR_6(3), 
 11077 ;; Auto vars:     Size  Location     Type
 11078 ;;  r               1   10[COMRAM] char 
 11079 ;; Return value:  Size  Location     Type
 11080 ;;                  2    4[COMRAM] int 
 11081 ;; Registers used:
 11082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11083 ;; Tracked objects:
 11084 ;;		On entry : 0/0
 11085 ;;		On exit  : 0/0
 11086 ;;		Unchanged: 0/0
 11087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11088 ;;      Params:         4       0       0       0       0       0       0       0       0
 11089 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11090 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11091 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11092 ;;Total ram usage:        7 bytes
 11093 ;; Hardware stack levels used:    1
 11094 ;; Hardware stack levels required when called:    2
 11095 ;; This function calls:
 11096 ;;		Nothing
 11097 ;; This function is called by:
 11098 ;;		_A6_IsAlive
 11099 ;;		_A6_BaudRateSet
 11100 ;;		_A6_Process_Random_Comms
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           	psect	text59
 11105  00289C                     __ptext59:
 11106                           	opt callstack 0
 11107  00289C                     _strcmp:
 11108                           	opt callstack 26
 11109  00289C  EF54  F014         	goto	l3997
 11110  0028A0                     l3995:
 11111  0028A0  4A05               	infsnz	strcmp@s1^0,f,c
 11112  0028A2  2A06               	incf	(strcmp@s1+1)^0,f,c
 11113  0028A4  4A07               	infsnz	strcmp@s2^0,f,c
 11114  0028A6  2A08               	incf	(strcmp@s2+1)^0,f,c
 11115  0028A8                     l3997:
 11116  0028A8  C007  FFF6         	movff	strcmp@s2,tblptrl
 11117  0028AC  C008  FFF7         	movff	strcmp@s2+1,tblptrh
 11118  0028B0                     	if	0	;tblptru may be non-zero
 11119  0028B0                     	endif
 11120  0028B0                     	if	0	;tblptru may be non-zero
 11121  0028B0                     	endif
 11122  0028B0  0008               	tblrd		*
 11123  0028B2  CFF5 F009          	movff	tablat,??_strcmp
 11124  0028B6  C005  FFD9         	movff	strcmp@s1,fsr2l
 11125  0028BA  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 11126  0028BE  50DF               	movf	indf2,w,c
 11127  0028C0  6E0A               	movwf	(??_strcmp+1)^0,c
 11128  0028C2  5009               	movf	??_strcmp^0,w,c
 11129  0028C4  5C0A               	subwf	(??_strcmp+1)^0,w,c
 11130  0028C6  6E0B               	movwf	strcmp@r^0,c
 11131  0028C8  500B               	movf	strcmp@r^0,w,c
 11132  0028CA  A4D8               	btfss	status,2,c
 11133  0028CC  EF6A  F014         	goto	u3091
 11134  0028D0  EF6C  F014         	goto	u3090
 11135  0028D4                     u3091:
 11136  0028D4  EF78  F014         	goto	l4001
 11137  0028D8                     u3090:
 11138  0028D8  C005  FFD9         	movff	strcmp@s1,fsr2l
 11139  0028DC  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 11140  0028E0  50DF               	movf	indf2,w,c
 11141  0028E2  A4D8               	btfss	status,2,c
 11142  0028E4  EF76  F014         	goto	u3101
 11143  0028E8  EF78  F014         	goto	u3100
 11144  0028EC                     u3101:
 11145  0028EC  EF50  F014         	goto	l3995
 11146  0028F0                     u3100:
 11147  0028F0                     l4001:
 11148  0028F0  500B               	movf	strcmp@r^0,w,c
 11149  0028F2  6E05               	movwf	?_strcmp^0,c
 11150  0028F4  6A06               	clrf	(?_strcmp+1)^0,c
 11151  0028F6  BE05               	btfsc	?_strcmp^0,7,c
 11152  0028F8  0606               	decf	(?_strcmp+1)^0,f,c
 11153  0028FA  0012               	return		;funcret
 11154  0028FC                     __end_of_strcmp:
 11155                           	opt callstack 0
 11156                           
 11157 ;; *************** function _A6_Command *****************
 11158 ;; Defined at:
 11159 ;;		line 18 in file "A6Lib.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  command         2   23[COMRAM] PTR const unsigned char 
 11162 ;;		 -> STR_25(10), STR_20(8), STR_14(10), A6_BaudRateSet@request(20), 
 11163 ;;		 -> STR_7(9), STR_5(4), STR_4(13), 
 11164 ;;  timeout         2   25[COMRAM] int 
 11165 ;;  response        2   27[COMRAM] PTR unsigned char 
 11166 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@re
      +sponse(32), 
 11167 ;;		 -> A6_IsAlive@response(32), NULL(0), loop@operator(32), 
 11168 ;;  responseLen     1   29[COMRAM] unsigned char 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;		None
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  1    wreg      void 
 11173 ;; Registers used:
 11174 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11180 ;;      Params:         7       0       0       0       0       0       0       0       0
 11181 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11183 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11184 ;;Total ram usage:        7 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:    5
 11187 ;; This function calls:
 11188 ;;		_A6_ReadLine
 11189 ;;		_EUSART_RX_Flush
 11190 ;;		_EUSART_TX_String
 11191 ;;		_strlen
 11192 ;; This function is called by:
 11193 ;;		_A6_Init
 11194 ;;		_A6_IsAlive
 11195 ;;		_A6_BaudRateGet
 11196 ;;		_A6_BaudRateSet
 11197 ;;		_A6_NetworkGetRSSI
 11198 ;;		_A6_NetworkGetOperator
 11199 ;;		_A6_NetworkGetStatus
 11200 ;; This function uses a non-reentrant model
 11201 ;;
 11202                           
 11203                           	psect	text60
 11204  0021DE                     __ptext60:
 11205                           	opt callstack 0
 11206  0021DE                     _A6_Command:
 11207                           	opt callstack 22
 11208  0021DE                     
 11209                           ;A6Lib.c: 19: A6_LAST_COMMAND_MILLISECONDS += 75;
 11210  0021DE  0E4B               	movlw	75
 11211  0021E0  0100               	movlb	0	; () banked
 11212  0021E2  27C8               	addwf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),f,b
 11213  0021E4  0E00               	movlw	0
 11214  0021E6  23C9               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),f,b
 11215  0021E8  23CA               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),f,b
 11216  0021EA  23CB               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),f,b
 11217  0021EC                     l3981:
 11218                           
 11219                           ; BSR set to: 0
 11220  0021EC  51C8               	movf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),w,b
 11221  0021EE  5DCC               	subwf	_MILLISECONDS& (0+255),w,b
 11222  0021F0  51C9               	movf	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),w,b
 11223  0021F2  59CD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
 11224  0021F4  51CA               	movf	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),w,b
 11225  0021F6  59CE               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
 11226  0021F8  51CB               	movf	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),w,b
 11227  0021FA  59CF               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
 11228  0021FC  A0D8               	btfss	status,0,c
 11229  0021FE  EF03  F011         	goto	u3071
 11230  002202  EF05  F011         	goto	u3070
 11231  002206                     u3071:
 11232  002206  EFF6  F010         	goto	l3981
 11233  00220A                     u3070:
 11234  00220A                     
 11235                           ; BSR set to: 0
 11236                           ;A6Lib.c: 21: A6_LAST_COMMAND_MILLISECONDS = MILLISECONDS;
 11237  00220A  C0CC  F0C8         	movff	_MILLISECONDS,_A6_LAST_COMMAND_MILLISECONDS
 11238  00220E  C0CD  F0C9         	movff	_MILLISECONDS+1,_A6_LAST_COMMAND_MILLISECONDS+1
 11239  002212  C0CE  F0CA         	movff	_MILLISECONDS+2,_A6_LAST_COMMAND_MILLISECONDS+2
 11240  002216  C0CF  F0CB         	movff	_MILLISECONDS+3,_A6_LAST_COMMAND_MILLISECONDS+3
 11241  00221A                     
 11242                           ; BSR set to: 0
 11243                           ;A6Lib.c: 23: EUSART_RX_Flush();
 11244  00221A  ECC3  F017         	call	_EUSART_RX_Flush	;wreg free
 11245  00221E                     
 11246                           ;A6Lib.c: 24: EUSART_TX_String(command, strlen(command));
 11247  00221E  C018  F009         	movff	A6_Command@command,EUSART_TX_String@str
 11248  002222  C019  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
 11249  002226  C018  F005         	movff	A6_Command@command,strlen@s
 11250  00222A  C019  F006         	movff	A6_Command@command+1,strlen@s+1
 11251  00222E  ECC3  F015         	call	_strlen	;wreg free
 11252  002232  5005               	movf	?_strlen^0,w,c
 11253  002234  6E0B               	movwf	EUSART_TX_String@len^0,c
 11254  002236  EC56  F016         	call	_EUSART_TX_String	;wreg free
 11255  00223A                     
 11256                           ;A6Lib.c: 25: if(responseLen != 0) {
 11257  00223A  501E               	movf	A6_Command@responseLen^0,w,c
 11258  00223C  B4D8               	btfsc	status,2,c
 11259  00223E  EF23  F011         	goto	u3081
 11260  002242  EF25  F011         	goto	u3080
 11261  002246                     u3081:
 11262  002246  EF31  F011         	goto	l549
 11263  00224A                     u3080:
 11264  00224A                     
 11265                           ;A6Lib.c: 26: A6_ReadLine(response, responseLen, timeout);
 11266  00224A  C01C  F011         	movff	A6_Command@response,A6_ReadLine@line
 11267  00224E  C01D  F012         	movff	A6_Command@response+1,A6_ReadLine@line+1
 11268  002252  C01E  F013         	movff	A6_Command@responseLen,A6_ReadLine@lineLen
 11269  002256  C01A  F014         	movff	A6_Command@timeout,A6_ReadLine@timeout
 11270  00225A  C01B  F015         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
 11271  00225E  ECF2  F00D         	call	_A6_ReadLine	;wreg free
 11272  002262                     l549:
 11273  002262  0012               	return		;funcret
 11274  002264                     __end_of_A6_Command:
 11275                           	opt callstack 0
 11276                           
 11277 ;; *************** function _strlen *****************
 11278 ;; Defined at:
 11279 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;  s               2    4[COMRAM] PTR const unsigned char 
 11282 ;;		 -> STR_26(8), STR_25(10), STR_21(7), STR_20(8), 
 11283 ;;		 -> STR_15(8), STR_14(10), A6_BaudRateSet@request(20), STR_8(7), 
 11284 ;;		 -> STR_7(9), STR_5(4), STR_4(13), 
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;  cp              2    6[COMRAM] PTR const unsigned char 
 11287 ;;		 -> STR_26(8), STR_25(10), STR_21(7), STR_20(8), 
 11288 ;;		 -> STR_15(8), STR_14(10), A6_BaudRateSet@request(20), STR_8(7), 
 11289 ;;		 -> STR_7(9), STR_5(4), STR_4(13), 
 11290 ;; Return value:  Size  Location     Type
 11291 ;;                  2    4[COMRAM] unsigned int 
 11292 ;; Registers used:
 11293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11294 ;; Tracked objects:
 11295 ;;		On entry : 0/0
 11296 ;;		On exit  : 0/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11299 ;;      Params:         2       0       0       0       0       0       0       0       0
 11300 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11301 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11302 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11303 ;;Total ram usage:        4 bytes
 11304 ;; Hardware stack levels used:    1
 11305 ;; Hardware stack levels required when called:    2
 11306 ;; This function calls:
 11307 ;;		Nothing
 11308 ;; This function is called by:
 11309 ;;		_A6_Command
 11310 ;;		_strstr
 11311 ;; This function uses a non-reentrant model
 11312 ;;
 11313                           
 11314                           	psect	text61
 11315  002B86                     __ptext61:
 11316                           	opt callstack 0
 11317  002B86                     _strlen:
 11318                           	opt callstack 24
 11319  002B86  C005  F007         	movff	strlen@s,strlen@cp
 11320  002B8A  C006  F008         	movff	strlen@s+1,strlen@cp+1
 11321  002B8E  EFCB  F015         	goto	l3597
 11322  002B92                     l3595:
 11323  002B92  4A07               	infsnz	strlen@cp^0,f,c
 11324  002B94  2A08               	incf	(strlen@cp+1)^0,f,c
 11325  002B96                     l3597:
 11326  002B96  C007  FFF6         	movff	strlen@cp,tblptrl
 11327  002B9A  C008  FFF7         	movff	strlen@cp+1,tblptrh
 11328  002B9E  6AF8               	clrf	tblptru,c
 11329  002BA0  0E07               	movlw	(high __ramtop+-1)
 11330  002BA2  64F7               	cpfsgt	tblptrh,c
 11331  002BA4  D003               	bra	u2457
 11332  002BA6  0008               	tblrd		*
 11333  002BA8  50F5               	movf	tablat,w,c
 11334  002BAA  D005               	bra	u2450
 11335  002BAC                     u2457:
 11336  002BAC  CFF6 FFE1          	movff	tblptrl,fsr1l
 11337  002BB0  CFF7 FFE2          	movff	tblptrh,fsr1h
 11338  002BB4  50E7               	movf	indf1,w,c
 11339  002BB6                     u2450:
 11340  002BB6  0900               	iorlw	0
 11341  002BB8  A4D8               	btfss	status,2,c
 11342  002BBA  EFE1  F015         	goto	u2461
 11343  002BBE  EFE3  F015         	goto	u2460
 11344  002BC2                     u2461:
 11345  002BC2  EFC9  F015         	goto	l3595
 11346  002BC6                     u2460:
 11347  002BC6  5005               	movf	strlen@s^0,w,c
 11348  002BC8  5C07               	subwf	strlen@cp^0,w,c
 11349  002BCA  6E05               	movwf	?_strlen^0,c
 11350  002BCC  5006               	movf	(strlen@s+1)^0,w,c
 11351  002BCE  5808               	subwfb	(strlen@cp+1)^0,w,c
 11352  002BD0  6E06               	movwf	(?_strlen+1)^0,c
 11353  002BD2  0012               	return		;funcret
 11354  002BD4                     __end_of_strlen:
 11355                           	opt callstack 0
 11356                           
 11357 ;; *************** function _EUSART_TX_String *****************
 11358 ;; Defined at:
 11359 ;;		line 62 in file "EUSART.c"
 11360 ;; Parameters:    Size  Location     Type
 11361 ;;  str             2    8[COMRAM] PTR const unsigned char 
 11362 ;;		 -> STR_25(10), STR_20(8), STR_14(10), A6_BaudRateSet@request(20), 
 11363 ;;		 -> STR_7(9), STR_5(4), STR_4(13), 
 11364 ;;  len             1   10[COMRAM] unsigned char 
 11365 ;; Auto vars:     Size  Location     Type
 11366 ;;		None
 11367 ;; Return value:  Size  Location     Type
 11368 ;;                  1    wreg      void 
 11369 ;; Registers used:
 11370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11371 ;; Tracked objects:
 11372 ;;		On entry : 0/0
 11373 ;;		On exit  : 0/0
 11374 ;;		Unchanged: 0/0
 11375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11376 ;;      Params:         3       0       0       0       0       0       0       0       0
 11377 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11378 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11379 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11380 ;;Total ram usage:        3 bytes
 11381 ;; Hardware stack levels used:    1
 11382 ;; Hardware stack levels required when called:    3
 11383 ;; This function calls:
 11384 ;;		_EUSART_TX_Char
 11385 ;; This function is called by:
 11386 ;;		_A6_Command
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           	psect	text62
 11391  002CAC                     __ptext62:
 11392                           	opt callstack 0
 11393  002CAC                     _EUSART_TX_String:
 11394                           	opt callstack 23
 11395  002CAC                     
 11396                           ;EUSART.c: 63: while(len--) {
 11397  002CAC  EF6C  F016         	goto	l3609
 11398  002CB0                     l3605:
 11399                           
 11400                           ;EUSART.c: 64: EUSART_TX_Char(*str++);
 11401  002CB0  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
 11402  002CB4  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
 11403  002CB8  6AF8               	clrf	tblptru,c
 11404  002CBA  0E07               	movlw	(high __ramtop+-1)
 11405  002CBC  64F7               	cpfsgt	tblptrh,c
 11406  002CBE  D003               	bra	u2477
 11407  002CC0  0008               	tblrd		*
 11408  002CC2  50F5               	movf	tablat,w,c
 11409  002CC4  D005               	bra	u2470
 11410  002CC6                     u2477:
 11411  002CC6  CFF6 FFE1          	movff	tblptrl,fsr1l
 11412  002CCA  CFF7 FFE2          	movff	tblptrh,fsr1h
 11413  002CCE  50E7               	movf	indf1,w,c
 11414  002CD0                     u2470:
 11415  002CD0  ECB4  F017         	call	_EUSART_TX_Char
 11416  002CD4  4A09               	infsnz	EUSART_TX_String@str^0,f,c
 11417  002CD6  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
 11418  002CD8                     l3609:
 11419  002CD8  060B               	decf	EUSART_TX_String@len^0,f,c
 11420  002CDA  280B               	incf	EUSART_TX_String@len^0,w,c
 11421  002CDC  A4D8               	btfss	status,2,c
 11422  002CDE  EF73  F016         	goto	u2481
 11423  002CE2  EF75  F016         	goto	u2480
 11424  002CE6                     u2481:
 11425  002CE6  EF58  F016         	goto	l3605
 11426  002CEA                     u2480:
 11427  002CEA  0012               	return		;funcret
 11428  002CEC                     __end_of_EUSART_TX_String:
 11429                           	opt callstack 0
 11430                           
 11431 ;; *************** function _EUSART_TX_Char *****************
 11432 ;; Defined at:
 11433 ;;		line 56 in file "EUSART.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  c               1    wreg     unsigned char 
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;  c               1    4[COMRAM] unsigned char 
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0
 11448 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11449 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11450 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11451 ;;Total ram usage:        1 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:    2
 11454 ;; This function calls:
 11455 ;;		Nothing
 11456 ;; This function is called by:
 11457 ;;		_EUSART_TX_String
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           	psect	text63
 11462  002F68                     __ptext63:
 11463                           	opt callstack 0
 11464  002F68                     _EUSART_TX_Char:
 11465                           	opt callstack 23
 11466                           
 11467                           ;incstack = 0
 11468                           ;EUSART_TX_Char@c stored from wreg
 11469  002F68  6E05               	movwf	EUSART_TX_Char@c^0,c
 11470  002F6A                     l667:
 11471  002F6A  A89E               	btfss	3998,4,c	;volatile
 11472  002F6C  EFBA  F017         	goto	u2311
 11473  002F70  EFBC  F017         	goto	u2310
 11474  002F74                     u2311:
 11475  002F74  EFB5  F017         	goto	l667
 11476  002F78                     u2310:
 11477  002F78                     
 11478                           ;EUSART.c: 58: TXREG = c;
 11479  002F78  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
 11480  002F7C  F000               	nop		;# 
 11481  002F7E  0012               	return		;funcret
 11482  002F80                     __end_of_EUSART_TX_Char:
 11483                           	opt callstack 0
 11484                           
 11485 ;; *************** function _EUSART_RX_Flush *****************
 11486 ;; Defined at:
 11487 ;;		line 82 in file "EUSART.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;		None
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;		None
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		None
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0
 11502 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11503 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11504 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11505 ;;Total ram usage:        0 bytes
 11506 ;; Hardware stack levels used:    1
 11507 ;; Hardware stack levels required when called:    2
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_A6_Command
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text64
 11516  002F86                     __ptext64:
 11517                           	opt callstack 0
 11518  002F86                     _EUSART_RX_Flush:
 11519                           	opt callstack 24
 11520  002F86                     
 11521                           ;EUSART.c: 83: EUSART_RX.iRead = EUSART_RX.iWrite;
 11522  002F86  C101  F100         	movff	_EUSART_RX+1,_EUSART_RX
 11523  002F8A  0012               	return		;funcret
 11524  002F8C                     __end_of_EUSART_RX_Flush:
 11525                           	opt callstack 0
 11526                           
 11527 ;; *************** function _A6_ReadLine *****************
 11528 ;; Defined at:
 11529 ;;		line 31 in file "A6Lib.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;  line            2   16[COMRAM] PTR unsigned char 
 11532 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@response(32), A6_BaudR
      +ateSet@response(32), 
 11533 ;;		 -> A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), loop@operator(32), 
 11534 ;;  lineLen         1   18[COMRAM] unsigned char 
 11535 ;;  timeout         2   19[COMRAM] int 
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;  c               1   22[COMRAM] unsigned char 
 11538 ;;  iResponse       1   21[COMRAM] unsigned char 
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  1    wreg      unsigned char 
 11541 ;; Registers used:
 11542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11548 ;;      Params:         5       0       0       0       0       0       0       0       0
 11549 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11550 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11551 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11552 ;;Total ram usage:        7 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:    4
 11555 ;; This function calls:
 11556 ;;		_EUSART_BufferGetChar
 11557 ;;		_memset
 11558 ;; This function is called by:
 11559 ;;		_A6_Command
 11560 ;;		_A6_Process_Random_Comms
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           	psect	text65
 11565  001BE4                     __ptext65:
 11566                           	opt callstack 0
 11567  001BE4                     _A6_ReadLine:
 11568                           	opt callstack 22
 11569  001BE4                     
 11570                           ;A6Lib.c: 32: char c;;A6Lib.c: 33: memset(line, 0x00, lineLen);
 11571  001BE4  C011  F005         	movff	A6_ReadLine@line,memset@p1
 11572  001BE8  C012  F006         	movff	A6_ReadLine@line+1,memset@p1+1
 11573  001BEC  0E00               	movlw	0
 11574  001BEE  6E08               	movwf	(memset@c+1)^0,c
 11575  001BF0  0E00               	movlw	0
 11576  001BF2  6E07               	movwf	memset@c^0,c
 11577  001BF4  C013  F009         	movff	A6_ReadLine@lineLen,memset@n
 11578  001BF8  6A0A               	clrf	(memset@n+1)^0,c
 11579  001BFA  ECEC  F016         	call	_memset	;wreg free
 11580  001BFE                     l552:
 11581                           
 11582                           ;A6Lib.c: 37: c = EUSART_BufferGetChar(timeout);
 11583  001BFE  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 11584  001C02  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 11585  001C06  ECEA  F015         	call	_EUSART_BufferGetChar	;wreg free
 11586  001C0A  6E17               	movwf	A6_ReadLine@c^0,c
 11587  001C0C                     
 11588                           ;A6Lib.c: 38: if(c == (0)) return 0;
 11589  001C0C  5017               	movf	A6_ReadLine@c^0,w,c
 11590  001C0E  A4D8               	btfss	status,2,c
 11591  001C10  EF0C  F00E         	goto	u2491
 11592  001C14  EF0E  F00E         	goto	u2490
 11593  001C18                     u2491:
 11594  001C18  EF11  F00E         	goto	l3619
 11595  001C1C                     u2490:
 11596  001C1C  0E00               	movlw	0
 11597  001C1E  EF5C  F00E         	goto	l554
 11598  001C22                     l3619:
 11599                           
 11600                           ;A6Lib.c: 39: if((c != '\r') && (c != '\n')) break;
 11601  001C22  0E0D               	movlw	13
 11602  001C24  1817               	xorwf	A6_ReadLine@c^0,w,c
 11603  001C26  B4D8               	btfsc	status,2,c
 11604  001C28  EF18  F00E         	goto	u2501
 11605  001C2C  EF1A  F00E         	goto	u2500
 11606  001C30                     u2501:
 11607  001C30  EFFF  F00D         	goto	l552
 11608  001C34                     u2500:
 11609  001C34  0E0A               	movlw	10
 11610  001C36  1817               	xorwf	A6_ReadLine@c^0,w,c
 11611  001C38  B4D8               	btfsc	status,2,c
 11612  001C3A  EF21  F00E         	goto	u2511
 11613  001C3E  EF23  F00E         	goto	u2510
 11614  001C42                     u2511:
 11615  001C42  EFFF  F00D         	goto	l552
 11616  001C46                     u2510:
 11617  001C46                     
 11618                           ;A6Lib.c: 40: };A6Lib.c: 43: uint8_t iResponse = 0;
 11619  001C46  0E00               	movlw	0
 11620  001C48  6E16               	movwf	A6_ReadLine@iResponse^0,c
 11621  001C4A                     l3627:
 11622                           
 11623                           ;A6Lib.c: 45: if((c == '\r') || (c == (0))) break;
 11624  001C4A  0E0D               	movlw	13
 11625  001C4C  1817               	xorwf	A6_ReadLine@c^0,w,c
 11626  001C4E  B4D8               	btfsc	status,2,c
 11627  001C50  EF2C  F00E         	goto	u2521
 11628  001C54  EF2E  F00E         	goto	u2520
 11629  001C58                     u2521:
 11630  001C58  EF5B  F00E         	goto	l3641
 11631  001C5C                     u2520:
 11632  001C5C  5017               	movf	A6_ReadLine@c^0,w,c
 11633  001C5E  A4D8               	btfss	status,2,c
 11634  001C60  EF34  F00E         	goto	u2531
 11635  001C64  EF36  F00E         	goto	u2530
 11636  001C68                     u2531:
 11637  001C68  EF38  F00E         	goto	l3631
 11638  001C6C                     u2530:
 11639  001C6C  EF5B  F00E         	goto	l3641
 11640  001C70                     l3631:
 11641                           
 11642                           ;A6Lib.c: 46: line[iResponse] = c;
 11643  001C70  5016               	movf	A6_ReadLine@iResponse^0,w,c
 11644  001C72  2411               	addwf	A6_ReadLine@line^0,w,c
 11645  001C74  6ED9               	movwf	fsr2l,c
 11646  001C76  0E00               	movlw	0
 11647  001C78  2012               	addwfc	(A6_ReadLine@line+1)^0,w,c
 11648  001C7A  6EDA               	movwf	fsr2h,c
 11649  001C7C  C017  FFDF         	movff	A6_ReadLine@c,indf2
 11650  001C80                     
 11651                           ;A6Lib.c: 47: iResponse++;
 11652  001C80  2A16               	incf	A6_ReadLine@iResponse^0,f,c
 11653  001C82                     
 11654                           ;A6Lib.c: 48: if(iResponse == lineLen) break;
 11655  001C82  5013               	movf	A6_ReadLine@lineLen^0,w,c
 11656  001C84  1816               	xorwf	A6_ReadLine@iResponse^0,w,c
 11657  001C86  A4D8               	btfss	status,2,c
 11658  001C88  EF48  F00E         	goto	u2541
 11659  001C8C  EF4A  F00E         	goto	u2540
 11660  001C90                     u2541:
 11661  001C90  EF4C  F00E         	goto	l3639
 11662  001C94                     u2540:
 11663  001C94  EF5B  F00E         	goto	l3641
 11664  001C98                     l3639:
 11665                           
 11666                           ;A6Lib.c: 49: } while(c = EUSART_BufferGetChar(timeout));
 11667  001C98  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 11668  001C9C  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 11669  001CA0  ECEA  F015         	call	_EUSART_BufferGetChar	;wreg free
 11670  001CA4  6E17               	movwf	A6_ReadLine@c^0,c
 11671  001CA6  5017               	movf	A6_ReadLine@c^0,w,c
 11672  001CA8  A4D8               	btfss	status,2,c
 11673  001CAA  EF59  F00E         	goto	u2551
 11674  001CAE  EF5B  F00E         	goto	u2550
 11675  001CB2                     u2551:
 11676  001CB2  EF25  F00E         	goto	l3627
 11677  001CB6                     u2550:
 11678  001CB6                     l3641:
 11679                           
 11680                           ;A6Lib.c: 51: return iResponse;
 11681  001CB6  5016               	movf	A6_ReadLine@iResponse^0,w,c
 11682  001CB8                     l554:
 11683  001CB8  0012               	return		;funcret
 11684  001CBA                     __end_of_A6_ReadLine:
 11685                           	opt callstack 0
 11686                           
 11687 ;; *************** function _memset *****************
 11688 ;; Defined at:
 11689 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  p1              2    4[COMRAM] PTR void 
 11692 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 11693 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), 
 11694 ;;		 -> loop@operator(32), 
 11695 ;;  c               2    6[COMRAM] int 
 11696 ;;  n               2    8[COMRAM] unsigned int 
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;  p               2   10[COMRAM] PTR unsigned char 
 11699 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 11700 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), 
 11701 ;;		 -> loop@operator(32), 
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  2    4[COMRAM] PTR void 
 11704 ;; Registers used:
 11705 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11711 ;;      Params:         6       0       0       0       0       0       0       0       0
 11712 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11714 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11715 ;;Total ram usage:        8 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; Hardware stack levels required when called:    2
 11718 ;; This function calls:
 11719 ;;		Nothing
 11720 ;; This function is called by:
 11721 ;;		_A6_ReadLine
 11722 ;;		_EUSART_Init
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           	psect	text66
 11727  002DD8                     __ptext66:
 11728                           	opt callstack 0
 11729  002DD8                     _memset:
 11730                           	opt callstack 23
 11731  002DD8  C005  F00B         	movff	memset@p1,memset@p
 11732  002DDC  C006  F00C         	movff	memset@p1+1,memset@p+1
 11733  002DE0  EFFA  F016         	goto	l3489
 11734  002DE4                     l3485:
 11735  002DE4  C00B  FFD9         	movff	memset@p,fsr2l
 11736  002DE8  C00C  FFDA         	movff	memset@p+1,fsr2h
 11737  002DEC  C007  FFDF         	movff	memset@c,indf2
 11738  002DF0  4A0B               	infsnz	memset@p^0,f,c
 11739  002DF2  2A0C               	incf	(memset@p+1)^0,f,c
 11740  002DF4                     l3489:
 11741  002DF4  0609               	decf	memset@n^0,f,c
 11742  002DF6  A0D8               	btfss	status,0,c
 11743  002DF8  060A               	decf	(memset@n+1)^0,f,c
 11744  002DFA  2809               	incf	memset@n^0,w,c
 11745  002DFC  E106               	bnz	u2281
 11746  002DFE  280A               	incf	(memset@n+1)^0,w,c
 11747  002E00  A4D8               	btfss	status,2,c
 11748  002E02  EF05  F017         	goto	u2281
 11749  002E06  EF07  F017         	goto	u2280
 11750  002E0A                     u2281:
 11751  002E0A  EFF2  F016         	goto	l3485
 11752  002E0E                     u2280:
 11753  002E0E  0012               	return		;funcret
 11754  002E10                     __end_of_memset:
 11755                           	opt callstack 0
 11756                           
 11757 ;; *************** function _EUSART_BufferGetChar *****************
 11758 ;; Defined at:
 11759 ;;		line 95 in file "EUSART.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  timeout         2   14[COMRAM] int 
 11762 ;; Auto vars:     Size  Location     Type
 11763 ;;		None
 11764 ;; Return value:  Size  Location     Type
 11765 ;;                  1    wreg      unsigned char 
 11766 ;; Registers used:
 11767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11768 ;; Tracked objects:
 11769 ;;		On entry : 0/0
 11770 ;;		On exit  : 0/0
 11771 ;;		Unchanged: 0/0
 11772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11773 ;;      Params:         2       0       0       0       0       0       0       0       0
 11774 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11775 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11776 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11777 ;;Total ram usage:        2 bytes
 11778 ;; Hardware stack levels used:    1
 11779 ;; Hardware stack levels required when called:    3
 11780 ;; This function calls:
 11781 ;;		_EUSART_RX_AvailableData
 11782 ;; This function is called by:
 11783 ;;		_A6_ReadLine
 11784 ;; This function uses a non-reentrant model
 11785 ;;
 11786                           
 11787                           	psect	text67
 11788  002BD4                     __ptext67:
 11789                           	opt callstack 0
 11790  002BD4                     _EUSART_BufferGetChar:
 11791                           	opt callstack 22
 11792  002BD4                     
 11793                           ;EUSART.c: 96: if(EUSART_RX_AvailableData(timeout) == 0) return (0);
 11794  002BD4  C00F  F005         	movff	EUSART_BufferGetChar@timeout,EUSART_RX_AvailableData@timeout
 11795  002BD8  C010  F006         	movff	EUSART_BufferGetChar@timeout+1,EUSART_RX_AvailableData@timeout+1
 11796  002BDC  ECAB  F010         	call	_EUSART_RX_AvailableData	;wreg free
 11797  002BE0  0900               	iorlw	0
 11798  002BE2  A4D8               	btfss	status,2,c
 11799  002BE4  EFF6  F015         	goto	u2291
 11800  002BE8  EFF8  F015         	goto	u2290
 11801  002BEC                     u2291:
 11802  002BEC  EFFB  F015         	goto	l3497
 11803  002BF0                     u2290:
 11804  002BF0  0E00               	movlw	0
 11805  002BF2  EF0F  F016         	goto	l696
 11806  002BF6                     l3497:
 11807                           
 11808                           ;EUSART.c: 97: EUSART_RX.iRead++;
 11809  002BF6  0101               	movlb	1	; () banked
 11810  002BF8  2B00               	incf	_EUSART_RX& (0+255),f,b
 11811  002BFA                     
 11812                           ; BSR set to: 1
 11813                           ;EUSART.c: 98: if(EUSART_RX.iRead == 128) EUSART_RX.iRead = 0;
 11814  002BFA  0E80               	movlw	128
 11815  002BFC  1900               	xorwf	_EUSART_RX& (0+255),w,b
 11816  002BFE  A4D8               	btfss	status,2,c
 11817  002C00  EF04  F016         	goto	u2301
 11818  002C04  EF06  F016         	goto	u2300
 11819  002C08                     u2301:
 11820  002C08  EF08  F016         	goto	l3503
 11821  002C0C                     u2300:
 11822  002C0C                     
 11823                           ; BSR set to: 1
 11824  002C0C  0E00               	movlw	0
 11825  002C0E  6F00               	movwf	_EUSART_RX& (0+255),b
 11826  002C10                     l3503:
 11827                           
 11828                           ; BSR set to: 1
 11829                           ;EUSART.c: 99: return EUSART_RX.buffer[EUSART_RX.iRead];
 11830  002C10  0E02               	movlw	low (_EUSART_RX+2)
 11831  002C12  2500               	addwf	_EUSART_RX& (0+255),w,b
 11832  002C14  6ED9               	movwf	fsr2l,c
 11833  002C16  6ADA               	clrf	fsr2h,c
 11834  002C18  0E01               	movlw	high (_EUSART_RX+2)
 11835  002C1A  22DA               	addwfc	fsr2h,f,c
 11836  002C1C  50DF               	movf	indf2,w,c
 11837  002C1E                     l696:
 11838  002C1E  0012               	return		;funcret
 11839  002C20                     __end_of_EUSART_BufferGetChar:
 11840                           	opt callstack 0
 11841                           
 11842 ;; *************** function _EUSART_RX_AvailableData *****************
 11843 ;; Defined at:
 11844 ;;		line 86 in file "EUSART.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  timeout         2    4[COMRAM] int 
 11847 ;; Auto vars:     Size  Location     Type
 11848 ;;  t               4   10[COMRAM] unsigned long 
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      unsigned char 
 11851 ;; Registers used:
 11852 ;;		wreg, status,2, status,0
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11858 ;;      Params:         2       0       0       0       0       0       0       0       0
 11859 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11860 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11861 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11862 ;;Total ram usage:       10 bytes
 11863 ;; Hardware stack levels used:    1
 11864 ;; Hardware stack levels required when called:    2
 11865 ;; This function calls:
 11866 ;;		Nothing
 11867 ;; This function is called by:
 11868 ;;		_EUSART_BufferGetChar
 11869 ;;		_A6_Process_Random_Comms
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873                           	psect	text68
 11874  002156                     __ptext68:
 11875                           	opt callstack 0
 11876  002156                     _EUSART_RX_AvailableData:
 11877                           	opt callstack 22
 11878  002156                     
 11879                           ;EUSART.c: 87: if(timeout == 0) timeout = 1000;
 11880  002156  5005               	movf	EUSART_RX_AvailableData@timeout^0,w,c
 11881  002158  1006               	iorwf	(EUSART_RX_AvailableData@timeout+1)^0,w,c
 11882  00215A  A4D8               	btfss	status,2,c
 11883  00215C  EFB2  F010         	goto	u2171
 11884  002160  EFB4  F010         	goto	u2170
 11885  002164                     u2171:
 11886  002164  EFB8  F010         	goto	l3421
 11887  002168                     u2170:
 11888  002168  0E03               	movlw	3
 11889  00216A  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
 11890  00216C  0EE8               	movlw	232
 11891  00216E  6E05               	movwf	EUSART_RX_AvailableData@timeout^0,c
 11892  002170                     l3421:
 11893                           
 11894                           ;EUSART.c: 88: uint32_t t = MILLISECONDS + timeout;
 11895  002170  C005  F007         	movff	EUSART_RX_AvailableData@timeout,??_EUSART_RX_AvailableData
 11896  002174  C006  F008         	movff	EUSART_RX_AvailableData@timeout+1,??_EUSART_RX_AvailableData+1
 11897  002178  0E00               	movlw	0
 11898  00217A  BE08               	btfsc	(??_EUSART_RX_AvailableData+1)^0,7,c
 11899  00217C  0EFF               	movlw	255
 11900  00217E  6E09               	movwf	(??_EUSART_RX_AvailableData+2)^0,c
 11901  002180  6E0A               	movwf	(??_EUSART_RX_AvailableData+3)^0,c
 11902  002182  0100               	movlb	0	; () banked
 11903  002184  51CC               	movf	_MILLISECONDS& (0+255),w,b
 11904  002186  2407               	addwf	??_EUSART_RX_AvailableData^0,w,c
 11905  002188  6E0B               	movwf	EUSART_RX_AvailableData@t^0,c
 11906  00218A  51CD               	movf	(_MILLISECONDS+1)& (0+255),w,b
 11907  00218C  2008               	addwfc	(??_EUSART_RX_AvailableData+1)^0,w,c
 11908  00218E  6E0C               	movwf	(EUSART_RX_AvailableData@t+1)^0,c
 11909  002190  51CE               	movf	(_MILLISECONDS+2)& (0+255),w,b
 11910  002192  2009               	addwfc	(??_EUSART_RX_AvailableData+2)^0,w,c
 11911  002194  6E0D               	movwf	(EUSART_RX_AvailableData@t+2)^0,c
 11912  002196  51CF               	movf	(_MILLISECONDS+3)& (0+255),w,b
 11913  002198  200A               	addwfc	(??_EUSART_RX_AvailableData+3)^0,w,c
 11914  00219A  6E0E               	movwf	(EUSART_RX_AvailableData@t+3)^0,c
 11915                           
 11916                           ;EUSART.c: 89: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
 11917  00219C  EFE3  F010         	goto	l3429
 11918  0021A0                     l3423:
 11919                           
 11920                           ; BSR set to: 1
 11921                           ;EUSART.c: 90: if(t < MILLISECONDS) return 0;
 11922  0021A0  0100               	movlb	0	; () banked
 11923  0021A2  51CC               	movf	_MILLISECONDS& (0+255),w,b
 11924  0021A4  5C0B               	subwf	EUSART_RX_AvailableData@t^0,w,c
 11925  0021A6  51CD               	movf	(_MILLISECONDS+1)& (0+255),w,b
 11926  0021A8  580C               	subwfb	(EUSART_RX_AvailableData@t+1)^0,w,c
 11927  0021AA  51CE               	movf	(_MILLISECONDS+2)& (0+255),w,b
 11928  0021AC  580D               	subwfb	(EUSART_RX_AvailableData@t+2)^0,w,c
 11929  0021AE  51CF               	movf	(_MILLISECONDS+3)& (0+255),w,b
 11930  0021B0  580E               	subwfb	(EUSART_RX_AvailableData@t+3)^0,w,c
 11931  0021B2  B0D8               	btfsc	status,0,c
 11932  0021B4  EFDE  F010         	goto	u2181
 11933  0021B8  EFE0  F010         	goto	u2180
 11934  0021BC                     u2181:
 11935  0021BC  EFE3  F010         	goto	l3429
 11936  0021C0                     u2180:
 11937  0021C0                     
 11938                           ; BSR set to: 0
 11939  0021C0  0E00               	movlw	0
 11940  0021C2  EFEE  F010         	goto	l691
 11941  0021C6                     l3429:
 11942                           
 11943                           ; BSR set to: 0
 11944  0021C6  0101               	movlb	1	; () banked
 11945  0021C8  5100               	movf	_EUSART_RX& (0+255),w,b
 11946  0021CA  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 11947  0021CC  B4D8               	btfsc	status,2,c
 11948  0021CE  EFEB  F010         	goto	u2191
 11949  0021D2  EFED  F010         	goto	u2190
 11950  0021D6                     u2191:
 11951  0021D6  EFD0  F010         	goto	l3423
 11952  0021DA                     u2190:
 11953  0021DA                     
 11954                           ; BSR set to: 1
 11955                           ;EUSART.c: 91: };EUSART.c: 92: return 1;
 11956  0021DA  0E01               	movlw	1
 11957  0021DC                     l691:
 11958  0021DC  0012               	return		;funcret
 11959  0021DE                     __end_of_EUSART_RX_AvailableData:
 11960                           	opt callstack 0
 11961                           
 11962 ;; *************** function _isr *****************
 11963 ;; Defined at:
 11964 ;;		line 100 in file "init.c"
 11965 ;; Parameters:    Size  Location     Type
 11966 ;;		None
 11967 ;; Auto vars:     Size  Location     Type
 11968 ;;		None
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  1    wreg      void 
 11971 ;; Registers used:
 11972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11978 ;;      Params:         0       0       0       0       0       0       0       0       0
 11979 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11980 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11981 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11982 ;;Total ram usage:        2 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    1
 11985 ;; This function calls:
 11986 ;;		_EUSART_RX_Interrupt
 11987 ;;		_Ecg_Interrupt
 11988 ;; This function is called by:
 11989 ;;		Interrupt level 2
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993                           	psect	intcode
 11994  000008                     __pintcode:
 11995                           	opt callstack 0
 11996  000008                     _isr:
 11997                           	opt callstack 19
 11998                           
 11999                           ;incstack = 0
 12000  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12001  00000A  ED18  F013         	call	int_func,f	;refresh shadow registers
 12002                           
 12003                           	psect	intcode_body
 12004  002630                     __pintcode_body:
 12005                           	opt callstack 19
 12006  002630                     int_func:
 12007                           	opt callstack 19
 12008  002630  0006               	pop		; remove dummy address from shadow register refresh
 12009  002632  CFD9 F003          	movff	fsr2l,??_isr
 12010  002636  CFDA F004          	movff	fsr2h,??_isr+1
 12011  00263A                     
 12012                           ;init.c: 102: if(TMR3IE && TMR3IF) {
 12013  00263A  A2A0               	btfss	4000,1,c	;volatile
 12014  00263C  EF22  F013         	goto	i2u379_41
 12015  002640  EF24  F013         	goto	i2u379_40
 12016  002644                     i2u379_41:
 12017  002644  EF39  F013         	goto	i2l4529
 12018  002648                     i2u379_40:
 12019  002648  A2A1               	btfss	4001,1,c	;volatile
 12020  00264A  EF29  F013         	goto	i2u380_41
 12021  00264E  EF2B  F013         	goto	i2u380_40
 12022  002652                     i2u380_41:
 12023  002652  EF39  F013         	goto	i2l4529
 12024  002656                     i2u380_40:
 12025  002656                     
 12026                           ;init.c: 103: MILLISECONDS += 5;
 12027  002656  0E05               	movlw	5
 12028  002658  0100               	movlb	0	; () banked
 12029  00265A  27CC               	addwf	_MILLISECONDS& (0+255),f,b
 12030  00265C  0E00               	movlw	0
 12031  00265E  23CD               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
 12032  002660  23CE               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
 12033  002662  23CF               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
 12034  002664                     
 12035                           ; BSR set to: 0
 12036                           ;init.c: 104: Ecg_Interrupt();
 12037  002664  EC95  F017         	call	_Ecg_Interrupt	;wreg free
 12038  002668                     
 12039                           ;init.c: 107: TMR3H = 0x16;
 12040  002668  0E16               	movlw	22
 12041  00266A  6EB3               	movwf	179,c	;volatile
 12042  00266C                     
 12043                           ;init.c: 108: TMR3L = 0x00;
 12044  00266C  0E00               	movlw	0
 12045  00266E  6EB2               	movwf	178,c	;volatile
 12046  002670                     
 12047                           ;init.c: 109: TMR3IF = 0;
 12048  002670  92A1               	bcf	4001,1,c	;volatile
 12049  002672                     i2l4529:
 12050                           
 12051                           ;init.c: 110: };init.c: 113: if(RCIE && RCIF) {
 12052  002672  AA9D               	btfss	3997,5,c	;volatile
 12053  002674  EF3E  F013         	goto	i2u381_41
 12054  002678  EF40  F013         	goto	i2u381_40
 12055  00267C                     i2u381_41:
 12056  00267C  EF49  F013         	goto	i2l145
 12057  002680                     i2u381_40:
 12058  002680  AA9E               	btfss	3998,5,c	;volatile
 12059  002682  EF45  F013         	goto	i2u382_41
 12060  002686  EF47  F013         	goto	i2u382_40
 12061  00268A                     i2u382_41:
 12062  00268A  EF49  F013         	goto	i2l145
 12063  00268E                     i2u382_40:
 12064  00268E                     
 12065                           ;init.c: 114: EUSART_RX_Interrupt();
 12066  00268E  EC1C  F014         	call	_EUSART_RX_Interrupt	;wreg free
 12067  002692                     i2l145:
 12068  002692  C004  FFDA         	movff	??_isr+1,fsr2h
 12069  002696  C003  FFD9         	movff	??_isr,fsr2l
 12070  00269A  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12071  00269C  0011               	retfie		f
 12072  00269E                     __end_of_isr:
 12073                           	opt callstack 0
 12074                           
 12075 ;; *************** function _Ecg_Interrupt *****************
 12076 ;; Defined at:
 12077 ;;		line 135 in file "ecg.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;		None
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;		None
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1    wreg      void 
 12084 ;; Registers used:
 12085 ;;		wreg, status,2, status,0
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12091 ;;      Params:         0       0       0       0       0       0       0       0       0
 12092 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12093 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12094 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12095 ;;Total ram usage:        2 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; This function calls:
 12098 ;;		Nothing
 12099 ;; This function is called by:
 12100 ;;		_isr
 12101 ;; This function uses a non-reentrant model
 12102 ;;
 12103                           
 12104                           	psect	text70
 12105  002F2A                     __ptext70:
 12106                           	opt callstack 0
 12107  002F2A                     _Ecg_Interrupt:
 12108                           	opt callstack 19
 12109  002F2A                     
 12110                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
 12111  002F2A  0E01               	movlw	1
 12112  002F2C  6E01               	movwf	??_Ecg_Interrupt^0,c
 12113  002F2E  0100               	movlb	0	; () banked
 12114  002F30  51D3               	movf	(_ECG_FLAGS+1)& (0+255),w,b
 12115  002F32  0B07               	andlw	7
 12116  002F34  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
 12117  002F36  5001               	movf	??_Ecg_Interrupt^0,w,c
 12118  002F38  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
 12119  002F3A  51D3               	movf	(_ECG_FLAGS+1)& (0+255),w,b
 12120  002F3C  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 12121  002F3E  0BF8               	andlw	-8
 12122  002F40  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 12123  002F42  6FD3               	movwf	(_ECG_FLAGS+1)& (0+255),b
 12124  002F44                     
 12125                           ; BSR set to: 0
 12126                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
 12127  002F44  2BC3               	incf	(_ECG_HEARTRATE+3)& (0+255),f,b
 12128  002F46                     
 12129                           ; BSR set to: 0
 12130                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
 12131  002F46  89D2               	bsf	_ECG_FLAGS& (0+255),4,b
 12132  002F48                     
 12133                           ; BSR set to: 0
 12134  002F48  0012               	return		;funcret
 12135  002F4A                     __end_of_Ecg_Interrupt:
 12136                           	opt callstack 0
 12137                           
 12138 ;; *************** function _EUSART_RX_Interrupt *****************
 12139 ;; Defined at:
 12140 ;;		line 68 in file "EUSART.c"
 12141 ;; Parameters:    Size  Location     Type
 12142 ;;		None
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;  c               1    1[COMRAM] unsigned char 
 12145 ;; Return value:  Size  Location     Type
 12146 ;;                  1    wreg      void 
 12147 ;; Registers used:
 12148 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12149 ;; Tracked objects:
 12150 ;;		On entry : 0/0
 12151 ;;		On exit  : 0/0
 12152 ;;		Unchanged: 0/0
 12153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12154 ;;      Params:         0       0       0       0       0       0       0       0       0
 12155 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12156 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12157 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12158 ;;Total ram usage:        2 bytes
 12159 ;; Hardware stack levels used:    1
 12160 ;; This function calls:
 12161 ;;		Nothing
 12162 ;; This function is called by:
 12163 ;;		_isr
 12164 ;; This function uses a non-reentrant model
 12165 ;;
 12166                           
 12167                           	psect	text71
 12168  002838                     __ptext71:
 12169                           	opt callstack 0
 12170  002838                     _EUSART_RX_Interrupt:
 12171                           	opt callstack 19
 12172  002838                     
 12173                           ;EUSART.c: 69: uint8_t c = RCREG;
 12174  002838  CFAE F002          	movff	4014,EUSART_RX_Interrupt@c	;volatile
 12175                           
 12176                           ;EUSART.c: 70: if(OERR == 1) {
 12177  00283C  A2AB               	btfss	4011,1,c	;volatile
 12178  00283E  EF23  F014         	goto	i2u374_41
 12179  002842  EF25  F014         	goto	i2u374_40
 12180  002846                     i2u374_41:
 12181  002846  EF38  F014         	goto	i2l4481
 12182  00284A                     i2u374_40:
 12183  00284A                     
 12184                           ;EUSART.c: 71: CREN = 0;
 12185  00284A  98AB               	bcf	4011,4,c	;volatile
 12186                           
 12187                           ;EUSART.c: 72: CREN = 1;
 12188  00284C  88AB               	bsf	4011,4,c	;volatile
 12189  00284E                     
 12190                           ;EUSART.c: 73: PORTAbits.RA2 = !PORTAbits.RA2;
 12191  00284E  A480               	btfss	128,2,c	;volatile
 12192  002850  EF2C  F014         	goto	i2u375_41
 12193  002854  EF30  F014         	goto	i2u375_40
 12194  002858                     i2u375_41:
 12195  002858  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 12196  00285A  2A01               	incf	??_EUSART_RX_Interrupt^0,f,c
 12197  00285C  EF31  F014         	goto	i2u376_48
 12198  002860                     i2u375_40:
 12199  002860  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 12200  002862                     i2u376_48:
 12201  002862  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 12202  002864  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 12203  002866  5080               	movf	128,w,c	;volatile
 12204  002868  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 12205  00286A  0BFB               	andlw	-5
 12206  00286C  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 12207  00286E  6E80               	movwf	128,c	;volatile
 12208  002870                     i2l4481:
 12209                           
 12210                           ;EUSART.c: 74: };EUSART.c: 76: EUSART_RX.iWrite++;
 12211  002870  0101               	movlb	1	; () banked
 12212  002872  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
 12213  002874                     
 12214                           ; BSR set to: 1
 12215                           ;EUSART.c: 77: if(EUSART_RX.iWrite == 128) EUSART_RX.iWrite = 0;
 12216  002874  0E80               	movlw	128
 12217  002876  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 12218  002878  A4D8               	btfss	status,2,c
 12219  00287A  EF41  F014         	goto	i2u377_41
 12220  00287E  EF43  F014         	goto	i2u377_40
 12221  002882                     i2u377_41:
 12222  002882  EF45  F014         	goto	i2l4487
 12223  002886                     i2u377_40:
 12224  002886                     
 12225                           ; BSR set to: 1
 12226  002886  0E00               	movlw	0
 12227  002888  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
 12228  00288A                     i2l4487:
 12229                           
 12230                           ; BSR set to: 1
 12231                           ;EUSART.c: 78: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
 12232  00288A  0E02               	movlw	low (_EUSART_RX+2)
 12233  00288C  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
 12234  00288E  6ED9               	movwf	fsr2l,c
 12235  002890  6ADA               	clrf	fsr2h,c
 12236  002892  0E01               	movlw	high (_EUSART_RX+2)
 12237  002894  22DA               	addwfc	fsr2h,f,c
 12238  002896  C002  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
 12239  00289A                     
 12240                           ; BSR set to: 1
 12241  00289A  0012               	return		;funcret
 12242  00289C                     __end_of_EUSART_RX_Interrupt:
 12243                           	opt callstack 0
 12244                           
 12245                           	psect	rparam
 12246  0000                     
 12247                           	psect	temp
 12248  000058                     btemp:
 12249                           	opt callstack 0
 12250  000058                     	ds	1
 12251  0000                     int$flags	set	btemp
 12252  0000                     wtemp8	set	btemp+1
 12253  0000                     ttemp5	set	btemp+1
 12254  0000                     ttemp6	set	btemp+4
 12255  0000                     ttemp7	set	btemp+8
 12256                           tosu	equ	0xFFF
 12257                           tosh	equ	0xFFE
 12258                           tosl	equ	0xFFD
 12259                           stkptr	equ	0xFFC
 12260                           pclatu	equ	0xFFB
 12261                           pclath	equ	0xFFA
 12262                           pcl	equ	0xFF9
 12263                           tblptru	equ	0xFF8
 12264                           tblptrh	equ	0xFF7
 12265                           tblptrl	equ	0xFF6
 12266                           tablat	equ	0xFF5
 12267                           prodh	equ	0xFF4
 12268                           prodl	equ	0xFF3
 12269                           indf0	equ	0xFEF
 12270                           postinc0	equ	0xFEE
 12271                           postdec0	equ	0xFED
 12272                           preinc0	equ	0xFEC
 12273                           plusw0	equ	0xFEB
 12274                           fsr0h	equ	0xFEA
 12275                           fsr0l	equ	0xFE9
 12276                           wreg	equ	0xFE8
 12277                           indf1	equ	0xFE7
 12278                           postinc1	equ	0xFE6
 12279                           postdec1	equ	0xFE5
 12280                           preinc1	equ	0xFE4
 12281                           plusw1	equ	0xFE3
 12282                           fsr1h	equ	0xFE2
 12283                           fsr1l	equ	0xFE1
 12284                           bsr	equ	0xFE0
 12285                           indf2	equ	0xFDF
 12286                           postinc2	equ	0xFDE
 12287                           postdec2	equ	0xFDD
 12288                           preinc2	equ	0xFDC
 12289                           plusw2	equ	0xFDB
 12290                           fsr2h	equ	0xFDA
 12291                           fsr2l	equ	0xFD9
 12292                           status	equ	0xFD8


Data Sizes:
    Strings     148
    Constant    1598
    Data        8
    BSS         171
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      87
    BANK0           160     78     122
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_26(CODE[8]), STR_21(CODE[7]), STR_15(CODE[8]), STR_8(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), loop@operator(BANK0[32]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), loop@operator(BANK0[32]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), loop@operator(BANK0[32]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_26(CODE[8]), STR_21(CODE[7]), STR_15(CODE[8]), STR_8(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), loop@operator(BANK0[32]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_26(CODE[8]), STR_25(CODE[10]), STR_21(CODE[7]), STR_20(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_8(CODE[7]), 
		 -> STR_7(CODE[9]), STR_5(CODE[4]), STR_4(CODE[13]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_26(CODE[8]), STR_25(CODE[10]), STR_21(CODE[7]), STR_20(CODE[8]), 
		 -> STR_15(CODE[8]), STR_14(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_8(CODE[7]), 
		 -> STR_7(CODE[9]), STR_5(CODE[4]), STR_4(CODE[13]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_33(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> NULL(NULL[0]), loop@operator(BANK0[32]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 32
		 -> loop@operator(BANK0[32]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 32
		 -> loop@operator(BANK0[32]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), STR_12(CODE[3]), STR_6(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_11(CODE[12]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> A6_BaudRateSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_25(CODE[10]), STR_20(CODE[8]), STR_14(CODE[10]), A6_BaudRateSet@request(BANK0[20]), 
		 -> STR_7(CODE[9]), STR_5(CODE[4]), STR_4(CODE[13]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 32
		 -> loop@operator(BANK0[32]), 

    A6_NetworkGetOperator@operatorToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    A6_NetworkGetOperator@operator	PTR unsigned char  size(2) Largest target is 32
		 -> loop@operator(BANK0[32]), 

    A6_NetworkGetRSSI@RSSIToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    A6_BaudRateGet@baudRateToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), STR_29(CODE[2]), 
		 -> STR_28(CODE[2]), STR_27(CODE[2]), STR_24(CODE[2]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_16(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_10(CODE[2]), 
		 -> STR_9(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), loop@operator(BANK0[32]), 

    sp__memset	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> loop@operator(BANK0[32]), 

    A6_ReadLine@line	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), loop@operator(BANK0[32]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), loop@operator(BANK0[32]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_25(CODE[10]), STR_20(CODE[8]), STR_14(CODE[10]), A6_BaudRateSet@request(BANK0[20]), 
		 -> STR_7(CODE[9]), STR_5(CODE[4]), STR_4(CODE[13]), 

    TFT_DrawBitmap@bitmap	PTR const unsigned char  size(2) Largest target is 62
		 -> ECG_ICON_HEART(CODE[62]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(COMRAM[32]), STR_3(CODE[28]), STR_2(CODE[11]), Ecg_ProcessHeartRate@heartrateString(BANK0[5]), 
		 -> loop@operator(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_loop
    _Ecg_ProcessEcg->_Ecg_Background_Leads_Ok
    _Ecg_ProcessHeartbeat->_TFT_DrawFillRect
    _TFT_DrawBitmap->_TFT_DrawPixel
    _Ecg_Draw->_TFT_DrawLine
    _A6_NetworkGetRSSILevel->_A6_NetworkGetRSSI
    _A6_NetworkGetRSSI->_A6_Command
    _atoi->___wmul
    _A6_NetworkGetOperator->_A6_Command
    _TFT_Init->_TFT_OrientationSet
    _TFT_OrientationSet->_TFT_FullScreen
    _Ecg_Init->_Ecg_Background_Leads_Ok
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawLine
    _TFT_DrawLine->_TFT_DrawPixel
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_FullScreen
    _TFT_FullScreen->_TFT_Flood
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister
    _EUSART_Init->_memset
    _A6_Init->_A6_BaudRateSet
    _A6_BaudRateSet->_A6_BaudRateGet
    _sprintf->___llmod
    ___llmod->___lldiv
    _A6_BaudRateGet->_A6_Command
    _A6_BaudRateGet->_atol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _atol->___lmul
    _A6_BaudRateAutoDetect->_A6_IsAlive
    _EUSART_BaudRateSet->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen
    _A6_ReadLine->_EUSART_BufferGetChar
    _EUSART_BufferGetChar->_EUSART_RX_AvailableData

Critical Paths under _isr in COMRAM

    _isr->_EUSART_RX_Interrupt
    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _main->_loop
    _Ecg_Process->_Ecg_ProcessHeartRate
    _Ecg_ProcessHeartRate->_TFT_DrawString
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _A6_Init->_A6_BaudRateSet

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  543244
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                42    42      0  360373
                                             78 COMRAM     4     4      0
                                             40 BANK0     38    38      0
              _A6_NetworkGetOperator
             _A6_NetworkGetRSSILevel
                        _Ecg_Process
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                     _TFT_DrawString
                       _TFT_GetWidth
 ---------------------------------------------------------------------------------
 (2) _Ecg_Process                                          0     0      0  251912
                     _Ecg_ProcessEcg
               _Ecg_ProcessHeartRate
               _Ecg_ProcessInterrupt
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessInterrupt                                 1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessHeartRate                                29    29      0   52666
                                             11 BANK0     29    29      0
                     _TFT_DrawString
                            ___lldiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessEcg                                       0     0      0  199246
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
                           _Ecg_Draw
               _Ecg_ProcessHeartbeat
 ---------------------------------------------------------------------------------
 (4) _Ecg_ProcessHeartbeat                                11    11      0   34179
                                             43 COMRAM    11    11      0
                     _TFT_DrawBitmap
                   _TFT_DrawFillRect
                                _abs
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawBitmap                                      17     9      8    6581
                                             22 COMRAM    17     9      8
                      _TFT_DrawPixel
 ---------------------------------------------------------------------------------
 (4) _Ecg_Draw                                             4     4      0   36674
                                             53 COMRAM     4     4      0
                           _Ecg_Read
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                      _TFT_GetHeight
                       _TFT_GetWidth
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _Ecg_Read                                             6     4      2      70
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _A6_NetworkGetRSSILevel                               1     1      0   12391
                                             64 COMRAM     1     1      0
                  _A6_NetworkGetRSSI
 ---------------------------------------------------------------------------------
 (3) _A6_NetworkGetRSSI                                   34    34      0   12280
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    1671
                                             10 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _A6_NetworkGetOperator                                6     3      3   11179
                                             30 COMRAM     6     3      3
                         _A6_Command
                             _strcpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     379
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            13    11      2   16541
                                             32 COMRAM    13    11      2
                 _TFT_OrientationSet
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TFT_OrientationSet                                   3     1      2   11673
                                             29 COMRAM     3     1      2
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0  128393
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (4) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Ecg_Background_Leads_Ok                              2     2      0   68773
                                             76 COMRAM     2     2      0
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FullScreen
                      _TFT_GetHeight
                       _TFT_GetWidth
 ---------------------------------------------------------------------------------
 (4) _Ecg_Background_Leads_Failure                         0     0      0   59573
                     _TFT_DrawString
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (2) _TFT_DrawString                                      11     0     11   48119
                                              0 BANK0     11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawChar                                        23    13     10   45165
                                             53 COMRAM    23    13     10
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawLine                                        31    21     10    9200
                                             22 COMRAM    31    21     10
                      _TFT_DrawPixel
                       _TFT_GetWidth (ARG)
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawPixel                                       10     4      6    5978
                                             12 COMRAM    10     4      6
                 _TFT_OrientationGet
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawFillRect                                    14     4     10   27021
                                             29 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_FullScreen                                       2     0      2   11454
                                             27 COMRAM     2     0      2
                          _TFT_Flood
                      _TFT_GetHeight
                       _TFT_GetWidth
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (5) _TFT_SetAddrWindow                                    8     0      8    5724
                                             12 COMRAM     8     0      8
                      _TFT_GetHeight (ARG)
                       _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_GetWidth                                         2     0      2       0
                                              4 COMRAM     2     0      2
                 _TFT_OrientationGet
 ---------------------------------------------------------------------------------
 (6) _TFT_GetHeight                                        2     0      2       0
                                              4 COMRAM     2     0      2
                 _TFT_OrientationGet
 ---------------------------------------------------------------------------------
 (3) _TFT_OrientationGet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TFT_Flood                                           15     9      6    5382
                                             12 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _TFT_WriteRegister                                    8     4      4    4588
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0     552
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              4     0      4   37385
                                             77 COMRAM     4     0      4
              _A6_BaudRateAutoDetect
                     _A6_BaudRateSet
                         _A6_Command
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateSet                                      60    56      4   26492
                                             73 COMRAM     4     0      4
                                              0 BANK0     56    56      0
                     _A6_BaudRateGet
                         _A6_Command
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             33    25      8    3414
                                             26 COMRAM    24    16      8
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1223
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _A6_BaudRateGet                                      43    39      4   11533
                                             30 COMRAM    43    39      4
                         _A6_Command
                               _atol
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    4054
                                             17 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strstr                                               4     0      4    1933
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              7     1      6     362
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _strchr                                               6     2      4     544
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4     834
                                             16 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateAutoDetect                                1     1      0    6338
                                             62 COMRAM     1     1      0
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     273
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateSet                                  12     8      4     937
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _A6_IsAlive                                          32    32      0    5054
                                             30 COMRAM    32    32      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     547
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _A6_Command                                           7     0      7    4457
                                             23 COMRAM     7     0      7
                        _A6_ReadLine
                    _EUSART_RX_Flush
                   _EUSART_TX_String
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_String                                     3     0      3     219
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _EUSART_TX_Char                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_RX_Flush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _A6_ReadLine                                          7     2      5    1736
                                             16 COMRAM     7     2      5
               _EUSART_BufferGetChar
                             _memset
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6     552
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) _EUSART_BufferGetChar                                 2     0      2     394
                                             14 COMRAM     2     0      2
            _EUSART_RX_AvailableData
 ---------------------------------------------------------------------------------
 (7) _EUSART_RX_AvailableData                             10     8      2     220
                                              4 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (12) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_RX_Interrupt                                 2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
     _A6_BaudRateSet
       _A6_BaudRateGet
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
       _strcmp
     _A6_Command
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_Flush
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _strlen
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_OrientationGet
           _TFT_WriteRegister
         _TFT_GetWidth (ARG)
           _TFT_OrientationGet
         ___awdiv (ARG)
         _abs (ARG)
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
       _TFT_GetHeight
         _TFT_OrientationGet
       _TFT_GetWidth
         _TFT_OrientationGet
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_OrientationSet
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _A6_NetworkGetOperator
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_NetworkGetRSSILevel
       _A6_NetworkGetRSSI
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atoi
           ___wmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
     _Ecg_Process
       _Ecg_ProcessEcg
         _Ecg_Background_Leads_Failure
           _TFT_DrawString
             _TFT_DrawChar
               _TFT_DrawFillRect
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                 _TFT_FullScreen
                   _TFT_Flood
                     _TFT_WriteRegister
                     ___wmul (ARG)
                   _TFT_GetHeight
                     _TFT_OrientationGet
                   _TFT_GetWidth
                     _TFT_OrientationGet
                   _TFT_SetAddrWindow
                     _TFT_GetHeight (ARG)
                       _TFT_OrientationGet
                     _TFT_GetWidth (ARG)
                       _TFT_OrientationGet
                     _TFT_OrientationGet (ARG)
                     _TFT_WriteRegister (ARG)
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
                 ___wmul
               _TFT_DrawLine
                 _TFT_DrawPixel
                   _TFT_OrientationGet
                   _TFT_WriteRegister
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 ___awdiv (ARG)
                 _abs (ARG)
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___wmul
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
         _Ecg_Background_Leads_Ok
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawString
             _TFT_DrawChar
               _TFT_DrawFillRect
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                 _TFT_FullScreen
                   _TFT_Flood
                     _TFT_WriteRegister
                     ___wmul (ARG)
                   _TFT_GetHeight
                     _TFT_OrientationGet
                   _TFT_GetWidth
                     _TFT_OrientationGet
                   _TFT_SetAddrWindow
                     _TFT_GetHeight (ARG)
                       _TFT_OrientationGet
                     _TFT_GetWidth (ARG)
                       _TFT_OrientationGet
                     _TFT_OrientationGet (ARG)
                     _TFT_WriteRegister (ARG)
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
                 ___wmul
               _TFT_DrawLine
                 _TFT_DrawPixel
                   _TFT_OrientationGet
                   _TFT_WriteRegister
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 ___awdiv (ARG)
                 _abs (ARG)
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___wmul
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
         _Ecg_CheckLeads
         _Ecg_Draw
           _Ecg_Read
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
           ___lwdiv
         _Ecg_ProcessHeartbeat
           _TFT_DrawBitmap
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
           _abs
       _Ecg_ProcessHeartRate
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                 _TFT_GetHeight
                   _TFT_OrientationGet
                 _TFT_GetWidth
                   _TFT_OrientationGet
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
               ___wmul
             _TFT_DrawLine
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               ___awdiv (ARG)
               _abs (ARG)
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___wmul
         ___lldiv
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           _isdigit
       _Ecg_ProcessInterrupt
     _TFT_DrawFillRect
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
       _TFT_SetAddrWindow
         _TFT_GetHeight (ARG)
           _TFT_OrientationGet
         _TFT_GetWidth (ARG)
           _TFT_OrientationGet
         _TFT_OrientationGet (ARG)
         _TFT_WriteRegister (ARG)
       ___wmul
     _TFT_DrawLine
       _TFT_DrawPixel
         _TFT_OrientationGet
         _TFT_WriteRegister
       _TFT_GetWidth (ARG)
         _TFT_OrientationGet
       ___awdiv (ARG)
       _abs (ARG)
     _TFT_DrawString
       _TFT_DrawChar
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
           _TFT_SetAddrWindow
             _TFT_GetHeight (ARG)
               _TFT_OrientationGet
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             _TFT_OrientationGet (ARG)
             _TFT_WriteRegister (ARG)
           ___wmul
         _TFT_DrawLine
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           ___awdiv (ARG)
           _abs (ARG)
         _TFT_DrawPixel
           _TFT_OrientationGet
           _TFT_WriteRegister
         ___wmul
     _TFT_GetWidth
       _TFT_OrientationGet

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      7A       5       76.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     153      20        0.0%
DATA                 0      0     153       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 27 21:29:28 2019

               A6_BaudRateAutoDetect@i 003F                    __size_of_A6_IsAlive 0050  
  Ecg_ProcessHeartRate@heartrateString 0077                                     l61 0C7C  
                  __size_of_A6_Command 0086                           ___awdiv@sign 000A  
              ??_A6_NetworkGetOperator 0022                    ___wmul@multiplicand 0007  
                          __CFG_BORV$0 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                                  l204 1A2E                                    l132 25BE  
                                  l231 2F8E                                    l207 2F66  
                                  l216 2B36                                    l225 2B84  
                                  l313 20CC                                    l138 2DD6  
                                  l307 0688                                    l235 2F02  
                                  l244 0906                                    l252 1A34  
                                  l325 1788                                    l421 29AA  
                                  l270 0AEE                                    l262 0A50  
                                  l415 2EDA                                    l184 2CAA  
                                  l248 2956                                    l256 1A88  
                                  l281 0D40                                    l273 23E6  
                                  l257 1B08                                    l433 2AE8  
                                  l290 0DFE                                    l426 2E44  
                                  l283 0DFC                                    l603 1E3E  
                                  l285 0D62                                    l429 2AD2  
                                  l542 2D9C                                    l278 0CEC  
                                  l446 10E8                                    l295 0438  
                                  l607 2460                                    l471 2478  
                                  l552 1BFE                                    l288 0DD6  
                                  l480 203A                                    l616 1222  
                                  l721 012C                                    l473 24D8  
                                  l449 0F16                                    l554 1CB8  
                                  l466 2A4A                                    l458 0F7A  
                                  l547 220A                                    l483 2D28  
                                  l724 01B4                                    l549 2262  
                                  l661 2C66                                    l469 246A  
                                  l477 186E                                    l670 2F7E  
                                  l567 2A9A                                    l575 1480  
                                  l664 22E6                                    l760 2706  
                                  l745 03FA                                    l691 21DC  
                                  l667 2F6A                                    l587 262E  
                                  l579 169C                                    l684 2F8A  
                                  l676 2CEA                                    l748 2F28  
      __end_of_Ecg_Background_Leads_Ok 203C                                    l782 1FA0  
                                  l775 1F90                                    l759 26F6  
                                  l696 2C1E                                    l979 1D7C  
                                  _GIE 007F97                           __CFG_CPB$OFF 000000  
                         __CFG_CPD$OFF 000000                           __CFG_BOR$OFF 000000  
                                  _abs 2E46                                    _isr 0008  
                      __end_of_A6_Init 2D9E                                    prod 000FF3  
                                  wreg 000FE8                   __size_of_A6_ReadLine 00D6  
                         TFT_Flood@len 000F                          loop@RSSILevel 00A8  
                EUSART_BaudRateSet@tmp 001A                           ?_EUSART_Init 0001  
                         __CFG_LVP$OFF 000000                           TFT_Init@data 0025  
                         __CFG_WDT$OFF 000000                                   ?_abs 0005  
                                 l1410 2E70                                   l1234 254C  
                                 l1163 2154                                   l1411 2E78  
                                 l1227 2544                                   l1500 1948  
                                 l1156 2144                                   l1431 1224  
                                 l1503 22E8                                   l1440 135C  
                                 l4001 28F0                                   l1505 2368  
                                 l3201 2CA2                                   l1425 1590  
                                 l1426 1598                                   l1451 2E0E  
                                 l1515 27CA                                   l3203 2CA6  
                                 l3211 2AEA                                   l1524 1BE2  
                                 l1516 27D2                                   l1445 2EAA  
                                 l4013 1E8A                                   l4005 1E40  
                                 l3205 2CA8                                   l3213 2AEE  
                                 l3301 28FC                                   l4101 14E4  
                                 l1534 2764                                   l1471 2BD2  
                                 l1439 134C                                   l4007 1E44  
                                 l4015 1EB2                                   l1535 276C  
                                 l4031 18A8                                   l4023 1870  
                                 l3207 2F8C                                   l3231 2B3C  
                                 l3223 2B06                                   l3303 2928  
                                 l3311 1A58                                   l4111 1548  
                                 l4103 14EE                                   l4017 1EC4  
                                 l4009 1E7E                                   l4041 1914  
                                 l4033 18C4                                   l4025 1882  
                                 l4201 137E                                   l3241 2B54  
                                 l3225 2B2E                                   l3217 2AFA  
                                 l3305 293A                                   l3313 1A64  
                                 l3321 1ACC                                   l3401 0A58  
                                 l1465 29FA                                   l4113 1564  
                                 l4105 1508                                   l4121 2E10  
                                 l1459 28FA                                   l4051 1224  
                                 l4019 1EF4                                   l1483 1EFC  
                                 l4043 192C                                   l4035 18DC  
                                 l4027 189C                                   l4203 13A4  
                                 l3171 2C68                                   l3243 2B7C  
                                 l3235 2B48                                   l3251 070A  
                                 l3315 1A90                                   l3307 1A30  
                                 l3323 2E46                                   l3411 0ABC  
                                 l3403 0A6A                                   l4115 1574  
                                 l4107 1510                                   l4131 2E40  
                                 l4123 2E28                                   l3421 2170  
                                 l3501 2C0C                                   l4117 2D9E  
                                 l4061 126C                                   l4053 1230  
                                 l4045 1938                                   l4221 1460  
                                 l4205 13DC                                   l3181 2C7E  
                                 l3173 2C6E                                   l3229 2B38  
                                 l3261 084A                                   l3253 0742  
                                 l3309 1A48                                   l3341 1CD8  
                                 l3333 1CBA                                   l3325 2E54  
                                 l3413 0ACC                                   l3405 0A8A  
                                 l4301 23EE                                   l4125 2E2A  
                                 l3431 21DA                                   l3423 21A0  
                                 l3503 2C10                                   l4231 229E  
                                 l4119 2DB8                                   l4063 127E  
                                 l4055 1234                                   l3511 22E8  
                                 l4047 1940                                   l4039 18F2  
                                 l1495 188A                                   l4215 140E  
                                 l4207 13EE                                   l4223 1470  
                                 l3327 2F04                                   l3191 2C90  
                                 l3183 2C80                                   l3175 2C72  
                                 l3263 0872                                   l3255 0756  
                                 l3271 08DE                                   l3247 068A  
                                 l3319 1AA4                                   l3351 1D0C  
                                 l3343 1CE6                                   l3335 1CBE  
                                 l3407 0AA6                                   l3415 0AD0  
                                 l4303 2400                                   l4127 2E2E  
                                 l3425 21C0                                   l3417 2156  
                                 l4233 22D4                                   l4081 12F2  
                                 l4065 1280                                   l4057 1246  
                                 l3513 2318                                   l1497 1950  
                                 l4217 144A                                   l4209 140A  
                                 l3329 2F20                                   l3193 2C94  
                                 l3185 2C84                                   l3177 2C76  
                                 l3281 0CA4                                   l3273 0C7E  
                                 l3265 088E                                   l3257 0786  
                                 l3249 068E                                   l3361 1D46  
                                 l3353 1D14                                   l3345 1CEE  
                                 l3337 1CCC                                   l3409 0AAE  
                                 l3441 0400                                   l4401 19DA  
                                 l4241 1D7E                                   l4321 2442  
                                 l4313 241C                                   l4129 2E3E  
                                 l3419 2168                                   l3611 1BE4  
                                 l3507 2F6A                                   l3603 2CAC  
                                 l4235 22DE                                   l4227 2264  
                                 l4083 1306                                   l4075 12AA  
                                 l4067 128C                                   l4059 1258  
                                 l4219 145E                                   l4411 2C36  
                                 l3195 2C98                                   l3187 2C88  
                                 l3179 2C7A                                   l3291 0D36  
                                 l3283 0CA8                                   l3275 0C82  
                                 l3267 08BE                                   l3259 079E  
                                 l3371 1D6C                                   l3363 1D4E  
                                 l3355 1D1C                                   l3347 1CF2  
                                 l3339 1CD4                                   l3451 0456  
                                 l3443 0434                                   l3435 03FC  
                                 l4403 19F4                                   l4091 1486  
                                 l4251 1E2A                                   l4243 1D9E  
                                 l4331 245E                                   l4315 242C  
                                 l4307 2406                                   l3429 21C6  
                                 l3621 1C34                                   l3613 1C0C  
                                 l3509 2F78                                   l3605 2CB0  
                                 l4237 22E2                                   l4229 226A  
                                 l4085 1316                                   l4069 1294  
                                 l3517 2324                                   l3701 2134  
                                 l4413 2C3E                                   l3197 2C9C  
                                 l3189 2C8A                                   l3293 0D4C  
                                 l3285 0CD6                                   l3277 0C86  
                                 l3381 23DA                                   l3373 1D74  
                                 l3365 1D50                                   l3357 1D2A  
                                 l3349 1CFA                                   l3461 054A  
                                 l3453 0486                                   l4341 2EF6  
                                 l4405 1A08                                   l4261 29B8  
                                 l4093 148A                                   l4245 1DC4  
                                 l4325 2448                                   l4309 2416  
                                 l3541 16C6                                   l3533 169E  
                                 l3631 1C70                                   l3615 1C1C  
                                 l3607 2CD4                                   l4191 2A92  
                                 l4351 25F0                                   l4343 25C0  
                                 l3519 2360                                   l3703 213E  
                                 l4431 2D7C                                   l4415 2C4A  
                                 l3199 2C9E                                   l3295 0DB2  
                                 l3279 0C9A                                   l3367 1D56  
                                 l3359 1D30                                   l3391 09B6  
                                 l3383 0908                                   l3471 05CE  
                                 l3463 05B2                                   l3455 04F2  
                                 l4335 2EDE                                   l4407 1A20  
                                 l4263 29C0                                   l4095 14A4  
                                 l4247 1DFC                                   l4255 1E3C  
                                 l4327 2458                                   l4319 2432  
                                 l3711 24FC                                   l3551 1712  
                                 l3543 16D2                                   l3535 16AC  
                                 l3633 1C80                                   l3641 1CB6  
                                 l3625 1C46                                   l3609 2CD8  
                                 l4361 159A                                   l4409 2C20  
                                 l3297 0DCC                                   l3289 0D1C  
                                 l3377 236A                                   l3369 1D5C  
                                 l3393 09E6                                   l3385 0956  
                                 l3481 064A                                   l3473 05E2  
                                 l3465 05B4                                   l3457 050A  
                                 l3449 0446                                   l4337 2EEE  
                                 l4097 14BE                                   l4089 1482  
                                 l4249 1E0E                                   l3721 2536  
                                 l3713 2504                                   l3705 24DA  
                                 l3801 17C4                                   l3561 1764  
                                 l3553 1716                                   l3545 16DE  
                                 l3537 16B0                                   l4601 2AA0  
                                 l3491 2BD4                                   l3483 2DD8  
                                 l3635 1C82                                   l3627 1C4A  
                                 l3619 1C22                                   l4195 2A98  
                                 l4187 2A4C                                   l4355 2608  
                                 l3651 2EA0                                   l3731 1B3E  
                                 l4371 160E                                   l4363 15AE  
                                 l3299 0DEA                                   l3379 23AE  
                                 l3395 09F2                                   l3387 0968  
                                 l3475 05FA                                   l3467 05B8  
                                 l3459 051A                                   l4339 2EF2  
                                 l2851 254E                                   l4259 29AC  
                                 l4291 1184                                   l4099 14CA  
                                 l3571 247E                                   l3723 2538  
                                 l3715 2512                                   l3707 24E2  
                                 l3811 183C                                   l3803 17D4  
                                 l3555 1724                                   l3547 16FC  
                                 l3563 176C                                   l3539 16C2  
                                 l4611 2ACA                                   l4603 2AB0  
                                 l3493 2BF0                                   l3485 2DE4  
                                 l3629 1C5C                                   l4189 2A6C  
                                 l4357 261C                                   l4349 25C4  
                                 l3661 26BC                                   l3653 2EA4  
                                 l3645 2E7C                                   l3741 1BDA  
                                 l3733 1B7C                                   l3901 0148  
                                 l4381 1688                                   l4373 1622  
                                 l4429 2D64                                   l3397 0A0A  
                                 l3389 0998                                   l3477 060A  
                                 l3469 05CC                                   l2861 2578  
                                 l2853 2550                                   l4293 119E  
                                 l4285 10EA                                   l3581 24B8  
                                 l3573 2484                                   l3565 2462  
                                 l3725 253E                                   l3717 2518  
                                 l3709 24F4                                   l3813 1840  
                                 l3805 1800                                   l3557 1744  
                                 l3549 1704                                   l4613 2AE0  
                                 l4605 2ABE                                   l4701 0BAC  
                                 l3487 2DF0                                   l3639 1C98  
                                 l3591 2F86                                   l3671 1F24  
                                 l4359 261E                                   l3663 26CC  
                                 l3647 2E80                                   l3727 1B0A  
                                 l3751 2734                                   l4199 135E  
                                 l3911 019C                                   l3903 0160  
                                 l4375 1648                                   l4367 15CA  
                                 l3399 0A44                                   l3479 0616  
                                 l2791 2F52                                   l4391 1976  
                                 l2871 2588                                   l2863 257A  
                                 l2855 2558                                   l4287 110A  
                                 l3583 24BA                                   l3575 248C  
                                 l3567 2466                                   l3719 252E  
                                 l3815 185C                                   l3807 182C  
                                 l3559 1748                                   l3831 0E6C  
                                 l4615 2AE4                                   l4607 2AC2  
                                 l4631 0FBE                                   l4711 0BDA  
                                 l3497 2BF6                                   l3489 2DF4  
                                 l3593 2B86                                   l3681 1F6E  
                                 l3673 1F2C                                   l3665 26D6  
                                 l3657 269E                                   l3649 2E90  
                                 l3737 1BB8                                   l3729 1B0E  
                                 l3753 276E                                   l3745 2708  
                                 l3921 0202                                   l3913 01A0  
                                 l3905 016C                                   l4377 1670  
                                 l4369 15EE                                   l3761 29FC  
                                 l2793 2F54                                   l2785 2F4A  
                                 l4393 1982                                   l4385 1954  
                                 l2881 259A                                   l2873 258C  
                                 l2865 257E                                   l2857 255E  
                                 l4289 1130                                   l4297 120E  
                                 l3585 24CC                                   l3577 2490  
                                 l3569 2468                                   l3809 1834  
                                 l3841 0ECA                                   l3833 0E6E  
                                 l3825 0E24                                   l3817 0E00  
                                 l4609 2AC6                                   l4641 1056  
                                 l4633 0FD2                                   l4625 0F96  
                                 l4617 0F7C                                   l4713 0C0A  
                                 l3499 2BFA                                   l3595 2B92  
                                 l3683 1F7E                                   l3675 1F38  
                                 l3667 1EFE                                   l3659 26AE  
                                 l3739 1BC0                                   l3755 277A  
                                 l3747 2714                                   l3691 20E4  
                                 l3915 01C2                                   l3923 020A  
                                 l3907 0186                                   l4571 203C  
                                 l3771 2A20                                   l3763 2A00  
                                 l2795 2F56                                   l2787 2F4E  
                                 l4395 19A0                                   l4387 1958  
                                 l2891 25B4                                   l2883 25A2  
                                 l2875 2590                                   l2867 2582  
                                 l2859 2576                                   l4299 23E8  
                                 l3587 24D0                                   l3579 2492  
                                 l3851 0F0C                                   l3843 0EDC  
                                 l3835 0E7E                                   l3827 0E50  
                                 l3819 0E10                                   l4651 10B6  
                                 l4643 1058                                   l4635 0FE2  
                                 l4627 0FA6                                   l4619 0F92  
                                 l4715 0C36                                   l4707 0BB0  
                                 l3597 2B96                                   l3685 1F80  
                                 l3677 1F46                                   l3669 1F0E  
                                 l3757 2782                                   l3749 271C  
                                 l3693 20EC                                   l3941 0284  
                                 l3933 0248                                   l3917 01DA  
                                 l3909 018E                                   l4573 2040  
                                 l4581 1FA2                                   l3773 2A44  
                                 l3765 2A0E                                   l2797 2F64  
                                 l2789 2F50                                   l4397 19A4  
                                 l4389 196E                                   l2893 25B6  
                                 l2885 25A4                                   l2877 2594  
                                 l2869 2584                                   l3861 0F62  
                                 l3853 0F10                                   l3845 0EE0  
                                 l3837 0EA6                                   l3829 0E58  
                                 l4645 1068                                   l4637 0FEA  
                                 l4629 0FB6                                   l4661 297E  
                                 l4653 2958                                   l4717 0C68  
                                 l4709 0BC8                                   l4741 2D44  
                                 l4733 2D2A                                   l3599 2BC6  
                                 l3687 1F8A                                   l3679 1F50  
                                 l3759 279A                                   l3695 20F8  
                                 l3951 02D4                                   l3943 028A  
                                 l3935 024A                                   l3919 01E6  
                                 l3871 001E                                   l4575 208A  
                                 l4591 201E                                   l4583 1FAE  
                                 l3767 2A10                                   l4399 19C6  
                                 l2895 25B8                                   l2887 25A8  
                                 l2879 2596                                   l3855 0F24  
                                 l3863 0F66                                   l3847 0F04  
                                 l3839 0EC8                                   l4647 1072  
                                 l4639 0FEE                                   l4671 29A6  
                                 l4663 2982                                   l4655 2968  
                                 l4719 0C6C                                   l4743 2D58  
                                 l4735 2D2E                                   l3697 2106  
                                 l3689 20CE                                   l3961 031E  
                                 l3953 02E0                                   l3945 02AE  
                                 l3937 025C                                   l3929 020E  
                                 l3881 006E                                   l3873 0030  
                                 l4577 2098                                   l4593 2032  
                                 l4585 1FDE                                   l3769 2A1E  
                                 l4681 2ED4                                   l4673 2EAC  
                                 l2897 25BA                                   l2889 25B0  
                                 l3865 0F68                                   l3857 0F26  
                                 l3849 0F0A                                   l4649 109C  
                                 l4665 2986                                   l4657 296C  
                                 l4737 2D3C                                   l3699 2124  
                                 l3971 03B2                                   l3963 0322  
                                 l3955 02E4                                   l3947 02BA  
                                 l3939 026E                                   l3891 00E0  
                                 l3883 0076                                   l3875 003C  
                                 l4579 209C                                   l4595 2CEC  
                                 l4587 200C                                   l4683 2ED8  
                                 l4675 2EC2                                   l2899 25BC  
                                 l3795 178A                                   l3867 0F78  
                                 l3859 0F36                                   l4667 2994  
                                 l4659 2970                                   l4691 0B3C  
                                 l4739 2D40                                   l3981 21EC  
                                 l3965 032C                                   l3957 02FC  
                                 l3949 02C2                                   l3893 00E6  
                                 l3885 0092                                   l3877 0044  
                                 l3973 03CC                                   l3869 0012  
                                 l4597 2CF8                                   l4589 2014  
                                 l4677 2ECA                                   l3797 1796  
                                 l4669 29A2                                   l4693 0B4E  
                                 l4685 0AF0                                   l3983 221A  
                                 l3967 03A2                                   l3959 0312  
                                 l3975 03EE                                   l3887 00BA  
                                 l3879 0050                                   l4679 2ECE  
                                 l3799 17B2                                   l4599 2A9C  
                                 l4695 0B5E                                   l4687 0AF4  
                                 l3985 221E                                   l3993 289C  
                                 l3969 03AE                                   l3889 00BE  
                                 l3897 00EC                                   l4697 0B90  
                                 l4689 0B2C                                   l3987 223A  
                                 l3979 21DE                                   l3995 28A0  
                                 l3899 013A                                   l4699 0BA4  
                                 ?_isr 0001                                   l3989 224A  
                                 l3997 28A8                                   l3999 28D8  
                                 STR_1 5FF2                                   STR_2 5FA0  
                                 STR_3 5F6B                                   STR_4 5F87  
                                 STR_5 5FEE                                   STR_6 5FF6  
                                 STR_7 5FBF                                   STR_8 5FE7  
                                 STR_9 5FD6                                   _CREN 007D5C  
                                 u2000 0DFC                                   u2001 0DF8  
                                 u2010 293A                                   u2011 2936  
                                 u2020 2E54                                   u2100 0952  
                                 u2021 2E50                          TFT_DrawChar@c 003A  
                                 u2030 1CCC                                   u2110 0968  
                                 u2031 1CC8                                   u2111 0964  
                                 u3000 0284                                   u2040 1CE6  
                                 u2120 09B6                                   u2200 0446  
                                 u3001 0280                                   u2041 1CE2  
                                 u2121 09B2                                   u2201 0442  
                                 u3010 02AE                                   u2050 1D0C  
                                 u2130 0A44                                   u2210 0456  
                                 u3011 02AA                                   u2051 1D08  
                                 u2131 0A40                                   u2211 0452  
                        TFT_DrawChar@i 004C                                   u2300 2C0C  
                                 u3100 28F0                                   u3020 02D4  
                                 u2060 1D2A                                   u2140 0A6A  
                                 u2220 050A                          TFT_DrawChar@j 004B  
                                 u2301 2C08                                   u3101 28EC  
                                 u3021 02D0                                   u2061 1D26  
                                 u2141 0A66                                   u2221 0506  
                                 _LATA 000F89                                   u2310 2F78  
                                 u3110 1E7E                                   u3030 02FC  
                                 u2070 1D46                                   u2150 0ABC  
                                 u2230 051A                                   _LATB 000F8A  
                                 u2311 2F74                                   u3111 1E7A  
                                 u3031 02F8                                   u2071 1D42  
                                 u2151 0AB8                                   u2231 0516  
                                 _LATC 000F8B                                   u3200 1258  
                                 u2320 2308                                   u3120 1EC4  
                                 u3040 0312                                   u2080 1D6C  
                                 u2160 0AEE                                   u2240 05CC  
                                 u2400 1724                                   u4000 29A2  
                                 u3201 1254                                   u3121 1EC0  
                                 u3041 030E                                   u2081 1D68  
                                 u2161 0AEA                                   u2241 05C8  
                                 u2401 1720                                   u4001 299E  
                                 u2170 2168                                   u3210 127E  
                                 u2330 2318                                   u3130 1EE4  
                                 u3050 03CC                                   u2090 0950  
                                 u2250 05E2                                   u4010 2EC2  
                                 u2410 1764                                   u2171 2164  
                                 u3211 127A                                   u2331 2314  
                                 u3051 03C8                                   u2091 094A  
                                 u2251 05DE                                   u4011 2EBE  
                                 u2411 1760                                   u2180 21C0  
                                 u2500 1C34                                   u3220 12A6  
                                 u2340 2350                                   u3140 1EF4  
                                 u3060 03EE                                   u2260 05FA  
                                 u3300 1574                                   u2420 1788  
                                 u4020 0B2C                                   u2181 21BC  
                                 u2501 1C30                                   u3221 12A2  
                                 u3141 1EF0                                   u3061 03EA  
                                 u2261 05F6                                   u3301 1570  
                                 u2421 1784                                   u4021 0B28  
                                 u2190 21DA                                   u2510 1C46  
                                 u3070 220A                                   u3310 2DD6  
                                 u3230 1306                                   u2350 2360  
                                 u3150 1882                                   u2270 060A  
                                 u2430 2478                                   u4030 0BA4  
                                 u2191 21D6                                   u2511 1C42  
                                 u3071 2206                                   u3311 2DD2  
                                 u3231 1302                                   u2351 235C  
                                 u2327 22FE                                   u3151 187E  
                                 u2271 0606                                   u2431 2474  
                                 u4031 0BA0                                   u2280 2E0E  
                                 u2520 1C5C                                   u3080 224A  
                                 u3400 2A92                                   u2600 1F24  
                                 u3240 1316                                   u3160 189C  
                                 u2440 24CC                                   u3320 2E28  
                                 u4040 0BDA                                   u2281 2E0A  
                                 u2521 1C58                                   u3081 2246  
                                 u3401 2A8E                                   u2601 1F20  
                                 u3241 1312                                   u3137 1EDA  
                                 u3161 1898                                   u2441 24C8  
                                 u3321 2E24                                   u4041 0BD6  
                                 u2290 2BF0                                   u2530 1C6C  
                                 u2450 2BB6                                   u3090 28D8  
                                 u2610 1F46                                   u3170 18DC  
                                 u3410 13A4                                   u3250 14A4  
                                 u3330 2E3E                                   u4050 0C7C  
                        TFT_DrawChar@x 0036                                   u2291 2BEC  
                                 u2531 1C68                                   u3091 28D4  
                                 u2611 1F42                                   u2347 2346  
                                 u3171 18D8                                   u3411 13A0  
                                 u4107 2568                                   u3251 14A0  
                                 u3331 2E3A                                   u4051 0C78  
                        TFT_DrawChar@y 0038                                   u2540 1C94  
                                 u2460 2BC6                                   u2620 1F6E  
                                 u2700 1B3E                                   u3180 192C  
                                 u3420 13EE                                   u3260 14BE  
                                 u2541 1C90                                   u2461 2BC2  
                                 u2621 1F6A                                   u2701 1B3A  
                                 u3181 1928                                   u3421 13EA  
                                 u4117 1962                                   u3261 14BA  
                                 u2550 1CB6                                   u2470 2CD0  
                                 u3190 1246                                   u2710 1B7C  
                                 u3430 144A                                   u2630 20E4  
                                 u3270 14E4                                   u2390 16FC  
                                 u2551 1CB2                                   u3191 1242  
                                 u2711 1B78                                   u3431 1446  
                                 u2631 20E0                                   u4127 19E4  
                                 u3271 14E0                                   u2391 16F8  
                                 u2480 2CEA                                   u2560 2E90  
                                 u2720 1B9C                                   u3440 1470  
                                 u2640 2106                                   u2800 2A34  
                                 u3280 1508                                   u3600 2458  
                                 u2481 2CE6                                   u2457 2BAC  
                                 u2561 2E8C                                   u3441 146C  
                                 u2641 2102                                   u2801 2A2C  
                                 u4137 2F5C                                   u3281 1504  
                                 u3601 2454                                   u2490 1C1C  
                                 u3450 22BE                                   u2570 2EA0  
                                 u2730 1BDA                                   u2650 2124  
                                 u3610 2EEE                                   u3290 1564  
                                 u2491 1C18                                   u2571 2E9C  
                                 u2731 1BD6                                   u2715 1B6C  
                                 u2651 2120                                   u3611 2EEA  
                                 u3291 1560                                   u3620 2604  
                                 u2580 26BC                                   u2740 2734  
                                 u2900 0030                                   u3540 1130  
                                 u3460 1DC4                                   u2660 24F4  
                                 u2820 185C                                   u2477 2CC6  
                                 u3621 2600                                   u2581 26B8  
                                 u2717 1B62                                   u2741 2730  
                                 u2901 002C                                   u3541 112C  
                                 u3461 1DC0                                   u2661 24F0  
                                 u2821 1858                                   u3630 262E  
                                 u2590 26F6                                   u2750 2764  
                                 u2910 006E                                   u1950 0CC8  
                                 u3550 119E                                   u3470 1E0E  
                                 u2670 2512                                   u2830 0E10  
                                 u3455 22B4                                   u3631 262A  
                                 u2591 26F2                                   u2727 1B92  
                                 u2751 2760                                   u2911 006A  
                                 u3551 119A                                   u3471 1E0A  
                                 u2671 250E                                   u2831 0E0C  
                                 u2760 279A                                   u2920 00DC  
                                 u3640 15C6                                   u1960 0CE8  
                                 u3480 29E8                                   u3560 2400  
                                 u2680 252E                                   u2840 0E7E  
                                 u2761 2796                                   u2921 00D8  
                                 u3641 15C2                                   u1961 0CE4  
                                 u3561 23FC                                   u2681 252A  
                                 u2841 0E7A                                   u2690 1B2E  
                                 u2770 27CA                                   u2930 013A  
                                 u3650 1648                                   u1970 0D36  
                                 u2818 2A36                                   u3490 29FA  
                                 u3570 2416                                   u2850 0EA6  
                                 u2771 27C6                                   u2931 0136  
                                 u3651 1644                                   u1971 0D32  
                                 u1955 0CBE                                   u3491 29F6  
                                 u3571 2412                                   u2851 0EA2  
                                 _PEIE 007F96                                   u2940 0148  
                                 u3660 1684                                   u1980 0D5E  
                                 u3900 20CC                                   u2780 2A0E  
                                 u3580 242C                                   u2860 0EDC  
                                 u2941 0144                                   u3661 1680  
                                 u1981 0D5A                                   u3901 20C8  
                                 u2781 2A0A                                   u3581 2428  
                                 u2861 0ED8                                   u2950 019C  
                                 u1990 0DCC                                   u2790 2A1E  
                                 u3670 19DA                                   u3590 2442  
                                 u2870 0F24                                   u3910 2AB0  
                                 u2951 0198                                   u1991 0DC8  
                                 u2791 2A1A                                   u3671 19D6  
                                 u3487 29DE                                   u3591 243E  
                                 u2871 0F20                                   u3911 2AAC  
                                 u2960 01C2                                   u3680 1A20  
                                 u2880 0F36                                   u3920 2ABE  
                                 u2697 1B24                                   u2961 01BE  
                                 u3681 1A1C                                   u2881 0F32  
                                 u3921 2ABA                                   u2970 0244  
                                 u2890 0F78                                   u3930 2AE0  
                                 u2971 0240                                   u2891 0F74  
                                 u3931 2ADC                                   _RCIE 007CED  
                                 u2980 025C                                   u3940 0FA6  
                                 _RCIF 007CF5                                   u2981 0258  
                                 u3941 0FA2                                   u2990 026E  
                                 u3950 0FD2                                   u2991 026A  
                                 u3951 0FCE                                   u3880 2070  
                                 u3960 1068                                   u3961 1064  
                                 u3890 20BC                                   u3970 2968  
                                 u3971 2964                                   u3980 297E  
                                 u3981 297A                                   u3990 2994  
                                 u3887 2066                                   u3991 2990  
                                 u3897 20B2                                   _OERR 007D59  
                                 _RBPU 007F8F                __size_of_A6_BaudRateGet 0124  
              __size_of_A6_BaudRateSet 0104                                   _TXIF 007CF4  
            _Ecg_ProcessHeartRate$1017 007C              _Ecg_ProcessHeartRate$1018 007E  
               ??_Ecg_ProcessHeartRate 006B                          TFT_DrawLine@t 0024  
                                 abs@a 0005                 ??_Ecg_ProcessHeartbeat 002C  
                                 _atoi 1482                                   _atol 1224  
                                 _main 2D2A                        A6_BaudRateGet@j 0049  
                                 _init 254E                                   _tmp1 00C4  
                                 _loop 0AF0                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 0058  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                    TFT_DrawBitmap@color 001D  
                    TFT_Flood@color_hi 001A                      TFT_Flood@color_lo 001B  
                          _Ecg_Process 2958                          __CFG_IESO$OFF 000000  
          __size_of_EUSART_BaudRateSet 0084        __size_of_A6_NetworkGetRSSILevel 007A  
         __end_of_EUSART_BufferGetChar 2C20                        ??_TFT_GetHeight 0007  
                         ___param_bank 000000          ?_Ecg_Background_Leads_Failure 0001  
        A6_BaudRateSet@currentBaudRate 0094                                  ??_abs 0007  
                                ??_isr 0003                          __CFG_PLLDIV$1 000000  
                      ??_TFT_DrawPixel 0013                         __CFG_CCP2MX$ON 000000  
                        TFT_Init@color 0021                                  ?_atoi 000B  
                                ?_atol 0011                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 1D7E  
                                ?_loop 0001                                  STR_10 5FD6  
                                STR_11 5F94                                  STR_12 5FF6  
                                STR_20 5FC8                                  STR_21 5FE0  
                                STR_22 5FD6                                  STR_30 5FFB  
                                STR_14 5FAB                                  STR_23 5FD6  
                                STR_31 5FFB                                  STR_15 5FD0  
                                STR_24 5FFB                                  STR_32 5FF9  
                                STR_33 5FFD                                  STR_25 5FB5  
                                STR_18 5FFB                                  STR_26 5FD8  
                                STR_27 5FD6                                  STR_28 5FD6  
                                STR_29 5FFB                        __end_of___lldiv 1FA2  
                      ___awdiv@divisor 0007                        __end_of___llmod 2156  
                       TFT_DrawChar@bg 003D                        __end_of___lwdiv 254E  
                       TFT_DrawChar@xl 0045                                  i2l145 2692  
                                i2l461 2F48                                  i2l681 289A  
                      ___awdiv@counter 0009                                  _RCREG 000FAE  
               ??_Ecg_ProcessInterrupt 0005                                  _TMR3H 000FB3  
                                _TMR3L 000FB2                                  _SPBRG 000FAF  
                                _PORTB 000F81                          __CFG_USBDIV$2 000000  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TXREG 000FAD  
                                _Ecg_X 0056                                  _Ecg_Y 00D6  
                        __CFG_PWRT$OFF 000000                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0009                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                      ??_EUSART_RX_Flush 0005  
                       TFT_DrawLine@x0 0017                         TFT_DrawLine@x1 001B  
                       TFT_DrawLine@y0 0019                         TFT_DrawLine@y1 001D  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                       TFT_DrawLine@dx 0034                         TFT_DrawLine@dy 002C  
                        __CFG_WRTD$OFF 000000                         __CFG_EBTRB$OFF 000000  
              __size_of_Ecg_CheckLeads 0050                        __end_of_dpowers 5F21  
                      __end_of_isdigit 2EAC                       __end_of_TFT_Font 5E2D  
                     __end_of_TFT_Init 1A30                                  atoi@a 0010  
                                atol@a 001A                                  atol@c 001E  
                                atoi@s 000B                                  atol@s 0011  
                       TFT_DrawPixel@h 0013                         TFT_DrawPixel@v 0015  
                       TFT_DrawPixel@x 000D                         TFT_DrawPixel@y 000F  
                   __size_of_TFT_Flood 0182                        __end_of_sleepMS 2DD8  
                     _TFT_DrawFillRect 236A                                  tablat 000FF5  
                                loop@i 00AD                     __size_of_TFT_Reset 001E  
               __size_of_Ecg_Interrupt 0020                       __end_of_Ecg_Draw 1870  
                     __end_of_Ecg_Init 2EDC                       __end_of_Ecg_Read 24DA  
                 TFT_DrawBitmap@bitmap 001B                                  ttemp5 0059  
                                ttemp6 005C                                  ttemp7 0060  
                                status 000FD8                                  wtemp8 0059  
                      __end_of_sprintf 03FC            EUSART_BufferGetChar@timeout 000F  
                      __end_of_strcspn 27D4                        __end_of_strncmp 1BE4  
                  TFT_FullScreen@color 001C                         __CFG_MCLRE$OFF 000000  
                       TFT_Flood@color 000D                        __initialization 27D4  
                         __end_of_atoi 159A                           __end_of_atol 135E  
                         __end_of_main 2D64                           __end_of_init 25C0  
                         __end_of_loop 0C7E                              ??_A6_Init 0052  
                               ??_atoi 000D                                 ??_atol 0015  
                               ??_main 0053                                 ??_init 0005  
                               ??_loop 004F                          _Ecg_Draw$2248 0036  
                     ??_TFT_DrawBitmap 001F                          __activetblptr 000002  
               _A6_NetworkGetRSSILevel 23E8                       ??_TFT_DrawString 004D  
                         ??_A6_IsAlive 001F                           ??_A6_Command 001F  
                       _EUSART_TX_Char 2F68                       ___llmod@dividend 0012  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                     ___awdiv@dividend 0005                      _TFT_DrawChar$2245 0047  
                    _TFT_DrawChar$2246 0049                                 i2l4521 2664  
                               i2l4531 2680                                 i2l4523 2668  
                               i2l4515 263A                                 i2l4533 268E  
                               i2l4525 266C                                 i2l4517 2648  
                               i2l4471 2F44                                 i2l4527 2670  
                               i2l4519 2656                                 i2l4481 2870  
                               i2l4473 2F46                                 i2l4529 2672  
                               i2l4483 2874                                 i2l4475 2838  
                               i2l4485 2886                                 i2l4477 284A  
                               i2l4469 2F2A                                 i2l4487 288A  
                               i2l4479 284E                  _A6_BaudRateAutoDetect 25C0  
                               _TMR3IE 007D01                                 _TMR3IF 007D09  
                               _SPBRGH 000FB0                        TFT_DrawBitmap@h 0024  
                      TFT_DrawBitmap@i 0026                        TFT_DrawBitmap@j 0021  
                      TFT_DrawBitmap@w 0023                        TFT_DrawBitmap@x 0017  
                      TFT_DrawBitmap@y 0019          TFT_OrientationSet@orientation 0020  
     __size_of_Ecg_Background_Leads_Ok 009A                         __CFG_XINST$OFF 000000  
                      TFT_DrawLine@err 0030                       ??_TFT_FullScreen 001E  
                               ___lmul 269E                                 ___wmul 2F04  
               A6_BaudRateSet@baudRate 004A                              ??___awdiv 0009  
                            ??___lldiv 000D                              ??___llmod 001A  
                            ??___lwdiv 0009                      ?_EUSART_TX_String 0009  
                   __end_of_A6_IsAlive 2A9C                                 _memset 2DD8  
                        _Ecg_Interrupt 2F2A                      __end_of_TFT_Flood 0E00  
                               clear_0 2812                                 clear_1 281E  
                   __end_of_A6_Command 2264                       ___awdiv@quotient 000B  
                    __end_of_TFT_Reset 2F68                     ??_EUSART_TX_String 000C  
                               _strchr 22E8                                 _strcmp 289C  
                               _strcpy 29AC                                 _strlen 2B86  
                               _strtok 1870                                 _strspn 2708  
                               _strstr 1E40          A6_NetworkGetOperator@operator 001F  
                         __pdataCOMRAM 0056                              ??_isdigit 0005  
                         __mediumconst 592C                 __end_of_EUSART_TX_Char 2F80  
                            ??_sleepMS 0009                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                 _EUSART_BufferGetChar 2BD4                        TFT_DrawString@x 0060  
                      TFT_DrawString@y 0062                              ??_sprintf 0023  
                            ??_strcspn 000F                              ??_strncmp 000F  
                       _A6_BaudRateGet 135E                         _A6_BaudRateSet 159A  
                    loop@operatorRSSIX 00AB                   __size_of_EUSART_Init 0048  
                           __accesstop 0060                __end_of__initialization 282A  
               A6_BaudRateSet@response 0060                        __CFG_PBADEN$OFF 000000  
                        ___rparam_used 000001                        TFT_Flood@blocks 0017  
                        loop@operatorX 00A9                         __pcstackCOMRAM 0001  
                         __pidataBANK0 2F80                         ?_Ecg_Interrupt 0001  
                            ?_TFT_Init 0021     Ecg_ProcessHeartbeat@ecgDeltaAbsSum 0030  
              __size_of_Ecg_ProcessEcg 004E         __size_of_A6_NetworkGetOperator 013A  
      Ecg_ProcessHeartbeat@ecgDeltaSum 002E          __end_of_A6_NetworkGetOperator 1224  
                            ?_Ecg_Draw 0001                              ?_Ecg_Init 0001  
                            ?_Ecg_Read 0005                     _TFT_OrientationGet 2F8C  
                   _TFT_OrientationSet 2EDC           __size_of_EUSART_RX_Interrupt 0064  
                      ?_EUSART_TX_Char 0001                  ?_EUSART_BufferGetChar 000F  
                       _Ecg_CheckLeads 29FC                 __end_of_A6_BaudRateGet 1482  
               __end_of_A6_BaudRateSet 169E                           sprintf@width 0030  
                  ?_TFT_OrientationGet 0001                 ?_A6_BaudRateAutoDetect 0001  
                  ?_TFT_OrientationSet 001E                             __pbssBANK0 00AE  
                           __pbssBANK1 0100                           ?_Ecg_Process 0001  
                 A6_ReadLine@iResponse 0016                                ?___lmul 0005  
                              ?___wmul 0005             EUSART_BaudRateSet@baudRate 0012  
                 ??_TFT_OrientationGet 0005                   ??_TFT_OrientationSet 0020  
                      _EUSART_RX_Flush 2F86                     A6_ReadLine@lineLen 0013  
                           ??_TFT_Init 0023                                ?_memset 0005  
                              _A6_Init 2D64                         ___lmul@product 000D  
             __end_of_TFT_DrawFillRect 23E8                                ?_strchr 0005  
                              ?_strcmp 0005                                ?_strcpy 0005  
                              ?_strlen 0005                          ??_A6_ReadLine 0016  
                              ?_strtok 0012                                ?_strspn 000B  
                              ?_strstr 0010                             ??_Ecg_Draw 0036  
                           ??_Ecg_Init 004F                             ??_Ecg_Read 0007  
                   A6_ReadLine@timeout 0014                 TFT_WriteRegister@h_708 000B  
               TFT_WriteRegister@l_709 000C                 __end_of_Ecg_CheckLeads 2A4C  
                     TFT_DrawChar@line 0044                       TFT_DrawChar@size 003F  
                         A6_ReadLine@c 0017               ?_EUSART_RX_AvailableData 0005  
                      ?_A6_BaudRateGet 001F                        ?_A6_BaudRateSet 004A  
              TFT_OrientationSet@color 001E                              TFT_Init@i 002C  
                      __CFG_VREGEN$OFF 000000                  TFT_DrawFillRect@color 0026  
           __end_of_EUSART_BaudRateSet 22E8                _Ecg_Background_Leads_Ok 1FA2  
        __size_of_Ecg_ProcessHeartRate 016E          __size_of_Ecg_ProcessHeartbeat 017C  
                              __Hparam 0000                                __Lparam 0000  
                    A6_Command@command 0018                              _ECG_FLAGS 00D2  
                      ??_Ecg_Interrupt 0001              A6_NetworkGetRSSI@response 001F  
                              ___awdiv 1CBA                        __size_of___lmul 006A  
                __end_of_TFT_GetHeight 2B86                                ___lldiv 1EFE  
                      __size_of___wmul 0026                                ___llmod 20CE  
                              ___lwdiv 24DA                      _A6_NetworkGetRSSI 1D7E  
                      __CFG_STVREN$OFF 000000                      A6_Command@timeout 001A  
                        _ECG_HEARTBEAT 00AE                                __pcinit 27D4  
                      __size_of_memset 0038                                __ramtop 0800  
                        _ECG_HEARTRATE 00C0                ?_A6_NetworkGetRSSILevel 0001  
                              __ptext0 2D2A                                __ptext1 0AF0  
                              __ptext2 2958                                __ptext3 2E10  
                              __ptext4 0F7C                                __ptext5 2A9C  
                              __ptext6 0E00                                __ptext7 169E  
                              __ptext8 178A                                __ptext9 24DA  
                   ?_A6_NetworkGetRSSI 0001                  __end_of_TFT_DrawPixel 1B0A  
                      __size_of_strchr 0082                        __size_of_strcmp 0060  
                      __size_of_strcpy 0050                        __size_of_strlen 004E  
                      __size_of_strtok 00E2                        __size_of_strspn 0066  
                      __size_of_strstr 00BE                                _dpowers 5EF9  
                         __size_of_abs 0034                                _isdigit 2E7A  
                         __size_of_isr 2696                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                 ??_EUSART_BufferGetChar 0011  
                              _sleepMS 2D9E          __size_of_Ecg_ProcessInterrupt 0036  
                  ??_A6_NetworkGetRSSI 001F                    __end_of_A6_ReadLine 1CBA  
                              _sprintf 0012                                _strcspn 276E  
                              _strncmp 1B0A                         __pintcode_body 2630  
                            _EUSART_RX 0100                   end_of_initialization 282A  
                              memset@c 0007                                memset@n 0009  
                              memset@p 000B                          __Lmediumconst 592C  
                              int_func 2630                     TFT_WriteRegister@h 0009  
                   TFT_WriteRegister@l 000A                        ___lldiv@divisor 0009  
              __end_of_EUSART_RX_Flush 2F8C                        ___lldiv@counter 0011  
            Ecg_CheckLeads@leadsStatus 0008                              _RCSTAbits 000FAB  
            __end_of_A6_NetworkGetRSSI 1E40                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                          ?_TFT_GetWidth 0005  
                     TFT_DrawString@bg 0068                          ?_TFT_DrawChar 0036  
                        ?_TFT_DrawLine 0017         __end_of_A6_NetworkGetRSSILevel 2462  
                              strcmp@r 000B                                strlen@s 0005  
                       _Ecg_ProcessEcg 2A9C                                strspn@i 0010  
                            _PORTAbits 000F80        __end_of_EUSART_RX_AvailableData 21DE  
                            _PORTCbits 000F82                              _TFT_Flood 0C7E  
                            _TFT_Reset 2F4A              __size_of_EUSART_TX_String 0040  
            ??_Ecg_Background_Leads_Ok 004D                            TFT_Init@cmd 002A  
                            _TXSTAbits 000FAC                     TFT_DrawBitmap@byte 0025  
                  _EUSART_RX_Interrupt 2838                   __size_of_Ecg_Process 0054  
                       ??_TFT_GetWidth 0007                         ??_TFT_DrawChar 0040  
                       ??_TFT_DrawLine 0021                 __end_of_Ecg_ProcessEcg 2AEA  
             EUSART_RX_AvailableData@t 000B                         __end_of___lmul 2708  
                       __end_of___wmul 2F2A                            _BAUDCONbits 000FB8  
                   A6_IsAlive@response 001F                          __pidataCOMRAM 2F90  
                     ??_EUSART_TX_Char 0005                         __end_of_memset 2E10  
                    __size_of_TFT_Init 00DE                           _MILLISECONDS 00CC  
                          _A6_ReadLine 1BE4                             ?_TFT_Flood 000D  
                       __end_of_strchr 236A                         __end_of_strcmp 28FC  
                       __end_of_strcpy 29FC                         __end_of_strlen 2BD4  
                       __end_of_strtok 1952                         __end_of_strspn 276E  
                       __end_of_strstr 1EFE                             ?_TFT_Reset 0001  
                  start_initialization 27D4                   ?_EUSART_RX_Interrupt 0001  
                    __size_of_Ecg_Draw 00E6                ??_A6_BaudRateAutoDetect 003F  
                    __size_of_Ecg_Init 0030                      __size_of_Ecg_Read 0078  
                          __end_of_abs 2E7A                            __end_of_isr 269E  
                        ??_EUSART_Init 000D       Ecg_ProcessHeartbeat@ecgDeltaDiff 0032  
                  TFT_SetAddrWindow@x1 000D                    TFT_SetAddrWindow@x2 0011  
                  TFT_SetAddrWindow@y1 000F                    TFT_SetAddrWindow@y2 0013  
           A6_NetworkGetRSSI@RSSIToken 003F                  Ecg_ProcessHeartRate@i 0086  
                Ecg_ProcessHeartRate@j 0087                __size_of_TFT_DrawBitmap 00EC  
                  EUSART_TX_String@len 000B                    EUSART_TX_String@str 0009  
                Ecg_ProcessHeartbeat@i 0036                        ___llmod@divisor 0016  
                      ___llmod@counter 001A                __size_of_TFT_DrawString 0092  
                     ?_EUSART_RX_Flush 0001                    TFT_Init@orientation 0029  
           __size_of_A6_NetworkGetRSSI 00C2                      _TFT_Init_Sequence 5E2D  
                             ??___lmul 000D                               ??___wmul 0009  
                      ?_Ecg_ProcessEcg 0001                  A6_Command@responseLen 001E  
                          __pdataBANK0 00D4                       __CFG_LPT1OSC$OFF 000000  
                             ??_memset 000B                               ?_A6_Init 004E  
                    ?_TFT_DrawFillRect 001E         EUSART_RX_AvailableData@timeout 0005  
                             ??_strchr 0009                               ??_strcmp 0009  
                             ??_strcpy 0009                               ??_strlen 0007  
                     ??_A6_BaudRateGet 0023                               ??_strtok 0016  
                             ??_strspn 000F                               ??_strstr 0014  
                     ??_A6_BaudRateSet 004E                  A6_BaudRateSet@request 0080  
                   ??_TFT_DrawFillRect 0028                  ??_EUSART_RX_Interrupt 0001  
       ??_Ecg_Background_Leads_Failure 004D                __size_of_TFT_FullScreen 005C  
                          __pbssCOMRAM 0053                  _A6_NetworkGetOperator 10EA  
                        __pcstackBANK0 0060                           loop@operator 0088  
                         _isdigit$1960 0006           _A6_LAST_COMMAND_MILLISECONDS 00C8  
                          sprintf@flag 002F                            sprintf@prec 0027  
                          Ecg_Draw@ecg 0038                    __end_of_EUSART_Init 2C68  
     __size_of_EUSART_RX_AvailableData 0088              __end_of_TFT_Init_Sequence 5EF9  
                     ___lwdiv@dividend 0005                            Ecg_Read@ecg 0009  
                            __pintcode 0008                          __pmediumconst 592C  
                             ?___awdiv 0005                               ?___lldiv 0005  
                             ?___llmod 0012                               ?___lwdiv 0005  
          __size_of_TFT_OrientationGet 0004            __size_of_TFT_OrientationSet 0028  
   A6_NetworkGetOperator@operatorToken 0023                       ??_Ecg_CheckLeads 0007  
                   _EUSART_BaudRateSet 2264                  TFT_WriteRegister@data 0007  
         __end_of_Ecg_ProcessHeartRate 10EA           __end_of_Ecg_ProcessHeartbeat 0F7C  
                          ??_TFT_Flood 0013                               ?_isdigit 0001  
                 EUSART_RX_Interrupt@c 0002                            ??_TFT_Reset 0005  
                  ?_EUSART_BaudRateSet 0012                               ?_sleepMS 0005  
                 __end_of_A6_BAUDRATES 5F2D                      _TFT_WriteRegister 2C68  
                     ___lwdiv@quotient 0009                       _EUSART_TX_String 2CAC  
                             ?_sprintf 001B                   __end_of_TFT_GetWidth 2B38  
                 __end_of_TFT_DrawChar 068A                               ?_strcspn 000B  
                             ?_strncmp 0009                   __end_of_TFT_DrawLine 0AF0  
                   ?_TFT_WriteRegister 0005   Ecg_ProcessHeartRate@heartbeatAverage 0080  
                       ___wmul@product 0009                      TFT_DrawChar@color 003B  
                  ??_TFT_WriteRegister 0009                   ??_EUSART_BaudRateSet 0016  
         __end_of_Ecg_ProcessInterrupt 2E46                               i2u380_40 2656  
                             i2u380_41 2652                               i2u381_40 2680  
                             i2u381_41 267C                               i2u374_40 284A  
                             i2u382_40 268E                               i2u374_41 2846  
                             i2u382_41 268A                               i2u375_40 2860  
                             i2u375_41 2858                               i2u377_40 2886  
                             i2u376_48 2862                               i2u377_41 2882  
                             i2u379_40 2648                               i2u379_41 2644  
                             _GO_nDONE 007E11                               _UCFGbits 000F6F  
                     __CFG_WDTPS$32768 000000                               _UCONbits 000F6D  
                __end_of_Ecg_Interrupt 2F4A                               _TFT_Font 592D  
                             _TFT_Init 1952                       __size_of_A6_Init 003A  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0                      ___wmul@multiplier 0005  
                             _Ecg_Draw 178A                               _Ecg_Init 2EAC  
                             _Ecg_Read 2462                 ?_A6_NetworkGetOperator 001F  
                           TFT_Flood@i 0019                               _Ecg_Xold 00D8  
                             _Ecg_Yold 00D4              __end_of_TFT_WriteRegister 2CAC  
                   TFT_DrawPixel@color 0011          __size_of_EUSART_BufferGetChar 004C  
                           _A6_IsAlive 2A4C                        EUSART_TX_Char@c 0005  
                          _EUSART_Init 2C20                      TFT_DrawFillRect@h 0024  
                           _A6_Command 21DE                      TFT_DrawFillRect@w 0022  
                    TFT_DrawFillRect@x 001E                      TFT_DrawFillRect@y 0020  
                    ___lmul@multiplier 0005                              copy_data0 27E8  
                       _TFT_DrawBitmap 169E                 __size_of_TFT_GetHeight 004E  
                    _TFT_SetAddrWindow 068A                        _TFT_Orientation 0055  
                       _TFT_DrawString 203C                 __size_of_TFT_DrawPixel 00DA  
                   ?_TFT_SetAddrWindow 000D                               __Hrparam 0000  
               A6_BaudRateGet@baudRate 0043                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0027                         _TFT_ConsoleRow 0053  
            Ecg_ProcessHeartRate@jPrev 0085                             _ECG_BUFFER 00BB  
                  TFT_DrawString@color 0066                    ??_TFT_SetAddrWindow 0015  
                    TFT_DrawLine@t_767 0026                      TFT_DrawLine@t_768 0028  
                    TFT_DrawLine@t_769 002A                       __size_of___awdiv 00C4  
        Ecg_ProcessHeartRate@heartrate 0084                       __size_of___lldiv 00A4  
                     __size_of___llmod 0088                      TFT_DrawLine@color 001F  
                     __size_of___lwdiv 0074                      TFT_DrawLine@steep 0032  
                      A6_Init@baudRate 004E                      TFT_DrawLine@ystep 002E  
                         ?_A6_ReadLine 0011                         _TFT_FullScreen 28FC  
                   A6_Command@response 001C                             sprintf@val 0029  
                     __size_of_isdigit 0032                        ___lwdiv@divisor 0007  
                      ___lwdiv@counter 000B                 __end_of_TFT_DrawBitmap 178A  
                             __ptext10 2462                               __ptext11 23E8  
                             __ptext20 2EAC                               __ptext12 1D7E  
                             __ptext21 29FC                               __ptext13 1482  
                             __ptext30 236A                               __ptext22 1FA2  
                             __ptext14 10EA                               __ptext31 28FC  
                             __ptext23 2CEC                               __ptext15 29AC  
                             __ptext40 159A                               __ptext32 068A  
                             __ptext24 203C                               __ptext16 254E  
                             __ptext41 0012                               __ptext33 2AEA  
                             __ptext25 03FC                               __ptext17 1952  
                             __ptext50 22E8                               __ptext42 2F04  
                             __ptext34 2B38                               __ptext26 0908  
                             __ptext18 2F4A                               __ptext51 1224  
                             __ptext43 20CE                               __ptext35 2F8C  
                             __ptext27 2E46                               __ptext19 2EDC  
                             __ptext60 21DE                               __ptext52 2E7A  
                             __ptext44 135E                               __ptext36 0C7E  
                             __ptext28 1CBA                               __ptext61 2B86  
                             __ptext53 269E                               __ptext45 1870  
                             __ptext37 2C68                               __ptext29 1A30  
                             __ptext70 2F2A                               __ptext62 2CAC  
                             __ptext54 25C0                               __ptext46 2708  
                             __ptext38 2C20                               __ptext71 2838  
                             __ptext63 2F68                               __ptext55 2D9E  
                             __ptext47 276E                               __ptext39 2D64  
                             __ptext64 2F86                               __ptext56 2264  
                             __ptext48 1E40                               __ptext65 1BE4  
                             __ptext57 1EFE                               __ptext49 1B0A  
                             __ptext66 2DD8                               __ptext58 2A4C  
                             __ptext67 2BD4                               __ptext59 289C  
                             __ptext68 2156                       __size_of_sleepMS 003A  
       __size_of_A6_BaudRateAutoDetect 0070          __end_of_A6_BaudRateAutoDetect 2630  
                 TFT_WriteRegister@reg 0005              __end_of_TFT_SetAddrWindow 0908  
               A6_BaudRateGet@response 0023                       __size_of_sprintf 03EA  
                     __size_of_strcspn 0066                       __size_of_strncmp 00DA  
                           strcpy@from 0007                 __end_of_TFT_DrawString 20CE  
                            sleepMS@ms 0005                          __size_of_atoi 0118  
                        __size_of_atol 013A                          __size_of_main 003A  
                        __size_of_init 0072                          __size_of_loop 018E  
              _EUSART_RX_AvailableData 2156             A6_NetworkGetRSSILevel@RSSI 0041  
                        ??_Ecg_Process 004F                             strncmp@len 000D  
                 _Ecg_ProcessHeartRate 0F7C                       ??_Ecg_ProcessEcg 004F  
                 _Ecg_ProcessHeartbeat 0E00                         _ECG_ICON_HEART 5F2D  
                             int$flags 0058                               atoi@sign 000F  
                             atol@sign 0019                          _TFT_GetHeight 2B38  
               __end_of_TFT_FullScreen 2958                  __CFG_CPUDIV$OSC1_PLL2 000000  
                        _TFT_DrawPixel 1A30                            _OSCTUNEbits 000F9B  
                __size_of_TFT_GetWidth 004E                  __size_of_TFT_DrawChar 028E  
                __size_of_TFT_DrawLine 01E8             __size_of_TFT_WriteRegister 0044  
                 _Ecg_ProcessInterrupt 2E10               ?_Ecg_Background_Leads_Ok 0001  
                             isdigit@c 0007                               memset@p1 0005  
                      ?_TFT_DrawBitmap 0017                            ?_A6_IsAlive 0001  
                   TFT_DrawString@size 006A                            ?_A6_Command 0018  
                             intlevel2 0000                              sprintf@ap 002D  
                            sprintf@sp 001B              __size_of_TFT_DrawFillRect 007E  
                      ?_TFT_DrawString 0060                              strchr@chr 0007  
                      A6_ReadLine@line 0011                              strchr@ptr 0005  
                     ___lldiv@dividend 0005                 __end_of_ECG_ICON_HEART 5F6B  
                ?_Ecg_ProcessHeartRate 0001                  ?_Ecg_ProcessHeartbeat 0001  
                            strcspn@s1 000B                              strcspn@s2 000D  
                             sleepMS@t 0009                              strncmp@s1 0009  
                            strncmp@s2 000B               ??_A6_NetworkGetRSSILevel 0041  
                           _OSCCONbits 000FD3              Ecg_ProcessHeartbeat@delta 0034  
                         _A6_BAUDRATES 5F21               __end_of_EUSART_TX_String 2CEC  
                       ?_TFT_GetHeight 0005                    __end_of_Ecg_Process 29AC  
                         _TFT_GetWidth 2AEA                           _TFT_DrawChar 03FC  
                         _TFT_DrawLine 0908            __end_of_EUSART_RX_Interrupt 289C  
             __size_of_EUSART_RX_Flush 0006                        ?_TFT_FullScreen 001C  
                    TFT_DrawString@str 0064                         ?_TFT_DrawPixel 000D  
                             sprintf@c 0032                               sprintf@f 001D  
                             strcmp@s1 0005                               strcmp@s2 0007  
                     ___lldiv@quotient 000D                               strcpy@cp 0009  
                             strlen@cp 0007                               strcpy@to 0005  
                             strcspn@i 0010                  ?_Ecg_ProcessInterrupt 0001  
          A6_BaudRateGet@baudRateToken 0047                               strtok@s1 0012  
                             strtok@s2 0014                               strspn@s1 000B  
                             strspn@s2 000D                               strtok@sp 00D0  
                             strstr@s1 0010                               strstr@s2 0012  
              __size_of_EUSART_TX_Char 0018       A6_NetworkGetOperator@operatorLen 0021  
           __size_of_TFT_SetAddrWindow 027E              ??_EUSART_RX_AvailableData 0007  
                   __CFG_FOSC$HSPLL_HS 000000   __end_of_Ecg_Background_Leads_Failure 2D2A  
__size_of_Ecg_Background_Leads_Failure 003E           _Ecg_Background_Leads_Failure 2CEC  
           __end_of_TFT_OrientationGet 2F90             __end_of_TFT_OrientationSet 2F04  
