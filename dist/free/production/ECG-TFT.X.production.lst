

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 12 06:52:33 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 2.10
    59                           ; Generated 31/07/2019 GMT
    60                           ; 
    61                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F2455 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  0016C4                     __pidataCOMRAM:
    95                           	opt callstack 0
    96                           
    97                           ;initializer for _Ecg_Y
    98  0016C4  018F               	dw	399
    99                           
   100                           ;initializer for _Ecg_Xold
   101  0016C6  00EF               	dw	239
   102                           
   103                           ;initializer for _Ecg_X
   104  0016C8  00EF               	dw	239
   105                           
   106                           	psect	idataBANK0
   107  0016BC                     __pidataBANK0:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _xx
   111  0016BC  41                 	db	65
   112  0016BD  54                 	db	84
   113  0016BE  48                 	db	72
   114  0016BF  30                 	db	48
   115  0016C0  0D                 	db	13
   116  0016C1  0A                 	db	10
   117                           
   118                           ;initializer for _Ecg_Yold
   119  0016C2  018F               	dw	399
   120                           
   121                           	psect	mediumconst
   122  0059BE                     __pmediumconst:
   123                           	opt callstack 0
   124  0059BE  00                 	db	0
   125  0059BF                     _TFT_Font:
   126                           	opt callstack 0
   127  0059BF  00                 	db	0
   128  0059C0  00                 	db	0
   129  0059C1  00                 	db	0
   130  0059C2  00                 	db	0
   131  0059C3  00                 	db	0
   132  0059C4  3E                 	db	62
   133  0059C5  5B                 	db	91
   134  0059C6  4F                 	db	79
   135  0059C7  5B                 	db	91
   136  0059C8  3E                 	db	62
   137  0059C9  3E                 	db	62
   138  0059CA  6B                 	db	107
   139  0059CB  4F                 	db	79
   140  0059CC  6B                 	db	107
   141  0059CD  3E                 	db	62
   142  0059CE  1C                 	db	28
   143  0059CF  3E                 	db	62
   144  0059D0  7C                 	db	124
   145  0059D1  3E                 	db	62
   146  0059D2  1C                 	db	28
   147  0059D3  18                 	db	24
   148  0059D4  3C                 	db	60
   149  0059D5  7E                 	db	126
   150  0059D6  3C                 	db	60
   151  0059D7  18                 	db	24
   152  0059D8  1C                 	db	28
   153  0059D9  57                 	db	87
   154  0059DA  7D                 	db	125
   155  0059DB  57                 	db	87
   156  0059DC  1C                 	db	28
   157  0059DD  1C                 	db	28
   158  0059DE  5E                 	db	94
   159  0059DF  7F                 	db	127
   160  0059E0  5E                 	db	94
   161  0059E1  1C                 	db	28
   162  0059E2  00                 	db	0
   163  0059E3  18                 	db	24
   164  0059E4  3C                 	db	60
   165  0059E5  18                 	db	24
   166  0059E6  00                 	db	0
   167  0059E7  FF                 	db	255
   168  0059E8  E7                 	db	231
   169  0059E9  C3                 	db	195
   170  0059EA  E7                 	db	231
   171  0059EB  FF                 	db	255
   172  0059EC  00                 	db	0
   173  0059ED  18                 	db	24
   174  0059EE  24                 	db	36
   175  0059EF  18                 	db	24
   176  0059F0  00                 	db	0
   177  0059F1  FF                 	db	255
   178  0059F2  E7                 	db	231
   179  0059F3  DB                 	db	219
   180  0059F4  E7                 	db	231
   181  0059F5  FF                 	db	255
   182  0059F6  30                 	db	48
   183  0059F7  48                 	db	72
   184  0059F8  3A                 	db	58
   185  0059F9  06                 	db	6
   186  0059FA  0E                 	db	14
   187  0059FB  26                 	db	38
   188  0059FC  29                 	db	41
   189  0059FD  79                 	db	121
   190  0059FE  29                 	db	41
   191  0059FF  26                 	db	38
   192  005A00  40                 	db	64
   193  005A01  7F                 	db	127
   194  005A02  05                 	db	5
   195  005A03  05                 	db	5
   196  005A04  07                 	db	7
   197  005A05  40                 	db	64
   198  005A06  7F                 	db	127
   199  005A07  05                 	db	5
   200  005A08  25                 	db	37
   201  005A09  3F                 	db	63
   202  005A0A  5A                 	db	90
   203  005A0B  3C                 	db	60
   204  005A0C  E7                 	db	231
   205  005A0D  3C                 	db	60
   206  005A0E  5A                 	db	90
   207  005A0F  7F                 	db	127
   208  005A10  3E                 	db	62
   209  005A11  1C                 	db	28
   210  005A12  1C                 	db	28
   211  005A13  08                 	db	8
   212  005A14  08                 	db	8
   213  005A15  1C                 	db	28
   214  005A16  1C                 	db	28
   215  005A17  3E                 	db	62
   216  005A18  7F                 	db	127
   217  005A19  14                 	db	20
   218  005A1A  22                 	db	34
   219  005A1B  7F                 	db	127
   220  005A1C  22                 	db	34
   221  005A1D  14                 	db	20
   222  005A1E  5F                 	db	95
   223  005A1F  5F                 	db	95
   224  005A20  00                 	db	0
   225  005A21  5F                 	db	95
   226  005A22  5F                 	db	95
   227  005A23  06                 	db	6
   228  005A24  09                 	db	9
   229  005A25  7F                 	db	127
   230  005A26  01                 	db	1
   231  005A27  7F                 	db	127
   232  005A28  00                 	db	0
   233  005A29  66                 	db	102
   234  005A2A  89                 	db	137
   235  005A2B  95                 	db	149
   236  005A2C  6A                 	db	106
   237  005A2D  60                 	db	96
   238  005A2E  60                 	db	96
   239  005A2F  60                 	db	96
   240  005A30  60                 	db	96
   241  005A31  60                 	db	96
   242  005A32  94                 	db	148
   243  005A33  A2                 	db	162
   244  005A34  FF                 	db	255
   245  005A35  A2                 	db	162
   246  005A36  94                 	db	148
   247  005A37  08                 	db	8
   248  005A38  04                 	db	4
   249  005A39  7E                 	db	126
   250  005A3A  04                 	db	4
   251  005A3B  08                 	db	8
   252  005A3C  10                 	db	16
   253  005A3D  20                 	db	32
   254  005A3E  7E                 	db	126
   255  005A3F  20                 	db	32
   256  005A40  10                 	db	16
   257  005A41  08                 	db	8
   258  005A42  08                 	db	8
   259  005A43  2A                 	db	42
   260  005A44  1C                 	db	28
   261  005A45  08                 	db	8
   262  005A46  08                 	db	8
   263  005A47  1C                 	db	28
   264  005A48  2A                 	db	42
   265  005A49  08                 	db	8
   266  005A4A  08                 	db	8
   267  005A4B  1E                 	db	30
   268  005A4C  10                 	db	16
   269  005A4D  10                 	db	16
   270  005A4E  10                 	db	16
   271  005A4F  10                 	db	16
   272  005A50  0C                 	db	12
   273  005A51  1E                 	db	30
   274  005A52  0C                 	db	12
   275  005A53  1E                 	db	30
   276  005A54  0C                 	db	12
   277  005A55  30                 	db	48
   278  005A56  38                 	db	56
   279  005A57  3E                 	db	62
   280  005A58  38                 	db	56
   281  005A59  30                 	db	48
   282  005A5A  06                 	db	6
   283  005A5B  0E                 	db	14
   284  005A5C  3E                 	db	62
   285  005A5D  0E                 	db	14
   286  005A5E  06                 	db	6
   287  005A5F  00                 	db	0
   288  005A60  00                 	db	0
   289  005A61  00                 	db	0
   290  005A62  00                 	db	0
   291  005A63  00                 	db	0
   292  005A64  00                 	db	0
   293  005A65  00                 	db	0
   294  005A66  5F                 	db	95
   295  005A67  00                 	db	0
   296  005A68  00                 	db	0
   297  005A69  00                 	db	0
   298  005A6A  07                 	db	7
   299  005A6B  00                 	db	0
   300  005A6C  07                 	db	7
   301  005A6D  00                 	db	0
   302  005A6E  14                 	db	20
   303  005A6F  7F                 	db	127
   304  005A70  14                 	db	20
   305  005A71  7F                 	db	127
   306  005A72  14                 	db	20
   307  005A73  24                 	db	36
   308  005A74  2A                 	db	42
   309  005A75  7F                 	db	127
   310  005A76  2A                 	db	42
   311  005A77  12                 	db	18
   312  005A78  23                 	db	35
   313  005A79  13                 	db	19
   314  005A7A  08                 	db	8
   315  005A7B  64                 	db	100
   316  005A7C  62                 	db	98
   317  005A7D  36                 	db	54
   318  005A7E  49                 	db	73
   319  005A7F  56                 	db	86
   320  005A80  20                 	db	32
   321  005A81  50                 	db	80
   322  005A82  00                 	db	0
   323  005A83  08                 	db	8
   324  005A84  07                 	db	7
   325  005A85  03                 	db	3
   326  005A86  00                 	db	0
   327  005A87  00                 	db	0
   328  005A88  1C                 	db	28
   329  005A89  22                 	db	34
   330  005A8A  41                 	db	65
   331  005A8B  00                 	db	0
   332  005A8C  00                 	db	0
   333  005A8D  41                 	db	65
   334  005A8E  22                 	db	34
   335  005A8F  1C                 	db	28
   336  005A90  00                 	db	0
   337  005A91  2A                 	db	42
   338  005A92  1C                 	db	28
   339  005A93  7F                 	db	127
   340  005A94  1C                 	db	28
   341  005A95  2A                 	db	42
   342  005A96  08                 	db	8
   343  005A97  08                 	db	8
   344  005A98  3E                 	db	62
   345  005A99  08                 	db	8
   346  005A9A  08                 	db	8
   347  005A9B  00                 	db	0
   348  005A9C  80                 	db	128
   349  005A9D  70                 	db	112
   350  005A9E  30                 	db	48
   351  005A9F  00                 	db	0
   352  005AA0  08                 	db	8
   353  005AA1  08                 	db	8
   354  005AA2  08                 	db	8
   355  005AA3  08                 	db	8
   356  005AA4  08                 	db	8
   357  005AA5  00                 	db	0
   358  005AA6  00                 	db	0
   359  005AA7  60                 	db	96
   360  005AA8  60                 	db	96
   361  005AA9  00                 	db	0
   362  005AAA  20                 	db	32
   363  005AAB  10                 	db	16
   364  005AAC  08                 	db	8
   365  005AAD  04                 	db	4
   366  005AAE  02                 	db	2
   367  005AAF  3E                 	db	62
   368  005AB0  51                 	db	81
   369  005AB1  49                 	db	73
   370  005AB2  45                 	db	69
   371  005AB3  3E                 	db	62
   372  005AB4  00                 	db	0
   373  005AB5  42                 	db	66
   374  005AB6  7F                 	db	127
   375  005AB7  40                 	db	64
   376  005AB8  00                 	db	0
   377  005AB9  72                 	db	114
   378  005ABA  49                 	db	73
   379  005ABB  49                 	db	73
   380  005ABC  49                 	db	73
   381  005ABD  46                 	db	70
   382  005ABE  21                 	db	33
   383  005ABF  41                 	db	65
   384  005AC0  49                 	db	73
   385  005AC1  4D                 	db	77
   386  005AC2  33                 	db	51
   387  005AC3  18                 	db	24
   388  005AC4  14                 	db	20
   389  005AC5  12                 	db	18
   390  005AC6  7F                 	db	127
   391  005AC7  10                 	db	16
   392  005AC8  27                 	db	39
   393  005AC9  45                 	db	69
   394  005ACA  45                 	db	69
   395  005ACB  45                 	db	69
   396  005ACC  39                 	db	57
   397  005ACD  3C                 	db	60
   398  005ACE  4A                 	db	74
   399  005ACF  49                 	db	73
   400  005AD0  49                 	db	73
   401  005AD1  31                 	db	49
   402  005AD2  41                 	db	65
   403  005AD3  21                 	db	33
   404  005AD4  11                 	db	17
   405  005AD5  09                 	db	9
   406  005AD6  07                 	db	7
   407  005AD7  36                 	db	54
   408  005AD8  49                 	db	73
   409  005AD9  49                 	db	73
   410  005ADA  49                 	db	73
   411  005ADB  36                 	db	54
   412  005ADC  46                 	db	70
   413  005ADD  49                 	db	73
   414  005ADE  49                 	db	73
   415  005ADF  29                 	db	41
   416  005AE0  1E                 	db	30
   417  005AE1  00                 	db	0
   418  005AE2  00                 	db	0
   419  005AE3  14                 	db	20
   420  005AE4  00                 	db	0
   421  005AE5  00                 	db	0
   422  005AE6  00                 	db	0
   423  005AE7  40                 	db	64
   424  005AE8  34                 	db	52
   425  005AE9  00                 	db	0
   426  005AEA  00                 	db	0
   427  005AEB  00                 	db	0
   428  005AEC  08                 	db	8
   429  005AED  14                 	db	20
   430  005AEE  22                 	db	34
   431  005AEF  41                 	db	65
   432  005AF0  14                 	db	20
   433  005AF1  14                 	db	20
   434  005AF2  14                 	db	20
   435  005AF3  14                 	db	20
   436  005AF4  14                 	db	20
   437  005AF5  00                 	db	0
   438  005AF6  41                 	db	65
   439  005AF7  22                 	db	34
   440  005AF8  14                 	db	20
   441  005AF9  08                 	db	8
   442  005AFA  02                 	db	2
   443  005AFB  01                 	db	1
   444  005AFC  59                 	db	89
   445  005AFD  09                 	db	9
   446  005AFE  06                 	db	6
   447  005AFF  3E                 	db	62
   448  005B00  41                 	db	65
   449  005B01  5D                 	db	93
   450  005B02  59                 	db	89
   451  005B03  4E                 	db	78
   452  005B04  7C                 	db	124
   453  005B05  12                 	db	18
   454  005B06  11                 	db	17
   455  005B07  12                 	db	18
   456  005B08  7C                 	db	124
   457  005B09  7F                 	db	127
   458  005B0A  49                 	db	73
   459  005B0B  49                 	db	73
   460  005B0C  49                 	db	73
   461  005B0D  36                 	db	54
   462  005B0E  3E                 	db	62
   463  005B0F  41                 	db	65
   464  005B10  41                 	db	65
   465  005B11  41                 	db	65
   466  005B12  22                 	db	34
   467  005B13  7F                 	db	127
   468  005B14  41                 	db	65
   469  005B15  41                 	db	65
   470  005B16  41                 	db	65
   471  005B17  3E                 	db	62
   472  005B18  7F                 	db	127
   473  005B19  49                 	db	73
   474  005B1A  49                 	db	73
   475  005B1B  49                 	db	73
   476  005B1C  41                 	db	65
   477  005B1D  7F                 	db	127
   478  005B1E  09                 	db	9
   479  005B1F  09                 	db	9
   480  005B20  09                 	db	9
   481  005B21  01                 	db	1
   482  005B22  3E                 	db	62
   483  005B23  41                 	db	65
   484  005B24  41                 	db	65
   485  005B25  51                 	db	81
   486  005B26  73                 	db	115
   487  005B27  7F                 	db	127
   488  005B28  08                 	db	8
   489  005B29  08                 	db	8
   490  005B2A  08                 	db	8
   491  005B2B  7F                 	db	127
   492  005B2C  00                 	db	0
   493  005B2D  41                 	db	65
   494  005B2E  7F                 	db	127
   495  005B2F  41                 	db	65
   496  005B30  00                 	db	0
   497  005B31  20                 	db	32
   498  005B32  40                 	db	64
   499  005B33  41                 	db	65
   500  005B34  3F                 	db	63
   501  005B35  01                 	db	1
   502  005B36  7F                 	db	127
   503  005B37  08                 	db	8
   504  005B38  14                 	db	20
   505  005B39  22                 	db	34
   506  005B3A  41                 	db	65
   507  005B3B  7F                 	db	127
   508  005B3C  40                 	db	64
   509  005B3D  40                 	db	64
   510  005B3E  40                 	db	64
   511  005B3F  40                 	db	64
   512  005B40  7F                 	db	127
   513  005B41  02                 	db	2
   514  005B42  1C                 	db	28
   515  005B43  02                 	db	2
   516  005B44  7F                 	db	127
   517  005B45  7F                 	db	127
   518  005B46  04                 	db	4
   519  005B47  08                 	db	8
   520  005B48  10                 	db	16
   521  005B49  7F                 	db	127
   522  005B4A  3E                 	db	62
   523  005B4B  41                 	db	65
   524  005B4C  41                 	db	65
   525  005B4D  41                 	db	65
   526  005B4E  3E                 	db	62
   527  005B4F  7F                 	db	127
   528  005B50  09                 	db	9
   529  005B51  09                 	db	9
   530  005B52  09                 	db	9
   531  005B53  06                 	db	6
   532  005B54  3E                 	db	62
   533  005B55  41                 	db	65
   534  005B56  51                 	db	81
   535  005B57  21                 	db	33
   536  005B58  5E                 	db	94
   537  005B59  7F                 	db	127
   538  005B5A  09                 	db	9
   539  005B5B  19                 	db	25
   540  005B5C  29                 	db	41
   541  005B5D  46                 	db	70
   542  005B5E  26                 	db	38
   543  005B5F  49                 	db	73
   544  005B60  49                 	db	73
   545  005B61  49                 	db	73
   546  005B62  32                 	db	50
   547  005B63  03                 	db	3
   548  005B64  01                 	db	1
   549  005B65  7F                 	db	127
   550  005B66  01                 	db	1
   551  005B67  03                 	db	3
   552  005B68  3F                 	db	63
   553  005B69  40                 	db	64
   554  005B6A  40                 	db	64
   555  005B6B  40                 	db	64
   556  005B6C  3F                 	db	63
   557  005B6D  1F                 	db	31
   558  005B6E  20                 	db	32
   559  005B6F  40                 	db	64
   560  005B70  20                 	db	32
   561  005B71  1F                 	db	31
   562  005B72  3F                 	db	63
   563  005B73  40                 	db	64
   564  005B74  38                 	db	56
   565  005B75  40                 	db	64
   566  005B76  3F                 	db	63
   567  005B77  63                 	db	99
   568  005B78  14                 	db	20
   569  005B79  08                 	db	8
   570  005B7A  14                 	db	20
   571  005B7B  63                 	db	99
   572  005B7C  03                 	db	3
   573  005B7D  04                 	db	4
   574  005B7E  78                 	db	120
   575  005B7F  04                 	db	4
   576  005B80  03                 	db	3
   577  005B81  61                 	db	97
   578  005B82  59                 	db	89
   579  005B83  49                 	db	73
   580  005B84  4D                 	db	77
   581  005B85  43                 	db	67
   582  005B86  00                 	db	0
   583  005B87  7F                 	db	127
   584  005B88  41                 	db	65
   585  005B89  41                 	db	65
   586  005B8A  41                 	db	65
   587  005B8B  02                 	db	2
   588  005B8C  04                 	db	4
   589  005B8D  08                 	db	8
   590  005B8E  10                 	db	16
   591  005B8F  20                 	db	32
   592  005B90  00                 	db	0
   593  005B91  41                 	db	65
   594  005B92  41                 	db	65
   595  005B93  41                 	db	65
   596  005B94  7F                 	db	127
   597  005B95  04                 	db	4
   598  005B96  02                 	db	2
   599  005B97  01                 	db	1
   600  005B98  02                 	db	2
   601  005B99  04                 	db	4
   602  005B9A  40                 	db	64
   603  005B9B  40                 	db	64
   604  005B9C  40                 	db	64
   605  005B9D  40                 	db	64
   606  005B9E  40                 	db	64
   607  005B9F  00                 	db	0
   608  005BA0  03                 	db	3
   609  005BA1  07                 	db	7
   610  005BA2  08                 	db	8
   611  005BA3  00                 	db	0
   612  005BA4  20                 	db	32
   613  005BA5  54                 	db	84
   614  005BA6  54                 	db	84
   615  005BA7  78                 	db	120
   616  005BA8  40                 	db	64
   617  005BA9  7F                 	db	127
   618  005BAA  28                 	db	40
   619  005BAB  44                 	db	68
   620  005BAC  44                 	db	68
   621  005BAD  38                 	db	56
   622  005BAE  38                 	db	56
   623  005BAF  44                 	db	68
   624  005BB0  44                 	db	68
   625  005BB1  44                 	db	68
   626  005BB2  28                 	db	40
   627  005BB3  38                 	db	56
   628  005BB4  44                 	db	68
   629  005BB5  44                 	db	68
   630  005BB6  28                 	db	40
   631  005BB7  7F                 	db	127
   632  005BB8  38                 	db	56
   633  005BB9  54                 	db	84
   634  005BBA  54                 	db	84
   635  005BBB  54                 	db	84
   636  005BBC  18                 	db	24
   637  005BBD  00                 	db	0
   638  005BBE  08                 	db	8
   639  005BBF  7E                 	db	126
   640  005BC0  09                 	db	9
   641  005BC1  02                 	db	2
   642  005BC2  18                 	db	24
   643  005BC3  A4                 	db	164
   644  005BC4  A4                 	db	164
   645  005BC5  9C                 	db	156
   646  005BC6  78                 	db	120
   647  005BC7  7F                 	db	127
   648  005BC8  08                 	db	8
   649  005BC9  04                 	db	4
   650  005BCA  04                 	db	4
   651  005BCB  78                 	db	120
   652  005BCC  00                 	db	0
   653  005BCD  44                 	db	68
   654  005BCE  7D                 	db	125
   655  005BCF  40                 	db	64
   656  005BD0  00                 	db	0
   657  005BD1  20                 	db	32
   658  005BD2  40                 	db	64
   659  005BD3  40                 	db	64
   660  005BD4  3D                 	db	61
   661  005BD5  00                 	db	0
   662  005BD6  7F                 	db	127
   663  005BD7  10                 	db	16
   664  005BD8  28                 	db	40
   665  005BD9  44                 	db	68
   666  005BDA  00                 	db	0
   667  005BDB  00                 	db	0
   668  005BDC  41                 	db	65
   669  005BDD  7F                 	db	127
   670  005BDE  40                 	db	64
   671  005BDF  00                 	db	0
   672  005BE0  7C                 	db	124
   673  005BE1  04                 	db	4
   674  005BE2  78                 	db	120
   675  005BE3  04                 	db	4
   676  005BE4  78                 	db	120
   677  005BE5  7C                 	db	124
   678  005BE6  08                 	db	8
   679  005BE7  04                 	db	4
   680  005BE8  04                 	db	4
   681  005BE9  78                 	db	120
   682  005BEA  38                 	db	56
   683  005BEB  44                 	db	68
   684  005BEC  44                 	db	68
   685  005BED  44                 	db	68
   686  005BEE  38                 	db	56
   687  005BEF  FC                 	db	252
   688  005BF0  18                 	db	24
   689  005BF1  24                 	db	36
   690  005BF2  24                 	db	36
   691  005BF3  18                 	db	24
   692  005BF4  18                 	db	24
   693  005BF5  24                 	db	36
   694  005BF6  24                 	db	36
   695  005BF7  18                 	db	24
   696  005BF8  FC                 	db	252
   697  005BF9  7C                 	db	124
   698  005BFA  08                 	db	8
   699  005BFB  04                 	db	4
   700  005BFC  04                 	db	4
   701  005BFD  08                 	db	8
   702  005BFE  48                 	db	72
   703  005BFF  54                 	db	84
   704  005C00  54                 	db	84
   705  005C01  54                 	db	84
   706  005C02  24                 	db	36
   707  005C03  04                 	db	4
   708  005C04  04                 	db	4
   709  005C05  3F                 	db	63
   710  005C06  44                 	db	68
   711  005C07  24                 	db	36
   712  005C08  3C                 	db	60
   713  005C09  40                 	db	64
   714  005C0A  40                 	db	64
   715  005C0B  20                 	db	32
   716  005C0C  7C                 	db	124
   717  005C0D  1C                 	db	28
   718  005C0E  20                 	db	32
   719  005C0F  40                 	db	64
   720  005C10  20                 	db	32
   721  005C11  1C                 	db	28
   722  005C12  3C                 	db	60
   723  005C13  40                 	db	64
   724  005C14  30                 	db	48
   725  005C15  40                 	db	64
   726  005C16  3C                 	db	60
   727  005C17  44                 	db	68
   728  005C18  28                 	db	40
   729  005C19  10                 	db	16
   730  005C1A  28                 	db	40
   731  005C1B  44                 	db	68
   732  005C1C  4C                 	db	76
   733  005C1D  90                 	db	144
   734  005C1E  90                 	db	144
   735  005C1F  90                 	db	144
   736  005C20  7C                 	db	124
   737  005C21  44                 	db	68
   738  005C22  64                 	db	100
   739  005C23  54                 	db	84
   740  005C24  4C                 	db	76
   741  005C25  44                 	db	68
   742  005C26  00                 	db	0
   743  005C27  08                 	db	8
   744  005C28  36                 	db	54
   745  005C29  41                 	db	65
   746  005C2A  00                 	db	0
   747  005C2B  00                 	db	0
   748  005C2C  00                 	db	0
   749  005C2D  77                 	db	119
   750  005C2E  00                 	db	0
   751  005C2F  00                 	db	0
   752  005C30  00                 	db	0
   753  005C31  41                 	db	65
   754  005C32  36                 	db	54
   755  005C33  08                 	db	8
   756  005C34  00                 	db	0
   757  005C35  02                 	db	2
   758  005C36  01                 	db	1
   759  005C37  02                 	db	2
   760  005C38  04                 	db	4
   761  005C39  02                 	db	2
   762  005C3A  3C                 	db	60
   763  005C3B  26                 	db	38
   764  005C3C  23                 	db	35
   765  005C3D  26                 	db	38
   766  005C3E  3C                 	db	60
   767  005C3F  1E                 	db	30
   768  005C40  A1                 	db	161
   769  005C41  A1                 	db	161
   770  005C42  61                 	db	97
   771  005C43  12                 	db	18
   772  005C44  3A                 	db	58
   773  005C45  40                 	db	64
   774  005C46  40                 	db	64
   775  005C47  20                 	db	32
   776  005C48  7A                 	db	122
   777  005C49  38                 	db	56
   778  005C4A  54                 	db	84
   779  005C4B  54                 	db	84
   780  005C4C  55                 	db	85
   781  005C4D  59                 	db	89
   782  005C4E  21                 	db	33
   783  005C4F  55                 	db	85
   784  005C50  55                 	db	85
   785  005C51  79                 	db	121
   786  005C52  41                 	db	65
   787  005C53  22                 	db	34
   788  005C54  54                 	db	84
   789  005C55  54                 	db	84
   790  005C56  78                 	db	120
   791  005C57  42                 	db	66
   792  005C58  21                 	db	33
   793  005C59  55                 	db	85
   794  005C5A  54                 	db	84
   795  005C5B  78                 	db	120
   796  005C5C  40                 	db	64
   797  005C5D  20                 	db	32
   798  005C5E  54                 	db	84
   799  005C5F  55                 	db	85
   800  005C60  79                 	db	121
   801  005C61  40                 	db	64
   802  005C62  0C                 	db	12
   803  005C63  1E                 	db	30
   804  005C64  52                 	db	82
   805  005C65  72                 	db	114
   806  005C66  12                 	db	18
   807  005C67  39                 	db	57
   808  005C68  55                 	db	85
   809  005C69  55                 	db	85
   810  005C6A  55                 	db	85
   811  005C6B  59                 	db	89
   812  005C6C  39                 	db	57
   813  005C6D  54                 	db	84
   814  005C6E  54                 	db	84
   815  005C6F  54                 	db	84
   816  005C70  59                 	db	89
   817  005C71  39                 	db	57
   818  005C72  55                 	db	85
   819  005C73  54                 	db	84
   820  005C74  54                 	db	84
   821  005C75  58                 	db	88
   822  005C76  00                 	db	0
   823  005C77  00                 	db	0
   824  005C78  45                 	db	69
   825  005C79  7C                 	db	124
   826  005C7A  41                 	db	65
   827  005C7B  00                 	db	0
   828  005C7C  02                 	db	2
   829  005C7D  45                 	db	69
   830  005C7E  7D                 	db	125
   831  005C7F  42                 	db	66
   832  005C80  00                 	db	0
   833  005C81  01                 	db	1
   834  005C82  45                 	db	69
   835  005C83  7C                 	db	124
   836  005C84  40                 	db	64
   837  005C85  7D                 	db	125
   838  005C86  12                 	db	18
   839  005C87  11                 	db	17
   840  005C88  12                 	db	18
   841  005C89  7D                 	db	125
   842  005C8A  F0                 	db	240
   843  005C8B  28                 	db	40
   844  005C8C  25                 	db	37
   845  005C8D  28                 	db	40
   846  005C8E  F0                 	db	240
   847  005C8F  7C                 	db	124
   848  005C90  54                 	db	84
   849  005C91  55                 	db	85
   850  005C92  45                 	db	69
   851  005C93  00                 	db	0
   852  005C94  20                 	db	32
   853  005C95  54                 	db	84
   854  005C96  54                 	db	84
   855  005C97  7C                 	db	124
   856  005C98  54                 	db	84
   857  005C99  7C                 	db	124
   858  005C9A  0A                 	db	10
   859  005C9B  09                 	db	9
   860  005C9C  7F                 	db	127
   861  005C9D  49                 	db	73
   862  005C9E  32                 	db	50
   863  005C9F  49                 	db	73
   864  005CA0  49                 	db	73
   865  005CA1  49                 	db	73
   866  005CA2  32                 	db	50
   867  005CA3  3A                 	db	58
   868  005CA4  44                 	db	68
   869  005CA5  44                 	db	68
   870  005CA6  44                 	db	68
   871  005CA7  3A                 	db	58
   872  005CA8  32                 	db	50
   873  005CA9  4A                 	db	74
   874  005CAA  48                 	db	72
   875  005CAB  48                 	db	72
   876  005CAC  30                 	db	48
   877  005CAD  3A                 	db	58
   878  005CAE  41                 	db	65
   879  005CAF  41                 	db	65
   880  005CB0  21                 	db	33
   881  005CB1  7A                 	db	122
   882  005CB2  3A                 	db	58
   883  005CB3  42                 	db	66
   884  005CB4  40                 	db	64
   885  005CB5  20                 	db	32
   886  005CB6  78                 	db	120
   887  005CB7  00                 	db	0
   888  005CB8  9D                 	db	157
   889  005CB9  A0                 	db	160
   890  005CBA  A0                 	db	160
   891  005CBB  7D                 	db	125
   892  005CBC  3D                 	db	61
   893  005CBD  42                 	db	66
   894  005CBE  42                 	db	66
   895  005CBF  42                 	db	66
   896  005CC0  3D                 	db	61
   897  005CC1  3D                 	db	61
   898  005CC2  40                 	db	64
   899  005CC3  40                 	db	64
   900  005CC4  40                 	db	64
   901  005CC5  3D                 	db	61
   902  005CC6  3C                 	db	60
   903  005CC7  24                 	db	36
   904  005CC8  FF                 	db	255
   905  005CC9  24                 	db	36
   906  005CCA  24                 	db	36
   907  005CCB  48                 	db	72
   908  005CCC  7E                 	db	126
   909  005CCD  49                 	db	73
   910  005CCE  43                 	db	67
   911  005CCF  66                 	db	102
   912  005CD0  2B                 	db	43
   913  005CD1  2F                 	db	47
   914  005CD2  FC                 	db	252
   915  005CD3  2F                 	db	47
   916  005CD4  2B                 	db	43
   917  005CD5  FF                 	db	255
   918  005CD6  09                 	db	9
   919  005CD7  29                 	db	41
   920  005CD8  F6                 	db	246
   921  005CD9  20                 	db	32
   922  005CDA  C0                 	db	192
   923  005CDB  88                 	db	136
   924  005CDC  7E                 	db	126
   925  005CDD  09                 	db	9
   926  005CDE  03                 	db	3
   927  005CDF  20                 	db	32
   928  005CE0  54                 	db	84
   929  005CE1  54                 	db	84
   930  005CE2  79                 	db	121
   931  005CE3  41                 	db	65
   932  005CE4  00                 	db	0
   933  005CE5  00                 	db	0
   934  005CE6  44                 	db	68
   935  005CE7  7D                 	db	125
   936  005CE8  41                 	db	65
   937  005CE9  30                 	db	48
   938  005CEA  48                 	db	72
   939  005CEB  48                 	db	72
   940  005CEC  4A                 	db	74
   941  005CED  32                 	db	50
   942  005CEE  38                 	db	56
   943  005CEF  40                 	db	64
   944  005CF0  40                 	db	64
   945  005CF1  22                 	db	34
   946  005CF2  7A                 	db	122
   947  005CF3  00                 	db	0
   948  005CF4  7A                 	db	122
   949  005CF5  0A                 	db	10
   950  005CF6  0A                 	db	10
   951  005CF7  72                 	db	114
   952  005CF8  7D                 	db	125
   953  005CF9  0D                 	db	13
   954  005CFA  19                 	db	25
   955  005CFB  31                 	db	49
   956  005CFC  7D                 	db	125
   957  005CFD  26                 	db	38
   958  005CFE  29                 	db	41
   959  005CFF  29                 	db	41
   960  005D00  2F                 	db	47
   961  005D01  28                 	db	40
   962  005D02  26                 	db	38
   963  005D03  29                 	db	41
   964  005D04  29                 	db	41
   965  005D05  29                 	db	41
   966  005D06  26                 	db	38
   967  005D07  30                 	db	48
   968  005D08  48                 	db	72
   969  005D09  4D                 	db	77
   970  005D0A  40                 	db	64
   971  005D0B  20                 	db	32
   972  005D0C  38                 	db	56
   973  005D0D  08                 	db	8
   974  005D0E  08                 	db	8
   975  005D0F  08                 	db	8
   976  005D10  08                 	db	8
   977  005D11  08                 	db	8
   978  005D12  08                 	db	8
   979  005D13  08                 	db	8
   980  005D14  08                 	db	8
   981  005D15  38                 	db	56
   982  005D16  2F                 	db	47
   983  005D17  10                 	db	16
   984  005D18  C8                 	db	200
   985  005D19  AC                 	db	172
   986  005D1A  BA                 	db	186
   987  005D1B  2F                 	db	47
   988  005D1C  10                 	db	16
   989  005D1D  28                 	db	40
   990  005D1E  34                 	db	52
   991  005D1F  FA                 	db	250
   992  005D20  00                 	db	0
   993  005D21  00                 	db	0
   994  005D22  7B                 	db	123
   995  005D23  00                 	db	0
   996  005D24  00                 	db	0
   997  005D25  08                 	db	8
   998  005D26  14                 	db	20
   999  005D27  2A                 	db	42
  1000  005D28  14                 	db	20
  1001  005D29  22                 	db	34
  1002  005D2A  22                 	db	34
  1003  005D2B  14                 	db	20
  1004  005D2C  2A                 	db	42
  1005  005D2D  14                 	db	20
  1006  005D2E  08                 	db	8
  1007  005D2F  55                 	db	85
  1008  005D30  00                 	db	0
  1009  005D31  55                 	db	85
  1010  005D32  00                 	db	0
  1011  005D33  55                 	db	85
  1012  005D34  AA                 	db	170
  1013  005D35  55                 	db	85
  1014  005D36  AA                 	db	170
  1015  005D37  55                 	db	85
  1016  005D38  AA                 	db	170
  1017  005D39  FF                 	db	255
  1018  005D3A  55                 	db	85
  1019  005D3B  FF                 	db	255
  1020  005D3C  55                 	db	85
  1021  005D3D  FF                 	db	255
  1022  005D3E  00                 	db	0
  1023  005D3F  00                 	db	0
  1024  005D40  00                 	db	0
  1025  005D41  FF                 	db	255
  1026  005D42  00                 	db	0
  1027  005D43  10                 	db	16
  1028  005D44  10                 	db	16
  1029  005D45  10                 	db	16
  1030  005D46  FF                 	db	255
  1031  005D47  00                 	db	0
  1032  005D48  14                 	db	20
  1033  005D49  14                 	db	20
  1034  005D4A  14                 	db	20
  1035  005D4B  FF                 	db	255
  1036  005D4C  00                 	db	0
  1037  005D4D  10                 	db	16
  1038  005D4E  10                 	db	16
  1039  005D4F  FF                 	db	255
  1040  005D50  00                 	db	0
  1041  005D51  FF                 	db	255
  1042  005D52  10                 	db	16
  1043  005D53  10                 	db	16
  1044  005D54  F0                 	db	240
  1045  005D55  10                 	db	16
  1046  005D56  F0                 	db	240
  1047  005D57  14                 	db	20
  1048  005D58  14                 	db	20
  1049  005D59  14                 	db	20
  1050  005D5A  FC                 	db	252
  1051  005D5B  00                 	db	0
  1052  005D5C  14                 	db	20
  1053  005D5D  14                 	db	20
  1054  005D5E  F7                 	db	247
  1055  005D5F  00                 	db	0
  1056  005D60  FF                 	db	255
  1057  005D61  00                 	db	0
  1058  005D62  00                 	db	0
  1059  005D63  FF                 	db	255
  1060  005D64  00                 	db	0
  1061  005D65  FF                 	db	255
  1062  005D66  14                 	db	20
  1063  005D67  14                 	db	20
  1064  005D68  F4                 	db	244
  1065  005D69  04                 	db	4
  1066  005D6A  FC                 	db	252
  1067  005D6B  14                 	db	20
  1068  005D6C  14                 	db	20
  1069  005D6D  17                 	db	23
  1070  005D6E  10                 	db	16
  1071  005D6F  1F                 	db	31
  1072  005D70  10                 	db	16
  1073  005D71  10                 	db	16
  1074  005D72  1F                 	db	31
  1075  005D73  10                 	db	16
  1076  005D74  1F                 	db	31
  1077  005D75  14                 	db	20
  1078  005D76  14                 	db	20
  1079  005D77  14                 	db	20
  1080  005D78  1F                 	db	31
  1081  005D79  00                 	db	0
  1082  005D7A  10                 	db	16
  1083  005D7B  10                 	db	16
  1084  005D7C  10                 	db	16
  1085  005D7D  F0                 	db	240
  1086  005D7E  00                 	db	0
  1087  005D7F  00                 	db	0
  1088  005D80  00                 	db	0
  1089  005D81  00                 	db	0
  1090  005D82  1F                 	db	31
  1091  005D83  10                 	db	16
  1092  005D84  10                 	db	16
  1093  005D85  10                 	db	16
  1094  005D86  10                 	db	16
  1095  005D87  1F                 	db	31
  1096  005D88  10                 	db	16
  1097  005D89  10                 	db	16
  1098  005D8A  10                 	db	16
  1099  005D8B  10                 	db	16
  1100  005D8C  F0                 	db	240
  1101  005D8D  10                 	db	16
  1102  005D8E  00                 	db	0
  1103  005D8F  00                 	db	0
  1104  005D90  00                 	db	0
  1105  005D91  FF                 	db	255
  1106  005D92  10                 	db	16
  1107  005D93  10                 	db	16
  1108  005D94  10                 	db	16
  1109  005D95  10                 	db	16
  1110  005D96  10                 	db	16
  1111  005D97  10                 	db	16
  1112  005D98  10                 	db	16
  1113  005D99  10                 	db	16
  1114  005D9A  10                 	db	16
  1115  005D9B  FF                 	db	255
  1116  005D9C  10                 	db	16
  1117  005D9D  00                 	db	0
  1118  005D9E  00                 	db	0
  1119  005D9F  00                 	db	0
  1120  005DA0  FF                 	db	255
  1121  005DA1  14                 	db	20
  1122  005DA2  00                 	db	0
  1123  005DA3  00                 	db	0
  1124  005DA4  FF                 	db	255
  1125  005DA5  00                 	db	0
  1126  005DA6  FF                 	db	255
  1127  005DA7  00                 	db	0
  1128  005DA8  00                 	db	0
  1129  005DA9  1F                 	db	31
  1130  005DAA  10                 	db	16
  1131  005DAB  17                 	db	23
  1132  005DAC  00                 	db	0
  1133  005DAD  00                 	db	0
  1134  005DAE  FC                 	db	252
  1135  005DAF  04                 	db	4
  1136  005DB0  F4                 	db	244
  1137  005DB1  14                 	db	20
  1138  005DB2  14                 	db	20
  1139  005DB3  17                 	db	23
  1140  005DB4  10                 	db	16
  1141  005DB5  17                 	db	23
  1142  005DB6  14                 	db	20
  1143  005DB7  14                 	db	20
  1144  005DB8  F4                 	db	244
  1145  005DB9  04                 	db	4
  1146  005DBA  F4                 	db	244
  1147  005DBB  00                 	db	0
  1148  005DBC  00                 	db	0
  1149  005DBD  FF                 	db	255
  1150  005DBE  00                 	db	0
  1151  005DBF  F7                 	db	247
  1152  005DC0  14                 	db	20
  1153  005DC1  14                 	db	20
  1154  005DC2  14                 	db	20
  1155  005DC3  14                 	db	20
  1156  005DC4  14                 	db	20
  1157  005DC5  14                 	db	20
  1158  005DC6  14                 	db	20
  1159  005DC7  F7                 	db	247
  1160  005DC8  00                 	db	0
  1161  005DC9  F7                 	db	247
  1162  005DCA  14                 	db	20
  1163  005DCB  14                 	db	20
  1164  005DCC  14                 	db	20
  1165  005DCD  17                 	db	23
  1166  005DCE  14                 	db	20
  1167  005DCF  10                 	db	16
  1168  005DD0  10                 	db	16
  1169  005DD1  1F                 	db	31
  1170  005DD2  10                 	db	16
  1171  005DD3  1F                 	db	31
  1172  005DD4  14                 	db	20
  1173  005DD5  14                 	db	20
  1174  005DD6  14                 	db	20
  1175  005DD7  F4                 	db	244
  1176  005DD8  14                 	db	20
  1177  005DD9  10                 	db	16
  1178  005DDA  10                 	db	16
  1179  005DDB  F0                 	db	240
  1180  005DDC  10                 	db	16
  1181  005DDD  F0                 	db	240
  1182  005DDE  00                 	db	0
  1183  005DDF  00                 	db	0
  1184  005DE0  1F                 	db	31
  1185  005DE1  10                 	db	16
  1186  005DE2  1F                 	db	31
  1187  005DE3  00                 	db	0
  1188  005DE4  00                 	db	0
  1189  005DE5  00                 	db	0
  1190  005DE6  1F                 	db	31
  1191  005DE7  14                 	db	20
  1192  005DE8  00                 	db	0
  1193  005DE9  00                 	db	0
  1194  005DEA  00                 	db	0
  1195  005DEB  FC                 	db	252
  1196  005DEC  14                 	db	20
  1197  005DED  00                 	db	0
  1198  005DEE  00                 	db	0
  1199  005DEF  F0                 	db	240
  1200  005DF0  10                 	db	16
  1201  005DF1  F0                 	db	240
  1202  005DF2  10                 	db	16
  1203  005DF3  10                 	db	16
  1204  005DF4  FF                 	db	255
  1205  005DF5  10                 	db	16
  1206  005DF6  FF                 	db	255
  1207  005DF7  14                 	db	20
  1208  005DF8  14                 	db	20
  1209  005DF9  14                 	db	20
  1210  005DFA  FF                 	db	255
  1211  005DFB  14                 	db	20
  1212  005DFC  10                 	db	16
  1213  005DFD  10                 	db	16
  1214  005DFE  10                 	db	16
  1215  005DFF  1F                 	db	31
  1216  005E00  00                 	db	0
  1217  005E01  00                 	db	0
  1218  005E02  00                 	db	0
  1219  005E03  00                 	db	0
  1220  005E04  F0                 	db	240
  1221  005E05  10                 	db	16
  1222  005E06  FF                 	db	255
  1223  005E07  FF                 	db	255
  1224  005E08  FF                 	db	255
  1225  005E09  FF                 	db	255
  1226  005E0A  FF                 	db	255
  1227  005E0B  F0                 	db	240
  1228  005E0C  F0                 	db	240
  1229  005E0D  F0                 	db	240
  1230  005E0E  F0                 	db	240
  1231  005E0F  F0                 	db	240
  1232  005E10  FF                 	db	255
  1233  005E11  FF                 	db	255
  1234  005E12  FF                 	db	255
  1235  005E13  00                 	db	0
  1236  005E14  00                 	db	0
  1237  005E15  00                 	db	0
  1238  005E16  00                 	db	0
  1239  005E17  00                 	db	0
  1240  005E18  FF                 	db	255
  1241  005E19  FF                 	db	255
  1242  005E1A  0F                 	db	15
  1243  005E1B  0F                 	db	15
  1244  005E1C  0F                 	db	15
  1245  005E1D  0F                 	db	15
  1246  005E1E  0F                 	db	15
  1247  005E1F  38                 	db	56
  1248  005E20  44                 	db	68
  1249  005E21  44                 	db	68
  1250  005E22  38                 	db	56
  1251  005E23  44                 	db	68
  1252  005E24  FC                 	db	252
  1253  005E25  4A                 	db	74
  1254  005E26  4A                 	db	74
  1255  005E27  4A                 	db	74
  1256  005E28  34                 	db	52
  1257  005E29  7E                 	db	126
  1258  005E2A  02                 	db	2
  1259  005E2B  02                 	db	2
  1260  005E2C  06                 	db	6
  1261  005E2D  06                 	db	6
  1262  005E2E  02                 	db	2
  1263  005E2F  7E                 	db	126
  1264  005E30  02                 	db	2
  1265  005E31  7E                 	db	126
  1266  005E32  02                 	db	2
  1267  005E33  63                 	db	99
  1268  005E34  55                 	db	85
  1269  005E35  49                 	db	73
  1270  005E36  41                 	db	65
  1271  005E37  63                 	db	99
  1272  005E38  38                 	db	56
  1273  005E39  44                 	db	68
  1274  005E3A  44                 	db	68
  1275  005E3B  3C                 	db	60
  1276  005E3C  04                 	db	4
  1277  005E3D  40                 	db	64
  1278  005E3E  7E                 	db	126
  1279  005E3F  20                 	db	32
  1280  005E40  1E                 	db	30
  1281  005E41  20                 	db	32
  1282  005E42  06                 	db	6
  1283  005E43  02                 	db	2
  1284  005E44  7E                 	db	126
  1285  005E45  02                 	db	2
  1286  005E46  02                 	db	2
  1287  005E47  99                 	db	153
  1288  005E48  A5                 	db	165
  1289  005E49  E7                 	db	231
  1290  005E4A  A5                 	db	165
  1291  005E4B  99                 	db	153
  1292  005E4C  1C                 	db	28
  1293  005E4D  2A                 	db	42
  1294  005E4E  49                 	db	73
  1295  005E4F  2A                 	db	42
  1296  005E50  1C                 	db	28
  1297  005E51  4C                 	db	76
  1298  005E52  72                 	db	114
  1299  005E53  01                 	db	1
  1300  005E54  72                 	db	114
  1301  005E55  4C                 	db	76
  1302  005E56  30                 	db	48
  1303  005E57  4A                 	db	74
  1304  005E58  4D                 	db	77
  1305  005E59  4D                 	db	77
  1306  005E5A  30                 	db	48
  1307  005E5B  30                 	db	48
  1308  005E5C  48                 	db	72
  1309  005E5D  78                 	db	120
  1310  005E5E  48                 	db	72
  1311  005E5F  30                 	db	48
  1312  005E60  BC                 	db	188
  1313  005E61  62                 	db	98
  1314  005E62  5A                 	db	90
  1315  005E63  46                 	db	70
  1316  005E64  3D                 	db	61
  1317  005E65  3E                 	db	62
  1318  005E66  49                 	db	73
  1319  005E67  49                 	db	73
  1320  005E68  49                 	db	73
  1321  005E69  00                 	db	0
  1322  005E6A  7E                 	db	126
  1323  005E6B  01                 	db	1
  1324  005E6C  01                 	db	1
  1325  005E6D  01                 	db	1
  1326  005E6E  7E                 	db	126
  1327  005E6F  2A                 	db	42
  1328  005E70  2A                 	db	42
  1329  005E71  2A                 	db	42
  1330  005E72  2A                 	db	42
  1331  005E73  2A                 	db	42
  1332  005E74  44                 	db	68
  1333  005E75  44                 	db	68
  1334  005E76  5F                 	db	95
  1335  005E77  44                 	db	68
  1336  005E78  44                 	db	68
  1337  005E79  40                 	db	64
  1338  005E7A  51                 	db	81
  1339  005E7B  4A                 	db	74
  1340  005E7C  44                 	db	68
  1341  005E7D  40                 	db	64
  1342  005E7E  40                 	db	64
  1343  005E7F  44                 	db	68
  1344  005E80  4A                 	db	74
  1345  005E81  51                 	db	81
  1346  005E82  40                 	db	64
  1347  005E83  00                 	db	0
  1348  005E84  00                 	db	0
  1349  005E85  FF                 	db	255
  1350  005E86  01                 	db	1
  1351  005E87  03                 	db	3
  1352  005E88  E0                 	db	224
  1353  005E89  80                 	db	128
  1354  005E8A  FF                 	db	255
  1355  005E8B  00                 	db	0
  1356  005E8C  00                 	db	0
  1357  005E8D  08                 	db	8
  1358  005E8E  08                 	db	8
  1359  005E8F  6B                 	db	107
  1360  005E90  6B                 	db	107
  1361  005E91  08                 	db	8
  1362  005E92  36                 	db	54
  1363  005E93  12                 	db	18
  1364  005E94  36                 	db	54
  1365  005E95  24                 	db	36
  1366  005E96  36                 	db	54
  1367  005E97  06                 	db	6
  1368  005E98  0F                 	db	15
  1369  005E99  09                 	db	9
  1370  005E9A  0F                 	db	15
  1371  005E9B  06                 	db	6
  1372  005E9C  00                 	db	0
  1373  005E9D  00                 	db	0
  1374  005E9E  18                 	db	24
  1375  005E9F  18                 	db	24
  1376  005EA0  00                 	db	0
  1377  005EA1  00                 	db	0
  1378  005EA2  00                 	db	0
  1379  005EA3  10                 	db	16
  1380  005EA4  10                 	db	16
  1381  005EA5  00                 	db	0
  1382  005EA6  30                 	db	48
  1383  005EA7  40                 	db	64
  1384  005EA8  FF                 	db	255
  1385  005EA9  01                 	db	1
  1386  005EAA  01                 	db	1
  1387  005EAB  00                 	db	0
  1388  005EAC  1F                 	db	31
  1389  005EAD  01                 	db	1
  1390  005EAE  01                 	db	1
  1391  005EAF  1E                 	db	30
  1392  005EB0  00                 	db	0
  1393  005EB1  19                 	db	25
  1394  005EB2  1D                 	db	29
  1395  005EB3  17                 	db	23
  1396  005EB4  12                 	db	18
  1397  005EB5  00                 	db	0
  1398  005EB6  3C                 	db	60
  1399  005EB7  3C                 	db	60
  1400  005EB8  3C                 	db	60
  1401  005EB9  3C                 	db	60
  1402  005EBA  00                 	db	0
  1403  005EBB  00                 	db	0
  1404  005EBC  00                 	db	0
  1405  005EBD  00                 	db	0
  1406  005EBE  00                 	db	0
  1407  005EBF                     __end_of_TFT_Font:
  1408                           	opt callstack 0
  1409  005EBF                     _TFT_Init_Sequence:
  1410                           	opt callstack 0
  1411  005EBF  0702               	dw	1794
  1412  005EC1  3008               	dw	12296
  1413  005EC3  0705               	dw	1797
  1414  005EC5  0036               	dw	54
  1415  005EC7  070B               	dw	1803
  1416  005EC9  1213               	dw	4627
  1417  005ECB  0001               	dw	1
  1418  005ECD  0100               	dw	256
  1419  005ECF  0002               	dw	2
  1420  005ED1  0100               	dw	256
  1421  005ED3  0003               	dw	3
  1422  005ED5  1030               	dw	4144
  1423  005ED7  0008               	dw	8
  1424  005ED9  0202               	dw	514
  1425  005EDB  0009               	dw	9
  1426  005EDD  0000               	dw	0
  1427  005EDF  000C               	dw	12
  1428  005EE1  0000               	dw	0
  1429  005EE3  000F               	dw	15
  1430  005EE5  0000               	dw	0
  1431  005EE7  0100               	dw	256
  1432  005EE9  0000               	dw	0
  1433  005EEB  0102               	dw	258
  1434  005EED  0000               	dw	0
  1435  005EEF  0103               	dw	259
  1436  005EF1  0000               	dw	0
  1437  005EF3  FFFF               	dw	65535
  1438  005EF5  0001               	dw	1
  1439  005EF7  0100               	dw	256
  1440  005EF9  1190               	dw	4496
  1441  005EFB  0101               	dw	257
  1442  005EFD  0227               	dw	551
  1443  005EFF  FFFF               	dw	65535
  1444  005F01  0001               	dw	1
  1445  005F03  0102               	dw	258
  1446  005F05  01BD               	dw	445
  1447  005F07  FFFF               	dw	65535
  1448  005F09  0001               	dw	1
  1449  005F0B  0103               	dw	259
  1450  005F0D  2D00               	dw	11520
  1451  005F0F  0281               	dw	641
  1452  005F11  000E               	dw	14
  1453  005F13  FFFF               	dw	65535
  1454  005F15  0001               	dw	1
  1455  005F17  0200               	dw	512
  1456  005F19  0000               	dw	0
  1457  005F1B  0201               	dw	513
  1458  005F1D  0000               	dw	0
  1459  005F1F  0300               	dw	768
  1460  005F21  0000               	dw	0
  1461  005F23  0301               	dw	769
  1462  005F25  0707               	dw	1799
  1463  005F27  0302               	dw	770
  1464  005F29  0606               	dw	1542
  1465  005F2B  0305               	dw	773
  1466  005F2D  0000               	dw	0
  1467  005F2F  0306               	dw	774
  1468  005F31  0D00               	dw	3328
  1469  005F33  0307               	dw	775
  1470  005F35  0706               	dw	1798
  1471  005F37  0308               	dw	776
  1472  005F39  0005               	dw	5
  1473  005F3B  0309               	dw	777
  1474  005F3D  0007               	dw	7
  1475  005F3F  030C               	dw	780
  1476  005F41  0000               	dw	0
  1477  005F43  030D               	dw	781
  1478  005F45  000A               	dw	10
  1479  005F47  0210               	dw	528
  1480  005F49  0000               	dw	0
  1481  005F4B  0211               	dw	529
  1482  005F4D  00EF               	dw	239
  1483  005F4F  0212               	dw	530
  1484  005F51  0000               	dw	0
  1485  005F53  0213               	dw	531
  1486  005F55  018F               	dw	399
  1487  005F57  0400               	dw	1024
  1488  005F59  3100               	dw	12544
  1489  005F5B  0401               	dw	1025
  1490  005F5D  0001               	dw	1
  1491  005F5F  0404               	dw	1028
  1492  005F61  0000               	dw	0
  1493  005F63  0500               	dw	1280
  1494  005F65  0000               	dw	0
  1495  005F67  0501               	dw	1281
  1496  005F69  0000               	dw	0
  1497  005F6B  0502               	dw	1282
  1498  005F6D  0000               	dw	0
  1499  005F6F  0503               	dw	1283
  1500  005F71  0000               	dw	0
  1501  005F73  0504               	dw	1284
  1502  005F75  0000               	dw	0
  1503  005F77  0505               	dw	1285
  1504  005F79  0000               	dw	0
  1505  005F7B  0010               	dw	16
  1506  005F7D  0010               	dw	16
  1507  005F7F  0011               	dw	17
  1508  005F81  0600               	dw	1536
  1509  005F83  0020               	dw	32
  1510  005F85  0002               	dw	2
  1511  005F87  0007               	dw	7
  1512  005F89  0173               	dw	371
  1513  005F8B                     __end_of_TFT_Init_Sequence:
  1514                           	opt callstack 0
  1515  005F8B                     _dpowers:
  1516                           	opt callstack 0
  1517  005F8B  0001               	dw	1
  1518  005F8D  000A               	dw	10
  1519  005F8F  0064               	dw	100
  1520  005F91  03E8               	dw	1000
  1521  005F93  2710               	dw	10000
  1522  005F95                     __end_of_dpowers:
  1523                           	opt callstack 0
  1524  005F95                     _ECG_ICON_HEART:
  1525                           	opt callstack 0
  1526  005F95  14                 	db	20
  1527  005F96  14                 	db	20
  1528  005F97  00                 	db	0
  1529  005F98  00                 	db	0
  1530  005F99  00                 	db	0
  1531  005F9A  00                 	db	0
  1532  005F9B  00                 	db	0
  1533  005F9C  00                 	db	0
  1534  005F9D  F8                 	db	248
  1535  005F9E  F0                 	db	240
  1536  005F9F  01                 	db	1
  1537  005FA0  FC                 	db	252
  1538  005FA1  F9                 	db	249
  1539  005FA2  03                 	db	3
  1540  005FA3  FC                 	db	252
  1541  005FA4  FF                 	db	255
  1542  005FA5  03                 	db	3
  1543  005FA6  FE                 	db	254
  1544  005FA7  FF                 	db	255
  1545  005FA8  07                 	db	7
  1546  005FA9  FE                 	db	254
  1547  005FAA  FF                 	db	255
  1548  005FAB  07                 	db	7
  1549  005FAC  FE                 	db	254
  1550  005FAD  FF                 	db	255
  1551  005FAE  07                 	db	7
  1552  005FAF  FE                 	db	254
  1553  005FB0  FF                 	db	255
  1554  005FB1  07                 	db	7
  1555  005FB2  FC                 	db	252
  1556  005FB3  FF                 	db	255
  1557  005FB4  03                 	db	3
  1558  005FB5  FC                 	db	252
  1559  005FB6  FF                 	db	255
  1560  005FB7  03                 	db	3
  1561  005FB8  F8                 	db	248
  1562  005FB9  FF                 	db	255
  1563  005FBA  01                 	db	1
  1564  005FBB  F0                 	db	240
  1565  005FBC  FF                 	db	255
  1566  005FBD  00                 	db	0
  1567  005FBE  E0                 	db	224
  1568  005FBF  7F                 	db	127
  1569  005FC0  00                 	db	0
  1570  005FC1  C0                 	db	192
  1571  005FC2  3F                 	db	63
  1572  005FC3  00                 	db	0
  1573  005FC4  80                 	db	128
  1574  005FC5  1F                 	db	31
  1575  005FC6  00                 	db	0
  1576  005FC7  00                 	db	0
  1577  005FC8  0F                 	db	15
  1578  005FC9  00                 	db	0
  1579  005FCA  00                 	db	0
  1580  005FCB  06                 	db	6
  1581  005FCC  00                 	db	0
  1582  005FCD  00                 	db	0
  1583  005FCE  00                 	db	0
  1584  005FCF  00                 	db	0
  1585  005FD0  00                 	db	0
  1586  005FD1  00                 	db	0
  1587  005FD2  00                 	db	0
  1588  005FD3                     __end_of_ECG_ICON_HEART:
  1589                           	opt callstack 0
  1590  0000                     _RCREG	set	4014
  1591  0000                     _TXREG	set	4013
  1592  0000                     _SPBRG	set	4015
  1593  0000                     _SPBRGH	set	4016
  1594  0000                     _BAUDCONbits	set	4024
  1595  0000                     _RCSTAbits	set	4011
  1596  0000                     _TXSTAbits	set	4012
  1597  0000                     _ADRESL	set	4035
  1598  0000                     _ADRESH	set	4036
  1599  0000                     _PORTAbits	set	3968
  1600  0000                     _PORTB	set	3969
  1601  0000                     _PORTCbits	set	3970
  1602  0000                     _TMR3L	set	4018
  1603  0000                     _TMR3H	set	4019
  1604  0000                     _T3CONbits	set	4017
  1605  0000                     _ADCON2bits	set	4032
  1606  0000                     _ADCON1bits	set	4033
  1607  0000                     _ADCON0bits	set	4034
  1608  0000                     _LATC	set	3979
  1609  0000                     _TRISC	set	3988
  1610  0000                     _LATB	set	3978
  1611  0000                     _TRISB	set	3987
  1612  0000                     _LATA	set	3977
  1613  0000                     _TRISA	set	3986
  1614  0000                     _UCFGbits	set	3951
  1615  0000                     _UCONbits	set	3949
  1616  0000                     _OSCTUNEbits	set	3995
  1617  0000                     _OSCCONbits	set	4051
  1618  0000                     _CREN	set	32092
  1619  0000                     _OERR	set	32089
  1620  0000                     _TXIF	set	31988
  1621  0000                     _RCIE	set	31981
  1622  0000                     _GO_nDONE	set	32273
  1623  0000                     _TMR3IF	set	32009
  1624  0000                     _GIE	set	32663
  1625  0000                     _PEIE	set	32662
  1626  0000                     _TMR3IE	set	32001
  1627  0000                     _RBPU	set	32655
  1628  005FD3                     STR_3:
  1629                           
  1630                           ; BSR set to: 0
  1631  005FD3  2A                 	db	42
  1632  005FD4  2A                 	db	42
  1633  005FD5  2A                 	db	42
  1634  005FD6  20                 	db	32
  1635  005FD7  43                 	db	67	;'C'
  1636  005FD8  6F                 	db	111	;'o'
  1637  005FD9  6C                 	db	108	;'l'
  1638  005FDA  6C                 	db	108	;'l'
  1639  005FDB  65                 	db	101	;'e'
  1640  005FDC  67                 	db	103	;'g'
  1641  005FDD  61                 	db	97	;'a'
  1642  005FDE  72                 	db	114	;'r'
  1643  005FDF  65                 	db	101	;'e'
  1644  005FE0  20                 	db	32
  1645  005FE1  65                 	db	101	;'e'
  1646  005FE2  6C                 	db	108	;'l'
  1647  005FE3  65                 	db	101	;'e'
  1648  005FE4  74                 	db	116	;'t'
  1649  005FE5  74                 	db	116	;'t'
  1650  005FE6  72                 	db	114	;'r'
  1651  005FE7  6F                 	db	111	;'o'
  1652  005FE8  64                 	db	100	;'d'
  1653  005FE9  69                 	db	105	;'i'
  1654  005FEA  20                 	db	32
  1655  005FEB  2A                 	db	42
  1656  005FEC  2A                 	db	42
  1657  005FED  2A                 	db	42
  1658  005FEE  00                 	db	0
  1659  005FEF                     STR_2:
  1660                           
  1661                           ; BSR set to: 0
  1662  005FEF  46                 	db	70	;'F'
  1663  005FF0  72                 	db	114	;'r'
  1664  005FF1  65                 	db	101	;'e'
  1665  005FF2  71                 	db	113	;'q'
  1666  005FF3  75                 	db	117	;'u'
  1667  005FF4  65                 	db	101	;'e'
  1668  005FF5  6E                 	db	110	;'n'
  1669  005FF6  7A                 	db	122	;'z'
  1670  005FF7  61                 	db	97	;'a'
  1671  005FF8  3A                 	db	58	;':'
  1672  005FF9  00                 	db	0
  1673  005FFA                     STR_1:
  1674                           
  1675                           ; BSR set to: 0
  1676  005FFA  25                 	db	37
  1677  005FFB  33                 	db	51	;'3'
  1678  005FFC  64                 	db	100	;'d'
  1679  005FFD  00                 	db	0
  1680                           
  1681                           ; #config settings
  1682  005FFE  00                 	db	0	; dummy byte at the end
  1683  0000                     
  1684                           	psect	cinit
  1685  001248                     __pcinit:
  1686                           	opt callstack 0
  1687  001248                     start_initialization:
  1688                           	opt callstack 0
  1689  001248                     __initialization:
  1690                           	opt callstack 0
  1691                           
  1692                           ; Initialize objects allocated to BANK0 (8 bytes)
  1693                           ; load TBLPTR registers with __pidataBANK0
  1694  001248  0EBC               	movlw	low __pidataBANK0
  1695  00124A  6EF6               	movwf	tblptrl,c
  1696  00124C  0E16               	movlw	high __pidataBANK0
  1697  00124E  6EF7               	movwf	tblptrh,c
  1698  001250  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1699  001252  6EF8               	movwf	tblptru,c
  1700  001254  EE00  F095         	lfsr	0,__pdataBANK0
  1701  001258  EE10 F008          	lfsr	1,8
  1702  00125C                     copy_data0:
  1703  00125C  0009               	tblrd		*+
  1704  00125E  CFF5 FFEE          	movff	tablat,postinc0
  1705  001262  50E5               	movf	postdec1,w,c
  1706  001264  50E1               	movf	fsr1l,w,c
  1707  001266  E1FA               	bnz	copy_data0
  1708                           
  1709                           ; Initialize objects allocated to COMRAM (6 bytes)
  1710                           ; load TBLPTR registers with __pidataCOMRAM
  1711  001268  0EC4               	movlw	low __pidataCOMRAM
  1712  00126A  6EF6               	movwf	tblptrl,c
  1713  00126C  0E16               	movlw	high __pidataCOMRAM
  1714  00126E  6EF7               	movwf	tblptrh,c
  1715  001270  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1716  001272  6EF8               	movwf	tblptru,c
  1717  001274  EE00  F048         	lfsr	0,__pdataCOMRAM
  1718  001278  EE10 F006          	lfsr	1,6
  1719  00127C                     copy_data1:
  1720  00127C  0009               	tblrd		*+
  1721  00127E  CFF5 FFEE          	movff	tablat,postinc0
  1722  001282  50E5               	movf	postdec1,w,c
  1723  001284  50E1               	movf	fsr1l,w,c
  1724  001286  E1FA               	bnz	copy_data1
  1725                           
  1726                           ; Clear objects allocated to BANK1 (132 bytes)
  1727  001288  EE01  F000         	lfsr	0,__pbssBANK1
  1728  00128C  0E84               	movlw	132
  1729  00128E                     clear_0:
  1730  00128E  6AEE               	clrf	postinc0,c
  1731  001290  06E8               	decf	wreg,f,c
  1732  001292  E1FD               	bnz	clear_0
  1733                           
  1734                           ; Clear objects allocated to BANK0 (24 bytes)
  1735  001294  EE00  F07D         	lfsr	0,__pbssBANK0
  1736  001298  0E18               	movlw	24
  1737  00129A                     clear_1:
  1738  00129A  6AEE               	clrf	postinc0,c
  1739  00129C  06E8               	decf	wreg,f,c
  1740  00129E  E1FD               	bnz	clear_1
  1741                           
  1742                           ; Clear objects allocated to COMRAM (4 bytes)
  1743  0012A0  6A51               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1744  0012A2  6A50               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1745  0012A4  6A4F               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1746  0012A6  6A4E               	clrf	__pbssCOMRAM& (0+255),c
  1747  0012A8                     end_of_initialization:
  1748                           	opt callstack 0
  1749  0012A8                     __end_of__initialization:
  1750                           	opt callstack 0
  1751  0012A8  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1752  0012AA  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1753  0012AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1754  0012AE  6EF8               	movwf	tblptru,c
  1755  0012B0  0100               	movlb	0
  1756  0012B2  EF52  F00B         	goto	_main	;jump to C main() function
  1757                           
  1758                           	psect	bssCOMRAM
  1759  00004E                     __pbssCOMRAM:
  1760                           	opt callstack 0
  1761  00004E                     _ECG_HEARTRATE:
  1762                           	opt callstack 0
  1763  00004E                     	ds	4
  1764                           
  1765                           	psect	dataCOMRAM
  1766  000048                     __pdataCOMRAM:
  1767                           	opt callstack 0
  1768  000048                     _Ecg_Y:
  1769                           	opt callstack 0
  1770  000048                     	ds	2
  1771  00004A                     _Ecg_Xold:
  1772                           	opt callstack 0
  1773  00004A                     	ds	2
  1774  00004C                     _Ecg_X:
  1775                           	opt callstack 0
  1776  00004C                     	ds	2
  1777                           
  1778                           	psect	bssBANK0
  1779  00007D                     __pbssBANK0:
  1780                           	opt callstack 0
  1781  00007D                     _ECG_HEARTBEAT:
  1782                           	opt callstack 0
  1783  00007D                     	ds	13
  1784  00008A                     _ECG_BUFFER:
  1785                           	opt callstack 0
  1786  00008A                     	ds	5
  1787  00008F                     _MILLISECONDS:
  1788                           	opt callstack 0
  1789  00008F                     	ds	4
  1790  000093                     _ECG_FLAGS:
  1791                           	opt callstack 0
  1792  000093                     	ds	2
  1793                           
  1794                           	psect	dataBANK0
  1795  000095                     __pdataBANK0:
  1796                           	opt callstack 0
  1797  000095                     _xx:
  1798                           	opt callstack 0
  1799  000095                     	ds	6
  1800  00009B                     _Ecg_Yold:
  1801                           	opt callstack 0
  1802  00009B                     	ds	2
  1803                           
  1804                           	psect	bssBANK1
  1805  000100                     __pbssBANK1:
  1806                           	opt callstack 0
  1807  000100                     _EUSART_RX:
  1808                           	opt callstack 0
  1809  000100                     	ds	132
  1810                           
  1811                           	psect	cstackBANK0
  1812  000060                     __pcstackBANK0:
  1813                           	opt callstack 0
  1814  000060                     ??_Ecg_ProcessHeartRate:
  1815                           
  1816                           ; 1 bytes @ 0x0
  1817  000060                     	ds	12
  1818  00006C                     Ecg_ProcessHeartRate@heartrateString:
  1819                           	opt callstack 0
  1820                           
  1821                           ; 5 bytes @ 0xC
  1822  00006C                     	ds	5
  1823  000071                     _Ecg_ProcessHeartRate$881:
  1824                           	opt callstack 0
  1825                           
  1826                           ; 2 bytes @ 0x11
  1827  000071                     	ds	2
  1828  000073                     _Ecg_ProcessHeartRate$882:
  1829                           	opt callstack 0
  1830                           
  1831                           ; 2 bytes @ 0x13
  1832  000073                     	ds	2
  1833  000075                     Ecg_ProcessHeartRate@heartbeatAverage:
  1834                           	opt callstack 0
  1835                           
  1836                           ; 4 bytes @ 0x15
  1837  000075                     	ds	4
  1838  000079                     Ecg_ProcessHeartRate@heartrate:
  1839                           	opt callstack 0
  1840                           
  1841                           ; 1 bytes @ 0x19
  1842  000079                     	ds	1
  1843  00007A                     Ecg_ProcessHeartRate@jPrev:
  1844                           	opt callstack 0
  1845                           
  1846                           ; 1 bytes @ 0x1A
  1847  00007A                     	ds	1
  1848  00007B                     Ecg_ProcessHeartRate@i:
  1849                           	opt callstack 0
  1850                           
  1851                           ; 1 bytes @ 0x1B
  1852  00007B                     	ds	1
  1853  00007C                     Ecg_ProcessHeartRate@j:
  1854                           	opt callstack 0
  1855                           
  1856                           ; 1 bytes @ 0x1C
  1857  00007C                     	ds	1
  1858                           
  1859                           	psect	cstackCOMRAM
  1860  000001                     __pcstackCOMRAM:
  1861                           	opt callstack 0
  1862  000001                     ??_Ecg_Interrupt:
  1863  000001                     
  1864                           ; 1 bytes @ 0x0
  1865  000001                     	ds	2
  1866  000003                     ??_init:
  1867  000003                     ??_Ecg_ProcessInterrupt:
  1868  000003                     ??_isdigit:
  1869  000003                     ??_TFT_Reset:
  1870  000003                     ?_abs:
  1871                           	opt callstack 0
  1872  000003                     ?_Ecg_CheckLeads:
  1873                           	opt callstack 0
  1874  000003                     ?_Ecg_Read:
  1875                           	opt callstack 0
  1876  000003                     ?___wmul:
  1877                           	opt callstack 0
  1878  000003                     ?___awdiv:
  1879                           	opt callstack 0
  1880  000003                     ?___lwdiv:
  1881                           	opt callstack 0
  1882  000003                     ?___lldiv:
  1883                           	opt callstack 0
  1884  000003                     TFT_WriteRegister@reg:
  1885                           	opt callstack 0
  1886  000003                     ___wmul@multiplier:
  1887                           	opt callstack 0
  1888  000003                     ___awdiv@dividend:
  1889                           	opt callstack 0
  1890  000003                     ___lwdiv@dividend:
  1891                           	opt callstack 0
  1892  000003                     abs@a:
  1893                           	opt callstack 0
  1894  000003                     ___lldiv@dividend:
  1895                           	opt callstack 0
  1896                           
  1897                           ; 4 bytes @ 0x2
  1898  000003                     	ds	1
  1899  000004                     _isdigit$1638:
  1900                           	opt callstack 0
  1901                           
  1902                           ; 1 bytes @ 0x3
  1903  000004                     	ds	1
  1904  000005                     ??_abs:
  1905  000005                     ??_Ecg_CheckLeads:
  1906  000005                     ??_Ecg_Read:
  1907  000005                     isdigit@c:
  1908                           	opt callstack 0
  1909  000005                     TFT_WriteRegister@data:
  1910                           	opt callstack 0
  1911  000005                     ___wmul@multiplicand:
  1912                           	opt callstack 0
  1913  000005                     ___awdiv@divisor:
  1914                           	opt callstack 0
  1915  000005                     ___lwdiv@divisor:
  1916                           	opt callstack 0
  1917                           
  1918                           ; 2 bytes @ 0x4
  1919  000005                     	ds	1
  1920  000006                     Ecg_CheckLeads@leadsStatus:
  1921                           	opt callstack 0
  1922                           
  1923                           ; 1 bytes @ 0x5
  1924  000006                     	ds	1
  1925  000007                     TFT_WriteRegister@h:
  1926                           	opt callstack 0
  1927  000007                     ___awdiv@counter:
  1928                           	opt callstack 0
  1929  000007                     Ecg_Read@ecg:
  1930                           	opt callstack 0
  1931  000007                     ___wmul@product:
  1932                           	opt callstack 0
  1933  000007                     ___lwdiv@quotient:
  1934                           	opt callstack 0
  1935  000007                     ___lldiv@divisor:
  1936                           	opt callstack 0
  1937                           
  1938                           ; 4 bytes @ 0x6
  1939  000007                     	ds	1
  1940  000008                     TFT_WriteRegister@l:
  1941                           	opt callstack 0
  1942  000008                     ___awdiv@sign:
  1943                           	opt callstack 0
  1944                           
  1945                           ; 1 bytes @ 0x7
  1946  000008                     	ds	1
  1947  000009                     TFT_WriteRegister@h_596:
  1948                           	opt callstack 0
  1949  000009                     ___lwdiv@counter:
  1950                           	opt callstack 0
  1951  000009                     ___awdiv@quotient:
  1952                           	opt callstack 0
  1953                           
  1954                           ; 2 bytes @ 0x8
  1955  000009                     	ds	1
  1956  00000A                     ?___lwmod:
  1957                           	opt callstack 0
  1958  00000A                     TFT_WriteRegister@l_597:
  1959                           	opt callstack 0
  1960  00000A                     ___lwmod@dividend:
  1961                           	opt callstack 0
  1962                           
  1963                           ; 2 bytes @ 0x9
  1964  00000A                     	ds	1
  1965  00000B                     TFT_SetAddrWindow@x1:
  1966                           	opt callstack 0
  1967  00000B                     TFT_DrawPixel@x:
  1968                           	opt callstack 0
  1969  00000B                     TFT_Flood@color:
  1970                           	opt callstack 0
  1971  00000B                     ___lldiv@quotient:
  1972                           	opt callstack 0
  1973                           
  1974                           ; 4 bytes @ 0xA
  1975  00000B                     	ds	1
  1976  00000C                     ___lwmod@divisor:
  1977                           	opt callstack 0
  1978                           
  1979                           ; 2 bytes @ 0xB
  1980  00000C                     	ds	1
  1981  00000D                     TFT_SetAddrWindow@y1:
  1982                           	opt callstack 0
  1983  00000D                     TFT_DrawPixel@y:
  1984                           	opt callstack 0
  1985  00000D                     TFT_Flood@len:
  1986                           	opt callstack 0
  1987                           
  1988                           ; 4 bytes @ 0xC
  1989  00000D                     	ds	1
  1990  00000E                     ___lwmod@counter:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 1 bytes @ 0xD
  1994  00000E                     	ds	1
  1995  00000F                     ?_sprintf:
  1996                           	opt callstack 0
  1997  00000F                     ___lldiv@counter:
  1998                           	opt callstack 0
  1999  00000F                     TFT_SetAddrWindow@x2:
  2000                           	opt callstack 0
  2001  00000F                     TFT_DrawPixel@color:
  2002                           	opt callstack 0
  2003  00000F                     sprintf@sp:
  2004                           	opt callstack 0
  2005                           
  2006                           ; 2 bytes @ 0xE
  2007  00000F                     	ds	2
  2008  000011                     ??_TFT_Flood:
  2009  000011                     TFT_DrawBitmap@y:
  2010                           	opt callstack 0
  2011  000011                     TFT_SetAddrWindow@y2:
  2012                           	opt callstack 0
  2013  000011                     TFT_DrawLine@x0:
  2014                           	opt callstack 0
  2015  000011                     sprintf@f:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 2 bytes @ 0x10
  2019  000011                     	ds	1
  2020  000012                     TFT_DrawBitmap@bitmap:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 2 bytes @ 0x11
  2024  000012                     	ds	1
  2025  000013                     TFT_DrawLine@y0:
  2026                           	opt callstack 0
  2027                           
  2028                           ; 2 bytes @ 0x12
  2029  000013                     	ds	1
  2030  000014                     TFT_DrawBitmap@color:
  2031                           	opt callstack 0
  2032                           
  2033                           ; 2 bytes @ 0x13
  2034  000014                     	ds	1
  2035  000015                     ??_sprintf:
  2036  000015                     TFT_DrawLine@x1:
  2037                           	opt callstack 0
  2038  000015                     TFT_Flood@blocks:
  2039                           	opt callstack 0
  2040                           
  2041                           ; 2 bytes @ 0x14
  2042  000015                     	ds	1
  2043  000016                     ??_TFT_DrawBitmap:
  2044                           
  2045                           ; 1 bytes @ 0x15
  2046  000016                     	ds	1
  2047  000017                     TFT_Flood@i:
  2048                           	opt callstack 0
  2049  000017                     TFT_DrawBitmap@x:
  2050                           	opt callstack 0
  2051  000017                     TFT_DrawLine@y1:
  2052                           	opt callstack 0
  2053                           
  2054                           ; 2 bytes @ 0x16
  2055  000017                     	ds	1
  2056  000018                     TFT_Flood@color_hi:
  2057                           	opt callstack 0
  2058  000018                     TFT_DrawBitmap@w:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 1 bytes @ 0x17
  2062  000018                     	ds	1
  2063  000019                     TFT_Flood@color_lo:
  2064                           	opt callstack 0
  2065  000019                     TFT_DrawBitmap@h:
  2066                           	opt callstack 0
  2067  000019                     TFT_DrawLine@color:
  2068                           	opt callstack 0
  2069  000019                     sprintf@ap:
  2070                           	opt callstack 0
  2071                           
  2072                           ; 2 bytes @ 0x18
  2073  000019                     	ds	1
  2074  00001A                     TFT_DrawBitmap@j:
  2075                           	opt callstack 0
  2076  00001A                     TFT_DrawFillRect@x:
  2077                           	opt callstack 0
  2078  00001A                     TFT_FillScreen@color:
  2079                           	opt callstack 0
  2080                           
  2081                           ; 2 bytes @ 0x19
  2082  00001A                     	ds	1
  2083  00001B                     ??_TFT_DrawLine:
  2084  00001B                     TFT_DrawBitmap@byte:
  2085                           	opt callstack 0
  2086  00001B                     sprintf@prec:
  2087                           	opt callstack 0
  2088                           
  2089                           ; 1 bytes @ 0x1A
  2090  00001B                     	ds	1
  2091  00001C                     ??_TFT_Init:
  2092  00001C                     TFT_DrawBitmap@i:
  2093                           	opt callstack 0
  2094  00001C                     sprintf@flag:
  2095                           	opt callstack 0
  2096  00001C                     TFT_DrawFillRect@y:
  2097                           	opt callstack 0
  2098                           
  2099                           ; 2 bytes @ 0x1B
  2100  00001C                     	ds	1
  2101  00001D                     sprintf@val:
  2102                           	opt callstack 0
  2103                           
  2104                           ; 2 bytes @ 0x1C
  2105  00001D                     	ds	1
  2106  00001E                     TFT_Init@data:
  2107                           	opt callstack 0
  2108  00001E                     TFT_DrawLine@t:
  2109                           	opt callstack 0
  2110  00001E                     TFT_DrawFillRect@w:
  2111                           	opt callstack 0
  2112                           
  2113                           ; 2 bytes @ 0x1D
  2114  00001E                     	ds	1
  2115  00001F                     sprintf@width:
  2116                           	opt callstack 0
  2117                           
  2118                           ; 2 bytes @ 0x1E
  2119  00001F                     	ds	1
  2120  000020                     TFT_Init@initSequenceSize:
  2121                           	opt callstack 0
  2122  000020                     TFT_DrawLine@t_641:
  2123                           	opt callstack 0
  2124  000020                     TFT_DrawFillRect@h:
  2125                           	opt callstack 0
  2126                           
  2127                           ; 2 bytes @ 0x1F
  2128  000020                     	ds	1
  2129  000021                     sprintf@c:
  2130                           	opt callstack 0
  2131                           
  2132                           ; 1 bytes @ 0x20
  2133  000021                     	ds	1
  2134  000022                     TFT_Init@cmd:
  2135                           	opt callstack 0
  2136  000022                     TFT_DrawLine@t_642:
  2137                           	opt callstack 0
  2138  000022                     TFT_DrawFillRect@color:
  2139                           	opt callstack 0
  2140                           
  2141                           ; 2 bytes @ 0x21
  2142  000022                     	ds	2
  2143  000024                     ??_TFT_DrawFillRect:
  2144  000024                     TFT_Init@i:
  2145                           	opt callstack 0
  2146  000024                     TFT_DrawLine@t_643:
  2147                           	opt callstack 0
  2148                           
  2149                           ; 2 bytes @ 0x23
  2150  000024                     	ds	2
  2151  000026                     TFT_DrawLine@dy:
  2152                           	opt callstack 0
  2153                           
  2154                           ; 2 bytes @ 0x25
  2155  000026                     	ds	2
  2156  000028                     ??_Ecg_ProcessHeartbeat:
  2157  000028                     TFT_DrawLine@ystep:
  2158                           	opt callstack 0
  2159  000028                     TFT_DrawChar@x:
  2160                           	opt callstack 0
  2161                           
  2162                           ; 2 bytes @ 0x27
  2163  000028                     	ds	2
  2164  00002A                     TFT_DrawLine@err:
  2165                           	opt callstack 0
  2166  00002A                     TFT_DrawChar@y:
  2167                           	opt callstack 0
  2168  00002A                     Ecg_ProcessHeartbeat@ecgDeltaSum:
  2169                           	opt callstack 0
  2170                           
  2171                           ; 2 bytes @ 0x29
  2172  00002A                     	ds	2
  2173  00002C                     TFT_DrawChar@c:
  2174                           	opt callstack 0
  2175  00002C                     TFT_DrawLine@steep:
  2176                           	opt callstack 0
  2177  00002C                     Ecg_ProcessHeartbeat@ecgDeltaAbsSum:
  2178                           	opt callstack 0
  2179                           
  2180                           ; 2 bytes @ 0x2B
  2181  00002C                     	ds	1
  2182  00002D                     TFT_DrawChar@color:
  2183                           	opt callstack 0
  2184                           
  2185                           ; 2 bytes @ 0x2C
  2186  00002D                     	ds	1
  2187  00002E                     TFT_DrawLine@dx:
  2188                           	opt callstack 0
  2189  00002E                     Ecg_ProcessHeartbeat@ecgDeltaDiff:
  2190                           	opt callstack 0
  2191                           
  2192                           ; 2 bytes @ 0x2D
  2193  00002E                     	ds	1
  2194  00002F                     TFT_DrawChar@bg:
  2195                           	opt callstack 0
  2196                           
  2197                           ; 2 bytes @ 0x2E
  2198  00002F                     	ds	1
  2199  000030                     Ecg_ProcessHeartbeat@delta:
  2200                           	opt callstack 0
  2201  000030                     Ecg_Draw@ecg:
  2202                           	opt callstack 0
  2203                           
  2204                           ; 2 bytes @ 0x2F
  2205  000030                     	ds	1
  2206  000031                     TFT_DrawChar@size:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 1 bytes @ 0x30
  2210  000031                     	ds	1
  2211  000032                     ??_TFT_DrawChar:
  2212  000032                     Ecg_ProcessHeartbeat@i:
  2213                           	opt callstack 0
  2214                           
  2215                           ; 1 bytes @ 0x31
  2216  000032                     	ds	4
  2217  000036                     TFT_DrawChar@line:
  2218                           	opt callstack 0
  2219                           
  2220                           ; 1 bytes @ 0x35
  2221  000036                     	ds	1
  2222  000037                     _TFT_DrawChar$1863:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 2 bytes @ 0x36
  2226  000037                     	ds	2
  2227  000039                     _TFT_DrawChar$1864:
  2228                           	opt callstack 0
  2229                           
  2230                           ; 2 bytes @ 0x38
  2231  000039                     	ds	2
  2232  00003B                     TFT_DrawChar@j:
  2233                           	opt callstack 0
  2234                           
  2235                           ; 1 bytes @ 0x3A
  2236  00003B                     	ds	1
  2237  00003C                     TFT_DrawChar@i:
  2238                           	opt callstack 0
  2239                           
  2240                           ; 1 bytes @ 0x3B
  2241  00003C                     	ds	1
  2242  00003D                     TFT_DrawString@x:
  2243                           	opt callstack 0
  2244                           
  2245                           ; 2 bytes @ 0x3C
  2246  00003D                     	ds	2
  2247  00003F                     TFT_DrawString@y:
  2248                           	opt callstack 0
  2249                           
  2250                           ; 2 bytes @ 0x3E
  2251  00003F                     	ds	2
  2252  000041                     TFT_DrawString@str:
  2253                           	opt callstack 0
  2254                           
  2255                           ; 2 bytes @ 0x40
  2256  000041                     	ds	2
  2257  000043                     TFT_DrawString@color:
  2258                           	opt callstack 0
  2259                           
  2260                           ; 2 bytes @ 0x42
  2261  000043                     	ds	2
  2262  000045                     TFT_DrawString@bg:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 2 bytes @ 0x44
  2266  000045                     	ds	2
  2267  000047                     TFT_DrawString@size:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 1 bytes @ 0x46
  2271  000047                     	ds	1
  2272  000048                     
  2273                           ; 1 bytes @ 0x47
  2274 ;;
  2275 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2276 ;;
  2277 ;; *************** function _main *****************
  2278 ;; Defined at:
  2279 ;;		line 14 in file "main.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;		None
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2293 ;;      Params:         0       0       0       0       0       0       0       0       0
  2294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2296 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2297 ;;Total ram usage:        0 bytes
  2298 ;; Hardware stack levels required when called:   12
  2299 ;; This function calls:
  2300 ;;		_Ecg_Init
  2301 ;;		_TFT_Init
  2302 ;;		_init
  2303 ;;		_loop
  2304 ;; This function is called by:
  2305 ;;		Startup code after reset
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text0
  2310  0016A4                     __ptext0:
  2311                           	opt callstack 0
  2312  0016A4                     _main:
  2313                           	opt callstack 19
  2314  0016A4                     
  2315                           ;main.c: 16: init();
  2316  0016A4  ECEB  F008         	call	_init	;wreg free
  2317  0016A8                     
  2318                           ;main.c: 17: TFT_Init();
  2319  0016A8  EC8E  F005         	call	_TFT_Init	;wreg free
  2320  0016AC                     
  2321                           ;main.c: 19: Ecg_Init();
  2322  0016AC  ECF5  F00A         	call	_Ecg_Init	;wreg free
  2323  0016B0                     l3035:
  2324  0016B0  EC65  F00B         	call	_loop	;wreg free
  2325  0016B4  EF58  F00B         	goto	l3035
  2326  0016B8  EF07  F000         	goto	start
  2327  0016BC                     __end_of_main:
  2328                           	opt callstack 0
  2329                           
  2330 ;; *************** function _loop *****************
  2331 ;; Defined at:
  2332 ;;		line 29 in file "main.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:   11
  2353 ;; This function calls:
  2354 ;;		_Ecg_Process
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text1
  2361  0016CA                     __ptext1:
  2362                           	opt callstack 0
  2363  0016CA                     _loop:
  2364                           	opt callstack 19
  2365  0016CA                     
  2366                           ;main.c: 30: Ecg_Process();
  2367  0016CA  EC8D  F009         	call	_Ecg_Process	;wreg free
  2368  0016CE  0012               	return		;funcret
  2369  0016D0                     __end_of_loop:
  2370                           	opt callstack 0
  2371                           
  2372 ;; *************** function _Ecg_Process *****************
  2373 ;; Defined at:
  2374 ;;		line 23 in file "ecg.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2391 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2392 ;;Total ram usage:        0 bytes
  2393 ;; Hardware stack levels used:    1
  2394 ;; Hardware stack levels required when called:   10
  2395 ;; This function calls:
  2396 ;;		_Ecg_ProcessEcg
  2397 ;;		_Ecg_ProcessHeartRate
  2398 ;;		_Ecg_ProcessInterrupt
  2399 ;; This function is called by:
  2400 ;;		_loop
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text2
  2405  00131A                     __ptext2:
  2406                           	opt callstack 0
  2407  00131A                     _Ecg_Process:
  2408                           	opt callstack 19
  2409  00131A                     
  2410                           ;ecg.c: 24: if(ECG_FLAGS.processInterrupt) {
  2411  00131A  0100               	movlb	0	; () banked
  2412  00131C  A993               	btfss	_ECG_FLAGS& (0+255),4,b
  2413  00131E  EF93  F009         	goto	u2081
  2414  001322  EF95  F009         	goto	u2080
  2415  001326                     u2081:
  2416  001326  EF99  F009         	goto	l3013
  2417  00132A                     u2080:
  2418  00132A                     
  2419                           ; BSR set to: 0
  2420                           ;ecg.c: 25: Ecg_ProcessInterrupt();
  2421  00132A  ECA7  F00A         	call	_Ecg_ProcessInterrupt	;wreg free
  2422  00132E                     
  2423                           ;ecg.c: 26: ECG_FLAGS.processInterrupt = 0;
  2424  00132E  0100               	movlb	0	; () banked
  2425  001330  9993               	bcf	_ECG_FLAGS& (0+255),4,b
  2426  001332                     l3013:
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;ecg.c: 27: };ecg.c: 29: if(ECG_FLAGS.processEcg) {
  2430  001332  AB93               	btfss	_ECG_FLAGS& (0+255),5,b
  2431  001334  EF9E  F009         	goto	u2091
  2432  001338  EFA0  F009         	goto	u2090
  2433  00133C                     u2091:
  2434  00133C  EFA4  F009         	goto	l3019
  2435  001340                     u2090:
  2436  001340                     
  2437                           ; BSR set to: 0
  2438                           ;ecg.c: 30: Ecg_ProcessEcg();
  2439  001340  ECDF  F009         	call	_Ecg_ProcessEcg	;wreg free
  2440  001344                     
  2441                           ;ecg.c: 31: ECG_FLAGS.processEcg = 0;
  2442  001344  0100               	movlb	0	; () banked
  2443  001346  9B93               	bcf	_ECG_FLAGS& (0+255),5,b
  2444  001348                     l3019:
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;ecg.c: 32: };ecg.c: 34: if(ECG_FLAGS.processHeartRate && ECG_FLAGS.leadsOk) {
  2448  001348  A793               	btfss	_ECG_FLAGS& (0+255),3,b
  2449  00134A  EFA9  F009         	goto	u2101
  2450  00134E  EFAB  F009         	goto	u2100
  2451  001352                     u2101:
  2452  001352  EFB6  F009         	goto	l289
  2453  001356                     u2100:
  2454  001356                     
  2455                           ; BSR set to: 0
  2456  001356  A393               	btfss	_ECG_FLAGS& (0+255),1,b
  2457  001358  EFB0  F009         	goto	u2111
  2458  00135C  EFB2  F009         	goto	u2110
  2459  001360                     u2111:
  2460  001360  EFB6  F009         	goto	l289
  2461  001364                     u2110:
  2462  001364                     
  2463                           ; BSR set to: 0
  2464                           ;ecg.c: 35: Ecg_ProcessHeartRate();
  2465  001364  EC22  F004         	call	_Ecg_ProcessHeartRate	;wreg free
  2466  001368                     
  2467                           ;ecg.c: 36: ECG_FLAGS.processHeartRate = 0;
  2468  001368  0100               	movlb	0	; () banked
  2469  00136A  9793               	bcf	_ECG_FLAGS& (0+255),3,b
  2470  00136C                     l289:
  2471                           
  2472                           ; BSR set to: 0
  2473  00136C  0012               	return		;funcret
  2474  00136E                     __end_of_Ecg_Process:
  2475                           	opt callstack 0
  2476                           
  2477 ;; *************** function _Ecg_ProcessInterrupt *****************
  2478 ;; Defined at:
  2479 ;;		line 40 in file "ecg.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2493 ;;      Params:         0       0       0       0       0       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2495 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2496 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2497 ;;Total ram usage:        1 bytes
  2498 ;; Hardware stack levels used:    1
  2499 ;; Hardware stack levels required when called:    2
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_Ecg_Process
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text3
  2508  00154E                     __ptext3:
  2509                           	opt callstack 0
  2510  00154E                     _Ecg_ProcessInterrupt:
  2511                           	opt callstack 26
  2512  00154E                     
  2513                           ;ecg.c: 41: if(ECG_FLAGS.msecDelay >= (10 / 5)) {
  2514  00154E  0100               	movlb	0	; () banked
  2515  001550  5194               	movf	(_ECG_FLAGS+1)& (0+255),w,b
  2516  001552  0B07               	andlw	7
  2517  001554  6E03               	movwf	??_Ecg_ProcessInterrupt^0,c
  2518  001556  0E01               	movlw	1
  2519  001558  6403               	cpfsgt	??_Ecg_ProcessInterrupt^0,c
  2520  00155A  EFB1  F00A         	goto	u1771
  2521  00155E  EFB3  F00A         	goto	u1770
  2522  001562                     u1771:
  2523  001562  EFB6  F00A         	goto	l2725
  2524  001566                     u1770:
  2525  001566                     
  2526                           ; BSR set to: 0
  2527                           ;ecg.c: 42: ECG_FLAGS.processEcg = 1;
  2528  001566  8B93               	bsf	_ECG_FLAGS& (0+255),5,b
  2529  001568                     
  2530                           ; BSR set to: 0
  2531                           ;ecg.c: 43: ECG_FLAGS.msecDelay = 0;
  2532  001568  0EF8               	movlw	-8
  2533  00156A  1794               	andwf	(_ECG_FLAGS+1)& (0+255),f,b
  2534  00156C                     l2725:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;ecg.c: 44: };ecg.c: 45: if(ECG_HEARTRATE.msecDelay >= (1200 / 5)) {
  2538  00156C  0EEF               	movlw	239
  2539  00156E  6451               	cpfsgt	(_ECG_HEARTRATE+3)^0,c
  2540  001570  EFBC  F00A         	goto	u1781
  2541  001574  EFBE  F00A         	goto	u1780
  2542  001578                     u1781:
  2543  001578  EFC1  F00A         	goto	l294
  2544  00157C                     u1780:
  2545  00157C                     
  2546                           ; BSR set to: 0
  2547                           ;ecg.c: 46: ECG_FLAGS.processHeartRate = 1;
  2548  00157C  8793               	bsf	_ECG_FLAGS& (0+255),3,b
  2549  00157E                     
  2550                           ; BSR set to: 0
  2551                           ;ecg.c: 47: ECG_HEARTRATE.msecDelay = 0;
  2552  00157E  0E00               	movlw	0
  2553  001580  6E51               	movwf	(_ECG_HEARTRATE+3)^0,c
  2554  001582                     l294:
  2555                           
  2556                           ; BSR set to: 0
  2557  001582  0012               	return		;funcret
  2558  001584                     __end_of_Ecg_ProcessInterrupt:
  2559                           	opt callstack 0
  2560                           
  2561 ;; *************** function _Ecg_ProcessHeartRate *****************
  2562 ;; Defined at:
  2563 ;;		line 75 in file "ecg.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  j               1   28[BANK0 ] unsigned char 
  2568 ;;  i               1   27[BANK0 ] unsigned char 
  2569 ;;  jPrev           1   26[BANK0 ] unsigned char 
  2570 ;;  heartrateStr    5   12[BANK0 ] unsigned char [5]
  2571 ;;  heartbeatAve    4   21[BANK0 ] unsigned long 
  2572 ;;  heartrate       1   25[BANK0 ] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0
  2583 ;;      Locals:         0      17       0       0       0       0       0       0       0
  2584 ;;      Temps:          0      12       0       0       0       0       0       0       0
  2585 ;;      Totals:         0      29       0       0       0       0       0       0       0
  2586 ;;Total ram usage:       29 bytes
  2587 ;; Hardware stack levels used:    1
  2588 ;; Hardware stack levels required when called:    8
  2589 ;; This function calls:
  2590 ;;		_TFT_DrawString
  2591 ;;		___lldiv
  2592 ;;		_sprintf
  2593 ;; This function is called by:
  2594 ;;		_Ecg_Process
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text4
  2599  000844                     __ptext4:
  2600                           	opt callstack 0
  2601  000844                     _Ecg_ProcessHeartRate:
  2602                           	opt callstack 20
  2603  000844                     
  2604                           ;ecg.c: 77: char heartrateString[5];;ecg.c: 78: uint32_t heartbeatAverage = 0;
  2605  000844  0E00               	movlw	0
  2606  000846  0100               	movlb	0	; () banked
  2607  000848  6F75               	movwf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),b
  2608  00084A  0E00               	movlw	0
  2609  00084C  6F76               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),b
  2610  00084E  0E00               	movlw	0
  2611  000850  6F77               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),b
  2612  000852  0E00               	movlw	0
  2613  000854  6F78               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),b
  2614                           
  2615                           ;ecg.c: 80: for(uint8_t i=0, j=ECG_HEARTBEAT.i, jPrev=0; i<(3 - 1); i++) {
  2616  000856  0E00               	movlw	0
  2617  000858  6F7B               	movwf	Ecg_ProcessHeartRate@i& (0+255),b
  2618  00085A                     
  2619                           ; BSR set to: 0
  2620  00085A  C089  F07C         	movff	_ECG_HEARTBEAT+12,Ecg_ProcessHeartRate@j
  2621  00085E                     l2979:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;ecg.c: 81: j = (j == 0) ? (3 - 1) : (j - 1);
  2625  00085E  517C               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  2626  000860  B4D8               	btfsc	status,2,c
  2627  000862  EF35  F004         	goto	u2051
  2628  000866  EF37  F004         	goto	u2050
  2629  00086A                     u2051:
  2630  00086A  EF3F  F004         	goto	l2983
  2631  00086E                     u2050:
  2632  00086E                     
  2633                           ; BSR set to: 0
  2634  00086E  0EFF               	movlw	255
  2635  000870  257C               	addwf	Ecg_ProcessHeartRate@j& (0+255),w,b
  2636  000872  6F71               	movwf	_Ecg_ProcessHeartRate$881& (0+255),b
  2637  000874  6B72               	clrf	(_Ecg_ProcessHeartRate$881+1)& (0+255),b
  2638  000876  0EFF               	movlw	255
  2639  000878  2372               	addwfc	(_Ecg_ProcessHeartRate$881+1)& (0+255),f,b
  2640  00087A  EF43  F004         	goto	l2985
  2641  00087E                     l2983:
  2642                           
  2643                           ; BSR set to: 0
  2644  00087E  0E00               	movlw	0
  2645  000880  6F72               	movwf	(_Ecg_ProcessHeartRate$881+1)& (0+255),b
  2646  000882  0E02               	movlw	2
  2647  000884  6F71               	movwf	_Ecg_ProcessHeartRate$881& (0+255),b
  2648  000886                     l2985:
  2649                           
  2650                           ; BSR set to: 0
  2651  000886  C071  F07C         	movff	_Ecg_ProcessHeartRate$881,Ecg_ProcessHeartRate@j
  2652                           
  2653                           ;ecg.c: 82: jPrev = (j == 0) ? (3 - 1) : (j - 1);
  2654  00088A  517C               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  2655  00088C  B4D8               	btfsc	status,2,c
  2656  00088E  EF4B  F004         	goto	u2061
  2657  000892  EF4D  F004         	goto	u2060
  2658  000896                     u2061:
  2659  000896  EF55  F004         	goto	l2989
  2660  00089A                     u2060:
  2661  00089A                     
  2662                           ; BSR set to: 0
  2663  00089A  0EFF               	movlw	255
  2664  00089C  257C               	addwf	Ecg_ProcessHeartRate@j& (0+255),w,b
  2665  00089E  6F73               	movwf	_Ecg_ProcessHeartRate$882& (0+255),b
  2666  0008A0  6B74               	clrf	(_Ecg_ProcessHeartRate$882+1)& (0+255),b
  2667  0008A2  0EFF               	movlw	255
  2668  0008A4  2374               	addwfc	(_Ecg_ProcessHeartRate$882+1)& (0+255),f,b
  2669  0008A6  EF59  F004         	goto	l2991
  2670  0008AA                     l2989:
  2671                           
  2672                           ; BSR set to: 0
  2673  0008AA  0E00               	movlw	0
  2674  0008AC  6F74               	movwf	(_Ecg_ProcessHeartRate$882+1)& (0+255),b
  2675  0008AE  0E02               	movlw	2
  2676  0008B0  6F73               	movwf	_Ecg_ProcessHeartRate$882& (0+255),b
  2677  0008B2                     l2991:
  2678                           
  2679                           ; BSR set to: 0
  2680  0008B2  C073  F07A         	movff	_Ecg_ProcessHeartRate$882,Ecg_ProcessHeartRate@jPrev
  2681  0008B6                     
  2682                           ; BSR set to: 0
  2683                           ;ecg.c: 83: heartbeatAverage += (ECG_HEARTBEAT.data[j] - ECG_HEARTBEAT.data[jPrev]);
  2684  0008B6  517A               	movf	Ecg_ProcessHeartRate@jPrev& (0+255),w,b
  2685  0008B8  0D04               	mullw	4
  2686  0008BA  0E7D               	movlw	low _ECG_HEARTBEAT
  2687  0008BC  24F3               	addwf	243,w,c
  2688  0008BE  6ED9               	movwf	fsr2l,c
  2689  0008C0  0E00               	movlw	high _ECG_HEARTBEAT
  2690  0008C2  20F4               	addwfc	prodh,w,c
  2691  0008C4  6EDA               	movwf	fsr2h,c
  2692  0008C6  CFDE F060          	movff	postinc2,??_Ecg_ProcessHeartRate
  2693  0008CA  CFDE F061          	movff	postinc2,??_Ecg_ProcessHeartRate+1
  2694  0008CE  CFDE F062          	movff	postinc2,??_Ecg_ProcessHeartRate+2
  2695  0008D2  CFDE F063          	movff	postinc2,??_Ecg_ProcessHeartRate+3
  2696  0008D6  517C               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  2697  0008D8  0D04               	mullw	4
  2698  0008DA  0E7D               	movlw	low _ECG_HEARTBEAT
  2699  0008DC  24F3               	addwf	243,w,c
  2700  0008DE  6ED9               	movwf	fsr2l,c
  2701  0008E0  0E00               	movlw	high _ECG_HEARTBEAT
  2702  0008E2  20F4               	addwfc	prodh,w,c
  2703  0008E4  6EDA               	movwf	fsr2h,c
  2704  0008E6  CFDE F064          	movff	postinc2,??_Ecg_ProcessHeartRate+4
  2705  0008EA  CFDE F065          	movff	postinc2,??_Ecg_ProcessHeartRate+5
  2706  0008EE  CFDE F066          	movff	postinc2,??_Ecg_ProcessHeartRate+6
  2707  0008F2  CFDE F067          	movff	postinc2,??_Ecg_ProcessHeartRate+7
  2708  0008F6  5160               	movf	??_Ecg_ProcessHeartRate& (0+255),w,b
  2709  0008F8  5D64               	subwf	(??_Ecg_ProcessHeartRate+4)& (0+255),w,b
  2710  0008FA  6F68               	movwf	(??_Ecg_ProcessHeartRate+8)& (0+255),b
  2711  0008FC  5161               	movf	(??_Ecg_ProcessHeartRate+1)& (0+255),w,b
  2712  0008FE  5965               	subwfb	(??_Ecg_ProcessHeartRate+5)& (0+255),w,b
  2713  000900  6F69               	movwf	(??_Ecg_ProcessHeartRate+9)& (0+255),b
  2714  000902  5162               	movf	(??_Ecg_ProcessHeartRate+2)& (0+255),w,b
  2715  000904  5966               	subwfb	(??_Ecg_ProcessHeartRate+6)& (0+255),w,b
  2716  000906  6F6A               	movwf	(??_Ecg_ProcessHeartRate+10)& (0+255),b
  2717  000908  5163               	movf	(??_Ecg_ProcessHeartRate+3)& (0+255),w,b
  2718  00090A  5967               	subwfb	(??_Ecg_ProcessHeartRate+7)& (0+255),w,b
  2719  00090C  6F6B               	movwf	(??_Ecg_ProcessHeartRate+11)& (0+255),b
  2720  00090E  5168               	movf	(??_Ecg_ProcessHeartRate+8)& (0+255),w,b
  2721  000910  2775               	addwf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),f,b
  2722  000912  5169               	movf	(??_Ecg_ProcessHeartRate+9)& (0+255),w,b
  2723  000914  2376               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),f,b
  2724  000916  516A               	movf	(??_Ecg_ProcessHeartRate+10)& (0+255),w,b
  2725  000918  2377               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),f,b
  2726  00091A  516B               	movf	(??_Ecg_ProcessHeartRate+11)& (0+255),w,b
  2727  00091C  2378               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),f,b
  2728  00091E                     
  2729                           ; BSR set to: 0
  2730  00091E  2B7B               	incf	Ecg_ProcessHeartRate@i& (0+255),f,b
  2731  000920                     
  2732                           ; BSR set to: 0
  2733  000920  0E01               	movlw	1
  2734  000922  657B               	cpfsgt	Ecg_ProcessHeartRate@i& (0+255),b
  2735  000924  EF96  F004         	goto	u2071
  2736  000928  EF98  F004         	goto	u2070
  2737  00092C                     u2071:
  2738  00092C  EF2F  F004         	goto	l2979
  2739  000930                     u2070:
  2740  000930                     
  2741                           ; BSR set to: 0
  2742                           ;ecg.c: 84: };ecg.c: 85: heartbeatAverage /= (3 - 1);
  2743  000930  90D8               	bcf	status,0,c
  2744  000932  3378               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),f,b
  2745  000934  3377               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),f,b
  2746  000936  3376               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),f,b
  2747  000938  3375               	rrcf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),f,b
  2748  00093A                     
  2749                           ; BSR set to: 0
  2750                           ;ecg.c: 86: heartrate = (uint8_t)(60000 / heartbeatAverage);
  2751  00093A  0E60               	movlw	96
  2752  00093C  6E03               	movwf	___lldiv@dividend^0,c
  2753  00093E  0EEA               	movlw	234
  2754  000940  6E04               	movwf	(___lldiv@dividend+1)^0,c
  2755  000942  0E00               	movlw	0
  2756  000944  6E05               	movwf	(___lldiv@dividend+2)^0,c
  2757  000946  0E00               	movlw	0
  2758  000948  6E06               	movwf	(___lldiv@dividend+3)^0,c
  2759  00094A  C075  F007         	movff	Ecg_ProcessHeartRate@heartbeatAverage,___lldiv@divisor
  2760  00094E  C076  F008         	movff	Ecg_ProcessHeartRate@heartbeatAverage+1,___lldiv@divisor+1
  2761  000952  C077  F009         	movff	Ecg_ProcessHeartRate@heartbeatAverage+2,___lldiv@divisor+2
  2762  000956  C078  F00A         	movff	Ecg_ProcessHeartRate@heartbeatAverage+3,___lldiv@divisor+3
  2763  00095A  EC27  F007         	call	___lldiv	;wreg free
  2764  00095E  5003               	movf	?___lldiv^0,w,c
  2765  000960  0100               	movlb	0	; () banked
  2766  000962  6F79               	movwf	Ecg_ProcessHeartRate@heartrate& (0+255),b
  2767  000964                     
  2768                           ; BSR set to: 0
  2769                           ;ecg.c: 87: sprintf(heartrateString, "%3d", heartrate);
  2770  000964  0E6C               	movlw	low Ecg_ProcessHeartRate@heartrateString
  2771  000966  6E0F               	movwf	sprintf@sp^0,c
  2772  000968  0E00               	movlw	high Ecg_ProcessHeartRate@heartrateString
  2773  00096A  6E10               	movwf	(sprintf@sp+1)^0,c
  2774  00096C  0EFA               	movlw	low STR_1
  2775  00096E  6E11               	movwf	sprintf@f^0,c
  2776  000970  0E5F               	movlw	high STR_1
  2777  000972  6E12               	movwf	(sprintf@f+1)^0,c
  2778  000974  C079  F013         	movff	Ecg_ProcessHeartRate@heartrate,?_sprintf+4
  2779  000978  6A14               	clrf	(?_sprintf+5)^0,c
  2780  00097A  EC09  F000         	call	_sprintf	;wreg free
  2781  00097E                     
  2782                           ;ecg.c: 88: TFT_DrawString(8, (400 - 140), heartrateString, 0x07E0, 0x0000, 2);
  2783  00097E  0E00               	movlw	0
  2784  000980  6E3E               	movwf	(TFT_DrawString@x+1)^0,c
  2785  000982  0E08               	movlw	8
  2786  000984  6E3D               	movwf	TFT_DrawString@x^0,c
  2787  000986  0E01               	movlw	1
  2788  000988  6E40               	movwf	(TFT_DrawString@y+1)^0,c
  2789  00098A  0E04               	movlw	4
  2790  00098C  6E3F               	movwf	TFT_DrawString@y^0,c
  2791  00098E  0E6C               	movlw	low Ecg_ProcessHeartRate@heartrateString
  2792  000990  6E41               	movwf	TFT_DrawString@str^0,c
  2793  000992  0E00               	movlw	high Ecg_ProcessHeartRate@heartrateString
  2794  000994  6E42               	movwf	(TFT_DrawString@str+1)^0,c
  2795  000996  0E07               	movlw	7
  2796  000998  6E44               	movwf	(TFT_DrawString@color+1)^0,c
  2797  00099A  0EE0               	movlw	224
  2798  00099C  6E43               	movwf	TFT_DrawString@color^0,c
  2799  00099E  0E00               	movlw	0
  2800  0009A0  6E46               	movwf	(TFT_DrawString@bg+1)^0,c
  2801  0009A2  0E00               	movlw	0
  2802  0009A4  6E45               	movwf	TFT_DrawString@bg^0,c
  2803  0009A6  0E02               	movlw	2
  2804  0009A8  6E47               	movwf	TFT_DrawString@size^0,c
  2805  0009AA  EC79  F007         	call	_TFT_DrawString	;wreg free
  2806  0009AE  0012               	return		;funcret
  2807  0009B0                     __end_of_Ecg_ProcessHeartRate:
  2808                           	opt callstack 0
  2809                           
  2810 ;; *************** function _sprintf *****************
  2811 ;; Defined at:
  2812 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  sp              2   14[COMRAM] PTR unsigned char 
  2815 ;;		 -> Ecg_ProcessHeartRate@heartrateString(5), 
  2816 ;;  f               2   16[COMRAM] PTR const unsigned char 
  2817 ;;		 -> STR_1(4), 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  tmpval          4    0        struct .
  2820 ;;  cp              3    0        PTR const unsigned char 
  2821 ;;  width           2   30[COMRAM] int 
  2822 ;;  val             2   28[COMRAM] unsigned int 
  2823 ;;  ap              2   24[COMRAM] PTR void [1]
  2824 ;;		 -> ?_sprintf(2), 
  2825 ;;  len             2    0        unsigned int 
  2826 ;;  c               1   32[COMRAM] unsigned char 
  2827 ;;  flag            1   27[COMRAM] unsigned char 
  2828 ;;  prec            1   26[COMRAM] char 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  2   14[COMRAM] int 
  2831 ;; Registers used:
  2832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2838 ;;      Params:         6       0       0       0       0       0       0       0       0
  2839 ;;      Locals:         9       0       0       0       0       0       0       0       0
  2840 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2841 ;;      Totals:        19       0       0       0       0       0       0       0       0
  2842 ;;Total ram usage:       19 bytes
  2843 ;; Hardware stack levels used:    1
  2844 ;; Hardware stack levels required when called:    3
  2845 ;; This function calls:
  2846 ;;		___lwdiv
  2847 ;;		___lwmod
  2848 ;;		___wmul
  2849 ;;		_isdigit
  2850 ;; This function is called by:
  2851 ;;		_Ecg_ProcessHeartRate
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text5
  2856  000012                     __ptext5:
  2857                           	opt callstack 0
  2858  000012                     _sprintf:
  2859                           	opt callstack 24
  2860  000012                     
  2861                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  2862  000012  0E13               	movlw	low (?_sprintf+4)
  2863  000014  6E19               	movwf	sprintf@ap^0,c
  2864  000016  0E00               	movlw	high (?_sprintf+4)
  2865  000018  6E1A               	movwf	(sprintf@ap+1)^0,c
  2866                           
  2867                           ;doprnt.c: 553: while((c = *f++)) {
  2868  00001A  EF5B  F001         	goto	l2691
  2869  00001E                     l2607:
  2870                           
  2871                           ;doprnt.c: 555: if(c != '%')
  2872  00001E  0E25               	movlw	37
  2873  000020  1821               	xorwf	sprintf@c^0,w,c
  2874  000022  B4D8               	btfsc	status,2,c
  2875  000024  EF16  F000         	goto	u1601
  2876  000028  EF18  F000         	goto	u1600
  2877  00002C                     u1601:
  2878  00002C  EF22  F000         	goto	l2613
  2879  000030                     u1600:
  2880  000030                     
  2881                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  2882  000030  C00F  FFD9         	movff	sprintf@sp,fsr2l
  2883  000034  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  2884  000038  C021  FFDF         	movff	sprintf@c,indf2
  2885  00003C  4A0F               	infsnz	sprintf@sp^0,f,c
  2886  00003E  2A10               	incf	(sprintf@sp+1)^0,f,c
  2887                           
  2888                           ;doprnt.c: 559: continue;
  2889  000040  EF5B  F001         	goto	l2691
  2890  000044                     l2613:
  2891                           
  2892                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  2893  000044  0E00               	movlw	0
  2894  000046  6E20               	movwf	(sprintf@width+1)^0,c
  2895  000048  0E00               	movlw	0
  2896  00004A  6E1F               	movwf	sprintf@width^0,c
  2897                           
  2898                           ;doprnt.c: 565: flag = 0;
  2899  00004C  0E00               	movlw	0
  2900  00004E  6E1C               	movwf	sprintf@flag^0,c
  2901  000050                     
  2902                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  2903  000050  C011  FFF6         	movff	sprintf@f,tblptrl
  2904  000054  C012  FFF7         	movff	sprintf@f+1,tblptrh
  2905  000058                     	if	0	;tblptru may be non-zero
  2906  000058                     	endif
  2907  000058                     	if	0	;tblptru may be non-zero
  2908  000058                     	endif
  2909  000058  0008               	tblrd		*
  2910  00005A  50F5               	movf	tablat,w,c
  2911  00005C  ECDC  F00A         	call	_isdigit
  2912  000060  A0D8               	btfss	status,0,c
  2913  000062  EF35  F000         	goto	u1611
  2914  000066  EF37  F000         	goto	u1610
  2915  00006A                     u1611:
  2916  00006A  EF6E  F000         	goto	l2629
  2917  00006E                     u1610:
  2918  00006E                     
  2919                           ;doprnt.c: 615: width = 0;
  2920  00006E  0E00               	movlw	0
  2921  000070  6E20               	movwf	(sprintf@width+1)^0,c
  2922  000072  0E00               	movlw	0
  2923  000074  6E1F               	movwf	sprintf@width^0,c
  2924  000076                     l2619:
  2925                           
  2926                           ;doprnt.c: 617: width *= 10;
  2927  000076  C01F  F003         	movff	sprintf@width,___wmul@multiplier
  2928  00007A  C020  F004         	movff	sprintf@width+1,___wmul@multiplier+1
  2929  00007E  0E00               	movlw	0
  2930  000080  6E06               	movwf	(___wmul@multiplicand+1)^0,c
  2931  000082  0E0A               	movlw	10
  2932  000084  6E05               	movwf	___wmul@multiplicand^0,c
  2933  000086  EC0D  F00B         	call	___wmul	;wreg free
  2934  00008A  C003  F01F         	movff	?___wmul,sprintf@width
  2935  00008E  C004  F020         	movff	?___wmul+1,sprintf@width+1
  2936  000092                     
  2937                           ;doprnt.c: 618: width += *f++ - '0';
  2938  000092  0ED0               	movlw	208
  2939  000094  6E15               	movwf	??_sprintf^0,c
  2940  000096  0EFF               	movlw	255
  2941  000098  6E16               	movwf	(??_sprintf+1)^0,c
  2942  00009A  C011  FFF6         	movff	sprintf@f,tblptrl
  2943  00009E  C012  FFF7         	movff	sprintf@f+1,tblptrh
  2944  0000A2                     	if	0	;tblptru may be non-zero
  2945  0000A2                     	endif
  2946  0000A2                     	if	0	;tblptru may be non-zero
  2947  0000A2                     	endif
  2948  0000A2  0008               	tblrd		*
  2949  0000A4  50F5               	movf	tablat,w,c
  2950  0000A6  6E17               	movwf	(??_sprintf+2)^0,c
  2951  0000A8  6A18               	clrf	(??_sprintf+3)^0,c
  2952  0000AA  5015               	movf	??_sprintf^0,w,c
  2953  0000AC  2617               	addwf	(??_sprintf+2)^0,f,c
  2954  0000AE  5016               	movf	(??_sprintf+1)^0,w,c
  2955  0000B0  2218               	addwfc	(??_sprintf+3)^0,f,c
  2956  0000B2  5017               	movf	(??_sprintf+2)^0,w,c
  2957  0000B4  261F               	addwf	sprintf@width^0,f,c
  2958  0000B6  5018               	movf	(??_sprintf+3)^0,w,c
  2959  0000B8  2220               	addwfc	(sprintf@width+1)^0,f,c
  2960  0000BA  4A11               	infsnz	sprintf@f^0,f,c
  2961  0000BC  2A12               	incf	(sprintf@f+1)^0,f,c
  2962  0000BE                     
  2963                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  2964  0000BE  C011  FFF6         	movff	sprintf@f,tblptrl
  2965  0000C2  C012  FFF7         	movff	sprintf@f+1,tblptrh
  2966  0000C6                     	if	0	;tblptru may be non-zero
  2967  0000C6                     	endif
  2968  0000C6                     	if	0	;tblptru may be non-zero
  2969  0000C6                     	endif
  2970  0000C6  0008               	tblrd		*
  2971  0000C8  50F5               	movf	tablat,w,c
  2972  0000CA  ECDC  F00A         	call	_isdigit
  2973  0000CE  B0D8               	btfsc	status,0,c
  2974  0000D0  EF6C  F000         	goto	u1621
  2975  0000D4  EF6E  F000         	goto	u1620
  2976  0000D8                     u1621:
  2977  0000D8  EF3B  F000         	goto	l2619
  2978  0000DC                     u1620:
  2979  0000DC                     l2629:
  2980  0000DC  C011  FFF6         	movff	sprintf@f,tblptrl
  2981  0000E0  C012  FFF7         	movff	sprintf@f+1,tblptrh
  2982  0000E4  4A11               	infsnz	sprintf@f^0,f,c
  2983  0000E6  2A12               	incf	(sprintf@f+1)^0,f,c
  2984  0000E8                     	if	0	;tblptru may be non-zero
  2985  0000E8                     	endif
  2986  0000E8                     	if	0	;tblptru may be non-zero
  2987  0000E8                     	endif
  2988  0000E8  0008               	tblrd		*
  2989  0000EA  CFF5 F021          	movff	tablat,sprintf@c
  2990  0000EE  5021               	movf	sprintf@c^0,w,c
  2991                           
  2992                           ; Switch size 1, requested type "simple"
  2993                           ; Number of cases is 3, Range of values is 0 to 105
  2994                           ; switch strategies available:
  2995                           ; Name         Instructions Cycles
  2996                           ; simple_byte           10     6 (average)
  2997                           ;	Chosen strategy is simple_byte
  2998  0000F0  0A00               	xorlw	0	; case 0
  2999  0000F2  B4D8               	btfsc	status,2,c
  3000  0000F4  EF6C  F001         	goto	l2693
  3001  0000F8  0A64               	xorlw	100	; case 100
  3002  0000FA  B4D8               	btfsc	status,2,c
  3003  0000FC  EF86  F000         	goto	l2631
  3004  000100  0A0D               	xorlw	13	; case 105
  3005  000102  B4D8               	btfsc	status,2,c
  3006  000104  EF86  F000         	goto	l2631
  3007  000108  EF5B  F001         	goto	l2691
  3008  00010C                     l2631:
  3009                           
  3010                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3011  00010C  C019  FFD9         	movff	sprintf@ap,fsr2l
  3012  000110  C01A  FFDA         	movff	sprintf@ap+1,fsr2h
  3013  000114  CFDE F01D          	movff	postinc2,sprintf@val
  3014  000118  CFDD F01E          	movff	postdec2,sprintf@val+1
  3015  00011C  0E02               	movlw	2
  3016  00011E  2619               	addwf	sprintf@ap^0,f,c
  3017  000120  0E00               	movlw	0
  3018  000122  221A               	addwfc	(sprintf@ap+1)^0,f,c
  3019  000124                     
  3020                           ;doprnt.c: 1287: if((int)val < 0) {
  3021  000124  BE1E               	btfsc	(sprintf@val+1)^0,7,c
  3022  000126  EF99  F000         	goto	u1630
  3023  00012A  EF97  F000         	goto	u1631
  3024  00012E                     u1631:
  3025  00012E  EF9F  F000         	goto	l2641
  3026  000132                     u1630:
  3027  000132                     
  3028                           ;doprnt.c: 1288: flag |= 0x03;
  3029  000132  0E03               	movlw	3
  3030  000134  121C               	iorwf	sprintf@flag^0,f,c
  3031  000136                     
  3032                           ;doprnt.c: 1289: val = -val;
  3033  000136  6C1D               	negf	sprintf@val^0,c
  3034  000138  1E1E               	comf	(sprintf@val+1)^0,f,c
  3035  00013A  B0D8               	btfsc	status,0,c
  3036  00013C  2A1E               	incf	(sprintf@val+1)^0,f,c
  3037  00013E                     l2641:
  3038                           
  3039                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  3040  00013E  0E01               	movlw	1
  3041  000140  6E21               	movwf	sprintf@c^0,c
  3042  000142                     l2647:
  3043                           
  3044                           ;doprnt.c: 1332: if(val < dpowers[c])
  3045  000142  5021               	movf	sprintf@c^0,w,c
  3046  000144  0D02               	mullw	2
  3047  000146  0E8B               	movlw	low _dpowers
  3048  000148  24F3               	addwf	243,w,c
  3049  00014A  6EF6               	movwf	tblptrl,c
  3050  00014C  0E5F               	movlw	high _dpowers
  3051  00014E  20F4               	addwfc	244,w,c
  3052  000150  6EF7               	movwf	tblptrh,c
  3053  000152                     	if	0	;There are less than 3 active tblptr bytes
  3054  000152                     	endif
  3055  000152  0009               	tblrd		*+
  3056  000154  50F5               	movf	tablat,w,c
  3057  000156  5C1D               	subwf	sprintf@val^0,w,c
  3058  000158  0009               	tblrd		*+
  3059  00015A  50F5               	movf	tablat,w,c
  3060  00015C  581E               	subwfb	(sprintf@val+1)^0,w,c
  3061  00015E  B0D8               	btfsc	status,0,c
  3062  000160  EFB4  F000         	goto	u1641
  3063  000164  EFB6  F000         	goto	u1640
  3064  000168                     u1641:
  3065  000168  EFB8  F000         	goto	l2651
  3066  00016C                     u1640:
  3067  00016C  EFC2  F000         	goto	l2655
  3068  000170                     l2651:
  3069  000170  2A21               	incf	sprintf@c^0,f,c
  3070  000172  0E05               	movlw	5
  3071  000174  1821               	xorwf	sprintf@c^0,w,c
  3072  000176  A4D8               	btfss	status,2,c
  3073  000178  EFC0  F000         	goto	u1651
  3074  00017C  EFC2  F000         	goto	u1650
  3075  000180                     u1651:
  3076  000180  EFA1  F000         	goto	l2647
  3077  000184                     u1650:
  3078  000184                     l2655:
  3079                           
  3080                           ;doprnt.c: 1371: if(width && flag & 0x03)
  3081  000184  501F               	movf	sprintf@width^0,w,c
  3082  000186  1020               	iorwf	(sprintf@width+1)^0,w,c
  3083  000188  B4D8               	btfsc	status,2,c
  3084  00018A  EFC9  F000         	goto	u1661
  3085  00018E  EFCB  F000         	goto	u1660
  3086  000192                     u1661:
  3087  000192  EFD9  F000         	goto	l2661
  3088  000196                     u1660:
  3089  000196  C01C  F015         	movff	sprintf@flag,??_sprintf
  3090  00019A  0E03               	movlw	3
  3091  00019C  1615               	andwf	??_sprintf^0,f,c
  3092  00019E  B4D8               	btfsc	status,2,c
  3093  0001A0  EFD4  F000         	goto	u1671
  3094  0001A4  EFD6  F000         	goto	u1670
  3095  0001A8                     u1671:
  3096  0001A8  EFD9  F000         	goto	l2661
  3097  0001AC                     u1670:
  3098  0001AC                     
  3099                           ;doprnt.c: 1372: width--;
  3100  0001AC  061F               	decf	sprintf@width^0,f,c
  3101  0001AE  A0D8               	btfss	status,0,c
  3102  0001B0  0620               	decf	(sprintf@width+1)^0,f,c
  3103  0001B2                     l2661:
  3104                           
  3105                           ;doprnt.c: 1407: if(width > c)
  3106  0001B2  5021               	movf	sprintf@c^0,w,c
  3107  0001B4  6E15               	movwf	??_sprintf^0,c
  3108  0001B6  6A16               	clrf	(??_sprintf+1)^0,c
  3109  0001B8  501F               	movf	sprintf@width^0,w,c
  3110  0001BA  5C15               	subwf	??_sprintf^0,w,c
  3111  0001BC  5016               	movf	(??_sprintf+1)^0,w,c
  3112  0001BE  0A80               	xorlw	128
  3113  0001C0  6E17               	movwf	(??_sprintf+2)^0,c
  3114  0001C2  5020               	movf	(sprintf@width+1)^0,w,c
  3115  0001C4  0A80               	xorlw	128
  3116  0001C6  5817               	subwfb	(??_sprintf+2)^0,w,c
  3117  0001C8  B0D8               	btfsc	status,0,c
  3118  0001CA  EFE9  F000         	goto	u1681
  3119  0001CE  EFEB  F000         	goto	u1680
  3120  0001D2                     u1681:
  3121  0001D2  EFF1  F000         	goto	l2665
  3122  0001D6                     u1680:
  3123  0001D6                     
  3124                           ;doprnt.c: 1408: width -= c;
  3125  0001D6  5021               	movf	sprintf@c^0,w,c
  3126  0001D8  5E1F               	subwf	sprintf@width^0,f,c
  3127  0001DA  0E00               	movlw	0
  3128  0001DC  5A20               	subwfb	(sprintf@width+1)^0,f,c
  3129  0001DE  EFF5  F000         	goto	l2667
  3130  0001E2                     l2665:
  3131                           
  3132                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  3133  0001E2  0E00               	movlw	0
  3134  0001E4  6E20               	movwf	(sprintf@width+1)^0,c
  3135  0001E6  0E00               	movlw	0
  3136  0001E8  6E1F               	movwf	sprintf@width^0,c
  3137  0001EA                     l2667:
  3138                           
  3139                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  3140  0001EA  501F               	movf	sprintf@width^0,w,c
  3141  0001EC  1020               	iorwf	(sprintf@width+1)^0,w,c
  3142  0001EE  B4D8               	btfsc	status,2,c
  3143  0001F0  EFFC  F000         	goto	u1691
  3144  0001F4  EFFE  F000         	goto	u1690
  3145  0001F8                     u1691:
  3146  0001F8  EF12  F001         	goto	l2675
  3147  0001FC                     u1690:
  3148  0001FC                     l2669:
  3149                           
  3150                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  3151  0001FC  C00F  FFD9         	movff	sprintf@sp,fsr2l
  3152  000200  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  3153  000204  0E20               	movlw	32
  3154  000206  6EDF               	movwf	indf2,c
  3155  000208  4A0F               	infsnz	sprintf@sp^0,f,c
  3156  00020A  2A10               	incf	(sprintf@sp+1)^0,f,c
  3157  00020C                     
  3158                           ;doprnt.c: 1457: while(--width);
  3159  00020C  061F               	decf	sprintf@width^0,f,c
  3160  00020E  A0D8               	btfss	status,0,c
  3161  000210  0620               	decf	(sprintf@width+1)^0,f,c
  3162  000212  501F               	movf	sprintf@width^0,w,c
  3163  000214  1020               	iorwf	(sprintf@width+1)^0,w,c
  3164  000216  A4D8               	btfss	status,2,c
  3165  000218  EF10  F001         	goto	u1701
  3166  00021C  EF12  F001         	goto	u1700
  3167  000220                     u1701:
  3168  000220  EFFE  F000         	goto	l2669
  3169  000224                     u1700:
  3170  000224                     l2675:
  3171                           
  3172                           ;doprnt.c: 1464: if(flag & 0x03)
  3173  000224  C01C  F015         	movff	sprintf@flag,??_sprintf
  3174  000228  0E03               	movlw	3
  3175  00022A  1615               	andwf	??_sprintf^0,f,c
  3176  00022C  B4D8               	btfsc	status,2,c
  3177  00022E  EF1B  F001         	goto	u1711
  3178  000232  EF1D  F001         	goto	u1710
  3179  000236                     u1711:
  3180  000236  EF25  F001         	goto	l2681
  3181  00023A                     u1710:
  3182  00023A                     
  3183                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3184  00023A  C00F  FFD9         	movff	sprintf@sp,fsr2l
  3185  00023E  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  3186  000242  0E2D               	movlw	45
  3187  000244  6EDF               	movwf	indf2,c
  3188  000246  4A0F               	infsnz	sprintf@sp^0,f,c
  3189  000248  2A10               	incf	(sprintf@sp+1)^0,f,c
  3190  00024A                     l2681:
  3191                           
  3192                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3193  00024A  C021  F01B         	movff	sprintf@c,sprintf@prec
  3194                           
  3195                           ;doprnt.c: 1500: while(prec--) {
  3196  00024E  EF52  F001         	goto	l2689
  3197  000252                     l2683:
  3198                           
  3199                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3200  000252  501B               	movf	sprintf@prec^0,w,c
  3201  000254  0D02               	mullw	2
  3202  000256  0E8B               	movlw	low _dpowers
  3203  000258  24F3               	addwf	243,w,c
  3204  00025A  6EF6               	movwf	tblptrl,c
  3205  00025C  0E5F               	movlw	high _dpowers
  3206  00025E  20F4               	addwfc	244,w,c
  3207  000260  6EF7               	movwf	tblptrh,c
  3208  000262                     	if	0	;There are less than 3 active tblptr bytes
  3209  000262                     	endif
  3210  000262  0009               	tblrd		*+
  3211  000264  CFF5 F005          	movff	tablat,___lwdiv@divisor
  3212  000268  000A               	tblrd		*-
  3213  00026A  CFF5 F006          	movff	tablat,___lwdiv@divisor+1
  3214  00026E  C01D  F003         	movff	sprintf@val,___lwdiv@dividend
  3215  000272  C01E  F004         	movff	sprintf@val+1,___lwdiv@dividend+1
  3216  000276  ECB1  F008         	call	___lwdiv	;wreg free
  3217  00027A  C003  F00A         	movff	?___lwdiv,___lwmod@dividend
  3218  00027E  C004  F00B         	movff	?___lwdiv+1,___lwmod@dividend+1
  3219  000282  0E00               	movlw	0
  3220  000284  6E0D               	movwf	(___lwmod@divisor+1)^0,c
  3221  000286  0E0A               	movlw	10
  3222  000288  6E0C               	movwf	___lwmod@divisor^0,c
  3223  00028A  EC5B  F009         	call	___lwmod	;wreg free
  3224  00028E  500A               	movf	?___lwmod^0,w,c
  3225  000290  0F30               	addlw	48
  3226  000292  6E21               	movwf	sprintf@c^0,c
  3227  000294                     
  3228                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3229  000294  C00F  FFD9         	movff	sprintf@sp,fsr2l
  3230  000298  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  3231  00029C  C021  FFDF         	movff	sprintf@c,indf2
  3232  0002A0  4A0F               	infsnz	sprintf@sp^0,f,c
  3233  0002A2  2A10               	incf	(sprintf@sp+1)^0,f,c
  3234  0002A4                     l2689:
  3235  0002A4  061B               	decf	sprintf@prec^0,f,c
  3236  0002A6  281B               	incf	sprintf@prec^0,w,c
  3237  0002A8  A4D8               	btfss	status,2,c
  3238  0002AA  EF59  F001         	goto	u1721
  3239  0002AE  EF5B  F001         	goto	u1720
  3240  0002B2                     u1721:
  3241  0002B2  EF29  F001         	goto	l2683
  3242  0002B6                     u1720:
  3243  0002B6                     l2691:
  3244  0002B6  C011  FFF6         	movff	sprintf@f,tblptrl
  3245  0002BA  C012  FFF7         	movff	sprintf@f+1,tblptrh
  3246  0002BE  4A11               	infsnz	sprintf@f^0,f,c
  3247  0002C0  2A12               	incf	(sprintf@f+1)^0,f,c
  3248  0002C2                     	if	0	;tblptru may be non-zero
  3249  0002C2                     	endif
  3250  0002C2                     	if	0	;tblptru may be non-zero
  3251  0002C2                     	endif
  3252  0002C2  0008               	tblrd		*
  3253  0002C4  CFF5 F021          	movff	tablat,sprintf@c
  3254  0002C8  5021               	movf	sprintf@c^0,w,c
  3255  0002CA  A4D8               	btfss	status,2,c
  3256  0002CC  EF6A  F001         	goto	u1731
  3257  0002D0  EF6C  F001         	goto	u1730
  3258  0002D4                     u1731:
  3259  0002D4  EF0F  F000         	goto	l2607
  3260  0002D8                     u1730:
  3261  0002D8                     l2693:
  3262                           
  3263                           ;doprnt.c: 1564: *sp = 0;
  3264  0002D8  C00F  FFD9         	movff	sprintf@sp,fsr2l
  3265  0002DC  C010  FFDA         	movff	sprintf@sp+1,fsr2h
  3266  0002E0  0E00               	movlw	0
  3267  0002E2  6EDF               	movwf	indf2,c
  3268  0002E4  0012               	return		;funcret
  3269  0002E6                     __end_of_sprintf:
  3270                           	opt callstack 0
  3271                           
  3272 ;; *************** function _isdigit *****************
  3273 ;; Defined at:
  3274 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  c               1    wreg     unsigned char 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  c               1    4[COMRAM] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0
  3289 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3290 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3291 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3292 ;;Total ram usage:        3 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    2
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_sprintf
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text6
  3303  0015B8                     __ptext6:
  3304                           	opt callstack 0
  3305  0015B8                     _isdigit:
  3306                           	opt callstack 24
  3307                           
  3308                           ;incstack = 0
  3309                           ;isdigit@c stored from wreg
  3310  0015B8  6E05               	movwf	isdigit@c^0,c
  3311  0015BA  0E00               	movlw	0
  3312  0015BC  6E04               	movwf	_isdigit$1638^0,c
  3313  0015BE  0E3A               	movlw	58
  3314  0015C0  6005               	cpfslt	isdigit@c^0,c
  3315  0015C2  EFE5  F00A         	goto	u1401
  3316  0015C6  EFE7  F00A         	goto	u1400
  3317  0015CA                     u1401:
  3318  0015CA  EFF1  F00A         	goto	l2459
  3319  0015CE                     u1400:
  3320  0015CE  0E2F               	movlw	47
  3321  0015D0  6405               	cpfsgt	isdigit@c^0,c
  3322  0015D2  EFED  F00A         	goto	u1411
  3323  0015D6  EFEF  F00A         	goto	u1410
  3324  0015DA                     u1411:
  3325  0015DA  EFF1  F00A         	goto	l2459
  3326  0015DE                     u1410:
  3327  0015DE  0E01               	movlw	1
  3328  0015E0  6E04               	movwf	_isdigit$1638^0,c
  3329  0015E2                     l2459:
  3330  0015E2  C004  F003         	movff	_isdigit$1638,??_isdigit
  3331  0015E6  3003               	rrcf	??_isdigit^0,w,c
  3332  0015E8  0012               	return		;funcret
  3333  0015EA                     __end_of_isdigit:
  3334                           	opt callstack 0
  3335                           
  3336 ;; *************** function ___lwmod *****************
  3337 ;; Defined at:
  3338 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/lwmod.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  dividend        2    9[COMRAM] unsigned int 
  3341 ;;  divisor         2   11[COMRAM] unsigned int 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  counter         1   13[COMRAM] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  2    9[COMRAM] unsigned int 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3353 ;;      Params:         4       0       0       0       0       0       0       0       0
  3354 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3356 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3357 ;;Total ram usage:        5 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    2
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_sprintf
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text7
  3368  0012B6                     __ptext7:
  3369                           	opt callstack 0
  3370  0012B6                     ___lwmod:
  3371                           	opt callstack 24
  3372  0012B6  500C               	movf	___lwmod@divisor^0,w,c
  3373  0012B8  100D               	iorwf	(___lwmod@divisor+1)^0,w,c
  3374  0012BA  B4D8               	btfsc	status,2,c
  3375  0012BC  EF62  F009         	goto	u1451
  3376  0012C0  EF64  F009         	goto	u1450
  3377  0012C4                     u1451:
  3378  0012C4  EF88  F009         	goto	l962
  3379  0012C8                     u1450:
  3380  0012C8  0E01               	movlw	1
  3381  0012CA  6E0E               	movwf	___lwmod@counter^0,c
  3382  0012CC  EF6C  F009         	goto	l2491
  3383  0012D0                     l2489:
  3384  0012D0  90D8               	bcf	status,0,c
  3385  0012D2  360C               	rlcf	___lwmod@divisor^0,f,c
  3386  0012D4  360D               	rlcf	(___lwmod@divisor+1)^0,f,c
  3387  0012D6  2A0E               	incf	___lwmod@counter^0,f,c
  3388  0012D8                     l2491:
  3389  0012D8  AE0D               	btfss	(___lwmod@divisor+1)^0,7,c
  3390  0012DA  EF71  F009         	goto	u1461
  3391  0012DE  EF73  F009         	goto	u1460
  3392  0012E2                     u1461:
  3393  0012E2  EF68  F009         	goto	l2489
  3394  0012E6                     u1460:
  3395  0012E6                     l2493:
  3396  0012E6  500C               	movf	___lwmod@divisor^0,w,c
  3397  0012E8  5C0A               	subwf	___lwmod@dividend^0,w,c
  3398  0012EA  500D               	movf	(___lwmod@divisor+1)^0,w,c
  3399  0012EC  580B               	subwfb	(___lwmod@dividend+1)^0,w,c
  3400  0012EE  A0D8               	btfss	status,0,c
  3401  0012F0  EF7C  F009         	goto	u1471
  3402  0012F4  EF7E  F009         	goto	u1470
  3403  0012F8                     u1471:
  3404  0012F8  EF82  F009         	goto	l2497
  3405  0012FC                     u1470:
  3406  0012FC  500C               	movf	___lwmod@divisor^0,w,c
  3407  0012FE  5E0A               	subwf	___lwmod@dividend^0,f,c
  3408  001300  500D               	movf	(___lwmod@divisor+1)^0,w,c
  3409  001302  5A0B               	subwfb	(___lwmod@dividend+1)^0,f,c
  3410  001304                     l2497:
  3411  001304  90D8               	bcf	status,0,c
  3412  001306  320D               	rrcf	(___lwmod@divisor+1)^0,f,c
  3413  001308  320C               	rrcf	___lwmod@divisor^0,f,c
  3414  00130A  2E0E               	decfsz	___lwmod@counter^0,f,c
  3415  00130C  EF73  F009         	goto	l2493
  3416  001310                     l962:
  3417  001310  C00A  F00A         	movff	___lwmod@dividend,?___lwmod
  3418  001314  C00B  F00B         	movff	___lwmod@dividend+1,?___lwmod+1
  3419  001318  0012               	return		;funcret
  3420  00131A                     __end_of___lwmod:
  3421                           	opt callstack 0
  3422                           
  3423 ;; *************** function ___lldiv *****************
  3424 ;; Defined at:
  3425 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  dividend        4    2[COMRAM] unsigned long 
  3428 ;;  divisor         4    6[COMRAM] unsigned long 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  quotient        4   10[COMRAM] unsigned long 
  3431 ;;  counter         1   14[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  4    2[COMRAM] unsigned long 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3441 ;;      Params:         8       0       0       0       0       0       0       0       0
  3442 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3444 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3445 ;;Total ram usage:       13 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    2
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_Ecg_ProcessHeartRate
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           	psect	text8
  3456  000E4E                     __ptext8:
  3457                           	opt callstack 0
  3458  000E4E                     ___lldiv:
  3459                           	opt callstack 25
  3460  000E4E  0E00               	movlw	0
  3461  000E50  6E0B               	movwf	___lldiv@quotient^0,c
  3462  000E52  0E00               	movlw	0
  3463  000E54  6E0C               	movwf	(___lldiv@quotient+1)^0,c
  3464  000E56  0E00               	movlw	0
  3465  000E58  6E0D               	movwf	(___lldiv@quotient+2)^0,c
  3466  000E5A  0E00               	movlw	0
  3467  000E5C  6E0E               	movwf	(___lldiv@quotient+3)^0,c
  3468  000E5E  5007               	movf	___lldiv@divisor^0,w,c
  3469  000E60  1008               	iorwf	(___lldiv@divisor+1)^0,w,c
  3470  000E62  1009               	iorwf	(___lldiv@divisor+2)^0,w,c
  3471  000E64  100A               	iorwf	(___lldiv@divisor+3)^0,w,c
  3472  000E66  B4D8               	btfsc	status,2,c
  3473  000E68  EF38  F007         	goto	u1741
  3474  000E6C  EF3A  F007         	goto	u1740
  3475  000E70                     u1741:
  3476  000E70  EF70  F007         	goto	l500
  3477  000E74                     u1740:
  3478  000E74  0E01               	movlw	1
  3479  000E76  6E0F               	movwf	___lldiv@counter^0,c
  3480  000E78  EF44  F007         	goto	l2705
  3481  000E7C                     l2703:
  3482  000E7C  90D8               	bcf	status,0,c
  3483  000E7E  3607               	rlcf	___lldiv@divisor^0,f,c
  3484  000E80  3608               	rlcf	(___lldiv@divisor+1)^0,f,c
  3485  000E82  3609               	rlcf	(___lldiv@divisor+2)^0,f,c
  3486  000E84  360A               	rlcf	(___lldiv@divisor+3)^0,f,c
  3487  000E86  2A0F               	incf	___lldiv@counter^0,f,c
  3488  000E88                     l2705:
  3489  000E88  AE0A               	btfss	(___lldiv@divisor+3)^0,7,c
  3490  000E8A  EF49  F007         	goto	u1751
  3491  000E8E  EF4B  F007         	goto	u1750
  3492  000E92                     u1751:
  3493  000E92  EF3E  F007         	goto	l2703
  3494  000E96                     u1750:
  3495  000E96                     l2707:
  3496  000E96  90D8               	bcf	status,0,c
  3497  000E98  360B               	rlcf	___lldiv@quotient^0,f,c
  3498  000E9A  360C               	rlcf	(___lldiv@quotient+1)^0,f,c
  3499  000E9C  360D               	rlcf	(___lldiv@quotient+2)^0,f,c
  3500  000E9E  360E               	rlcf	(___lldiv@quotient+3)^0,f,c
  3501  000EA0  5007               	movf	___lldiv@divisor^0,w,c
  3502  000EA2  5C03               	subwf	___lldiv@dividend^0,w,c
  3503  000EA4  5008               	movf	(___lldiv@divisor+1)^0,w,c
  3504  000EA6  5804               	subwfb	(___lldiv@dividend+1)^0,w,c
  3505  000EA8  5009               	movf	(___lldiv@divisor+2)^0,w,c
  3506  000EAA  5805               	subwfb	(___lldiv@dividend+2)^0,w,c
  3507  000EAC  500A               	movf	(___lldiv@divisor+3)^0,w,c
  3508  000EAE  5806               	subwfb	(___lldiv@dividend+3)^0,w,c
  3509  000EB0  A0D8               	btfss	status,0,c
  3510  000EB2  EF5D  F007         	goto	u1761
  3511  000EB6  EF5F  F007         	goto	u1760
  3512  000EBA                     u1761:
  3513  000EBA  EF68  F007         	goto	l2715
  3514  000EBE                     u1760:
  3515  000EBE  5007               	movf	___lldiv@divisor^0,w,c
  3516  000EC0  5E03               	subwf	___lldiv@dividend^0,f,c
  3517  000EC2  5008               	movf	(___lldiv@divisor+1)^0,w,c
  3518  000EC4  5A04               	subwfb	(___lldiv@dividend+1)^0,f,c
  3519  000EC6  5009               	movf	(___lldiv@divisor+2)^0,w,c
  3520  000EC8  5A05               	subwfb	(___lldiv@dividend+2)^0,f,c
  3521  000ECA  500A               	movf	(___lldiv@divisor+3)^0,w,c
  3522  000ECC  5A06               	subwfb	(___lldiv@dividend+3)^0,f,c
  3523  000ECE  800B               	bsf	___lldiv@quotient^0,0,c
  3524  000ED0                     l2715:
  3525  000ED0  90D8               	bcf	status,0,c
  3526  000ED2  320A               	rrcf	(___lldiv@divisor+3)^0,f,c
  3527  000ED4  3209               	rrcf	(___lldiv@divisor+2)^0,f,c
  3528  000ED6  3208               	rrcf	(___lldiv@divisor+1)^0,f,c
  3529  000ED8  3207               	rrcf	___lldiv@divisor^0,f,c
  3530  000EDA  2E0F               	decfsz	___lldiv@counter^0,f,c
  3531  000EDC  EF4B  F007         	goto	l2707
  3532  000EE0                     l500:
  3533  000EE0  C00B  F003         	movff	___lldiv@quotient,?___lldiv
  3534  000EE4  C00C  F004         	movff	___lldiv@quotient+1,?___lldiv+1
  3535  000EE8  C00D  F005         	movff	___lldiv@quotient+2,?___lldiv+2
  3536  000EEC  C00E  F006         	movff	___lldiv@quotient+3,?___lldiv+3
  3537  000EF0  0012               	return		;funcret
  3538  000EF2                     __end_of___lldiv:
  3539                           	opt callstack 0
  3540                           
  3541 ;; *************** function _Ecg_ProcessEcg *****************
  3542 ;; Defined at:
  3543 ;;		line 51 in file "ecg.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3560 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    9
  3564 ;; This function calls:
  3565 ;;		_Ecg_Background_Leads_Failure
  3566 ;;		_Ecg_Background_Leads_Ok
  3567 ;;		_Ecg_CheckLeads
  3568 ;;		_Ecg_Draw
  3569 ;;		_Ecg_ProcessHeartbeat
  3570 ;; This function is called by:
  3571 ;;		_Ecg_Process
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text9
  3576  0013BE                     __ptext9:
  3577                           	opt callstack 0
  3578  0013BE                     _Ecg_ProcessEcg:
  3579                           	opt callstack 19
  3580  0013BE                     
  3581                           ;ecg.c: 52: Ecg_CheckLeads();
  3582  0013BE  ECB7  F009         	call	_Ecg_CheckLeads	;wreg free
  3583  0013C2                     
  3584                           ;ecg.c: 54: if(ECG_FLAGS.leadsOk) {
  3585  0013C2  0100               	movlb	0	; () banked
  3586  0013C4  A393               	btfss	_ECG_FLAGS& (0+255),1,b
  3587  0013C6  EFE7  F009         	goto	u1791
  3588  0013CA  EFE9  F009         	goto	u1790
  3589  0013CE                     u1791:
  3590  0013CE  EFFA  F009         	goto	l297
  3591  0013D2                     u1790:
  3592  0013D2                     
  3593                           ; BSR set to: 0
  3594                           ;ecg.c: 56: if(ECG_FLAGS.leadsOkFlag == 0) {
  3595  0013D2  B593               	btfsc	_ECG_FLAGS& (0+255),2,b
  3596  0013D4  EFEE  F009         	goto	u1801
  3597  0013D8  EFF0  F009         	goto	u1800
  3598  0013DC                     u1801:
  3599  0013DC  EFF4  F009         	goto	l2741
  3600  0013E0                     u1800:
  3601  0013E0                     
  3602                           ; BSR set to: 0
  3603                           ;ecg.c: 57: Ecg_Background_Leads_Ok();
  3604  0013E0  EC3A  F008         	call	_Ecg_Background_Leads_Ok	;wreg free
  3605  0013E4                     
  3606                           ;ecg.c: 58: ECG_FLAGS.leadsOkFlag = 1;
  3607  0013E4  0100               	movlb	0	; () banked
  3608  0013E6  8593               	bsf	_ECG_FLAGS& (0+255),2,b
  3609  0013E8                     l2741:
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;ecg.c: 59: };ecg.c: 62: Ecg_Draw();
  3613  0013E8  ECFD  F005         	call	_Ecg_Draw	;wreg free
  3614  0013EC                     
  3615                           ;ecg.c: 65: Ecg_ProcessHeartbeat();
  3616  0013EC  ECD8  F004         	call	_Ecg_ProcessHeartbeat	;wreg free
  3617                           
  3618                           ;ecg.c: 66: } else {
  3619  0013F0  EF05  F00A         	goto	l301
  3620  0013F4                     l297:
  3621                           
  3622                           ; BSR set to: 0
  3623                           ;ecg.c: 68: if(ECG_FLAGS.leadsOkFlag == 1) {
  3624  0013F4  A593               	btfss	_ECG_FLAGS& (0+255),2,b
  3625  0013F6  EFFF  F009         	goto	u1811
  3626  0013FA  EF01  F00A         	goto	u1810
  3627  0013FE                     u1811:
  3628  0013FE  EF05  F00A         	goto	l301
  3629  001402                     u1810:
  3630  001402                     
  3631                           ; BSR set to: 0
  3632                           ;ecg.c: 69: Ecg_Background_Leads_Failure();
  3633  001402  EC89  F00A         	call	_Ecg_Background_Leads_Failure	;wreg free
  3634  001406                     
  3635                           ;ecg.c: 70: ECG_FLAGS.leadsOkFlag = 0;
  3636  001406  0100               	movlb	0	; () banked
  3637  001408  9593               	bcf	_ECG_FLAGS& (0+255),2,b
  3638  00140A                     l301:
  3639  00140A  0012               	return		;funcret
  3640  00140C                     __end_of_Ecg_ProcessEcg:
  3641                           	opt callstack 0
  3642                           
  3643 ;; *************** function _Ecg_ProcessHeartbeat *****************
  3644 ;; Defined at:
  3645 ;;		line 91 in file "ecg.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  delta           2   47[COMRAM] int 
  3650 ;;  i               1   49[COMRAM] unsigned char 
  3651 ;;  ecgDeltaDiff    2   45[COMRAM] int 
  3652 ;;  ecgDeltaAbsS    2   43[COMRAM] int 
  3653 ;;  ecgDeltaSum     2   41[COMRAM] int 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3663 ;;      Params:         0       0       0       0       0       0       0       0       0
  3664 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3665 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3666 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3667 ;;Total ram usage:       11 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    6
  3670 ;; This function calls:
  3671 ;;		_TFT_DrawBitmap
  3672 ;;		_TFT_DrawFillRect
  3673 ;;		_abs
  3674 ;; This function is called by:
  3675 ;;		_Ecg_ProcessEcg
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text10
  3680  0009B0                     __ptext10:
  3681                           	opt callstack 0
  3682  0009B0                     _Ecg_ProcessHeartbeat:
  3683                           	opt callstack 21
  3684  0009B0                     
  3685                           ;ecg.c: 92: if(ECG_HEARTRATE.processHeartbeat == 1) {
  3686  0009B0  AC4E               	btfss	_ECG_HEARTRATE^0,6,c
  3687  0009B2  EFDD  F004         	goto	u1531
  3688  0009B6  EFDF  F004         	goto	u1530
  3689  0009BA                     u1531:
  3690  0009BA  EF5C  F005         	goto	l317
  3691  0009BE                     u1530:
  3692  0009BE                     
  3693                           ;ecg.c: 94: int16_t ecgDeltaSum=0, ecgDeltaAbsSum=0, ecgDeltaDiff=0;
  3694  0009BE  0E00               	movlw	0
  3695  0009C0  6E2B               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,c
  3696  0009C2  0E00               	movlw	0
  3697  0009C4  6E2A               	movwf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,c
  3698  0009C6  0E00               	movlw	0
  3699  0009C8  6E2D               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,c
  3700  0009CA  0E00               	movlw	0
  3701  0009CC  6E2C               	movwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,c
  3702                           
  3703                           ;ecg.c: 95: for(uint8_t i=1; i<4; i++) {
  3704  0009CE  0E01               	movlw	1
  3705  0009D0  6E32               	movwf	Ecg_ProcessHeartbeat@i^0,c
  3706  0009D2                     l2561:
  3707                           
  3708                           ;ecg.c: 96: int16_t delta = ECG_BUFFER.data[i] - ECG_BUFFER.data[i - 1];
  3709  0009D2  0E8A               	movlw	low _ECG_BUFFER
  3710  0009D4  2432               	addwf	Ecg_ProcessHeartbeat@i^0,w,c
  3711  0009D6  6ED9               	movwf	fsr2l,c
  3712  0009D8  6ADA               	clrf	fsr2h,c
  3713  0009DA  0E00               	movlw	high _ECG_BUFFER
  3714  0009DC  22DA               	addwfc	fsr2h,f,c
  3715  0009DE  50DF               	movf	indf2,w,c
  3716  0009E0  6E28               	movwf	??_Ecg_ProcessHeartbeat^0,c
  3717  0009E2  0E89               	movlw	low (_ECG_BUFFER+65535)
  3718  0009E4  2432               	addwf	Ecg_ProcessHeartbeat@i^0,w,c
  3719  0009E6  6ED9               	movwf	fsr2l,c
  3720  0009E8  6ADA               	clrf	fsr2h,c
  3721  0009EA  0E00               	movlw	high (_ECG_BUFFER+65535)
  3722  0009EC  22DA               	addwfc	fsr2h,f,c
  3723  0009EE  50DF               	movf	indf2,w,c
  3724  0009F0  6E29               	movwf	(??_Ecg_ProcessHeartbeat+1)^0,c
  3725  0009F2  5029               	movf	(??_Ecg_ProcessHeartbeat+1)^0,w,c
  3726  0009F4  5C28               	subwf	??_Ecg_ProcessHeartbeat^0,w,c
  3727  0009F6  6E30               	movwf	Ecg_ProcessHeartbeat@delta^0,c
  3728  0009F8  6A31               	clrf	(Ecg_ProcessHeartbeat@delta+1)^0,c
  3729  0009FA  A0D8               	btfss	status,0,c
  3730  0009FC  0631               	decf	(Ecg_ProcessHeartbeat@delta+1)^0,f,c
  3731  0009FE                     
  3732                           ;ecg.c: 97: ecgDeltaSum += delta;
  3733  0009FE  5030               	movf	Ecg_ProcessHeartbeat@delta^0,w,c
  3734  000A00  262A               	addwf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,f,c
  3735  000A02  5031               	movf	(Ecg_ProcessHeartbeat@delta+1)^0,w,c
  3736  000A04  222B               	addwfc	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,f,c
  3737  000A06                     
  3738                           ;ecg.c: 98: ecgDeltaAbsSum += abs(delta);
  3739  000A06  C030  F003         	movff	Ecg_ProcessHeartbeat@delta,abs@a
  3740  000A0A  C031  F004         	movff	Ecg_ProcessHeartbeat@delta+1,abs@a+1
  3741  000A0E  ECC2  F00A         	call	_abs	;wreg free
  3742  000A12  5003               	movf	?_abs^0,w,c
  3743  000A14  262C               	addwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,f,c
  3744  000A16  5004               	movf	(?_abs+1)^0,w,c
  3745  000A18  222D               	addwfc	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,f,c
  3746  000A1A  2A32               	incf	Ecg_ProcessHeartbeat@i^0,f,c
  3747  000A1C  0E03               	movlw	3
  3748  000A1E  6432               	cpfsgt	Ecg_ProcessHeartbeat@i^0,c
  3749  000A20  EF14  F005         	goto	u1541
  3750  000A24  EF16  F005         	goto	u1540
  3751  000A28                     u1541:
  3752  000A28  EFE9  F004         	goto	l2561
  3753  000A2C                     u1540:
  3754  000A2C                     
  3755                           ;ecg.c: 99: };ecg.c: 100: ecgDeltaDiff = ecgDeltaAbsSum - ecgDeltaSum;
  3756  000A2C  502A               	movf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,w,c
  3757  000A2E  5C2C               	subwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,w,c
  3758  000A30  6E2E               	movwf	Ecg_ProcessHeartbeat@ecgDeltaDiff^0,c
  3759  000A32  502B               	movf	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,w,c
  3760  000A34  582D               	subwfb	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,w,c
  3761  000A36  6E2F               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,c
  3762                           
  3763                           ;ecg.c: 103: if(ecgDeltaDiff > 60) {
  3764  000A38  BE2F               	btfsc	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,7,c
  3765  000A3A  EF28  F005         	goto	u1551
  3766  000A3E  502F               	movf	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,w,c
  3767  000A40  E109               	bnz	u1550
  3768  000A42  0E3D               	movlw	61
  3769  000A44  5C2E               	subwf	Ecg_ProcessHeartbeat@ecgDeltaDiff^0,w,c
  3770  000A46  A0D8               	btfss	status,0,c
  3771  000A48  EF28  F005         	goto	u1551
  3772  000A4C  EF2A  F005         	goto	u1550
  3773  000A50                     u1551:
  3774  000A50  EF8D  F005         	goto	l326
  3775  000A54                     u1550:
  3776  000A54                     
  3777                           ;ecg.c: 105: ECG_HEARTBEAT.data[ECG_HEARTBEAT.i++] = MILLISECONDS;
  3778  000A54  0100               	movlb	0	; () banked
  3779  000A56  5189               	movf	(_ECG_HEARTBEAT+12)& (0+255),w,b
  3780  000A58  0D04               	mullw	4
  3781  000A5A  0E7D               	movlw	low _ECG_HEARTBEAT
  3782  000A5C  24F3               	addwf	243,w,c
  3783  000A5E  6ED9               	movwf	fsr2l,c
  3784  000A60  0E00               	movlw	high _ECG_HEARTBEAT
  3785  000A62  20F4               	addwfc	prodh,w,c
  3786  000A64  6EDA               	movwf	fsr2h,c
  3787  000A66  C08F  FFDE         	movff	_MILLISECONDS,postinc2
  3788  000A6A  C090  FFDE         	movff	_MILLISECONDS+1,postinc2
  3789  000A6E  C091  FFDE         	movff	_MILLISECONDS+2,postinc2
  3790  000A72  C092  FFDE         	movff	_MILLISECONDS+3,postinc2
  3791  000A76                     
  3792                           ; BSR set to: 0
  3793  000A76  2B89               	incf	(_ECG_HEARTBEAT+12)& (0+255),f,b
  3794  000A78                     
  3795                           ; BSR set to: 0
  3796                           ;ecg.c: 106: if(ECG_HEARTBEAT.i == 3) ECG_HEARTBEAT.i = 0;
  3797  000A78  0E03               	movlw	3
  3798  000A7A  1989               	xorwf	(_ECG_HEARTBEAT+12)& (0+255),w,b
  3799  000A7C  A4D8               	btfss	status,2,c
  3800  000A7E  EF43  F005         	goto	u1561
  3801  000A82  EF45  F005         	goto	u1560
  3802  000A86                     u1561:
  3803  000A86  EF47  F005         	goto	l2581
  3804  000A8A                     u1560:
  3805  000A8A                     
  3806                           ; BSR set to: 0
  3807  000A8A  0E00               	movlw	0
  3808  000A8C  6F89               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  3809  000A8E                     l2581:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;ecg.c: 109: TFT_DrawBitmap(5, 25, ECG_ICON_HEART, 0xF800);
  3813  000A8E  0E19               	movlw	25
  3814  000A90  6E11               	movwf	TFT_DrawBitmap@y^0,c
  3815  000A92  0E95               	movlw	low _ECG_ICON_HEART
  3816  000A94  6E12               	movwf	TFT_DrawBitmap@bitmap^0,c
  3817  000A96  0E5F               	movlw	high _ECG_ICON_HEART
  3818  000A98  6E13               	movwf	(TFT_DrawBitmap@bitmap+1)^0,c
  3819  000A9A  0EF8               	movlw	248
  3820  000A9C  6E15               	movwf	(TFT_DrawBitmap@color+1)^0,c
  3821  000A9E  0E00               	movlw	0
  3822  000AA0  6E14               	movwf	TFT_DrawBitmap@color^0,c
  3823  000AA2  0E05               	movlw	5
  3824  000AA4  ECC6  F006         	call	_TFT_DrawBitmap
  3825  000AA8                     
  3826                           ;ecg.c: 110: ECG_HEARTRATE.heartIconMsecDelay = 100 / 5;
  3827  000AA8  0E14               	movlw	20
  3828  000AAA  6E4F               	movwf	(_ECG_HEARTRATE+1)^0,c
  3829  000AAC                     
  3830                           ;ecg.c: 111: ECG_HEARTRATE.heartIconShown = 1;
  3831  000AAC  8E4E               	bsf	_ECG_HEARTRATE^0,7,c
  3832  000AAE                     
  3833                           ;ecg.c: 114: ECG_HEARTRATE.heartbeatMsecDelay = 250 / 5;
  3834  000AAE  0E32               	movlw	50
  3835  000AB0  6E50               	movwf	(_ECG_HEARTRATE+2)^0,c
  3836  000AB2                     
  3837                           ;ecg.c: 115: ECG_HEARTRATE.processHeartbeat = 0;
  3838  000AB2  9C4E               	bcf	_ECG_HEARTRATE^0,6,c
  3839  000AB4  EF8D  F005         	goto	l326
  3840  000AB8                     l317:
  3841                           
  3842                           ;ecg.c: 119: if(ECG_HEARTRATE.heartIconShown == 1) {
  3843  000AB8  AE4E               	btfss	_ECG_HEARTRATE^0,7,c
  3844  000ABA  EF61  F005         	goto	u1571
  3845  000ABE  EF63  F005         	goto	u1570
  3846  000AC2                     u1571:
  3847  000AC2  EF83  F005         	goto	l2599
  3848  000AC6                     u1570:
  3849  000AC6                     
  3850                           ;ecg.c: 120: ECG_HEARTRATE.heartIconMsecDelay--;
  3851  000AC6  064F               	decf	(_ECG_HEARTRATE+1)^0,f,c
  3852  000AC8                     
  3853                           ;ecg.c: 121: if(ECG_HEARTRATE.heartIconMsecDelay == 0) {
  3854  000AC8  504F               	movf	(_ECG_HEARTRATE+1)^0,w,c
  3855  000ACA  A4D8               	btfss	status,2,c
  3856  000ACC  EF6A  F005         	goto	u1581
  3857  000AD0  EF6C  F005         	goto	u1580
  3858  000AD4                     u1581:
  3859  000AD4  EF83  F005         	goto	l2599
  3860  000AD8                     u1580:
  3861  000AD8                     
  3862                           ;ecg.c: 122: TFT_DrawFillRect(5, 5, 20, 20, 0x0000);
  3863  000AD8  0E00               	movlw	0
  3864  000ADA  6E1B               	movwf	(TFT_DrawFillRect@x+1)^0,c
  3865  000ADC  0E05               	movlw	5
  3866  000ADE  6E1A               	movwf	TFT_DrawFillRect@x^0,c
  3867  000AE0  0E00               	movlw	0
  3868  000AE2  6E1D               	movwf	(TFT_DrawFillRect@y+1)^0,c
  3869  000AE4  0E05               	movlw	5
  3870  000AE6  6E1C               	movwf	TFT_DrawFillRect@y^0,c
  3871  000AE8  0E00               	movlw	0
  3872  000AEA  6E1F               	movwf	(TFT_DrawFillRect@w+1)^0,c
  3873  000AEC  0E14               	movlw	20
  3874  000AEE  6E1E               	movwf	TFT_DrawFillRect@w^0,c
  3875  000AF0  0E00               	movlw	0
  3876  000AF2  6E21               	movwf	(TFT_DrawFillRect@h+1)^0,c
  3877  000AF4  0E14               	movlw	20
  3878  000AF6  6E20               	movwf	TFT_DrawFillRect@h^0,c
  3879  000AF8  0E00               	movlw	0
  3880  000AFA  6E23               	movwf	(TFT_DrawFillRect@color+1)^0,c
  3881  000AFC  0E00               	movlw	0
  3882  000AFE  6E22               	movwf	TFT_DrawFillRect@color^0,c
  3883  000B00  EC76  F008         	call	_TFT_DrawFillRect	;wreg free
  3884  000B04                     
  3885                           ;ecg.c: 123: ECG_HEARTRATE.heartIconShown = 0;
  3886  000B04  9E4E               	bcf	_ECG_HEARTRATE^0,7,c
  3887  000B06                     l2599:
  3888                           
  3889                           ;ecg.c: 124: };ecg.c: 125: };ecg.c: 128: ECG_HEARTRATE.heartbeatMsecDelay--;
  3890  000B06  0650               	decf	(_ECG_HEARTRATE+2)^0,f,c
  3891  000B08                     
  3892                           ;ecg.c: 129: if(ECG_HEARTRATE.heartbeatMsecDelay == 0) {
  3893  000B08  5050               	movf	(_ECG_HEARTRATE+2)^0,w,c
  3894  000B0A  A4D8               	btfss	status,2,c
  3895  000B0C  EF8A  F005         	goto	u1591
  3896  000B10  EF8C  F005         	goto	u1590
  3897  000B14                     u1591:
  3898  000B14  EF8D  F005         	goto	l326
  3899  000B18                     u1590:
  3900  000B18                     
  3901                           ;ecg.c: 130: ECG_HEARTRATE.processHeartbeat = 1;
  3902  000B18  8C4E               	bsf	_ECG_HEARTRATE^0,6,c
  3903  000B1A                     l326:
  3904  000B1A  0012               	return		;funcret
  3905  000B1C                     __end_of_Ecg_ProcessHeartbeat:
  3906                           	opt callstack 0
  3907                           
  3908 ;; *************** function _TFT_DrawBitmap *****************
  3909 ;; Defined at:
  3910 ;;		line 221 in file "TFT.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;  x               1    wreg     unsigned char 
  3913 ;;  y               1   16[COMRAM] unsigned char 
  3914 ;;  bitmap          2   17[COMRAM] PTR const unsigned char 
  3915 ;;		 -> ECG_ICON_HEART(62), 
  3916 ;;  color           2   19[COMRAM] unsigned int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  x               1   22[COMRAM] unsigned char 
  3919 ;;  i               1   27[COMRAM] unsigned char 
  3920 ;;  j               1   25[COMRAM] unsigned char 
  3921 ;;  byte            1   26[COMRAM] unsigned char 
  3922 ;;  h               1   24[COMRAM] unsigned char 
  3923 ;;  w               1   23[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3933 ;;      Params:         5       0       0       0       0       0       0       0       0
  3934 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3935 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3936 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3937 ;;Total ram usage:       12 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    4
  3940 ;; This function calls:
  3941 ;;		_TFT_DrawPixel
  3942 ;; This function is called by:
  3943 ;;		_Ecg_ProcessHeartbeat
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text11
  3948  000D8C                     __ptext11:
  3949                           	opt callstack 0
  3950  000D8C                     _TFT_DrawBitmap:
  3951                           	opt callstack 22
  3952                           
  3953                           ;incstack = 0
  3954                           ;TFT_DrawBitmap@x stored from wreg
  3955  000D8C  6E17               	movwf	TFT_DrawBitmap@x^0,c
  3956  000D8E                     
  3957                           ;TFT.c: 222: uint8_t w = *bitmap++;
  3958  000D8E  C012  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  3959  000D92  C013  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  3960  000D96                     	if	0	;tblptru may be non-zero
  3961  000D96                     	endif
  3962  000D96                     	if	0	;tblptru may be non-zero
  3963  000D96                     	endif
  3964  000D96  0008               	tblrd		*
  3965  000D98  CFF5 F018          	movff	tablat,TFT_DrawBitmap@w
  3966  000D9C  4A12               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  3967  000D9E  2A13               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  3968  000DA0                     
  3969                           ;TFT.c: 223: uint8_t h = *bitmap++;
  3970  000DA0  C012  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  3971  000DA4  C013  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  3972  000DA8                     	if	0	;tblptru may be non-zero
  3973  000DA8                     	endif
  3974  000DA8                     	if	0	;tblptru may be non-zero
  3975  000DA8                     	endif
  3976  000DA8  0008               	tblrd		*
  3977  000DAA  CFF5 F019          	movff	tablat,TFT_DrawBitmap@h
  3978  000DAE  4A12               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  3979  000DB0  2A13               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  3980  000DB2                     
  3981                           ;TFT.c: 224: uint8_t byte = 0;
  3982  000DB2  0E00               	movlw	0
  3983  000DB4  6E1B               	movwf	TFT_DrawBitmap@byte^0,c
  3984  000DB6                     
  3985                           ;TFT.c: 226: for(uint8_t j=0; j<w; j++, x++) {
  3986  000DB6  0E00               	movlw	0
  3987  000DB8  6E1A               	movwf	TFT_DrawBitmap@j^0,c
  3988  000DBA  EF1D  F007         	goto	l2423
  3989  000DBE                     l2403:
  3990                           
  3991                           ;TFT.c: 227: for(uint8_t i=0; i<h; i++) {
  3992  000DBE  0E00               	movlw	0
  3993  000DC0  6E1C               	movwf	TFT_DrawBitmap@i^0,c
  3994  000DC2  EF12  F007         	goto	l2419
  3995  000DC6                     l2405:
  3996                           
  3997                           ;TFT.c: 228: if(i & 7) {
  3998  000DC6  C01C  F016         	movff	TFT_DrawBitmap@i,??_TFT_DrawBitmap
  3999  000DCA  0E07               	movlw	7
  4000  000DCC  1616               	andwf	??_TFT_DrawBitmap^0,f,c
  4001  000DCE  B4D8               	btfsc	status,2,c
  4002  000DD0  EFEC  F006         	goto	u1341
  4003  000DD4  EFEE  F006         	goto	u1340
  4004  000DD8                     u1341:
  4005  000DD8  EFF2  F006         	goto	l2409
  4006  000DDC                     u1340:
  4007  000DDC                     
  4008                           ;TFT.c: 229: byte >>= 1;
  4009  000DDC  90D8               	bcf	status,0,c
  4010  000DDE  321B               	rrcf	TFT_DrawBitmap@byte^0,f,c
  4011                           
  4012                           ;TFT.c: 230: } else {
  4013  000DE0  EFFB  F006         	goto	l2413
  4014  000DE4                     l2409:
  4015                           
  4016                           ;TFT.c: 231: byte = *bitmap++;
  4017  000DE4  C012  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4018  000DE8  C013  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4019  000DEC                     	if	0	;tblptru may be non-zero
  4020  000DEC                     	endif
  4021  000DEC                     	if	0	;tblptru may be non-zero
  4022  000DEC                     	endif
  4023  000DEC  0008               	tblrd		*
  4024  000DEE  CFF5 F01B          	movff	tablat,TFT_DrawBitmap@byte
  4025  000DF2  4A12               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4026  000DF4  2A13               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4027  000DF6                     l2413:
  4028                           
  4029                           ;TFT.c: 232: };TFT.c: 233: if(byte & 0x01) TFT_DrawPixel(x, (y - i), color);
  4030  000DF6  A01B               	btfss	TFT_DrawBitmap@byte^0,0,c
  4031  000DF8  EF00  F007         	goto	u1351
  4032  000DFC  EF02  F007         	goto	u1350
  4033  000E00                     u1351:
  4034  000E00  EF11  F007         	goto	l2417
  4035  000E04                     u1350:
  4036  000E04  C017  F00B         	movff	TFT_DrawBitmap@x,TFT_DrawPixel@x
  4037  000E08  6A0C               	clrf	(TFT_DrawPixel@x+1)^0,c
  4038  000E0A  501C               	movf	TFT_DrawBitmap@i^0,w,c
  4039  000E0C  5C11               	subwf	TFT_DrawBitmap@y^0,w,c
  4040  000E0E  6E0D               	movwf	TFT_DrawPixel@y^0,c
  4041  000E10  6A0E               	clrf	(TFT_DrawPixel@y+1)^0,c
  4042  000E12  A0D8               	btfss	status,0,c
  4043  000E14  060E               	decf	(TFT_DrawPixel@y+1)^0,f,c
  4044  000E16  C014  F00F         	movff	TFT_DrawBitmap@color,TFT_DrawPixel@color
  4045  000E1A  C015  F010         	movff	TFT_DrawBitmap@color+1,TFT_DrawPixel@color+1
  4046  000E1E  EC4B  F00A         	call	_TFT_DrawPixel	;wreg free
  4047  000E22                     l2417:
  4048  000E22  2A1C               	incf	TFT_DrawBitmap@i^0,f,c
  4049  000E24                     l2419:
  4050  000E24  5019               	movf	TFT_DrawBitmap@h^0,w,c
  4051  000E26  5C1C               	subwf	TFT_DrawBitmap@i^0,w,c
  4052  000E28  A0D8               	btfss	status,0,c
  4053  000E2A  EF19  F007         	goto	u1361
  4054  000E2E  EF1B  F007         	goto	u1360
  4055  000E32                     u1361:
  4056  000E32  EFE3  F006         	goto	l2405
  4057  000E36                     u1360:
  4058  000E36  2A1A               	incf	TFT_DrawBitmap@j^0,f,c
  4059  000E38  2A17               	incf	TFT_DrawBitmap@x^0,f,c
  4060  000E3A                     l2423:
  4061  000E3A  5018               	movf	TFT_DrawBitmap@w^0,w,c
  4062  000E3C  5C1A               	subwf	TFT_DrawBitmap@j^0,w,c
  4063  000E3E  A0D8               	btfss	status,0,c
  4064  000E40  EF24  F007         	goto	u1371
  4065  000E44  EF26  F007         	goto	u1370
  4066  000E48                     u1371:
  4067  000E48  EFDF  F006         	goto	l2403
  4068  000E4C                     u1370:
  4069  000E4C  0012               	return		;funcret
  4070  000E4E                     __end_of_TFT_DrawBitmap:
  4071                           	opt callstack 0
  4072                           
  4073 ;; *************** function _Ecg_Draw *****************
  4074 ;; Defined at:
  4075 ;;		line 165 in file "ecg.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  ecg             2   47[COMRAM] unsigned int 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4089 ;;      Params:         0       0       0       0       0       0       0       0       0
  4090 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4092 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4093 ;;Total ram usage:        2 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:    6
  4096 ;; This function calls:
  4097 ;;		_Ecg_Read
  4098 ;;		_TFT_DrawFillRect
  4099 ;;		_TFT_DrawLine
  4100 ;;		___lwdiv
  4101 ;; This function is called by:
  4102 ;;		_Ecg_ProcessEcg
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           	psect	text12
  4107  000BFA                     __ptext12:
  4108                           	opt callstack 0
  4109  000BFA                     _Ecg_Draw:
  4110                           	opt callstack 21
  4111  000BFA                     
  4112                           ;ecg.c: 166: uint16_t ecg = Ecg_Read();
  4113  000BFA  ECFE  F007         	call	_Ecg_Read	;wreg free
  4114  000BFE  C003  F030         	movff	?_Ecg_Read,Ecg_Draw@ecg
  4115  000C02  C004  F031         	movff	?_Ecg_Read+1,Ecg_Draw@ecg+1
  4116  000C06                     
  4117                           ;ecg.c: 167: ecg /= 5;
  4118  000C06  C030  F003         	movff	Ecg_Draw@ecg,___lwdiv@dividend
  4119  000C0A  C031  F004         	movff	Ecg_Draw@ecg+1,___lwdiv@dividend+1
  4120  000C0E  0E00               	movlw	0
  4121  000C10  6E06               	movwf	(___lwdiv@divisor+1)^0,c
  4122  000C12  0E05               	movlw	5
  4123  000C14  6E05               	movwf	___lwdiv@divisor^0,c
  4124  000C16  ECB1  F008         	call	___lwdiv	;wreg free
  4125  000C1A  C003  F030         	movff	?___lwdiv,Ecg_Draw@ecg
  4126  000C1E  C004  F031         	movff	?___lwdiv+1,Ecg_Draw@ecg+1
  4127  000C22                     
  4128                           ;ecg.c: 168: Ecg_X = 240 - ecg - 1;
  4129  000C22  5030               	movf	Ecg_Draw@ecg^0,w,c
  4130  000C24  08EF               	sublw	239
  4131  000C26  6E4C               	movwf	_Ecg_X^0,c
  4132  000C28  5031               	movf	(Ecg_Draw@ecg+1)^0,w,c
  4133  000C2A  A0D8               	btfss	status,0,c
  4134  000C2C  2AE8               	incf	wreg,f,c
  4135  000C2E  0800               	sublw	0
  4136  000C30  6E4D               	movwf	(_Ecg_X+1)^0,c
  4137  000C32                     
  4138                           ;ecg.c: 169: TFT_DrawFillRect(33, (Ecg_Y - 20 + 1), (240 - 33), 20, 0x0000);
  4139  000C32  0E00               	movlw	0
  4140  000C34  6E1B               	movwf	(TFT_DrawFillRect@x+1)^0,c
  4141  000C36  0E21               	movlw	33
  4142  000C38  6E1A               	movwf	TFT_DrawFillRect@x^0,c
  4143  000C3A  0EED               	movlw	237
  4144  000C3C  2448               	addwf	_Ecg_Y^0,w,c
  4145  000C3E  6E1C               	movwf	TFT_DrawFillRect@y^0,c
  4146  000C40  0EFF               	movlw	255
  4147  000C42  2049               	addwfc	(_Ecg_Y+1)^0,w,c
  4148  000C44  6E1D               	movwf	(TFT_DrawFillRect@y+1)^0,c
  4149  000C46  0E00               	movlw	0
  4150  000C48  6E1F               	movwf	(TFT_DrawFillRect@w+1)^0,c
  4151  000C4A  0ECF               	movlw	207
  4152  000C4C  6E1E               	movwf	TFT_DrawFillRect@w^0,c
  4153  000C4E  0E00               	movlw	0
  4154  000C50  6E21               	movwf	(TFT_DrawFillRect@h+1)^0,c
  4155  000C52  0E14               	movlw	20
  4156  000C54  6E20               	movwf	TFT_DrawFillRect@h^0,c
  4157  000C56  0E00               	movlw	0
  4158  000C58  6E23               	movwf	(TFT_DrawFillRect@color+1)^0,c
  4159  000C5A  0E00               	movlw	0
  4160  000C5C  6E22               	movwf	TFT_DrawFillRect@color^0,c
  4161  000C5E  EC76  F008         	call	_TFT_DrawFillRect	;wreg free
  4162  000C62                     
  4163                           ;ecg.c: 170: TFT_DrawLine(Ecg_Xold, Ecg_Yold, Ecg_X, Ecg_Y, 0x07E0);
  4164  000C62  C04A  F011         	movff	_Ecg_Xold,TFT_DrawLine@x0
  4165  000C66  C04B  F012         	movff	_Ecg_Xold+1,TFT_DrawLine@x0+1
  4166  000C6A  C09B  F013         	movff	_Ecg_Yold,TFT_DrawLine@y0
  4167  000C6E  C09C  F014         	movff	_Ecg_Yold+1,TFT_DrawLine@y0+1
  4168  000C72  C04C  F015         	movff	_Ecg_X,TFT_DrawLine@x1
  4169  000C76  C04D  F016         	movff	_Ecg_X+1,TFT_DrawLine@x1+1
  4170  000C7A  C048  F017         	movff	_Ecg_Y,TFT_DrawLine@y1
  4171  000C7E  C049  F018         	movff	_Ecg_Y+1,TFT_DrawLine@y1+1
  4172  000C82  0E07               	movlw	7
  4173  000C84  6E1A               	movwf	(TFT_DrawLine@color+1)^0,c
  4174  000C86  0EE0               	movlw	224
  4175  000C88  6E19               	movwf	TFT_DrawLine@color^0,c
  4176  000C8A  EC6D  F002         	call	_TFT_DrawLine	;wreg free
  4177  000C8E                     
  4178                           ;ecg.c: 171: Ecg_Xold = Ecg_X;
  4179  000C8E  C04C  F04A         	movff	_Ecg_X,_Ecg_Xold
  4180  000C92  C04D  F04B         	movff	_Ecg_X+1,_Ecg_Xold+1
  4181  000C96                     
  4182                           ;ecg.c: 172: Ecg_Yold = Ecg_Y;
  4183  000C96  C048  F09B         	movff	_Ecg_Y,_Ecg_Yold
  4184  000C9A  C049  F09C         	movff	_Ecg_Y+1,_Ecg_Yold+1
  4185  000C9E                     
  4186                           ;ecg.c: 173: Ecg_Y--;
  4187  000C9E  0648               	decf	_Ecg_Y^0,f,c
  4188  000CA0  A0D8               	btfss	status,0,c
  4189  000CA2  0649               	decf	(_Ecg_Y+1)^0,f,c
  4190  000CA4                     
  4191                           ;ecg.c: 174: if(Ecg_Y == 0) {
  4192  000CA4  5048               	movf	_Ecg_Y^0,w,c
  4193  000CA6  1049               	iorwf	(_Ecg_Y+1)^0,w,c
  4194  000CA8  A4D8               	btfss	status,2,c
  4195  000CAA  EF59  F006         	goto	u1521
  4196  000CAE  EF5B  F006         	goto	u1520
  4197  000CB2                     u1521:
  4198  000CB2  EF63  F006         	goto	l345
  4199  000CB6                     u1520:
  4200  000CB6                     
  4201                           ;ecg.c: 175: Ecg_Y = 400 - 1;
  4202  000CB6  0E01               	movlw	1
  4203  000CB8  6E49               	movwf	(_Ecg_Y+1)^0,c
  4204  000CBA  0E8F               	movlw	143
  4205  000CBC  6E48               	movwf	_Ecg_Y^0,c
  4206  000CBE                     
  4207                           ;ecg.c: 176: Ecg_Yold = Ecg_Y;
  4208  000CBE  C048  F09B         	movff	_Ecg_Y,_Ecg_Yold
  4209  000CC2  C049  F09C         	movff	_Ecg_Y+1,_Ecg_Yold+1
  4210  000CC6                     l345:
  4211  000CC6  0012               	return		;funcret
  4212  000CC8                     __end_of_Ecg_Draw:
  4213                           	opt callstack 0
  4214                           
  4215 ;; *************** function ___lwdiv *****************
  4216 ;; Defined at:
  4217 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/lwdiv.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  dividend        2    2[COMRAM] unsigned int 
  4220 ;;  divisor         2    4[COMRAM] unsigned int 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  quotient        2    6[COMRAM] unsigned int 
  4223 ;;  counter         1    8[COMRAM] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  2    2[COMRAM] unsigned int 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4233 ;;      Params:         4       0       0       0       0       0       0       0       0
  4234 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4236 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        7 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    2
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_Ecg_Draw
  4244 ;;		_sprintf
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text13
  4249  001162                     __ptext13:
  4250                           	opt callstack 0
  4251  001162                     ___lwdiv:
  4252                           	opt callstack 24
  4253  001162  0E00               	movlw	0
  4254  001164  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  4255  001166  0E00               	movlw	0
  4256  001168  6E07               	movwf	___lwdiv@quotient^0,c
  4257  00116A  5005               	movf	___lwdiv@divisor^0,w,c
  4258  00116C  1006               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4259  00116E  B4D8               	btfsc	status,2,c
  4260  001170  EFBC  F008         	goto	u1421
  4261  001174  EFBE  F008         	goto	u1420
  4262  001178                     u1421:
  4263  001178  EFE6  F008         	goto	l952
  4264  00117C                     u1420:
  4265  00117C  0E01               	movlw	1
  4266  00117E  6E09               	movwf	___lwdiv@counter^0,c
  4267  001180  EFC6  F008         	goto	l2471
  4268  001184                     l2469:
  4269  001184  90D8               	bcf	status,0,c
  4270  001186  3605               	rlcf	___lwdiv@divisor^0,f,c
  4271  001188  3606               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4272  00118A  2A09               	incf	___lwdiv@counter^0,f,c
  4273  00118C                     l2471:
  4274  00118C  AE06               	btfss	(___lwdiv@divisor+1)^0,7,c
  4275  00118E  EFCB  F008         	goto	u1431
  4276  001192  EFCD  F008         	goto	u1430
  4277  001196                     u1431:
  4278  001196  EFC2  F008         	goto	l2469
  4279  00119A                     u1430:
  4280  00119A                     l2473:
  4281  00119A  90D8               	bcf	status,0,c
  4282  00119C  3607               	rlcf	___lwdiv@quotient^0,f,c
  4283  00119E  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4284  0011A0  5005               	movf	___lwdiv@divisor^0,w,c
  4285  0011A2  5C03               	subwf	___lwdiv@dividend^0,w,c
  4286  0011A4  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  4287  0011A6  5804               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4288  0011A8  A0D8               	btfss	status,0,c
  4289  0011AA  EFD9  F008         	goto	u1441
  4290  0011AE  EFDB  F008         	goto	u1440
  4291  0011B2                     u1441:
  4292  0011B2  EFE0  F008         	goto	l2481
  4293  0011B6                     u1440:
  4294  0011B6  5005               	movf	___lwdiv@divisor^0,w,c
  4295  0011B8  5E03               	subwf	___lwdiv@dividend^0,f,c
  4296  0011BA  5006               	movf	(___lwdiv@divisor+1)^0,w,c
  4297  0011BC  5A04               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4298  0011BE  8007               	bsf	___lwdiv@quotient^0,0,c
  4299  0011C0                     l2481:
  4300  0011C0  90D8               	bcf	status,0,c
  4301  0011C2  3206               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4302  0011C4  3205               	rrcf	___lwdiv@divisor^0,f,c
  4303  0011C6  2E09               	decfsz	___lwdiv@counter^0,f,c
  4304  0011C8  EFCD  F008         	goto	l2473
  4305  0011CC                     l952:
  4306  0011CC  C007  F003         	movff	___lwdiv@quotient,?___lwdiv
  4307  0011D0  C008  F004         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4308  0011D4  0012               	return		;funcret
  4309  0011D6                     __end_of___lwdiv:
  4310                           	opt callstack 0
  4311                           
  4312 ;; *************** function _Ecg_Read *****************
  4313 ;; Defined at:
  4314 ;;		line 149 in file "ecg.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  ecg             2    6[COMRAM] unsigned int 
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  2    2[COMRAM] unsigned int 
  4321 ;; Registers used:
  4322 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4328 ;;      Params:         2       0       0       0       0       0       0       0       0
  4329 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4330 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4331 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4332 ;;Total ram usage:        6 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; Hardware stack levels required when called:    2
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_Ecg_Draw
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text14
  4343  000FFC                     __ptext14:
  4344                           	opt callstack 0
  4345  000FFC                     _Ecg_Read:
  4346                           	opt callstack 24
  4347  000FFC                     
  4348                           ;ecg.c: 150: uint16_t ecg;;ecg.c: 151: ADCON0bits.CHS = 0b0000;
  4349  000FFC  0EC3               	movlw	-61
  4350  000FFE  16C2               	andwf	194,f,c	;volatile
  4351  001000                     
  4352                           ;ecg.c: 152: ADCON0bits.ADON = 1;
  4353  001000  80C2               	bsf	194,0,c	;volatile
  4354  001002                     
  4355                           ;ecg.c: 153: GO_nDONE = 1;
  4356  001002  82C2               	bsf	4034,1,c	;volatile
  4357  001004                     l337:
  4358  001004  B2C2               	btfsc	4034,1,c	;volatile
  4359  001006  EF07  F008         	goto	u1381
  4360  00100A  EF09  F008         	goto	u1380
  4361  00100E                     u1381:
  4362  00100E  EF02  F008         	goto	l337
  4363  001012                     u1380:
  4364  001012                     
  4365                           ;ecg.c: 155: ecg = ADRESH;
  4366  001012  CFC4 F007          	movff	4036,Ecg_Read@ecg	;volatile
  4367  001016  6A08               	clrf	(Ecg_Read@ecg+1)^0,c
  4368  001018                     
  4369                           ;ecg.c: 156: ecg = ecg << 8;
  4370  001018  5007               	movf	Ecg_Read@ecg^0,w,c
  4371  00101A  6E08               	movwf	(Ecg_Read@ecg+1)^0,c
  4372  00101C  6A07               	clrf	Ecg_Read@ecg^0,c
  4373  00101E                     
  4374                           ;ecg.c: 157: ecg &= 0xFF00;
  4375  00101E  0E00               	movlw	0
  4376  001020  1607               	andwf	Ecg_Read@ecg^0,f,c
  4377  001022  0EFF               	movlw	255
  4378  001024  1608               	andwf	(Ecg_Read@ecg+1)^0,f,c
  4379  001026                     
  4380                           ;ecg.c: 158: ecg |= ADRESL;
  4381  001026  50C3               	movf	195,w,c	;volatile
  4382  001028  1207               	iorwf	Ecg_Read@ecg^0,f,c
  4383  00102A                     
  4384                           ;ecg.c: 159: ADCON0bits.ADON = 0;
  4385  00102A  90C2               	bcf	194,0,c	;volatile
  4386  00102C                     
  4387                           ;ecg.c: 160: ECG_BUFFER.data[ECG_BUFFER.i++] = (uint8_t)(ecg >> 2);
  4388  00102C  0E8A               	movlw	low _ECG_BUFFER
  4389  00102E  0100               	movlb	0	; () banked
  4390  001030  258E               	addwf	(_ECG_BUFFER+4)& (0+255),w,b
  4391  001032  6ED9               	movwf	fsr2l,c
  4392  001034  6ADA               	clrf	fsr2h,c
  4393  001036  0E00               	movlw	high _ECG_BUFFER
  4394  001038  22DA               	addwfc	fsr2h,f,c
  4395  00103A  C007  F005         	movff	Ecg_Read@ecg,??_Ecg_Read
  4396  00103E  C008  F006         	movff	Ecg_Read@ecg+1,??_Ecg_Read+1
  4397  001042  90D8               	bcf	status,0,c
  4398  001044  3206               	rrcf	(??_Ecg_Read+1)^0,f,c
  4399  001046  3205               	rrcf	??_Ecg_Read^0,f,c
  4400  001048  90D8               	bcf	status,0,c
  4401  00104A  3206               	rrcf	(??_Ecg_Read+1)^0,f,c
  4402  00104C  3205               	rrcf	??_Ecg_Read^0,f,c
  4403  00104E  5005               	movf	??_Ecg_Read^0,w,c
  4404  001050  6EDF               	movwf	indf2,c
  4405  001052                     
  4406                           ; BSR set to: 0
  4407  001052  2B8E               	incf	(_ECG_BUFFER+4)& (0+255),f,b
  4408  001054                     
  4409                           ; BSR set to: 0
  4410                           ;ecg.c: 161: if(ECG_BUFFER.i == 4) ECG_BUFFER.i = 0;
  4411  001054  0E04               	movlw	4
  4412  001056  198E               	xorwf	(_ECG_BUFFER+4)& (0+255),w,b
  4413  001058  A4D8               	btfss	status,2,c
  4414  00105A  EF31  F008         	goto	u1391
  4415  00105E  EF33  F008         	goto	u1390
  4416  001062                     u1391:
  4417  001062  EF35  F008         	goto	l2447
  4418  001066                     u1390:
  4419  001066                     
  4420                           ; BSR set to: 0
  4421  001066  0E00               	movlw	0
  4422  001068  6F8E               	movwf	(_ECG_BUFFER+4)& (0+255),b
  4423  00106A                     l2447:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;ecg.c: 162: return ecg;
  4427  00106A  C007  F003         	movff	Ecg_Read@ecg,?_Ecg_Read
  4428  00106E  C008  F004         	movff	Ecg_Read@ecg+1,?_Ecg_Read+1
  4429  001072                     
  4430                           ; BSR set to: 0
  4431  001072  0012               	return		;funcret
  4432  001074                     __end_of_Ecg_Read:
  4433                           	opt callstack 0
  4434                           
  4435 ;; *************** function _init *****************
  4436 ;; Defined at:
  4437 ;;		line 15 in file "init.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;		None
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;		None
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4451 ;;      Params:         0       0       0       0       0       0       0       0       0
  4452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4453 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4454 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4455 ;;Total ram usage:        2 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    2
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_main
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text15
  4466  0011D6                     __ptext15:
  4467                           	opt callstack 0
  4468  0011D6                     _init:
  4469                           	opt callstack 28
  4470  0011D6                     
  4471                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  4472  0011D6  9ED3               	bcf	211,7,c	;volatile
  4473  0011D8                     
  4474                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  4475  0011D8  0E70               	movlw	112
  4476  0011DA  12D3               	iorwf	211,f,c	;volatile
  4477                           
  4478                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  4479  0011DC  0EFC               	movlw	-4
  4480  0011DE  16D3               	andwf	211,f,c	;volatile
  4481  0011E0                     
  4482                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  4483  0011E0  8E9B               	bsf	155,7,c	;volatile
  4484                           
  4485                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  4486  0011E2  0EE0               	movlw	-32
  4487  0011E4  169B               	andwf	155,f,c	;volatile
  4488  0011E6                     
  4489                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  4490  0011E6  0E07               	movlw	7
  4491  0011E8  6E04               	movwf	(??_init+1)^0,c
  4492  0011EA  0E17               	movlw	23
  4493  0011EC  6E03               	movwf	??_init^0,c
  4494  0011EE  0E6A               	movlw	106
  4495  0011F0                     u2127:
  4496  0011F0  2EE8               	decfsz	wreg,f,c
  4497  0011F2  D7FE               	bra	u2127
  4498  0011F4  2E03               	decfsz	??_init^0,f,c
  4499  0011F6  D7FC               	bra	u2127
  4500  0011F8  2E04               	decfsz	(??_init+1)^0,f,c
  4501  0011FA  D7FA               	bra	u2127
  4502  0011FC  D000               	nop2	
  4503  0011FE                     
  4504                           ;init.c: 27: UCONbits.USBEN = 0;
  4505  0011FE  966D               	bcf	109,3,c	;volatile
  4506  001200                     
  4507                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  4508  001200  866F               	bsf	111,3,c	;volatile
  4509  001202                     
  4510                           ;init.c: 41: TRISA = 0b00001011;
  4511  001202  0E0B               	movlw	11
  4512  001204  6E92               	movwf	146,c	;volatile
  4513  001206                     
  4514                           ;init.c: 42: LATA = 0x00;
  4515  001206  0E00               	movlw	0
  4516  001208  6E89               	movwf	137,c	;volatile
  4517  00120A                     
  4518                           ;init.c: 48: RBPU = 1;
  4519  00120A  8EF1               	bsf	4081,7,c	;volatile
  4520  00120C                     
  4521                           ;init.c: 49: TRISB = 0x00;
  4522  00120C  0E00               	movlw	0
  4523  00120E  6E93               	movwf	147,c	;volatile
  4524  001210                     
  4525                           ;init.c: 50: LATB = 0x00;
  4526  001210  0E00               	movlw	0
  4527  001212  6E8A               	movwf	138,c	;volatile
  4528  001214                     
  4529                           ;init.c: 63: TRISC = 0b11110000;
  4530  001214  0EF0               	movlw	240
  4531  001216  6E94               	movwf	148,c	;volatile
  4532  001218                     
  4533                           ;init.c: 64: LATC = 0x00;
  4534  001218  0E00               	movlw	0
  4535  00121A  6E8B               	movwf	139,c	;volatile
  4536  00121C                     
  4537                           ;init.c: 67: ADCON0bits.ADON = 0;
  4538  00121C  90C2               	bcf	194,0,c	;volatile
  4539  00121E                     
  4540                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  4541  00121E  0ECF               	movlw	-49
  4542  001220  16C1               	andwf	193,f,c	;volatile
  4543  001222                     
  4544                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  4545  001222  50C1               	movf	193,w,c	;volatile
  4546  001224  0BF0               	andlw	-16
  4547  001226  090E               	iorlw	14
  4548  001228  6EC1               	movwf	193,c	;volatile
  4549  00122A                     
  4550                           ;init.c: 70: ADCON2bits.ADFM = 1;
  4551  00122A  8EC0               	bsf	192,7,c	;volatile
  4552  00122C                     
  4553                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  4554  00122C  0EC7               	movlw	-57
  4555  00122E  16C0               	andwf	192,f,c	;volatile
  4556  001230                     
  4557                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  4558  001230  50C0               	movf	192,w,c	;volatile
  4559  001232  0BF8               	andlw	-8
  4560  001234  0902               	iorlw	2
  4561  001236  6EC0               	movwf	192,c	;volatile
  4562  001238                     
  4563                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  4564  001238  0ECF               	movlw	-49
  4565  00123A  16B1               	andwf	177,f,c	;volatile
  4566  00123C                     
  4567                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  4568  00123C  92B1               	bcf	177,1,c	;volatile
  4569  00123E                     
  4570                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  4571  00123E  80B1               	bsf	177,0,c	;volatile
  4572  001240                     
  4573                           ;init.c: 78: TMR3IE = 1;
  4574  001240  82A0               	bsf	4000,1,c	;volatile
  4575  001242                     
  4576                           ;init.c: 81: PEIE = 1;
  4577  001242  8CF2               	bsf	4082,6,c	;volatile
  4578  001244                     
  4579                           ;init.c: 82: GIE = 1;
  4580  001244  8EF2               	bsf	4082,7,c	;volatile
  4581  001246  0012               	return		;funcret
  4582  001248                     __end_of_init:
  4583                           	opt callstack 0
  4584                           
  4585 ;; *************** function _TFT_Init *****************
  4586 ;; Defined at:
  4587 ;;		line 72 in file "TFT.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;		None
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  i               2   35[COMRAM] unsigned int 
  4592 ;;  cmd             2   33[COMRAM] unsigned int 
  4593 ;;  initSequence    2   31[COMRAM] unsigned int 
  4594 ;;  data            2   29[COMRAM] unsigned int 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0
  4605 ;;      Locals:         8       0       0       0       0       0       0       0       0
  4606 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4607 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4608 ;;Total ram usage:       10 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    5
  4611 ;; This function calls:
  4612 ;;		_TFT_FillScreen
  4613 ;;		_TFT_FullScreen
  4614 ;;		_TFT_Reset
  4615 ;;		_TFT_WriteRegister
  4616 ;; This function is called by:
  4617 ;;		_main
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text16
  4622  000B1C                     __ptext16:
  4623                           	opt callstack 0
  4624  000B1C                     _TFT_Init:
  4625                           	opt callstack 25
  4626  000B1C                     
  4627                           ;TFT.c: 73: TFT_Reset();
  4628  000B1C  EC43  F00B         	call	_TFT_Reset	;wreg free
  4629  000B20                     
  4630                           ;TFT.c: 74: _delay((unsigned long)((200)*(48000000/4000.0)));
  4631  000B20  0E0D               	movlw	13
  4632  000B22  6E1D               	movwf	(??_TFT_Init+1)^0,c
  4633  000B24  0E2D               	movlw	45
  4634  000B26  6E1C               	movwf	??_TFT_Init^0,c
  4635  000B28  0ED8               	movlw	216
  4636  000B2A                     u2137:
  4637  000B2A  2EE8               	decfsz	wreg,f,c
  4638  000B2C  D7FE               	bra	u2137
  4639  000B2E  2E1C               	decfsz	??_TFT_Init^0,f,c
  4640  000B30  D7FC               	bra	u2137
  4641  000B32  2E1D               	decfsz	(??_TFT_Init+1)^0,f,c
  4642  000B34  D7FA               	bra	u2137
  4643  000B36                     
  4644                           ;TFT.c: 77: uint16_t i=0, cmd, data;
  4645  000B36  0E00               	movlw	0
  4646  000B38  6E25               	movwf	(TFT_Init@i+1)^0,c
  4647  000B3A  0E00               	movlw	0
  4648  000B3C  6E24               	movwf	TFT_Init@i^0,c
  4649  000B3E                     
  4650                           ;TFT.c: 78: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  4651  000B3E  0E00               	movlw	0
  4652  000B40  6E21               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  4653  000B42  0E66               	movlw	102
  4654  000B44  6E20               	movwf	TFT_Init@initSequenceSize^0,c
  4655                           
  4656                           ;TFT.c: 79: while(i != initSequenceSize) {
  4657  000B46  EFE8  F005         	goto	l2825
  4658  000B4A                     l2813:
  4659                           
  4660                           ;TFT.c: 80: cmd = TFT_Init_Sequence[i++];
  4661  000B4A  90D8               	bcf	status,0,c
  4662  000B4C  3424               	rlcf	TFT_Init@i^0,w,c
  4663  000B4E  6EF6               	movwf	tblptrl,c
  4664  000B50  3425               	rlcf	(TFT_Init@i+1)^0,w,c
  4665  000B52  6EF7               	movwf	tblptrh,c
  4666  000B54  0EBF               	movlw	low _TFT_Init_Sequence
  4667  000B56  26F6               	addwf	tblptrl,f,c
  4668  000B58  0E5E               	movlw	high _TFT_Init_Sequence
  4669  000B5A  22F7               	addwfc	tblptrh,f,c
  4670  000B5C                     	if	0	;There are less than 3 active tblptr bytes
  4671  000B5C                     	endif
  4672  000B5C  0009               	tblrd		*+
  4673  000B5E  CFF5 F022          	movff	tablat,TFT_Init@cmd
  4674  000B62  000A               	tblrd		*-
  4675  000B64  CFF5 F023          	movff	tablat,TFT_Init@cmd+1
  4676  000B68  4A24               	infsnz	TFT_Init@i^0,f,c
  4677  000B6A  2A25               	incf	(TFT_Init@i+1)^0,f,c
  4678  000B6C                     
  4679                           ;TFT.c: 81: data = TFT_Init_Sequence[i++];
  4680  000B6C  90D8               	bcf	status,0,c
  4681  000B6E  3424               	rlcf	TFT_Init@i^0,w,c
  4682  000B70  6EF6               	movwf	tblptrl,c
  4683  000B72  3425               	rlcf	(TFT_Init@i+1)^0,w,c
  4684  000B74  6EF7               	movwf	tblptrh,c
  4685  000B76  0EBF               	movlw	low _TFT_Init_Sequence
  4686  000B78  26F6               	addwf	tblptrl,f,c
  4687  000B7A  0E5E               	movlw	high _TFT_Init_Sequence
  4688  000B7C  22F7               	addwfc	tblptrh,f,c
  4689  000B7E                     	if	0	;There are less than 3 active tblptr bytes
  4690  000B7E                     	endif
  4691  000B7E  0009               	tblrd		*+
  4692  000B80  CFF5 F01E          	movff	tablat,TFT_Init@data
  4693  000B84  000A               	tblrd		*-
  4694  000B86  CFF5 F01F          	movff	tablat,TFT_Init@data+1
  4695  000B8A  4A24               	infsnz	TFT_Init@i^0,f,c
  4696  000B8C  2A25               	incf	(TFT_Init@i+1)^0,f,c
  4697  000B8E                     
  4698                           ;TFT.c: 82: if(cmd == 0xFFFF) {
  4699  000B8E  2822               	incf	TFT_Init@cmd^0,w,c
  4700  000B90  E106               	bnz	u1891
  4701  000B92  2823               	incf	(TFT_Init@cmd+1)^0,w,c
  4702  000B94  A4D8               	btfss	status,2,c
  4703  000B96  EFCF  F005         	goto	u1891
  4704  000B9A  EFD1  F005         	goto	u1890
  4705  000B9E                     u1891:
  4706  000B9E  EFDE  F005         	goto	l2823
  4707  000BA2                     u1890:
  4708  000BA2                     
  4709                           ;TFT.c: 83: _delay((unsigned long)((200)*(48000000/4000.0)));
  4710  000BA2  0E0D               	movlw	13
  4711  000BA4  6E1D               	movwf	(??_TFT_Init+1)^0,c
  4712  000BA6  0E2D               	movlw	45
  4713  000BA8  6E1C               	movwf	??_TFT_Init^0,c
  4714  000BAA  0ED8               	movlw	216
  4715  000BAC                     u2147:
  4716  000BAC  2EE8               	decfsz	wreg,f,c
  4717  000BAE  D7FE               	bra	u2147
  4718  000BB0  2E1C               	decfsz	??_TFT_Init^0,f,c
  4719  000BB2  D7FC               	bra	u2147
  4720  000BB4  2E1D               	decfsz	(??_TFT_Init+1)^0,f,c
  4721  000BB6  D7FA               	bra	u2147
  4722                           
  4723                           ;TFT.c: 84: } else {
  4724  000BB8  EFE8  F005         	goto	l2825
  4725  000BBC                     l2823:
  4726                           
  4727                           ;TFT.c: 85: TFT_WriteRegister(cmd, data);
  4728  000BBC  C022  F003         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  4729  000BC0  C023  F004         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  4730  000BC4  C01E  F005         	movff	TFT_Init@data,TFT_WriteRegister@data
  4731  000BC8  C01F  F006         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  4732  000BCC  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  4733  000BD0                     l2825:
  4734  000BD0  5020               	movf	TFT_Init@initSequenceSize^0,w,c
  4735  000BD2  1824               	xorwf	TFT_Init@i^0,w,c
  4736  000BD4  E107               	bnz	u1901
  4737  000BD6  5021               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  4738  000BD8  1825               	xorwf	(TFT_Init@i+1)^0,w,c
  4739  000BDA  A4D8               	btfss	status,2,c
  4740  000BDC  EFF2  F005         	goto	u1901
  4741  000BE0  EFF4  F005         	goto	u1900
  4742  000BE4                     u1901:
  4743  000BE4  EFA5  F005         	goto	l2813
  4744  000BE8                     u1900:
  4745  000BE8                     
  4746                           ;TFT.c: 86: };TFT.c: 87: };TFT.c: 90: TFT_FullScreen();
  4747  000BE8  EC20  F00B         	call	_TFT_FullScreen	;wreg free
  4748  000BEC                     
  4749                           ;TFT.c: 91: TFT_FillScreen(0x0000);
  4750  000BEC  0E00               	movlw	0
  4751  000BEE  6E1B               	movwf	(TFT_FillScreen@color+1)^0,c
  4752  000BF0  0E00               	movlw	0
  4753  000BF2  6E1A               	movwf	TFT_FillScreen@color^0,c
  4754  000BF4  EC06  F00A         	call	_TFT_FillScreen	;wreg free
  4755  000BF8  0012               	return		;funcret
  4756  000BFA                     __end_of_TFT_Init:
  4757                           	opt callstack 0
  4758                           
  4759 ;; *************** function _TFT_Reset *****************
  4760 ;; Defined at:
  4761 ;;		line 46 in file "TFT.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4777 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4778 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4779 ;;Total ram usage:        1 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    2
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_TFT_Init
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text17
  4790  001686                     __ptext17:
  4791                           	opt callstack 0
  4792  001686                     _TFT_Reset:
  4793                           	opt callstack 27
  4794  001686                     
  4795                           ;TFT.c: 47: TRISB = 0x00;;
  4796  001686  0E00               	movlw	0
  4797  001688  6E93               	movwf	147,c	;volatile
  4798  00168A                     
  4799                           ;TFT.c: 48: PORTCbits.RC0 = 1;;
  4800  00168A  8082               	bsf	130,0,c	;volatile
  4801  00168C                     
  4802                           ;TFT.c: 49: PORTAbits.RA5 = 1;;
  4803  00168C  8A80               	bsf	128,5,c	;volatile
  4804  00168E                     
  4805                           ;TFT.c: 50: PORTAbits.RA4 = 1;;
  4806  00168E  8880               	bsf	128,4,c	;volatile
  4807  001690                     
  4808                           ;TFT.c: 51: PORTCbits.RC2 = 0;;
  4809  001690  9482               	bcf	130,2,c	;volatile
  4810  001692                     
  4811                           ;TFT.c: 52: _delay((unsigned long)((2)*(48000000/4000.0)));
  4812  001692  0E20               	movlw	32
  4813  001694  6E03               	movwf	??_TFT_Reset^0,c
  4814  001696  0E2A               	movlw	42
  4815  001698                     u2157:
  4816  001698  2EE8               	decfsz	wreg,f,c
  4817  00169A  D7FE               	bra	u2157
  4818  00169C  2E03               	decfsz	??_TFT_Reset^0,f,c
  4819  00169E  D7FC               	bra	u2157
  4820  0016A0                     
  4821                           ;TFT.c: 53: PORTCbits.RC2 = 1;;
  4822  0016A0  8482               	bsf	130,2,c	;volatile
  4823  0016A2  0012               	return		;funcret
  4824  0016A4                     __end_of_TFT_Reset:
  4825                           	opt callstack 0
  4826                           
  4827 ;; *************** function _Ecg_Init *****************
  4828 ;; Defined at:
  4829 ;;		line 12 in file "ecg.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4846 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4847 ;;Total ram usage:        0 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    9
  4850 ;; This function calls:
  4851 ;;		_Ecg_Background_Leads_Failure
  4852 ;;		_Ecg_Background_Leads_Ok
  4853 ;;		_Ecg_CheckLeads
  4854 ;; This function is called by:
  4855 ;;		_main
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text18
  4860  0015EA                     __ptext18:
  4861                           	opt callstack 0
  4862  0015EA                     _Ecg_Init:
  4863                           	opt callstack 21
  4864  0015EA                     
  4865                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  4866  0015EA  ECB7  F009         	call	_Ecg_CheckLeads	;wreg free
  4867  0015EE  5003               	movf	?_Ecg_CheckLeads^0,w,c
  4868  0015F0  1004               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  4869  0015F2  A4D8               	btfss	status,2,c
  4870  0015F4  EFFE  F00A         	goto	u1911
  4871  0015F8  EF00  F00B         	goto	u1910
  4872  0015FC                     u1911:
  4873  0015FC  EF04  F00B         	goto	l2835
  4874  001600                     u1910:
  4875  001600                     
  4876                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  4877  001600  EC3A  F008         	call	_Ecg_Background_Leads_Ok	;wreg free
  4878                           
  4879                           ;ecg.c: 15: } else {
  4880  001604  EF06  F00B         	goto	l2837
  4881  001608                     l2835:
  4882                           
  4883                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  4884  001608  EC89  F00A         	call	_Ecg_Background_Leads_Failure	;wreg free
  4885  00160C                     l2837:
  4886                           
  4887                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  4888  00160C  0E00               	movlw	0
  4889  00160E  0100               	movlb	0	; () banked
  4890  001610  6F89               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  4891  001612                     
  4892                           ; BSR set to: 0
  4893                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  4894  001612  0E00               	movlw	0
  4895  001614  6F8E               	movwf	(_ECG_BUFFER+4)& (0+255),b
  4896  001616                     
  4897                           ; BSR set to: 0
  4898                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  4899  001616  8C4E               	bsf	_ECG_HEARTRATE^0,6,c
  4900  001618                     
  4901                           ; BSR set to: 0
  4902  001618  0012               	return		;funcret
  4903  00161A                     __end_of_Ecg_Init:
  4904                           	opt callstack 0
  4905                           
  4906 ;; *************** function _Ecg_CheckLeads *****************
  4907 ;; Defined at:
  4908 ;;		line 141 in file "ecg.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;		None
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  leadsStatus     1    5[COMRAM] unsigned char 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  2    2[COMRAM] unsigned int 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4922 ;;      Params:         2       0       0       0       0       0       0       0       0
  4923 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4924 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4925 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4926 ;;Total ram usage:        4 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    2
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_Ecg_Init
  4933 ;;		_Ecg_ProcessEcg
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text19
  4938  00136E                     __ptext19:
  4939                           	opt callstack 0
  4940  00136E                     _Ecg_CheckLeads:
  4941                           	opt callstack 25
  4942  00136E                     
  4943                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  4944  00136E  0E00               	movlw	0
  4945  001370  6E06               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  4946  001372                     
  4947                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  4948  001372  AA82               	btfss	130,5,c	;volatile
  4949  001374  EFBE  F009         	goto	u1481
  4950  001378  EFC0  F009         	goto	u1480
  4951  00137C                     u1481:
  4952  00137C  EFC1  F009         	goto	l2507
  4953  001380                     u1480:
  4954  001380  8206               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  4955  001382                     l2507:
  4956                           
  4957                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  4958  001382  A882               	btfss	130,4,c	;volatile
  4959  001384  EFC6  F009         	goto	u1491
  4960  001388  EFC8  F009         	goto	u1490
  4961  00138C                     u1491:
  4962  00138C  EFC9  F009         	goto	l2511
  4963  001390                     u1490:
  4964  001390  8006               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  4965  001392                     l2511:
  4966                           
  4967                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  4968  001392  5006               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  4969  001394  B4D8               	btfsc	status,2,c
  4970  001396  EFCF  F009         	goto	u1501
  4971  00139A  EFD3  F009         	goto	u1500
  4972  00139E                     u1501:
  4973  00139E  6A05               	clrf	??_Ecg_CheckLeads^0,c
  4974  0013A0  2A05               	incf	??_Ecg_CheckLeads^0,f,c
  4975  0013A2  EFD4  F009         	goto	u1518
  4976  0013A6                     u1500:
  4977  0013A6  6A05               	clrf	??_Ecg_CheckLeads^0,c
  4978  0013A8                     u1518:
  4979  0013A8  4605               	rlncf	??_Ecg_CheckLeads^0,f,c
  4980  0013AA  0100               	movlb	0	; () banked
  4981  0013AC  5193               	movf	_ECG_FLAGS& (0+255),w,b
  4982  0013AE  1805               	xorwf	??_Ecg_CheckLeads^0,w,c
  4983  0013B0  0BFD               	andlw	-3
  4984  0013B2  1805               	xorwf	??_Ecg_CheckLeads^0,w,c
  4985  0013B4  6F93               	movwf	_ECG_FLAGS& (0+255),b
  4986  0013B6                     
  4987                           ; BSR set to: 0
  4988                           ;ecg.c: 146: return leadsStatus;
  4989  0013B6  C006  F003         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  4990  0013BA  6A04               	clrf	(?_Ecg_CheckLeads+1)^0,c
  4991  0013BC                     
  4992                           ; BSR set to: 0
  4993  0013BC  0012               	return		;funcret
  4994  0013BE                     __end_of_Ecg_CheckLeads:
  4995                           	opt callstack 0
  4996                           
  4997 ;; *************** function _Ecg_Background_Leads_Ok *****************
  4998 ;; Defined at:
  4999 ;;		line 180 in file "ecg.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    8
  5020 ;; This function calls:
  5021 ;;		_TFT_DrawLine
  5022 ;;		_TFT_DrawString
  5023 ;;		_TFT_FillScreen
  5024 ;; This function is called by:
  5025 ;;		_Ecg_Init
  5026 ;;		_Ecg_ProcessEcg
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text20
  5031  001074                     __ptext20:
  5032                           	opt callstack 0
  5033  001074                     _Ecg_Background_Leads_Ok:
  5034                           	opt callstack 19
  5035  001074                     
  5036                           ;ecg.c: 181: TFT_FillScreen(0x0000);
  5037  001074  0E00               	movlw	0
  5038  001076  6E1B               	movwf	(TFT_FillScreen@color+1)^0,c
  5039  001078  0E00               	movlw	0
  5040  00107A  6E1A               	movwf	TFT_FillScreen@color^0,c
  5041  00107C  EC06  F00A         	call	_TFT_FillScreen	;wreg free
  5042  001080                     
  5043                           ;ecg.c: 182: TFT_DrawString(8, (400 - 10), "Frequenza:", 0xFFFF, 0x0000, 2);
  5044  001080  0E00               	movlw	0
  5045  001082  6E3E               	movwf	(TFT_DrawString@x+1)^0,c
  5046  001084  0E08               	movlw	8
  5047  001086  6E3D               	movwf	TFT_DrawString@x^0,c
  5048  001088  0E01               	movlw	1
  5049  00108A  6E40               	movwf	(TFT_DrawString@y+1)^0,c
  5050  00108C  0E86               	movlw	134
  5051  00108E  6E3F               	movwf	TFT_DrawString@y^0,c
  5052  001090  0EEF               	movlw	low STR_2
  5053  001092  6E41               	movwf	TFT_DrawString@str^0,c
  5054  001094  0E5F               	movlw	high STR_2
  5055  001096  6E42               	movwf	(TFT_DrawString@str+1)^0,c
  5056  001098  0EFF               	movlw	255
  5057  00109A  6E44               	movwf	(TFT_DrawString@color+1)^0,c
  5058  00109C  6843               	setf	TFT_DrawString@color^0,c
  5059  00109E  0E00               	movlw	0
  5060  0010A0  6E46               	movwf	(TFT_DrawString@bg+1)^0,c
  5061  0010A2  0E00               	movlw	0
  5062  0010A4  6E45               	movwf	TFT_DrawString@bg^0,c
  5063  0010A6  0E02               	movlw	2
  5064  0010A8  6E47               	movwf	TFT_DrawString@size^0,c
  5065  0010AA  EC79  F007         	call	_TFT_DrawString	;wreg free
  5066  0010AE                     
  5067                           ;ecg.c: 183: TFT_DrawLine((33 - 1), 0, (33 - 1), 400, 0xFFFF);
  5068  0010AE  0E00               	movlw	0
  5069  0010B0  6E12               	movwf	(TFT_DrawLine@x0+1)^0,c
  5070  0010B2  0E20               	movlw	32
  5071  0010B4  6E11               	movwf	TFT_DrawLine@x0^0,c
  5072  0010B6  0E00               	movlw	0
  5073  0010B8  6E14               	movwf	(TFT_DrawLine@y0+1)^0,c
  5074  0010BA  0E00               	movlw	0
  5075  0010BC  6E13               	movwf	TFT_DrawLine@y0^0,c
  5076  0010BE  0E00               	movlw	0
  5077  0010C0  6E16               	movwf	(TFT_DrawLine@x1+1)^0,c
  5078  0010C2  0E20               	movlw	32
  5079  0010C4  6E15               	movwf	TFT_DrawLine@x1^0,c
  5080  0010C6  0E01               	movlw	1
  5081  0010C8  6E18               	movwf	(TFT_DrawLine@y1+1)^0,c
  5082  0010CA  0E90               	movlw	144
  5083  0010CC  6E17               	movwf	TFT_DrawLine@y1^0,c
  5084  0010CE  0EFF               	movlw	255
  5085  0010D0  6E1A               	movwf	(TFT_DrawLine@color+1)^0,c
  5086  0010D2  6819               	setf	TFT_DrawLine@color^0,c
  5087  0010D4  EC6D  F002         	call	_TFT_DrawLine	;wreg free
  5088  0010D8                     
  5089                           ;ecg.c: 184: Ecg_Y = 400 - 1;
  5090  0010D8  0E01               	movlw	1
  5091  0010DA  6E49               	movwf	(_Ecg_Y+1)^0,c
  5092  0010DC  0E8F               	movlw	143
  5093  0010DE  6E48               	movwf	_Ecg_Y^0,c
  5094  0010E0                     
  5095                           ;ecg.c: 185: Ecg_Yold = 400 - 1;
  5096  0010E0  0E01               	movlw	1
  5097  0010E2  0100               	movlb	0	; () banked
  5098  0010E4  6F9C               	movwf	(_Ecg_Yold+1)& (0+255),b
  5099  0010E6  0E8F               	movlw	143
  5100  0010E8  6F9B               	movwf	_Ecg_Yold& (0+255),b
  5101  0010EA                     
  5102                           ; BSR set to: 0
  5103  0010EA  0012               	return		;funcret
  5104  0010EC                     __end_of_Ecg_Background_Leads_Ok:
  5105                           	opt callstack 0
  5106                           
  5107 ;; *************** function _TFT_DrawLine *****************
  5108 ;; Defined at:
  5109 ;;		line 100 in file "TFT.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  x0              2   16[COMRAM] int 
  5112 ;;  y0              2   18[COMRAM] int 
  5113 ;;  x1              2   20[COMRAM] int 
  5114 ;;  y1              2   22[COMRAM] int 
  5115 ;;  color           2   24[COMRAM] unsigned int 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;  t               2   35[COMRAM] int 
  5118 ;;  t               2   33[COMRAM] int 
  5119 ;;  t               2   31[COMRAM] int 
  5120 ;;  t               2   29[COMRAM] int 
  5121 ;;  dx              2   45[COMRAM] int 
  5122 ;;  steep           2   43[COMRAM] int 
  5123 ;;  err             2   41[COMRAM] int 
  5124 ;;  ystep           2   39[COMRAM] int 
  5125 ;;  dy              2   37[COMRAM] int 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  1    wreg      void 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0, cstack
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5135 ;;      Params:        10       0       0       0       0       0       0       0       0
  5136 ;;      Locals:        18       0       0       0       0       0       0       0       0
  5137 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5138 ;;      Totals:        31       0       0       0       0       0       0       0       0
  5139 ;;Total ram usage:       31 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; Hardware stack levels required when called:    4
  5142 ;; This function calls:
  5143 ;;		_TFT_DrawPixel
  5144 ;;		___awdiv
  5145 ;;		_abs
  5146 ;; This function is called by:
  5147 ;;		_Ecg_Draw
  5148 ;;		_Ecg_Background_Leads_Ok
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text21
  5153  0004DA                     __ptext21:
  5154                           	opt callstack 0
  5155  0004DA                     _TFT_DrawLine:
  5156                           	opt callstack 22
  5157  0004DA                     
  5158                           ;TFT.c: 101: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  5159  0004DA  5011               	movf	TFT_DrawLine@x0^0,w,c
  5160  0004DC  5C15               	subwf	TFT_DrawLine@x1^0,w,c
  5161  0004DE  6E03               	movwf	abs@a^0,c
  5162  0004E0  5012               	movf	(TFT_DrawLine@x0+1)^0,w,c
  5163  0004E2  5816               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  5164  0004E4  6E04               	movwf	(abs@a+1)^0,c
  5165  0004E6  ECC2  F00A         	call	_abs	;wreg free
  5166  0004EA  C003  F01B         	movff	?_abs,??_TFT_DrawLine
  5167  0004EE  C004  F01C         	movff	?_abs+1,??_TFT_DrawLine+1
  5168  0004F2  5013               	movf	TFT_DrawLine@y0^0,w,c
  5169  0004F4  5C17               	subwf	TFT_DrawLine@y1^0,w,c
  5170  0004F6  6E03               	movwf	abs@a^0,c
  5171  0004F8  5014               	movf	(TFT_DrawLine@y0+1)^0,w,c
  5172  0004FA  5818               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  5173  0004FC  6E04               	movwf	(abs@a+1)^0,c
  5174  0004FE  ECC2  F00A         	call	_abs	;wreg free
  5175  000502  5003               	movf	?_abs^0,w,c
  5176  000504  5C1B               	subwf	??_TFT_DrawLine^0,w,c
  5177  000506  501C               	movf	(??_TFT_DrawLine+1)^0,w,c
  5178  000508  0A80               	xorlw	128
  5179  00050A  6E1D               	movwf	(??_TFT_DrawLine+2)^0,c
  5180  00050C  5004               	movf	(?_abs+1)^0,w,c
  5181  00050E  0A80               	xorlw	128
  5182  000510  581D               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  5183  000512  A0D8               	btfss	status,0,c
  5184  000514  EF8E  F002         	goto	u1231
  5185  000518  EF91  F002         	goto	u1230
  5186  00051C                     u1231:
  5187  00051C  0E01               	movlw	1
  5188  00051E  EF92  F002         	goto	u1240
  5189  000522                     u1230:
  5190  000522  0E00               	movlw	0
  5191  000524                     u1240:
  5192  000524  6E2C               	movwf	TFT_DrawLine@steep^0,c
  5193  000526  6A2D               	clrf	(TFT_DrawLine@steep+1)^0,c
  5194  000528                     
  5195                           ;TFT.c: 102: if(steep) {
  5196  000528  502C               	movf	TFT_DrawLine@steep^0,w,c
  5197  00052A  102D               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  5198  00052C  B4D8               	btfsc	status,2,c
  5199  00052E  EF9B  F002         	goto	u1251
  5200  000532  EF9D  F002         	goto	u1250
  5201  000536                     u1251:
  5202  000536  EFB5  F002         	goto	l2355
  5203  00053A                     u1250:
  5204  00053A                     
  5205                           ;TFT.c: 103: { int16_t t = x0; x0 = y0; y0 = t; };
  5206  00053A  C011  F01E         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  5207  00053E  C012  F01F         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  5208  000542  C013  F011         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  5209  000546  C014  F012         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  5210  00054A  C01E  F013         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  5211  00054E  C01F  F014         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  5212                           
  5213                           ;TFT.c: 104: { int16_t t = x1; x1 = y1; y1 = t; };
  5214  000552  C015  F020         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_641
  5215  000556  C016  F021         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_641+1
  5216  00055A  C017  F015         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  5217  00055E  C018  F016         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  5218  000562  C020  F017         	movff	TFT_DrawLine@t_641,TFT_DrawLine@y1
  5219  000566  C021  F018         	movff	TFT_DrawLine@t_641+1,TFT_DrawLine@y1+1
  5220  00056A                     l2355:
  5221                           
  5222                           ;TFT.c: 105: };TFT.c: 106: if(x0 > x1) {
  5223  00056A  5011               	movf	TFT_DrawLine@x0^0,w,c
  5224  00056C  5C15               	subwf	TFT_DrawLine@x1^0,w,c
  5225  00056E  5016               	movf	(TFT_DrawLine@x1+1)^0,w,c
  5226  000570  0A80               	xorlw	128
  5227  000572  6E1B               	movwf	??_TFT_DrawLine^0,c
  5228  000574  5012               	movf	(TFT_DrawLine@x0+1)^0,w,c
  5229  000576  0A80               	xorlw	128
  5230  000578  581B               	subwfb	??_TFT_DrawLine^0,w,c
  5231  00057A  B0D8               	btfsc	status,0,c
  5232  00057C  EFC2  F002         	goto	u1261
  5233  000580  EFC4  F002         	goto	u1260
  5234  000584                     u1261:
  5235  000584  EFDC  F002         	goto	l2359
  5236  000588                     u1260:
  5237  000588                     
  5238                           ;TFT.c: 107: { int16_t t = x0; x0 = x1; x1 = t; };
  5239  000588  C011  F022         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_642
  5240  00058C  C012  F023         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_642+1
  5241  000590  C015  F011         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  5242  000594  C016  F012         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  5243  000598  C022  F015         	movff	TFT_DrawLine@t_642,TFT_DrawLine@x1
  5244  00059C  C023  F016         	movff	TFT_DrawLine@t_642+1,TFT_DrawLine@x1+1
  5245                           
  5246                           ;TFT.c: 108: { int16_t t = y0; y0 = y1; y1 = t; };
  5247  0005A0  C013  F024         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_643
  5248  0005A4  C014  F025         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_643+1
  5249  0005A8  C017  F013         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  5250  0005AC  C018  F014         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  5251  0005B0  C024  F017         	movff	TFT_DrawLine@t_643,TFT_DrawLine@y1
  5252  0005B4  C025  F018         	movff	TFT_DrawLine@t_643+1,TFT_DrawLine@y1+1
  5253  0005B8                     l2359:
  5254                           
  5255                           ;TFT.c: 109: };TFT.c: 111: int16_t dx, dy;;TFT.c: 112: dx = x1 - x0;
  5256  0005B8  5011               	movf	TFT_DrawLine@x0^0,w,c
  5257  0005BA  5C15               	subwf	TFT_DrawLine@x1^0,w,c
  5258  0005BC  6E2E               	movwf	TFT_DrawLine@dx^0,c
  5259  0005BE  5012               	movf	(TFT_DrawLine@x0+1)^0,w,c
  5260  0005C0  5816               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  5261  0005C2  6E2F               	movwf	(TFT_DrawLine@dx+1)^0,c
  5262  0005C4                     
  5263                           ;TFT.c: 113: dy = abs(y1 - y0);
  5264  0005C4  5013               	movf	TFT_DrawLine@y0^0,w,c
  5265  0005C6  5C17               	subwf	TFT_DrawLine@y1^0,w,c
  5266  0005C8  6E03               	movwf	abs@a^0,c
  5267  0005CA  5014               	movf	(TFT_DrawLine@y0+1)^0,w,c
  5268  0005CC  5818               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  5269  0005CE  6E04               	movwf	(abs@a+1)^0,c
  5270  0005D0  ECC2  F00A         	call	_abs	;wreg free
  5271  0005D4  C003  F026         	movff	?_abs,TFT_DrawLine@dy
  5272  0005D8  C004  F027         	movff	?_abs+1,TFT_DrawLine@dy+1
  5273  0005DC                     
  5274                           ;TFT.c: 115: int16_t err = dx / 2;
  5275  0005DC  C02E  F003         	movff	TFT_DrawLine@dx,___awdiv@dividend
  5276  0005E0  C02F  F004         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  5277  0005E4  0E00               	movlw	0
  5278  0005E6  6E06               	movwf	(___awdiv@divisor+1)^0,c
  5279  0005E8  0E02               	movlw	2
  5280  0005EA  6E05               	movwf	___awdiv@divisor^0,c
  5281  0005EC  EC64  F006         	call	___awdiv	;wreg free
  5282  0005F0  C003  F02A         	movff	?___awdiv,TFT_DrawLine@err
  5283  0005F4  C004  F02B         	movff	?___awdiv+1,TFT_DrawLine@err+1
  5284                           
  5285                           ;TFT.c: 116: int16_t ystep;;TFT.c: 118: if(y0 < y1) {
  5286  0005F8  5017               	movf	TFT_DrawLine@y1^0,w,c
  5287  0005FA  5C13               	subwf	TFT_DrawLine@y0^0,w,c
  5288  0005FC  5014               	movf	(TFT_DrawLine@y0+1)^0,w,c
  5289  0005FE  0A80               	xorlw	128
  5290  000600  6E1B               	movwf	??_TFT_DrawLine^0,c
  5291  000602  5018               	movf	(TFT_DrawLine@y1+1)^0,w,c
  5292  000604  0A80               	xorlw	128
  5293  000606  581B               	subwfb	??_TFT_DrawLine^0,w,c
  5294  000608  B0D8               	btfsc	status,0,c
  5295  00060A  EF09  F003         	goto	u1271
  5296  00060E  EF0B  F003         	goto	u1270
  5297  000612                     u1271:
  5298  000612  EF11  F003         	goto	l148
  5299  000616                     u1270:
  5300  000616                     
  5301                           ;TFT.c: 119: ystep = 1;
  5302  000616  0E00               	movlw	0
  5303  000618  6E29               	movwf	(TFT_DrawLine@ystep+1)^0,c
  5304  00061A  0E01               	movlw	1
  5305  00061C  6E28               	movwf	TFT_DrawLine@ystep^0,c
  5306                           
  5307                           ;TFT.c: 120: } else {
  5308  00061E  EF51  F003         	goto	l2381
  5309  000622                     l148:
  5310                           
  5311                           ;TFT.c: 121: ystep = -1;
  5312  000622  6828               	setf	TFT_DrawLine@ystep^0,c
  5313  000624  6829               	setf	(TFT_DrawLine@ystep+1)^0,c
  5314  000626  EF51  F003         	goto	l2381
  5315  00062A                     l2367:
  5316                           
  5317                           ;TFT.c: 125: if(steep) {
  5318  00062A  502C               	movf	TFT_DrawLine@steep^0,w,c
  5319  00062C  102D               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  5320  00062E  B4D8               	btfsc	status,2,c
  5321  000630  EF1C  F003         	goto	u1281
  5322  000634  EF1E  F003         	goto	u1280
  5323  000638                     u1281:
  5324  000638  EF2E  F003         	goto	l2371
  5325  00063C                     u1280:
  5326  00063C                     
  5327                           ;TFT.c: 126: TFT_DrawPixel(y0, x0, color);
  5328  00063C  C013  F00B         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  5329  000640  C014  F00C         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  5330  000644  C011  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  5331  000648  C012  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  5332  00064C  C019  F00F         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  5333  000650  C01A  F010         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  5334  000654  EC4B  F00A         	call	_TFT_DrawPixel	;wreg free
  5335                           
  5336                           ;TFT.c: 127: } else {
  5337  000658  EF3C  F003         	goto	l2373
  5338  00065C                     l2371:
  5339                           
  5340                           ;TFT.c: 128: TFT_DrawPixel(x0, y0, color);
  5341  00065C  C011  F00B         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  5342  000660  C012  F00C         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  5343  000664  C013  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  5344  000668  C014  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  5345  00066C  C019  F00F         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  5346  000670  C01A  F010         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  5347  000674  EC4B  F00A         	call	_TFT_DrawPixel	;wreg free
  5348  000678                     l2373:
  5349                           
  5350                           ;TFT.c: 129: };TFT.c: 130: err -= dy;
  5351  000678  5026               	movf	TFT_DrawLine@dy^0,w,c
  5352  00067A  5E2A               	subwf	TFT_DrawLine@err^0,f,c
  5353  00067C  5027               	movf	(TFT_DrawLine@dy+1)^0,w,c
  5354  00067E  5A2B               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  5355  000680                     
  5356                           ;TFT.c: 131: if(err < 0) {
  5357  000680  BE2B               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  5358  000682  EF47  F003         	goto	u1290
  5359  000686  EF45  F003         	goto	u1291
  5360  00068A                     u1291:
  5361  00068A  EF4F  F003         	goto	l2379
  5362  00068E                     u1290:
  5363  00068E                     
  5364                           ;TFT.c: 132: y0 += ystep;
  5365  00068E  5028               	movf	TFT_DrawLine@ystep^0,w,c
  5366  000690  2613               	addwf	TFT_DrawLine@y0^0,f,c
  5367  000692  5029               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  5368  000694  2214               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  5369                           
  5370                           ;TFT.c: 133: err += dx;
  5371  000696  502E               	movf	TFT_DrawLine@dx^0,w,c
  5372  000698  262A               	addwf	TFT_DrawLine@err^0,f,c
  5373  00069A  502F               	movf	(TFT_DrawLine@dx+1)^0,w,c
  5374  00069C  222B               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  5375  00069E                     l2379:
  5376  00069E  4A11               	infsnz	TFT_DrawLine@x0^0,f,c
  5377  0006A0  2A12               	incf	(TFT_DrawLine@x0+1)^0,f,c
  5378  0006A2                     l2381:
  5379  0006A2  5011               	movf	TFT_DrawLine@x0^0,w,c
  5380  0006A4  5C15               	subwf	TFT_DrawLine@x1^0,w,c
  5381  0006A6  5016               	movf	(TFT_DrawLine@x1+1)^0,w,c
  5382  0006A8  0A80               	xorlw	128
  5383  0006AA  6E1B               	movwf	??_TFT_DrawLine^0,c
  5384  0006AC  5012               	movf	(TFT_DrawLine@x0+1)^0,w,c
  5385  0006AE  0A80               	xorlw	128
  5386  0006B0  581B               	subwfb	??_TFT_DrawLine^0,w,c
  5387  0006B2  B0D8               	btfsc	status,0,c
  5388  0006B4  EF5E  F003         	goto	u1301
  5389  0006B8  EF60  F003         	goto	u1300
  5390  0006BC                     u1301:
  5391  0006BC  EF15  F003         	goto	l2367
  5392  0006C0                     u1300:
  5393  0006C0  0012               	return		;funcret
  5394  0006C2                     __end_of_TFT_DrawLine:
  5395                           	opt callstack 0
  5396                           
  5397 ;; *************** function _abs *****************
  5398 ;; Defined at:
  5399 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  a               2    2[COMRAM] int 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  2    2[COMRAM] int 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5413 ;;      Params:         2       0       0       0       0       0       0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5415 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5416 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5417 ;;Total ram usage:        4 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    2
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_TFT_DrawLine
  5424 ;;		_Ecg_ProcessHeartbeat
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text22
  5429  001584                     __ptext22:
  5430                           	opt callstack 0
  5431  001584                     _abs:
  5432                           	opt callstack 24
  5433  001584  BE04               	btfsc	(abs@a+1)^0,7,c
  5434  001586  EFC9  F00A         	goto	u1100
  5435  00158A  EFC7  F00A         	goto	u1101
  5436  00158E                     u1101:
  5437  00158E  EFD7  F00A         	goto	l1135
  5438  001592                     u1100:
  5439  001592  C003  F005         	movff	abs@a,??_abs
  5440  001596  C004  F006         	movff	abs@a+1,??_abs+1
  5441  00159A  1E05               	comf	??_abs^0,f,c
  5442  00159C  1E06               	comf	(??_abs+1)^0,f,c
  5443  00159E  4A05               	infsnz	??_abs^0,f,c
  5444  0015A0  2A06               	incf	(??_abs+1)^0,f,c
  5445  0015A2  C005  F003         	movff	??_abs,?_abs
  5446  0015A6  C006  F004         	movff	??_abs+1,?_abs+1
  5447  0015AA  EFDB  F00A         	goto	l1136
  5448  0015AE                     l1135:
  5449  0015AE  C003  F003         	movff	abs@a,?_abs
  5450  0015B2  C004  F004         	movff	abs@a+1,?_abs+1
  5451  0015B6                     l1136:
  5452  0015B6  0012               	return		;funcret
  5453  0015B8                     __end_of_abs:
  5454                           	opt callstack 0
  5455                           
  5456 ;; *************** function ___awdiv *****************
  5457 ;; Defined at:
  5458 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  dividend        2    2[COMRAM] int 
  5461 ;;  divisor         2    4[COMRAM] int 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  quotient        2    8[COMRAM] int 
  5464 ;;  sign            1    7[COMRAM] unsigned char 
  5465 ;;  counter         1    6[COMRAM] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  2    2[COMRAM] int 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5475 ;;      Params:         4       0       0       0       0       0       0       0       0
  5476 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5478 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5479 ;;Total ram usage:        8 bytes
  5480 ;; Hardware stack levels used:    1
  5481 ;; Hardware stack levels required when called:    2
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_TFT_DrawLine
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text23
  5490  000CC8                     __ptext23:
  5491                           	opt callstack 0
  5492  000CC8                     ___awdiv:
  5493                           	opt callstack 23
  5494  000CC8  0E00               	movlw	0
  5495  000CCA  6E08               	movwf	___awdiv@sign^0,c
  5496  000CCC  BE06               	btfsc	(___awdiv@divisor+1)^0,7,c
  5497  000CCE  EF6D  F006         	goto	u1170
  5498  000CD2  EF6B  F006         	goto	u1171
  5499  000CD6                     u1171:
  5500  000CD6  EF73  F006         	goto	l2309
  5501  000CDA                     u1170:
  5502  000CDA  6C05               	negf	___awdiv@divisor^0,c
  5503  000CDC  1E06               	comf	(___awdiv@divisor+1)^0,f,c
  5504  000CDE  B0D8               	btfsc	status,0,c
  5505  000CE0  2A06               	incf	(___awdiv@divisor+1)^0,f,c
  5506  000CE2  0E01               	movlw	1
  5507  000CE4  6E08               	movwf	___awdiv@sign^0,c
  5508  000CE6                     l2309:
  5509  000CE6  BE04               	btfsc	(___awdiv@dividend+1)^0,7,c
  5510  000CE8  EF7A  F006         	goto	u1180
  5511  000CEC  EF78  F006         	goto	u1181
  5512  000CF0                     u1181:
  5513  000CF0  EF80  F006         	goto	l2315
  5514  000CF4                     u1180:
  5515  000CF4  6C03               	negf	___awdiv@dividend^0,c
  5516  000CF6  1E04               	comf	(___awdiv@dividend+1)^0,f,c
  5517  000CF8  B0D8               	btfsc	status,0,c
  5518  000CFA  2A04               	incf	(___awdiv@dividend+1)^0,f,c
  5519  000CFC  0E01               	movlw	1
  5520  000CFE  1A08               	xorwf	___awdiv@sign^0,f,c
  5521  000D00                     l2315:
  5522  000D00  0E00               	movlw	0
  5523  000D02  6E0A               	movwf	(___awdiv@quotient+1)^0,c
  5524  000D04  0E00               	movlw	0
  5525  000D06  6E09               	movwf	___awdiv@quotient^0,c
  5526  000D08  5005               	movf	___awdiv@divisor^0,w,c
  5527  000D0A  1006               	iorwf	(___awdiv@divisor+1)^0,w,c
  5528  000D0C  B4D8               	btfsc	status,2,c
  5529  000D0E  EF8B  F006         	goto	u1191
  5530  000D12  EF8D  F006         	goto	u1190
  5531  000D16                     u1191:
  5532  000D16  EFB5  F006         	goto	l2337
  5533  000D1A                     u1190:
  5534  000D1A  0E01               	movlw	1
  5535  000D1C  6E07               	movwf	___awdiv@counter^0,c
  5536  000D1E  EF95  F006         	goto	l2323
  5537  000D22                     l2321:
  5538  000D22  90D8               	bcf	status,0,c
  5539  000D24  3605               	rlcf	___awdiv@divisor^0,f,c
  5540  000D26  3606               	rlcf	(___awdiv@divisor+1)^0,f,c
  5541  000D28  2A07               	incf	___awdiv@counter^0,f,c
  5542  000D2A                     l2323:
  5543  000D2A  AE06               	btfss	(___awdiv@divisor+1)^0,7,c
  5544  000D2C  EF9A  F006         	goto	u1201
  5545  000D30  EF9C  F006         	goto	u1200
  5546  000D34                     u1201:
  5547  000D34  EF91  F006         	goto	l2321
  5548  000D38                     u1200:
  5549  000D38                     l2325:
  5550  000D38  90D8               	bcf	status,0,c
  5551  000D3A  3609               	rlcf	___awdiv@quotient^0,f,c
  5552  000D3C  360A               	rlcf	(___awdiv@quotient+1)^0,f,c
  5553  000D3E  5005               	movf	___awdiv@divisor^0,w,c
  5554  000D40  5C03               	subwf	___awdiv@dividend^0,w,c
  5555  000D42  5006               	movf	(___awdiv@divisor+1)^0,w,c
  5556  000D44  5804               	subwfb	(___awdiv@dividend+1)^0,w,c
  5557  000D46  A0D8               	btfss	status,0,c
  5558  000D48  EFA8  F006         	goto	u1211
  5559  000D4C  EFAA  F006         	goto	u1210
  5560  000D50                     u1211:
  5561  000D50  EFAF  F006         	goto	l2333
  5562  000D54                     u1210:
  5563  000D54  5005               	movf	___awdiv@divisor^0,w,c
  5564  000D56  5E03               	subwf	___awdiv@dividend^0,f,c
  5565  000D58  5006               	movf	(___awdiv@divisor+1)^0,w,c
  5566  000D5A  5A04               	subwfb	(___awdiv@dividend+1)^0,f,c
  5567  000D5C  8009               	bsf	___awdiv@quotient^0,0,c
  5568  000D5E                     l2333:
  5569  000D5E  90D8               	bcf	status,0,c
  5570  000D60  3206               	rrcf	(___awdiv@divisor+1)^0,f,c
  5571  000D62  3205               	rrcf	___awdiv@divisor^0,f,c
  5572  000D64  2E07               	decfsz	___awdiv@counter^0,f,c
  5573  000D66  EF9C  F006         	goto	l2325
  5574  000D6A                     l2337:
  5575  000D6A  5008               	movf	___awdiv@sign^0,w,c
  5576  000D6C  B4D8               	btfsc	status,2,c
  5577  000D6E  EFBB  F006         	goto	u1221
  5578  000D72  EFBD  F006         	goto	u1220
  5579  000D76                     u1221:
  5580  000D76  EFC1  F006         	goto	l2341
  5581  000D7A                     u1220:
  5582  000D7A  6C09               	negf	___awdiv@quotient^0,c
  5583  000D7C  1E0A               	comf	(___awdiv@quotient+1)^0,f,c
  5584  000D7E  B0D8               	btfsc	status,0,c
  5585  000D80  2A0A               	incf	(___awdiv@quotient+1)^0,f,c
  5586  000D82                     l2341:
  5587  000D82  C009  F003         	movff	___awdiv@quotient,?___awdiv
  5588  000D86  C00A  F004         	movff	___awdiv@quotient+1,?___awdiv+1
  5589  000D8A  0012               	return		;funcret
  5590  000D8C                     __end_of___awdiv:
  5591                           	opt callstack 0
  5592                           
  5593 ;; *************** function _Ecg_Background_Leads_Failure *****************
  5594 ;; Defined at:
  5595 ;;		line 188 in file "ecg.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5612 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5613 ;;Total ram usage:        0 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    8
  5616 ;; This function calls:
  5617 ;;		_TFT_DrawString
  5618 ;;		_TFT_FillScreen
  5619 ;; This function is called by:
  5620 ;;		_Ecg_Init
  5621 ;;		_Ecg_ProcessEcg
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text24
  5626  001512                     __ptext24:
  5627                           	opt callstack 0
  5628  001512                     _Ecg_Background_Leads_Failure:
  5629                           	opt callstack 19
  5630  001512                     
  5631                           ;ecg.c: 189: TFT_FillScreen(0x0000);
  5632  001512  0E00               	movlw	0
  5633  001514  6E1B               	movwf	(TFT_FillScreen@color+1)^0,c
  5634  001516  0E00               	movlw	0
  5635  001518  6E1A               	movwf	TFT_FillScreen@color^0,c
  5636  00151A  EC06  F00A         	call	_TFT_FillScreen	;wreg free
  5637  00151E                     
  5638                           ;ecg.c: 190: TFT_DrawString(70, 362, "*** Collegare elettrodi ***", 0xFFFF, 0x0000, 2);
  5639  00151E  0E00               	movlw	0
  5640  001520  6E3E               	movwf	(TFT_DrawString@x+1)^0,c
  5641  001522  0E46               	movlw	70
  5642  001524  6E3D               	movwf	TFT_DrawString@x^0,c
  5643  001526  0E01               	movlw	1
  5644  001528  6E40               	movwf	(TFT_DrawString@y+1)^0,c
  5645  00152A  0E6A               	movlw	106
  5646  00152C  6E3F               	movwf	TFT_DrawString@y^0,c
  5647  00152E  0ED3               	movlw	low STR_3
  5648  001530  6E41               	movwf	TFT_DrawString@str^0,c
  5649  001532  0E5F               	movlw	high STR_3
  5650  001534  6E42               	movwf	(TFT_DrawString@str+1)^0,c
  5651  001536  0EFF               	movlw	255
  5652  001538  6E44               	movwf	(TFT_DrawString@color+1)^0,c
  5653  00153A  6843               	setf	TFT_DrawString@color^0,c
  5654  00153C  0E00               	movlw	0
  5655  00153E  6E46               	movwf	(TFT_DrawString@bg+1)^0,c
  5656  001540  0E00               	movlw	0
  5657  001542  6E45               	movwf	TFT_DrawString@bg^0,c
  5658  001544  0E02               	movlw	2
  5659  001546  6E47               	movwf	TFT_DrawString@size^0,c
  5660  001548  EC79  F007         	call	_TFT_DrawString	;wreg free
  5661  00154C  0012               	return		;funcret
  5662  00154E                     __end_of_Ecg_Background_Leads_Failure:
  5663                           	opt callstack 0
  5664                           
  5665 ;; *************** function _TFT_FillScreen *****************
  5666 ;; Defined at:
  5667 ;;		line 182 in file "TFT.c"
  5668 ;; Parameters:    Size  Location     Type
  5669 ;;  color           2   25[COMRAM] unsigned int 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;		None
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5681 ;;      Params:         2       0       0       0       0       0       0       0       0
  5682 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5684 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5685 ;;Total ram usage:        2 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    4
  5688 ;; This function calls:
  5689 ;;		_TFT_Flood
  5690 ;;		_TFT_WriteRegister
  5691 ;; This function is called by:
  5692 ;;		_TFT_Init
  5693 ;;		_Ecg_Background_Leads_Ok
  5694 ;;		_Ecg_Background_Leads_Failure
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text25
  5699  00140C                     __ptext25:
  5700                           	opt callstack 0
  5701  00140C                     _TFT_FillScreen:
  5702                           	opt callstack 22
  5703  00140C                     
  5704                           ;TFT.c: 183: TFT_WriteRegister(0x0200, 0);
  5705  00140C  0E02               	movlw	2
  5706  00140E  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5707  001410  0E00               	movlw	0
  5708  001412  6E03               	movwf	TFT_WriteRegister@reg^0,c
  5709  001414  0E00               	movlw	0
  5710  001416  6E06               	movwf	(TFT_WriteRegister@data+1)^0,c
  5711  001418  0E00               	movlw	0
  5712  00141A  6E05               	movwf	TFT_WriteRegister@data^0,c
  5713  00141C  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  5714                           
  5715                           ;TFT.c: 184: TFT_WriteRegister(0x0201, 0);
  5716  001420  0E02               	movlw	2
  5717  001422  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5718  001424  0E01               	movlw	1
  5719  001426  6E03               	movwf	TFT_WriteRegister@reg^0,c
  5720  001428  0E00               	movlw	0
  5721  00142A  6E06               	movwf	(TFT_WriteRegister@data+1)^0,c
  5722  00142C  0E00               	movlw	0
  5723  00142E  6E05               	movwf	TFT_WriteRegister@data^0,c
  5724  001430  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  5725  001434                     
  5726                           ;TFT.c: 185: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  5727  001434  C01A  F00B         	movff	TFT_FillScreen@color,TFT_Flood@color
  5728  001438  C01B  F00C         	movff	TFT_FillScreen@color+1,TFT_Flood@color+1
  5729  00143C  0E00               	movlw	0
  5730  00143E  6E0D               	movwf	TFT_Flood@len^0,c
  5731  001440  0E77               	movlw	119
  5732  001442  6E0E               	movwf	(TFT_Flood@len+1)^0,c
  5733  001444  0E01               	movlw	1
  5734  001446  6E0F               	movwf	(TFT_Flood@len+2)^0,c
  5735  001448  0E00               	movlw	0
  5736  00144A  6E10               	movwf	(TFT_Flood@len+3)^0,c
  5737  00144C  EC61  F003         	call	_TFT_Flood	;wreg free
  5738  001450  0012               	return		;funcret
  5739  001452                     __end_of_TFT_FillScreen:
  5740                           	opt callstack 0
  5741                           
  5742 ;; *************** function _TFT_DrawString *****************
  5743 ;; Defined at:
  5744 ;;		line 213 in file "TFT.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  x               2   60[COMRAM] unsigned int 
  5747 ;;  y               2   62[COMRAM] unsigned int 
  5748 ;;  str             2   64[COMRAM] PTR const unsigned char 
  5749 ;;		 -> EUSART_RX.line(64), EUSART_RX(132), STR_3(28), STR_2(11), 
  5750 ;;		 -> Ecg_ProcessHeartRate@heartrateString(5), 
  5751 ;;  color           2   66[COMRAM] unsigned int 
  5752 ;;  bg              2   68[COMRAM] unsigned int 
  5753 ;;  size            1   70[COMRAM] unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;		None
  5756 ;; Return value:  Size  Location     Type
  5757 ;;                  1    wreg      void 
  5758 ;; Registers used:
  5759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5765 ;;      Params:        11       0       0       0       0       0       0       0       0
  5766 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5768 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5769 ;;Total ram usage:       11 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    7
  5772 ;; This function calls:
  5773 ;;		_TFT_DrawChar
  5774 ;; This function is called by:
  5775 ;;		_Ecg_ProcessHeartRate
  5776 ;;		_Ecg_Background_Leads_Ok
  5777 ;;		_Ecg_Background_Leads_Failure
  5778 ;;		_EUSART_RX_Process
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text26
  5783  000EF2                     __ptext26:
  5784                           	opt callstack 0
  5785  000EF2                     _TFT_DrawString:
  5786                           	opt callstack 20
  5787  000EF2                     
  5788                           ;TFT.c: 214: while(*str) {
  5789  000EF2  EFA8  F007         	goto	l2391
  5790  000EF6                     l2385:
  5791                           
  5792                           ;TFT.c: 215: TFT_DrawChar(x, y, *str, color, bg, size);
  5793  000EF6  C03D  F028         	movff	TFT_DrawString@x,TFT_DrawChar@x
  5794  000EFA  C03E  F029         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  5795  000EFE  C03F  F02A         	movff	TFT_DrawString@y,TFT_DrawChar@y
  5796  000F02  C040  F02B         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  5797  000F06  C041  FFF6         	movff	TFT_DrawString@str,tblptrl
  5798  000F0A  C042  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  5799  000F0E  6AF8               	clrf	tblptru,c
  5800  000F10  0E07               	movlw	(high __ramtop+-1)
  5801  000F12  64F7               	cpfsgt	tblptrh,c
  5802  000F14  D003               	bra	u1317
  5803  000F16  0008               	tblrd		*
  5804  000F18  50F5               	movf	tablat,w,c
  5805  000F1A  D005               	bra	u1310
  5806  000F1C                     u1317:
  5807  000F1C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5808  000F20  CFF7 FFEA          	movff	tblptrh,fsr0h
  5809  000F24  50EF               	movf	indf0,w,c
  5810  000F26                     u1310:
  5811  000F26  6E2C               	movwf	TFT_DrawChar@c^0,c
  5812  000F28  C043  F02D         	movff	TFT_DrawString@color,TFT_DrawChar@color
  5813  000F2C  C044  F02E         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  5814  000F30  C045  F02F         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  5815  000F34  C046  F030         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  5816  000F38  C047  F031         	movff	TFT_DrawString@size,TFT_DrawChar@size
  5817  000F3C  EC73  F001         	call	_TFT_DrawChar	;wreg free
  5818  000F40                     
  5819                           ;TFT.c: 216: y -= (6 * size);
  5820  000F40  5047               	movf	TFT_DrawString@size^0,w,c
  5821  000F42  0D06               	mullw	6
  5822  000F44  50F3               	movf	243,w,c
  5823  000F46  5E3F               	subwf	TFT_DrawString@y^0,f,c
  5824  000F48  50F4               	movf	244,w,c
  5825  000F4A  5A40               	subwfb	(TFT_DrawString@y+1)^0,f,c
  5826  000F4C                     
  5827                           ;TFT.c: 217: str++;
  5828  000F4C  4A41               	infsnz	TFT_DrawString@str^0,f,c
  5829  000F4E  2A42               	incf	(TFT_DrawString@str+1)^0,f,c
  5830  000F50                     l2391:
  5831  000F50  C041  FFF6         	movff	TFT_DrawString@str,tblptrl
  5832  000F54  C042  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  5833  000F58  6AF8               	clrf	tblptru,c
  5834  000F5A  0E07               	movlw	(high __ramtop+-1)
  5835  000F5C  64F7               	cpfsgt	tblptrh,c
  5836  000F5E  D003               	bra	u1327
  5837  000F60  0008               	tblrd		*
  5838  000F62  50F5               	movf	tablat,w,c
  5839  000F64  D005               	bra	u1320
  5840  000F66                     u1327:
  5841  000F66  CFF6 FFE9          	movff	tblptrl,fsr0l
  5842  000F6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5843  000F6E  50EF               	movf	indf0,w,c
  5844  000F70                     u1320:
  5845  000F70  0900               	iorlw	0
  5846  000F72  A4D8               	btfss	status,2,c
  5847  000F74  EFBE  F007         	goto	u1331
  5848  000F78  EFC0  F007         	goto	u1330
  5849  000F7C                     u1331:
  5850  000F7C  EF7B  F007         	goto	l2385
  5851  000F80                     u1330:
  5852  000F80  0012               	return		;funcret
  5853  000F82                     __end_of_TFT_DrawString:
  5854                           	opt callstack 0
  5855                           
  5856 ;; *************** function _TFT_DrawChar *****************
  5857 ;; Defined at:
  5858 ;;		line 192 in file "TFT.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  x               2   39[COMRAM] unsigned int 
  5861 ;;  y               2   41[COMRAM] unsigned int 
  5862 ;;  c               1   43[COMRAM] unsigned char 
  5863 ;;  color           2   44[COMRAM] unsigned int 
  5864 ;;  bg              2   46[COMRAM] unsigned int 
  5865 ;;  size            1   48[COMRAM] unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  j               1   58[COMRAM] char 
  5868 ;;  line            1   53[COMRAM] unsigned char 
  5869 ;;  i               1   59[COMRAM] char 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1    wreg      void 
  5872 ;; Registers used:
  5873 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5879 ;;      Params:        10       0       0       0       0       0       0       0       0
  5880 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5881 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5882 ;;      Totals:        21       0       0       0       0       0       0       0       0
  5883 ;;Total ram usage:       21 bytes
  5884 ;; Hardware stack levels used:    1
  5885 ;; Hardware stack levels required when called:    6
  5886 ;; This function calls:
  5887 ;;		_TFT_DrawFillRect
  5888 ;;		_TFT_DrawPixel
  5889 ;;		___wmul
  5890 ;; This function is called by:
  5891 ;;		_TFT_DrawString
  5892 ;;		_EUSART_RX_Process
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	text27
  5897  0002E6                     __ptext27:
  5898                           	opt callstack 0
  5899  0002E6                     _TFT_DrawChar:
  5900                           	opt callstack 20
  5901  0002E6                     
  5902                           ;TFT.c: 193: for(int8_t i=0; i<5; i++ ) {
  5903  0002E6  0E00               	movlw	0
  5904  0002E8  6E3C               	movwf	TFT_DrawChar@i^0,c
  5905  0002EA                     l2269:
  5906                           
  5907                           ;TFT.c: 194: uint8_t line = TFT_Font[c * 5 + i];
  5908  0002EA  C03C  F032         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  5909  0002EE  6A33               	clrf	(??_TFT_DrawChar+1)^0,c
  5910  0002F0  BE32               	btfsc	??_TFT_DrawChar^0,7,c
  5911  0002F2  0633               	decf	(??_TFT_DrawChar+1)^0,f,c
  5912  0002F4  502C               	movf	TFT_DrawChar@c^0,w,c
  5913  0002F6  0D05               	mullw	5
  5914  0002F8  0EBF               	movlw	low _TFT_Font
  5915  0002FA  6E34               	movwf	(??_TFT_DrawChar+2)^0,c
  5916  0002FC  0E59               	movlw	high _TFT_Font
  5917  0002FE  6E35               	movwf	(??_TFT_DrawChar+3)^0,c
  5918  000300  50F3               	movf	243,w,c
  5919  000302  2634               	addwf	(??_TFT_DrawChar+2)^0,f,c
  5920  000304  50F4               	movf	244,w,c
  5921  000306  2235               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  5922  000308  5032               	movf	??_TFT_DrawChar^0,w,c
  5923  00030A  2634               	addwf	(??_TFT_DrawChar+2)^0,f,c
  5924  00030C  5033               	movf	(??_TFT_DrawChar+1)^0,w,c
  5925  00030E  2235               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  5926  000310  C034  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  5927  000314  C035  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  5928  000318                     	if	0	;tblptru may be non-zero
  5929  000318                     	endif
  5930  000318                     	if	0	;tblptru may be non-zero
  5931  000318                     	endif
  5932  000318  0008               	tblrd		*
  5933  00031A  CFF5 F036          	movff	tablat,TFT_DrawChar@line
  5934  00031E                     
  5935                           ;TFT.c: 195: for(int8_t j=0; j<8; j++, line >>= 1) {
  5936  00031E  0E00               	movlw	0
  5937  000320  6E3B               	movwf	TFT_DrawChar@j^0,c
  5938  000322                     l187:
  5939                           
  5940                           ;TFT.c: 196: if(line & 1) {
  5941  000322  A036               	btfss	TFT_DrawChar@line^0,0,c
  5942  000324  EF96  F001         	goto	u1111
  5943  000328  EF98  F001         	goto	u1110
  5944  00032C                     u1111:
  5945  00032C  EFF1  F001         	goto	l2283
  5946  000330                     u1110:
  5947  000330                     
  5948                           ;TFT.c: 197: if(size == 1) {
  5949  000330  0431               	decf	TFT_DrawChar@size^0,w,c
  5950  000332  A4D8               	btfss	status,2,c
  5951  000334  EF9E  F001         	goto	u1121
  5952  000338  EFA0  F001         	goto	u1120
  5953  00033C                     u1121:
  5954  00033C  EFBB  F001         	goto	l2281
  5955  000340                     u1120:
  5956  000340                     
  5957                           ;TFT.c: 198: TFT_DrawPixel((x + j), (y - i), color);
  5958  000340  5028               	movf	TFT_DrawChar@x^0,w,c
  5959  000342  243B               	addwf	TFT_DrawChar@j^0,w,c
  5960  000344  6E0B               	movwf	TFT_DrawPixel@x^0,c
  5961  000346  0E00               	movlw	0
  5962  000348  BE3B               	btfsc	TFT_DrawChar@j^0,7,c
  5963  00034A  0EFF               	movlw	255
  5964  00034C  2029               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  5965  00034E  6E0C               	movwf	(TFT_DrawPixel@x+1)^0,c
  5966  000350  C03C  F032         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  5967  000354  6A33               	clrf	(??_TFT_DrawChar+1)^0,c
  5968  000356  BE32               	btfsc	??_TFT_DrawChar^0,7,c
  5969  000358  0633               	decf	(??_TFT_DrawChar+1)^0,f,c
  5970  00035A  5032               	movf	??_TFT_DrawChar^0,w,c
  5971  00035C  5C2A               	subwf	TFT_DrawChar@y^0,w,c
  5972  00035E  6E0D               	movwf	TFT_DrawPixel@y^0,c
  5973  000360  5033               	movf	(??_TFT_DrawChar+1)^0,w,c
  5974  000362  582B               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  5975  000364  6E0E               	movwf	(TFT_DrawPixel@y+1)^0,c
  5976  000366  C02D  F00F         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  5977  00036A  C02E  F010         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  5978  00036E  EC4B  F00A         	call	_TFT_DrawPixel	;wreg free
  5979                           
  5980                           ;TFT.c: 199: } else {
  5981  000372  EF54  F002         	goto	l2291
  5982  000376                     l2281:
  5983                           
  5984                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  5985  000376  503B               	movf	TFT_DrawChar@j^0,w,c
  5986  000378  6E03               	movwf	___wmul@multiplier^0,c
  5987  00037A  6A04               	clrf	(___wmul@multiplier+1)^0,c
  5988  00037C  BE03               	btfsc	___wmul@multiplier^0,7,c
  5989  00037E  0604               	decf	(___wmul@multiplier+1)^0,f,c
  5990  000380  C031  F005         	movff	TFT_DrawChar@size,___wmul@multiplicand
  5991  000384  6A06               	clrf	(___wmul@multiplicand+1)^0,c
  5992  000386  EC0D  F00B         	call	___wmul	;wreg free
  5993  00038A  5028               	movf	TFT_DrawChar@x^0,w,c
  5994  00038C  2403               	addwf	?___wmul^0,w,c
  5995  00038E  6E37               	movwf	_TFT_DrawChar$1863^0,c
  5996  000390  5029               	movf	(TFT_DrawChar@x+1)^0,w,c
  5997  000392  2004               	addwfc	(?___wmul+1)^0,w,c
  5998  000394  6E38               	movwf	(_TFT_DrawChar$1863+1)^0,c
  5999                           
  6000                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  6001  000396  503C               	movf	TFT_DrawChar@i^0,w,c
  6002  000398  6E03               	movwf	___wmul@multiplier^0,c
  6003  00039A  6A04               	clrf	(___wmul@multiplier+1)^0,c
  6004  00039C  BE03               	btfsc	___wmul@multiplier^0,7,c
  6005  00039E  0604               	decf	(___wmul@multiplier+1)^0,f,c
  6006  0003A0  C031  F005         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6007  0003A4  6A06               	clrf	(___wmul@multiplicand+1)^0,c
  6008  0003A6  EC0D  F00B         	call	___wmul	;wreg free
  6009  0003AA  5003               	movf	?___wmul^0,w,c
  6010  0003AC  5C2A               	subwf	TFT_DrawChar@y^0,w,c
  6011  0003AE  6E39               	movwf	_TFT_DrawChar$1864^0,c
  6012  0003B0  5004               	movf	(?___wmul+1)^0,w,c
  6013  0003B2  582B               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  6014  0003B4  6E3A               	movwf	(_TFT_DrawChar$1864+1)^0,c
  6015                           
  6016                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  6017  0003B6  C037  F01A         	movff	_TFT_DrawChar$1863,TFT_DrawFillRect@x
  6018  0003BA  C038  F01B         	movff	_TFT_DrawChar$1863+1,TFT_DrawFillRect@x+1
  6019  0003BE  C039  F01C         	movff	_TFT_DrawChar$1864,TFT_DrawFillRect@y
  6020  0003C2  C03A  F01D         	movff	_TFT_DrawChar$1864+1,TFT_DrawFillRect@y+1
  6021  0003C6  C031  F01E         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6022  0003CA  6A1F               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6023  0003CC  C031  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6024  0003D0  6A21               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6025  0003D2  C02D  F022         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  6026  0003D6  C02E  F023         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  6027  0003DA  EC76  F008         	call	_TFT_DrawFillRect	;wreg free
  6028  0003DE  EF54  F002         	goto	l2291
  6029  0003E2                     l2283:
  6030  0003E2  502D               	movf	TFT_DrawChar@color^0,w,c
  6031  0003E4  182F               	xorwf	TFT_DrawChar@bg^0,w,c
  6032  0003E6  E109               	bnz	u1130
  6033  0003E8  502E               	movf	(TFT_DrawChar@color+1)^0,w,c
  6034  0003EA  1830               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  6035  0003EC  B4D8               	btfsc	status,2,c
  6036  0003EE  EFFB  F001         	goto	u1131
  6037  0003F2  EFFD  F001         	goto	u1130
  6038  0003F6                     u1131:
  6039  0003F6  EF54  F002         	goto	l2291
  6040  0003FA                     u1130:
  6041  0003FA                     
  6042                           ;TFT.c: 203: if(size == 1) {
  6043  0003FA  0431               	decf	TFT_DrawChar@size^0,w,c
  6044  0003FC  A4D8               	btfss	status,2,c
  6045  0003FE  EF03  F002         	goto	u1141
  6046  000402  EF05  F002         	goto	u1140
  6047  000406                     u1141:
  6048  000406  EF20  F002         	goto	l2289
  6049  00040A                     u1140:
  6050  00040A                     
  6051                           ;TFT.c: 204: TFT_DrawPixel((x + j), (y - i), bg);
  6052  00040A  5028               	movf	TFT_DrawChar@x^0,w,c
  6053  00040C  243B               	addwf	TFT_DrawChar@j^0,w,c
  6054  00040E  6E0B               	movwf	TFT_DrawPixel@x^0,c
  6055  000410  0E00               	movlw	0
  6056  000412  BE3B               	btfsc	TFT_DrawChar@j^0,7,c
  6057  000414  0EFF               	movlw	255
  6058  000416  2029               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6059  000418  6E0C               	movwf	(TFT_DrawPixel@x+1)^0,c
  6060  00041A  C03C  F032         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  6061  00041E  6A33               	clrf	(??_TFT_DrawChar+1)^0,c
  6062  000420  BE32               	btfsc	??_TFT_DrawChar^0,7,c
  6063  000422  0633               	decf	(??_TFT_DrawChar+1)^0,f,c
  6064  000424  5032               	movf	??_TFT_DrawChar^0,w,c
  6065  000426  5C2A               	subwf	TFT_DrawChar@y^0,w,c
  6066  000428  6E0D               	movwf	TFT_DrawPixel@y^0,c
  6067  00042A  5033               	movf	(??_TFT_DrawChar+1)^0,w,c
  6068  00042C  582B               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  6069  00042E  6E0E               	movwf	(TFT_DrawPixel@y+1)^0,c
  6070  000430  C02F  F00F         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  6071  000434  C030  F010         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  6072  000438  EC4B  F00A         	call	_TFT_DrawPixel	;wreg free
  6073                           
  6074                           ;TFT.c: 205: } else {
  6075  00043C  EF54  F002         	goto	l2291
  6076  000440                     l2289:
  6077                           
  6078                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  6079  000440  503B               	movf	TFT_DrawChar@j^0,w,c
  6080  000442  6E03               	movwf	___wmul@multiplier^0,c
  6081  000444  6A04               	clrf	(___wmul@multiplier+1)^0,c
  6082  000446  BE03               	btfsc	___wmul@multiplier^0,7,c
  6083  000448  0604               	decf	(___wmul@multiplier+1)^0,f,c
  6084  00044A  C031  F005         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6085  00044E  6A06               	clrf	(___wmul@multiplicand+1)^0,c
  6086  000450  EC0D  F00B         	call	___wmul	;wreg free
  6087  000454  5028               	movf	TFT_DrawChar@x^0,w,c
  6088  000456  2403               	addwf	?___wmul^0,w,c
  6089  000458  6E37               	movwf	_TFT_DrawChar$1863^0,c
  6090  00045A  5029               	movf	(TFT_DrawChar@x+1)^0,w,c
  6091  00045C  2004               	addwfc	(?___wmul+1)^0,w,c
  6092  00045E  6E38               	movwf	(_TFT_DrawChar$1863+1)^0,c
  6093                           
  6094                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  6095  000460  503C               	movf	TFT_DrawChar@i^0,w,c
  6096  000462  6E03               	movwf	___wmul@multiplier^0,c
  6097  000464  6A04               	clrf	(___wmul@multiplier+1)^0,c
  6098  000466  BE03               	btfsc	___wmul@multiplier^0,7,c
  6099  000468  0604               	decf	(___wmul@multiplier+1)^0,f,c
  6100  00046A  C031  F005         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6101  00046E  6A06               	clrf	(___wmul@multiplicand+1)^0,c
  6102  000470  EC0D  F00B         	call	___wmul	;wreg free
  6103  000474  5003               	movf	?___wmul^0,w,c
  6104  000476  5C2A               	subwf	TFT_DrawChar@y^0,w,c
  6105  000478  6E39               	movwf	_TFT_DrawChar$1864^0,c
  6106  00047A  5004               	movf	(?___wmul+1)^0,w,c
  6107  00047C  582B               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  6108  00047E  6E3A               	movwf	(_TFT_DrawChar$1864+1)^0,c
  6109                           
  6110                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  6111  000480  C037  F01A         	movff	_TFT_DrawChar$1863,TFT_DrawFillRect@x
  6112  000484  C038  F01B         	movff	_TFT_DrawChar$1863+1,TFT_DrawFillRect@x+1
  6113  000488  C039  F01C         	movff	_TFT_DrawChar$1864,TFT_DrawFillRect@y
  6114  00048C  C03A  F01D         	movff	_TFT_DrawChar$1864+1,TFT_DrawFillRect@y+1
  6115  000490  C031  F01E         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6116  000494  6A1F               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6117  000496  C031  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6118  00049A  6A21               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6119  00049C  C02F  F022         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  6120  0004A0  C030  F023         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  6121  0004A4  EC76  F008         	call	_TFT_DrawFillRect	;wreg free
  6122  0004A8                     l2291:
  6123  0004A8  2A3B               	incf	TFT_DrawChar@j^0,f,c
  6124  0004AA  90D8               	bcf	status,0,c
  6125  0004AC  3236               	rrcf	TFT_DrawChar@line^0,f,c
  6126  0004AE  503B               	movf	TFT_DrawChar@j^0,w,c
  6127  0004B0  0A80               	xorlw	128
  6128  0004B2  0F78               	addlw	-136
  6129  0004B4  A0D8               	btfss	status,0,c
  6130  0004B6  EF5F  F002         	goto	u1151
  6131  0004BA  EF61  F002         	goto	u1150
  6132  0004BE                     u1151:
  6133  0004BE  EF91  F001         	goto	l187
  6134  0004C2                     u1150:
  6135  0004C2  2A3C               	incf	TFT_DrawChar@i^0,f,c
  6136  0004C4  503C               	movf	TFT_DrawChar@i^0,w,c
  6137  0004C6  0A80               	xorlw	128
  6138  0004C8  0F7B               	addlw	-133
  6139  0004CA  A0D8               	btfss	status,0,c
  6140  0004CC  EF6A  F002         	goto	u1161
  6141  0004D0  EF6C  F002         	goto	u1160
  6142  0004D4                     u1161:
  6143  0004D4  EF75  F001         	goto	l2269
  6144  0004D8                     u1160:
  6145  0004D8  0012               	return		;funcret
  6146  0004DA                     __end_of_TFT_DrawChar:
  6147                           	opt callstack 0
  6148                           
  6149 ;; *************** function _TFT_DrawPixel *****************
  6150 ;; Defined at:
  6151 ;;		line 94 in file "TFT.c"
  6152 ;; Parameters:    Size  Location     Type
  6153 ;;  x               2   10[COMRAM] unsigned int 
  6154 ;;  y               2   12[COMRAM] unsigned int 
  6155 ;;  color           2   14[COMRAM] unsigned int 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, status,2, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6167 ;;      Params:         6       0       0       0       0       0       0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6170 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6171 ;;Total ram usage:        6 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    3
  6174 ;; This function calls:
  6175 ;;		_TFT_WriteRegister
  6176 ;; This function is called by:
  6177 ;;		_TFT_DrawLine
  6178 ;;		_TFT_DrawChar
  6179 ;;		_TFT_DrawBitmap
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text28
  6184  001496                     __ptext28:
  6185                           	opt callstack 0
  6186  001496                     _TFT_DrawPixel:
  6187                           	opt callstack 22
  6188  001496                     
  6189                           ;TFT.c: 95: TFT_WriteRegister(0x0200, x);
  6190  001496  0E02               	movlw	2
  6191  001498  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6192  00149A  0E00               	movlw	0
  6193  00149C  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6194  00149E  C00B  F005         	movff	TFT_DrawPixel@x,TFT_WriteRegister@data
  6195  0014A2  C00C  F006         	movff	TFT_DrawPixel@x+1,TFT_WriteRegister@data+1
  6196  0014A6  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6197                           
  6198                           ;TFT.c: 96: TFT_WriteRegister(0x0201, y);
  6199  0014AA  0E02               	movlw	2
  6200  0014AC  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6201  0014AE  0E01               	movlw	1
  6202  0014B0  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6203  0014B2  C00D  F005         	movff	TFT_DrawPixel@y,TFT_WriteRegister@data
  6204  0014B6  C00E  F006         	movff	TFT_DrawPixel@y+1,TFT_WriteRegister@data+1
  6205  0014BA  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6206                           
  6207                           ;TFT.c: 97: TFT_WriteRegister(0x0202, color);
  6208  0014BE  0E02               	movlw	2
  6209  0014C0  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6210  0014C2  0E02               	movlw	2
  6211  0014C4  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6212  0014C6  C00F  F005         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  6213  0014CA  C010  F006         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  6214  0014CE  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6215  0014D2  0012               	return		;funcret
  6216  0014D4                     __end_of_TFT_DrawPixel:
  6217                           	opt callstack 0
  6218                           
  6219 ;; *************** function _TFT_DrawFillRect *****************
  6220 ;; Defined at:
  6221 ;;		line 138 in file "TFT.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  x               2   25[COMRAM] unsigned int 
  6224 ;;  y               2   27[COMRAM] unsigned int 
  6225 ;;  w               2   29[COMRAM] unsigned int 
  6226 ;;  h               2   31[COMRAM] unsigned int 
  6227 ;;  color           2   33[COMRAM] unsigned int 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6239 ;;      Params:        10       0       0       0       0       0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6241 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6242 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6243 ;;Total ram usage:       14 bytes
  6244 ;; Hardware stack levels used:    1
  6245 ;; Hardware stack levels required when called:    5
  6246 ;; This function calls:
  6247 ;;		_TFT_Flood
  6248 ;;		_TFT_FullScreen
  6249 ;;		_TFT_SetAddrWindow
  6250 ;;		___wmul
  6251 ;; This function is called by:
  6252 ;;		_TFT_DrawChar
  6253 ;;		_Ecg_ProcessHeartbeat
  6254 ;;		_Ecg_Draw
  6255 ;;		_EUSART_RX_Process
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text29
  6260  0010EC                     __ptext29:
  6261                           	opt callstack 0
  6262  0010EC                     _TFT_DrawFillRect:
  6263                           	opt callstack 20
  6264  0010EC                     
  6265                           ;TFT.c: 139: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h -1));
  6266  0010EC  C01A  F00B         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  6267  0010F0  C01B  F00C         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  6268  0010F4  C01C  F00D         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  6269  0010F8  C01D  F00E         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  6270  0010FC  501E               	movf	TFT_DrawFillRect@w^0,w,c
  6271  0010FE  241A               	addwf	TFT_DrawFillRect@x^0,w,c
  6272  001100  6E24               	movwf	??_TFT_DrawFillRect^0,c
  6273  001102  501F               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  6274  001104  201B               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  6275  001106  6E25               	movwf	(??_TFT_DrawFillRect+1)^0,c
  6276  001108  0EFF               	movlw	255
  6277  00110A  2424               	addwf	??_TFT_DrawFillRect^0,w,c
  6278  00110C  6E0F               	movwf	TFT_SetAddrWindow@x2^0,c
  6279  00110E  0EFF               	movlw	255
  6280  001110  2025               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  6281  001112  6E10               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  6282  001114  5020               	movf	TFT_DrawFillRect@h^0,w,c
  6283  001116  241C               	addwf	TFT_DrawFillRect@y^0,w,c
  6284  001118  6E26               	movwf	(??_TFT_DrawFillRect+2)^0,c
  6285  00111A  5021               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  6286  00111C  201D               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  6287  00111E  6E27               	movwf	(??_TFT_DrawFillRect+3)^0,c
  6288  001120  0EFF               	movlw	255
  6289  001122  2426               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  6290  001124  6E11               	movwf	TFT_SetAddrWindow@y2^0,c
  6291  001126  0EFF               	movlw	255
  6292  001128  2027               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  6293  00112A  6E12               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  6294  00112C  ECC1  F007         	call	_TFT_SetAddrWindow	;wreg free
  6295  001130                     
  6296                           ;TFT.c: 140: TFT_Flood(color, (w * h));
  6297  001130  C022  F00B         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  6298  001134  C023  F00C         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  6299  001138  C01E  F003         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  6300  00113C  C01F  F004         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  6301  001140  C020  F005         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  6302  001144  C021  F006         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  6303  001148  EC0D  F00B         	call	___wmul	;wreg free
  6304  00114C  C003  F00D         	movff	?___wmul,TFT_Flood@len
  6305  001150  C004  F00E         	movff	?___wmul+1,TFT_Flood@len+1
  6306  001154  6A0F               	clrf	(TFT_Flood@len+2)^0,c
  6307  001156  6A10               	clrf	(TFT_Flood@len+3)^0,c
  6308  001158  EC61  F003         	call	_TFT_Flood	;wreg free
  6309  00115C                     
  6310                           ;TFT.c: 141: TFT_FullScreen();
  6311  00115C  EC20  F00B         	call	_TFT_FullScreen	;wreg free
  6312  001160  0012               	return		;funcret
  6313  001162                     __end_of_TFT_DrawFillRect:
  6314                           	opt callstack 0
  6315                           
  6316 ;; *************** function ___wmul *****************
  6317 ;; Defined at:
  6318 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  multiplier      2    2[COMRAM] unsigned int 
  6321 ;;  multiplicand    2    4[COMRAM] unsigned int 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  product         2    6[COMRAM] unsigned int 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  2    2[COMRAM] unsigned int 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0, prodl, prodh
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6333 ;;      Params:         4       0       0       0       0       0       0       0       0
  6334 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6336 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6337 ;;Total ram usage:        6 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    2
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_TFT_DrawFillRect
  6344 ;;		_TFT_DrawChar
  6345 ;;		_sprintf
  6346 ;;		_EUSART_RX_Process
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text30
  6351  00161A                     __ptext30:
  6352                           	opt callstack 0
  6353  00161A                     ___wmul:
  6354                           	opt callstack 24
  6355  00161A  5003               	movf	___wmul@multiplier^0,w,c
  6356  00161C  0205               	mulwf	___wmul@multiplicand^0,c
  6357  00161E  CFF3 F007          	movff	prodl,___wmul@product
  6358  001622  CFF4 F008          	movff	prodh,___wmul@product+1
  6359  001626  5003               	movf	___wmul@multiplier^0,w,c
  6360  001628  0206               	mulwf	(___wmul@multiplicand+1)^0,c
  6361  00162A  50F3               	movf	243,w,c
  6362  00162C  2608               	addwf	(___wmul@product+1)^0,f,c
  6363  00162E  5004               	movf	(___wmul@multiplier+1)^0,w,c
  6364  001630  0205               	mulwf	___wmul@multiplicand^0,c
  6365  001632  50F3               	movf	243,w,c
  6366  001634  2608               	addwf	(___wmul@product+1)^0,f,c
  6367  001636  C007  F003         	movff	___wmul@product,?___wmul
  6368  00163A  C008  F004         	movff	___wmul@product+1,?___wmul+1
  6369  00163E  0012               	return		;funcret
  6370  001640                     __end_of___wmul:
  6371                           	opt callstack 0
  6372                           
  6373 ;; *************** function _TFT_FullScreen *****************
  6374 ;; Defined at:
  6375 ;;		line 68 in file "TFT.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6392 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6393 ;;Total ram usage:        0 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    4
  6396 ;; This function calls:
  6397 ;;		_TFT_SetAddrWindow
  6398 ;; This function is called by:
  6399 ;;		_TFT_Init
  6400 ;;		_TFT_DrawFillRect
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text31
  6405  001640                     __ptext31:
  6406                           	opt callstack 0
  6407  001640                     _TFT_FullScreen:
  6408                           	opt callstack 20
  6409  001640                     
  6410                           ;TFT.c: 69: TFT_SetAddrWindow(0, 0, 240 - 1, 400 - 1);
  6411  001640  0E00               	movlw	0
  6412  001642  6E0C               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  6413  001644  0E00               	movlw	0
  6414  001646  6E0B               	movwf	TFT_SetAddrWindow@x1^0,c
  6415  001648  0E00               	movlw	0
  6416  00164A  6E0E               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  6417  00164C  0E00               	movlw	0
  6418  00164E  6E0D               	movwf	TFT_SetAddrWindow@y1^0,c
  6419  001650  0E00               	movlw	0
  6420  001652  6E10               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  6421  001654  0EEF               	movlw	239
  6422  001656  6E0F               	movwf	TFT_SetAddrWindow@x2^0,c
  6423  001658  0E01               	movlw	1
  6424  00165A  6E12               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  6425  00165C  0E8F               	movlw	143
  6426  00165E  6E11               	movwf	TFT_SetAddrWindow@y2^0,c
  6427  001660  ECC1  F007         	call	_TFT_SetAddrWindow	;wreg free
  6428  001664  0012               	return		;funcret
  6429  001666                     __end_of_TFT_FullScreen:
  6430                           	opt callstack 0
  6431                           
  6432 ;; *************** function _TFT_SetAddrWindow *****************
  6433 ;; Defined at:
  6434 ;;		line 56 in file "TFT.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  x1              2   10[COMRAM] unsigned int 
  6437 ;;  y1              2   12[COMRAM] unsigned int 
  6438 ;;  x2              2   14[COMRAM] unsigned int 
  6439 ;;  y2              2   16[COMRAM] unsigned int 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;		None
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  1    wreg      void 
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, cstack
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6451 ;;      Params:         8       0       0       0       0       0       0       0       0
  6452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6454 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6455 ;;Total ram usage:        8 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; Hardware stack levels required when called:    3
  6458 ;; This function calls:
  6459 ;;		_TFT_WriteRegister
  6460 ;; This function is called by:
  6461 ;;		_TFT_FullScreen
  6462 ;;		_TFT_DrawFillRect
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text32
  6467  000F82                     __ptext32:
  6468                           	opt callstack 0
  6469  000F82                     _TFT_SetAddrWindow:
  6470                           	opt callstack 21
  6471  000F82                     
  6472                           ;TFT.c: 58: TFT_WriteRegister(0x0210, x1);
  6473  000F82  0E02               	movlw	2
  6474  000F84  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6475  000F86  0E10               	movlw	16
  6476  000F88  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6477  000F8A  C00B  F005         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  6478  000F8E  C00C  F006         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  6479  000F92  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6480                           
  6481                           ;TFT.c: 59: TFT_WriteRegister(0x0211, x2);
  6482  000F96  0E02               	movlw	2
  6483  000F98  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6484  000F9A  0E11               	movlw	17
  6485  000F9C  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6486  000F9E  C00F  F005         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  6487  000FA2  C010  F006         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  6488  000FA6  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6489                           
  6490                           ;TFT.c: 60: TFT_WriteRegister(0x0212, y1);
  6491  000FAA  0E02               	movlw	2
  6492  000FAC  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6493  000FAE  0E12               	movlw	18
  6494  000FB0  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6495  000FB2  C00D  F005         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  6496  000FB6  C00E  F006         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  6497  000FBA  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6498                           
  6499                           ;TFT.c: 61: TFT_WriteRegister(0x0213, y2);
  6500  000FBE  0E02               	movlw	2
  6501  000FC0  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6502  000FC2  0E13               	movlw	19
  6503  000FC4  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6504  000FC6  C011  F005         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  6505  000FCA  C012  F006         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  6506  000FCE  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6507                           
  6508                           ;TFT.c: 64: TFT_WriteRegister(0x0200, x1);
  6509  000FD2  0E02               	movlw	2
  6510  000FD4  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6511  000FD6  0E00               	movlw	0
  6512  000FD8  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6513  000FDA  C00B  F005         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  6514  000FDE  C00C  F006         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  6515  000FE2  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6516                           
  6517                           ;TFT.c: 65: TFT_WriteRegister(0x0201, y2);
  6518  000FE6  0E02               	movlw	2
  6519  000FE8  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6520  000FEA  0E01               	movlw	1
  6521  000FEC  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6522  000FEE  C011  F005         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  6523  000FF2  C012  F006         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  6524  000FF6  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6525  000FFA  0012               	return		;funcret
  6526  000FFC                     __end_of_TFT_SetAddrWindow:
  6527                           	opt callstack 0
  6528                           
  6529 ;; *************** function _TFT_Flood *****************
  6530 ;; Defined at:
  6531 ;;		line 144 in file "TFT.c"
  6532 ;; Parameters:    Size  Location     Type
  6533 ;;  color           2   10[COMRAM] unsigned int 
  6534 ;;  len             4   12[COMRAM] unsigned long 
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  blocks          2   20[COMRAM] unsigned int 
  6537 ;;  color_lo        1   24[COMRAM] unsigned char 
  6538 ;;  color_hi        1   23[COMRAM] unsigned char 
  6539 ;;  i               1   22[COMRAM] unsigned char 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		wreg, status,2, status,0, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6549 ;;      Params:         6       0       0       0       0       0       0       0       0
  6550 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6551 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6552 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6553 ;;Total ram usage:       15 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    3
  6556 ;; This function calls:
  6557 ;;		_TFT_WriteRegister
  6558 ;; This function is called by:
  6559 ;;		_TFT_DrawFillRect
  6560 ;;		_TFT_FillScreen
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text33
  6565  0006C2                     __ptext33:
  6566                           	opt callstack 0
  6567  0006C2                     _TFT_Flood:
  6568                           	opt callstack 21
  6569  0006C2                     
  6570                           ;TFT.c: 145: uint16_t blocks;;TFT.c: 146: uint8_t i;;TFT.c: 147: uint8_t color_hi = colo
      +                          r >> 8;
  6571  0006C2  500C               	movf	(TFT_Flood@color+1)^0,w,c
  6572  0006C4  6E18               	movwf	TFT_Flood@color_hi^0,c
  6573  0006C6                     
  6574                           ;TFT.c: 148: uint8_t color_lo = color;
  6575  0006C6  C00B  F019         	movff	TFT_Flood@color,TFT_Flood@color_lo
  6576  0006CA                     
  6577                           ;TFT.c: 151: TFT_WriteRegister(0x0202, color);
  6578  0006CA  0E02               	movlw	2
  6579  0006CC  6E04               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6580  0006CE  0E02               	movlw	2
  6581  0006D0  6E03               	movwf	TFT_WriteRegister@reg^0,c
  6582  0006D2  C00B  F005         	movff	TFT_Flood@color,TFT_WriteRegister@data
  6583  0006D6  C00C  F006         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  6584  0006DA  EC29  F00A         	call	_TFT_WriteRegister	;wreg free
  6585  0006DE                     
  6586                           ;TFT.c: 152: len--;
  6587  0006DE  060D               	decf	TFT_Flood@len^0,f,c
  6588  0006E0  0E00               	movlw	0
  6589  0006E2  5A0E               	subwfb	(TFT_Flood@len+1)^0,f,c
  6590  0006E4  5A0F               	subwfb	(TFT_Flood@len+2)^0,f,c
  6591  0006E6  5A10               	subwfb	(TFT_Flood@len+3)^0,f,c
  6592  0006E8                     
  6593                           ;TFT.c: 156: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  6594  0006E8  9082               	bcf	130,0,c	;volatile
  6595  0006EA  F000               	nop		;# 
  6596  0006EC                     
  6597                           ;TFT.c: 157: blocks = (uint16_t)(len / 4);
  6598  0006EC  C00D  F011         	movff	TFT_Flood@len,??_TFT_Flood
  6599  0006F0  C00E  F012         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  6600  0006F4  C00F  F013         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  6601  0006F8  C010  F014         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  6602  0006FC  0E03               	movlw	3
  6603  0006FE  EF86  F003         	goto	u1040
  6604  000702                     u1045:
  6605  000702  90D8               	bcf	status,0,c
  6606  000704  3214               	rrcf	(??_TFT_Flood+3)^0,f,c
  6607  000706  3213               	rrcf	(??_TFT_Flood+2)^0,f,c
  6608  000708  3212               	rrcf	(??_TFT_Flood+1)^0,f,c
  6609  00070A  3211               	rrcf	??_TFT_Flood^0,f,c
  6610  00070C                     u1040:
  6611  00070C  2EE8               	decfsz	wreg,f,c
  6612  00070E  EF81  F003         	goto	u1045
  6613  000712  C011  F015         	movff	??_TFT_Flood,TFT_Flood@blocks
  6614  000716  C012  F016         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  6615  00071A                     
  6616                           ;TFT.c: 158: if(color_hi == color_lo) {
  6617  00071A  5019               	movf	TFT_Flood@color_lo^0,w,c
  6618  00071C  1818               	xorwf	TFT_Flood@color_hi^0,w,c
  6619  00071E  A4D8               	btfss	status,2,c
  6620  000720  EF94  F003         	goto	u1051
  6621  000724  EF96  F003         	goto	u1050
  6622  000728                     u1051:
  6623  000728  EFFB  F003         	goto	l2239
  6624  00072C                     u1050:
  6625  00072C  EFB0  F003         	goto	l2233
  6626  000730                     l164:
  6627                           
  6628                           ;TFT.c: 160: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6629  000730  9A80               	bcf	128,5,c	;volatile
  6630  000732  F000               	nop		;# 
  6631  000734  8A80               	bsf	128,5,c	;volatile
  6632  000736  9A80               	bcf	128,5,c	;volatile
  6633  000738  F000               	nop		;# 
  6634  00073A  8A80               	bsf	128,5,c	;volatile
  6635                           
  6636                           ;TFT.c: 161: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6637  00073C  9A80               	bcf	128,5,c	;volatile
  6638  00073E  F000               	nop		;# 
  6639  000740  8A80               	bsf	128,5,c	;volatile
  6640  000742  9A80               	bcf	128,5,c	;volatile
  6641  000744  F000               	nop		;# 
  6642  000746  8A80               	bsf	128,5,c	;volatile
  6643                           
  6644                           ;TFT.c: 162: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6645  000748  9A80               	bcf	128,5,c	;volatile
  6646  00074A  F000               	nop		;# 
  6647  00074C  8A80               	bsf	128,5,c	;volatile
  6648  00074E  9A80               	bcf	128,5,c	;volatile
  6649  000750  F000               	nop		;# 
  6650  000752  8A80               	bsf	128,5,c	;volatile
  6651                           
  6652                           ;TFT.c: 163: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6653  000754  9A80               	bcf	128,5,c	;volatile
  6654  000756  F000               	nop		;# 
  6655  000758  8A80               	bsf	128,5,c	;volatile
  6656  00075A  9A80               	bcf	128,5,c	;volatile
  6657  00075C  F000               	nop		;# 
  6658  00075E  8A80               	bsf	128,5,c	;volatile
  6659  000760                     l2233:
  6660  000760  0615               	decf	TFT_Flood@blocks^0,f,c
  6661  000762  A0D8               	btfss	status,0,c
  6662  000764  0616               	decf	(TFT_Flood@blocks+1)^0,f,c
  6663  000766  2815               	incf	TFT_Flood@blocks^0,w,c
  6664  000768  E106               	bnz	u1061
  6665  00076A  2816               	incf	(TFT_Flood@blocks+1)^0,w,c
  6666  00076C  A4D8               	btfss	status,2,c
  6667  00076E  EFBB  F003         	goto	u1061
  6668  000772  EFBD  F003         	goto	u1060
  6669  000776                     u1061:
  6670  000776  EF98  F003         	goto	l164
  6671  00077A                     u1060:
  6672  00077A                     
  6673                           ;TFT.c: 164: };TFT.c: 165: for(i = (uint8_t)len & 3; i--; ) {
  6674  00077A  500D               	movf	TFT_Flood@len^0,w,c
  6675  00077C  0B03               	andlw	3
  6676  00077E  6E17               	movwf	TFT_Flood@i^0,c
  6677  000780  EFC8  F003         	goto	l2237
  6678  000784                     l167:
  6679                           
  6680                           ;TFT.c: 166: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6681  000784  9A80               	bcf	128,5,c	;volatile
  6682  000786  F000               	nop		;# 
  6683  000788  8A80               	bsf	128,5,c	;volatile
  6684  00078A  9A80               	bcf	128,5,c	;volatile
  6685  00078C  F000               	nop		;# 
  6686  00078E  8A80               	bsf	128,5,c	;volatile
  6687  000790                     l2237:
  6688  000790  0617               	decf	TFT_Flood@i^0,f,c
  6689  000792  2817               	incf	TFT_Flood@i^0,w,c
  6690  000794  A4D8               	btfss	status,2,c
  6691  000796  EFCF  F003         	goto	u1071
  6692  00079A  EFD1  F003         	goto	u1070
  6693  00079E                     u1071:
  6694  00079E  EFC2  F003         	goto	l167
  6695  0007A2                     u1070:
  6696  0007A2  EF20  F004         	goto	l169
  6697  0007A6                     l171:
  6698                           
  6699                           ;TFT.c: 170: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  6700  0007A6  C018  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  6701  0007AA  9A80               	bcf	128,5,c	;volatile
  6702  0007AC  F000               	nop		;# 
  6703  0007AE  8A80               	bsf	128,5,c	;volatile
  6704  0007B0  C019  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  6705  0007B4  9A80               	bcf	128,5,c	;volatile
  6706  0007B6  F000               	nop		;# 
  6707  0007B8  8A80               	bsf	128,5,c	;volatile
  6708                           
  6709                           ;TFT.c: 171: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  6710  0007BA  C018  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  6711  0007BE  9A80               	bcf	128,5,c	;volatile
  6712  0007C0  F000               	nop		;# 
  6713  0007C2  8A80               	bsf	128,5,c	;volatile
  6714  0007C4  C019  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  6715  0007C8  9A80               	bcf	128,5,c	;volatile
  6716  0007CA  F000               	nop		;# 
  6717  0007CC  8A80               	bsf	128,5,c	;volatile
  6718                           
  6719                           ;TFT.c: 172: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  6720  0007CE  C018  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  6721  0007D2  9A80               	bcf	128,5,c	;volatile
  6722  0007D4  F000               	nop		;# 
  6723  0007D6  8A80               	bsf	128,5,c	;volatile
  6724  0007D8  C019  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  6725  0007DC  9A80               	bcf	128,5,c	;volatile
  6726  0007DE  F000               	nop		;# 
  6727  0007E0  8A80               	bsf	128,5,c	;volatile
  6728                           
  6729                           ;TFT.c: 173: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  6730  0007E2  C018  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  6731  0007E6  9A80               	bcf	128,5,c	;volatile
  6732  0007E8  F000               	nop		;# 
  6733  0007EA  8A80               	bsf	128,5,c	;volatile
  6734  0007EC  C019  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  6735  0007F0  9A80               	bcf	128,5,c	;volatile
  6736  0007F2  F000               	nop		;# 
  6737  0007F4  8A80               	bsf	128,5,c	;volatile
  6738  0007F6                     l2239:
  6739  0007F6  0615               	decf	TFT_Flood@blocks^0,f,c
  6740  0007F8  A0D8               	btfss	status,0,c
  6741  0007FA  0616               	decf	(TFT_Flood@blocks+1)^0,f,c
  6742  0007FC  2815               	incf	TFT_Flood@blocks^0,w,c
  6743  0007FE  E106               	bnz	u1081
  6744  000800  2816               	incf	(TFT_Flood@blocks+1)^0,w,c
  6745  000802  A4D8               	btfss	status,2,c
  6746  000804  EF06  F004         	goto	u1081
  6747  000808  EF08  F004         	goto	u1080
  6748  00080C                     u1081:
  6749  00080C  EFD3  F003         	goto	l171
  6750  000810                     u1080:
  6751  000810                     
  6752                           ;TFT.c: 174: };TFT.c: 175: for(i = (uint8_t)len & 3; i--; ) {
  6753  000810  500D               	movf	TFT_Flood@len^0,w,c
  6754  000812  0B03               	andlw	3
  6755  000814  6E17               	movwf	TFT_Flood@i^0,c
  6756  000816  EF17  F004         	goto	l2243
  6757  00081A                     l174:
  6758                           
  6759                           ;TFT.c: 176: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  6760  00081A  C018  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  6761  00081E  9A80               	bcf	128,5,c	;volatile
  6762  000820  F000               	nop		;# 
  6763  000822  8A80               	bsf	128,5,c	;volatile
  6764  000824  C019  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  6765  000828  9A80               	bcf	128,5,c	;volatile
  6766  00082A  F000               	nop		;# 
  6767  00082C  8A80               	bsf	128,5,c	;volatile
  6768  00082E                     l2243:
  6769  00082E  0617               	decf	TFT_Flood@i^0,f,c
  6770  000830  2817               	incf	TFT_Flood@i^0,w,c
  6771  000832  A4D8               	btfss	status,2,c
  6772  000834  EF1E  F004         	goto	u1091
  6773  000838  EF20  F004         	goto	u1090
  6774  00083C                     u1091:
  6775  00083C  EF0D  F004         	goto	l174
  6776  000840                     u1090:
  6777  000840                     l169:
  6778                           
  6779                           ;TFT.c: 177: };TFT.c: 178: };TFT.c: 179: PORTCbits.RC0 = 1;;
  6780  000840  8082               	bsf	130,0,c	;volatile
  6781  000842  0012               	return		;funcret
  6782  000844                     __end_of_TFT_Flood:
  6783                           	opt callstack 0
  6784                           
  6785 ;; *************** function _TFT_WriteRegister *****************
  6786 ;; Defined at:
  6787 ;;		line 12 in file "TFT.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  reg             2    2[COMRAM] unsigned int 
  6790 ;;  data            2    4[COMRAM] unsigned int 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;  l               1    9[COMRAM] unsigned char 
  6793 ;;  h               1    8[COMRAM] unsigned char 
  6794 ;;  l               1    7[COMRAM] unsigned char 
  6795 ;;  h               1    6[COMRAM] unsigned char 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6805 ;;      Params:         4       0       0       0       0       0       0       0       0
  6806 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6808 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6809 ;;Total ram usage:        8 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; Hardware stack levels required when called:    2
  6812 ;; This function calls:
  6813 ;;		Nothing
  6814 ;; This function is called by:
  6815 ;;		_TFT_SetAddrWindow
  6816 ;;		_TFT_Init
  6817 ;;		_TFT_DrawPixel
  6818 ;;		_TFT_Flood
  6819 ;;		_TFT_FillScreen
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text34
  6824  001452                     __ptext34:
  6825                           	opt callstack 0
  6826  001452                     _TFT_WriteRegister:
  6827                           	opt callstack 22
  6828  001452                     
  6829                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  6830  001452  9082               	bcf	130,0,c	;volatile
  6831  001454  F000               	nop		;# 
  6832                           
  6833                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  6834  001456  9282               	bcf	130,1,c	;volatile
  6835  001458  5004               	movf	(TFT_WriteRegister@reg+1)^0,w,c
  6836  00145A  6E07               	movwf	TFT_WriteRegister@h^0,c
  6837  00145C  C003  F008         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
  6838  001460  C007  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
  6839  001464  9A80               	bcf	128,5,c	;volatile
  6840  001466  F000               	nop		;# 
  6841  001468  8A80               	bsf	128,5,c	;volatile
  6842  00146A  C008  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
  6843  00146E  9A80               	bcf	128,5,c	;volatile
  6844  001470  F000               	nop		;# 
  6845  001472  8A80               	bsf	128,5,c	;volatile
  6846  001474                     
  6847                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  6848  001474  8282               	bsf	130,1,c	;volatile
  6849  001476  5006               	movf	(TFT_WriteRegister@data+1)^0,w,c
  6850  001478  6E09               	movwf	TFT_WriteRegister@h_596^0,c
  6851  00147A  C005  F00A         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_597
  6852  00147E  C009  FF81         	movff	TFT_WriteRegister@h_596,3969	;volatile
  6853  001482  9A80               	bcf	128,5,c	;volatile
  6854  001484  F000               	nop		;# 
  6855  001486  8A80               	bsf	128,5,c	;volatile
  6856  001488  C00A  FF81         	movff	TFT_WriteRegister@l_597,3969	;volatile
  6857  00148C  9A80               	bcf	128,5,c	;volatile
  6858  00148E  F000               	nop		;# 
  6859  001490  8A80               	bsf	128,5,c	;volatile
  6860  001492                     
  6861                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
  6862  001492  8082               	bsf	130,0,c	;volatile
  6863  001494  0012               	return		;funcret
  6864  001496                     __end_of_TFT_WriteRegister:
  6865                           	opt callstack 0
  6866                           
  6867 ;; *************** function _isr *****************
  6868 ;; Defined at:
  6869 ;;		line 90 in file "init.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;		None
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;		None
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  1    wreg      void 
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0, cstack
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6883 ;;      Params:         0       0       0       0       0       0       0       0       0
  6884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6886 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6887 ;;Total ram usage:        0 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    1
  6890 ;; This function calls:
  6891 ;;		_Ecg_Interrupt
  6892 ;; This function is called by:
  6893 ;;		Interrupt level 2
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	intcode
  6898  000008                     __pintcode:
  6899                           	opt callstack 0
  6900  000008                     _isr:
  6901                           	opt callstack 19
  6902                           
  6903                           ;incstack = 0
  6904  000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6905  00000A  ED6A  F00A         	call	int_func,f	;refresh shadow registers
  6906                           
  6907                           	psect	intcode_body
  6908  0014D4                     __pintcode_body:
  6909                           	opt callstack 19
  6910  0014D4                     int_func:
  6911                           	opt callstack 19
  6912  0014D4  0006               	pop		; remove dummy address from shadow register refresh
  6913  0014D6                     
  6914                           ;init.c: 92: if(TMR3IE && TMR3IF) {
  6915  0014D6  A2A0               	btfss	4000,1,c	;volatile
  6916  0014D8  EF70  F00A         	goto	i2u192_41
  6917  0014DC  EF72  F00A         	goto	i2u192_40
  6918  0014E0                     i2u192_41:
  6919  0014E0  EF87  F00A         	goto	i2l88
  6920  0014E4                     i2u192_40:
  6921  0014E4  A2A1               	btfss	4001,1,c	;volatile
  6922  0014E6  EF77  F00A         	goto	i2u193_41
  6923  0014EA  EF79  F00A         	goto	i2u193_40
  6924  0014EE                     i2u193_41:
  6925  0014EE  EF87  F00A         	goto	i2l88
  6926  0014F2                     i2u193_40:
  6927  0014F2                     
  6928                           ;init.c: 93: MILLISECONDS += 5;
  6929  0014F2  0E05               	movlw	5
  6930  0014F4  0100               	movlb	0	; () banked
  6931  0014F6  278F               	addwf	_MILLISECONDS& (0+255),f,b
  6932  0014F8  0E00               	movlw	0
  6933  0014FA  2390               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
  6934  0014FC  2391               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
  6935  0014FE  2392               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
  6936  001500                     
  6937                           ; BSR set to: 0
  6938                           ;init.c: 94: Ecg_Interrupt();
  6939  001500  EC33  F00B         	call	_Ecg_Interrupt	;wreg free
  6940  001504                     
  6941                           ;init.c: 97: TMR3H = 0x16;
  6942  001504  0E16               	movlw	22
  6943  001506  6EB3               	movwf	179,c	;volatile
  6944  001508                     
  6945                           ;init.c: 98: TMR3L = 0x00;
  6946  001508  0E00               	movlw	0
  6947  00150A  6EB2               	movwf	178,c	;volatile
  6948  00150C                     
  6949                           ;init.c: 99: TMR3IF = 0;
  6950  00150C  92A1               	bcf	4001,1,c	;volatile
  6951  00150E                     i2l88:
  6952  00150E  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6953  001510  0011               	retfie		f
  6954  001512                     __end_of_isr:
  6955                           	opt callstack 0
  6956                           
  6957 ;; *************** function _Ecg_Interrupt *****************
  6958 ;; Defined at:
  6959 ;;		line 135 in file "ecg.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6973 ;;      Params:         0       0       0       0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6975 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6976 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6977 ;;Total ram usage:        2 bytes
  6978 ;; Hardware stack levels used:    1
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_isr
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text36
  6987  001666                     __ptext36:
  6988                           	opt callstack 0
  6989  001666                     _Ecg_Interrupt:
  6990                           	opt callstack 19
  6991  001666                     
  6992                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
  6993  001666  0E01               	movlw	1
  6994  001668  6E01               	movwf	??_Ecg_Interrupt^0,c
  6995  00166A  0100               	movlb	0	; () banked
  6996  00166C  5194               	movf	(_ECG_FLAGS+1)& (0+255),w,b
  6997  00166E  0B07               	andlw	7
  6998  001670  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
  6999  001672  5001               	movf	??_Ecg_Interrupt^0,w,c
  7000  001674  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
  7001  001676  5194               	movf	(_ECG_FLAGS+1)& (0+255),w,b
  7002  001678  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
  7003  00167A  0BF8               	andlw	-8
  7004  00167C  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
  7005  00167E  6F94               	movwf	(_ECG_FLAGS+1)& (0+255),b
  7006  001680                     
  7007                           ; BSR set to: 0
  7008                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
  7009  001680  2A51               	incf	(_ECG_HEARTRATE+3)^0,f,c
  7010  001682                     
  7011                           ; BSR set to: 0
  7012                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
  7013  001682  8993               	bsf	_ECG_FLAGS& (0+255),4,b
  7014  001684                     
  7015                           ; BSR set to: 0
  7016  001684  0012               	return		;funcret
  7017  001686                     __end_of_Ecg_Interrupt:
  7018                           	opt callstack 0
  7019                           
  7020                           	psect	rparam
  7021  0000                     
  7022                           	psect	temp
  7023  000052                     btemp:
  7024                           	opt callstack 0
  7025  000052                     	ds	1
  7026  0000                     int$flags	set	btemp
  7027  0000                     wtemp8	set	btemp+1
  7028  0000                     ttemp5	set	btemp+1
  7029  0000                     ttemp6	set	btemp+4
  7030  0000                     ttemp7	set	btemp+8
  7031                           tosu	equ	0xFFF
  7032                           tosh	equ	0xFFE
  7033                           tosl	equ	0xFFD
  7034                           stkptr	equ	0xFFC
  7035                           pclatu	equ	0xFFB
  7036                           pclath	equ	0xFFA
  7037                           pcl	equ	0xFF9
  7038                           tblptru	equ	0xFF8
  7039                           tblptrh	equ	0xFF7
  7040                           tblptrl	equ	0xFF6
  7041                           tablat	equ	0xFF5
  7042                           prodh	equ	0xFF4
  7043                           prodl	equ	0xFF3
  7044                           indf0	equ	0xFEF
  7045                           postinc0	equ	0xFEE
  7046                           postdec0	equ	0xFED
  7047                           preinc0	equ	0xFEC
  7048                           plusw0	equ	0xFEB
  7049                           fsr0h	equ	0xFEA
  7050                           fsr0l	equ	0xFE9
  7051                           wreg	equ	0xFE8
  7052                           indf1	equ	0xFE7
  7053                           postinc1	equ	0xFE6
  7054                           postdec1	equ	0xFE5
  7055                           preinc1	equ	0xFE4
  7056                           plusw1	equ	0xFE3
  7057                           fsr1h	equ	0xFE2
  7058                           fsr1l	equ	0xFE1
  7059                           bsr	equ	0xFE0
  7060                           indf2	equ	0xFDF
  7061                           postinc2	equ	0xFDE
  7062                           postdec2	equ	0xFDD
  7063                           preinc2	equ	0xFDC
  7064                           plusw2	equ	0xFDB
  7065                           fsr2h	equ	0xFDA
  7066                           fsr2l	equ	0xFD9
  7067                           status	equ	0xFD8


Data Sizes:
    Strings     43
    Constant    1556
    Data        14
    BSS         160
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     71      81
    BANK0           160     29      61
    BANK1           256      0     132
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 5
		 -> Ecg_ProcessHeartRate@heartrateString(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sp__memset	PTR void  size(2) Largest target is 132
		 -> EUSART_RX(BANK1[132]), 

    TFT_DrawBitmap@bitmap	PTR const unsigned char  size(2) Largest target is 62
		 -> ECG_ICON_HEART(CODE[62]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 132
		 -> EUSART_RX.line(BANK1[64]), EUSART_RX(BANK1[132]), STR_3(CODE[28]), STR_2(CODE[11]), 
		 -> Ecg_ProcessHeartRate@heartrateString(BANK0[5]), 


Critical Paths under _main in COMRAM

    _Ecg_ProcessHeartRate->_TFT_DrawString
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Ecg_ProcessHeartbeat->_TFT_DrawFillRect
    _TFT_DrawBitmap->_TFT_DrawPixel
    _Ecg_Draw->_TFT_DrawLine
    _TFT_Init->_TFT_FillScreen
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _TFT_DrawLine->_TFT_DrawPixel
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _TFT_FillScreen->_TFT_Flood
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawFillRect
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_Flood
    _TFT_FullScreen->_TFT_SetAddrWindow
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister

Critical Paths under _isr in COMRAM

    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _Ecg_Process->_Ecg_ProcessHeartRate

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  187781
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  118834
                        _Ecg_Process
 ---------------------------------------------------------------------------------
 (2) _Ecg_Process                                          0     0      0  118834
                     _Ecg_ProcessEcg
               _Ecg_ProcessHeartRate
               _Ecg_ProcessInterrupt
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessInterrupt                                 1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessHeartRate                                29    29      0   24697
                                              0 BANK0     29    29      0
                     _TFT_DrawString
                            ___lldiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             28    22      6    2970
                                             14 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              2 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              9 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     314
                                              2 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessEcg                                       0     0      0   94137
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
                           _Ecg_Draw
               _Ecg_ProcessHeartbeat
 ---------------------------------------------------------------------------------
 (4) _Ecg_ProcessHeartbeat                                11    11      0   16909
                                             39 COMRAM    11    11      0
                     _TFT_DrawBitmap
                   _TFT_DrawFillRect
                                _abs
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawBitmap                                      12     7      5    3889
                                             16 COMRAM    12     7      5
                      _TFT_DrawPixel
 ---------------------------------------------------------------------------------
 (4) _Ecg_Draw                                             2     2      0   18849
                                             47 COMRAM     2     2      0
                           _Ecg_Read
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     466
                                              2 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _Ecg_Read                                             6     4      2      70
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            10    10      0   10568
                                             27 COMRAM    10    10      0
                     _TFT_FillScreen
                     _TFT_FullScreen
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0   58379
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (4) _Ecg_CheckLeads                                       4     2      2      47
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Ecg_Background_Leads_Ok                              0     0      0   32078
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawLine                                        31    21     10    5824
                                             16 COMRAM    31    21     10
                      _TFT_DrawPixel
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     370
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _Ecg_Background_Leads_Failure                         0     0      0   26254
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (5) _TFT_FillScreen                                       2     0      2    5356
                                             25 COMRAM     2     0      2
                          _TFT_Flood
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawString                                      11     0     11   20898
                                             60 COMRAM    11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawChar                                        21    11     10   18896
                                             39 COMRAM    21    11     10
                   _TFT_DrawFillRect
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _TFT_DrawPixel                                        6     0      6    3362
                                             10 COMRAM     6     0      6
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (6) _TFT_DrawFillRect                                    14     4     10   12443
                                             25 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1223
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) _TFT_FullScreen                                       0     0      0    2896
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (7) _TFT_SetAddrWindow                                    8     0      8    2896
                                             10 COMRAM     8     0      8
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (7) _TFT_Flood                                           15     9      6    2950
                                             10 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _TFT_WriteRegister                                    8     4      4    2156
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                 0     0      0       0
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (12) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_WriteRegister
         ___awdiv
         _abs
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_FillScreen
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_WriteRegister
     _TFT_FullScreen
       _TFT_SetAddrWindow
         _TFT_WriteRegister
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _Ecg_Process
       _Ecg_ProcessEcg
         _Ecg_Background_Leads_Failure
           _TFT_DrawString
             _TFT_DrawChar
               _TFT_DrawFillRect
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                 _TFT_FullScreen
                   _TFT_SetAddrWindow
                     _TFT_WriteRegister
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
                 ___wmul
               _TFT_DrawPixel
                 _TFT_WriteRegister
               ___wmul
           _TFT_FillScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_WriteRegister
         _Ecg_Background_Leads_Ok
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___awdiv
             _abs
           _TFT_DrawString
             _TFT_DrawChar
               _TFT_DrawFillRect
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                 _TFT_FullScreen
                   _TFT_SetAddrWindow
                     _TFT_WriteRegister
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
                 ___wmul
               _TFT_DrawPixel
                 _TFT_WriteRegister
               ___wmul
           _TFT_FillScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_WriteRegister
         _Ecg_CheckLeads
         _Ecg_Draw
           _Ecg_Read
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___awdiv
             _abs
           ___lwdiv
         _Ecg_ProcessHeartbeat
           _TFT_DrawBitmap
             _TFT_DrawPixel
               _TFT_WriteRegister
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _abs
       _Ecg_ProcessHeartRate
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
         ___lldiv
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _Ecg_ProcessInterrupt

 _isr (ROOT)
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      84       7       51.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      3D       5       38.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     47      51       1       86.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     112      20        0.0%
DATA                 0      0     112       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 12 06:52:33 2019

  Ecg_ProcessHeartRate@heartrateString 006C                                     l27 16CE  
                                   l82 1246                           ___awdiv@sign 0008  
                                   _xx 0095                    ___wmul@multiplicand 0005  
                          __CFG_BORV$0 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                                  l111 1494                                    l202 0F80  
                                  l132 1664                                    l140 0BF8  
                                  l301 140A                                    l126 16A2  
                                  l214 0E4C                                    l143 14D2  
                                  l129 0FFA                                    l314 09AE  
                                  l171 07A6                                    l164 0730  
                                  l156 06C0                                    l148 0622  
                                  l500 0EE0                                    l341 1072  
                                  l317 0AB8                                    l174 081A  
                                  l334 13BC                                    l326 0B1A  
                                  l167 0784                                    l159 1160  
                                  l351 154C                                    l176 0842  
                                  l169 0840                                    l337 1004  
                                  l345 0CC6                                    l187 0322  
                                  l179 1450                                    l283 1618  
                                  l339 1012                                    l507 0EF0  
                                  l196 04D8                                    l348 10EA  
                                  l470 02E4                                    l294 1582  
                                  l704 0D8A                                    l473 163E  
                                  l297 13F4                                    l289 136C  
      __end_of_Ecg_Background_Leads_Ok 10EC                                    l952 11CC  
                                  l962 1310                                    l959 11D4  
                                  l969 1318                                    _GIE 007F97  
                         __CFG_CPB$OFF 000000                           __CFG_CPD$OFF 000000  
                         __CFG_BOR$OFF 000000                                    _abs 1584  
                                  _isr 0008                                    prod 000FF3  
                                  wreg 000FE8                           TFT_Flood@len 000D  
                         __CFG_LVP$OFF 000000                           TFT_Init@data 001E  
                         __CFG_WDT$OFF 000000                                   ?_abs 0003  
                                 l1141 15E8                                   l1135 15AE  
                                 l1136 15B6                                   l2201 1482  
                                 l3001 093A                                   l2211 1492  
                                 l2203 1486                                   l3003 0964  
                                 l3011 132E                                   l2205 1488  
                                 l2221 06CA                                   l2213 0F82  
                                 l2301 0CC8                                   l3005 097E  
                                 l3021 1356                                   l3013 1332  
                                 l2207 148C                                   l2223 06DE  
                                 l2215 1640                                   l2311 0CF4  
                                 l2303 0CCC                                   l3023 1364  
                                 l3015 1340                                   l3007 131A  
                                 l3031 16A8                                   l2209 1490  
                                 l2241 0810                                   l2233 0760  
                                 l2225 06E8                                   l2217 06C2  
                                 l2321 0D22                                   l2313 0CFC  
                                 l2305 0CDA                                   l2401 0DB6  
                                 l3025 1368                                   l3017 1344  
                                 l3009 132A                                   l3033 16AC  
                                 l2243 082E                                   l2235 077A  
                                 l2227 06EC                                   l2219 06C6  
                                 l2251 1496                                   l2331 0D5C  
                                 l2323 0D2A                                   l2315 0D00  
                                 l2307 0CE2                                   l2411 0DF2  
                                 l2403 0DBE                                   l3019 1348  
                                 l3027 16CA                                   l3035 16B0  
                                 l2181 145C                                   l2237 0790  
                                 l2229 071A                                   l2245 161A  
                                 l2253 10EC                                   l2341 0D82  
                                 l2333 0D5E                                   l2325 0D38  
                                 l2317 0D08                                   l2309 0CE6  
                                 l2261 1592                                   l2501 136E  
                                 l2421 0E36                                   l2413 0DF6  
                                 l2405 0DC6                                   l3029 16A4  
                                 l2191 146E                                   l2183 1460  
                                 l2239 07F6                                   l2247 1636  
                                 l2255 1130                                   l2271 031E  
                                 l2263 02E6                                   l2335 0D64  
                                 l2327 0D3E                                   l2319 0D1A  
                                 l2351 0528                                   l2511 1392  
                                 l2503 1372                                   l2431 1018  
                                 l2415 0E04                                   l2407 0DDC  
                                 l2423 0E3A                                   l2193 1472  
                                 l2185 1464                                   l2177 1452  
                                 l2257 115C                                   l2281 0376  
                                 l2345 140C                                   l2329 0D54  
                                 l2337 0D6A                                   l2361 05C4  
                                 l2353 053A                                   l2521 10AE  
                                 l2513 13B6                                   l2505 1380  
                                 l2441 1052                                   l2433 101E  
                                 l2425 0FFC                                   l2417 0E22  
                                 l2409 0DE4                                   l2601 0B08  
                                 l2195 1474                                   l2187 1468  
                                 l2179 1458                                   l2291 04A8  
                                 l2283 03E2                                   l2347 1434  
                                 l2339 0D7A                                   l2259 1584  
                                 l2371 065C                                   l2363 05DC  
                                 l2355 056A                                   l2523 10D8  
                                 l2507 1382                                   l2443 1054  
                                 l2435 1026                                   l2427 1000  
                                 l2531 0BFA                                   l2419 0E24  
                                 l2603 0B18                                   l2451 15BA  
                                 l2611 003C                                   l2197 147A  
                                 l2189 146A                                   l2293 04AA  
                                 l2285 03FA                                   l2277 0330  
                                 l2269 02EA                                   l2373 0678  
                                 l2381 06A2                                   l2365 0616  
                                 l2357 0588                                   l2349 04DA  
                                 l2525 10E0                                   l2517 1074  
                                 l2509 1390                                   l1901 121C  
                                 l2445 1066                                   l2437 102A  
                                 l2429 1002                                   l2541 0C8E  
                                 l2533 0C06                                   l2701 0E74  
                                 l2453 15BE                                   l2621 0092  
                                 l2613 0044                                   l2605 0012  
                                 l2199 147E                                   l2295 04AE  
                                 l2287 040A                                   l2279 0340  
                                 l2391 0F50                                   l2383 0EF2  
                                 l2527 1512                                   l2375 0680  
                                 l2367 062A                                   l2359 05B8  
                                 l2519 1080                                   l1911 1230  
                                 l1903 121E                                   l2447 106A  
                                 l2439 102C                                   l2471 118C  
                                 l2463 1162                                   l2551 0CBE  
                                 l2543 0C96                                   l2535 0C22  
                                 l2711 0EBE                                   l2703 0E7C  
                                 l2455 15CE                                   l2631 010C  
                                 l2623 00BA                                   l2615 0050  
                                 l2607 001E                                   l2297 04C2  
                                 l2289 0440                                   l2385 0EF6  
                                 l2529 151E                                   l2377 068E  
                                 l2369 063C                                   l1921 1242  
                                 l1913 1238                                   l1905 1222  
                                 l2481 11C0                                   l2473 119A  
                                 l2465 116A                                   l2545 0C9E  
                                 l2537 0C32                                   l2393 0D8E  
                                 l2561 09D2                                   l2553 09B0  
                                 l2713 0ECE                                   l2705 0E88  
                                 l2457 15DE                                   l2641 013E  
                                 l2633 011C                                   l2625 00BE  
                                 l2617 006E                                   l2609 0030  
                                 l2721 1566                                   l2299 04C4  
                                 l2387 0F40                                   l2379 069E  
                                 l2811 0B3E                                   l1923 1244  
                                 l1915 123C                                   l1907 122A  
                                 l2483 11C6                                   l2475 11A0  
                                 l2467 117C                                   l2547 0CA4  
                                 l2539 0C62                                   l2395 0D9C  
                                 l2571 0A2C                                   l2563 09FE  
                                 l2555 09BE                                   l2731 13BE  
                                 l2715 0ED0                                   l2707 0E96  
                                 l2491 12D8                                   l2459 15E2  
                                 l2651 0170                                   l2635 0124  
                                 l2619 0076                                   l2723 1568  
                                 l2389 0F4C                                   l1861 1686  
                                 l2821 0BA2                                   l2813 0B4A  
                                 l2805 0B1C                                   l1917 123E  
                                 l1909 122C                                   l2477 11B6  
                                 l2469 1184                                   l2549 0CB6  
                                 l2397 0DA0                                   l2581 0A8E  
                                 l2573 0A54                                   l2565 0A06  
                                 l2741 13E8                                   l2733 13C2  
                                 l2717 0EDA                                   l2709 0EA0  
                                 l2493 12E6                                   l2485 12B6  
                                 l2661 01B2                                   l2653 0172  
                                 l2637 0132                                   l2629 00DC  
                                 l2725 156C                                   l2831 15EA  
                                 l1871 1692                                   l1863 168A  
                                 l2823 0BBC                                   l2815 0B68  
                                 l2807 0B20                                   l1919 1240  
                                 l2479 11BE                                   l2399 0DB2  
                                 l2591 0AC6                                   l2583 0AA8  
                                 l2575 0A76                                   l2567 0A1A  
                                 l2743 13EC                                   l2735 13D2  
                                 l2495 12FC                                   l2487 12C8  
                                 l2671 0208                                   l2663 01D6  
                                 l2655 0184                                   l2647 0142  
                                 l2639 0136                                   l2727 157C  
                                 l2719 154E                                   l2841 1616  
                                 l2833 1600                                   l1873 16A0  
                                 l1865 168C                                   l2817 0B6C  
                                 l2825 0BD0                                   l2809 0B36  
                                 l1881 11E6                                   l2593 0AC8  
                                 l2585 0AAC                                   l2577 0A78  
                                 l2569 0A1C                                   l2745 1402  
                                 l2737 13E0                                   l2497 1304  
                                 l2489 12D0                                   l2681 024A  
                                 l2673 020C                                   l2665 01E2  
                                 l2657 0196                                   l2729 157E  
                                 l2835 1608                                   l1867 168E  
                                 l2827 0BE8                                   l2819 0B8E  
                                 l1891 120A                                   l1883 11FE  
                                 l1875 11D6                                   l2595 0AD8  
                                 l2587 0AAE                                   l2579 0A8A  
                                 l2747 1406                                   l2739 13E4  
                                 l2499 130A                                   l2683 0252  
                                 l2675 0224                                   l2667 01EA  
                                 l2659 01AC                                   l2691 02B6  
                                 l2837 160C                                   l1869 1690  
                                 l2829 0BEC                                   l1893 120C  
                                 l1885 1200                                   l1877 11D8  
                                 l2597 0B04                                   l2589 0AB2  
                                 l2685 0294                                   l2677 023A  
                                 l2669 01FC                                   l2693 02D8  
                                 l2839 1612                                   l1895 1210  
                                 l1887 1202                                   l1879 11E0  
                                 l2599 0B06                                   l2687 02A0  
                                 l2679 0246                                   l1897 1214  
                                 l1889 1206                                   l2697 0E4E  
                                 l2689 02A4                                   l1899 1218  
                                 l2699 0E5E                                   l2971 0844  
                                 l2981 086E                                   l2973 085A  
                                 l2991 08B2                                   l2983 087E  
                                 l2993 08B6                                   l2985 0886  
                                 l2995 091E                                   l2987 089A  
                                 l2979 085E                                   l2997 0920  
                                 l2989 08AA                                   l2999 0930  
                                 ?_isr 0001                                   STR_1 5FFA  
                                 STR_2 5FEF                                   STR_3 5FD3  
                                 _CREN 007D5C                                   u1100 1592  
                                 u1101 158E                                   u1110 0330  
                                 u1111 032C                                   u1040 070C  
                                 u1120 0340                                   u1200 0D38  
                                 u1121 033C                                   u1201 0D34  
                                 u1050 072C                                   u1130 03FA  
                                 u1210 0D54                                   u1051 0728  
                                 u1131 03F6                                   u1211 0D50  
                                 u1060 077A                                   u1140 040A  
                                 u1220 0D7A                                   u1300 06C0  
                                 u2100 1356                                   u1061 0776  
                                 u1045 0702                                   u1141 0406  
                                 u1221 0D76                                   u1301 06BC  
                                 u2101 1352                          TFT_DrawChar@c 002C  
                                 u1070 07A2                                   u1150 04C2  
                                 u1310 0F26                                   u1230 0522  
                                 u2110 1364                                   u1071 079E  
                                 u1151 04BE                                   u1231 051C  
                                 u2111 1360                                   u1080 0810  
                                 u1160 04D8                                   u1320 0F70  
                                 u1240 0524                                   u1400 15CE  
                                 u1081 080C                                   u1161 04D4  
                                 u1401 15CA                                   u1090 0840  
                                 u1330 0F80                                   u1170 0CDA  
                                 u1250 053A                                   u1410 15DE  
                                 u2050 086E                                   u1091 083C  
                                 u1331 0F7C                                   u1171 0CD6  
                                 u1251 0536                                   u1411 15DA  
                                 u2051 086A                          TFT_DrawChar@i 003C  
                                 u1180 0CF4                                   u1260 0588  
                                 u1500 13A6                                   u1420 117C  
                                 u1340 0DDC                                   u2060 089A  
                        TFT_DrawChar@j 003B                                   u1317 0F1C  
                                 u1181 0CF0                                   u1261 0584  
                                 u1501 139E                                   u1421 1178  
                                 u1341 0DD8                                   u2061 0896  
                                 _LATA 000F89                                   u1190 0D1A  
                                 u1270 0616                                   u1430 119A  
                                 u1350 0E04                                   u2070 0930  
                                 _LATB 000F8A                                   u1327 0F66  
                                 u1191 0D16                                   u1271 0612  
                                 u2127 11F0                                   u1431 1196  
                                 u1351 0E00                                   u2071 092C  
                                 _LATC 000F8B                                   u1280 063C  
                                 u1440 11B6                                   u1520 0CB6  
                                 u1360 0E36                                   u1600 0030  
                                 u2080 132A                                   u1281 0638  
                                 u2137 0B2A                                   u1441 11B2  
                                 u1521 0CB2                                   u1361 0E32  
                                 u1601 002C                                   u2081 1326  
                                 u1290 068E                                   u1370 0E4C  
                                 u1530 09BE                                   u1450 12C8  
                                 u1610 006E                                   u2090 1340  
                                 u1291 068A                                   u2147 0BAC  
                                 u1371 0E48                                   u1531 09BA  
                                 u1451 12C4                                   u1611 006A  
                                 u2091 133C                                   u1380 1012  
                                 u1540 0A2C                                   u1460 12E6  
                                 u1700 0224                                   u1620 00DC  
                                 u2157 1698                                   u1381 100E  
                                 u1541 0A28                                   u1461 12E2  
                                 u1701 0220                                   u1621 00D8  
                                 u1518 13A8                                   u1390 1066  
                                 u1550 0A54                                   u1470 12FC  
                                 u1710 023A                                   u1630 0132  
                                 u1391 1062                                   u1551 0A50  
                                 u1471 12F8                                   u1711 0236  
                                 u1631 012E                                   u1480 1380  
                                 u1560 0A8A                                   u1800 13E0  
                                 u1720 02B6                                   u1640 016C  
                                 u1481 137C                                   u1561 0A86  
                                 u1801 13DC                                   u1721 02B2  
                                 u1641 0168                                   u1490 1390  
                                 u1570 0AC6                                   u1810 1402  
                                 u1730 02D8                                   u1650 0184  
                        TFT_DrawChar@x 0028                                   u1491 138C  
                                 u1571 0AC2                                   u1811 13FE  
                                 u1731 02D4                                   u1651 0180  
                        TFT_DrawChar@y 002A                                   u1900 0BE8  
                                 u1580 0AD8                                   u1740 0E74  
                                 u1660 0196                                   u1901 0BE4  
                                 u1581 0AD4                                   u1741 0E70  
                                 u1661 0192                                   u1910 1600  
                                 u1590 0B18                                   u1750 0E96  
                                 u1670 01AC                                   u1911 15FC  
                                 u1591 0B14                                   u1751 0E92  
                                 u1671 01A8                                   u1760 0EBE  
                                 u1680 01D6                                   u1761 0EBA  
                                 u1681 01D2                                   u1690 01FC  
                                 u1770 1566                                   u1691 01F8  
                                 u1771 1562                                   u1780 157C  
                                 u1781 1578                                   u1790 13D2  
                                 u1791 13CE                                   u1890 0BA2  
                                 u1891 0B9E                                   _PEIE 007F96  
                                 _RCIE 007CED                                   _OERR 007D59  
                                 i2l88 150E                                   _RBPU 007F8F  
                                 _TXIF 007CF4                 ??_Ecg_ProcessHeartRate 0060  
                        TFT_DrawLine@t 001E                                   abs@a 0003  
               ??_Ecg_ProcessHeartbeat 0028                                   _main 16A4  
                                 _init 11D6                                   _loop 16CA  
                                 fsr0h 000FEA                                   indf0 000FEF  
                                 fsr2h 000FDA                                   fsr0l 000FE9  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 0052  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                    TFT_DrawBitmap@color 0014  
                    TFT_Flood@color_hi 0018                      TFT_Flood@color_lo 0019  
                          _Ecg_Process 131A                          __CFG_IESO$OFF 000000  
                         ___param_bank 000000          ?_Ecg_Background_Leads_Failure 0001  
                                ??_abs 0005                                  ??_isr 0003  
                        __CFG_PLLDIV$1 000000                        ??_TFT_DrawPixel 0011  
                       __CFG_CCP2MX$ON 000000                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 0D8C  
                                ?_loop 0001                        __end_of___lldiv 0EF2  
                      ___awdiv@divisor 0005                         TFT_DrawChar@bg 002F  
                      __end_of___lwdiv 11D6                        __end_of___lwmod 131A  
                                i2l329 1684                        ___awdiv@counter 0007  
                                _RCREG 000FAE                 ??_Ecg_ProcessInterrupt 0003  
                                _TMR3H 000FB3                                  _TMR3L 000FB2  
                                _SPBRG 000FAF                                  _PORTB 000F81  
                        __CFG_USBDIV$2 000000                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TXREG 000FAD                                  _Ecg_X 004C  
                                _Ecg_Y 0048                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         TFT_DrawLine@x0 0011  
                       TFT_DrawLine@x1 0015                         TFT_DrawLine@y0 0013  
                       TFT_DrawLine@y1 0017                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                         TFT_DrawLine@dx 002E  
                       TFT_DrawLine@dy 0026                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                __size_of_Ecg_CheckLeads 0050  
                      __end_of_dpowers 5F95                        __end_of_isdigit 15EA  
                     __end_of_TFT_Font 5EBF                       __end_of_TFT_Init 0BFA  
                       TFT_DrawPixel@x 000B                         TFT_DrawPixel@y 000D  
                   __size_of_TFT_Flood 0182                       _TFT_DrawFillRect 10EC  
                                tablat 000FF5                     __size_of_TFT_Reset 001E  
               __size_of_Ecg_Interrupt 0020                       __end_of_Ecg_Draw 0CC8  
                     __end_of_Ecg_Init 161A                       __end_of_Ecg_Read 1074  
                 TFT_DrawBitmap@bitmap 0012                                  ttemp5 0053  
                                ttemp6 0056                                  ttemp7 005A  
                                status 000FD8                                  wtemp8 0053  
                      __end_of_sprintf 02E6                         __CFG_MCLRE$OFF 000000  
                       TFT_Flood@color 000B                        __initialization 1248  
                         __end_of_main 16BC                           __end_of_init 1248  
                         __end_of_loop 16D0                                 ??_main 0048  
                     ??_TFT_FillScreen 001C                                 ??_init 0003  
                               ??_loop 0048                       ??_TFT_DrawBitmap 0016  
                        __activetblptr 000002                       ??_TFT_DrawString 0048  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                     ___awdiv@dividend 0003                      _TFT_DrawChar$1863 0037  
                    _TFT_DrawChar$1864 0039                                 i2l2845 1666  
                               i2l2861 14E4                                 i2l2847 1680  
                               i2l2871 150C                                 i2l2863 14F2  
                               i2l2849 1682                                 i2l2865 1500  
                               i2l2867 1504                                 i2l2859 14D6  
                               i2l2869 1508                                 _TMR3IE 007D01  
                               _TMR3IF 007D09                                 _SPBRGH 000FB0  
                      TFT_DrawBitmap@h 0019                        TFT_DrawBitmap@i 001C  
                      TFT_DrawBitmap@j 001A                        TFT_DrawBitmap@w 0018  
                      TFT_DrawBitmap@x 0017                        TFT_DrawBitmap@y 0011  
     __size_of_Ecg_Background_Leads_Ok 0078                         __CFG_XINST$OFF 000000  
                      TFT_DrawLine@err 002A                       ??_TFT_FullScreen 0013  
                               ___wmul 161A                              ??___awdiv 0007  
                            ??___lldiv 000B                              ??___lwdiv 0007  
                            ??___lwmod 000E                          _Ecg_Interrupt 1666  
                    __end_of_TFT_Flood 0844                                 clear_0 128E  
                               clear_1 129A                       ___awdiv@quotient 0009  
                    __end_of_TFT_Reset 16A4                           __pdataCOMRAM 0048  
                            ??_isdigit 0003                           __mediumconst 59BE  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                        TFT_DrawString@x 003D  
                      TFT_DrawString@y 003F                              ??_sprintf 0015  
                           __accesstop 0060                __end_of__initialization 12A8  
                      __CFG_PBADEN$OFF 000000                          ___rparam_used 000001  
                      TFT_Flood@blocks 0015                         __pcstackCOMRAM 0001  
                         __pidataBANK0 16BC                         ?_Ecg_Interrupt 0001  
                            ?_TFT_Init 0001     Ecg_ProcessHeartbeat@ecgDeltaAbsSum 002C  
              __size_of_Ecg_ProcessEcg 004E        Ecg_ProcessHeartbeat@ecgDeltaSum 002A  
                            ?_Ecg_Draw 0001                              ?_Ecg_Init 0001  
                            ?_Ecg_Read 0003                         _Ecg_CheckLeads 136E  
                         sprintf@width 001F                             __pbssBANK0 007D  
                           __pbssBANK1 0100                           ?_Ecg_Process 0001  
                              ?___wmul 0003                             ??_TFT_Init 001C  
             __end_of_TFT_DrawFillRect 1162                             ??_Ecg_Draw 0030  
                           ??_Ecg_Init 0048                             ??_Ecg_Read 0005  
               TFT_WriteRegister@h_596 0009                 TFT_WriteRegister@l_597 000A  
               __end_of_Ecg_CheckLeads 13BE                       TFT_DrawChar@line 0036  
                     TFT_DrawChar@size 0031                              TFT_Init@i 0024  
                      __CFG_VREGEN$OFF 000000                  TFT_DrawFillRect@color 0022  
              _Ecg_Background_Leads_Ok 1074          __size_of_Ecg_ProcessHeartRate 016C  
        __size_of_Ecg_ProcessHeartbeat 016C                                __Hparam 0000  
                              __Lparam 0000                              _ECG_FLAGS 0093  
                      ??_Ecg_Interrupt 0001                                ___awdiv 0CC8  
                              ___lldiv 0E4E                        __size_of___wmul 0026  
                              ___lwdiv 1162                                ___lwmod 12B6  
                      __CFG_STVREN$OFF 000000                          _ECG_HEARTBEAT 007D  
                              __pcinit 1248                                __ramtop 0800  
                        _ECG_HEARTRATE 004E                                __ptext0 16A4  
                              __ptext1 16CA                                __ptext2 131A  
                              __ptext3 154E                                __ptext4 0844  
                              __ptext5 0012                                __ptext6 15B8  
                              __ptext7 12B6                                __ptext8 0E4E  
                              __ptext9 13BE                  __end_of_TFT_DrawPixel 14D4  
                              _dpowers 5F8B                           __size_of_abs 0034  
                              _isdigit 15B8                           __size_of_isr 150A  
                      ?_Ecg_CheckLeads 0003                              _T3CONbits 000FB1  
        __size_of_Ecg_ProcessInterrupt 0036                                _sprintf 0012  
                       __pintcode_body 14D4                              _EUSART_RX 0100  
                 end_of_initialization 12A8                          __Lmediumconst 59BE  
                              int_func 14D4                     TFT_WriteRegister@h 0007  
                   TFT_WriteRegister@l 0008                        ___lldiv@divisor 0007  
                      ___lldiv@counter 000F              Ecg_CheckLeads@leadsStatus 0006  
                            _RCSTAbits 000FAB                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                       TFT_DrawString@bg 0045  
                        ?_TFT_DrawChar 0028                          ?_TFT_DrawLine 0011  
                       _Ecg_ProcessEcg 13BE                              _PORTAbits 000F80  
                            _PORTCbits 000F82                              _TFT_Flood 06C2  
                            _TFT_Reset 1686              ??_Ecg_Background_Leads_Ok 0048  
                          TFT_Init@cmd 0022                              _TXSTAbits 000FAC  
                   TFT_DrawBitmap@byte 001B                   __size_of_Ecg_Process 0054  
                       ??_TFT_DrawChar 0032                         ??_TFT_DrawLine 001B  
               __end_of_Ecg_ProcessEcg 140C                         __end_of___wmul 1640  
                          _BAUDCONbits 000FB8                          __pidataCOMRAM 16C4  
                    __size_of_TFT_Init 00DE                           _MILLISECONDS 008F  
                           ?_TFT_Flood 000B                             ?_TFT_Reset 0001  
                  start_initialization 1248                      __size_of_Ecg_Draw 00CE  
                    __size_of_Ecg_Init 0030                      __size_of_Ecg_Read 0078  
                          __end_of_abs 15B8                            __end_of_isr 1512  
     Ecg_ProcessHeartbeat@ecgDeltaDiff 002E                    TFT_SetAddrWindow@x1 000B  
                  TFT_SetAddrWindow@x2 000F                    TFT_SetAddrWindow@y1 000D  
                  TFT_SetAddrWindow@y2 0011                  Ecg_ProcessHeartRate@i 007B  
                Ecg_ProcessHeartRate@j 007C                __size_of_TFT_FillScreen 0046  
              __size_of_TFT_DrawBitmap 00C2                  Ecg_ProcessHeartbeat@i 0032  
              __size_of_TFT_DrawString 0090                      _TFT_Init_Sequence 5EBF  
                             ??___wmul 0007                        ?_Ecg_ProcessEcg 0001  
                          __pdataBANK0 0095                       __CFG_LPT1OSC$OFF 000000  
                    ?_TFT_DrawFillRect 001A                     ??_TFT_DrawFillRect 0024  
       ??_Ecg_Background_Leads_Failure 0048                __size_of_TFT_FullScreen 0026  
                          __pbssCOMRAM 004E                          __pcstackBANK0 0060  
                         _isdigit$1638 0004                            sprintf@flag 001C  
                          sprintf@prec 001B                            Ecg_Draw@ecg 0030  
            __end_of_TFT_Init_Sequence 5F8B                       ___lwdiv@dividend 0003  
                          Ecg_Read@ecg 0007                              __pintcode 0008  
                        __pmediumconst 59BE                               ?___awdiv 0003  
                             ?___lldiv 0003                               ?___lwdiv 0003  
                             ?___lwmod 000A                       ??_Ecg_CheckLeads 0005  
                TFT_WriteRegister@data 0005           __end_of_Ecg_ProcessHeartRate 09B0  
         __end_of_Ecg_ProcessHeartbeat 0B1C                            ??_TFT_Flood 0011  
                             ?_isdigit 0001                            ??_TFT_Reset 0003  
                    _TFT_WriteRegister 1452                       ___lwdiv@quotient 0007  
                             ?_sprintf 000F                   __end_of_TFT_DrawChar 04DA  
                 __end_of_TFT_DrawLine 06C2                     ?_TFT_WriteRegister 0003  
 Ecg_ProcessHeartRate@heartbeatAverage 0075                         ___wmul@product 0007  
                    TFT_DrawChar@color 002D                    ??_TFT_WriteRegister 0007  
         __end_of_Ecg_ProcessInterrupt 1584               _Ecg_ProcessHeartRate$881 0071  
             _Ecg_ProcessHeartRate$882 0073                               i2u192_40 14E4  
                             i2u192_41 14E0                               i2u193_40 14F2  
                             i2u193_41 14EE                               _GO_nDONE 007E11  
                             _UCFGbits 000F6F                       __CFG_WDTPS$32768 000000  
                             _UCONbits 000F6D                  __end_of_Ecg_Interrupt 1686  
                             _TFT_Font 59BF                               _TFT_Init 0B1C  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0                      ___wmul@multiplier 0003  
                             _Ecg_Draw 0BFA                               _Ecg_Init 15EA  
                             _Ecg_Read 0FFC                             TFT_Flood@i 0017  
                             _Ecg_Xold 004A                               _Ecg_Yold 009B  
            __end_of_TFT_WriteRegister 1496                     TFT_DrawPixel@color 000F  
                    TFT_DrawFillRect@h 0020                      TFT_DrawFillRect@w 001E  
                    TFT_DrawFillRect@x 001A                      TFT_DrawFillRect@y 001C  
                       _TFT_FillScreen 140C                              copy_data0 125C  
                            copy_data1 127C                         _TFT_DrawBitmap 0D8C  
                    _TFT_SetAddrWindow 0F82                         _TFT_DrawString 0EF2  
               __size_of_TFT_DrawPixel 003E                     ?_TFT_SetAddrWindow 000B  
                             __Hrparam 0000                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0020              Ecg_ProcessHeartRate@jPrev 007A  
                           _ECG_BUFFER 008A                    TFT_DrawString@color 0043  
                  ??_TFT_SetAddrWindow 0013                      TFT_DrawLine@t_641 0020  
                    TFT_DrawLine@t_642 0022                      TFT_DrawLine@t_643 0024  
                     __size_of___awdiv 00C4          Ecg_ProcessHeartRate@heartrate 0079  
                     __size_of___lldiv 00A4                      TFT_DrawLine@color 0019  
                     __size_of___lwdiv 0074                       __size_of___lwmod 0064  
                    TFT_DrawLine@steep 002C                      TFT_DrawLine@ystep 0028  
                       _TFT_FullScreen 1640                             sprintf@val 001D  
                     __size_of_isdigit 0032                        ___lwdiv@divisor 0005  
               __end_of_TFT_FillScreen 1452                        ___lwdiv@counter 0009  
               __end_of_TFT_DrawBitmap 0E4E                               __ptext10 09B0  
                             __ptext11 0D8C                               __ptext20 1074  
                             __ptext12 0BFA                               __ptext21 04DA  
                             __ptext13 1162                               __ptext30 161A  
                             __ptext22 1584                               __ptext14 0FFC  
                             __ptext31 1640                               __ptext23 0CC8  
                             __ptext15 11D6                               __ptext32 0F82  
                             __ptext24 1512                               __ptext16 0B1C  
                             __ptext33 06C2                               __ptext25 140C  
                             __ptext17 1686                               __ptext34 1452  
                             __ptext26 0EF2                               __ptext18 15EA  
                             __ptext27 02E6                               __ptext19 136E  
                             __ptext36 1666                               __ptext28 1496  
                             __ptext29 10EC                   TFT_WriteRegister@reg 0003  
            __end_of_TFT_SetAddrWindow 0FFC                       __size_of_sprintf 02D4  
               __end_of_TFT_DrawString 0F82                          __size_of_main 0018  
                        __size_of_init 0072                          __size_of_loop 0006  
                        ??_Ecg_Process 0048                   _Ecg_ProcessHeartRate 0844  
                     ??_Ecg_ProcessEcg 0048                   _Ecg_ProcessHeartbeat 09B0  
                       _ECG_ICON_HEART 5F95                               int$flags 0052  
                  TFT_FillScreen@color 001A                 __end_of_TFT_FullScreen 1666  
                __CFG_CPUDIV$OSC1_PLL2 000000                          _TFT_DrawPixel 1496  
                          _OSCTUNEbits 000F9B                  __size_of_TFT_DrawChar 01F4  
                __size_of_TFT_DrawLine 01E8             __size_of_TFT_WriteRegister 0044  
                 _Ecg_ProcessInterrupt 154E                        ?_TFT_FillScreen 001A  
             ?_Ecg_Background_Leads_Ok 0001                               isdigit@c 0005  
                      ?_TFT_DrawBitmap 0011                     TFT_DrawString@size 0047  
                             intlevel2 0000                              sprintf@ap 0019  
                            sprintf@sp 000F              __size_of_TFT_DrawFillRect 0076  
                      ?_TFT_DrawString 003D                       ___lwmod@dividend 000A  
                     ___lldiv@dividend 0003                 __end_of_ECG_ICON_HEART 5FD3  
                ?_Ecg_ProcessHeartRate 0001                  ?_Ecg_ProcessHeartbeat 0001  
                           _OSCCONbits 000FD3              Ecg_ProcessHeartbeat@delta 0030  
                  __end_of_Ecg_Process 136E                           _TFT_DrawChar 02E6  
                         _TFT_DrawLine 04DA                        ?_TFT_FullScreen 0001  
                    TFT_DrawString@str 0041                         ?_TFT_DrawPixel 000B  
                             sprintf@c 0021                               sprintf@f 0011  
                     ___lldiv@quotient 000B                        ___lwmod@divisor 000C  
                      ___lwmod@counter 000E                  ?_Ecg_ProcessInterrupt 0001  
           __size_of_TFT_SetAddrWindow 007A                     __CFG_FOSC$HSPLL_HS 000000  
 __end_of_Ecg_Background_Leads_Failure 154E  __size_of_Ecg_Background_Leads_Failure 003C  
         _Ecg_Background_Leads_Failure 1512  
