

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 26 21:15:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 2.10
    85                           ; Generated 31/07/2019 GMT
    86                           ; 
    87                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F2455 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataCOMRAM
   120  002BD0                     __pidataCOMRAM:
   121                           	opt callstack 0
   122                           
   123                           ;initializer for _Ecg_Y
   124  002BD0  018F               	dw	399
   125                           
   126                           	psect	idataBANK0
   127  002BC4                     __pidataBANK0:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for _Ecg_Yold
   131  002BC4  018F               	dw	399
   132                           
   133                           ;initializer for _Ecg_Xold
   134  002BC6  00EF               	dw	239
   135                           
   136                           ;initializer for _Ecg_X
   137  002BC8  00EF               	dw	239
   138                           
   139                           	psect	mediumconst
   140  0057F0                     __pmediumconst:
   141                           	opt callstack 0
   142  0057F0  00                 	db	0
   143  0057F1                     _TFT_Font:
   144                           	opt callstack 0
   145  0057F1  00                 	db	0
   146  0057F2  00                 	db	0
   147  0057F3  00                 	db	0
   148  0057F4  00                 	db	0
   149  0057F5  00                 	db	0
   150  0057F6  3E                 	db	62
   151  0057F7  5B                 	db	91
   152  0057F8  4F                 	db	79
   153  0057F9  5B                 	db	91
   154  0057FA  3E                 	db	62
   155  0057FB  3E                 	db	62
   156  0057FC  6B                 	db	107
   157  0057FD  4F                 	db	79
   158  0057FE  6B                 	db	107
   159  0057FF  3E                 	db	62
   160  005800  1C                 	db	28
   161  005801  3E                 	db	62
   162  005802  7C                 	db	124
   163  005803  3E                 	db	62
   164  005804  1C                 	db	28
   165  005805  18                 	db	24
   166  005806  3C                 	db	60
   167  005807  7E                 	db	126
   168  005808  3C                 	db	60
   169  005809  18                 	db	24
   170  00580A  1C                 	db	28
   171  00580B  57                 	db	87
   172  00580C  7D                 	db	125
   173  00580D  57                 	db	87
   174  00580E  1C                 	db	28
   175  00580F  1C                 	db	28
   176  005810  5E                 	db	94
   177  005811  7F                 	db	127
   178  005812  5E                 	db	94
   179  005813  1C                 	db	28
   180  005814  00                 	db	0
   181  005815  18                 	db	24
   182  005816  3C                 	db	60
   183  005817  18                 	db	24
   184  005818  00                 	db	0
   185  005819  FF                 	db	255
   186  00581A  E7                 	db	231
   187  00581B  C3                 	db	195
   188  00581C  E7                 	db	231
   189  00581D  FF                 	db	255
   190  00581E  00                 	db	0
   191  00581F  18                 	db	24
   192  005820  24                 	db	36
   193  005821  18                 	db	24
   194  005822  00                 	db	0
   195  005823  FF                 	db	255
   196  005824  E7                 	db	231
   197  005825  DB                 	db	219
   198  005826  E7                 	db	231
   199  005827  FF                 	db	255
   200  005828  30                 	db	48
   201  005829  48                 	db	72
   202  00582A  3A                 	db	58
   203  00582B  06                 	db	6
   204  00582C  0E                 	db	14
   205  00582D  26                 	db	38
   206  00582E  29                 	db	41
   207  00582F  79                 	db	121
   208  005830  29                 	db	41
   209  005831  26                 	db	38
   210  005832  40                 	db	64
   211  005833  7F                 	db	127
   212  005834  05                 	db	5
   213  005835  05                 	db	5
   214  005836  07                 	db	7
   215  005837  40                 	db	64
   216  005838  7F                 	db	127
   217  005839  05                 	db	5
   218  00583A  25                 	db	37
   219  00583B  3F                 	db	63
   220  00583C  5A                 	db	90
   221  00583D  3C                 	db	60
   222  00583E  E7                 	db	231
   223  00583F  3C                 	db	60
   224  005840  5A                 	db	90
   225  005841  7F                 	db	127
   226  005842  3E                 	db	62
   227  005843  1C                 	db	28
   228  005844  1C                 	db	28
   229  005845  08                 	db	8
   230  005846  08                 	db	8
   231  005847  1C                 	db	28
   232  005848  1C                 	db	28
   233  005849  3E                 	db	62
   234  00584A  7F                 	db	127
   235  00584B  14                 	db	20
   236  00584C  22                 	db	34
   237  00584D  7F                 	db	127
   238  00584E  22                 	db	34
   239  00584F  14                 	db	20
   240  005850  5F                 	db	95
   241  005851  5F                 	db	95
   242  005852  00                 	db	0
   243  005853  5F                 	db	95
   244  005854  5F                 	db	95
   245  005855  06                 	db	6
   246  005856  09                 	db	9
   247  005857  7F                 	db	127
   248  005858  01                 	db	1
   249  005859  7F                 	db	127
   250  00585A  00                 	db	0
   251  00585B  66                 	db	102
   252  00585C  89                 	db	137
   253  00585D  95                 	db	149
   254  00585E  6A                 	db	106
   255  00585F  60                 	db	96
   256  005860  60                 	db	96
   257  005861  60                 	db	96
   258  005862  60                 	db	96
   259  005863  60                 	db	96
   260  005864  94                 	db	148
   261  005865  A2                 	db	162
   262  005866  FF                 	db	255
   263  005867  A2                 	db	162
   264  005868  94                 	db	148
   265  005869  08                 	db	8
   266  00586A  04                 	db	4
   267  00586B  7E                 	db	126
   268  00586C  04                 	db	4
   269  00586D  08                 	db	8
   270  00586E  10                 	db	16
   271  00586F  20                 	db	32
   272  005870  7E                 	db	126
   273  005871  20                 	db	32
   274  005872  10                 	db	16
   275  005873  08                 	db	8
   276  005874  08                 	db	8
   277  005875  2A                 	db	42
   278  005876  1C                 	db	28
   279  005877  08                 	db	8
   280  005878  08                 	db	8
   281  005879  1C                 	db	28
   282  00587A  2A                 	db	42
   283  00587B  08                 	db	8
   284  00587C  08                 	db	8
   285  00587D  1E                 	db	30
   286  00587E  10                 	db	16
   287  00587F  10                 	db	16
   288  005880  10                 	db	16
   289  005881  10                 	db	16
   290  005882  0C                 	db	12
   291  005883  1E                 	db	30
   292  005884  0C                 	db	12
   293  005885  1E                 	db	30
   294  005886  0C                 	db	12
   295  005887  30                 	db	48
   296  005888  38                 	db	56
   297  005889  3E                 	db	62
   298  00588A  38                 	db	56
   299  00588B  30                 	db	48
   300  00588C  06                 	db	6
   301  00588D  0E                 	db	14
   302  00588E  3E                 	db	62
   303  00588F  0E                 	db	14
   304  005890  06                 	db	6
   305  005891  00                 	db	0
   306  005892  00                 	db	0
   307  005893  00                 	db	0
   308  005894  00                 	db	0
   309  005895  00                 	db	0
   310  005896  00                 	db	0
   311  005897  00                 	db	0
   312  005898  5F                 	db	95
   313  005899  00                 	db	0
   314  00589A  00                 	db	0
   315  00589B  00                 	db	0
   316  00589C  07                 	db	7
   317  00589D  00                 	db	0
   318  00589E  07                 	db	7
   319  00589F  00                 	db	0
   320  0058A0  14                 	db	20
   321  0058A1  7F                 	db	127
   322  0058A2  14                 	db	20
   323  0058A3  7F                 	db	127
   324  0058A4  14                 	db	20
   325  0058A5  24                 	db	36
   326  0058A6  2A                 	db	42
   327  0058A7  7F                 	db	127
   328  0058A8  2A                 	db	42
   329  0058A9  12                 	db	18
   330  0058AA  23                 	db	35
   331  0058AB  13                 	db	19
   332  0058AC  08                 	db	8
   333  0058AD  64                 	db	100
   334  0058AE  62                 	db	98
   335  0058AF  36                 	db	54
   336  0058B0  49                 	db	73
   337  0058B1  56                 	db	86
   338  0058B2  20                 	db	32
   339  0058B3  50                 	db	80
   340  0058B4  00                 	db	0
   341  0058B5  08                 	db	8
   342  0058B6  07                 	db	7
   343  0058B7  03                 	db	3
   344  0058B8  00                 	db	0
   345  0058B9  00                 	db	0
   346  0058BA  1C                 	db	28
   347  0058BB  22                 	db	34
   348  0058BC  41                 	db	65
   349  0058BD  00                 	db	0
   350  0058BE  00                 	db	0
   351  0058BF  41                 	db	65
   352  0058C0  22                 	db	34
   353  0058C1  1C                 	db	28
   354  0058C2  00                 	db	0
   355  0058C3  2A                 	db	42
   356  0058C4  1C                 	db	28
   357  0058C5  7F                 	db	127
   358  0058C6  1C                 	db	28
   359  0058C7  2A                 	db	42
   360  0058C8  08                 	db	8
   361  0058C9  08                 	db	8
   362  0058CA  3E                 	db	62
   363  0058CB  08                 	db	8
   364  0058CC  08                 	db	8
   365  0058CD  00                 	db	0
   366  0058CE  80                 	db	128
   367  0058CF  70                 	db	112
   368  0058D0  30                 	db	48
   369  0058D1  00                 	db	0
   370  0058D2  08                 	db	8
   371  0058D3  08                 	db	8
   372  0058D4  08                 	db	8
   373  0058D5  08                 	db	8
   374  0058D6  08                 	db	8
   375  0058D7  00                 	db	0
   376  0058D8  00                 	db	0
   377  0058D9  60                 	db	96
   378  0058DA  60                 	db	96
   379  0058DB  00                 	db	0
   380  0058DC  20                 	db	32
   381  0058DD  10                 	db	16
   382  0058DE  08                 	db	8
   383  0058DF  04                 	db	4
   384  0058E0  02                 	db	2
   385  0058E1  3E                 	db	62
   386  0058E2  51                 	db	81
   387  0058E3  49                 	db	73
   388  0058E4  45                 	db	69
   389  0058E5  3E                 	db	62
   390  0058E6  00                 	db	0
   391  0058E7  42                 	db	66
   392  0058E8  7F                 	db	127
   393  0058E9  40                 	db	64
   394  0058EA  00                 	db	0
   395  0058EB  72                 	db	114
   396  0058EC  49                 	db	73
   397  0058ED  49                 	db	73
   398  0058EE  49                 	db	73
   399  0058EF  46                 	db	70
   400  0058F0  21                 	db	33
   401  0058F1  41                 	db	65
   402  0058F2  49                 	db	73
   403  0058F3  4D                 	db	77
   404  0058F4  33                 	db	51
   405  0058F5  18                 	db	24
   406  0058F6  14                 	db	20
   407  0058F7  12                 	db	18
   408  0058F8  7F                 	db	127
   409  0058F9  10                 	db	16
   410  0058FA  27                 	db	39
   411  0058FB  45                 	db	69
   412  0058FC  45                 	db	69
   413  0058FD  45                 	db	69
   414  0058FE  39                 	db	57
   415  0058FF  3C                 	db	60
   416  005900  4A                 	db	74
   417  005901  49                 	db	73
   418  005902  49                 	db	73
   419  005903  31                 	db	49
   420  005904  41                 	db	65
   421  005905  21                 	db	33
   422  005906  11                 	db	17
   423  005907  09                 	db	9
   424  005908  07                 	db	7
   425  005909  36                 	db	54
   426  00590A  49                 	db	73
   427  00590B  49                 	db	73
   428  00590C  49                 	db	73
   429  00590D  36                 	db	54
   430  00590E  46                 	db	70
   431  00590F  49                 	db	73
   432  005910  49                 	db	73
   433  005911  29                 	db	41
   434  005912  1E                 	db	30
   435  005913  00                 	db	0
   436  005914  00                 	db	0
   437  005915  14                 	db	20
   438  005916  00                 	db	0
   439  005917  00                 	db	0
   440  005918  00                 	db	0
   441  005919  40                 	db	64
   442  00591A  34                 	db	52
   443  00591B  00                 	db	0
   444  00591C  00                 	db	0
   445  00591D  00                 	db	0
   446  00591E  08                 	db	8
   447  00591F  14                 	db	20
   448  005920  22                 	db	34
   449  005921  41                 	db	65
   450  005922  14                 	db	20
   451  005923  14                 	db	20
   452  005924  14                 	db	20
   453  005925  14                 	db	20
   454  005926  14                 	db	20
   455  005927  00                 	db	0
   456  005928  41                 	db	65
   457  005929  22                 	db	34
   458  00592A  14                 	db	20
   459  00592B  08                 	db	8
   460  00592C  02                 	db	2
   461  00592D  01                 	db	1
   462  00592E  59                 	db	89
   463  00592F  09                 	db	9
   464  005930  06                 	db	6
   465  005931  3E                 	db	62
   466  005932  41                 	db	65
   467  005933  5D                 	db	93
   468  005934  59                 	db	89
   469  005935  4E                 	db	78
   470  005936  7C                 	db	124
   471  005937  12                 	db	18
   472  005938  11                 	db	17
   473  005939  12                 	db	18
   474  00593A  7C                 	db	124
   475  00593B  7F                 	db	127
   476  00593C  49                 	db	73
   477  00593D  49                 	db	73
   478  00593E  49                 	db	73
   479  00593F  36                 	db	54
   480  005940  3E                 	db	62
   481  005941  41                 	db	65
   482  005942  41                 	db	65
   483  005943  41                 	db	65
   484  005944  22                 	db	34
   485  005945  7F                 	db	127
   486  005946  41                 	db	65
   487  005947  41                 	db	65
   488  005948  41                 	db	65
   489  005949  3E                 	db	62
   490  00594A  7F                 	db	127
   491  00594B  49                 	db	73
   492  00594C  49                 	db	73
   493  00594D  49                 	db	73
   494  00594E  41                 	db	65
   495  00594F  7F                 	db	127
   496  005950  09                 	db	9
   497  005951  09                 	db	9
   498  005952  09                 	db	9
   499  005953  01                 	db	1
   500  005954  3E                 	db	62
   501  005955  41                 	db	65
   502  005956  41                 	db	65
   503  005957  51                 	db	81
   504  005958  73                 	db	115
   505  005959  7F                 	db	127
   506  00595A  08                 	db	8
   507  00595B  08                 	db	8
   508  00595C  08                 	db	8
   509  00595D  7F                 	db	127
   510  00595E  00                 	db	0
   511  00595F  41                 	db	65
   512  005960  7F                 	db	127
   513  005961  41                 	db	65
   514  005962  00                 	db	0
   515  005963  20                 	db	32
   516  005964  40                 	db	64
   517  005965  41                 	db	65
   518  005966  3F                 	db	63
   519  005967  01                 	db	1
   520  005968  7F                 	db	127
   521  005969  08                 	db	8
   522  00596A  14                 	db	20
   523  00596B  22                 	db	34
   524  00596C  41                 	db	65
   525  00596D  7F                 	db	127
   526  00596E  40                 	db	64
   527  00596F  40                 	db	64
   528  005970  40                 	db	64
   529  005971  40                 	db	64
   530  005972  7F                 	db	127
   531  005973  02                 	db	2
   532  005974  1C                 	db	28
   533  005975  02                 	db	2
   534  005976  7F                 	db	127
   535  005977  7F                 	db	127
   536  005978  04                 	db	4
   537  005979  08                 	db	8
   538  00597A  10                 	db	16
   539  00597B  7F                 	db	127
   540  00597C  3E                 	db	62
   541  00597D  41                 	db	65
   542  00597E  41                 	db	65
   543  00597F  41                 	db	65
   544  005980  3E                 	db	62
   545  005981  7F                 	db	127
   546  005982  09                 	db	9
   547  005983  09                 	db	9
   548  005984  09                 	db	9
   549  005985  06                 	db	6
   550  005986  3E                 	db	62
   551  005987  41                 	db	65
   552  005988  51                 	db	81
   553  005989  21                 	db	33
   554  00598A  5E                 	db	94
   555  00598B  7F                 	db	127
   556  00598C  09                 	db	9
   557  00598D  19                 	db	25
   558  00598E  29                 	db	41
   559  00598F  46                 	db	70
   560  005990  26                 	db	38
   561  005991  49                 	db	73
   562  005992  49                 	db	73
   563  005993  49                 	db	73
   564  005994  32                 	db	50
   565  005995  03                 	db	3
   566  005996  01                 	db	1
   567  005997  7F                 	db	127
   568  005998  01                 	db	1
   569  005999  03                 	db	3
   570  00599A  3F                 	db	63
   571  00599B  40                 	db	64
   572  00599C  40                 	db	64
   573  00599D  40                 	db	64
   574  00599E  3F                 	db	63
   575  00599F  1F                 	db	31
   576  0059A0  20                 	db	32
   577  0059A1  40                 	db	64
   578  0059A2  20                 	db	32
   579  0059A3  1F                 	db	31
   580  0059A4  3F                 	db	63
   581  0059A5  40                 	db	64
   582  0059A6  38                 	db	56
   583  0059A7  40                 	db	64
   584  0059A8  3F                 	db	63
   585  0059A9  63                 	db	99
   586  0059AA  14                 	db	20
   587  0059AB  08                 	db	8
   588  0059AC  14                 	db	20
   589  0059AD  63                 	db	99
   590  0059AE  03                 	db	3
   591  0059AF  04                 	db	4
   592  0059B0  78                 	db	120
   593  0059B1  04                 	db	4
   594  0059B2  03                 	db	3
   595  0059B3  61                 	db	97
   596  0059B4  59                 	db	89
   597  0059B5  49                 	db	73
   598  0059B6  4D                 	db	77
   599  0059B7  43                 	db	67
   600  0059B8  00                 	db	0
   601  0059B9  7F                 	db	127
   602  0059BA  41                 	db	65
   603  0059BB  41                 	db	65
   604  0059BC  41                 	db	65
   605  0059BD  02                 	db	2
   606  0059BE  04                 	db	4
   607  0059BF  08                 	db	8
   608  0059C0  10                 	db	16
   609  0059C1  20                 	db	32
   610  0059C2  00                 	db	0
   611  0059C3  41                 	db	65
   612  0059C4  41                 	db	65
   613  0059C5  41                 	db	65
   614  0059C6  7F                 	db	127
   615  0059C7  04                 	db	4
   616  0059C8  02                 	db	2
   617  0059C9  01                 	db	1
   618  0059CA  02                 	db	2
   619  0059CB  04                 	db	4
   620  0059CC  40                 	db	64
   621  0059CD  40                 	db	64
   622  0059CE  40                 	db	64
   623  0059CF  40                 	db	64
   624  0059D0  40                 	db	64
   625  0059D1  00                 	db	0
   626  0059D2  03                 	db	3
   627  0059D3  07                 	db	7
   628  0059D4  08                 	db	8
   629  0059D5  00                 	db	0
   630  0059D6  20                 	db	32
   631  0059D7  54                 	db	84
   632  0059D8  54                 	db	84
   633  0059D9  78                 	db	120
   634  0059DA  40                 	db	64
   635  0059DB  7F                 	db	127
   636  0059DC  28                 	db	40
   637  0059DD  44                 	db	68
   638  0059DE  44                 	db	68
   639  0059DF  38                 	db	56
   640  0059E0  38                 	db	56
   641  0059E1  44                 	db	68
   642  0059E2  44                 	db	68
   643  0059E3  44                 	db	68
   644  0059E4  28                 	db	40
   645  0059E5  38                 	db	56
   646  0059E6  44                 	db	68
   647  0059E7  44                 	db	68
   648  0059E8  28                 	db	40
   649  0059E9  7F                 	db	127
   650  0059EA  38                 	db	56
   651  0059EB  54                 	db	84
   652  0059EC  54                 	db	84
   653  0059ED  54                 	db	84
   654  0059EE  18                 	db	24
   655  0059EF  00                 	db	0
   656  0059F0  08                 	db	8
   657  0059F1  7E                 	db	126
   658  0059F2  09                 	db	9
   659  0059F3  02                 	db	2
   660  0059F4  18                 	db	24
   661  0059F5  A4                 	db	164
   662  0059F6  A4                 	db	164
   663  0059F7  9C                 	db	156
   664  0059F8  78                 	db	120
   665  0059F9  7F                 	db	127
   666  0059FA  08                 	db	8
   667  0059FB  04                 	db	4
   668  0059FC  04                 	db	4
   669  0059FD  78                 	db	120
   670  0059FE  00                 	db	0
   671  0059FF  44                 	db	68
   672  005A00  7D                 	db	125
   673  005A01  40                 	db	64
   674  005A02  00                 	db	0
   675  005A03  20                 	db	32
   676  005A04  40                 	db	64
   677  005A05  40                 	db	64
   678  005A06  3D                 	db	61
   679  005A07  00                 	db	0
   680  005A08  7F                 	db	127
   681  005A09  10                 	db	16
   682  005A0A  28                 	db	40
   683  005A0B  44                 	db	68
   684  005A0C  00                 	db	0
   685  005A0D  00                 	db	0
   686  005A0E  41                 	db	65
   687  005A0F  7F                 	db	127
   688  005A10  40                 	db	64
   689  005A11  00                 	db	0
   690  005A12  7C                 	db	124
   691  005A13  04                 	db	4
   692  005A14  78                 	db	120
   693  005A15  04                 	db	4
   694  005A16  78                 	db	120
   695  005A17  7C                 	db	124
   696  005A18  08                 	db	8
   697  005A19  04                 	db	4
   698  005A1A  04                 	db	4
   699  005A1B  78                 	db	120
   700  005A1C  38                 	db	56
   701  005A1D  44                 	db	68
   702  005A1E  44                 	db	68
   703  005A1F  44                 	db	68
   704  005A20  38                 	db	56
   705  005A21  FC                 	db	252
   706  005A22  18                 	db	24
   707  005A23  24                 	db	36
   708  005A24  24                 	db	36
   709  005A25  18                 	db	24
   710  005A26  18                 	db	24
   711  005A27  24                 	db	36
   712  005A28  24                 	db	36
   713  005A29  18                 	db	24
   714  005A2A  FC                 	db	252
   715  005A2B  7C                 	db	124
   716  005A2C  08                 	db	8
   717  005A2D  04                 	db	4
   718  005A2E  04                 	db	4
   719  005A2F  08                 	db	8
   720  005A30  48                 	db	72
   721  005A31  54                 	db	84
   722  005A32  54                 	db	84
   723  005A33  54                 	db	84
   724  005A34  24                 	db	36
   725  005A35  04                 	db	4
   726  005A36  04                 	db	4
   727  005A37  3F                 	db	63
   728  005A38  44                 	db	68
   729  005A39  24                 	db	36
   730  005A3A  3C                 	db	60
   731  005A3B  40                 	db	64
   732  005A3C  40                 	db	64
   733  005A3D  20                 	db	32
   734  005A3E  7C                 	db	124
   735  005A3F  1C                 	db	28
   736  005A40  20                 	db	32
   737  005A41  40                 	db	64
   738  005A42  20                 	db	32
   739  005A43  1C                 	db	28
   740  005A44  3C                 	db	60
   741  005A45  40                 	db	64
   742  005A46  30                 	db	48
   743  005A47  40                 	db	64
   744  005A48  3C                 	db	60
   745  005A49  44                 	db	68
   746  005A4A  28                 	db	40
   747  005A4B  10                 	db	16
   748  005A4C  28                 	db	40
   749  005A4D  44                 	db	68
   750  005A4E  4C                 	db	76
   751  005A4F  90                 	db	144
   752  005A50  90                 	db	144
   753  005A51  90                 	db	144
   754  005A52  7C                 	db	124
   755  005A53  44                 	db	68
   756  005A54  64                 	db	100
   757  005A55  54                 	db	84
   758  005A56  4C                 	db	76
   759  005A57  44                 	db	68
   760  005A58  00                 	db	0
   761  005A59  08                 	db	8
   762  005A5A  36                 	db	54
   763  005A5B  41                 	db	65
   764  005A5C  00                 	db	0
   765  005A5D  00                 	db	0
   766  005A5E  00                 	db	0
   767  005A5F  77                 	db	119
   768  005A60  00                 	db	0
   769  005A61  00                 	db	0
   770  005A62  00                 	db	0
   771  005A63  41                 	db	65
   772  005A64  36                 	db	54
   773  005A65  08                 	db	8
   774  005A66  00                 	db	0
   775  005A67  02                 	db	2
   776  005A68  01                 	db	1
   777  005A69  02                 	db	2
   778  005A6A  04                 	db	4
   779  005A6B  02                 	db	2
   780  005A6C  3C                 	db	60
   781  005A6D  26                 	db	38
   782  005A6E  23                 	db	35
   783  005A6F  26                 	db	38
   784  005A70  3C                 	db	60
   785  005A71  1E                 	db	30
   786  005A72  A1                 	db	161
   787  005A73  A1                 	db	161
   788  005A74  61                 	db	97
   789  005A75  12                 	db	18
   790  005A76  3A                 	db	58
   791  005A77  40                 	db	64
   792  005A78  40                 	db	64
   793  005A79  20                 	db	32
   794  005A7A  7A                 	db	122
   795  005A7B  38                 	db	56
   796  005A7C  54                 	db	84
   797  005A7D  54                 	db	84
   798  005A7E  55                 	db	85
   799  005A7F  59                 	db	89
   800  005A80  21                 	db	33
   801  005A81  55                 	db	85
   802  005A82  55                 	db	85
   803  005A83  79                 	db	121
   804  005A84  41                 	db	65
   805  005A85  22                 	db	34
   806  005A86  54                 	db	84
   807  005A87  54                 	db	84
   808  005A88  78                 	db	120
   809  005A89  42                 	db	66
   810  005A8A  21                 	db	33
   811  005A8B  55                 	db	85
   812  005A8C  54                 	db	84
   813  005A8D  78                 	db	120
   814  005A8E  40                 	db	64
   815  005A8F  20                 	db	32
   816  005A90  54                 	db	84
   817  005A91  55                 	db	85
   818  005A92  79                 	db	121
   819  005A93  40                 	db	64
   820  005A94  0C                 	db	12
   821  005A95  1E                 	db	30
   822  005A96  52                 	db	82
   823  005A97  72                 	db	114
   824  005A98  12                 	db	18
   825  005A99  39                 	db	57
   826  005A9A  55                 	db	85
   827  005A9B  55                 	db	85
   828  005A9C  55                 	db	85
   829  005A9D  59                 	db	89
   830  005A9E  39                 	db	57
   831  005A9F  54                 	db	84
   832  005AA0  54                 	db	84
   833  005AA1  54                 	db	84
   834  005AA2  59                 	db	89
   835  005AA3  39                 	db	57
   836  005AA4  55                 	db	85
   837  005AA5  54                 	db	84
   838  005AA6  54                 	db	84
   839  005AA7  58                 	db	88
   840  005AA8  00                 	db	0
   841  005AA9  00                 	db	0
   842  005AAA  45                 	db	69
   843  005AAB  7C                 	db	124
   844  005AAC  41                 	db	65
   845  005AAD  00                 	db	0
   846  005AAE  02                 	db	2
   847  005AAF  45                 	db	69
   848  005AB0  7D                 	db	125
   849  005AB1  42                 	db	66
   850  005AB2  00                 	db	0
   851  005AB3  01                 	db	1
   852  005AB4  45                 	db	69
   853  005AB5  7C                 	db	124
   854  005AB6  40                 	db	64
   855  005AB7  7D                 	db	125
   856  005AB8  12                 	db	18
   857  005AB9  11                 	db	17
   858  005ABA  12                 	db	18
   859  005ABB  7D                 	db	125
   860  005ABC  F0                 	db	240
   861  005ABD  28                 	db	40
   862  005ABE  25                 	db	37
   863  005ABF  28                 	db	40
   864  005AC0  F0                 	db	240
   865  005AC1  7C                 	db	124
   866  005AC2  54                 	db	84
   867  005AC3  55                 	db	85
   868  005AC4  45                 	db	69
   869  005AC5  00                 	db	0
   870  005AC6  20                 	db	32
   871  005AC7  54                 	db	84
   872  005AC8  54                 	db	84
   873  005AC9  7C                 	db	124
   874  005ACA  54                 	db	84
   875  005ACB  7C                 	db	124
   876  005ACC  0A                 	db	10
   877  005ACD  09                 	db	9
   878  005ACE  7F                 	db	127
   879  005ACF  49                 	db	73
   880  005AD0  32                 	db	50
   881  005AD1  49                 	db	73
   882  005AD2  49                 	db	73
   883  005AD3  49                 	db	73
   884  005AD4  32                 	db	50
   885  005AD5  3A                 	db	58
   886  005AD6  44                 	db	68
   887  005AD7  44                 	db	68
   888  005AD8  44                 	db	68
   889  005AD9  3A                 	db	58
   890  005ADA  32                 	db	50
   891  005ADB  4A                 	db	74
   892  005ADC  48                 	db	72
   893  005ADD  48                 	db	72
   894  005ADE  30                 	db	48
   895  005ADF  3A                 	db	58
   896  005AE0  41                 	db	65
   897  005AE1  41                 	db	65
   898  005AE2  21                 	db	33
   899  005AE3  7A                 	db	122
   900  005AE4  3A                 	db	58
   901  005AE5  42                 	db	66
   902  005AE6  40                 	db	64
   903  005AE7  20                 	db	32
   904  005AE8  78                 	db	120
   905  005AE9  00                 	db	0
   906  005AEA  9D                 	db	157
   907  005AEB  A0                 	db	160
   908  005AEC  A0                 	db	160
   909  005AED  7D                 	db	125
   910  005AEE  3D                 	db	61
   911  005AEF  42                 	db	66
   912  005AF0  42                 	db	66
   913  005AF1  42                 	db	66
   914  005AF2  3D                 	db	61
   915  005AF3  3D                 	db	61
   916  005AF4  40                 	db	64
   917  005AF5  40                 	db	64
   918  005AF6  40                 	db	64
   919  005AF7  3D                 	db	61
   920  005AF8  3C                 	db	60
   921  005AF9  24                 	db	36
   922  005AFA  FF                 	db	255
   923  005AFB  24                 	db	36
   924  005AFC  24                 	db	36
   925  005AFD  48                 	db	72
   926  005AFE  7E                 	db	126
   927  005AFF  49                 	db	73
   928  005B00  43                 	db	67
   929  005B01  66                 	db	102
   930  005B02  2B                 	db	43
   931  005B03  2F                 	db	47
   932  005B04  FC                 	db	252
   933  005B05  2F                 	db	47
   934  005B06  2B                 	db	43
   935  005B07  FF                 	db	255
   936  005B08  09                 	db	9
   937  005B09  29                 	db	41
   938  005B0A  F6                 	db	246
   939  005B0B  20                 	db	32
   940  005B0C  C0                 	db	192
   941  005B0D  88                 	db	136
   942  005B0E  7E                 	db	126
   943  005B0F  09                 	db	9
   944  005B10  03                 	db	3
   945  005B11  20                 	db	32
   946  005B12  54                 	db	84
   947  005B13  54                 	db	84
   948  005B14  79                 	db	121
   949  005B15  41                 	db	65
   950  005B16  00                 	db	0
   951  005B17  00                 	db	0
   952  005B18  44                 	db	68
   953  005B19  7D                 	db	125
   954  005B1A  41                 	db	65
   955  005B1B  30                 	db	48
   956  005B1C  48                 	db	72
   957  005B1D  48                 	db	72
   958  005B1E  4A                 	db	74
   959  005B1F  32                 	db	50
   960  005B20  38                 	db	56
   961  005B21  40                 	db	64
   962  005B22  40                 	db	64
   963  005B23  22                 	db	34
   964  005B24  7A                 	db	122
   965  005B25  00                 	db	0
   966  005B26  7A                 	db	122
   967  005B27  0A                 	db	10
   968  005B28  0A                 	db	10
   969  005B29  72                 	db	114
   970  005B2A  7D                 	db	125
   971  005B2B  0D                 	db	13
   972  005B2C  19                 	db	25
   973  005B2D  31                 	db	49
   974  005B2E  7D                 	db	125
   975  005B2F  26                 	db	38
   976  005B30  29                 	db	41
   977  005B31  29                 	db	41
   978  005B32  2F                 	db	47
   979  005B33  28                 	db	40
   980  005B34  26                 	db	38
   981  005B35  29                 	db	41
   982  005B36  29                 	db	41
   983  005B37  29                 	db	41
   984  005B38  26                 	db	38
   985  005B39  30                 	db	48
   986  005B3A  48                 	db	72
   987  005B3B  4D                 	db	77
   988  005B3C  40                 	db	64
   989  005B3D  20                 	db	32
   990  005B3E  38                 	db	56
   991  005B3F  08                 	db	8
   992  005B40  08                 	db	8
   993  005B41  08                 	db	8
   994  005B42  08                 	db	8
   995  005B43  08                 	db	8
   996  005B44  08                 	db	8
   997  005B45  08                 	db	8
   998  005B46  08                 	db	8
   999  005B47  38                 	db	56
  1000  005B48  2F                 	db	47
  1001  005B49  10                 	db	16
  1002  005B4A  C8                 	db	200
  1003  005B4B  AC                 	db	172
  1004  005B4C  BA                 	db	186
  1005  005B4D  2F                 	db	47
  1006  005B4E  10                 	db	16
  1007  005B4F  28                 	db	40
  1008  005B50  34                 	db	52
  1009  005B51  FA                 	db	250
  1010  005B52  00                 	db	0
  1011  005B53  00                 	db	0
  1012  005B54  7B                 	db	123
  1013  005B55  00                 	db	0
  1014  005B56  00                 	db	0
  1015  005B57  08                 	db	8
  1016  005B58  14                 	db	20
  1017  005B59  2A                 	db	42
  1018  005B5A  14                 	db	20
  1019  005B5B  22                 	db	34
  1020  005B5C  22                 	db	34
  1021  005B5D  14                 	db	20
  1022  005B5E  2A                 	db	42
  1023  005B5F  14                 	db	20
  1024  005B60  08                 	db	8
  1025  005B61  55                 	db	85
  1026  005B62  00                 	db	0
  1027  005B63  55                 	db	85
  1028  005B64  00                 	db	0
  1029  005B65  55                 	db	85
  1030  005B66  AA                 	db	170
  1031  005B67  55                 	db	85
  1032  005B68  AA                 	db	170
  1033  005B69  55                 	db	85
  1034  005B6A  AA                 	db	170
  1035  005B6B  FF                 	db	255
  1036  005B6C  55                 	db	85
  1037  005B6D  FF                 	db	255
  1038  005B6E  55                 	db	85
  1039  005B6F  FF                 	db	255
  1040  005B70  00                 	db	0
  1041  005B71  00                 	db	0
  1042  005B72  00                 	db	0
  1043  005B73  FF                 	db	255
  1044  005B74  00                 	db	0
  1045  005B75  10                 	db	16
  1046  005B76  10                 	db	16
  1047  005B77  10                 	db	16
  1048  005B78  FF                 	db	255
  1049  005B79  00                 	db	0
  1050  005B7A  14                 	db	20
  1051  005B7B  14                 	db	20
  1052  005B7C  14                 	db	20
  1053  005B7D  FF                 	db	255
  1054  005B7E  00                 	db	0
  1055  005B7F  10                 	db	16
  1056  005B80  10                 	db	16
  1057  005B81  FF                 	db	255
  1058  005B82  00                 	db	0
  1059  005B83  FF                 	db	255
  1060  005B84  10                 	db	16
  1061  005B85  10                 	db	16
  1062  005B86  F0                 	db	240
  1063  005B87  10                 	db	16
  1064  005B88  F0                 	db	240
  1065  005B89  14                 	db	20
  1066  005B8A  14                 	db	20
  1067  005B8B  14                 	db	20
  1068  005B8C  FC                 	db	252
  1069  005B8D  00                 	db	0
  1070  005B8E  14                 	db	20
  1071  005B8F  14                 	db	20
  1072  005B90  F7                 	db	247
  1073  005B91  00                 	db	0
  1074  005B92  FF                 	db	255
  1075  005B93  00                 	db	0
  1076  005B94  00                 	db	0
  1077  005B95  FF                 	db	255
  1078  005B96  00                 	db	0
  1079  005B97  FF                 	db	255
  1080  005B98  14                 	db	20
  1081  005B99  14                 	db	20
  1082  005B9A  F4                 	db	244
  1083  005B9B  04                 	db	4
  1084  005B9C  FC                 	db	252
  1085  005B9D  14                 	db	20
  1086  005B9E  14                 	db	20
  1087  005B9F  17                 	db	23
  1088  005BA0  10                 	db	16
  1089  005BA1  1F                 	db	31
  1090  005BA2  10                 	db	16
  1091  005BA3  10                 	db	16
  1092  005BA4  1F                 	db	31
  1093  005BA5  10                 	db	16
  1094  005BA6  1F                 	db	31
  1095  005BA7  14                 	db	20
  1096  005BA8  14                 	db	20
  1097  005BA9  14                 	db	20
  1098  005BAA  1F                 	db	31
  1099  005BAB  00                 	db	0
  1100  005BAC  10                 	db	16
  1101  005BAD  10                 	db	16
  1102  005BAE  10                 	db	16
  1103  005BAF  F0                 	db	240
  1104  005BB0  00                 	db	0
  1105  005BB1  00                 	db	0
  1106  005BB2  00                 	db	0
  1107  005BB3  00                 	db	0
  1108  005BB4  1F                 	db	31
  1109  005BB5  10                 	db	16
  1110  005BB6  10                 	db	16
  1111  005BB7  10                 	db	16
  1112  005BB8  10                 	db	16
  1113  005BB9  1F                 	db	31
  1114  005BBA  10                 	db	16
  1115  005BBB  10                 	db	16
  1116  005BBC  10                 	db	16
  1117  005BBD  10                 	db	16
  1118  005BBE  F0                 	db	240
  1119  005BBF  10                 	db	16
  1120  005BC0  00                 	db	0
  1121  005BC1  00                 	db	0
  1122  005BC2  00                 	db	0
  1123  005BC3  FF                 	db	255
  1124  005BC4  10                 	db	16
  1125  005BC5  10                 	db	16
  1126  005BC6  10                 	db	16
  1127  005BC7  10                 	db	16
  1128  005BC8  10                 	db	16
  1129  005BC9  10                 	db	16
  1130  005BCA  10                 	db	16
  1131  005BCB  10                 	db	16
  1132  005BCC  10                 	db	16
  1133  005BCD  FF                 	db	255
  1134  005BCE  10                 	db	16
  1135  005BCF  00                 	db	0
  1136  005BD0  00                 	db	0
  1137  005BD1  00                 	db	0
  1138  005BD2  FF                 	db	255
  1139  005BD3  14                 	db	20
  1140  005BD4  00                 	db	0
  1141  005BD5  00                 	db	0
  1142  005BD6  FF                 	db	255
  1143  005BD7  00                 	db	0
  1144  005BD8  FF                 	db	255
  1145  005BD9  00                 	db	0
  1146  005BDA  00                 	db	0
  1147  005BDB  1F                 	db	31
  1148  005BDC  10                 	db	16
  1149  005BDD  17                 	db	23
  1150  005BDE  00                 	db	0
  1151  005BDF  00                 	db	0
  1152  005BE0  FC                 	db	252
  1153  005BE1  04                 	db	4
  1154  005BE2  F4                 	db	244
  1155  005BE3  14                 	db	20
  1156  005BE4  14                 	db	20
  1157  005BE5  17                 	db	23
  1158  005BE6  10                 	db	16
  1159  005BE7  17                 	db	23
  1160  005BE8  14                 	db	20
  1161  005BE9  14                 	db	20
  1162  005BEA  F4                 	db	244
  1163  005BEB  04                 	db	4
  1164  005BEC  F4                 	db	244
  1165  005BED  00                 	db	0
  1166  005BEE  00                 	db	0
  1167  005BEF  FF                 	db	255
  1168  005BF0  00                 	db	0
  1169  005BF1  F7                 	db	247
  1170  005BF2  14                 	db	20
  1171  005BF3  14                 	db	20
  1172  005BF4  14                 	db	20
  1173  005BF5  14                 	db	20
  1174  005BF6  14                 	db	20
  1175  005BF7  14                 	db	20
  1176  005BF8  14                 	db	20
  1177  005BF9  F7                 	db	247
  1178  005BFA  00                 	db	0
  1179  005BFB  F7                 	db	247
  1180  005BFC  14                 	db	20
  1181  005BFD  14                 	db	20
  1182  005BFE  14                 	db	20
  1183  005BFF  17                 	db	23
  1184  005C00  14                 	db	20
  1185  005C01  10                 	db	16
  1186  005C02  10                 	db	16
  1187  005C03  1F                 	db	31
  1188  005C04  10                 	db	16
  1189  005C05  1F                 	db	31
  1190  005C06  14                 	db	20
  1191  005C07  14                 	db	20
  1192  005C08  14                 	db	20
  1193  005C09  F4                 	db	244
  1194  005C0A  14                 	db	20
  1195  005C0B  10                 	db	16
  1196  005C0C  10                 	db	16
  1197  005C0D  F0                 	db	240
  1198  005C0E  10                 	db	16
  1199  005C0F  F0                 	db	240
  1200  005C10  00                 	db	0
  1201  005C11  00                 	db	0
  1202  005C12  1F                 	db	31
  1203  005C13  10                 	db	16
  1204  005C14  1F                 	db	31
  1205  005C15  00                 	db	0
  1206  005C16  00                 	db	0
  1207  005C17  00                 	db	0
  1208  005C18  1F                 	db	31
  1209  005C19  14                 	db	20
  1210  005C1A  00                 	db	0
  1211  005C1B  00                 	db	0
  1212  005C1C  00                 	db	0
  1213  005C1D  FC                 	db	252
  1214  005C1E  14                 	db	20
  1215  005C1F  00                 	db	0
  1216  005C20  00                 	db	0
  1217  005C21  F0                 	db	240
  1218  005C22  10                 	db	16
  1219  005C23  F0                 	db	240
  1220  005C24  10                 	db	16
  1221  005C25  10                 	db	16
  1222  005C26  FF                 	db	255
  1223  005C27  10                 	db	16
  1224  005C28  FF                 	db	255
  1225  005C29  14                 	db	20
  1226  005C2A  14                 	db	20
  1227  005C2B  14                 	db	20
  1228  005C2C  FF                 	db	255
  1229  005C2D  14                 	db	20
  1230  005C2E  10                 	db	16
  1231  005C2F  10                 	db	16
  1232  005C30  10                 	db	16
  1233  005C31  1F                 	db	31
  1234  005C32  00                 	db	0
  1235  005C33  00                 	db	0
  1236  005C34  00                 	db	0
  1237  005C35  00                 	db	0
  1238  005C36  F0                 	db	240
  1239  005C37  10                 	db	16
  1240  005C38  FF                 	db	255
  1241  005C39  FF                 	db	255
  1242  005C3A  FF                 	db	255
  1243  005C3B  FF                 	db	255
  1244  005C3C  FF                 	db	255
  1245  005C3D  F0                 	db	240
  1246  005C3E  F0                 	db	240
  1247  005C3F  F0                 	db	240
  1248  005C40  F0                 	db	240
  1249  005C41  F0                 	db	240
  1250  005C42  FF                 	db	255
  1251  005C43  FF                 	db	255
  1252  005C44  FF                 	db	255
  1253  005C45  00                 	db	0
  1254  005C46  00                 	db	0
  1255  005C47  00                 	db	0
  1256  005C48  00                 	db	0
  1257  005C49  00                 	db	0
  1258  005C4A  FF                 	db	255
  1259  005C4B  FF                 	db	255
  1260  005C4C  0F                 	db	15
  1261  005C4D  0F                 	db	15
  1262  005C4E  0F                 	db	15
  1263  005C4F  0F                 	db	15
  1264  005C50  0F                 	db	15
  1265  005C51  38                 	db	56
  1266  005C52  44                 	db	68
  1267  005C53  44                 	db	68
  1268  005C54  38                 	db	56
  1269  005C55  44                 	db	68
  1270  005C56  FC                 	db	252
  1271  005C57  4A                 	db	74
  1272  005C58  4A                 	db	74
  1273  005C59  4A                 	db	74
  1274  005C5A  34                 	db	52
  1275  005C5B  7E                 	db	126
  1276  005C5C  02                 	db	2
  1277  005C5D  02                 	db	2
  1278  005C5E  06                 	db	6
  1279  005C5F  06                 	db	6
  1280  005C60  02                 	db	2
  1281  005C61  7E                 	db	126
  1282  005C62  02                 	db	2
  1283  005C63  7E                 	db	126
  1284  005C64  02                 	db	2
  1285  005C65  63                 	db	99
  1286  005C66  55                 	db	85
  1287  005C67  49                 	db	73
  1288  005C68  41                 	db	65
  1289  005C69  63                 	db	99
  1290  005C6A  38                 	db	56
  1291  005C6B  44                 	db	68
  1292  005C6C  44                 	db	68
  1293  005C6D  3C                 	db	60
  1294  005C6E  04                 	db	4
  1295  005C6F  40                 	db	64
  1296  005C70  7E                 	db	126
  1297  005C71  20                 	db	32
  1298  005C72  1E                 	db	30
  1299  005C73  20                 	db	32
  1300  005C74  06                 	db	6
  1301  005C75  02                 	db	2
  1302  005C76  7E                 	db	126
  1303  005C77  02                 	db	2
  1304  005C78  02                 	db	2
  1305  005C79  99                 	db	153
  1306  005C7A  A5                 	db	165
  1307  005C7B  E7                 	db	231
  1308  005C7C  A5                 	db	165
  1309  005C7D  99                 	db	153
  1310  005C7E  1C                 	db	28
  1311  005C7F  2A                 	db	42
  1312  005C80  49                 	db	73
  1313  005C81  2A                 	db	42
  1314  005C82  1C                 	db	28
  1315  005C83  4C                 	db	76
  1316  005C84  72                 	db	114
  1317  005C85  01                 	db	1
  1318  005C86  72                 	db	114
  1319  005C87  4C                 	db	76
  1320  005C88  30                 	db	48
  1321  005C89  4A                 	db	74
  1322  005C8A  4D                 	db	77
  1323  005C8B  4D                 	db	77
  1324  005C8C  30                 	db	48
  1325  005C8D  30                 	db	48
  1326  005C8E  48                 	db	72
  1327  005C8F  78                 	db	120
  1328  005C90  48                 	db	72
  1329  005C91  30                 	db	48
  1330  005C92  BC                 	db	188
  1331  005C93  62                 	db	98
  1332  005C94  5A                 	db	90
  1333  005C95  46                 	db	70
  1334  005C96  3D                 	db	61
  1335  005C97  3E                 	db	62
  1336  005C98  49                 	db	73
  1337  005C99  49                 	db	73
  1338  005C9A  49                 	db	73
  1339  005C9B  00                 	db	0
  1340  005C9C  7E                 	db	126
  1341  005C9D  01                 	db	1
  1342  005C9E  01                 	db	1
  1343  005C9F  01                 	db	1
  1344  005CA0  7E                 	db	126
  1345  005CA1  2A                 	db	42
  1346  005CA2  2A                 	db	42
  1347  005CA3  2A                 	db	42
  1348  005CA4  2A                 	db	42
  1349  005CA5  2A                 	db	42
  1350  005CA6  44                 	db	68
  1351  005CA7  44                 	db	68
  1352  005CA8  5F                 	db	95
  1353  005CA9  44                 	db	68
  1354  005CAA  44                 	db	68
  1355  005CAB  40                 	db	64
  1356  005CAC  51                 	db	81
  1357  005CAD  4A                 	db	74
  1358  005CAE  44                 	db	68
  1359  005CAF  40                 	db	64
  1360  005CB0  40                 	db	64
  1361  005CB1  44                 	db	68
  1362  005CB2  4A                 	db	74
  1363  005CB3  51                 	db	81
  1364  005CB4  40                 	db	64
  1365  005CB5  00                 	db	0
  1366  005CB6  00                 	db	0
  1367  005CB7  FF                 	db	255
  1368  005CB8  01                 	db	1
  1369  005CB9  03                 	db	3
  1370  005CBA  E0                 	db	224
  1371  005CBB  80                 	db	128
  1372  005CBC  FF                 	db	255
  1373  005CBD  00                 	db	0
  1374  005CBE  00                 	db	0
  1375  005CBF  08                 	db	8
  1376  005CC0  08                 	db	8
  1377  005CC1  6B                 	db	107
  1378  005CC2  6B                 	db	107
  1379  005CC3  08                 	db	8
  1380  005CC4  36                 	db	54
  1381  005CC5  12                 	db	18
  1382  005CC6  36                 	db	54
  1383  005CC7  24                 	db	36
  1384  005CC8  36                 	db	54
  1385  005CC9  06                 	db	6
  1386  005CCA  0F                 	db	15
  1387  005CCB  09                 	db	9
  1388  005CCC  0F                 	db	15
  1389  005CCD  06                 	db	6
  1390  005CCE  00                 	db	0
  1391  005CCF  00                 	db	0
  1392  005CD0  18                 	db	24
  1393  005CD1  18                 	db	24
  1394  005CD2  00                 	db	0
  1395  005CD3  00                 	db	0
  1396  005CD4  00                 	db	0
  1397  005CD5  10                 	db	16
  1398  005CD6  10                 	db	16
  1399  005CD7  00                 	db	0
  1400  005CD8  30                 	db	48
  1401  005CD9  40                 	db	64
  1402  005CDA  FF                 	db	255
  1403  005CDB  01                 	db	1
  1404  005CDC  01                 	db	1
  1405  005CDD  00                 	db	0
  1406  005CDE  1F                 	db	31
  1407  005CDF  01                 	db	1
  1408  005CE0  01                 	db	1
  1409  005CE1  1E                 	db	30
  1410  005CE2  00                 	db	0
  1411  005CE3  19                 	db	25
  1412  005CE4  1D                 	db	29
  1413  005CE5  17                 	db	23
  1414  005CE6  12                 	db	18
  1415  005CE7  00                 	db	0
  1416  005CE8  3C                 	db	60
  1417  005CE9  3C                 	db	60
  1418  005CEA  3C                 	db	60
  1419  005CEB  3C                 	db	60
  1420  005CEC  00                 	db	0
  1421  005CED  00                 	db	0
  1422  005CEE  00                 	db	0
  1423  005CEF  00                 	db	0
  1424  005CF0  00                 	db	0
  1425  005CF1                     __end_of_TFT_Font:
  1426                           	opt callstack 0
  1427  005CF1                     _TFT_Init_Sequence:
  1428                           	opt callstack 0
  1429  005CF1  0702               	dw	1794
  1430  005CF3  3008               	dw	12296
  1431  005CF5  0705               	dw	1797
  1432  005CF7  0036               	dw	54
  1433  005CF9  070B               	dw	1803
  1434  005CFB  1213               	dw	4627
  1435  005CFD  0001               	dw	1
  1436  005CFF  0100               	dw	256
  1437  005D01  0002               	dw	2
  1438  005D03  0100               	dw	256
  1439  005D05  0003               	dw	3
  1440  005D07  1030               	dw	4144
  1441  005D09  0008               	dw	8
  1442  005D0B  0202               	dw	514
  1443  005D0D  0009               	dw	9
  1444  005D0F  0000               	dw	0
  1445  005D11  000C               	dw	12
  1446  005D13  0000               	dw	0
  1447  005D15  000F               	dw	15
  1448  005D17  0000               	dw	0
  1449  005D19  0100               	dw	256
  1450  005D1B  0000               	dw	0
  1451  005D1D  0102               	dw	258
  1452  005D1F  0000               	dw	0
  1453  005D21  0103               	dw	259
  1454  005D23  0000               	dw	0
  1455  005D25  FFFF               	dw	65535
  1456  005D27  0001               	dw	1
  1457  005D29  0100               	dw	256
  1458  005D2B  1190               	dw	4496
  1459  005D2D  0101               	dw	257
  1460  005D2F  0227               	dw	551
  1461  005D31  FFFF               	dw	65535
  1462  005D33  0001               	dw	1
  1463  005D35  0102               	dw	258
  1464  005D37  01BD               	dw	445
  1465  005D39  FFFF               	dw	65535
  1466  005D3B  0001               	dw	1
  1467  005D3D  0103               	dw	259
  1468  005D3F  2D00               	dw	11520
  1469  005D41  0281               	dw	641
  1470  005D43  000E               	dw	14
  1471  005D45  FFFF               	dw	65535
  1472  005D47  0001               	dw	1
  1473  005D49  0200               	dw	512
  1474  005D4B  0000               	dw	0
  1475  005D4D  0201               	dw	513
  1476  005D4F  0000               	dw	0
  1477  005D51  0300               	dw	768
  1478  005D53  0000               	dw	0
  1479  005D55  0301               	dw	769
  1480  005D57  0707               	dw	1799
  1481  005D59  0302               	dw	770
  1482  005D5B  0606               	dw	1542
  1483  005D5D  0305               	dw	773
  1484  005D5F  0000               	dw	0
  1485  005D61  0306               	dw	774
  1486  005D63  0D00               	dw	3328
  1487  005D65  0307               	dw	775
  1488  005D67  0706               	dw	1798
  1489  005D69  0308               	dw	776
  1490  005D6B  0005               	dw	5
  1491  005D6D  0309               	dw	777
  1492  005D6F  0007               	dw	7
  1493  005D71  030C               	dw	780
  1494  005D73  0000               	dw	0
  1495  005D75  030D               	dw	781
  1496  005D77  000A               	dw	10
  1497  005D79  0210               	dw	528
  1498  005D7B  0000               	dw	0
  1499  005D7D  0211               	dw	529
  1500  005D7F  00EF               	dw	239
  1501  005D81  0212               	dw	530
  1502  005D83  0000               	dw	0
  1503  005D85  0213               	dw	531
  1504  005D87  018F               	dw	399
  1505  005D89  0400               	dw	1024
  1506  005D8B  3100               	dw	12544
  1507  005D8D  0401               	dw	1025
  1508  005D8F  0001               	dw	1
  1509  005D91  0404               	dw	1028
  1510  005D93  0000               	dw	0
  1511  005D95  0500               	dw	1280
  1512  005D97  0000               	dw	0
  1513  005D99  0501               	dw	1281
  1514  005D9B  0000               	dw	0
  1515  005D9D  0502               	dw	1282
  1516  005D9F  0000               	dw	0
  1517  005DA1  0503               	dw	1283
  1518  005DA3  0000               	dw	0
  1519  005DA5  0504               	dw	1284
  1520  005DA7  0000               	dw	0
  1521  005DA9  0505               	dw	1285
  1522  005DAB  0000               	dw	0
  1523  005DAD  0010               	dw	16
  1524  005DAF  0010               	dw	16
  1525  005DB1  0011               	dw	17
  1526  005DB3  0600               	dw	1536
  1527  005DB5  0020               	dw	32
  1528  005DB7  0002               	dw	2
  1529  005DB9  0007               	dw	7
  1530  005DBB  0173               	dw	371
  1531  005DBD                     __end_of_TFT_Init_Sequence:
  1532                           	opt callstack 0
  1533  005DBD                     _dpowers:
  1534                           	opt callstack 0
  1535  005DBD  0001               	dw	1
  1536  005DBF  0000               	dw	0
  1537  005DC1  000A               	dw	10
  1538  005DC3  0000               	dw	0
  1539  005DC5  0064               	dw	100
  1540  005DC7  0000               	dw	0
  1541  005DC9  03E8               	dw	1000
  1542  005DCB  0000               	dw	0
  1543  005DCD  2710               	dw	10000
  1544  005DCF  0000               	dw	0
  1545  005DD1  86A0               	dw	34464
  1546  005DD3  0001               	dw	1
  1547  005DD5  4240               	dw	16960
  1548  005DD7  000F               	dw	15
  1549  005DD9  9680               	dw	38528
  1550  005DDB  0098               	dw	152
  1551  005DDD  E100               	dw	57600
  1552  005DDF  05F5               	dw	1525
  1553  005DE1  CA00               	dw	51712
  1554  005DE3  3B9A               	dw	15258
  1555  005DE5                     __end_of_dpowers:
  1556                           	opt callstack 0
  1557  005DE5                     _A6_BAUDRATES:
  1558                           	opt callstack 0
  1559  005DE5  2580               	dw	9600
  1560  005DE7  0000               	dw	0
  1561  005DE9  E100               	dw	57600
  1562  005DEB  0000               	dw	0
  1563  005DED  C200               	dw	49664
  1564  005DEF  0001               	dw	1
  1565  005DF1                     __end_of_A6_BAUDRATES:
  1566                           	opt callstack 0
  1567  005DF1                     _ECG_ICON_HEART:
  1568                           	opt callstack 0
  1569  005DF1  14                 	db	20
  1570  005DF2  14                 	db	20
  1571  005DF3  00                 	db	0
  1572  005DF4  00                 	db	0
  1573  005DF5  00                 	db	0
  1574  005DF6  00                 	db	0
  1575  005DF7  00                 	db	0
  1576  005DF8  00                 	db	0
  1577  005DF9  F8                 	db	248
  1578  005DFA  F0                 	db	240
  1579  005DFB  01                 	db	1
  1580  005DFC  FC                 	db	252
  1581  005DFD  F9                 	db	249
  1582  005DFE  03                 	db	3
  1583  005DFF  FC                 	db	252
  1584  005E00  FF                 	db	255
  1585  005E01  03                 	db	3
  1586  005E02  FE                 	db	254
  1587  005E03  FF                 	db	255
  1588  005E04  07                 	db	7
  1589  005E05  FE                 	db	254
  1590  005E06  FF                 	db	255
  1591  005E07  07                 	db	7
  1592  005E08  FE                 	db	254
  1593  005E09  FF                 	db	255
  1594  005E0A  07                 	db	7
  1595  005E0B  FE                 	db	254
  1596  005E0C  FF                 	db	255
  1597  005E0D  07                 	db	7
  1598  005E0E  FC                 	db	252
  1599  005E0F  FF                 	db	255
  1600  005E10  03                 	db	3
  1601  005E11  FC                 	db	252
  1602  005E12  FF                 	db	255
  1603  005E13  03                 	db	3
  1604  005E14  F8                 	db	248
  1605  005E15  FF                 	db	255
  1606  005E16  01                 	db	1
  1607  005E17  F0                 	db	240
  1608  005E18  FF                 	db	255
  1609  005E19  00                 	db	0
  1610  005E1A  E0                 	db	224
  1611  005E1B  7F                 	db	127
  1612  005E1C  00                 	db	0
  1613  005E1D  C0                 	db	192
  1614  005E1E  3F                 	db	63
  1615  005E1F  00                 	db	0
  1616  005E20  80                 	db	128
  1617  005E21  1F                 	db	31
  1618  005E22  00                 	db	0
  1619  005E23  00                 	db	0
  1620  005E24  0F                 	db	15
  1621  005E25  00                 	db	0
  1622  005E26  00                 	db	0
  1623  005E27  06                 	db	6
  1624  005E28  00                 	db	0
  1625  005E29  00                 	db	0
  1626  005E2A  00                 	db	0
  1627  005E2B  00                 	db	0
  1628  005E2C  00                 	db	0
  1629  005E2D  00                 	db	0
  1630  005E2E  00                 	db	0
  1631  005E2F                     __end_of_ECG_ICON_HEART:
  1632                           	opt callstack 0
  1633  0000                     _RCREG	set	4014
  1634  0000                     _TXREG	set	4013
  1635  0000                     _SPBRG	set	4015
  1636  0000                     _SPBRGH	set	4016
  1637  0000                     _BAUDCONbits	set	4024
  1638  0000                     _RCSTAbits	set	4011
  1639  0000                     _TXSTAbits	set	4012
  1640  0000                     _ADRESL	set	4035
  1641  0000                     _ADRESH	set	4036
  1642  0000                     _PORTAbits	set	3968
  1643  0000                     _PORTB	set	3969
  1644  0000                     _PORTCbits	set	3970
  1645  0000                     _TMR3L	set	4018
  1646  0000                     _TMR3H	set	4019
  1647  0000                     _T3CONbits	set	4017
  1648  0000                     _ADCON2bits	set	4032
  1649  0000                     _ADCON1bits	set	4033
  1650  0000                     _ADCON0bits	set	4034
  1651  0000                     _LATC	set	3979
  1652  0000                     _TRISC	set	3988
  1653  0000                     _LATB	set	3978
  1654  0000                     _TRISB	set	3987
  1655  0000                     _LATA	set	3977
  1656  0000                     _TRISA	set	3986
  1657  0000                     _UCFGbits	set	3951
  1658  0000                     _UCONbits	set	3949
  1659  0000                     _OSCTUNEbits	set	3995
  1660  0000                     _OSCCONbits	set	4051
  1661  0000                     _CREN	set	32092
  1662  0000                     _OERR	set	32089
  1663  0000                     _TXIF	set	31988
  1664  0000                     _GO_nDONE	set	32273
  1665  0000                     _RCIF	set	31989
  1666  0000                     _RCIE	set	31981
  1667  0000                     _TMR3IF	set	32009
  1668  0000                     _GIE	set	32663
  1669  0000                     _PEIE	set	32662
  1670  0000                     _TMR3IE	set	32001
  1671  0000                     _RBPU	set	32655
  1672  005E2F                     STR_2:
  1673                           
  1674                           ; BSR set to: 2
  1675  005E2F  49                 	db	73	;'I'
  1676  005E30  6E                 	db	110	;'n'
  1677  005E31  76                 	db	118	;'v'
  1678  005E32  61                 	db	97	;'a'
  1679  005E33  6C                 	db	108	;'l'
  1680  005E34  69                 	db	105	;'i'
  1681  005E35  64                 	db	100	;'d'
  1682  005E36  20                 	db	32
  1683  005E37  63                 	db	99	;'c'
  1684  005E38  75                 	db	117	;'u'
  1685  005E39  72                 	db	114	;'r'
  1686  005E3A  72                 	db	114	;'r'
  1687  005E3B  65                 	db	101	;'e'
  1688  005E3C  6E                 	db	110	;'n'
  1689  005E3D  74                 	db	116	;'t'
  1690  005E3E  20                 	db	32
  1691  005E3F  62                 	db	98	;'b'
  1692  005E40  61                 	db	97	;'a'
  1693  005E41  75                 	db	117	;'u'
  1694  005E42  64                 	db	100	;'d'
  1695  005E43  20                 	db	32
  1696  005E44  72                 	db	114	;'r'
  1697  005E45  61                 	db	97	;'a'
  1698  005E46  74                 	db	116	;'t'
  1699  005E47  65                 	db	101	;'e'
  1700  005E48  20                 	db	32
  1701  005E49  28                 	db	40
  1702  005E4A  25                 	db	37
  1703  005E4B  6C                 	db	108	;'l'
  1704  005E4C  75                 	db	117	;'u'
  1705  005E4D  29                 	db	41
  1706  005E4E  00                 	db	0
  1707  005E4F                     STR_21:
  1708                           
  1709                           ; BSR set to: 2
  1710  005E4F  2A                 	db	42
  1711  005E50  2A                 	db	42
  1712  005E51  2A                 	db	42
  1713  005E52  20                 	db	32
  1714  005E53  43                 	db	67	;'C'
  1715  005E54  6F                 	db	111	;'o'
  1716  005E55  6C                 	db	108	;'l'
  1717  005E56  6C                 	db	108	;'l'
  1718  005E57  65                 	db	101	;'e'
  1719  005E58  67                 	db	103	;'g'
  1720  005E59  61                 	db	97	;'a'
  1721  005E5A  72                 	db	114	;'r'
  1722  005E5B  65                 	db	101	;'e'
  1723  005E5C  20                 	db	32
  1724  005E5D  65                 	db	101	;'e'
  1725  005E5E  6C                 	db	108	;'l'
  1726  005E5F  65                 	db	101	;'e'
  1727  005E60  74                 	db	116	;'t'
  1728  005E61  74                 	db	116	;'t'
  1729  005E62  72                 	db	114	;'r'
  1730  005E63  6F                 	db	111	;'o'
  1731  005E64  64                 	db	100	;'d'
  1732  005E65  69                 	db	105	;'i'
  1733  005E66  20                 	db	32
  1734  005E67  2A                 	db	42
  1735  005E68  2A                 	db	42
  1736  005E69  2A                 	db	42
  1737  005E6A  00                 	db	0
  1738  005E6B                     STR_3:
  1739                           
  1740                           ; BSR set to: 2
  1741  005E6B  42                 	db	66	;'B'
  1742  005E6C  61                 	db	97	;'a'
  1743  005E6D  75                 	db	117	;'u'
  1744  005E6E  64                 	db	100	;'d'
  1745  005E6F  20                 	db	32
  1746  005E70  72                 	db	114	;'r'
  1747  005E71  61                 	db	97	;'a'
  1748  005E72  74                 	db	116	;'t'
  1749  005E73  65                 	db	101	;'e'
  1750  005E74  20                 	db	32
  1751  005E75  63                 	db	99	;'c'
  1752  005E76  68                 	db	104	;'h'
  1753  005E77  61                 	db	97	;'a'
  1754  005E78  6E                 	db	110	;'n'
  1755  005E79  67                 	db	103	;'g'
  1756  005E7A  65                 	db	101	;'e'
  1757  005E7B  64                 	db	100	;'d'
  1758  005E7C  20                 	db	32
  1759  005E7D  28                 	db	40
  1760  005E7E  2D                 	db	45
  1761  005E7F  3E                 	db	62	;'>'
  1762  005E80  20                 	db	32
  1763  005E81  25                 	db	37
  1764  005E82  6C                 	db	108	;'l'
  1765  005E83  75                 	db	117	;'u'
  1766  005E84  29                 	db	41
  1767  005E85  00                 	db	0
  1768  005E86                     STR_14:
  1769                           
  1770                           ; BSR set to: 2
  1771  005E86  43                 	db	67	;'C'
  1772  005E87  68                 	db	104	;'h'
  1773  005E88  65                 	db	101	;'e'
  1774  005E89  63                 	db	99	;'c'
  1775  005E8A  6B                 	db	107	;'k'
  1776  005E8B  20                 	db	32
  1777  005E8C  6E                 	db	110	;'n'
  1778  005E8D  65                 	db	101	;'e'
  1779  005E8E  74                 	db	116	;'t'
  1780  005E8F  77                 	db	119	;'w'
  1781  005E90  6F                 	db	111	;'o'
  1782  005E91  72                 	db	114	;'r'
  1783  005E92  6B                 	db	107	;'k'
  1784  005E93  20                 	db	32
  1785  005E94  72                 	db	114	;'r'
  1786  005E95  65                 	db	101	;'e'
  1787  005E96  67                 	db	103	;'g'
  1788  005E97  69                 	db	105	;'i'
  1789  005E98  73                 	db	115	;'s'
  1790  005E99  74                 	db	116	;'t'
  1791  005E9A  72                 	db	114	;'r'
  1792  005E9B  61                 	db	97	;'a'
  1793  005E9C  74                 	db	116	;'t'
  1794  005E9D  69                 	db	105	;'i'
  1795  005E9E  6F                 	db	111	;'o'
  1796  005E9F  6E                 	db	110	;'n'
  1797  005EA0  00                 	db	0
  1798  005EA1                     STR_4:
  1799                           
  1800                           ; BSR set to: 2
  1801  005EA1  45                 	db	69	;'E'
  1802  005EA2  72                 	db	114	;'r'
  1803  005EA3  72                 	db	114	;'r'
  1804  005EA4  6F                 	db	111	;'o'
  1805  005EA5  72                 	db	114	;'r'
  1806  005EA6  20                 	db	32
  1807  005EA7  63                 	db	99	;'c'
  1808  005EA8  68                 	db	104	;'h'
  1809  005EA9  61                 	db	97	;'a'
  1810  005EAA  6E                 	db	110	;'n'
  1811  005EAB  67                 	db	103	;'g'
  1812  005EAC  69                 	db	105	;'i'
  1813  005EAD  6E                 	db	110	;'n'
  1814  005EAE  67                 	db	103	;'g'
  1815  005EAF  20                 	db	32
  1816  005EB0  62                 	db	98	;'b'
  1817  005EB1  61                 	db	97	;'a'
  1818  005EB2  75                 	db	117	;'u'
  1819  005EB3  64                 	db	100	;'d'
  1820  005EB4  20                 	db	32
  1821  005EB5  72                 	db	114	;'r'
  1822  005EB6  61                 	db	97	;'a'
  1823  005EB7  74                 	db	116	;'t'
  1824  005EB8  65                 	db	101	;'e'
  1825  005EB9  00                 	db	0
  1826  005EBA                     STR_15:
  1827                           
  1828                           ; BSR set to: 2
  1829  005EBA  4E                 	db	78	;'N'
  1830  005EBB  65                 	db	101	;'e'
  1831  005EBC  74                 	db	116	;'t'
  1832  005EBD  77                 	db	119	;'w'
  1833  005EBE  6F                 	db	111	;'o'
  1834  005EBF  72                 	db	114	;'r'
  1835  005EC0  6B                 	db	107	;'k'
  1836  005EC1  20                 	db	32
  1837  005EC2  73                 	db	115	;'s'
  1838  005EC3  74                 	db	116	;'t'
  1839  005EC4  61                 	db	97	;'a'
  1840  005EC5  74                 	db	116	;'t'
  1841  005EC6  75                 	db	117	;'u'
  1842  005EC7  73                 	db	115	;'s'
  1843  005EC8  3A                 	db	58	;':'
  1844  005EC9  20                 	db	32
  1845  005ECA  25                 	db	37
  1846  005ECB  75                 	db	117	;'u'
  1847  005ECC  20                 	db	32
  1848  005ECD  28                 	db	40
  1849  005ECE  25                 	db	37
  1850  005ECF  73                 	db	115	;'s'
  1851  005ED0  29                 	db	41
  1852  005ED1  00                 	db	0
  1853  005ED2                     STR_29:
  1854                           
  1855                           ; BSR set to: 2
  1856  005ED2  44                 	db	68	;'D'
  1857  005ED3  65                 	db	101	;'e'
  1858  005ED4  74                 	db	116	;'t'
  1859  005ED5  65                 	db	101	;'e'
  1860  005ED6  63                 	db	99	;'c'
  1861  005ED7  74                 	db	116	;'t'
  1862  005ED8  69                 	db	105	;'i'
  1863  005ED9  6E                 	db	110	;'n'
  1864  005EDA  67                 	db	103	;'g'
  1865  005EDB  20                 	db	32
  1866  005EDC  62                 	db	98	;'b'
  1867  005EDD  61                 	db	97	;'a'
  1868  005EDE  75                 	db	117	;'u'
  1869  005EDF  64                 	db	100	;'d'
  1870  005EE0  20                 	db	32
  1871  005EE1  72                 	db	114	;'r'
  1872  005EE2  61                 	db	97	;'a'
  1873  005EE3  74                 	db	116	;'t'
  1874  005EE4  65                 	db	101	;'e'
  1875  005EE5  2E                 	db	46
  1876  005EE6  2E                 	db	46
  1877  005EE7  2E                 	db	46
  1878  005EE8  00                 	db	0
  1879  005EE9                     STR_1:
  1880                           
  1881                           ; BSR set to: 2
  1882  005EE9  43                 	db	67	;'C'
  1883  005EEA  68                 	db	104	;'h'
  1884  005EEB  61                 	db	97	;'a'
  1885  005EEC  6E                 	db	110	;'n'
  1886  005EED  67                 	db	103	;'g'
  1887  005EEE  65                 	db	101	;'e'
  1888  005EEF  20                 	db	32
  1889  005EF0  62                 	db	98	;'b'
  1890  005EF1  61                 	db	97	;'a'
  1891  005EF2  75                 	db	117	;'u'
  1892  005EF3  64                 	db	100	;'d'
  1893  005EF4  20                 	db	32
  1894  005EF5  72                 	db	114	;'r'
  1895  005EF6  61                 	db	97	;'a'
  1896  005EF7  74                 	db	116	;'t'
  1897  005EF8  65                 	db	101	;'e'
  1898  005EF9  20                 	db	32
  1899  005EFA  28                 	db	40
  1900  005EFB  25                 	db	37
  1901  005EFC  6C                 	db	108	;'l'
  1902  005EFD  75                 	db	117	;'u'
  1903  005EFE  29                 	db	41
  1904  005EFF  00                 	db	0
  1905  005F00                     STR_5:
  1906                           
  1907                           ; BSR set to: 2
  1908  005F00  43                 	db	67	;'C'
  1909  005F01  6F                 	db	111	;'o'
  1910  005F02  6D                 	db	109	;'m'
  1911  005F03  6D                 	db	109	;'m'
  1912  005F04  20                 	db	32
  1913  005F05  69                 	db	105	;'i'
  1914  005F06  73                 	db	115	;'s'
  1915  005F07  20                 	db	32
  1916  005F08  64                 	db	100	;'d'
  1917  005F09  65                 	db	101	;'e'
  1918  005F0A  61                 	db	97	;'a'
  1919  005F0B  64                 	db	100	;'d'
  1920  005F0C  2E                 	db	46
  1921  005F0D  20                 	db	32
  1922  005F0E  52                 	db	82	;'R'
  1923  005F0F  65                 	db	101	;'e'
  1924  005F10  74                 	db	116	;'t'
  1925  005F11  72                 	db	114	;'r'
  1926  005F12  79                 	db	121	;'y'
  1927  005F13  2E                 	db	46
  1928  005F14  2E                 	db	46
  1929  005F15  2E                 	db	46
  1930  005F16  00                 	db	0
  1931  005F17                     STR_13:
  1932                           
  1933                           ; BSR set to: 2
  1934  005F17  51                 	db	81	;'Q'
  1935  005F18  75                 	db	117	;'u'
  1936  005F19  61                 	db	97	;'a'
  1937  005F1A  6C                 	db	108	;'l'
  1938  005F1B  69                 	db	105	;'i'
  1939  005F1C  74                 	db	116	;'t'
  1940  005F1D  79                 	db	121	;'y'
  1941  005F1E  3A                 	db	58	;':'
  1942  005F1F  20                 	db	32
  1943  005F20  25                 	db	37
  1944  005F21  75                 	db	117	;'u'
  1945  005F22  3B                 	db	59	;';'
  1946  005F23  20                 	db	32
  1947  005F24  4C                 	db	76	;'L'
  1948  005F25  65                 	db	101	;'e'
  1949  005F26  76                 	db	118	;'v'
  1950  005F27  65                 	db	101	;'e'
  1951  005F28  6C                 	db	108	;'l'
  1952  005F29  3A                 	db	58	;':'
  1953  005F2A  20                 	db	32
  1954  005F2B  25                 	db	37
  1955  005F2C  64                 	db	100	;'d'
  1956  005F2D  00                 	db	0
  1957  005F2E                     STR_10:
  1958                           
  1959                           ; BSR set to: 2
  1960  005F2E  43                 	db	67	;'C'
  1961  005F2F  68                 	db	104	;'h'
  1962  005F30  65                 	db	101	;'e'
  1963  005F31  63                 	db	99	;'c'
  1964  005F32  6B                 	db	107	;'k'
  1965  005F33  20                 	db	32
  1966  005F34  62                 	db	98	;'b'
  1967  005F35  61                 	db	97	;'a'
  1968  005F36  75                 	db	117	;'u'
  1969  005F37  64                 	db	100	;'d'
  1970  005F38  20                 	db	32
  1971  005F39  72                 	db	114	;'r'
  1972  005F3A  61                 	db	97	;'a'
  1973  005F3B  74                 	db	116	;'t'
  1974  005F3C  65                 	db	101	;'e'
  1975  005F3D  00                 	db	0
  1976  005F3E                     STR_7:
  1977                           
  1978                           ; BSR set to: 2
  1979  005F3E  52                 	db	82	;'R'
  1980  005F3F  65                 	db	101	;'e'
  1981  005F40  73                 	db	115	;'s'
  1982  005F41  75                 	db	117	;'u'
  1983  005F42  72                 	db	114	;'r'
  1984  005F43  72                 	db	114	;'r'
  1985  005F44  65                 	db	101	;'e'
  1986  005F45  63                 	db	99	;'c'
  1987  005F46  74                 	db	116	;'t'
  1988  005F47  65                 	db	101	;'e'
  1989  005F48  64                 	db	100	;'d'
  1990  005F49  21                 	db	33
  1991  005F4A  00                 	db	0
  1992  005F4B                     STR_16:
  1993                           
  1994                           ; BSR set to: 2
  1995  005F4B  53                 	db	83	;'S'
  1996  005F4C  65                 	db	101	;'e'
  1997  005F4D  61                 	db	97	;'a'
  1998  005F4E  72                 	db	114	;'r'
  1999  005F4F  63                 	db	99	;'c'
  2000  005F50  68                 	db	104	;'h'
  2001  005F51  69                 	db	105	;'i'
  2002  005F52  6E                 	db	110	;'n'
  2003  005F53  67                 	db	103	;'g'
  2004  005F54  2E                 	db	46
  2005  005F55  2E                 	db	46
  2006  005F56  2E                 	db	46
  2007  005F57  00                 	db	0
  2008  005F58                     STR_27:
  2009                           
  2010                           ; BSR set to: 2
  2011  005F58  41                 	db	65	;'A'
  2012  005F59  54                 	db	84	;'T'
  2013  005F5A  2B                 	db	43
  2014  005F5B  49                 	db	73	;'I'
  2015  005F5C  50                 	db	80	;'P'
  2016  005F5D  52                 	db	82	;'R'
  2017  005F5E  3D                 	db	61	;'='
  2018  005F5F  25                 	db	37
  2019  005F60  6C                 	db	108	;'l'
  2020  005F61  75                 	db	117	;'u'
  2021  005F62  0D                 	db	13
  2022  005F63  00                 	db	0
  2023  005F64                     STR_30:
  2024                           
  2025                           ; BSR set to: 2
  2026  005F64  25                 	db	37
  2027  005F65  6C                 	db	108	;'l'
  2028  005F66  75                 	db	117	;'u'
  2029  005F67  20                 	db	32
  2030  005F68  46                 	db	70	;'F'
  2031  005F69  4F                 	db	79	;'O'
  2032  005F6A  55                 	db	85	;'U'
  2033  005F6B  4E                 	db	78	;'N'
  2034  005F6C  44                 	db	68	;'D'
  2035  005F6D  21                 	db	33
  2036  005F6E  00                 	db	0
  2037  005F6F                     STR_20:
  2038                           
  2039                           ; BSR set to: 2
  2040  005F6F  46                 	db	70	;'F'
  2041  005F70  72                 	db	114	;'r'
  2042  005F71  65                 	db	101	;'e'
  2043  005F72  71                 	db	113	;'q'
  2044  005F73  75                 	db	117	;'u'
  2045  005F74  65                 	db	101	;'e'
  2046  005F75  6E                 	db	110	;'n'
  2047  005F76  7A                 	db	122	;'z'
  2048  005F77  61                 	db	97	;'a'
  2049  005F78  3A                 	db	58	;':'
  2050  005F79  00                 	db	0
  2051  005F7A                     STR_12:
  2052                           
  2053                           ; BSR set to: 2
  2054  005F7A  43                 	db	67	;'C'
  2055  005F7B  68                 	db	104	;'h'
  2056  005F7C  65                 	db	101	;'e'
  2057  005F7D  63                 	db	99	;'c'
  2058  005F7E  6B                 	db	107	;'k'
  2059  005F7F  20                 	db	32
  2060  005F80  52                 	db	82	;'R'
  2061  005F81  53                 	db	83	;'S'
  2062  005F82  53                 	db	83	;'S'
  2063  005F83  49                 	db	73	;'I'
  2064  005F84  00                 	db	0
  2065  005F85                     STR_6:
  2066                           
  2067                           ; BSR set to: 2
  2068  005F85  53                 	db	83	;'S'
  2069  005F86  74                 	db	116	;'t'
  2070  005F87  69                 	db	105	;'i'
  2071  005F88  6C                 	db	108	;'l'
  2072  005F89  6C                 	db	108	;'l'
  2073  005F8A  20                 	db	32
  2074  005F8B  64                 	db	100	;'d'
  2075  005F8C  65                 	db	101	;'e'
  2076  005F8D  61                 	db	97	;'a'
  2077  005F8E  64                 	db	100	;'d'
  2078  005F8F  00                 	db	0
  2079  005F90                     STR_17:
  2080                           
  2081                           ; BSR set to: 2
  2082  005F90  52                 	db	82	;'R'
  2083  005F91  65                 	db	101	;'e'
  2084  005F92  67                 	db	103	;'g'
  2085  005F93  69                 	db	105	;'i'
  2086  005F94  73                 	db	115	;'s'
  2087  005F95  74                 	db	116	;'t'
  2088  005F96  65                 	db	101	;'e'
  2089  005F97  72                 	db	114	;'r'
  2090  005F98  65                 	db	101	;'e'
  2091  005F99  64                 	db	100	;'d'
  2092  005F9A  00                 	db	0
  2093  005F9B                     STR_8:
  2094                           
  2095                           ; BSR set to: 2
  2096  005F9B  43                 	db	67	;'C'
  2097  005F9C  68                 	db	104	;'h'
  2098  005F9D  65                 	db	101	;'e'
  2099  005F9E  63                 	db	99	;'c'
  2100  005F9F  6B                 	db	107	;'k'
  2101  005FA0  20                 	db	32
  2102  005FA1  74                 	db	116	;'t'
  2103  005FA2  69                 	db	105	;'i'
  2104  005FA3  6D                 	db	109	;'m'
  2105  005FA4  65                 	db	101	;'e'
  2106  005FA5  00                 	db	0
  2107  005FA6                     STR_32:
  2108                           
  2109                           ; BSR set to: 2
  2110  005FA6  41                 	db	65	;'A'
  2111  005FA7  54                 	db	84	;'T'
  2112  005FA8  2B                 	db	43
  2113  005FA9  43                 	db	67	;'C'
  2114  005FAA  52                 	db	82	;'R'
  2115  005FAB  45                 	db	69	;'E'
  2116  005FAC  47                 	db	71	;'G'
  2117  005FAD  3F                 	db	63	;'?'
  2118  005FAE  0D                 	db	13
  2119  005FAF  00                 	db	0
  2120  005FB0                     STR_9:
  2121                           
  2122                           ; BSR set to: 2
  2123  005FB0  41                 	db	65	;'A'
  2124  005FB1  54                 	db	84	;'T'
  2125  005FB2  2B                 	db	43
  2126  005FB3  43                 	db	67	;'C'
  2127  005FB4  43                 	db	67	;'C'
  2128  005FB5  4C                 	db	76	;'L'
  2129  005FB6  4B                 	db	75	;'K'
  2130  005FB7  3F                 	db	63	;'?'
  2131  005FB8  0D                 	db	13
  2132  005FB9  00                 	db	0
  2133  005FBA                     STR_24:
  2134                           
  2135                           ; BSR set to: 2
  2136  005FBA  41                 	db	65	;'A'
  2137  005FBB  54                 	db	84	;'T'
  2138  005FBC  2B                 	db	43
  2139  005FBD  49                 	db	73	;'I'
  2140  005FBE  50                 	db	80	;'P'
  2141  005FBF  52                 	db	82	;'R'
  2142  005FC0  3F                 	db	63	;'?'
  2143  005FC1  0D                 	db	13
  2144  005FC2  00                 	db	0
  2145  005FC3                     STR_36:
  2146                           
  2147                           ; BSR set to: 2
  2148  005FC3  41                 	db	65	;'A'
  2149  005FC4  54                 	db	84	;'T'
  2150  005FC5  2B                 	db	43
  2151  005FC6  43                 	db	67	;'C'
  2152  005FC7  53                 	db	83	;'S'
  2153  005FC8  51                 	db	81	;'Q'
  2154  005FC9  0D                 	db	13
  2155  005FCA  00                 	db	0
  2156  005FCB                     STR_33:
  2157                           
  2158                           ; BSR set to: 2
  2159  005FCB  2B                 	db	43
  2160  005FCC  43                 	db	67	;'C'
  2161  005FCD  52                 	db	82	;'R'
  2162  005FCE  45                 	db	69	;'E'
  2163  005FCF  47                 	db	71	;'G'
  2164  005FD0  3A                 	db	58	;':'
  2165  005FD1  20                 	db	32
  2166  005FD2  00                 	db	0
  2167  005FD3                     STR_40:
  2168                           
  2169                           ; BSR set to: 2
  2170  005FD3  28                 	db	40
  2171  005FD4  6E                 	db	110	;'n'
  2172  005FD5  75                 	db	117	;'u'
  2173  005FD6  6C                 	db	108	;'l'
  2174  005FD7  6C                 	db	108	;'l'
  2175  005FD8  29                 	db	41
  2176  005FD9  00                 	db	0
  2177  005FDA                     STR_37:
  2178                           
  2179                           ; BSR set to: 2
  2180  005FDA  2B                 	db	43
  2181  005FDB  43                 	db	67	;'C'
  2182  005FDC  53                 	db	83	;'S'
  2183  005FDD  51                 	db	81	;'Q'
  2184  005FDE  3A                 	db	58	;':'
  2185  005FDF  20                 	db	32
  2186  005FE0  00                 	db	0
  2187  005FE1                     STR_25:
  2188                           
  2189                           ; BSR set to: 2
  2190  005FE1  2B                 	db	43
  2191  005FE2  49                 	db	73	;'I'
  2192  005FE3  50                 	db	80	;'P'
  2193  005FE4  52                 	db	82	;'R'
  2194  005FE5  3A                 	db	58	;':'
  2195  005FE6  20                 	db	32
  2196  005FE7  00                 	db	0
  2197  005FE8                     STR_18:
  2198                           
  2199                           ; BSR set to: 2
  2200  005FE8  4F                 	db	79	;'O'
  2201  005FE9  74                 	db	116	;'t'
  2202  005FEA  68                 	db	104	;'h'
  2203  005FEB  65                 	db	101	;'e'
  2204  005FEC  72                 	db	114	;'r'
  2205  005FED  00                 	db	0
  2206  005FEE                     STR_22:
  2207                           
  2208                           ; BSR set to: 2
  2209  005FEE  41                 	db	65	;'A'
  2210  005FEF  54                 	db	84	;'T'
  2211  005FF0  0D                 	db	13
  2212  005FF1  00                 	db	0
  2213  005FF2                     
  2214                           ; BSR set to: 2
  2215  005FF2  25                 	db	37
  2216  005FF3  33                 	db	51	;'3'
  2217  005FF4  64                 	db	100	;'d'
  2218  005FF5  00                 	db	0
  2219  005FF6                     STR_11:
  2220                           
  2221                           ; BSR set to: 2
  2222  005FF6  25                 	db	37
  2223  005FF7  6C                 	db	108	;'l'
  2224  005FF8  75                 	db	117	;'u'
  2225  005FF9  00                 	db	0
  2226  005FFA                     STR_23:
  2227                           
  2228                           ; BSR set to: 2
  2229  005FFA  4F                 	db	79	;'O'
  2230  005FFB  4B                 	db	75	;'K'
  2231  005FFC  00                 	db	0
  2232  005FFD                     STR_35:
  2233                           
  2234                           ; BSR set to: 2
  2235  005FFD  2C                 	db	44
  2236  005FFE  00                 	db	0
  2237  0000                     
  2238                           ; #config settings
  2239  005FFF  00                 	db	0	; dummy byte at the end
  2240  0000                     
  2241                           	psect	cinit
  2242  002446                     __pcinit:
  2243                           	opt callstack 0
  2244  002446                     start_initialization:
  2245                           	opt callstack 0
  2246  002446                     __initialization:
  2247                           	opt callstack 0
  2248                           
  2249                           ; Initialize objects allocated to BANK0 (6 bytes)
  2250                           ; load TBLPTR registers with __pidataBANK0
  2251  002446  0EC4               	movlw	low __pidataBANK0
  2252  002448  6EF6               	movwf	tblptrl,c
  2253  00244A  0E2B               	movlw	high __pidataBANK0
  2254  00244C  6EF7               	movwf	tblptrh,c
  2255  00244E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2256  002450  6EF8               	movwf	tblptru,c
  2257  002452  EE00  F0CE         	lfsr	0,__pdataBANK0
  2258  002456  EE10 F006          	lfsr	1,6
  2259  00245A                     copy_data0:
  2260  00245A  0009               	tblrd		*+
  2261  00245C  CFF5 FFEE          	movff	tablat,postinc0
  2262  002460  50E5               	movf	postdec1,w,c
  2263  002462  50E1               	movf	fsr1l,w,c
  2264  002464  E1FA               	bnz	copy_data0
  2265                           
  2266                           ; Initialize objects allocated to COMRAM (2 bytes)
  2267                           ; load TBLPTR registers with __pidataCOMRAM
  2268  002466  0ED0               	movlw	low __pidataCOMRAM
  2269  002468  6EF6               	movwf	tblptrl,c
  2270  00246A  0E2B               	movlw	high __pidataCOMRAM
  2271  00246C  6EF7               	movwf	tblptrh,c
  2272  00246E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2273  002470  6EF8               	movwf	tblptru,c
  2274  002472  0009               	tblrd		*+	;fetch initializer
  2275  002474  CFF5 F058          	movff	tablat,__pdataCOMRAM
  2276  002478  0009               	tblrd		*+	;fetch initializer
  2277  00247A  CFF5 F059          	movff	tablat,__pdataCOMRAM+1
  2278                           
  2279                           ; Clear objects allocated to BANK2 (130 bytes)
  2280  00247E  EE02  F000         	lfsr	0,__pbssBANK2
  2281  002482  0E82               	movlw	130
  2282  002484                     clear_0:
  2283  002484  6AEE               	clrf	postinc0,c
  2284  002486  06E8               	decf	wreg,f,c
  2285  002488  E1FD               	bnz	clear_0
  2286                           
  2287                           ; Clear objects allocated to BANK1 (24 bytes)
  2288  00248A  EE01  F0AD         	lfsr	0,__pbssBANK1
  2289  00248E  0E18               	movlw	24
  2290  002490                     clear_1:
  2291  002490  6AEE               	clrf	postinc0,c
  2292  002492  06E8               	decf	wreg,f,c
  2293  002494  E1FD               	bnz	clear_1
  2294                           
  2295                           ; Clear objects allocated to BANK0 (30 bytes)
  2296  002496  EE00  F0B0         	lfsr	0,__pbssBANK0
  2297  00249A  0E1E               	movlw	30
  2298  00249C                     clear_2:
  2299  00249C  6AEE               	clrf	postinc0,c
  2300  00249E  06E8               	decf	wreg,f,c
  2301  0024A0  E1FD               	bnz	clear_2
  2302                           
  2303                           ; Clear objects allocated to COMRAM (2 bytes)
  2304  0024A2  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2305  0024A4  6A56               	clrf	__pbssCOMRAM& (0+255),c
  2306  0024A6                     end_of_initialization:
  2307                           	opt callstack 0
  2308  0024A6                     __end_of__initialization:
  2309                           	opt callstack 0
  2310  0024A6  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2311  0024A8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2312  0024AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2313  0024AC  6EF8               	movwf	tblptru,c
  2314  0024AE  0100               	movlb	0
  2315  0024B0  EF9A  F015         	goto	_main	;jump to C main() function
  2316                           
  2317                           	psect	bssCOMRAM
  2318  000056                     __pbssCOMRAM:
  2319                           	opt callstack 0
  2320  000056                     _ECG_FLAGS:
  2321                           	opt callstack 0
  2322  000056                     	ds	2
  2323                           
  2324                           	psect	dataCOMRAM
  2325  000058                     __pdataCOMRAM:
  2326                           	opt callstack 0
  2327  000058                     _Ecg_Y:
  2328                           	opt callstack 0
  2329  000058                     	ds	2
  2330                           
  2331                           	psect	bssBANK0
  2332  0000B0                     __pbssBANK0:
  2333                           	opt callstack 0
  2334  0000B0                     _ECG_HEARTBEAT:
  2335                           	opt callstack 0
  2336  0000B0                     	ds	13
  2337  0000BD                     _ECG_BUFFER:
  2338                           	opt callstack 0
  2339  0000BD                     	ds	5
  2340  0000C2                     _ECG_HEARTRATE:
  2341                           	opt callstack 0
  2342  0000C2                     	ds	4
  2343  0000C6                     _A6_LAST_COMMAND_MILLISECONDS:
  2344                           	opt callstack 0
  2345  0000C6                     	ds	4
  2346  0000CA                     strtok@sp:
  2347                           	opt callstack 0
  2348  0000CA                     	ds	2
  2349  0000CC                     _consoleX:
  2350                           	opt callstack 0
  2351  0000CC                     	ds	2
  2352                           
  2353                           	psect	dataBANK0
  2354  0000CE                     __pdataBANK0:
  2355                           	opt callstack 0
  2356  0000CE                     _Ecg_Yold:
  2357                           	opt callstack 0
  2358  0000CE                     	ds	2
  2359  0000D0                     _Ecg_Xold:
  2360                           	opt callstack 0
  2361  0000D0                     	ds	2
  2362  0000D2                     _Ecg_X:
  2363                           	opt callstack 0
  2364  0000D2                     	ds	2
  2365                           
  2366                           	psect	bssBANK1
  2367  0001AD                     __pbssBANK1:
  2368                           	opt callstack 0
  2369  0001AD                     _tmp5:
  2370                           	opt callstack 0
  2371  0001AD                     	ds	4
  2372  0001B1                     _tmp4:
  2373                           	opt callstack 0
  2374  0001B1                     	ds	4
  2375  0001B5                     _tmp3:
  2376                           	opt callstack 0
  2377  0001B5                     	ds	4
  2378  0001B9                     _tmp2:
  2379                           	opt callstack 0
  2380  0001B9                     	ds	4
  2381  0001BD                     _tmp1:
  2382                           	opt callstack 0
  2383  0001BD                     	ds	4
  2384  0001C1                     _MILLISECONDS:
  2385                           	opt callstack 0
  2386  0001C1                     	ds	4
  2387                           
  2388                           	psect	bssBANK2
  2389  000200                     __pbssBANK2:
  2390                           	opt callstack 0
  2391  000200                     _EUSART_RX:
  2392                           	opt callstack 0
  2393  000200                     	ds	130
  2394                           
  2395                           	psect	cstackBANK1
  2396  000100                     __pcstackBANK1:
  2397                           	opt callstack 0
  2398  000100                     loop@response:
  2399                           	opt callstack 0
  2400                           
  2401                           ; 32 bytes @ 0x0
  2402  000100                     	ds	32
  2403  000120                     loop@zzzz_162:
  2404                           	opt callstack 0
  2405                           
  2406                           ; 32 bytes @ 0x20
  2407  000120                     	ds	32
  2408  000140                     loop@zzzz_165:
  2409                           	opt callstack 0
  2410                           
  2411                           ; 32 bytes @ 0x40
  2412  000140                     	ds	32
  2413  000160                     loop@zzzz_169:
  2414                           	opt callstack 0
  2415                           
  2416                           ; 32 bytes @ 0x60
  2417  000160                     	ds	32
  2418  000180                     loop@zzzz:
  2419                           	opt callstack 0
  2420                           
  2421                           ; 32 bytes @ 0x80
  2422  000180                     	ds	32
  2423  0001A0                     _loop$152:
  2424                           	opt callstack 0
  2425                           
  2426                           ; 2 bytes @ 0xA0
  2427  0001A0                     	ds	2
  2428  0001A2                     _loop$157:
  2429                           	opt callstack 0
  2430                           
  2431                           ; 2 bytes @ 0xA2
  2432  0001A2                     	ds	2
  2433  0001A4                     _loop$176:
  2434                           	opt callstack 0
  2435                           
  2436                           ; 2 bytes @ 0xA4
  2437  0001A4                     	ds	2
  2438  0001A6                     _loop$177:
  2439                           	opt callstack 0
  2440                           
  2441                           ; 2 bytes @ 0xA6
  2442  0001A6                     	ds	2
  2443  0001A8                     loop@zz:
  2444                           	opt callstack 0
  2445                           
  2446                           ; 4 bytes @ 0xA8
  2447  0001A8                     	ds	4
  2448  0001AC                     loop@ns:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 1 bytes @ 0xAC
  2452  0001AC                     	ds	1
  2453                           
  2454                           	psect	cstackBANK0
  2455  000060                     __pcstackBANK0:
  2456                           	opt callstack 0
  2457  000060                     sprintf@prec:
  2458                           	opt callstack 0
  2459  000060                     A6_Process_Random_Comms@response:
  2460                           	opt callstack 0
  2461                           
  2462                           ; 32 bytes @ 0x0
  2463  000060                     	ds	2
  2464  000062                     sprintf@cp:
  2465                           	opt callstack 0
  2466                           
  2467                           ; 2 bytes @ 0x2
  2468  000062                     	ds	2
  2469  000064                     sprintf@len:
  2470                           	opt callstack 0
  2471                           
  2472                           ; 2 bytes @ 0x4
  2473  000064                     	ds	2
  2474  000066                     sprintf@val:
  2475                           	opt callstack 0
  2476                           
  2477                           ; 4 bytes @ 0x6
  2478  000066                     	ds	4
  2479  00006A                     sprintf@flag:
  2480                           	opt callstack 0
  2481                           
  2482                           ; 1 bytes @ 0xA
  2483  00006A                     	ds	1
  2484  00006B                     sprintf@ap:
  2485                           	opt callstack 0
  2486                           
  2487                           ; 2 bytes @ 0xB
  2488  00006B                     	ds	2
  2489  00006D                     sprintf@width:
  2490                           	opt callstack 0
  2491                           
  2492                           ; 2 bytes @ 0xD
  2493  00006D                     	ds	2
  2494  00006F                     sprintf@c:
  2495                           	opt callstack 0
  2496                           
  2497                           ; 1 bytes @ 0xF
  2498  00006F                     	ds	1
  2499  000070                     ?_A6_BaudRateSet:
  2500                           	opt callstack 0
  2501  000070                     A6_BaudRateSet@baudRate:
  2502                           	opt callstack 0
  2503  000070                     A6_BaudRateAutoDetect@zzzz:
  2504                           	opt callstack 0
  2505                           
  2506                           ; 32 bytes @ 0x10
  2507  000070                     	ds	4
  2508  000074                     A6_BaudRateSet@response:
  2509                           	opt callstack 0
  2510                           
  2511                           ; 32 bytes @ 0x14
  2512  000074                     	ds	12
  2513  000080                     A6_Process_Random_Comms@cnt:
  2514                           	opt callstack 0
  2515                           
  2516                           ; 1 bytes @ 0x20
  2517  000080                     	ds	16
  2518  000090                     A6_BaudRateAutoDetect@i:
  2519                           	opt callstack 0
  2520                           
  2521                           ; 1 bytes @ 0x30
  2522  000090                     	ds	4
  2523  000094                     A6_BaudRateSet@request:
  2524                           	opt callstack 0
  2525                           
  2526                           ; 20 bytes @ 0x34
  2527  000094                     	ds	20
  2528  0000A8                     A6_BaudRateSet@currentBaudRate:
  2529                           	opt callstack 0
  2530                           
  2531                           ; 4 bytes @ 0x48
  2532  0000A8                     	ds	4
  2533  0000AC                     ??_loop:
  2534                           
  2535                           ; 1 bytes @ 0x4C
  2536  0000AC                     	ds	4
  2537                           
  2538                           	psect	cstackCOMRAM
  2539  000001                     __pcstackCOMRAM:
  2540                           	opt callstack 0
  2541  000001                     ??_Ecg_Interrupt:
  2542  000001                     ??_EUSART_RX_Interrupt:
  2543  000001                     
  2544                           ; 4 bytes @ 0x0
  2545  000001                     	ds	1
  2546  000002                     EUSART_RX_Interrupt@c:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 1 bytes @ 0x1
  2550  000002                     	ds	1
  2551  000003                     ??_isr:
  2552                           
  2553                           ; 1 bytes @ 0x2
  2554  000003                     	ds	2
  2555  000005                     ??_init:
  2556  000005                     ??_isdigit:
  2557  000005                     ??_TFT_Reset:
  2558  000005                     ?_abs:
  2559                           	opt callstack 0
  2560  000005                     ?_Ecg_CheckLeads:
  2561                           	opt callstack 0
  2562  000005                     ?_strcmp:
  2563                           	opt callstack 0
  2564  000005                     ?_strlen:
  2565                           	opt callstack 0
  2566  000005                     ?_strchr:
  2567                           	opt callstack 0
  2568  000005                     ?___wmul:
  2569                           	opt callstack 0
  2570  000005                     ?___awdiv:
  2571                           	opt callstack 0
  2572  000005                     ?___lmul:
  2573                           	opt callstack 0
  2574  000005                     ?___lldiv:
  2575                           	opt callstack 0
  2576  000005                     EUSART_TX_Char@c:
  2577                           	opt callstack 0
  2578  000005                     TFT_WriteRegister@reg:
  2579                           	opt callstack 0
  2580  000005                     EUSART_RX_AvailableData@timeout:
  2581                           	opt callstack 0
  2582  000005                     ___wmul@multiplier:
  2583                           	opt callstack 0
  2584  000005                     ___awdiv@dividend:
  2585                           	opt callstack 0
  2586  000005                     abs@a:
  2587                           	opt callstack 0
  2588  000005                     memset@p1:
  2589                           	opt callstack 0
  2590  000005                     strcmp@s1:
  2591                           	opt callstack 0
  2592  000005                     strlen@s:
  2593                           	opt callstack 0
  2594  000005                     strchr@ptr:
  2595                           	opt callstack 0
  2596  000005                     sleepMS@ms:
  2597                           	opt callstack 0
  2598  000005                     ___lmul@multiplier:
  2599                           	opt callstack 0
  2600  000005                     ___lldiv@dividend:
  2601                           	opt callstack 0
  2602                           
  2603                           ; 4 bytes @ 0x4
  2604  000005                     	ds	1
  2605  000006                     _isdigit$1933:
  2606                           	opt callstack 0
  2607                           
  2608                           ; 1 bytes @ 0x5
  2609  000006                     	ds	1
  2610  000007                     ??_abs:
  2611  000007                     ??_Ecg_CheckLeads:
  2612  000007                     ??_EUSART_RX_AvailableData:
  2613  000007                     isdigit@c:
  2614                           	opt callstack 0
  2615  000007                     TFT_WriteRegister@data:
  2616                           	opt callstack 0
  2617  000007                     ___wmul@multiplicand:
  2618                           	opt callstack 0
  2619  000007                     ___awdiv@divisor:
  2620                           	opt callstack 0
  2621  000007                     memset@c:
  2622                           	opt callstack 0
  2623  000007                     strcmp@s2:
  2624                           	opt callstack 0
  2625  000007                     strlen@cp:
  2626                           	opt callstack 0
  2627  000007                     strchr@chr:
  2628                           	opt callstack 0
  2629                           
  2630                           ; 2 bytes @ 0x6
  2631  000007                     	ds	1
  2632  000008                     Ecg_CheckLeads@leadsStatus:
  2633                           	opt callstack 0
  2634                           
  2635                           ; 1 bytes @ 0x7
  2636  000008                     	ds	1
  2637  000009                     ??_strcmp:
  2638  000009                     ??_strchr:
  2639  000009                     ?_strncmp:
  2640                           	opt callstack 0
  2641  000009                     TFT_WriteRegister@h:
  2642                           	opt callstack 0
  2643  000009                     ___awdiv@counter:
  2644                           	opt callstack 0
  2645  000009                     EUSART_TX_String@str:
  2646                           	opt callstack 0
  2647  000009                     ___wmul@product:
  2648                           	opt callstack 0
  2649  000009                     memset@n:
  2650                           	opt callstack 0
  2651  000009                     strncmp@s1:
  2652                           	opt callstack 0
  2653  000009                     sleepMS@t:
  2654                           	opt callstack 0
  2655  000009                     ___lmul@multiplicand:
  2656                           	opt callstack 0
  2657  000009                     ___lldiv@divisor:
  2658                           	opt callstack 0
  2659                           
  2660                           ; 4 bytes @ 0x8
  2661  000009                     	ds	1
  2662  00000A                     TFT_WriteRegister@l:
  2663                           	opt callstack 0
  2664  00000A                     ___awdiv@sign:
  2665                           	opt callstack 0
  2666                           
  2667                           ; 1 bytes @ 0x9
  2668  00000A                     	ds	1
  2669  00000B                     ?_atoi:
  2670                           	opt callstack 0
  2671  00000B                     ?_strspn:
  2672                           	opt callstack 0
  2673  00000B                     ?_strcspn:
  2674                           	opt callstack 0
  2675  00000B                     TFT_WriteRegister@h_747:
  2676                           	opt callstack 0
  2677  00000B                     EUSART_TX_String@len:
  2678                           	opt callstack 0
  2679  00000B                     strcmp@r:
  2680                           	opt callstack 0
  2681  00000B                     ___awdiv@quotient:
  2682                           	opt callstack 0
  2683  00000B                     atoi@s:
  2684                           	opt callstack 0
  2685  00000B                     memset@p:
  2686                           	opt callstack 0
  2687  00000B                     strcspn@s1:
  2688                           	opt callstack 0
  2689  00000B                     strncmp@s2:
  2690                           	opt callstack 0
  2691  00000B                     strspn@s1:
  2692                           	opt callstack 0
  2693  00000B                     EUSART_RX_AvailableData@t:
  2694                           	opt callstack 0
  2695                           
  2696                           ; 4 bytes @ 0xA
  2697  00000B                     	ds	1
  2698  00000C                     TFT_WriteRegister@l_748:
  2699                           	opt callstack 0
  2700                           
  2701                           ; 1 bytes @ 0xB
  2702  00000C                     	ds	1
  2703  00000D                     ??_atoi:
  2704  00000D                     TFT_SetAddrWindow@x1:
  2705                           	opt callstack 0
  2706  00000D                     TFT_DrawPixel@x:
  2707                           	opt callstack 0
  2708  00000D                     TFT_Flood@color:
  2709                           	opt callstack 0
  2710  00000D                     strcspn@s2:
  2711                           	opt callstack 0
  2712  00000D                     strncmp@len:
  2713                           	opt callstack 0
  2714  00000D                     strspn@s2:
  2715                           	opt callstack 0
  2716  00000D                     ___lmul@product:
  2717                           	opt callstack 0
  2718  00000D                     ___lldiv@quotient:
  2719                           	opt callstack 0
  2720                           
  2721                           ; 4 bytes @ 0xC
  2722  00000D                     	ds	2
  2723  00000F                     ??_strncmp:
  2724  00000F                     ??_strspn:
  2725  00000F                     ??_strcspn:
  2726  00000F                     atoi@sign:
  2727                           	opt callstack 0
  2728  00000F                     TFT_SetAddrWindow@y1:
  2729                           	opt callstack 0
  2730  00000F                     TFT_DrawPixel@y:
  2731                           	opt callstack 0
  2732  00000F                     EUSART_BufferGetChar@timeout:
  2733                           	opt callstack 0
  2734  00000F                     TFT_Flood@len:
  2735                           	opt callstack 0
  2736                           
  2737                           ; 4 bytes @ 0xE
  2738  00000F                     	ds	1
  2739  000010                     ?_strstr:
  2740                           	opt callstack 0
  2741  000010                     atoi@a:
  2742                           	opt callstack 0
  2743  000010                     strstr@s1:
  2744                           	opt callstack 0
  2745  000010                     strcspn@i:
  2746                           	opt callstack 0
  2747  000010                     strspn@i:
  2748                           	opt callstack 0
  2749                           
  2750                           ; 2 bytes @ 0xF
  2751  000010                     	ds	1
  2752  000011                     ?_atol:
  2753                           	opt callstack 0
  2754  000011                     ___lldiv@counter:
  2755                           	opt callstack 0
  2756  000011                     TFT_SetAddrWindow@x2:
  2757                           	opt callstack 0
  2758  000011                     TFT_DrawPixel@color:
  2759                           	opt callstack 0
  2760  000011                     A6_ReadLine@response:
  2761                           	opt callstack 0
  2762  000011                     atol@s:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 2 bytes @ 0x10
  2766  000011                     	ds	1
  2767  000012                     ?_strtok:
  2768                           	opt callstack 0
  2769  000012                     ?___llmod:
  2770                           	opt callstack 0
  2771  000012                     strstr@s2:
  2772                           	opt callstack 0
  2773  000012                     strtok@s1:
  2774                           	opt callstack 0
  2775  000012                     EUSART_BaudRateSet@baudRate:
  2776                           	opt callstack 0
  2777  000012                     ___llmod@dividend:
  2778                           	opt callstack 0
  2779                           
  2780                           ; 4 bytes @ 0x11
  2781  000012                     	ds	1
  2782  000013                     ??_TFT_Flood:
  2783  000013                     A6_ReadLine@responseLen:
  2784                           	opt callstack 0
  2785  000013                     TFT_SetAddrWindow@y2:
  2786                           	opt callstack 0
  2787  000013                     TFT_DrawLine@x0:
  2788                           	opt callstack 0
  2789                           
  2790                           ; 2 bytes @ 0x12
  2791  000013                     	ds	1
  2792  000014                     A6_ReadLine@timeout:
  2793                           	opt callstack 0
  2794  000014                     strtok@s2:
  2795                           	opt callstack 0
  2796                           
  2797                           ; 2 bytes @ 0x13
  2798  000014                     	ds	1
  2799  000015                     ??_atol:
  2800  000015                     TFT_DrawLine@y0:
  2801                           	opt callstack 0
  2802                           
  2803                           ; 2 bytes @ 0x14
  2804  000015                     	ds	1
  2805  000016                     ??_EUSART_BaudRateSet:
  2806  000016                     A6_ReadLine@iResponse:
  2807                           	opt callstack 0
  2808  000016                     ___llmod@divisor:
  2809                           	opt callstack 0
  2810                           
  2811                           ; 4 bytes @ 0x15
  2812  000016                     	ds	1
  2813  000017                     A6_ReadLine@c:
  2814                           	opt callstack 0
  2815  000017                     TFT_DrawLine@x1:
  2816                           	opt callstack 0
  2817  000017                     TFT_Flood@blocks:
  2818                           	opt callstack 0
  2819                           
  2820                           ; 2 bytes @ 0x16
  2821  000017                     	ds	1
  2822  000018                     A6_Command@command:
  2823                           	opt callstack 0
  2824                           
  2825                           ; 2 bytes @ 0x17
  2826  000018                     	ds	1
  2827  000019                     TFT_Flood@i:
  2828                           	opt callstack 0
  2829  000019                     atol@sign:
  2830                           	opt callstack 0
  2831  000019                     TFT_DrawLine@y1:
  2832                           	opt callstack 0
  2833                           
  2834                           ; 2 bytes @ 0x18
  2835  000019                     	ds	1
  2836  00001A                     TFT_Flood@color_hi:
  2837                           	opt callstack 0
  2838  00001A                     ___llmod@counter:
  2839                           	opt callstack 0
  2840  00001A                     A6_Command@timeout:
  2841                           	opt callstack 0
  2842  00001A                     EUSART_BaudRateSet@tmp:
  2843                           	opt callstack 0
  2844  00001A                     atol@a:
  2845                           	opt callstack 0
  2846                           
  2847                           ; 4 bytes @ 0x19
  2848  00001A                     	ds	1
  2849  00001B                     TFT_Flood@color_lo:
  2850                           	opt callstack 0
  2851  00001B                     TFT_DrawLine@color:
  2852                           	opt callstack 0
  2853                           
  2854                           ; 2 bytes @ 0x1A
  2855  00001B                     	ds	1
  2856  00001C                     TFT_DrawFillRect@x:
  2857                           	opt callstack 0
  2858  00001C                     TFT_FillScreen@color:
  2859                           	opt callstack 0
  2860  00001C                     A6_Command@response:
  2861                           	opt callstack 0
  2862                           
  2863                           ; 2 bytes @ 0x1B
  2864  00001C                     	ds	1
  2865  00001D                     ??_TFT_DrawLine:
  2866                           
  2867                           ; 1 bytes @ 0x1C
  2868  00001D                     	ds	1
  2869  00001E                     ??_TFT_Init:
  2870  00001E                     A6_Command@responseLen:
  2871                           	opt callstack 0
  2872  00001E                     atol@c:
  2873                           	opt callstack 0
  2874  00001E                     TFT_DrawFillRect@y:
  2875                           	opt callstack 0
  2876                           
  2877                           ; 2 bytes @ 0x1D
  2878  00001E                     	ds	1
  2879  00001F                     ?_A6_BaudRateGet:
  2880                           	opt callstack 0
  2881  00001F                     A6_IsAlive@response:
  2882                           	opt callstack 0
  2883  00001F                     A6_NetworkGetStatus@response:
  2884                           	opt callstack 0
  2885  00001F                     A6_NetworkGetRSSI@response:
  2886                           	opt callstack 0
  2887                           
  2888                           ; 32 bytes @ 0x1E
  2889  00001F                     	ds	1
  2890  000020                     TFT_Init@data:
  2891                           	opt callstack 0
  2892  000020                     TFT_DrawLine@t:
  2893                           	opt callstack 0
  2894  000020                     TFT_DrawFillRect@w:
  2895                           	opt callstack 0
  2896                           
  2897                           ; 2 bytes @ 0x1F
  2898  000020                     	ds	2
  2899  000022                     TFT_Init@initSequenceSize:
  2900                           	opt callstack 0
  2901  000022                     TFT_DrawLine@t_792:
  2902                           	opt callstack 0
  2903  000022                     TFT_DrawFillRect@h:
  2904                           	opt callstack 0
  2905                           
  2906                           ; 2 bytes @ 0x21
  2907  000022                     	ds	1
  2908  000023                     A6_BaudRateGet@response:
  2909                           	opt callstack 0
  2910                           
  2911                           ; 32 bytes @ 0x22
  2912  000023                     	ds	1
  2913  000024                     TFT_Init@cmd:
  2914                           	opt callstack 0
  2915  000024                     TFT_DrawLine@t_793:
  2916                           	opt callstack 0
  2917  000024                     TFT_DrawFillRect@color:
  2918                           	opt callstack 0
  2919                           
  2920                           ; 2 bytes @ 0x23
  2921  000024                     	ds	2
  2922  000026                     ??_TFT_DrawFillRect:
  2923  000026                     TFT_Init@i:
  2924                           	opt callstack 0
  2925  000026                     TFT_DrawLine@t_794:
  2926                           	opt callstack 0
  2927                           
  2928                           ; 2 bytes @ 0x25
  2929  000026                     	ds	2
  2930  000028                     TFT_DrawLine@dy:
  2931                           	opt callstack 0
  2932                           
  2933                           ; 2 bytes @ 0x27
  2934  000028                     	ds	2
  2935  00002A                     TFT_DrawLine@ystep:
  2936                           	opt callstack 0
  2937  00002A                     TFT_DrawChar@x:
  2938                           	opt callstack 0
  2939                           
  2940                           ; 2 bytes @ 0x29
  2941  00002A                     	ds	2
  2942  00002C                     TFT_DrawLine@err:
  2943                           	opt callstack 0
  2944  00002C                     TFT_DrawChar@y:
  2945                           	opt callstack 0
  2946                           
  2947                           ; 2 bytes @ 0x2B
  2948  00002C                     	ds	2
  2949  00002E                     TFT_DrawChar@c:
  2950                           	opt callstack 0
  2951  00002E                     TFT_DrawLine@steep:
  2952                           	opt callstack 0
  2953                           
  2954                           ; 2 bytes @ 0x2D
  2955  00002E                     	ds	1
  2956  00002F                     TFT_DrawChar@color:
  2957                           	opt callstack 0
  2958                           
  2959                           ; 2 bytes @ 0x2E
  2960  00002F                     	ds	1
  2961  000030                     TFT_DrawLine@dx:
  2962                           	opt callstack 0
  2963                           
  2964                           ; 2 bytes @ 0x2F
  2965  000030                     	ds	1
  2966  000031                     TFT_DrawChar@bg:
  2967                           	opt callstack 0
  2968                           
  2969                           ; 2 bytes @ 0x30
  2970  000031                     	ds	2
  2971  000033                     TFT_DrawChar@size:
  2972                           	opt callstack 0
  2973                           
  2974                           ; 1 bytes @ 0x32
  2975  000033                     	ds	1
  2976  000034                     ??_TFT_DrawChar:
  2977                           
  2978                           ; 1 bytes @ 0x33
  2979  000034                     	ds	4
  2980  000038                     TFT_DrawChar@line:
  2981                           	opt callstack 0
  2982                           
  2983                           ; 1 bytes @ 0x37
  2984  000038                     	ds	1
  2985  000039                     _TFT_DrawChar$2204:
  2986                           	opt callstack 0
  2987                           
  2988                           ; 2 bytes @ 0x38
  2989  000039                     	ds	2
  2990  00003B                     _TFT_DrawChar$2205:
  2991                           	opt callstack 0
  2992                           
  2993                           ; 2 bytes @ 0x3A
  2994  00003B                     	ds	2
  2995  00003D                     TFT_DrawChar@j:
  2996                           	opt callstack 0
  2997                           
  2998                           ; 1 bytes @ 0x3C
  2999  00003D                     	ds	1
  3000  00003E                     TFT_DrawChar@i:
  3001                           	opt callstack 0
  3002                           
  3003                           ; 1 bytes @ 0x3D
  3004  00003E                     	ds	1
  3005  00003F                     TFT_DrawString@x:
  3006                           	opt callstack 0
  3007  00003F                     A6_NetworkGetStatus@networkStatusToken:
  3008                           	opt callstack 0
  3009  00003F                     A6_NetworkGetRSSI@RSSIToken:
  3010                           	opt callstack 0
  3011                           
  3012                           ; 2 bytes @ 0x3E
  3013  00003F                     	ds	2
  3014  000041                     A6_NetworkGetRSSILevel@RSSI:
  3015                           	opt callstack 0
  3016  000041                     TFT_DrawString@y:
  3017                           	opt callstack 0
  3018                           
  3019                           ; 2 bytes @ 0x40
  3020  000041                     	ds	2
  3021  000043                     TFT_DrawString@str:
  3022                           	opt callstack 0
  3023  000043                     A6_BaudRateGet@baudRate:
  3024                           	opt callstack 0
  3025                           
  3026                           ; 4 bytes @ 0x42
  3027  000043                     	ds	2
  3028  000045                     TFT_DrawString@color:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 2 bytes @ 0x44
  3032  000045                     	ds	2
  3033  000047                     TFT_DrawString@bg:
  3034                           	opt callstack 0
  3035  000047                     A6_BaudRateGet@baudRateToken:
  3036                           	opt callstack 0
  3037                           
  3038                           ; 2 bytes @ 0x46
  3039  000047                     	ds	2
  3040  000049                     TFT_DrawString@size:
  3041                           	opt callstack 0
  3042  000049                     A6_BaudRateGet@j:
  3043                           	opt callstack 0
  3044                           
  3045                           ; 1 bytes @ 0x48
  3046  000049                     	ds	1
  3047  00004A                     ?_sprintf:
  3048                           	opt callstack 0
  3049  00004A                     printLine@str:
  3050                           	opt callstack 0
  3051  00004A                     sprintf@sp:
  3052                           	opt callstack 0
  3053                           
  3054                           ; 2 bytes @ 0x49
  3055  00004A                     	ds	2
  3056  00004C                     printLine@color:
  3057                           	opt callstack 0
  3058  00004C                     sprintf@f:
  3059                           	opt callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x4B
  3062  00004C                     	ds	2
  3063  00004E                     
  3064                           ; 1 bytes @ 0x4D
  3065  00004E                     	ds	4
  3066  000052                     ??_sprintf:
  3067                           
  3068                           ; 1 bytes @ 0x51
  3069  000052                     	ds	4
  3070  000056                     
  3071                           ; 1 bytes @ 0x55
  3072 ;;
  3073 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3074 ;;
  3075 ;; *************** function _main *****************
  3076 ;; Defined at:
  3077 ;;		line 12 in file "main.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels required when called:   11
  3097 ;; This function calls:
  3098 ;;		_A6_Init
  3099 ;;		_EUSART_Init
  3100 ;;		_Ecg_Init
  3101 ;;		_TFT_Init
  3102 ;;		_init
  3103 ;;		_loop
  3104 ;; This function is called by:
  3105 ;;		Startup code after reset
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text0
  3110  002B34                     __ptext0:
  3111                           	opt callstack 0
  3112  002B34                     _main:
  3113                           	opt callstack 20
  3114  002B34                     
  3115                           ;main.c: 14: init();
  3116  002B34  ECEA  F011         	call	_init	;wreg free
  3117  002B38                     
  3118                           ;main.c: 15: TFT_Init();
  3119  002B38  ECB1  F00B         	call	_TFT_Init	;wreg free
  3120  002B3C                     
  3121                           ;main.c: 16: EUSART_Init();
  3122  002B3C  EC2A  F014         	call	_EUSART_Init	;wreg free
  3123  002B40                     
  3124                           ;main.c: 17: Ecg_Init();
  3125  002B40  EC5C  F015         	call	_Ecg_Init	;wreg free
  3126  002B44                     
  3127                           ;main.c: 18: A6_Init();
  3128  002B44  ECC9  F015         	call	_A6_Init	;wreg free
  3129  002B48                     l5283:
  3130  002B48  EC09  F000         	call	_loop	;wreg free
  3131  002B4C  EFA4  F015         	goto	l5283
  3132  002B50  EF07  F000         	goto	start
  3133  002B54                     __end_of_main:
  3134                           	opt callstack 0
  3135                           
  3136 ;; *************** function _loop *****************
  3137 ;; Defined at:
  3138 ;;		line 28 in file "main.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  zzzz           32   96[BANK1 ] unsigned char [32]
  3143 ;;  ns              1  172[BANK1 ] unsigned char 
  3144 ;;  zzzz           32   64[BANK1 ] unsigned char [32]
  3145 ;;  zzzz           32   32[BANK1 ] unsigned char [32]
  3146 ;;  response       32    0[BANK1 ] unsigned char [32]
  3147 ;;  zzzz           32  128[BANK1 ] unsigned char [32]
  3148 ;;  zz              4  168[BANK1 ] unsigned long 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0
  3159 ;;      Locals:         0       0     173       0       0       0       0       0       0
  3160 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3161 ;;      Totals:         0       4     173       0       0       0       0       0       0
  3162 ;;Total ram usage:      177 bytes
  3163 ;; Hardware stack levels used:    1
  3164 ;; Hardware stack levels required when called:   10
  3165 ;; This function calls:
  3166 ;;		_A6_BaudRateAutoDetect
  3167 ;;		_A6_BaudRateGet
  3168 ;;		_A6_BaudRateSet
  3169 ;;		_A6_Command
  3170 ;;		_A6_IsAlive
  3171 ;;		_A6_NetworkGetRSSI
  3172 ;;		_A6_NetworkGetRSSILevel
  3173 ;;		_A6_NetworkGetStatus
  3174 ;;		_A6_Process_Random_Comms
  3175 ;;		_printLine
  3176 ;;		_sprintf
  3177 ;; This function is called by:
  3178 ;;		_main
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text1
  3183  000012                     __ptext1:
  3184                           	opt callstack 0
  3185  000012                     _loop:
  3186                           	opt callstack 20
  3187  000012                     
  3188                           ;main.c: 31: A6_Process_Random_Comms();
  3189  000012  EC21  F00F         	call	_A6_Process_Random_Comms	;wreg free
  3190  000016                     
  3191                           ;main.c: 33: if((MILLISECONDS > 20000) && (tmp4 < (MILLISECONDS - 20000))) {
  3192  000016  0101               	movlb	1	; () banked
  3193  000018  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3194  00001A  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3195  00001C  E10B               	bnz	u4320
  3196  00001E  0E21               	movlw	33
  3197  000020  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3198  000022  0E4E               	movlw	78
  3199  000024  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3200  000026  A0D8               	btfss	status,0,c
  3201  000028  EF18  F000         	goto	u4321
  3202  00002C  EF1A  F000         	goto	u4320
  3203  000030                     u4321:
  3204  000030  EF78  F001         	goto	l5177
  3205  000034                     u4320:
  3206  000034                     
  3207                           ; BSR set to: 1
  3208  000034  0EE0               	movlw	224
  3209  000036  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3210  000038  0100               	movlb	0	; () banked
  3211  00003A  6FAC               	movwf	??_loop& (0+255),b
  3212  00003C  0EB1               	movlw	177
  3213  00003E  0101               	movlb	1	; () banked
  3214  000040  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3215  000042  0100               	movlb	0	; () banked
  3216  000044  6FAD               	movwf	(??_loop+1)& (0+255),b
  3217  000046  0EFF               	movlw	255
  3218  000048  0101               	movlb	1	; () banked
  3219  00004A  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3220  00004C  0100               	movlb	0	; () banked
  3221  00004E  6FAE               	movwf	(??_loop+2)& (0+255),b
  3222  000050  0EFF               	movlw	255
  3223  000052  0101               	movlb	1	; () banked
  3224  000054  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3225  000056  0100               	movlb	0	; () banked
  3226  000058  6FAF               	movwf	(??_loop+3)& (0+255),b
  3227  00005A  51AC               	movf	??_loop& (0+255),w,b
  3228  00005C  0101               	movlb	1	; () banked
  3229  00005E  5DB1               	subwf	_tmp4& (0+255),w,b
  3230  000060  0100               	movlb	0	; () banked
  3231  000062  51AD               	movf	(??_loop+1)& (0+255),w,b
  3232  000064  0101               	movlb	1	; () banked
  3233  000066  59B2               	subwfb	(_tmp4+1)& (0+255),w,b
  3234  000068  0100               	movlb	0	; () banked
  3235  00006A  51AE               	movf	(??_loop+2)& (0+255),w,b
  3236  00006C  0101               	movlb	1	; () banked
  3237  00006E  59B3               	subwfb	(_tmp4+2)& (0+255),w,b
  3238  000070  0100               	movlb	0	; () banked
  3239  000072  51AF               	movf	(??_loop+3)& (0+255),w,b
  3240  000074  0101               	movlb	1	; () banked
  3241  000076  59B4               	subwfb	(_tmp4+3)& (0+255),w,b
  3242  000078  B0D8               	btfsc	status,0,c
  3243  00007A  EF41  F000         	goto	u4331
  3244  00007E  EF43  F000         	goto	u4330
  3245  000082                     u4331:
  3246  000082  EF78  F001         	goto	l5177
  3247  000086                     u4330:
  3248  000086                     
  3249                           ; BSR set to: 1
  3250                           ;main.c: 34: tmp4 = MILLISECONDS;
  3251  000086  C1C1  F1B1         	movff	_MILLISECONDS,_tmp4
  3252  00008A  C1C2  F1B2         	movff	_MILLISECONDS+1,_tmp4+1
  3253  00008E  C1C3  F1B3         	movff	_MILLISECONDS+2,_tmp4+2
  3254  000092  C1C4  F1B4         	movff	_MILLISECONDS+3,_tmp4+3
  3255  000096                     
  3256                           ; BSR set to: 1
  3257                           ;main.c: 36: char zzzz[32];;main.c: 37: sprintf(zzzz, "Change baud rate (%lu)", A6_BaudR
      +                          ateGet());
  3258  000096  0E80               	movlw	low loop@zzzz
  3259  000098  6E4A               	movwf	sprintf@sp^0,c
  3260  00009A  0E01               	movlw	high loop@zzzz
  3261  00009C  6E4B               	movwf	(sprintf@sp+1)^0,c
  3262  00009E  0EE9               	movlw	low STR_1
  3263  0000A0  6E4C               	movwf	sprintf@f^0,c
  3264  0000A2  0E5E               	movlw	high STR_1
  3265  0000A4  6E4D               	movwf	(sprintf@f+1)^0,c
  3266  0000A6  ECB3  F009         	call	_A6_BaudRateGet	;wreg free
  3267  0000AA  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3268  0000AE  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3269  0000B2  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3270  0000B6  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3271  0000BA  EC3C  F003         	call	_sprintf	;wreg free
  3272  0000BE                     
  3273                           ;main.c: 38: printLine(zzzz, 0xFFE0);
  3274  0000BE  0E80               	movlw	low loop@zzzz
  3275  0000C0  6E4A               	movwf	printLine@str^0,c
  3276  0000C2  0E01               	movlw	high loop@zzzz
  3277  0000C4  6E4B               	movwf	(printLine@str+1)^0,c
  3278  0000C6  0EFF               	movlw	255
  3279  0000C8  6E4D               	movwf	(printLine@color+1)^0,c
  3280  0000CA  0EE0               	movlw	224
  3281  0000CC  6E4C               	movwf	printLine@color^0,c
  3282  0000CE  ECAB  F00F         	call	_printLine	;wreg free
  3283  0000D2                     
  3284                           ;main.c: 40: uint32_t zz = 0;
  3285  0000D2  0E00               	movlw	0
  3286  0000D4  0101               	movlb	1	; () banked
  3287  0000D6  6FA8               	movwf	loop@zz& (0+255),b
  3288  0000D8  0E00               	movlw	0
  3289  0000DA  6FA9               	movwf	(loop@zz+1)& (0+255),b
  3290  0000DC  0E00               	movlw	0
  3291  0000DE  6FAA               	movwf	(loop@zz+2)& (0+255),b
  3292  0000E0  0E00               	movlw	0
  3293  0000E2  6FAB               	movwf	(loop@zz+3)& (0+255),b
  3294                           
  3295                           ;main.c: 41: switch(A6_BaudRateGet()) {
  3296  0000E4  EFD5  F000         	goto	l5151
  3297  0000E8                     l5137:
  3298                           
  3299                           ;main.c: 43: zz = A6_BaudRateSet(115200);
  3300  0000E8  0E00               	movlw	0
  3301  0000EA  0100               	movlb	0	; () banked
  3302  0000EC  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3303  0000EE  0EC2               	movlw	194
  3304  0000F0  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3305  0000F2  0E01               	movlw	1
  3306  0000F4  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3307  0000F6  0E00               	movlw	0
  3308  0000F8  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3309  0000FA  EC1E  F009         	call	_A6_BaudRateSet	;wreg free
  3310  0000FE  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3311  000102  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3312  000106  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3313  00010A  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3314                           
  3315                           ;main.c: 44: break;
  3316  00010E  EF10  F001         	goto	l5153
  3317  000112                     l5139:
  3318                           
  3319                           ;main.c: 46: zz = A6_BaudRateSet(9600);
  3320  000112  0E80               	movlw	128
  3321  000114  0100               	movlb	0	; () banked
  3322  000116  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3323  000118  0E25               	movlw	37
  3324  00011A  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3325  00011C  0E00               	movlw	0
  3326  00011E  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3327  000120  0E00               	movlw	0
  3328  000122  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3329  000124  EC1E  F009         	call	_A6_BaudRateSet	;wreg free
  3330  000128  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3331  00012C  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3332  000130  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3333  000134  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3334                           
  3335                           ;main.c: 47: break;
  3336  000138  EF10  F001         	goto	l5153
  3337  00013C                     l5141:
  3338                           
  3339                           ;main.c: 49: zz = A6_BaudRateSet(57600);
  3340  00013C  0E00               	movlw	0
  3341  00013E  0100               	movlb	0	; () banked
  3342  000140  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3343  000142  0EE1               	movlw	225
  3344  000144  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3345  000146  0E00               	movlw	0
  3346  000148  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3347  00014A  0E00               	movlw	0
  3348  00014C  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3349  00014E  EC1E  F009         	call	_A6_BaudRateSet	;wreg free
  3350  000152  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3351  000156  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3352  00015A  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3353  00015E  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3354                           
  3355                           ;main.c: 50: break;
  3356  000162  EF10  F001         	goto	l5153
  3357  000166                     l5143:
  3358                           
  3359                           ;main.c: 52: sprintf(zzzz, "Invalid current baud rate (%lu)", A6_BaudRateGet());
  3360  000166  0E80               	movlw	low loop@zzzz
  3361  000168  6E4A               	movwf	sprintf@sp^0,c
  3362  00016A  0E01               	movlw	high loop@zzzz
  3363  00016C  6E4B               	movwf	(sprintf@sp+1)^0,c
  3364  00016E  0E2F               	movlw	low STR_2
  3365  000170  6E4C               	movwf	sprintf@f^0,c
  3366  000172  0E5E               	movlw	high STR_2
  3367  000174  6E4D               	movwf	(sprintf@f+1)^0,c
  3368  000176  ECB3  F009         	call	_A6_BaudRateGet	;wreg free
  3369  00017A  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3370  00017E  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3371  000182  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3372  000186  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3373  00018A  EC3C  F003         	call	_sprintf	;wreg free
  3374  00018E                     
  3375                           ;main.c: 53: printLine(zzzz, 0xFFE0);
  3376  00018E  0E80               	movlw	low loop@zzzz
  3377  000190  6E4A               	movwf	printLine@str^0,c
  3378  000192  0E01               	movlw	high loop@zzzz
  3379  000194  6E4B               	movwf	(printLine@str+1)^0,c
  3380  000196  0EFF               	movlw	255
  3381  000198  6E4D               	movwf	(printLine@color+1)^0,c
  3382  00019A  0EE0               	movlw	224
  3383  00019C  6E4C               	movwf	printLine@color^0,c
  3384  00019E  ECAB  F00F         	call	_printLine	;wreg free
  3385  0001A2                     
  3386                           ;main.c: 54: A6_BaudRateAutoDetect();
  3387  0001A2  EC8D  F00C         	call	_A6_BaudRateAutoDetect	;wreg free
  3388                           
  3389                           ;main.c: 55: break;
  3390  0001A6  EF10  F001         	goto	l5153
  3391  0001AA                     l5151:
  3392                           
  3393                           ; BSR set to: 1
  3394  0001AA  ECB3  F009         	call	_A6_BaudRateGet	;wreg free
  3395                           
  3396                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3397                           ; Switch size 1, requested type "simple"
  3398                           ; Number of cases is 1, Range of values is 0 to 0
  3399                           ; switch strategies available:
  3400                           ; Name         Instructions Cycles
  3401                           ; simple_byte            4     3 (average)
  3402                           ;	Chosen strategy is simple_byte
  3403  0001AE  5022               	movf	(?_A6_BaudRateGet+3)^0,w,c
  3404  0001B0  0A00               	xorlw	0	; case 0
  3405  0001B2  B4D8               	btfsc	status,2,c
  3406  0001B4  EF05  F001         	goto	l5519
  3407  0001B8  EFB3  F000         	goto	l5143
  3408  0001BC                     l5515:
  3409                           
  3410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3411                           ; Switch size 1, requested type "simple"
  3412                           ; Number of cases is 2, Range of values is 37 to 225
  3413                           ; switch strategies available:
  3414                           ; Name         Instructions Cycles
  3415                           ; simple_byte            7     4 (average)
  3416                           ;	Chosen strategy is simple_byte
  3417  0001BC  5020               	movf	(?_A6_BaudRateGet+1)^0,w,c
  3418  0001BE  0A25               	xorlw	37	; case 37
  3419  0001C0  B4D8               	btfsc	status,2,c
  3420  0001C2  EFE9  F000         	goto	l5521
  3421  0001C6  0AC4               	xorlw	196	; case 225
  3422  0001C8  B4D8               	btfsc	status,2,c
  3423  0001CA  EFF0  F000         	goto	l5523
  3424  0001CE  EFB3  F000         	goto	l5143
  3425  0001D2                     l5521:
  3426                           
  3427                           ; Switch size 1, requested type "simple"
  3428                           ; Number of cases is 1, Range of values is 128 to 128
  3429                           ; switch strategies available:
  3430                           ; Name         Instructions Cycles
  3431                           ; simple_byte            4     3 (average)
  3432                           ;	Chosen strategy is simple_byte
  3433  0001D2  501F               	movf	?_A6_BaudRateGet^0,w,c
  3434  0001D4  0A80               	xorlw	128	; case 128
  3435  0001D6  B4D8               	btfsc	status,2,c
  3436  0001D8  EF9E  F000         	goto	l5141
  3437  0001DC  EFB3  F000         	goto	l5143
  3438  0001E0                     l5523:
  3439                           
  3440                           ; Switch size 1, requested type "simple"
  3441                           ; Number of cases is 1, Range of values is 0 to 0
  3442                           ; switch strategies available:
  3443                           ; Name         Instructions Cycles
  3444                           ; simple_byte            4     3 (average)
  3445                           ;	Chosen strategy is simple_byte
  3446  0001E0  501F               	movf	?_A6_BaudRateGet^0,w,c
  3447  0001E2  0A00               	xorlw	0	; case 0
  3448  0001E4  B4D8               	btfsc	status,2,c
  3449  0001E6  EF74  F000         	goto	l5137
  3450  0001EA  EFB3  F000         	goto	l5143
  3451  0001EE                     l5517:
  3452                           
  3453                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3454                           ; Switch size 1, requested type "simple"
  3455                           ; Number of cases is 1, Range of values is 194 to 194
  3456                           ; switch strategies available:
  3457                           ; Name         Instructions Cycles
  3458                           ; simple_byte            4     3 (average)
  3459                           ;	Chosen strategy is simple_byte
  3460  0001EE  5020               	movf	(?_A6_BaudRateGet+1)^0,w,c
  3461  0001F0  0AC2               	xorlw	194	; case 194
  3462  0001F2  B4D8               	btfsc	status,2,c
  3463  0001F4  EFFE  F000         	goto	l5525
  3464  0001F8  EFB3  F000         	goto	l5143
  3465  0001FC                     l5525:
  3466                           
  3467                           ; Switch size 1, requested type "simple"
  3468                           ; Number of cases is 1, Range of values is 0 to 0
  3469                           ; switch strategies available:
  3470                           ; Name         Instructions Cycles
  3471                           ; simple_byte            4     3 (average)
  3472                           ;	Chosen strategy is simple_byte
  3473  0001FC  501F               	movf	?_A6_BaudRateGet^0,w,c
  3474  0001FE  0A00               	xorlw	0	; case 0
  3475  000200  B4D8               	btfsc	status,2,c
  3476  000202  EF89  F000         	goto	l5139
  3477  000206  EFB3  F000         	goto	l5143
  3478  00020A                     l5519:
  3479                           
  3480                           ; Switch size 1, requested type "simple"
  3481                           ; Number of cases is 2, Range of values is 0 to 1
  3482                           ; switch strategies available:
  3483                           ; Name         Instructions Cycles
  3484                           ; simple_byte            7     4 (average)
  3485                           ;	Chosen strategy is simple_byte
  3486  00020A  5021               	movf	(?_A6_BaudRateGet+2)^0,w,c
  3487  00020C  0A00               	xorlw	0	; case 0
  3488  00020E  B4D8               	btfsc	status,2,c
  3489  000210  EFDE  F000         	goto	l5515
  3490  000214  0A01               	xorlw	1	; case 1
  3491  000216  B4D8               	btfsc	status,2,c
  3492  000218  EFF7  F000         	goto	l5517
  3493  00021C  EFB3  F000         	goto	l5143
  3494  000220                     l5153:
  3495                           
  3496                           ;main.c: 58: sprintf(zzzz, "Baud rate changed (-> %lu)", zz);
  3497  000220  0E80               	movlw	low loop@zzzz
  3498  000222  6E4A               	movwf	sprintf@sp^0,c
  3499  000224  0E01               	movlw	high loop@zzzz
  3500  000226  6E4B               	movwf	(sprintf@sp+1)^0,c
  3501  000228  0E6B               	movlw	low STR_3
  3502  00022A  6E4C               	movwf	sprintf@f^0,c
  3503  00022C  0E5E               	movlw	high STR_3
  3504  00022E  6E4D               	movwf	(sprintf@f+1)^0,c
  3505  000230  C1A8  F04E         	movff	loop@zz,?_sprintf+4
  3506  000234  C1A9  F04F         	movff	loop@zz+1,?_sprintf+5
  3507  000238  C1AA  F050         	movff	loop@zz+2,?_sprintf+6
  3508  00023C  C1AB  F051         	movff	loop@zz+3,?_sprintf+7
  3509  000240  EC3C  F003         	call	_sprintf	;wreg free
  3510  000244                     
  3511                           ;main.c: 59: printLine(((zz == 0) ? "Error changing baud rate" : zzzz), 0xF81F);
  3512  000244  0101               	movlb	1	; () banked
  3513  000246  51A8               	movf	loop@zz& (0+255),w,b
  3514  000248  11A9               	iorwf	(loop@zz+1)& (0+255),w,b
  3515  00024A  11AA               	iorwf	(loop@zz+2)& (0+255),w,b
  3516  00024C  11AB               	iorwf	(loop@zz+3)& (0+255),w,b
  3517  00024E  B4D8               	btfsc	status,2,c
  3518  000250  EF2C  F001         	goto	u4341
  3519  000254  EF2E  F001         	goto	u4340
  3520  000258                     u4341:
  3521  000258  EF34  F001         	goto	l5159
  3522  00025C                     u4340:
  3523  00025C                     
  3524                           ; BSR set to: 1
  3525  00025C  0E80               	movlw	low loop@zzzz
  3526  00025E  6FA0               	movwf	_loop$152& (0+255),b
  3527  000260  0E01               	movlw	high loop@zzzz
  3528  000262  6FA1               	movwf	(_loop$152+1)& (0+255),b
  3529  000264  EF38  F001         	goto	l5161
  3530  000268                     l5159:
  3531                           
  3532                           ; BSR set to: 1
  3533  000268  0EA1               	movlw	low STR_4
  3534  00026A  6FA0               	movwf	_loop$152& (0+255),b
  3535  00026C  0E5E               	movlw	high STR_4
  3536  00026E  6FA1               	movwf	(_loop$152+1)& (0+255),b
  3537  000270                     l5161:
  3538                           
  3539                           ; BSR set to: 1
  3540  000270  C1A0  F04A         	movff	_loop$152,printLine@str
  3541  000274  C1A1  F04B         	movff	_loop$152+1,printLine@str+1
  3542  000278  0EF8               	movlw	248
  3543  00027A  6E4D               	movwf	(printLine@color+1)^0,c
  3544  00027C  0E1F               	movlw	31
  3545  00027E  6E4C               	movwf	printLine@color^0,c
  3546  000280  ECAB  F00F         	call	_printLine	;wreg free
  3547  000284                     
  3548                           ;main.c: 61: if(A6_IsAlive() == 0) {
  3549  000284  EC8E  F013         	call	_A6_IsAlive	;wreg free
  3550  000288  0900               	iorlw	0
  3551  00028A  A4D8               	btfss	status,2,c
  3552  00028C  EF4A  F001         	goto	u4351
  3553  000290  EF4C  F001         	goto	u4350
  3554  000294                     u4351:
  3555  000294  EF78  F001         	goto	l5177
  3556  000298                     u4350:
  3557  000298                     
  3558                           ;main.c: 62: printLine("Comm is dead. Retry...", 0x001F);
  3559  000298  0E00               	movlw	low STR_5
  3560  00029A  6E4A               	movwf	printLine@str^0,c
  3561  00029C  0E5F               	movlw	high STR_5
  3562  00029E  6E4B               	movwf	(printLine@str+1)^0,c
  3563  0002A0  0E00               	movlw	0
  3564  0002A2  6E4D               	movwf	(printLine@color+1)^0,c
  3565  0002A4  0E1F               	movlw	31
  3566  0002A6  6E4C               	movwf	printLine@color^0,c
  3567  0002A8  ECAB  F00F         	call	_printLine	;wreg free
  3568  0002AC                     
  3569                           ;main.c: 63: A6_BaudRateAutoDetect();
  3570  0002AC  EC8D  F00C         	call	_A6_BaudRateAutoDetect	;wreg free
  3571  0002B0                     
  3572                           ;main.c: 64: printLine(((A6_IsAlive() == 0) ? "Still dead" : "Resurrected!"), 0x001F);
  3573  0002B0  EC8E  F013         	call	_A6_IsAlive	;wreg free
  3574  0002B4  0900               	iorlw	0
  3575  0002B6  B4D8               	btfsc	status,2,c
  3576  0002B8  EF60  F001         	goto	u4361
  3577  0002BC  EF62  F001         	goto	u4360
  3578  0002C0                     u4361:
  3579  0002C0  EF69  F001         	goto	l5173
  3580  0002C4                     u4360:
  3581  0002C4  0E3E               	movlw	low STR_7
  3582  0002C6  0101               	movlb	1	; () banked
  3583  0002C8  6FA2               	movwf	_loop$157& (0+255),b
  3584  0002CA  0E5F               	movlw	high STR_7
  3585  0002CC  6FA3               	movwf	(_loop$157+1)& (0+255),b
  3586  0002CE  EF6E  F001         	goto	l5175
  3587  0002D2                     l5173:
  3588  0002D2  0E85               	movlw	low STR_6
  3589  0002D4  0101               	movlb	1	; () banked
  3590  0002D6  6FA2               	movwf	_loop$157& (0+255),b
  3591  0002D8  0E5F               	movlw	high STR_6
  3592  0002DA  6FA3               	movwf	(_loop$157+1)& (0+255),b
  3593  0002DC                     l5175:
  3594                           
  3595                           ; BSR set to: 1
  3596  0002DC  C1A2  F04A         	movff	_loop$157,printLine@str
  3597  0002E0  C1A3  F04B         	movff	_loop$157+1,printLine@str+1
  3598  0002E4  0E00               	movlw	0
  3599  0002E6  6E4D               	movwf	(printLine@color+1)^0,c
  3600  0002E8  0E1F               	movlw	31
  3601  0002EA  6E4C               	movwf	printLine@color^0,c
  3602  0002EC  ECAB  F00F         	call	_printLine	;wreg free
  3603  0002F0                     l5177:
  3604                           
  3605                           ;main.c: 65: };main.c: 66: };main.c: 68: if((MILLISECONDS > 2500) && (tmp1 < (MILLISECON
      +                          DS - 2500))) {
  3606  0002F0  0101               	movlb	1	; () banked
  3607  0002F2  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3608  0002F4  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3609  0002F6  E10B               	bnz	u4370
  3610  0002F8  0EC5               	movlw	197
  3611  0002FA  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3612  0002FC  0E09               	movlw	9
  3613  0002FE  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3614  000300  A0D8               	btfss	status,0,c
  3615  000302  EF85  F001         	goto	u4371
  3616  000306  EF87  F001         	goto	u4370
  3617  00030A                     u4371:
  3618  00030A  EFDC  F001         	goto	l5189
  3619  00030E                     u4370:
  3620  00030E                     
  3621                           ; BSR set to: 1
  3622  00030E  0E3C               	movlw	60
  3623  000310  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3624  000312  0100               	movlb	0	; () banked
  3625  000314  6FAC               	movwf	??_loop& (0+255),b
  3626  000316  0EF6               	movlw	246
  3627  000318  0101               	movlb	1	; () banked
  3628  00031A  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3629  00031C  0100               	movlb	0	; () banked
  3630  00031E  6FAD               	movwf	(??_loop+1)& (0+255),b
  3631  000320  0EFF               	movlw	255
  3632  000322  0101               	movlb	1	; () banked
  3633  000324  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3634  000326  0100               	movlb	0	; () banked
  3635  000328  6FAE               	movwf	(??_loop+2)& (0+255),b
  3636  00032A  0EFF               	movlw	255
  3637  00032C  0101               	movlb	1	; () banked
  3638  00032E  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3639  000330  0100               	movlb	0	; () banked
  3640  000332  6FAF               	movwf	(??_loop+3)& (0+255),b
  3641  000334  51AC               	movf	??_loop& (0+255),w,b
  3642  000336  0101               	movlb	1	; () banked
  3643  000338  5DBD               	subwf	_tmp1& (0+255),w,b
  3644  00033A  0100               	movlb	0	; () banked
  3645  00033C  51AD               	movf	(??_loop+1)& (0+255),w,b
  3646  00033E  0101               	movlb	1	; () banked
  3647  000340  59BE               	subwfb	(_tmp1+1)& (0+255),w,b
  3648  000342  0100               	movlb	0	; () banked
  3649  000344  51AE               	movf	(??_loop+2)& (0+255),w,b
  3650  000346  0101               	movlb	1	; () banked
  3651  000348  59BF               	subwfb	(_tmp1+2)& (0+255),w,b
  3652  00034A  0100               	movlb	0	; () banked
  3653  00034C  51AF               	movf	(??_loop+3)& (0+255),w,b
  3654  00034E  0101               	movlb	1	; () banked
  3655  000350  59C0               	subwfb	(_tmp1+3)& (0+255),w,b
  3656  000352  B0D8               	btfsc	status,0,c
  3657  000354  EFAE  F001         	goto	u4381
  3658  000358  EFB0  F001         	goto	u4380
  3659  00035C                     u4381:
  3660  00035C  EFDC  F001         	goto	l5189
  3661  000360                     u4380:
  3662  000360                     
  3663                           ; BSR set to: 1
  3664                           ;main.c: 69: tmp1 = MILLISECONDS;
  3665  000360  C1C1  F1BD         	movff	_MILLISECONDS,_tmp1
  3666  000364  C1C2  F1BE         	movff	_MILLISECONDS+1,_tmp1+1
  3667  000368  C1C3  F1BF         	movff	_MILLISECONDS+2,_tmp1+2
  3668  00036C  C1C4  F1C0         	movff	_MILLISECONDS+3,_tmp1+3
  3669  000370                     
  3670                           ; BSR set to: 1
  3671                           ;main.c: 71: printLine("Check time", 0xFFE0);
  3672  000370  0E9B               	movlw	low STR_8
  3673  000372  6E4A               	movwf	printLine@str^0,c
  3674  000374  0E5F               	movlw	high STR_8
  3675  000376  6E4B               	movwf	(printLine@str+1)^0,c
  3676  000378  0EFF               	movlw	255
  3677  00037A  6E4D               	movwf	(printLine@color+1)^0,c
  3678  00037C  0EE0               	movlw	224
  3679  00037E  6E4C               	movwf	printLine@color^0,c
  3680  000380  ECAB  F00F         	call	_printLine	;wreg free
  3681  000384                     
  3682                           ;main.c: 72: char response[32];;main.c: 73: A6_Command("AT+CCLK?\r", 0, response, 32);
  3683  000384  0EB0               	movlw	low STR_9
  3684  000386  6E18               	movwf	A6_Command@command^0,c
  3685  000388  0E5F               	movlw	high STR_9
  3686  00038A  6E19               	movwf	(A6_Command@command+1)^0,c
  3687  00038C  0E00               	movlw	0
  3688  00038E  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3689  000390  0E00               	movlw	0
  3690  000392  6E1A               	movwf	A6_Command@timeout^0,c
  3691  000394  0E00               	movlw	low loop@response
  3692  000396  6E1C               	movwf	A6_Command@response^0,c
  3693  000398  0E01               	movlw	high loop@response
  3694  00039A  6E1D               	movwf	(A6_Command@response+1)^0,c
  3695  00039C  0E20               	movlw	32
  3696  00039E  6E1E               	movwf	A6_Command@responseLen^0,c
  3697  0003A0  EC33  F010         	call	_A6_Command	;wreg free
  3698  0003A4                     
  3699                           ;main.c: 74: printLine(response, 0x07E0);
  3700  0003A4  0E00               	movlw	low loop@response
  3701  0003A6  6E4A               	movwf	printLine@str^0,c
  3702  0003A8  0E01               	movlw	high loop@response
  3703  0003AA  6E4B               	movwf	(printLine@str+1)^0,c
  3704  0003AC  0E07               	movlw	7
  3705  0003AE  6E4D               	movwf	(printLine@color+1)^0,c
  3706  0003B0  0EE0               	movlw	224
  3707  0003B2  6E4C               	movwf	printLine@color^0,c
  3708  0003B4  ECAB  F00F         	call	_printLine	;wreg free
  3709  0003B8                     l5189:
  3710                           
  3711                           ;main.c: 75: };main.c: 77: if((MILLISECONDS > 4000) && (tmp2 < (MILLISECONDS - 4000))) {
  3712  0003B8  0101               	movlb	1	; () banked
  3713  0003BA  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3714  0003BC  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3715  0003BE  E10B               	bnz	u4390
  3716  0003C0  0EA1               	movlw	161
  3717  0003C2  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3718  0003C4  0E0F               	movlw	15
  3719  0003C6  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3720  0003C8  A0D8               	btfss	status,0,c
  3721  0003CA  EFE9  F001         	goto	u4391
  3722  0003CE  EFEB  F001         	goto	u4390
  3723  0003D2                     u4391:
  3724  0003D2  EF44  F002         	goto	l5201
  3725  0003D6                     u4390:
  3726  0003D6                     
  3727                           ; BSR set to: 1
  3728  0003D6  0E60               	movlw	96
  3729  0003D8  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3730  0003DA  0100               	movlb	0	; () banked
  3731  0003DC  6FAC               	movwf	??_loop& (0+255),b
  3732  0003DE  0EF0               	movlw	240
  3733  0003E0  0101               	movlb	1	; () banked
  3734  0003E2  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3735  0003E4  0100               	movlb	0	; () banked
  3736  0003E6  6FAD               	movwf	(??_loop+1)& (0+255),b
  3737  0003E8  0EFF               	movlw	255
  3738  0003EA  0101               	movlb	1	; () banked
  3739  0003EC  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3740  0003EE  0100               	movlb	0	; () banked
  3741  0003F0  6FAE               	movwf	(??_loop+2)& (0+255),b
  3742  0003F2  0EFF               	movlw	255
  3743  0003F4  0101               	movlb	1	; () banked
  3744  0003F6  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3745  0003F8  0100               	movlb	0	; () banked
  3746  0003FA  6FAF               	movwf	(??_loop+3)& (0+255),b
  3747  0003FC  51AC               	movf	??_loop& (0+255),w,b
  3748  0003FE  0101               	movlb	1	; () banked
  3749  000400  5DB9               	subwf	_tmp2& (0+255),w,b
  3750  000402  0100               	movlb	0	; () banked
  3751  000404  51AD               	movf	(??_loop+1)& (0+255),w,b
  3752  000406  0101               	movlb	1	; () banked
  3753  000408  59BA               	subwfb	(_tmp2+1)& (0+255),w,b
  3754  00040A  0100               	movlb	0	; () banked
  3755  00040C  51AE               	movf	(??_loop+2)& (0+255),w,b
  3756  00040E  0101               	movlb	1	; () banked
  3757  000410  59BB               	subwfb	(_tmp2+2)& (0+255),w,b
  3758  000412  0100               	movlb	0	; () banked
  3759  000414  51AF               	movf	(??_loop+3)& (0+255),w,b
  3760  000416  0101               	movlb	1	; () banked
  3761  000418  59BC               	subwfb	(_tmp2+3)& (0+255),w,b
  3762  00041A  B0D8               	btfsc	status,0,c
  3763  00041C  EF12  F002         	goto	u4401
  3764  000420  EF14  F002         	goto	u4400
  3765  000424                     u4401:
  3766  000424  EF44  F002         	goto	l5201
  3767  000428                     u4400:
  3768  000428                     
  3769                           ; BSR set to: 1
  3770                           ;main.c: 78: tmp2 = MILLISECONDS;
  3771  000428  C1C1  F1B9         	movff	_MILLISECONDS,_tmp2
  3772  00042C  C1C2  F1BA         	movff	_MILLISECONDS+1,_tmp2+1
  3773  000430  C1C3  F1BB         	movff	_MILLISECONDS+2,_tmp2+2
  3774  000434  C1C4  F1BC         	movff	_MILLISECONDS+3,_tmp2+3
  3775  000438                     
  3776                           ; BSR set to: 1
  3777                           ;main.c: 79: printLine("Check baud rate", 0xFFE0);
  3778  000438  0E2E               	movlw	low STR_10
  3779  00043A  6E4A               	movwf	printLine@str^0,c
  3780  00043C  0E5F               	movlw	high STR_10
  3781  00043E  6E4B               	movwf	(printLine@str+1)^0,c
  3782  000440  0EFF               	movlw	255
  3783  000442  6E4D               	movwf	(printLine@color+1)^0,c
  3784  000444  0EE0               	movlw	224
  3785  000446  6E4C               	movwf	printLine@color^0,c
  3786  000448  ECAB  F00F         	call	_printLine	;wreg free
  3787  00044C                     
  3788                           ;main.c: 80: char zzzz[32];;main.c: 81: sprintf(zzzz, "%lu", A6_BaudRateGet());
  3789  00044C  0E20               	movlw	low loop@zzzz_162
  3790  00044E  6E4A               	movwf	sprintf@sp^0,c
  3791  000450  0E01               	movlw	high loop@zzzz_162
  3792  000452  6E4B               	movwf	(sprintf@sp+1)^0,c
  3793  000454  0EF6               	movlw	low STR_11
  3794  000456  6E4C               	movwf	sprintf@f^0,c
  3795  000458  0E5F               	movlw	high STR_11
  3796  00045A  6E4D               	movwf	(sprintf@f+1)^0,c
  3797  00045C  ECB3  F009         	call	_A6_BaudRateGet	;wreg free
  3798  000460  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3799  000464  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3800  000468  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3801  00046C  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3802  000470  EC3C  F003         	call	_sprintf	;wreg free
  3803  000474                     
  3804                           ;main.c: 82: printLine(zzzz, 0xF800);
  3805  000474  0E20               	movlw	low loop@zzzz_162
  3806  000476  6E4A               	movwf	printLine@str^0,c
  3807  000478  0E01               	movlw	high loop@zzzz_162
  3808  00047A  6E4B               	movwf	(printLine@str+1)^0,c
  3809  00047C  0EF8               	movlw	248
  3810  00047E  6E4D               	movwf	(printLine@color+1)^0,c
  3811  000480  0E00               	movlw	0
  3812  000482  6E4C               	movwf	printLine@color^0,c
  3813  000484  ECAB  F00F         	call	_printLine	;wreg free
  3814  000488                     l5201:
  3815                           
  3816                           ;main.c: 83: };main.c: 85: if((MILLISECONDS > 6500) && (tmp3 < (MILLISECONDS - 6500))) {
  3817  000488  0101               	movlb	1	; () banked
  3818  00048A  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3819  00048C  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3820  00048E  E10B               	bnz	u4410
  3821  000490  0E65               	movlw	101
  3822  000492  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3823  000494  0E19               	movlw	25
  3824  000496  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3825  000498  A0D8               	btfss	status,0,c
  3826  00049A  EF51  F002         	goto	u4411
  3827  00049E  EF53  F002         	goto	u4410
  3828  0004A2                     u4411:
  3829  0004A2  EFAE  F002         	goto	l5213
  3830  0004A6                     u4410:
  3831  0004A6                     
  3832                           ; BSR set to: 1
  3833  0004A6  0E9C               	movlw	156
  3834  0004A8  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3835  0004AA  0100               	movlb	0	; () banked
  3836  0004AC  6FAC               	movwf	??_loop& (0+255),b
  3837  0004AE  0EE6               	movlw	230
  3838  0004B0  0101               	movlb	1	; () banked
  3839  0004B2  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3840  0004B4  0100               	movlb	0	; () banked
  3841  0004B6  6FAD               	movwf	(??_loop+1)& (0+255),b
  3842  0004B8  0EFF               	movlw	255
  3843  0004BA  0101               	movlb	1	; () banked
  3844  0004BC  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3845  0004BE  0100               	movlb	0	; () banked
  3846  0004C0  6FAE               	movwf	(??_loop+2)& (0+255),b
  3847  0004C2  0EFF               	movlw	255
  3848  0004C4  0101               	movlb	1	; () banked
  3849  0004C6  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3850  0004C8  0100               	movlb	0	; () banked
  3851  0004CA  6FAF               	movwf	(??_loop+3)& (0+255),b
  3852  0004CC  51AC               	movf	??_loop& (0+255),w,b
  3853  0004CE  0101               	movlb	1	; () banked
  3854  0004D0  5DB5               	subwf	_tmp3& (0+255),w,b
  3855  0004D2  0100               	movlb	0	; () banked
  3856  0004D4  51AD               	movf	(??_loop+1)& (0+255),w,b
  3857  0004D6  0101               	movlb	1	; () banked
  3858  0004D8  59B6               	subwfb	(_tmp3+1)& (0+255),w,b
  3859  0004DA  0100               	movlb	0	; () banked
  3860  0004DC  51AE               	movf	(??_loop+2)& (0+255),w,b
  3861  0004DE  0101               	movlb	1	; () banked
  3862  0004E0  59B7               	subwfb	(_tmp3+2)& (0+255),w,b
  3863  0004E2  0100               	movlb	0	; () banked
  3864  0004E4  51AF               	movf	(??_loop+3)& (0+255),w,b
  3865  0004E6  0101               	movlb	1	; () banked
  3866  0004E8  59B8               	subwfb	(_tmp3+3)& (0+255),w,b
  3867  0004EA  B0D8               	btfsc	status,0,c
  3868  0004EC  EF7A  F002         	goto	u4421
  3869  0004F0  EF7C  F002         	goto	u4420
  3870  0004F4                     u4421:
  3871  0004F4  EFAE  F002         	goto	l5213
  3872  0004F8                     u4420:
  3873  0004F8                     
  3874                           ; BSR set to: 1
  3875                           ;main.c: 86: tmp3 = MILLISECONDS;
  3876  0004F8  C1C1  F1B5         	movff	_MILLISECONDS,_tmp3
  3877  0004FC  C1C2  F1B6         	movff	_MILLISECONDS+1,_tmp3+1
  3878  000500  C1C3  F1B7         	movff	_MILLISECONDS+2,_tmp3+2
  3879  000504  C1C4  F1B8         	movff	_MILLISECONDS+3,_tmp3+3
  3880  000508                     
  3881                           ; BSR set to: 1
  3882                           ;main.c: 88: printLine("Check RSSI", 0xFFE0);
  3883  000508  0E7A               	movlw	low STR_12
  3884  00050A  6E4A               	movwf	printLine@str^0,c
  3885  00050C  0E5F               	movlw	high STR_12
  3886  00050E  6E4B               	movwf	(printLine@str+1)^0,c
  3887  000510  0EFF               	movlw	255
  3888  000512  6E4D               	movwf	(printLine@color+1)^0,c
  3889  000514  0EE0               	movlw	224
  3890  000516  6E4C               	movwf	printLine@color^0,c
  3891  000518  ECAB  F00F         	call	_printLine	;wreg free
  3892  00051C                     
  3893                           ;main.c: 89: char zzzz[32];;main.c: 90: sprintf(zzzz, "Quality: %u; Level: %d", A6_Netwo
      +                          rkGetRSSI(), A6_NetworkGetRSSILevel());
  3894  00051C  0E40               	movlw	low loop@zzzz_165
  3895  00051E  6E4A               	movwf	sprintf@sp^0,c
  3896  000520  0E01               	movlw	high loop@zzzz_165
  3897  000522  6E4B               	movwf	(sprintf@sp+1)^0,c
  3898  000524  0E17               	movlw	low STR_13
  3899  000526  6E4C               	movwf	sprintf@f^0,c
  3900  000528  0E5F               	movlw	high STR_13
  3901  00052A  6E4D               	movwf	(sprintf@f+1)^0,c
  3902  00052C  ECC7  F00D         	call	_A6_NetworkGetRSSI	;wreg free
  3903  000530  0100               	movlb	0	; () banked
  3904  000532  6FAC               	movwf	??_loop& (0+255),b
  3905  000534  51AC               	movf	??_loop& (0+255),w,b
  3906  000536  6E4E               	movwf	(?_sprintf+4)^0,c
  3907  000538  6A4F               	clrf	(?_sprintf+5)^0,c
  3908  00053A  ECF9  F010         	call	_A6_NetworkGetRSSILevel	;wreg free
  3909  00053E  6E50               	movwf	(?_sprintf+6)^0,c
  3910  000540  6A51               	clrf	(?_sprintf+7)^0,c
  3911  000542  BE50               	btfsc	(?_sprintf+6)^0,7,c
  3912  000544  0651               	decf	(?_sprintf+7)^0,f,c
  3913  000546  EC3C  F003         	call	_sprintf	;wreg free
  3914  00054A                     
  3915                           ;main.c: 91: printLine(zzzz, 0xFFFF);
  3916  00054A  0E40               	movlw	low loop@zzzz_165
  3917  00054C  6E4A               	movwf	printLine@str^0,c
  3918  00054E  0E01               	movlw	high loop@zzzz_165
  3919  000550  6E4B               	movwf	(printLine@str+1)^0,c
  3920  000552  0EFF               	movlw	255
  3921  000554  6E4D               	movwf	(printLine@color+1)^0,c
  3922  000556  684C               	setf	printLine@color^0,c
  3923  000558  ECAB  F00F         	call	_printLine	;wreg free
  3924  00055C                     l5213:
  3925                           
  3926                           ;main.c: 92: };main.c: 94: if((MILLISECONDS > 8500) && (tmp5 < (MILLISECONDS - 8500))) {
  3927  00055C  0101               	movlb	1	; () banked
  3928  00055E  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3929  000560  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3930  000562  E10B               	bnz	u4430
  3931  000564  0E35               	movlw	53
  3932  000566  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3933  000568  0E21               	movlw	33
  3934  00056A  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3935  00056C  A0D8               	btfss	status,0,c
  3936  00056E  EFBB  F002         	goto	u4431
  3937  000572  EFBD  F002         	goto	u4430
  3938  000576                     u4431:
  3939  000576  EF3B  F003         	goto	l101
  3940  00057A                     u4430:
  3941  00057A                     
  3942                           ; BSR set to: 1
  3943  00057A  0ECC               	movlw	204
  3944  00057C  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3945  00057E  0100               	movlb	0	; () banked
  3946  000580  6FAC               	movwf	??_loop& (0+255),b
  3947  000582  0EDE               	movlw	222
  3948  000584  0101               	movlb	1	; () banked
  3949  000586  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3950  000588  0100               	movlb	0	; () banked
  3951  00058A  6FAD               	movwf	(??_loop+1)& (0+255),b
  3952  00058C  0EFF               	movlw	255
  3953  00058E  0101               	movlb	1	; () banked
  3954  000590  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3955  000592  0100               	movlb	0	; () banked
  3956  000594  6FAE               	movwf	(??_loop+2)& (0+255),b
  3957  000596  0EFF               	movlw	255
  3958  000598  0101               	movlb	1	; () banked
  3959  00059A  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3960  00059C  0100               	movlb	0	; () banked
  3961  00059E  6FAF               	movwf	(??_loop+3)& (0+255),b
  3962  0005A0  51AC               	movf	??_loop& (0+255),w,b
  3963  0005A2  0101               	movlb	1	; () banked
  3964  0005A4  5DAD               	subwf	_tmp5& (0+255),w,b
  3965  0005A6  0100               	movlb	0	; () banked
  3966  0005A8  51AD               	movf	(??_loop+1)& (0+255),w,b
  3967  0005AA  0101               	movlb	1	; () banked
  3968  0005AC  59AE               	subwfb	(_tmp5+1)& (0+255),w,b
  3969  0005AE  0100               	movlb	0	; () banked
  3970  0005B0  51AE               	movf	(??_loop+2)& (0+255),w,b
  3971  0005B2  0101               	movlb	1	; () banked
  3972  0005B4  59AF               	subwfb	(_tmp5+2)& (0+255),w,b
  3973  0005B6  0100               	movlb	0	; () banked
  3974  0005B8  51AF               	movf	(??_loop+3)& (0+255),w,b
  3975  0005BA  0101               	movlb	1	; () banked
  3976  0005BC  59B0               	subwfb	(_tmp5+3)& (0+255),w,b
  3977  0005BE  B0D8               	btfsc	status,0,c
  3978  0005C0  EFE4  F002         	goto	u4441
  3979  0005C4  EFE6  F002         	goto	u4440
  3980  0005C8                     u4441:
  3981  0005C8  EF3B  F003         	goto	l101
  3982  0005CC                     u4440:
  3983  0005CC                     
  3984                           ; BSR set to: 1
  3985                           ;main.c: 95: tmp5 = MILLISECONDS;
  3986  0005CC  C1C1  F1AD         	movff	_MILLISECONDS,_tmp5
  3987  0005D0  C1C2  F1AE         	movff	_MILLISECONDS+1,_tmp5+1
  3988  0005D4  C1C3  F1AF         	movff	_MILLISECONDS+2,_tmp5+2
  3989  0005D8  C1C4  F1B0         	movff	_MILLISECONDS+3,_tmp5+3
  3990  0005DC                     
  3991                           ; BSR set to: 1
  3992                           ;main.c: 97: printLine("Check network registration", 0xFFE0);
  3993  0005DC  0E86               	movlw	low STR_14
  3994  0005DE  6E4A               	movwf	printLine@str^0,c
  3995  0005E0  0E5E               	movlw	high STR_14
  3996  0005E2  6E4B               	movwf	(printLine@str+1)^0,c
  3997  0005E4  0EFF               	movlw	255
  3998  0005E6  6E4D               	movwf	(printLine@color+1)^0,c
  3999  0005E8  0EE0               	movlw	224
  4000  0005EA  6E4C               	movwf	printLine@color^0,c
  4001  0005EC  ECAB  F00F         	call	_printLine	;wreg free
  4002  0005F0                     
  4003                           ;main.c: 98: uint8_t ns = A6_NetworkGetStatus();
  4004  0005F0  EC42  F00B         	call	_A6_NetworkGetStatus	;wreg free
  4005  0005F4  0101               	movlb	1	; () banked
  4006  0005F6  6FAC               	movwf	loop@ns& (0+255),b
  4007  0005F8                     
  4008                           ; BSR set to: 1
  4009                           ;main.c: 99: char zzzz[32];;main.c: 100: sprintf(zzzz, "Network status: %u (%s)", ns, ((
      +                          ns == 2) ? "Searching..." : ((ns == 1) ? "Registered" : "Other")));
  4010  0005F8  0E02               	movlw	2
  4011  0005FA  19AC               	xorwf	loop@ns& (0+255),w,b
  4012  0005FC  B4D8               	btfsc	status,2,c
  4013  0005FE  EF03  F003         	goto	u4451
  4014  000602  EF05  F003         	goto	u4450
  4015  000606                     u4451:
  4016  000606  EF1D  F003         	goto	l5231
  4017  00060A                     u4450:
  4018  00060A                     
  4019                           ; BSR set to: 1
  4020  00060A  05AC               	decf	loop@ns& (0+255),w,b
  4021  00060C  B4D8               	btfsc	status,2,c
  4022  00060E  EF0B  F003         	goto	u4461
  4023  000612  EF0D  F003         	goto	u4460
  4024  000616                     u4461:
  4025  000616  EF13  F003         	goto	l5229
  4026  00061A                     u4460:
  4027  00061A                     
  4028                           ; BSR set to: 1
  4029  00061A  0EE8               	movlw	low STR_18
  4030  00061C  6FA6               	movwf	_loop$177& (0+255),b
  4031  00061E  0E5F               	movlw	high STR_18
  4032  000620  6FA7               	movwf	(_loop$177+1)& (0+255),b
  4033  000622  EF17  F003         	goto	l100
  4034  000626                     l5229:
  4035                           
  4036                           ; BSR set to: 1
  4037  000626  0E90               	movlw	low STR_17
  4038  000628  6FA6               	movwf	_loop$177& (0+255),b
  4039  00062A  0E5F               	movlw	high STR_17
  4040  00062C  6FA7               	movwf	(_loop$177+1)& (0+255),b
  4041  00062E                     l100:
  4042                           
  4043                           ; BSR set to: 1
  4044  00062E  C1A6  F1A4         	movff	_loop$177,_loop$176
  4045  000632  C1A7  F1A5         	movff	_loop$177+1,_loop$176+1
  4046  000636  EF21  F003         	goto	l5233
  4047  00063A                     l5231:
  4048                           
  4049                           ; BSR set to: 1
  4050  00063A  0E4B               	movlw	low STR_16
  4051  00063C  6FA4               	movwf	_loop$176& (0+255),b
  4052  00063E  0E5F               	movlw	high STR_16
  4053  000640  6FA5               	movwf	(_loop$176+1)& (0+255),b
  4054  000642                     l5233:
  4055                           
  4056                           ; BSR set to: 1
  4057  000642  0E60               	movlw	low loop@zzzz_169
  4058  000644  6E4A               	movwf	sprintf@sp^0,c
  4059  000646  0E01               	movlw	high loop@zzzz_169
  4060  000648  6E4B               	movwf	(sprintf@sp+1)^0,c
  4061  00064A  0EBA               	movlw	low STR_15
  4062  00064C  6E4C               	movwf	sprintf@f^0,c
  4063  00064E  0E5E               	movlw	high STR_15
  4064  000650  6E4D               	movwf	(sprintf@f+1)^0,c
  4065  000652  C1AC  F04E         	movff	loop@ns,?_sprintf+4
  4066  000656  6A4F               	clrf	(?_sprintf+5)^0,c
  4067  000658  C1A4  F050         	movff	_loop$176,?_sprintf+6
  4068  00065C  C1A5  F051         	movff	_loop$176+1,?_sprintf+7
  4069  000660  EC3C  F003         	call	_sprintf	;wreg free
  4070  000664                     
  4071                           ;main.c: 101: printLine(zzzz, 0xFFFF);
  4072  000664  0E60               	movlw	low loop@zzzz_169
  4073  000666  6E4A               	movwf	printLine@str^0,c
  4074  000668  0E01               	movlw	high loop@zzzz_169
  4075  00066A  6E4B               	movwf	(printLine@str+1)^0,c
  4076  00066C  0EFF               	movlw	255
  4077  00066E  6E4D               	movwf	(printLine@color+1)^0,c
  4078  000670  684C               	setf	printLine@color^0,c
  4079  000672  ECAB  F00F         	call	_printLine	;wreg free
  4080  000676                     l101:
  4081  000676  0012               	return		;funcret
  4082  000678                     __end_of_loop:
  4083                           	opt callstack 0
  4084                           
  4085 ;; *************** function _A6_Process_Random_Comms *****************
  4086 ;; Defined at:
  4087 ;;		line 125 in file "A6Lib.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;		None
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  response       32    0[BANK0 ] unsigned char [32]
  4092 ;;  cnt             1   32[BANK0 ] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4102 ;;      Params:         0       0       0       0       0       0       0       0       0
  4103 ;;      Locals:         0      33       0       0       0       0       0       0       0
  4104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4105 ;;      Totals:         0      33       0       0       0       0       0       0       0
  4106 ;;Total ram usage:       33 bytes
  4107 ;; Hardware stack levels used:    1
  4108 ;; Hardware stack levels required when called:    9
  4109 ;; This function calls:
  4110 ;;		_A6_ReadLine
  4111 ;;		_EUSART_RX_AvailableData
  4112 ;;		_printLine
  4113 ;;		_strcmp
  4114 ;; This function is called by:
  4115 ;;		_loop
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text2
  4120  001E42                     __ptext2:
  4121                           	opt callstack 0
  4122  001E42                     _A6_Process_Random_Comms:
  4123                           	opt callstack 20
  4124  001E42                     
  4125                           ;A6Lib.c: 126: if(EUSART_RX_AvailableData(-1) == 0) return;
  4126  001E42  0EFF               	movlw	255
  4127  001E44  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
  4128  001E46  6805               	setf	EUSART_RX_AvailableData@timeout^0,c
  4129  001E48  ECEF  F00F         	call	_EUSART_RX_AvailableData	;wreg free
  4130  001E4C  0900               	iorlw	0
  4131  001E4E  A4D8               	btfss	status,2,c
  4132  001E50  EF2C  F00F         	goto	u3291
  4133  001E54  EF2E  F00F         	goto	u3290
  4134  001E58                     u3291:
  4135  001E58  EF30  F00F         	goto	l4105
  4136  001E5C                     u3290:
  4137  001E5C  EF66  F00F         	goto	l559
  4138  001E60                     l4105:
  4139                           
  4140                           ;A6Lib.c: 128: char response[32];;A6Lib.c: 129: uint8_t cnt = A6_ReadLine(response, 32, 
      +                          0);
  4141  001E60  0E60               	movlw	low A6_Process_Random_Comms@response
  4142  001E62  6E11               	movwf	A6_ReadLine@response^0,c
  4143  001E64  0E00               	movlw	high A6_Process_Random_Comms@response
  4144  001E66  6E12               	movwf	(A6_ReadLine@response+1)^0,c
  4145  001E68  0E20               	movlw	32
  4146  001E6A  6E13               	movwf	A6_ReadLine@responseLen^0,c
  4147  001E6C  0E00               	movlw	0
  4148  001E6E  6E15               	movwf	(A6_ReadLine@timeout+1)^0,c
  4149  001E70  0E00               	movlw	0
  4150  001E72  6E14               	movwf	A6_ReadLine@timeout^0,c
  4151  001E74  ECFA  F00C         	call	_A6_ReadLine	;wreg free
  4152  001E78  0100               	movlb	0	; () banked
  4153  001E7A  6F80               	movwf	A6_Process_Random_Comms@cnt& (0+255),b
  4154  001E7C                     
  4155                           ; BSR set to: 0
  4156                           ;A6Lib.c: 130: if(cnt == 0) return;
  4157  001E7C  5180               	movf	A6_Process_Random_Comms@cnt& (0+255),w,b
  4158  001E7E  A4D8               	btfss	status,2,c
  4159  001E80  EF44  F00F         	goto	u3301
  4160  001E84  EF46  F00F         	goto	u3300
  4161  001E88                     u3301:
  4162  001E88  EF48  F00F         	goto	l4111
  4163  001E8C                     u3300:
  4164  001E8C  EF66  F00F         	goto	l559
  4165  001E90                     l4111:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;A6Lib.c: 131: if(strcmp(response, "OK") == 0) return;
  4169  001E90  0E60               	movlw	low A6_Process_Random_Comms@response
  4170  001E92  6E05               	movwf	strcmp@s1^0,c
  4171  001E94  0E00               	movlw	high A6_Process_Random_Comms@response
  4172  001E96  6E06               	movwf	(strcmp@s1+1)^0,c
  4173  001E98  0EFA               	movlw	low STR_23
  4174  001E9A  6E07               	movwf	strcmp@s2^0,c
  4175  001E9C  0E5F               	movlw	high STR_23
  4176  001E9E  6E08               	movwf	(strcmp@s2+1)^0,c
  4177  001EA0  EC5E  F013         	call	_strcmp	;wreg free
  4178  001EA4  5005               	movf	?_strcmp^0,w,c
  4179  001EA6  1006               	iorwf	(?_strcmp+1)^0,w,c
  4180  001EA8  A4D8               	btfss	status,2,c
  4181  001EAA  EF59  F00F         	goto	u3311
  4182  001EAE  EF5B  F00F         	goto	u3310
  4183  001EB2                     u3311:
  4184  001EB2  EF5D  F00F         	goto	l4115
  4185  001EB6                     u3310:
  4186  001EB6  EF66  F00F         	goto	l559
  4187  001EBA                     l4115:
  4188                           
  4189                           ;A6Lib.c: 132: printLine(response, 0x07FF);
  4190  001EBA  0E60               	movlw	low A6_Process_Random_Comms@response
  4191  001EBC  6E4A               	movwf	printLine@str^0,c
  4192  001EBE  0E00               	movlw	high A6_Process_Random_Comms@response
  4193  001EC0  6E4B               	movwf	(printLine@str+1)^0,c
  4194  001EC2  0E07               	movlw	7
  4195  001EC4  6E4D               	movwf	(printLine@color+1)^0,c
  4196  001EC6  684C               	setf	printLine@color^0,c
  4197  001EC8  ECAB  F00F         	call	_printLine	;wreg free
  4198  001ECC                     l559:
  4199  001ECC  0012               	return		;funcret
  4200  001ECE                     __end_of_A6_Process_Random_Comms:
  4201                           	opt callstack 0
  4202                           
  4203 ;; *************** function _A6_NetworkGetStatus *****************
  4204 ;; Defined at:
  4205 ;;		line 135 in file "A6Lib.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  response       32   30[COMRAM] unsigned char [32]
  4210 ;;  networkStatu    2   62[COMRAM] PTR unsigned char 
  4211 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      unsigned char 
  4214 ;; Registers used:
  4215 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0
  4222 ;;      Locals:        34       0       0       0       0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4224 ;;      Totals:        34       0       0       0       0       0       0       0       0
  4225 ;;Total ram usage:       34 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    6
  4228 ;; This function calls:
  4229 ;;		_A6_Command
  4230 ;;		_atoi
  4231 ;;		_strstr
  4232 ;;		_strtok
  4233 ;; This function is called by:
  4234 ;;		_loop
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text3
  4239  001684                     __ptext3:
  4240                           	opt callstack 0
  4241  001684                     _A6_NetworkGetStatus:
  4242                           	opt callstack 23
  4243  001684                     
  4244                           ;A6Lib.c: 136: char *networkStatusToken;;A6Lib.c: 137: char response[32];;A6Lib.c: 139: 
      +                          A6_Command("AT+CREG?\r", 0, response, 32);
  4245  001684  0EA6               	movlw	low STR_32
  4246  001686  6E18               	movwf	A6_Command@command^0,c
  4247  001688  0E5F               	movlw	high STR_32
  4248  00168A  6E19               	movwf	(A6_Command@command+1)^0,c
  4249  00168C  0E00               	movlw	0
  4250  00168E  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4251  001690  0E00               	movlw	0
  4252  001692  6E1A               	movwf	A6_Command@timeout^0,c
  4253  001694  0E1F               	movlw	low A6_NetworkGetStatus@response
  4254  001696  6E1C               	movwf	A6_Command@response^0,c
  4255  001698  0E00               	movlw	high A6_NetworkGetStatus@response
  4256  00169A  6E1D               	movwf	(A6_Command@response+1)^0,c
  4257  00169C  0E20               	movlw	32
  4258  00169E  6E1E               	movwf	A6_Command@responseLen^0,c
  4259  0016A0  EC33  F010         	call	_A6_Command	;wreg free
  4260  0016A4                     
  4261                           ;A6Lib.c: 140: if(strstr(response, "+CREG: ") != (0)) {
  4262  0016A4  0E1F               	movlw	low A6_NetworkGetStatus@response
  4263  0016A6  6E10               	movwf	strstr@s1^0,c
  4264  0016A8  0E00               	movlw	high A6_NetworkGetStatus@response
  4265  0016AA  6E11               	movwf	(strstr@s1+1)^0,c
  4266  0016AC  0ECB               	movlw	low STR_33
  4267  0016AE  6E12               	movwf	strstr@s2^0,c
  4268  0016B0  0E5F               	movlw	high STR_33
  4269  0016B2  6E13               	movwf	(strstr@s2+1)^0,c
  4270  0016B4  EC28  F00E         	call	_strstr	;wreg free
  4271  0016B8  5010               	movf	?_strstr^0,w,c
  4272  0016BA  1011               	iorwf	(?_strstr+1)^0,w,c
  4273  0016BC  B4D8               	btfsc	status,2,c
  4274  0016BE  EF63  F00B         	goto	u3421
  4275  0016C2  EF65  F00B         	goto	u3420
  4276  0016C6                     u3421:
  4277  0016C6  EFAF  F00B         	goto	l4219
  4278  0016CA                     u3420:
  4279  0016CA                     
  4280                           ;A6Lib.c: 141: networkStatusToken = strtok(response, " ");
  4281  0016CA  0E1F               	movlw	low A6_NetworkGetStatus@response
  4282  0016CC  6E12               	movwf	strtok@s1^0,c
  4283  0016CE  0E00               	movlw	high A6_NetworkGetStatus@response
  4284  0016D0  6E13               	movwf	(strtok@s1+1)^0,c
  4285  0016D2  0ED1               	movlw	low (STR_33+6)
  4286  0016D4  6E14               	movwf	strtok@s2^0,c
  4287  0016D6  0E5F               	movlw	high (STR_33+6)
  4288  0016D8  6E15               	movwf	(strtok@s2+1)^0,c
  4289  0016DA  ECD1  F00A         	call	_strtok	;wreg free
  4290  0016DE  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4291  0016E2  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4292                           
  4293                           ;A6Lib.c: 142: networkStatusToken = strtok((0), response);
  4294  0016E6  0E00               	movlw	0
  4295  0016E8  6E12               	movwf	strtok@s1^0,c
  4296  0016EA  0E00               	movlw	0
  4297  0016EC  6E13               	movwf	(strtok@s1+1)^0,c
  4298  0016EE  0E1F               	movlw	low A6_NetworkGetStatus@response
  4299  0016F0  6E14               	movwf	strtok@s2^0,c
  4300  0016F2  0E00               	movlw	high A6_NetworkGetStatus@response
  4301  0016F4  6E15               	movwf	(strtok@s2+1)^0,c
  4302  0016F6  ECD1  F00A         	call	_strtok	;wreg free
  4303  0016FA  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4304  0016FE  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4305  001702                     
  4306                           ;A6Lib.c: 143: if(networkStatusToken != (0)) {
  4307  001702  503F               	movf	A6_NetworkGetStatus@networkStatusToken^0,w,c
  4308  001704  1040               	iorwf	(A6_NetworkGetStatus@networkStatusToken+1)^0,w,c
  4309  001706  B4D8               	btfsc	status,2,c
  4310  001708  EF88  F00B         	goto	u3431
  4311  00170C  EF8A  F00B         	goto	u3430
  4312  001710                     u3431:
  4313  001710  EFAF  F00B         	goto	l4219
  4314  001714                     u3430:
  4315  001714                     
  4316                           ;A6Lib.c: 144: networkStatusToken = strtok(networkStatusToken, ",");
  4317  001714  C03F  F012         	movff	A6_NetworkGetStatus@networkStatusToken,strtok@s1
  4318  001718  C040  F013         	movff	A6_NetworkGetStatus@networkStatusToken+1,strtok@s1+1
  4319  00171C  0EFD               	movlw	low STR_35
  4320  00171E  6E14               	movwf	strtok@s2^0,c
  4321  001720  0E5F               	movlw	high STR_35
  4322  001722  6E15               	movwf	(strtok@s2+1)^0,c
  4323  001724  ECD1  F00A         	call	_strtok	;wreg free
  4324  001728  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4325  00172C  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4326                           
  4327                           ;A6Lib.c: 145: networkStatusToken = strtok((0), networkStatusToken);
  4328  001730  0E00               	movlw	0
  4329  001732  6E12               	movwf	strtok@s1^0,c
  4330  001734  0E00               	movlw	0
  4331  001736  6E13               	movwf	(strtok@s1+1)^0,c
  4332  001738  C03F  F014         	movff	A6_NetworkGetStatus@networkStatusToken,strtok@s2
  4333  00173C  C040  F015         	movff	A6_NetworkGetStatus@networkStatusToken+1,strtok@s2+1
  4334  001740  ECD1  F00A         	call	_strtok	;wreg free
  4335  001744  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4336  001748  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4337  00174C                     
  4338                           ;A6Lib.c: 146: return atoi(networkStatusToken);
  4339  00174C  C03F  F00B         	movff	A6_NetworkGetStatus@networkStatusToken,atoi@s
  4340  001750  C040  F00C         	movff	A6_NetworkGetStatus@networkStatusToken+1,atoi@s+1
  4341  001754  EC45  F00A         	call	_atoi	;wreg free
  4342  001758  500B               	movf	?_atoi^0,w,c
  4343  00175A  EFB0  F00B         	goto	l566
  4344  00175E                     l4219:
  4345                           
  4346                           ;A6Lib.c: 147: };A6Lib.c: 148: };A6Lib.c: 150: return 4;
  4347  00175E  0E04               	movlw	4
  4348  001760                     l566:
  4349  001760  0012               	return		;funcret
  4350  001762                     __end_of_A6_NetworkGetStatus:
  4351                           	opt callstack 0
  4352                           
  4353 ;; *************** function _A6_NetworkGetRSSILevel *****************
  4354 ;; Defined at:
  4355 ;;		line 170 in file "A6Lib.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  RSSI            1   64[COMRAM] unsigned char 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      char 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4369 ;;      Params:         0       0       0       0       0       0       0       0       0
  4370 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4372 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4373 ;;Total ram usage:        1 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    7
  4376 ;; This function calls:
  4377 ;;		_A6_NetworkGetRSSI
  4378 ;; This function is called by:
  4379 ;;		_loop
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text4
  4384  0021F2                     __ptext4:
  4385                           	opt callstack 0
  4386  0021F2                     _A6_NetworkGetRSSILevel:
  4387                           	opt callstack 22
  4388  0021F2                     
  4389                           ;A6Lib.c: 171: uint8_t RSSI = A6_NetworkGetRSSI();
  4390  0021F2  ECC7  F00D         	call	_A6_NetworkGetRSSI	;wreg free
  4391  0021F6  6E41               	movwf	A6_NetworkGetRSSILevel@RSSI^0,c
  4392  0021F8                     
  4393                           ;A6Lib.c: 172: if(RSSI == 99) return -1;
  4394  0021F8  0E63               	movlw	99
  4395  0021FA  1841               	xorwf	A6_NetworkGetRSSILevel@RSSI^0,w,c
  4396  0021FC  A4D8               	btfss	status,2,c
  4397  0021FE  EF03  F011         	goto	u3371
  4398  002202  EF05  F011         	goto	u3370
  4399  002206                     u3371:
  4400  002206  EF08  F011         	goto	l4177
  4401  00220A                     u3370:
  4402  00220A  0EFF               	movlw	255
  4403  00220C  EF35  F011         	goto	l575
  4404  002210                     l4177:
  4405                           
  4406                           ;A6Lib.c: 173: if(RSSI < 3) return 0;
  4407  002210  0E03               	movlw	3
  4408  002212  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4409  002214  EF0E  F011         	goto	u3381
  4410  002218  EF10  F011         	goto	u3380
  4411  00221C                     u3381:
  4412  00221C  EF13  F011         	goto	l4183
  4413  002220                     u3380:
  4414  002220  0E00               	movlw	0
  4415  002222  EF35  F011         	goto	l575
  4416  002226                     l4183:
  4417                           
  4418                           ;A6Lib.c: 174: if(RSSI < 10) return 1;
  4419  002226  0E0A               	movlw	10
  4420  002228  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4421  00222A  EF19  F011         	goto	u3391
  4422  00222E  EF1B  F011         	goto	u3390
  4423  002232                     u3391:
  4424  002232  EF1E  F011         	goto	l4189
  4425  002236                     u3390:
  4426  002236  0E01               	movlw	1
  4427  002238  EF35  F011         	goto	l575
  4428  00223C                     l4189:
  4429                           
  4430                           ;A6Lib.c: 175: if(RSSI < 15) return 2;
  4431  00223C  0E0F               	movlw	15
  4432  00223E  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4433  002240  EF24  F011         	goto	u3401
  4434  002244  EF26  F011         	goto	u3400
  4435  002248                     u3401:
  4436  002248  EF29  F011         	goto	l4195
  4437  00224C                     u3400:
  4438  00224C  0E02               	movlw	2
  4439  00224E  EF35  F011         	goto	l575
  4440  002252                     l4195:
  4441                           
  4442                           ;A6Lib.c: 176: if(RSSI < 20) return 3;
  4443  002252  0E14               	movlw	20
  4444  002254  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4445  002256  EF2F  F011         	goto	u3411
  4446  00225A  EF31  F011         	goto	u3410
  4447  00225E                     u3411:
  4448  00225E  EF34  F011         	goto	l4201
  4449  002262                     u3410:
  4450  002262  0E03               	movlw	3
  4451  002264  EF35  F011         	goto	l575
  4452  002268                     l4201:
  4453                           
  4454                           ;A6Lib.c: 177: return 4;
  4455  002268  0E04               	movlw	4
  4456  00226A                     l575:
  4457  00226A  0012               	return		;funcret
  4458  00226C                     __end_of_A6_NetworkGetRSSILevel:
  4459                           	opt callstack 0
  4460                           
  4461 ;; *************** function _A6_NetworkGetRSSI *****************
  4462 ;; Defined at:
  4463 ;;		line 153 in file "A6Lib.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  response       32   30[COMRAM] unsigned char [32]
  4468 ;;  RSSIToken       2   62[COMRAM] PTR unsigned char 
  4469 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      unsigned char 
  4472 ;; Registers used:
  4473 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4479 ;;      Params:         0       0       0       0       0       0       0       0       0
  4480 ;;      Locals:        34       0       0       0       0       0       0       0       0
  4481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4482 ;;      Totals:        34       0       0       0       0       0       0       0       0
  4483 ;;Total ram usage:       34 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    6
  4486 ;; This function calls:
  4487 ;;		_A6_Command
  4488 ;;		_atoi
  4489 ;;		_strstr
  4490 ;;		_strtok
  4491 ;; This function is called by:
  4492 ;;		_loop
  4493 ;;		_A6_NetworkGetRSSILevel
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           	psect	text5
  4498  001B8E                     __ptext5:
  4499                           	opt callstack 0
  4500  001B8E                     _A6_NetworkGetRSSI:
  4501                           	opt callstack 22
  4502  001B8E                     
  4503                           ;A6Lib.c: 154: char *RSSIToken;;A6Lib.c: 155: char response[32];;A6Lib.c: 157: A6_Comman
      +                          d("AT+CSQ\r", 0, response, 32);
  4504  001B8E  0EC3               	movlw	low STR_36
  4505  001B90  6E18               	movwf	A6_Command@command^0,c
  4506  001B92  0E5F               	movlw	high STR_36
  4507  001B94  6E19               	movwf	(A6_Command@command+1)^0,c
  4508  001B96  0E00               	movlw	0
  4509  001B98  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4510  001B9A  0E00               	movlw	0
  4511  001B9C  6E1A               	movwf	A6_Command@timeout^0,c
  4512  001B9E  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4513  001BA0  6E1C               	movwf	A6_Command@response^0,c
  4514  001BA2  0E00               	movlw	high A6_NetworkGetRSSI@response
  4515  001BA4  6E1D               	movwf	(A6_Command@response+1)^0,c
  4516  001BA6  0E20               	movlw	32
  4517  001BA8  6E1E               	movwf	A6_Command@responseLen^0,c
  4518  001BAA  EC33  F010         	call	_A6_Command	;wreg free
  4519  001BAE                     
  4520                           ;A6Lib.c: 158: if(strstr(response, "+CSQ: ") != (0)) {
  4521  001BAE  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4522  001BB0  6E10               	movwf	strstr@s1^0,c
  4523  001BB2  0E00               	movlw	high A6_NetworkGetRSSI@response
  4524  001BB4  6E11               	movwf	(strstr@s1+1)^0,c
  4525  001BB6  0EDA               	movlw	low STR_37
  4526  001BB8  6E12               	movwf	strstr@s2^0,c
  4527  001BBA  0E5F               	movlw	high STR_37
  4528  001BBC  6E13               	movwf	(strstr@s2+1)^0,c
  4529  001BBE  EC28  F00E         	call	_strstr	;wreg free
  4530  001BC2  5010               	movf	?_strstr^0,w,c
  4531  001BC4  1011               	iorwf	(?_strstr+1)^0,w,c
  4532  001BC6  B4D8               	btfsc	status,2,c
  4533  001BC8  EFE8  F00D         	goto	u3171
  4534  001BCC  EFEA  F00D         	goto	u3170
  4535  001BD0                     u3171:
  4536  001BD0  EF26  F00E         	goto	l4041
  4537  001BD4                     u3170:
  4538  001BD4                     
  4539                           ;A6Lib.c: 159: RSSIToken = strtok(response, " ");
  4540  001BD4  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4541  001BD6  6E12               	movwf	strtok@s1^0,c
  4542  001BD8  0E00               	movlw	high A6_NetworkGetRSSI@response
  4543  001BDA  6E13               	movwf	(strtok@s1+1)^0,c
  4544  001BDC  0ED1               	movlw	low (STR_33+6)
  4545  001BDE  6E14               	movwf	strtok@s2^0,c
  4546  001BE0  0E5F               	movlw	high (STR_33+6)
  4547  001BE2  6E15               	movwf	(strtok@s2+1)^0,c
  4548  001BE4  ECD1  F00A         	call	_strtok	;wreg free
  4549  001BE8  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4550  001BEC  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4551                           
  4552                           ;A6Lib.c: 160: RSSIToken = strtok((0), response);
  4553  001BF0  0E00               	movlw	0
  4554  001BF2  6E12               	movwf	strtok@s1^0,c
  4555  001BF4  0E00               	movlw	0
  4556  001BF6  6E13               	movwf	(strtok@s1+1)^0,c
  4557  001BF8  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4558  001BFA  6E14               	movwf	strtok@s2^0,c
  4559  001BFC  0E00               	movlw	high A6_NetworkGetRSSI@response
  4560  001BFE  6E15               	movwf	(strtok@s2+1)^0,c
  4561  001C00  ECD1  F00A         	call	_strtok	;wreg free
  4562  001C04  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4563  001C08  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4564  001C0C                     
  4565                           ;A6Lib.c: 161: if(RSSIToken != (0)) {
  4566  001C0C  503F               	movf	A6_NetworkGetRSSI@RSSIToken^0,w,c
  4567  001C0E  1040               	iorwf	(A6_NetworkGetRSSI@RSSIToken+1)^0,w,c
  4568  001C10  B4D8               	btfsc	status,2,c
  4569  001C12  EF0D  F00E         	goto	u3181
  4570  001C16  EF0F  F00E         	goto	u3180
  4571  001C1A                     u3181:
  4572  001C1A  EF26  F00E         	goto	l4041
  4573  001C1E                     u3180:
  4574  001C1E                     
  4575                           ;A6Lib.c: 162: RSSIToken = strtok(RSSIToken, ",");
  4576  001C1E  C03F  F012         	movff	A6_NetworkGetRSSI@RSSIToken,strtok@s1
  4577  001C22  C040  F013         	movff	A6_NetworkGetRSSI@RSSIToken+1,strtok@s1+1
  4578  001C26  0EFD               	movlw	low STR_35
  4579  001C28  6E14               	movwf	strtok@s2^0,c
  4580  001C2A  0E5F               	movlw	high STR_35
  4581  001C2C  6E15               	movwf	(strtok@s2+1)^0,c
  4582  001C2E  ECD1  F00A         	call	_strtok	;wreg free
  4583  001C32  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4584  001C36  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4585  001C3A                     
  4586                           ;A6Lib.c: 163: return atoi(RSSIToken);
  4587  001C3A  C03F  F00B         	movff	A6_NetworkGetRSSI@RSSIToken,atoi@s
  4588  001C3E  C040  F00C         	movff	A6_NetworkGetRSSI@RSSIToken+1,atoi@s+1
  4589  001C42  EC45  F00A         	call	_atoi	;wreg free
  4590  001C46  500B               	movf	?_atoi^0,w,c
  4591  001C48  EF27  F00E         	goto	l571
  4592  001C4C                     l4041:
  4593                           
  4594                           ;A6Lib.c: 164: };A6Lib.c: 165: };A6Lib.c: 167: return 0;
  4595  001C4C  0E00               	movlw	0
  4596  001C4E                     l571:
  4597  001C4E  0012               	return		;funcret
  4598  001C50                     __end_of_A6_NetworkGetRSSI:
  4599                           	opt callstack 0
  4600                           
  4601 ;; *************** function _atoi *****************
  4602 ;; Defined at:
  4603 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atoi.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4606 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  a               2   15[COMRAM] int 
  4609 ;;  sign            1   14[COMRAM] unsigned char 
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  2   10[COMRAM] int 
  4612 ;; Registers used:
  4613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4619 ;;      Params:         2       0       0       0       0       0       0       0       0
  4620 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4621 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4622 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4623 ;;Total ram usage:        7 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    3
  4626 ;; This function calls:
  4627 ;;		___wmul
  4628 ;;		_isdigit
  4629 ;; This function is called by:
  4630 ;;		_A6_NetworkGetStatus
  4631 ;;		_A6_NetworkGetRSSI
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text6
  4636  00148A                     __ptext6:
  4637                           	opt callstack 0
  4638  00148A                     _atoi:
  4639                           	opt callstack 25
  4640  00148A  EF49  F00A         	goto	l3727
  4641  00148E                     l3725:
  4642  00148E  4A0B               	infsnz	atoi@s^0,f,c
  4643  001490  2A0C               	incf	(atoi@s+1)^0,f,c
  4644  001492                     l3727:
  4645  001492  C00B  FFD9         	movff	atoi@s,fsr2l
  4646  001496  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4647  00149A  0E20               	movlw	32
  4648  00149C  18DE               	xorwf	postinc2,w,c
  4649  00149E  B4D8               	btfsc	status,2,c
  4650  0014A0  EF54  F00A         	goto	u2691
  4651  0014A4  EF56  F00A         	goto	u2690
  4652  0014A8                     u2691:
  4653  0014A8  EF47  F00A         	goto	l3725
  4654  0014AC                     u2690:
  4655  0014AC  C00B  FFD9         	movff	atoi@s,fsr2l
  4656  0014B0  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4657  0014B4  0E09               	movlw	9
  4658  0014B6  18DE               	xorwf	postinc2,w,c
  4659  0014B8  B4D8               	btfsc	status,2,c
  4660  0014BA  EF61  F00A         	goto	u2701
  4661  0014BE  EF63  F00A         	goto	u2700
  4662  0014C2                     u2701:
  4663  0014C2  EF47  F00A         	goto	l3725
  4664  0014C6                     u2700:
  4665  0014C6  0E00               	movlw	0
  4666  0014C8  6E11               	movwf	(atoi@a+1)^0,c
  4667  0014CA  0E00               	movlw	0
  4668  0014CC  6E10               	movwf	atoi@a^0,c
  4669  0014CE  0E00               	movlw	0
  4670  0014D0  6E0F               	movwf	atoi@sign^0,c
  4671  0014D2  C00B  FFD9         	movff	atoi@s,fsr2l
  4672  0014D6  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4673  0014DA  0E2D               	movlw	45
  4674  0014DC  18DE               	xorwf	postinc2,w,c
  4675  0014DE  A4D8               	btfss	status,2,c
  4676  0014E0  EF74  F00A         	goto	u2711
  4677  0014E4  EF76  F00A         	goto	u2710
  4678  0014E8                     u2711:
  4679  0014E8  EF7B  F00A         	goto	l3737
  4680  0014EC                     u2710:
  4681  0014EC  2A0F               	incf	atoi@sign^0,f,c
  4682  0014EE  4A0B               	infsnz	atoi@s^0,f,c
  4683  0014F0  2A0C               	incf	(atoi@s+1)^0,f,c
  4684  0014F2  EFA8  F00A         	goto	l3745
  4685  0014F6                     l3737:
  4686  0014F6  C00B  FFD9         	movff	atoi@s,fsr2l
  4687  0014FA  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4688  0014FE  0E2B               	movlw	43
  4689  001500  18DE               	xorwf	postinc2,w,c
  4690  001502  A4D8               	btfss	status,2,c
  4691  001504  EF86  F00A         	goto	u2721
  4692  001508  EF88  F00A         	goto	u2720
  4693  00150C                     u2721:
  4694  00150C  EFA8  F00A         	goto	l3745
  4695  001510                     u2720:
  4696  001510                     l3739:
  4697  001510  4A0B               	infsnz	atoi@s^0,f,c
  4698  001512  2A0C               	incf	(atoi@s+1)^0,f,c
  4699  001514  EFA8  F00A         	goto	l3745
  4700  001518                     l3741:
  4701  001518  C010  F005         	movff	atoi@a,___wmul@multiplier
  4702  00151C  C011  F006         	movff	atoi@a+1,___wmul@multiplier+1
  4703  001520  0E00               	movlw	0
  4704  001522  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4705  001524  0E0A               	movlw	10
  4706  001526  6E07               	movwf	___wmul@multiplicand^0,c
  4707  001528  EC74  F015         	call	___wmul	;wreg free
  4708  00152C  C00B  FFD9         	movff	atoi@s,fsr2l
  4709  001530  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4710  001534  50DF               	movf	indf2,w,c
  4711  001536  6E0D               	movwf	??_atoi^0,c
  4712  001538  500D               	movf	??_atoi^0,w,c
  4713  00153A  2605               	addwf	?___wmul^0,f,c
  4714  00153C  0E00               	movlw	0
  4715  00153E  2206               	addwfc	(?___wmul+1)^0,f,c
  4716  001540  0ED0               	movlw	208
  4717  001542  2405               	addwf	?___wmul^0,w,c
  4718  001544  6E10               	movwf	atoi@a^0,c
  4719  001546  0EFF               	movlw	255
  4720  001548  2006               	addwfc	(?___wmul+1)^0,w,c
  4721  00154A  6E11               	movwf	(atoi@a+1)^0,c
  4722  00154C  EF88  F00A         	goto	l3739
  4723  001550                     l3745:
  4724  001550  C00B  FFD9         	movff	atoi@s,fsr2l
  4725  001554  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4726  001558  50DF               	movf	indf2,w,c
  4727  00155A  EC43  F015         	call	_isdigit
  4728  00155E  B0D8               	btfsc	status,0,c
  4729  001560  EFB4  F00A         	goto	u2731
  4730  001564  EFB6  F00A         	goto	u2730
  4731  001568                     u2731:
  4732  001568  EF8C  F00A         	goto	l3741
  4733  00156C                     u2730:
  4734  00156C  500F               	movf	atoi@sign^0,w,c
  4735  00156E  B4D8               	btfsc	status,2,c
  4736  001570  EFBC  F00A         	goto	u2741
  4737  001574  EFBE  F00A         	goto	u2740
  4738  001578                     u2741:
  4739  001578  EFCC  F00A         	goto	l1397
  4740  00157C                     u2740:
  4741  00157C  C010  F00D         	movff	atoi@a,??_atoi
  4742  001580  C011  F00E         	movff	atoi@a+1,??_atoi+1
  4743  001584  1E0D               	comf	??_atoi^0,f,c
  4744  001586  1E0E               	comf	(??_atoi+1)^0,f,c
  4745  001588  4A0D               	infsnz	??_atoi^0,f,c
  4746  00158A  2A0E               	incf	(??_atoi+1)^0,f,c
  4747  00158C  C00D  F00B         	movff	??_atoi,?_atoi
  4748  001590  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  4749  001594  EFD0  F00A         	goto	l1398
  4750  001598                     l1397:
  4751  001598  C010  F00B         	movff	atoi@a,?_atoi
  4752  00159C  C011  F00C         	movff	atoi@a+1,?_atoi+1
  4753  0015A0                     l1398:
  4754  0015A0  0012               	return		;funcret
  4755  0015A2                     __end_of_atoi:
  4756                           	opt callstack 0
  4757                           
  4758 ;; *************** function _A6_BaudRateSet *****************
  4759 ;; Defined at:
  4760 ;;		line 48 in file "A6Lib.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  baudRate        4   16[BANK0 ] const unsigned long 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  response       32   20[BANK0 ] unsigned char [32]
  4765 ;;  request        20   52[BANK0 ] unsigned char [20]
  4766 ;;  currentBaudR    4   72[BANK0 ] unsigned long 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  4   16[BANK0 ] unsigned long 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4776 ;;      Params:         0       4       0       0       0       0       0       0       0
  4777 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4779 ;;      Totals:         0      60       0       0       0       0       0       0       0
  4780 ;;Total ram usage:       60 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    7
  4783 ;; This function calls:
  4784 ;;		_A6_BaudRateGet
  4785 ;;		_A6_Command
  4786 ;;		_A6_IsAlive
  4787 ;;		_EUSART_BaudRateSet
  4788 ;;		_sleepMS
  4789 ;;		_sprintf
  4790 ;;		_strcmp
  4791 ;; This function is called by:
  4792 ;;		_loop
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text7
  4797  00123C                     __ptext7:
  4798                           	opt callstack 0
  4799  00123C                     _A6_BaudRateSet:
  4800                           	opt callstack 22
  4801  00123C                     
  4802                           ;A6Lib.c: 49: char request[20];;A6Lib.c: 50: char response[32];;A6Lib.c: 51: uint32_t cu
      +                          rrentBaudRate = A6_BaudRateGet();
  4803  00123C  ECB3  F009         	call	_A6_BaudRateGet	;wreg free
  4804  001240  C01F  F0A8         	movff	?_A6_BaudRateGet,A6_BaudRateSet@currentBaudRate
  4805  001244  C020  F0A9         	movff	?_A6_BaudRateGet+1,A6_BaudRateSet@currentBaudRate+1
  4806  001248  C021  F0AA         	movff	?_A6_BaudRateGet+2,A6_BaudRateSet@currentBaudRate+2
  4807  00124C  C022  F0AB         	movff	?_A6_BaudRateGet+3,A6_BaudRateSet@currentBaudRate+3
  4808  001250                     
  4809                           ;A6Lib.c: 54: if(currentBaudRate == 0) return 0;
  4810  001250  0100               	movlb	0	; () banked
  4811  001252  51A8               	movf	A6_BaudRateSet@currentBaudRate& (0+255),w,b
  4812  001254  11A9               	iorwf	(A6_BaudRateSet@currentBaudRate+1)& (0+255),w,b
  4813  001256  11AA               	iorwf	(A6_BaudRateSet@currentBaudRate+2)& (0+255),w,b
  4814  001258  11AB               	iorwf	(A6_BaudRateSet@currentBaudRate+3)& (0+255),w,b
  4815  00125A  A4D8               	btfss	status,2,c
  4816  00125C  EF32  F009         	goto	u4271
  4817  001260  EF34  F009         	goto	u4270
  4818  001264                     u4271:
  4819  001264  EF3F  F009         	goto	l5075
  4820  001268                     u4270:
  4821  001268                     l5071:
  4822  001268  0E00               	movlw	0
  4823  00126A  0100               	movlb	0	; () banked
  4824  00126C  6F70               	movwf	?_A6_BaudRateSet& (0+255),b
  4825  00126E  0E00               	movlw	0
  4826  001270  6F71               	movwf	(?_A6_BaudRateSet+1)& (0+255),b
  4827  001272  0E00               	movlw	0
  4828  001274  6F72               	movwf	(?_A6_BaudRateSet+2)& (0+255),b
  4829  001276  0E00               	movlw	0
  4830  001278  6F73               	movwf	(?_A6_BaudRateSet+3)& (0+255),b
  4831  00127A  EFB2  F009         	goto	l527
  4832  00127E                     l5075:
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;A6Lib.c: 57: sprintf(request, "AT+IPR=%lu\r", baudRate);
  4836  00127E  0E94               	movlw	low A6_BaudRateSet@request
  4837  001280  6E4A               	movwf	sprintf@sp^0,c
  4838  001282  0E00               	movlw	high A6_BaudRateSet@request
  4839  001284  6E4B               	movwf	(sprintf@sp+1)^0,c
  4840  001286  0E58               	movlw	low STR_27
  4841  001288  6E4C               	movwf	sprintf@f^0,c
  4842  00128A  0E5F               	movlw	high STR_27
  4843  00128C  6E4D               	movwf	(sprintf@f+1)^0,c
  4844  00128E  C070  F04E         	movff	A6_BaudRateSet@baudRate,?_sprintf+4
  4845  001292  C071  F04F         	movff	A6_BaudRateSet@baudRate+1,?_sprintf+5
  4846  001296  C072  F050         	movff	A6_BaudRateSet@baudRate+2,?_sprintf+6
  4847  00129A  C073  F051         	movff	A6_BaudRateSet@baudRate+3,?_sprintf+7
  4848  00129E  EC3C  F003         	call	_sprintf	;wreg free
  4849  0012A2                     
  4850                           ;A6Lib.c: 58: A6_Command(request, 0, response, 32);
  4851  0012A2  0E94               	movlw	low A6_BaudRateSet@request
  4852  0012A4  6E18               	movwf	A6_Command@command^0,c
  4853  0012A6  0E00               	movlw	high A6_BaudRateSet@request
  4854  0012A8  6E19               	movwf	(A6_Command@command+1)^0,c
  4855  0012AA  0E00               	movlw	0
  4856  0012AC  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4857  0012AE  0E00               	movlw	0
  4858  0012B0  6E1A               	movwf	A6_Command@timeout^0,c
  4859  0012B2  0E74               	movlw	low A6_BaudRateSet@response
  4860  0012B4  6E1C               	movwf	A6_Command@response^0,c
  4861  0012B6  0E00               	movlw	high A6_BaudRateSet@response
  4862  0012B8  6E1D               	movwf	(A6_Command@response+1)^0,c
  4863  0012BA  0E20               	movlw	32
  4864  0012BC  6E1E               	movwf	A6_Command@responseLen^0,c
  4865  0012BE  EC33  F010         	call	_A6_Command	;wreg free
  4866  0012C2                     
  4867                           ;A6Lib.c: 59: sleepMS(250);
  4868  0012C2  0EFA               	movlw	250
  4869  0012C4  6E05               	movwf	sleepMS@ms^0,c
  4870  0012C6  0E00               	movlw	0
  4871  0012C8  6E06               	movwf	(sleepMS@ms+1)^0,c
  4872  0012CA  0E00               	movlw	0
  4873  0012CC  6E07               	movwf	(sleepMS@ms+2)^0,c
  4874  0012CE  0E00               	movlw	0
  4875  0012D0  6E08               	movwf	(sleepMS@ms+3)^0,c
  4876  0012D2  ECF0  F014         	call	_sleepMS	;wreg free
  4877  0012D6                     
  4878                           ;A6Lib.c: 60: if(strcmp(response, "OK") == 0) {
  4879  0012D6  0E74               	movlw	low A6_BaudRateSet@response
  4880  0012D8  6E05               	movwf	strcmp@s1^0,c
  4881  0012DA  0E00               	movlw	high A6_BaudRateSet@response
  4882  0012DC  6E06               	movwf	(strcmp@s1+1)^0,c
  4883  0012DE  0EFA               	movlw	low STR_23
  4884  0012E0  6E07               	movwf	strcmp@s2^0,c
  4885  0012E2  0E5F               	movlw	high STR_23
  4886  0012E4  6E08               	movwf	(strcmp@s2+1)^0,c
  4887  0012E6  EC5E  F013         	call	_strcmp	;wreg free
  4888  0012EA  5005               	movf	?_strcmp^0,w,c
  4889  0012EC  1006               	iorwf	(?_strcmp+1)^0,w,c
  4890  0012EE  A4D8               	btfss	status,2,c
  4891  0012F0  EF7C  F009         	goto	u4281
  4892  0012F4  EF7E  F009         	goto	u4280
  4893  0012F8                     u4281:
  4894  0012F8  EFA6  F009         	goto	l5089
  4895  0012FC                     u4280:
  4896  0012FC                     
  4897                           ;A6Lib.c: 62: EUSART_BaudRateSet(baudRate);
  4898  0012FC  C070  F012         	movff	A6_BaudRateSet@baudRate,EUSART_BaudRateSet@baudRate
  4899  001300  C071  F013         	movff	A6_BaudRateSet@baudRate+1,EUSART_BaudRateSet@baudRate+1
  4900  001304  C072  F014         	movff	A6_BaudRateSet@baudRate+2,EUSART_BaudRateSet@baudRate+2
  4901  001308  C073  F015         	movff	A6_BaudRateSet@baudRate+3,EUSART_BaudRateSet@baudRate+3
  4902  00130C  EC76  F010         	call	_EUSART_BaudRateSet	;wreg free
  4903                           
  4904                           ;A6Lib.c: 63: sleepMS(150);
  4905  001310  0E96               	movlw	150
  4906  001312  6E05               	movwf	sleepMS@ms^0,c
  4907  001314  0E00               	movlw	0
  4908  001316  6E06               	movwf	(sleepMS@ms+1)^0,c
  4909  001318  0E00               	movlw	0
  4910  00131A  6E07               	movwf	(sleepMS@ms+2)^0,c
  4911  00131C  0E00               	movlw	0
  4912  00131E  6E08               	movwf	(sleepMS@ms+3)^0,c
  4913  001320  ECF0  F014         	call	_sleepMS	;wreg free
  4914  001324                     
  4915                           ;A6Lib.c: 64: if(A6_IsAlive() == 1) {
  4916  001324  EC8E  F013         	call	_A6_IsAlive	;wreg free
  4917  001328  06E8               	decf	wreg,f,c
  4918  00132A  A4D8               	btfss	status,2,c
  4919  00132C  EF9A  F009         	goto	u4291
  4920  001330  EF9C  F009         	goto	u4290
  4921  001334                     u4291:
  4922  001334  EFA6  F009         	goto	l5089
  4923  001338                     u4290:
  4924  001338                     
  4925                           ;A6Lib.c: 65: return baudRate;
  4926  001338  C070  F070         	movff	A6_BaudRateSet@baudRate,?_A6_BaudRateSet
  4927  00133C  C071  F071         	movff	A6_BaudRateSet@baudRate+1,?_A6_BaudRateSet+1
  4928  001340  C072  F072         	movff	A6_BaudRateSet@baudRate+2,?_A6_BaudRateSet+2
  4929  001344  C073  F073         	movff	A6_BaudRateSet@baudRate+3,?_A6_BaudRateSet+3
  4930  001348  EFB2  F009         	goto	l527
  4931  00134C                     l5089:
  4932                           
  4933                           ;A6Lib.c: 66: };A6Lib.c: 67: };A6Lib.c: 70: EUSART_BaudRateSet(currentBaudRate);
  4934  00134C  C0A8  F012         	movff	A6_BaudRateSet@currentBaudRate,EUSART_BaudRateSet@baudRate
  4935  001350  C0A9  F013         	movff	A6_BaudRateSet@currentBaudRate+1,EUSART_BaudRateSet@baudRate+1
  4936  001354  C0AA  F014         	movff	A6_BaudRateSet@currentBaudRate+2,EUSART_BaudRateSet@baudRate+2
  4937  001358  C0AB  F015         	movff	A6_BaudRateSet@currentBaudRate+3,EUSART_BaudRateSet@baudRate+3
  4938  00135C  EC76  F010         	call	_EUSART_BaudRateSet	;wreg free
  4939  001360  EF34  F009         	goto	l5071
  4940  001364                     l527:
  4941  001364  0012               	return		;funcret
  4942  001366                     __end_of_A6_BaudRateSet:
  4943                           	opt callstack 0
  4944                           
  4945 ;; *************** function _A6_BaudRateGet *****************
  4946 ;; Defined at:
  4947 ;;		line 26 in file "A6Lib.c"
  4948 ;; Parameters:    Size  Location     Type
  4949 ;;		None
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  j               1   72[COMRAM] unsigned char 
  4952 ;;  response       32   34[COMRAM] unsigned char [32]
  4953 ;;  baudRate        4   66[COMRAM] unsigned long 
  4954 ;;  baudRateToke    2   70[COMRAM] PTR unsigned char 
  4955 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  4   30[COMRAM] unsigned long 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4965 ;;      Params:         4       0       0       0       0       0       0       0       0
  4966 ;;      Locals:        39       0       0       0       0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4968 ;;      Totals:        43       0       0       0       0       0       0       0       0
  4969 ;;Total ram usage:       43 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    6
  4972 ;; This function calls:
  4973 ;;		_A6_Command
  4974 ;;		_atol
  4975 ;;		_strstr
  4976 ;;		_strtok
  4977 ;; This function is called by:
  4978 ;;		_loop
  4979 ;;		_A6_BaudRateSet
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text8
  4984  001366                     __ptext8:
  4985                           	opt callstack 0
  4986  001366                     _A6_BaudRateGet:
  4987                           	opt callstack 22
  4988  001366                     
  4989                           ;A6Lib.c: 27: uint32_t baudRate;;A6Lib.c: 28: char *baudRateToken;;A6Lib.c: 29: char res
      +                          ponse[32];;A6Lib.c: 31: A6_Command("AT+IPR?\r", 0, response, 32);
  4990  001366  0EBA               	movlw	low STR_24
  4991  001368  6E18               	movwf	A6_Command@command^0,c
  4992  00136A  0E5F               	movlw	high STR_24
  4993  00136C  6E19               	movwf	(A6_Command@command+1)^0,c
  4994  00136E  0E00               	movlw	0
  4995  001370  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4996  001372  0E00               	movlw	0
  4997  001374  6E1A               	movwf	A6_Command@timeout^0,c
  4998  001376  0E23               	movlw	low A6_BaudRateGet@response
  4999  001378  6E1C               	movwf	A6_Command@response^0,c
  5000  00137A  0E00               	movlw	high A6_BaudRateGet@response
  5001  00137C  6E1D               	movwf	(A6_Command@response+1)^0,c
  5002  00137E  0E20               	movlw	32
  5003  001380  6E1E               	movwf	A6_Command@responseLen^0,c
  5004  001382  EC33  F010         	call	_A6_Command	;wreg free
  5005  001386                     
  5006                           ;A6Lib.c: 32: if(strstr(response, "+IPR: ") != (0)) {
  5007  001386  0E23               	movlw	low A6_BaudRateGet@response
  5008  001388  6E10               	movwf	strstr@s1^0,c
  5009  00138A  0E00               	movlw	high A6_BaudRateGet@response
  5010  00138C  6E11               	movwf	(strstr@s1+1)^0,c
  5011  00138E  0EE1               	movlw	low STR_25
  5012  001390  6E12               	movwf	strstr@s2^0,c
  5013  001392  0E5F               	movlw	high STR_25
  5014  001394  6E13               	movwf	(strstr@s2+1)^0,c
  5015  001396  EC28  F00E         	call	_strstr	;wreg free
  5016  00139A  5010               	movf	?_strstr^0,w,c
  5017  00139C  1011               	iorwf	(?_strstr+1)^0,w,c
  5018  00139E  B4D8               	btfsc	status,2,c
  5019  0013A0  EFD4  F009         	goto	u2871
  5020  0013A4  EFD6  F009         	goto	u2870
  5021  0013A8                     u2871:
  5022  0013A8  EF3C  F00A         	goto	l3857
  5023  0013AC                     u2870:
  5024  0013AC                     
  5025                           ;A6Lib.c: 33: baudRateToken = strtok(response, " ");
  5026  0013AC  0E23               	movlw	low A6_BaudRateGet@response
  5027  0013AE  6E12               	movwf	strtok@s1^0,c
  5028  0013B0  0E00               	movlw	high A6_BaudRateGet@response
  5029  0013B2  6E13               	movwf	(strtok@s1+1)^0,c
  5030  0013B4  0ED1               	movlw	low (STR_33+6)
  5031  0013B6  6E14               	movwf	strtok@s2^0,c
  5032  0013B8  0E5F               	movlw	high (STR_33+6)
  5033  0013BA  6E15               	movwf	(strtok@s2+1)^0,c
  5034  0013BC  ECD1  F00A         	call	_strtok	;wreg free
  5035  0013C0  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  5036  0013C4  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  5037                           
  5038                           ;A6Lib.c: 34: baudRateToken = strtok((0), response);
  5039  0013C8  0E00               	movlw	0
  5040  0013CA  6E12               	movwf	strtok@s1^0,c
  5041  0013CC  0E00               	movlw	0
  5042  0013CE  6E13               	movwf	(strtok@s1+1)^0,c
  5043  0013D0  0E23               	movlw	low A6_BaudRateGet@response
  5044  0013D2  6E14               	movwf	strtok@s2^0,c
  5045  0013D4  0E00               	movlw	high A6_BaudRateGet@response
  5046  0013D6  6E15               	movwf	(strtok@s2+1)^0,c
  5047  0013D8  ECD1  F00A         	call	_strtok	;wreg free
  5048  0013DC  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  5049  0013E0  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  5050  0013E4                     
  5051                           ;A6Lib.c: 35: if(baudRateToken != (0)) {
  5052  0013E4  5047               	movf	A6_BaudRateGet@baudRateToken^0,w,c
  5053  0013E6  1048               	iorwf	(A6_BaudRateGet@baudRateToken+1)^0,w,c
  5054  0013E8  B4D8               	btfsc	status,2,c
  5055  0013EA  EFF9  F009         	goto	u2881
  5056  0013EE  EFFB  F009         	goto	u2880
  5057  0013F2                     u2881:
  5058  0013F2  EF3C  F00A         	goto	l3857
  5059  0013F6                     u2880:
  5060  0013F6                     
  5061                           ;A6Lib.c: 36: baudRate = atol(baudRateToken);
  5062  0013F6  C047  F011         	movff	A6_BaudRateGet@baudRateToken,atol@s
  5063  0013FA  C048  F012         	movff	A6_BaudRateGet@baudRateToken+1,atol@s+1
  5064  0013FE  EC81  F008         	call	_atol	;wreg free
  5065  001402  C011  F043         	movff	?_atol,A6_BaudRateGet@baudRate
  5066  001406  C012  F044         	movff	?_atol+1,A6_BaudRateGet@baudRate+1
  5067  00140A  C013  F045         	movff	?_atol+2,A6_BaudRateGet@baudRate+2
  5068  00140E  C014  F046         	movff	?_atol+3,A6_BaudRateGet@baudRate+3
  5069  001412                     
  5070                           ;A6Lib.c: 37: for(uint8_t j=0; j<3; j++) {
  5071  001412  0E00               	movlw	0
  5072  001414  6E49               	movwf	A6_BaudRateGet@j^0,c
  5073  001416                     l3849:
  5074                           
  5075                           ;A6Lib.c: 38: if(baudRate == A6_BAUDRATES[j]) {
  5076  001416  5049               	movf	A6_BaudRateGet@j^0,w,c
  5077  001418  0D04               	mullw	4
  5078  00141A  0EE5               	movlw	low _A6_BAUDRATES
  5079  00141C  24F3               	addwf	243,w,c
  5080  00141E  6EF6               	movwf	tblptrl,c
  5081  001420  0E5D               	movlw	high _A6_BAUDRATES
  5082  001422  20F4               	addwfc	244,w,c
  5083  001424  6EF7               	movwf	tblptrh,c
  5084  001426                     	if	0	;There are less than 3 active tblptr bytes
  5085  001426                     	endif
  5086  001426  5043               	movf	A6_BaudRateGet@baudRate^0,w,c
  5087  001428  0009               	tblrd		*+
  5088  00142A  18F5               	xorwf	tablat,w,c
  5089  00142C  E110               	bnz	u2891
  5090  00142E  5044               	movf	(A6_BaudRateGet@baudRate+1)^0,w,c
  5091  001430  0009               	tblrd		*+
  5092  001432  18F5               	xorwf	tablat,w,c
  5093  001434  E10C               	bnz	u2891
  5094  001436  5045               	movf	(A6_BaudRateGet@baudRate+2)^0,w,c
  5095  001438  0009               	tblrd		*+
  5096  00143A  18F5               	xorwf	tablat,w,c
  5097  00143C  E108               	bnz	u2891
  5098  00143E  5046               	movf	(A6_BaudRateGet@baudRate+3)^0,w,c
  5099  001440  0009               	tblrd		*+
  5100  001442  18F5               	xorwf	tablat,w,c
  5101  001444  A4D8               	btfss	status,2,c
  5102  001446  EF27  F00A         	goto	u2891
  5103  00144A  EF29  F00A         	goto	u2890
  5104  00144E                     u2891:
  5105  00144E  EF33  F00A         	goto	l3853
  5106  001452                     u2890:
  5107  001452                     
  5108                           ;A6Lib.c: 39: return baudRate;
  5109  001452  C043  F01F         	movff	A6_BaudRateGet@baudRate,?_A6_BaudRateGet
  5110  001456  C044  F020         	movff	A6_BaudRateGet@baudRate+1,?_A6_BaudRateGet+1
  5111  00145A  C045  F021         	movff	A6_BaudRateGet@baudRate+2,?_A6_BaudRateGet+2
  5112  00145E  C046  F022         	movff	A6_BaudRateGet@baudRate+3,?_A6_BaudRateGet+3
  5113  001462  EF44  F00A         	goto	l523
  5114  001466                     l3853:
  5115  001466  2A49               	incf	A6_BaudRateGet@j^0,f,c
  5116  001468  0E02               	movlw	2
  5117  00146A  6449               	cpfsgt	A6_BaudRateGet@j^0,c
  5118  00146C  EF3A  F00A         	goto	u2901
  5119  001470  EF3C  F00A         	goto	u2900
  5120  001474                     u2901:
  5121  001474  EF0B  F00A         	goto	l3849
  5122  001478                     u2900:
  5123  001478                     l3857:
  5124                           
  5125                           ;A6Lib.c: 40: };A6Lib.c: 41: };A6Lib.c: 42: };A6Lib.c: 43: };A6Lib.c: 45: return 0;
  5126  001478  0E00               	movlw	0
  5127  00147A  6E1F               	movwf	?_A6_BaudRateGet^0,c
  5128  00147C  0E00               	movlw	0
  5129  00147E  6E20               	movwf	(?_A6_BaudRateGet+1)^0,c
  5130  001480  0E00               	movlw	0
  5131  001482  6E21               	movwf	(?_A6_BaudRateGet+2)^0,c
  5132  001484  0E00               	movlw	0
  5133  001486  6E22               	movwf	(?_A6_BaudRateGet+3)^0,c
  5134  001488                     l523:
  5135  001488  0012               	return		;funcret
  5136  00148A                     __end_of_A6_BaudRateGet:
  5137                           	opt callstack 0
  5138                           
  5139 ;; *************** function _strtok *****************
  5140 ;; Defined at:
  5141 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strtok.c"
  5142 ;; Parameters:    Size  Location     Type
  5143 ;;  s1              2   17[COMRAM] PTR unsigned char 
  5144 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5145 ;;  s2              2   19[COMRAM] PTR const unsigned char 
  5146 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5147 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5148 ;;		 -> A6_BaudRateGet@response(32), 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  2   17[COMRAM] PTR unsigned char 
  5153 ;; Registers used:
  5154 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5160 ;;      Params:         4       0       0       0       0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5163 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5164 ;;Total ram usage:        4 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    4
  5167 ;; This function calls:
  5168 ;;		_strcspn
  5169 ;;		_strspn
  5170 ;; This function is called by:
  5171 ;;		_A6_BaudRateGet
  5172 ;;		_A6_NetworkGetStatus
  5173 ;;		_A6_NetworkGetRSSI
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text9
  5178  0015A2                     __ptext9:
  5179                           	opt callstack 0
  5180  0015A2                     _strtok:
  5181                           	opt callstack 24
  5182  0015A2  5012               	movf	strtok@s1^0,w,c
  5183  0015A4  1013               	iorwf	(strtok@s1+1)^0,w,c
  5184  0015A6  A4D8               	btfss	status,2,c
  5185  0015A8  EFD8  F00A         	goto	u2591
  5186  0015AC  EFDA  F00A         	goto	u2590
  5187  0015B0                     u2591:
  5188  0015B0  EFDE  F00A         	goto	l1461
  5189  0015B4                     u2590:
  5190  0015B4  C0CA  F012         	movff	strtok@sp,strtok@s1
  5191  0015B8  C0CB  F013         	movff	strtok@sp+1,strtok@s1+1
  5192  0015BC                     l1461:
  5193  0015BC  5012               	movf	strtok@s1^0,w,c
  5194  0015BE  1013               	iorwf	(strtok@s1+1)^0,w,c
  5195  0015C0  A4D8               	btfss	status,2,c
  5196  0015C2  EFE5  F00A         	goto	u2601
  5197  0015C6  EFE7  F00A         	goto	u2600
  5198  0015CA                     u2601:
  5199  0015CA  EFED  F00A         	goto	l3665
  5200  0015CE                     u2600:
  5201  0015CE  0E00               	movlw	0
  5202  0015D0  6E12               	movwf	?_strtok^0,c
  5203  0015D2  0E00               	movlw	0
  5204  0015D4  6E13               	movwf	(?_strtok+1)^0,c
  5205  0015D6  EF41  F00B         	goto	l1463
  5206  0015DA                     l3665:
  5207  0015DA  C012  F00B         	movff	strtok@s1,strspn@s1
  5208  0015DE  C013  F00C         	movff	strtok@s1+1,strspn@s1+1
  5209  0015E2  C014  F00D         	movff	strtok@s2,strspn@s2
  5210  0015E6  C015  F00E         	movff	strtok@s2+1,strspn@s2+1
  5211  0015EA  ECC6  F012         	call	_strspn	;wreg free
  5212  0015EE  500B               	movf	?_strspn^0,w,c
  5213  0015F0  2612               	addwf	strtok@s1^0,f,c
  5214  0015F2  500C               	movf	(?_strspn+1)^0,w,c
  5215  0015F4  2213               	addwfc	(strtok@s1+1)^0,f,c
  5216  0015F6  C012  FFD9         	movff	strtok@s1,fsr2l
  5217  0015FA  C013  FFDA         	movff	strtok@s1+1,fsr2h
  5218  0015FE  50DF               	movf	indf2,w,c
  5219  001600  A4D8               	btfss	status,2,c
  5220  001602  EF05  F00B         	goto	u2611
  5221  001606  EF07  F00B         	goto	u2610
  5222  00160A                     u2611:
  5223  00160A  EF12  F00B         	goto	l3673
  5224  00160E                     u2610:
  5225  00160E  0E00               	movlw	0
  5226  001610  0100               	movlb	0	; () banked
  5227  001612  6FCA               	movwf	strtok@sp& (0+255),b
  5228  001614  0E00               	movlw	0
  5229  001616  6FCB               	movwf	(strtok@sp+1)& (0+255),b
  5230  001618  C0CA  F012         	movff	strtok@sp,?_strtok
  5231  00161C  C0CB  F013         	movff	strtok@sp+1,?_strtok+1
  5232  001620  EF41  F00B         	goto	l1463
  5233  001624                     l3673:
  5234  001624  C012  F00B         	movff	strtok@s1,strcspn@s1
  5235  001628  C013  F00C         	movff	strtok@s1+1,strcspn@s1+1
  5236  00162C  C014  F00D         	movff	strtok@s2,strcspn@s2
  5237  001630  C015  F00E         	movff	strtok@s2+1,strcspn@s2+1
  5238  001634  ECF9  F012         	call	_strcspn	;wreg free
  5239  001638  500B               	movf	?_strcspn^0,w,c
  5240  00163A  2412               	addwf	strtok@s1^0,w,c
  5241  00163C  0100               	movlb	0	; () banked
  5242  00163E  6FCA               	movwf	strtok@sp& (0+255),b
  5243  001640  500C               	movf	(?_strcspn+1)^0,w,c
  5244  001642  2013               	addwfc	(strtok@s1+1)^0,w,c
  5245  001644  6FCB               	movwf	(strtok@sp+1)& (0+255),b
  5246  001646                     
  5247                           ; BSR set to: 0
  5248  001646  C0CA  FFD9         	movff	strtok@sp,fsr2l
  5249  00164A  C0CB  FFDA         	movff	strtok@sp+1,fsr2h
  5250  00164E  50DF               	movf	indf2,w,c
  5251  001650  B4D8               	btfsc	status,2,c
  5252  001652  EF2D  F00B         	goto	u2621
  5253  001656  EF2F  F00B         	goto	u2620
  5254  00165A                     u2621:
  5255  00165A  EF39  F00B         	goto	l3681
  5256  00165E                     u2620:
  5257  00165E                     
  5258                           ; BSR set to: 0
  5259  00165E  C0CA  FFD9         	movff	strtok@sp,fsr2l
  5260  001662  C0CB  FFDA         	movff	strtok@sp+1,fsr2h
  5261  001666  0E00               	movlw	0
  5262  001668  6EDF               	movwf	indf2,c
  5263  00166A                     
  5264                           ; BSR set to: 0
  5265  00166A  4BCA               	infsnz	strtok@sp& (0+255),f,b
  5266  00166C  2BCB               	incf	(strtok@sp+1)& (0+255),f,b
  5267  00166E  EF3D  F00B         	goto	l1466
  5268  001672                     l3681:
  5269                           
  5270                           ; BSR set to: 0
  5271  001672  0E00               	movlw	0
  5272  001674  6FCA               	movwf	strtok@sp& (0+255),b
  5273  001676  0E00               	movlw	0
  5274  001678  6FCB               	movwf	(strtok@sp+1)& (0+255),b
  5275  00167A                     l1466:
  5276                           
  5277                           ; BSR set to: 0
  5278  00167A  C012  F012         	movff	strtok@s1,?_strtok
  5279  00167E  C013  F013         	movff	strtok@s1+1,?_strtok+1
  5280  001682                     l1463:
  5281  001682  0012               	return		;funcret
  5282  001684                     __end_of_strtok:
  5283                           	opt callstack 0
  5284                           
  5285 ;; *************** function _strspn *****************
  5286 ;; Defined at:
  5287 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strspn.c"
  5288 ;; Parameters:    Size  Location     Type
  5289 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  5290 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5291 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  5292 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5293 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5294 ;;		 -> A6_BaudRateGet@response(32), 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  i               2   15[COMRAM] unsigned int 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  2   10[COMRAM] unsigned int 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5306 ;;      Params:         4       0       0       0       0       0       0       0       0
  5307 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5308 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5309 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5310 ;;Total ram usage:        7 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    3
  5313 ;; This function calls:
  5314 ;;		_strchr
  5315 ;; This function is called by:
  5316 ;;		_strtok
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text10
  5321  00258C                     __ptext10:
  5322                           	opt callstack 0
  5323  00258C                     _strspn:
  5324                           	opt callstack 24
  5325  00258C  0E00               	movlw	0
  5326  00258E  6E11               	movwf	(strspn@i+1)^0,c
  5327  002590  0E00               	movlw	0
  5328  002592  6E10               	movwf	strspn@i^0,c
  5329  002594  EFD0  F012         	goto	l3589
  5330  002598                     l3587:
  5331  002598  4A0B               	infsnz	strspn@s1^0,f,c
  5332  00259A  2A0C               	incf	(strspn@s1+1)^0,f,c
  5333  00259C  4A10               	infsnz	strspn@i^0,f,c
  5334  00259E  2A11               	incf	(strspn@i+1)^0,f,c
  5335  0025A0                     l3589:
  5336  0025A0  C00B  FFD9         	movff	strspn@s1,fsr2l
  5337  0025A4  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  5338  0025A8  50DF               	movf	indf2,w,c
  5339  0025AA  B4D8               	btfsc	status,2,c
  5340  0025AC  EFDA  F012         	goto	u2441
  5341  0025B0  EFDC  F012         	goto	u2440
  5342  0025B4                     u2441:
  5343  0025B4  EFF4  F012         	goto	l1500
  5344  0025B8                     u2440:
  5345  0025B8  C00D  F005         	movff	strspn@s2,strchr@ptr
  5346  0025BC  C00E  F006         	movff	strspn@s2+1,strchr@ptr+1
  5347  0025C0  C00B  FFD9         	movff	strspn@s1,fsr2l
  5348  0025C4  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  5349  0025C8  50DF               	movf	indf2,w,c
  5350  0025CA  6E0F               	movwf	??_strspn^0,c
  5351  0025CC  500F               	movf	??_strspn^0,w,c
  5352  0025CE  6E07               	movwf	strchr@chr^0,c
  5353  0025D0  6A08               	clrf	(strchr@chr+1)^0,c
  5354  0025D2  ECB8  F010         	call	_strchr	;wreg free
  5355  0025D6  5005               	movf	?_strchr^0,w,c
  5356  0025D8  1006               	iorwf	(?_strchr+1)^0,w,c
  5357  0025DA  A4D8               	btfss	status,2,c
  5358  0025DC  EFF2  F012         	goto	u2451
  5359  0025E0  EFF4  F012         	goto	u2450
  5360  0025E4                     u2451:
  5361  0025E4  EFCC  F012         	goto	l3587
  5362  0025E8                     u2450:
  5363  0025E8                     l1500:
  5364  0025E8  C010  F00B         	movff	strspn@i,?_strspn
  5365  0025EC  C011  F00C         	movff	strspn@i+1,?_strspn+1
  5366  0025F0  0012               	return		;funcret
  5367  0025F2                     __end_of_strspn:
  5368                           	opt callstack 0
  5369                           
  5370 ;; *************** function _strcspn *****************
  5371 ;; Defined at:
  5372 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcspn.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  5375 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5376 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  5377 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5378 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5379 ;;		 -> A6_BaudRateGet@response(32), 
  5380 ;; Auto vars:     Size  Location     Type
  5381 ;;  i               2   15[COMRAM] unsigned int 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  2   10[COMRAM] unsigned int 
  5384 ;; Registers used:
  5385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5391 ;;      Params:         4       0       0       0       0       0       0       0       0
  5392 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5393 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5394 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5395 ;;Total ram usage:        7 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    3
  5398 ;; This function calls:
  5399 ;;		_strchr
  5400 ;; This function is called by:
  5401 ;;		_strtok
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text11
  5406  0025F2                     __ptext11:
  5407                           	opt callstack 0
  5408  0025F2                     _strcspn:
  5409                           	opt callstack 24
  5410  0025F2  0E00               	movlw	0
  5411  0025F4  6E11               	movwf	(strcspn@i+1)^0,c
  5412  0025F6  0E00               	movlw	0
  5413  0025F8  6E10               	movwf	strcspn@i^0,c
  5414  0025FA  EF03  F013         	goto	l3597
  5415  0025FE                     l3595:
  5416  0025FE  4A0B               	infsnz	strcspn@s1^0,f,c
  5417  002600  2A0C               	incf	(strcspn@s1+1)^0,f,c
  5418  002602  4A10               	infsnz	strcspn@i^0,f,c
  5419  002604  2A11               	incf	(strcspn@i+1)^0,f,c
  5420  002606                     l3597:
  5421  002606  C00B  FFD9         	movff	strcspn@s1,fsr2l
  5422  00260A  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  5423  00260E  50DF               	movf	indf2,w,c
  5424  002610  B4D8               	btfsc	status,2,c
  5425  002612  EF0D  F013         	goto	u2461
  5426  002616  EF0F  F013         	goto	u2460
  5427  00261A                     u2461:
  5428  00261A  EF27  F013         	goto	l1481
  5429  00261E                     u2460:
  5430  00261E  C00D  F005         	movff	strcspn@s2,strchr@ptr
  5431  002622  C00E  F006         	movff	strcspn@s2+1,strchr@ptr+1
  5432  002626  C00B  FFD9         	movff	strcspn@s1,fsr2l
  5433  00262A  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  5434  00262E  50DF               	movf	indf2,w,c
  5435  002630  6E0F               	movwf	??_strcspn^0,c
  5436  002632  500F               	movf	??_strcspn^0,w,c
  5437  002634  6E07               	movwf	strchr@chr^0,c
  5438  002636  6A08               	clrf	(strchr@chr+1)^0,c
  5439  002638  ECB8  F010         	call	_strchr	;wreg free
  5440  00263C  5005               	movf	?_strchr^0,w,c
  5441  00263E  1006               	iorwf	(?_strchr+1)^0,w,c
  5442  002640  B4D8               	btfsc	status,2,c
  5443  002642  EF25  F013         	goto	u2471
  5444  002646  EF27  F013         	goto	u2470
  5445  00264A                     u2471:
  5446  00264A  EFFF  F012         	goto	l3595
  5447  00264E                     u2470:
  5448  00264E                     l1481:
  5449  00264E  C010  F00B         	movff	strcspn@i,?_strcspn
  5450  002652  C011  F00C         	movff	strcspn@i+1,?_strcspn+1
  5451  002656  0012               	return		;funcret
  5452  002658                     __end_of_strcspn:
  5453                           	opt callstack 0
  5454                           
  5455 ;; *************** function _strstr *****************
  5456 ;; Defined at:
  5457 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strstr.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  5460 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5461 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5462 ;;		 -> A6_BaudRateGet@response(32), 
  5463 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  5464 ;;		 -> STR_37(7), STR_33(8), STR_25(7), 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;		None
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  2   15[COMRAM] PTR unsigned char 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5476 ;;      Params:         4       0       0       0       0       0       0       0       0
  5477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5479 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5480 ;;Total ram usage:        4 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:    3
  5483 ;; This function calls:
  5484 ;;		_strchr
  5485 ;;		_strlen
  5486 ;;		_strncmp
  5487 ;; This function is called by:
  5488 ;;		_A6_BaudRateGet
  5489 ;;		_A6_NetworkGetStatus
  5490 ;;		_A6_NetworkGetRSSI
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text12
  5495  001C50                     __ptext12:
  5496                           	opt callstack 0
  5497  001C50                     _strstr:
  5498                           	opt callstack 25
  5499  001C50  EF61  F00E         	goto	l3649
  5500  001C54                     l3641:
  5501  001C54  C010  F009         	movff	strstr@s1,strncmp@s1
  5502  001C58  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
  5503  001C5C  C012  F00B         	movff	strstr@s2,strncmp@s2
  5504  001C60  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
  5505  001C64  C012  F005         	movff	strstr@s2,strlen@s
  5506  001C68  C013  F006         	movff	strstr@s2+1,strlen@s+1
  5507  001C6C  ECDD  F013         	call	_strlen	;wreg free
  5508  001C70  C005  F00D         	movff	?_strlen,strncmp@len
  5509  001C74  C006  F00E         	movff	?_strlen+1,strncmp@len+1
  5510  001C78  EC20  F00C         	call	_strncmp	;wreg free
  5511  001C7C  5009               	movf	?_strncmp^0,w,c
  5512  001C7E  100A               	iorwf	(?_strncmp+1)^0,w,c
  5513  001C80  A4D8               	btfss	status,2,c
  5514  001C82  EF45  F00E         	goto	u2551
  5515  001C86  EF47  F00E         	goto	u2550
  5516  001C8A                     u2551:
  5517  001C8A  EF4D  F00E         	goto	l3647
  5518  001C8E                     u2550:
  5519  001C8E  C010  F010         	movff	strstr@s1,?_strstr
  5520  001C92  C011  F011         	movff	strstr@s1+1,?_strstr+1
  5521  001C96  EF86  F00E         	goto	l1449
  5522  001C9A                     l3647:
  5523  001C9A  0E01               	movlw	1
  5524  001C9C  2410               	addwf	strstr@s1^0,w,c
  5525  001C9E  6E05               	movwf	strchr@ptr^0,c
  5526  001CA0  0E00               	movlw	0
  5527  001CA2  2011               	addwfc	(strstr@s1+1)^0,w,c
  5528  001CA4  6E06               	movwf	(strchr@ptr+1)^0,c
  5529  001CA6  C012  FFF6         	movff	strstr@s2,tblptrl
  5530  001CAA  C013  FFF7         	movff	strstr@s2+1,tblptrh
  5531  001CAE                     	if	0	;tblptru may be non-zero
  5532  001CAE                     	endif
  5533  001CAE                     	if	0	;tblptru may be non-zero
  5534  001CAE                     	endif
  5535  001CAE  0008               	tblrd		*
  5536  001CB0  50F5               	movf	tablat,w,c
  5537  001CB2  6E07               	movwf	strchr@chr^0,c
  5538  001CB4  6A08               	clrf	(strchr@chr+1)^0,c
  5539  001CB6  ECB8  F010         	call	_strchr	;wreg free
  5540  001CBA  C005  F010         	movff	?_strchr,strstr@s1
  5541  001CBE  C006  F011         	movff	?_strchr+1,strstr@s1+1
  5542  001CC2                     l3649:
  5543  001CC2  5010               	movf	strstr@s1^0,w,c
  5544  001CC4  1011               	iorwf	(strstr@s1+1)^0,w,c
  5545  001CC6  B4D8               	btfsc	status,2,c
  5546  001CC8  EF68  F00E         	goto	u2561
  5547  001CCC  EF6A  F00E         	goto	u2560
  5548  001CD0                     u2561:
  5549  001CD0  EF82  F00E         	goto	l3653
  5550  001CD4                     u2560:
  5551  001CD4  C010  FFF6         	movff	strstr@s1,tblptrl
  5552  001CD8  C011  FFF7         	movff	strstr@s1+1,tblptrh
  5553  001CDC  6AF8               	clrf	tblptru,c
  5554  001CDE  0E07               	movlw	(high __ramtop+-1)
  5555  001CE0  64F7               	cpfsgt	tblptrh,c
  5556  001CE2  D003               	bra	u2577
  5557  001CE4  0008               	tblrd		*
  5558  001CE6  50F5               	movf	tablat,w,c
  5559  001CE8  D005               	bra	u2570
  5560  001CEA                     u2577:
  5561  001CEA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5562  001CEE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5563  001CF2  50EF               	movf	indf0,w,c
  5564  001CF4                     u2570:
  5565  001CF4  0900               	iorlw	0
  5566  001CF6  A4D8               	btfss	status,2,c
  5567  001CF8  EF80  F00E         	goto	u2581
  5568  001CFC  EF82  F00E         	goto	u2580
  5569  001D00                     u2581:
  5570  001D00  EF2A  F00E         	goto	l3641
  5571  001D04                     u2580:
  5572  001D04                     l3653:
  5573  001D04  0E00               	movlw	0
  5574  001D06  6E10               	movwf	?_strstr^0,c
  5575  001D08  0E00               	movlw	0
  5576  001D0A  6E11               	movwf	(?_strstr+1)^0,c
  5577  001D0C                     l1449:
  5578  001D0C  0012               	return		;funcret
  5579  001D0E                     __end_of_strstr:
  5580                           	opt callstack 0
  5581                           
  5582 ;; *************** function _strncmp *****************
  5583 ;; Defined at:
  5584 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strncmp.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  s1              2    8[COMRAM] PTR const unsigned char 
  5587 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5588 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5589 ;;		 -> A6_BaudRateGet@response(32), 
  5590 ;;  s2              2   10[COMRAM] PTR const unsigned char 
  5591 ;;		 -> STR_37(7), STR_33(8), STR_25(7), 
  5592 ;;  len             2   12[COMRAM] unsigned int 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;		None
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  2    8[COMRAM] int 
  5597 ;; Registers used:
  5598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5604 ;;      Params:         6       0       0       0       0       0       0       0       0
  5605 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5606 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5607 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5608 ;;Total ram usage:        7 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    2
  5611 ;; This function calls:
  5612 ;;		Nothing
  5613 ;; This function is called by:
  5614 ;;		_strstr
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text13
  5619  001840                     __ptext13:
  5620                           	opt callstack 0
  5621  001840                     _strncmp:
  5622                           	opt callstack 25
  5623  001840  EF7B  F00C         	goto	l3579
  5624  001844                     l3569:
  5625  001844  C009  FFF6         	movff	strncmp@s1,tblptrl
  5626  001848  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5627  00184C  6AF8               	clrf	tblptru,c
  5628  00184E  0E07               	movlw	(high __ramtop+-1)
  5629  001850  64F7               	cpfsgt	tblptrh,c
  5630  001852  D003               	bra	u2397
  5631  001854  0008               	tblrd		*
  5632  001856  50F5               	movf	tablat,w,c
  5633  001858  D005               	bra	u2390
  5634  00185A                     u2397:
  5635  00185A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5636  00185E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5637  001862  50EF               	movf	indf0,w,c
  5638  001864                     u2390:
  5639  001864  0900               	iorlw	0
  5640  001866  B4D8               	btfsc	status,2,c
  5641  001868  EF38  F00C         	goto	u2401
  5642  00186C  EF3A  F00C         	goto	u2400
  5643  001870                     u2401:
  5644  001870  EF59  F00C         	goto	l3573
  5645  001874                     u2400:
  5646  001874  C00B  FFF6         	movff	strncmp@s2,tblptrl
  5647  001878  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  5648  00187C                     	if	0	;tblptru may be non-zero
  5649  00187C                     	endif
  5650  00187C                     	if	0	;tblptru may be non-zero
  5651  00187C                     	endif
  5652  00187C  0008               	tblrd		*
  5653  00187E  CFF5 F00F          	movff	tablat,??_strncmp
  5654  001882  C009  FFF6         	movff	strncmp@s1,tblptrl
  5655  001886  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5656  00188A  6AF8               	clrf	tblptru,c
  5657  00188C  0E07               	movlw	(high __ramtop+-1)
  5658  00188E  64F7               	cpfsgt	tblptrh,c
  5659  001890  D003               	bra	u2417
  5660  001892  0008               	tblrd		*
  5661  001894  50F5               	movf	tablat,w,c
  5662  001896  D005               	bra	u2415
  5663  001898                     u2417:
  5664  001898  CFF6 FFE9          	movff	tblptrl,fsr0l
  5665  00189C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5666  0018A0  50EF               	movf	indf0,w,c
  5667  0018A2                     u2415:
  5668  0018A2  180F               	xorwf	??_strncmp^0,w,c
  5669  0018A4  B4D8               	btfsc	status,2,c
  5670  0018A6  EF57  F00C         	goto	u2411
  5671  0018AA  EF59  F00C         	goto	u2410
  5672  0018AE                     u2411:
  5673  0018AE  EF77  F00C         	goto	l3577
  5674  0018B2                     u2410:
  5675  0018B2                     l3573:
  5676  0018B2  C009  FFF6         	movff	strncmp@s1,tblptrl
  5677  0018B6  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5678  0018BA  6AF8               	clrf	tblptru,c
  5679  0018BC  0E07               	movlw	(high __ramtop+-1)
  5680  0018BE  64F7               	cpfsgt	tblptrh,c
  5681  0018C0  D003               	bra	u2427
  5682  0018C2  0008               	tblrd		*
  5683  0018C4  50F5               	movf	tablat,w,c
  5684  0018C6  D005               	bra	u2420
  5685  0018C8                     u2427:
  5686  0018C8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5687  0018CC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5688  0018D0  50EF               	movf	indf0,w,c
  5689  0018D2                     u2420:
  5690  0018D2  6E0F               	movwf	??_strncmp^0,c
  5691  0018D4  C00B  FFF6         	movff	strncmp@s2,tblptrl
  5692  0018D8  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  5693  0018DC                     	if	0	;tblptru may be non-zero
  5694  0018DC                     	endif
  5695  0018DC                     	if	0	;tblptru may be non-zero
  5696  0018DC                     	endif
  5697  0018DC  0008               	tblrd		*
  5698  0018DE  50F5               	movf	tablat,w,c
  5699  0018E0  5C0F               	subwf	??_strncmp^0,w,c
  5700  0018E2  6E09               	movwf	?_strncmp^0,c
  5701  0018E4  6A0A               	clrf	(?_strncmp+1)^0,c
  5702  0018E6  A0D8               	btfss	status,0,c
  5703  0018E8  060A               	decf	(?_strncmp+1)^0,f,c
  5704  0018EA  EF8C  F00C         	goto	l1490
  5705  0018EE                     l3577:
  5706  0018EE  4A09               	infsnz	strncmp@s1^0,f,c
  5707  0018F0  2A0A               	incf	(strncmp@s1+1)^0,f,c
  5708  0018F2  4A0B               	infsnz	strncmp@s2^0,f,c
  5709  0018F4  2A0C               	incf	(strncmp@s2+1)^0,f,c
  5710  0018F6                     l3579:
  5711  0018F6  060D               	decf	strncmp@len^0,f,c
  5712  0018F8  A0D8               	btfss	status,0,c
  5713  0018FA  060E               	decf	(strncmp@len+1)^0,f,c
  5714  0018FC  280D               	incf	strncmp@len^0,w,c
  5715  0018FE  E106               	bnz	u2431
  5716  001900  280E               	incf	(strncmp@len+1)^0,w,c
  5717  001902  A4D8               	btfss	status,2,c
  5718  001904  EF86  F00C         	goto	u2431
  5719  001908  EF88  F00C         	goto	u2430
  5720  00190C                     u2431:
  5721  00190C  EF22  F00C         	goto	l3569
  5722  001910                     u2430:
  5723  001910  0E00               	movlw	0
  5724  001912  6E0A               	movwf	(?_strncmp+1)^0,c
  5725  001914  0E00               	movlw	0
  5726  001916  6E09               	movwf	?_strncmp^0,c
  5727  001918                     l1490:
  5728  001918  0012               	return		;funcret
  5729  00191A                     __end_of_strncmp:
  5730                           	opt callstack 0
  5731                           
  5732 ;; *************** function _strchr *****************
  5733 ;; Defined at:
  5734 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strchr.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  5737 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5738 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5739 ;;		 -> A6_BaudRateGet@response(32), 
  5740 ;;  chr             2    6[COMRAM] int 
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  2    4[COMRAM] PTR unsigned char 
  5745 ;; Registers used:
  5746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5752 ;;      Params:         4       0       0       0       0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5754 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5755 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5756 ;;Total ram usage:        6 bytes
  5757 ;; Hardware stack levels used:    1
  5758 ;; Hardware stack levels required when called:    2
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_strstr
  5763 ;;		_strcspn
  5764 ;;		_strspn
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text14
  5769  002170                     __ptext14:
  5770                           	opt callstack 0
  5771  002170                     _strchr:
  5772                           	opt callstack 24
  5773  002170                     l1469:
  5774  002170  C005  FFF6         	movff	strchr@ptr,tblptrl
  5775  002174  C006  FFF7         	movff	strchr@ptr+1,tblptrh
  5776  002178  6AF8               	clrf	tblptru,c
  5777  00217A  0E07               	movlw	(high __ramtop+-1)
  5778  00217C  64F7               	cpfsgt	tblptrh,c
  5779  00217E  D003               	bra	u2147
  5780  002180  0008               	tblrd		*
  5781  002182  50F5               	movf	tablat,w,c
  5782  002184  D005               	bra	u2140
  5783  002186                     u2147:
  5784  002186  CFF6 FFE9          	movff	tblptrl,fsr0l
  5785  00218A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5786  00218E  50EF               	movf	indf0,w,c
  5787  002190                     u2140:
  5788  002190  1807               	xorwf	strchr@chr^0,w,c
  5789  002192  A4D8               	btfss	status,2,c
  5790  002194  EFCE  F010         	goto	u2151
  5791  002198  EFD0  F010         	goto	u2150
  5792  00219C                     u2151:
  5793  00219C  EFD6  F010         	goto	l3447
  5794  0021A0                     u2150:
  5795  0021A0  C005  F005         	movff	strchr@ptr,?_strchr
  5796  0021A4  C006  F006         	movff	strchr@ptr+1,?_strchr+1
  5797  0021A8  EFF8  F010         	goto	l1471
  5798  0021AC                     l3447:
  5799  0021AC  5005               	movf	strchr@ptr^0,w,c
  5800  0021AE  6E09               	movwf	??_strchr^0,c
  5801  0021B0  5006               	movf	(strchr@ptr+1)^0,w,c
  5802  0021B2  6E0A               	movwf	(??_strchr+1)^0,c
  5803  0021B4  4A05               	infsnz	strchr@ptr^0,f,c
  5804  0021B6  2A06               	incf	(strchr@ptr+1)^0,f,c
  5805  0021B8  C009  FFF6         	movff	??_strchr,tblptrl
  5806  0021BC  C00A  FFF7         	movff	??_strchr+1,tblptrh
  5807  0021C0  6AF8               	clrf	tblptru,c
  5808  0021C2  0E07               	movlw	(high __ramtop+-1)
  5809  0021C4  64F7               	cpfsgt	tblptrh,c
  5810  0021C6  D003               	bra	u2167
  5811  0021C8  0008               	tblrd		*
  5812  0021CA  50F5               	movf	tablat,w,c
  5813  0021CC  D005               	bra	u2160
  5814  0021CE                     u2167:
  5815  0021CE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5816  0021D2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5817  0021D6  50EF               	movf	indf0,w,c
  5818  0021D8                     u2160:
  5819  0021D8  0900               	iorlw	0
  5820  0021DA  A4D8               	btfss	status,2,c
  5821  0021DC  EFF2  F010         	goto	u2171
  5822  0021E0  EFF4  F010         	goto	u2170
  5823  0021E4                     u2171:
  5824  0021E4  EFB8  F010         	goto	l1469
  5825  0021E8                     u2170:
  5826  0021E8  0E00               	movlw	0
  5827  0021EA  6E05               	movwf	?_strchr^0,c
  5828  0021EC  0E00               	movlw	0
  5829  0021EE  6E06               	movwf	(?_strchr+1)^0,c
  5830  0021F0                     l1471:
  5831  0021F0  0012               	return		;funcret
  5832  0021F2                     __end_of_strchr:
  5833                           	opt callstack 0
  5834                           
  5835 ;; *************** function _atol *****************
  5836 ;; Defined at:
  5837 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atol.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  s               2   16[COMRAM] PTR const unsigned char 
  5840 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  a               4   25[COMRAM] long 
  5843 ;;  c               1   29[COMRAM] unsigned char 
  5844 ;;  sign            1   24[COMRAM] unsigned char 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  4   16[COMRAM] long 
  5847 ;; Registers used:
  5848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5854 ;;      Params:         4       0       0       0       0       0       0       0       0
  5855 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5856 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5857 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5858 ;;Total ram usage:       14 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; Hardware stack levels required when called:    3
  5861 ;; This function calls:
  5862 ;;		___lmul
  5863 ;;		_isdigit
  5864 ;; This function is called by:
  5865 ;;		_A6_BaudRateGet
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text15
  5870  001102                     __ptext15:
  5871                           	opt callstack 0
  5872  001102                     _atol:
  5873                           	opt callstack 24
  5874  001102                     l1403:
  5875  001102  C011  FFD9         	movff	atol@s,fsr2l
  5876  001106  C012  FFDA         	movff	atol@s+1,fsr2h
  5877  00110A  50DF               	movf	indf2,w,c
  5878  00110C  6E1E               	movwf	atol@c^0,c
  5879  00110E  4A11               	infsnz	atol@s^0,f,c
  5880  001110  2A12               	incf	(atol@s+1)^0,f,c
  5881  001112  0E20               	movlw	32
  5882  001114  181E               	xorwf	atol@c^0,w,c
  5883  001116  B4D8               	btfsc	status,2,c
  5884  001118  EF90  F008         	goto	u2631
  5885  00111C  EF92  F008         	goto	u2630
  5886  001120                     u2631:
  5887  001120  EF81  F008         	goto	l1403
  5888  001124                     u2630:
  5889  001124  0E09               	movlw	9
  5890  001126  181E               	xorwf	atol@c^0,w,c
  5891  001128  B4D8               	btfsc	status,2,c
  5892  00112A  EF99  F008         	goto	u2641
  5893  00112E  EF9B  F008         	goto	u2640
  5894  001132                     u2641:
  5895  001132  EF81  F008         	goto	l1403
  5896  001136                     u2640:
  5897  001136  0E00               	movlw	0
  5898  001138  6E1A               	movwf	atol@a^0,c
  5899  00113A  0E00               	movlw	0
  5900  00113C  6E1B               	movwf	(atol@a+1)^0,c
  5901  00113E  0E00               	movlw	0
  5902  001140  6E1C               	movwf	(atol@a+2)^0,c
  5903  001142  0E00               	movlw	0
  5904  001144  6E1D               	movwf	(atol@a+3)^0,c
  5905  001146  0E00               	movlw	0
  5906  001148  6E19               	movwf	atol@sign^0,c
  5907  00114A  0E2D               	movlw	45
  5908  00114C  181E               	xorwf	atol@c^0,w,c
  5909  00114E  A4D8               	btfss	status,2,c
  5910  001150  EFAC  F008         	goto	u2651
  5911  001154  EFAE  F008         	goto	u2650
  5912  001158                     u2651:
  5913  001158  EFB9  F008         	goto	l3703
  5914  00115C                     u2650:
  5915  00115C  2A19               	incf	atol@sign^0,f,c
  5916  00115E                     l3699:
  5917  00115E  C011  FFD9         	movff	atol@s,fsr2l
  5918  001162  C012  FFDA         	movff	atol@s+1,fsr2h
  5919  001166  50DF               	movf	indf2,w,c
  5920  001168  6E1E               	movwf	atol@c^0,c
  5921  00116A  4A11               	infsnz	atol@s^0,f,c
  5922  00116C  2A12               	incf	(atol@s+1)^0,f,c
  5923  00116E  EFE8  F008         	goto	l3715
  5924  001172                     l3703:
  5925  001172  0E2B               	movlw	43
  5926  001174  181E               	xorwf	atol@c^0,w,c
  5927  001176  A4D8               	btfss	status,2,c
  5928  001178  EFC0  F008         	goto	u2661
  5929  00117C  EFC2  F008         	goto	u2660
  5930  001180                     u2661:
  5931  001180  EFE8  F008         	goto	l3715
  5932  001184                     u2660:
  5933  001184  EFAF  F008         	goto	l3699
  5934  001188                     l3709:
  5935  001188  C01A  F005         	movff	atol@a,___lmul@multiplier
  5936  00118C  C01B  F006         	movff	atol@a+1,___lmul@multiplier+1
  5937  001190  C01C  F007         	movff	atol@a+2,___lmul@multiplier+2
  5938  001194  C01D  F008         	movff	atol@a+3,___lmul@multiplier+3
  5939  001198  0E0A               	movlw	10
  5940  00119A  6E09               	movwf	___lmul@multiplicand^0,c
  5941  00119C  0E00               	movlw	0
  5942  00119E  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  5943  0011A0  0E00               	movlw	0
  5944  0011A2  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  5945  0011A4  0E00               	movlw	0
  5946  0011A6  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  5947  0011A8  EC91  F012         	call	___lmul	;wreg free
  5948  0011AC  C01E  F015         	movff	atol@c,??_atol
  5949  0011B0  0ED0               	movlw	208
  5950  0011B2  2615               	addwf	??_atol^0,f,c
  5951  0011B4  5015               	movf	??_atol^0,w,c
  5952  0011B6  2405               	addwf	?___lmul^0,w,c
  5953  0011B8  6E1A               	movwf	atol@a^0,c
  5954  0011BA  0E00               	movlw	0
  5955  0011BC  2006               	addwfc	(?___lmul+1)^0,w,c
  5956  0011BE  6E1B               	movwf	(atol@a+1)^0,c
  5957  0011C0  0E00               	movlw	0
  5958  0011C2  2007               	addwfc	(?___lmul+2)^0,w,c
  5959  0011C4  6E1C               	movwf	(atol@a+2)^0,c
  5960  0011C6  0E00               	movlw	0
  5961  0011C8  2008               	addwfc	(?___lmul+3)^0,w,c
  5962  0011CA  6E1D               	movwf	(atol@a+3)^0,c
  5963  0011CC  EFAF  F008         	goto	l3699
  5964  0011D0                     l3715:
  5965  0011D0  501E               	movf	atol@c^0,w,c
  5966  0011D2  EC43  F015         	call	_isdigit
  5967  0011D6  B0D8               	btfsc	status,0,c
  5968  0011D8  EFF0  F008         	goto	u2671
  5969  0011DC  EFF2  F008         	goto	u2670
  5970  0011E0                     u2671:
  5971  0011E0  EFC4  F008         	goto	l3709
  5972  0011E4                     u2670:
  5973  0011E4  5019               	movf	atol@sign^0,w,c
  5974  0011E6  B4D8               	btfsc	status,2,c
  5975  0011E8  EFF8  F008         	goto	u2681
  5976  0011EC  EFFA  F008         	goto	u2680
  5977  0011F0                     u2681:
  5978  0011F0  EF15  F009         	goto	l1411
  5979  0011F4                     u2680:
  5980  0011F4  C01A  F015         	movff	atol@a,??_atol
  5981  0011F8  C01B  F016         	movff	atol@a+1,??_atol+1
  5982  0011FC  C01C  F017         	movff	atol@a+2,??_atol+2
  5983  001200  C01D  F018         	movff	atol@a+3,??_atol+3
  5984  001204  1E15               	comf	??_atol^0,f,c
  5985  001206  1E16               	comf	(??_atol+1)^0,f,c
  5986  001208  1E17               	comf	(??_atol+2)^0,f,c
  5987  00120A  1E18               	comf	(??_atol+3)^0,f,c
  5988  00120C  2A15               	incf	??_atol^0,f,c
  5989  00120E  0E00               	movlw	0
  5990  001210  2216               	addwfc	(??_atol+1)^0,f,c
  5991  001212  2217               	addwfc	(??_atol+2)^0,f,c
  5992  001214  2218               	addwfc	(??_atol+3)^0,f,c
  5993  001216  C015  F011         	movff	??_atol,?_atol
  5994  00121A  C016  F012         	movff	??_atol+1,?_atol+1
  5995  00121E  C017  F013         	movff	??_atol+2,?_atol+2
  5996  001222  C018  F014         	movff	??_atol+3,?_atol+3
  5997  001226  EF1D  F009         	goto	l1412
  5998  00122A                     l1411:
  5999  00122A  C01A  F011         	movff	atol@a,?_atol
  6000  00122E  C01B  F012         	movff	atol@a+1,?_atol+1
  6001  001232  C01C  F013         	movff	atol@a+2,?_atol+2
  6002  001236  C01D  F014         	movff	atol@a+3,?_atol+3
  6003  00123A                     l1412:
  6004  00123A  0012               	return		;funcret
  6005  00123C                     __end_of_atol:
  6006                           	opt callstack 0
  6007                           
  6008 ;; *************** function ___lmul *****************
  6009 ;; Defined at:
  6010 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  multiplier      4    4[COMRAM] unsigned long 
  6013 ;;  multiplicand    4    8[COMRAM] unsigned long 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  product         4   12[COMRAM] unsigned long 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  4    4[COMRAM] unsigned long 
  6018 ;; Registers used:
  6019 ;;		wreg, status,2, status,0
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6025 ;;      Params:         8       0       0       0       0       0       0       0       0
  6026 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6027 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6028 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6029 ;;Total ram usage:       12 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:    2
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_atol
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text16
  6040  002522                     __ptext16:
  6041                           	opt callstack 0
  6042  002522                     ___lmul:
  6043                           	opt callstack 24
  6044  002522  0E00               	movlw	0
  6045  002524  6E0D               	movwf	___lmul@product^0,c
  6046  002526  0E00               	movlw	0
  6047  002528  6E0E               	movwf	(___lmul@product+1)^0,c
  6048  00252A  0E00               	movlw	0
  6049  00252C  6E0F               	movwf	(___lmul@product+2)^0,c
  6050  00252E  0E00               	movlw	0
  6051  002530  6E10               	movwf	(___lmul@product+3)^0,c
  6052  002532                     l3559:
  6053  002532  A005               	btfss	___lmul@multiplier^0,0,c
  6054  002534  EF9E  F012         	goto	u2371
  6055  002538  EFA0  F012         	goto	u2370
  6056  00253C                     u2371:
  6057  00253C  EFA8  F012         	goto	l3563
  6058  002540                     u2370:
  6059  002540  5009               	movf	___lmul@multiplicand^0,w,c
  6060  002542  260D               	addwf	___lmul@product^0,f,c
  6061  002544  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  6062  002546  220E               	addwfc	(___lmul@product+1)^0,f,c
  6063  002548  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  6064  00254A  220F               	addwfc	(___lmul@product+2)^0,f,c
  6065  00254C  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  6066  00254E  2210               	addwfc	(___lmul@product+3)^0,f,c
  6067  002550                     l3563:
  6068  002550  90D8               	bcf	status,0,c
  6069  002552  3609               	rlcf	___lmul@multiplicand^0,f,c
  6070  002554  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6071  002556  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6072  002558  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6073  00255A  90D8               	bcf	status,0,c
  6074  00255C  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  6075  00255E  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  6076  002560  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  6077  002562  3205               	rrcf	___lmul@multiplier^0,f,c
  6078  002564  5005               	movf	___lmul@multiplier^0,w,c
  6079  002566  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  6080  002568  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  6081  00256A  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  6082  00256C  A4D8               	btfss	status,2,c
  6083  00256E  EFBB  F012         	goto	u2381
  6084  002572  EFBD  F012         	goto	u2380
  6085  002576                     u2381:
  6086  002576  EF99  F012         	goto	l3559
  6087  00257A                     u2380:
  6088  00257A  C00D  F005         	movff	___lmul@product,?___lmul
  6089  00257E  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  6090  002582  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  6091  002586  C010  F008         	movff	___lmul@product+3,?___lmul+3
  6092  00258A  0012               	return		;funcret
  6093  00258C                     __end_of___lmul:
  6094                           	opt callstack 0
  6095                           
  6096 ;; *************** function _init *****************
  6097 ;; Defined at:
  6098 ;;		line 15 in file "init.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;		None
  6103 ;; Return value:  Size  Location     Type
  6104 ;;                  1    wreg      void 
  6105 ;; Registers used:
  6106 ;;		wreg, status,2
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6112 ;;      Params:         0       0       0       0       0       0       0       0       0
  6113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6114 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6115 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6116 ;;Total ram usage:        2 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    2
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_main
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text17
  6127  0023D4                     __ptext17:
  6128                           	opt callstack 0
  6129  0023D4                     _init:
  6130                           	opt callstack 28
  6131  0023D4                     
  6132                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  6133  0023D4  9ED3               	bcf	211,7,c	;volatile
  6134  0023D6                     
  6135                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  6136  0023D6  0E70               	movlw	112
  6137  0023D8  12D3               	iorwf	211,f,c	;volatile
  6138                           
  6139                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  6140  0023DA  0EFC               	movlw	-4
  6141  0023DC  16D3               	andwf	211,f,c	;volatile
  6142  0023DE                     
  6143                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  6144  0023DE  8E9B               	bsf	155,7,c	;volatile
  6145                           
  6146                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  6147  0023E0  0EE0               	movlw	-32
  6148  0023E2  169B               	andwf	155,f,c	;volatile
  6149  0023E4                     
  6150                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  6151  0023E4  0E07               	movlw	7
  6152  0023E6  6E06               	movwf	(??_init+1)^0,c
  6153  0023E8  0E17               	movlw	23
  6154  0023EA  6E05               	movwf	??_init^0,c
  6155  0023EC  0E6A               	movlw	106
  6156  0023EE                     u4547:
  6157  0023EE  2EE8               	decfsz	wreg,f,c
  6158  0023F0  D7FE               	bra	u4547
  6159  0023F2  2E05               	decfsz	??_init^0,f,c
  6160  0023F4  D7FC               	bra	u4547
  6161  0023F6  2E06               	decfsz	(??_init+1)^0,f,c
  6162  0023F8  D7FA               	bra	u4547
  6163  0023FA  D000               	nop2	
  6164  0023FC                     
  6165                           ;init.c: 27: UCONbits.USBEN = 0;
  6166  0023FC  966D               	bcf	109,3,c	;volatile
  6167  0023FE                     
  6168                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  6169  0023FE  866F               	bsf	111,3,c	;volatile
  6170  002400                     
  6171                           ;init.c: 41: TRISA = 0b00001011;
  6172  002400  0E0B               	movlw	11
  6173  002402  6E92               	movwf	146,c	;volatile
  6174  002404                     
  6175                           ;init.c: 42: LATA = 0x00;
  6176  002404  0E00               	movlw	0
  6177  002406  6E89               	movwf	137,c	;volatile
  6178  002408                     
  6179                           ;init.c: 48: RBPU = 1;
  6180  002408  8EF1               	bsf	4081,7,c	;volatile
  6181  00240A                     
  6182                           ;init.c: 49: TRISB = 0x00;
  6183  00240A  0E00               	movlw	0
  6184  00240C  6E93               	movwf	147,c	;volatile
  6185  00240E                     
  6186                           ;init.c: 50: LATB = 0x00;
  6187  00240E  0E00               	movlw	0
  6188  002410  6E8A               	movwf	138,c	;volatile
  6189  002412                     
  6190                           ;init.c: 63: TRISC = 0b11110000;
  6191  002412  0EF0               	movlw	240
  6192  002414  6E94               	movwf	148,c	;volatile
  6193  002416                     
  6194                           ;init.c: 64: LATC = 0x00;
  6195  002416  0E00               	movlw	0
  6196  002418  6E8B               	movwf	139,c	;volatile
  6197  00241A                     
  6198                           ;init.c: 67: ADCON0bits.ADON = 0;
  6199  00241A  90C2               	bcf	194,0,c	;volatile
  6200  00241C                     
  6201                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  6202  00241C  0ECF               	movlw	-49
  6203  00241E  16C1               	andwf	193,f,c	;volatile
  6204  002420                     
  6205                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  6206  002420  50C1               	movf	193,w,c	;volatile
  6207  002422  0BF0               	andlw	-16
  6208  002424  090E               	iorlw	14
  6209  002426  6EC1               	movwf	193,c	;volatile
  6210  002428                     
  6211                           ;init.c: 70: ADCON2bits.ADFM = 1;
  6212  002428  8EC0               	bsf	192,7,c	;volatile
  6213  00242A                     
  6214                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  6215  00242A  0EC7               	movlw	-57
  6216  00242C  16C0               	andwf	192,f,c	;volatile
  6217  00242E                     
  6218                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  6219  00242E  50C0               	movf	192,w,c	;volatile
  6220  002430  0BF8               	andlw	-8
  6221  002432  0902               	iorlw	2
  6222  002434  6EC0               	movwf	192,c	;volatile
  6223  002436                     
  6224                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  6225  002436  0ECF               	movlw	-49
  6226  002438  16B1               	andwf	177,f,c	;volatile
  6227  00243A                     
  6228                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  6229  00243A  92B1               	bcf	177,1,c	;volatile
  6230  00243C                     
  6231                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  6232  00243C  80B1               	bsf	177,0,c	;volatile
  6233  00243E                     
  6234                           ;init.c: 78: TMR3IE = 1;
  6235  00243E  82A0               	bsf	4000,1,c	;volatile
  6236  002440                     
  6237                           ;init.c: 81: PEIE = 1;
  6238  002440  8CF2               	bsf	4082,6,c	;volatile
  6239  002442                     
  6240                           ;init.c: 82: GIE = 1;
  6241  002442  8EF2               	bsf	4082,7,c	;volatile
  6242  002444  0012               	return		;funcret
  6243  002446                     __end_of_init:
  6244                           	opt callstack 0
  6245                           
  6246 ;; *************** function _TFT_Init *****************
  6247 ;; Defined at:
  6248 ;;		line 72 in file "TFT.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;		None
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  i               2   37[COMRAM] unsigned int 
  6253 ;;  cmd             2   35[COMRAM] unsigned int 
  6254 ;;  initSequence    2   33[COMRAM] unsigned int 
  6255 ;;  data            2   31[COMRAM] unsigned int 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6265 ;;      Params:         0       0       0       0       0       0       0       0       0
  6266 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6267 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6268 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6269 ;;Total ram usage:       10 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    5
  6272 ;; This function calls:
  6273 ;;		_TFT_FillScreen
  6274 ;;		_TFT_FullScreen
  6275 ;;		_TFT_Reset
  6276 ;;		_TFT_WriteRegister
  6277 ;; This function is called by:
  6278 ;;		_main
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text18
  6283  001762                     __ptext18:
  6284                           	opt callstack 0
  6285  001762                     _TFT_Init:
  6286                           	opt callstack 25
  6287  001762                     
  6288                           ;TFT.c: 73: TFT_Reset();
  6289  001762  ECBA  F015         	call	_TFT_Reset	;wreg free
  6290  001766                     
  6291                           ;TFT.c: 74: _delay((unsigned long)((200)*(48000000/4000.0)));
  6292  001766  0E0D               	movlw	13
  6293  001768  6E1F               	movwf	(??_TFT_Init+1)^0,c
  6294  00176A  0E2D               	movlw	45
  6295  00176C  6E1E               	movwf	??_TFT_Init^0,c
  6296  00176E  0ED8               	movlw	216
  6297  001770                     u4557:
  6298  001770  2EE8               	decfsz	wreg,f,c
  6299  001772  D7FE               	bra	u4557
  6300  001774  2E1E               	decfsz	??_TFT_Init^0,f,c
  6301  001776  D7FC               	bra	u4557
  6302  001778  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  6303  00177A  D7FA               	bra	u4557
  6304  00177C                     
  6305                           ;TFT.c: 77: uint16_t i=0, cmd, data;
  6306  00177C  0E00               	movlw	0
  6307  00177E  6E27               	movwf	(TFT_Init@i+1)^0,c
  6308  001780  0E00               	movlw	0
  6309  001782  6E26               	movwf	TFT_Init@i^0,c
  6310  001784                     
  6311                           ;TFT.c: 78: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  6312  001784  0E00               	movlw	0
  6313  001786  6E23               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  6314  001788  0E66               	movlw	102
  6315  00178A  6E22               	movwf	TFT_Init@initSequenceSize^0,c
  6316                           
  6317                           ;TFT.c: 79: while(i != initSequenceSize) {
  6318  00178C  EF0B  F00C         	goto	l4273
  6319  001790                     l4261:
  6320                           
  6321                           ;TFT.c: 80: cmd = TFT_Init_Sequence[i++];
  6322  001790  90D8               	bcf	status,0,c
  6323  001792  3426               	rlcf	TFT_Init@i^0,w,c
  6324  001794  6EF6               	movwf	tblptrl,c
  6325  001796  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  6326  001798  6EF7               	movwf	tblptrh,c
  6327  00179A  0EF1               	movlw	low _TFT_Init_Sequence
  6328  00179C  26F6               	addwf	tblptrl,f,c
  6329  00179E  0E5C               	movlw	high _TFT_Init_Sequence
  6330  0017A0  22F7               	addwfc	tblptrh,f,c
  6331  0017A2                     	if	0	;There are less than 3 active tblptr bytes
  6332  0017A2                     	endif
  6333  0017A2  0009               	tblrd		*+
  6334  0017A4  CFF5 F024          	movff	tablat,TFT_Init@cmd
  6335  0017A8  000A               	tblrd		*-
  6336  0017AA  CFF5 F025          	movff	tablat,TFT_Init@cmd+1
  6337  0017AE  4A26               	infsnz	TFT_Init@i^0,f,c
  6338  0017B0  2A27               	incf	(TFT_Init@i+1)^0,f,c
  6339  0017B2                     
  6340                           ;TFT.c: 81: data = TFT_Init_Sequence[i++];
  6341  0017B2  90D8               	bcf	status,0,c
  6342  0017B4  3426               	rlcf	TFT_Init@i^0,w,c
  6343  0017B6  6EF6               	movwf	tblptrl,c
  6344  0017B8  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  6345  0017BA  6EF7               	movwf	tblptrh,c
  6346  0017BC  0EF1               	movlw	low _TFT_Init_Sequence
  6347  0017BE  26F6               	addwf	tblptrl,f,c
  6348  0017C0  0E5C               	movlw	high _TFT_Init_Sequence
  6349  0017C2  22F7               	addwfc	tblptrh,f,c
  6350  0017C4                     	if	0	;There are less than 3 active tblptr bytes
  6351  0017C4                     	endif
  6352  0017C4  0009               	tblrd		*+
  6353  0017C6  CFF5 F020          	movff	tablat,TFT_Init@data
  6354  0017CA  000A               	tblrd		*-
  6355  0017CC  CFF5 F021          	movff	tablat,TFT_Init@data+1
  6356  0017D0  4A26               	infsnz	TFT_Init@i^0,f,c
  6357  0017D2  2A27               	incf	(TFT_Init@i+1)^0,f,c
  6358  0017D4                     
  6359                           ;TFT.c: 82: if(cmd == 0xFFFF) {
  6360  0017D4  2824               	incf	TFT_Init@cmd^0,w,c
  6361  0017D6  E106               	bnz	u3481
  6362  0017D8  2825               	incf	(TFT_Init@cmd+1)^0,w,c
  6363  0017DA  A4D8               	btfss	status,2,c
  6364  0017DC  EFF2  F00B         	goto	u3481
  6365  0017E0  EFF4  F00B         	goto	u3480
  6366  0017E4                     u3481:
  6367  0017E4  EF01  F00C         	goto	l4271
  6368  0017E8                     u3480:
  6369  0017E8                     
  6370                           ;TFT.c: 83: _delay((unsigned long)((200)*(48000000/4000.0)));
  6371  0017E8  0E0D               	movlw	13
  6372  0017EA  6E1F               	movwf	(??_TFT_Init+1)^0,c
  6373  0017EC  0E2D               	movlw	45
  6374  0017EE  6E1E               	movwf	??_TFT_Init^0,c
  6375  0017F0  0ED8               	movlw	216
  6376  0017F2                     u4567:
  6377  0017F2  2EE8               	decfsz	wreg,f,c
  6378  0017F4  D7FE               	bra	u4567
  6379  0017F6  2E1E               	decfsz	??_TFT_Init^0,f,c
  6380  0017F8  D7FC               	bra	u4567
  6381  0017FA  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  6382  0017FC  D7FA               	bra	u4567
  6383                           
  6384                           ;TFT.c: 84: } else {
  6385  0017FE  EF0B  F00C         	goto	l4273
  6386  001802                     l4271:
  6387                           
  6388                           ;TFT.c: 85: TFT_WriteRegister(cmd, data);
  6389  001802  C024  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  6390  001806  C025  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  6391  00180A  C020  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  6392  00180E  C021  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  6393  001812  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  6394  001816                     l4273:
  6395  001816  5022               	movf	TFT_Init@initSequenceSize^0,w,c
  6396  001818  1826               	xorwf	TFT_Init@i^0,w,c
  6397  00181A  E107               	bnz	u3491
  6398  00181C  5023               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  6399  00181E  1827               	xorwf	(TFT_Init@i+1)^0,w,c
  6400  001820  A4D8               	btfss	status,2,c
  6401  001822  EF15  F00C         	goto	u3491
  6402  001826  EF17  F00C         	goto	u3490
  6403  00182A                     u3491:
  6404  00182A  EFC8  F00B         	goto	l4261
  6405  00182E                     u3490:
  6406  00182E                     
  6407                           ;TFT.c: 86: };TFT.c: 87: };TFT.c: 90: TFT_FullScreen();
  6408  00182E  EC87  F015         	call	_TFT_FullScreen	;wreg free
  6409  001832                     
  6410                           ;TFT.c: 91: TFT_FillScreen(0x0000);
  6411  001832  0E00               	movlw	0
  6412  001834  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  6413  001836  0E00               	movlw	0
  6414  001838  6E1C               	movwf	TFT_FillScreen@color^0,c
  6415  00183A  EC4E  F014         	call	_TFT_FillScreen	;wreg free
  6416  00183E  0012               	return		;funcret
  6417  001840                     __end_of_TFT_Init:
  6418                           	opt callstack 0
  6419                           
  6420 ;; *************** function _TFT_Reset *****************
  6421 ;; Defined at:
  6422 ;;		line 46 in file "TFT.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;		None
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  1    wreg      void 
  6429 ;; Registers used:
  6430 ;;		wreg, status,2
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0
  6437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6438 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6439 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6440 ;;Total ram usage:        1 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    2
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_TFT_Init
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text19
  6451  002B74                     __ptext19:
  6452                           	opt callstack 0
  6453  002B74                     _TFT_Reset:
  6454                           	opt callstack 27
  6455  002B74                     
  6456                           ;TFT.c: 47: TRISB = 0x00;;
  6457  002B74  0E00               	movlw	0
  6458  002B76  6E93               	movwf	147,c	;volatile
  6459  002B78                     
  6460                           ;TFT.c: 48: PORTCbits.RC0 = 1;;
  6461  002B78  8082               	bsf	130,0,c	;volatile
  6462  002B7A                     
  6463                           ;TFT.c: 49: PORTAbits.RA5 = 1;;
  6464  002B7A  8A80               	bsf	128,5,c	;volatile
  6465  002B7C                     
  6466                           ;TFT.c: 50: PORTAbits.RA4 = 1;;
  6467  002B7C  8880               	bsf	128,4,c	;volatile
  6468  002B7E                     
  6469                           ;TFT.c: 51: PORTCbits.RC2 = 0;;
  6470  002B7E  9482               	bcf	130,2,c	;volatile
  6471  002B80                     
  6472                           ;TFT.c: 52: _delay((unsigned long)((2)*(48000000/4000.0)));
  6473  002B80  0E20               	movlw	32
  6474  002B82  6E05               	movwf	??_TFT_Reset^0,c
  6475  002B84  0E2A               	movlw	42
  6476  002B86                     u4577:
  6477  002B86  2EE8               	decfsz	wreg,f,c
  6478  002B88  D7FE               	bra	u4577
  6479  002B8A  2E05               	decfsz	??_TFT_Reset^0,f,c
  6480  002B8C  D7FC               	bra	u4577
  6481  002B8E                     
  6482                           ;TFT.c: 53: PORTCbits.RC2 = 1;;
  6483  002B8E  8482               	bsf	130,2,c	;volatile
  6484  002B90  0012               	return		;funcret
  6485  002B92                     __end_of_TFT_Reset:
  6486                           	opt callstack 0
  6487                           
  6488 ;; *************** function _Ecg_Init *****************
  6489 ;; Defined at:
  6490 ;;		line 12 in file "ecg.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;		None
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      void 
  6497 ;; Registers used:
  6498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6504 ;;      Params:         0       0       0       0       0       0       0       0       0
  6505 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6507 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6508 ;;Total ram usage:        0 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    9
  6511 ;; This function calls:
  6512 ;;		_Ecg_Background_Leads_Failure
  6513 ;;		_Ecg_Background_Leads_Ok
  6514 ;;		_Ecg_CheckLeads
  6515 ;; This function is called by:
  6516 ;;		_main
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text20
  6521  002AB8                     __ptext20:
  6522                           	opt callstack 0
  6523  002AB8                     _Ecg_Init:
  6524                           	opt callstack 21
  6525  002AB8                     
  6526                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  6527  002AB8  ECB6  F013         	call	_Ecg_CheckLeads	;wreg free
  6528  002ABC  5005               	movf	?_Ecg_CheckLeads^0,w,c
  6529  002ABE  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  6530  002AC0  A4D8               	btfss	status,2,c
  6531  002AC2  EF65  F015         	goto	u3501
  6532  002AC6  EF67  F015         	goto	u3500
  6533  002ACA                     u3501:
  6534  002ACA  EF6B  F015         	goto	l4291
  6535  002ACE                     u3500:
  6536  002ACE                     
  6537                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  6538  002ACE  EC73  F011         	call	_Ecg_Background_Leads_Ok	;wreg free
  6539                           
  6540                           ;ecg.c: 15: } else {
  6541  002AD2  EF6D  F015         	goto	l4293
  6542  002AD6                     l4291:
  6543                           
  6544                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  6545  002AD6  ECD2  F014         	call	_Ecg_Background_Leads_Failure	;wreg free
  6546  002ADA                     l4293:
  6547                           
  6548                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  6549  002ADA  0E00               	movlw	0
  6550  002ADC  0100               	movlb	0	; () banked
  6551  002ADE  6FBC               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  6552  002AE0                     
  6553                           ; BSR set to: 0
  6554                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  6555  002AE0  0E00               	movlw	0
  6556  002AE2  6FC1               	movwf	(_ECG_BUFFER+4)& (0+255),b
  6557  002AE4                     
  6558                           ; BSR set to: 0
  6559                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  6560  002AE4  8DC2               	bsf	_ECG_HEARTRATE& (0+255),6,b
  6561  002AE6                     
  6562                           ; BSR set to: 0
  6563  002AE6  0012               	return		;funcret
  6564  002AE8                     __end_of_Ecg_Init:
  6565                           	opt callstack 0
  6566                           
  6567 ;; *************** function _Ecg_CheckLeads *****************
  6568 ;; Defined at:
  6569 ;;		line 141 in file "ecg.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;		None
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  2    4[COMRAM] unsigned int 
  6576 ;; Registers used:
  6577 ;;		wreg, status,2, status,0
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6583 ;;      Params:         2       0       0       0       0       0       0       0       0
  6584 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6585 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6586 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6587 ;;Total ram usage:        4 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    2
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_Ecg_Init
  6594 ;;		_Ecg_ProcessEcg
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text21
  6599  00276C                     __ptext21:
  6600                           	opt callstack 0
  6601  00276C                     _Ecg_CheckLeads:
  6602                           	opt callstack 27
  6603  00276C                     
  6604                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  6605  00276C  0E00               	movlw	0
  6606  00276E  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  6607  002770                     
  6608                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  6609  002770  AA82               	btfss	130,5,c	;volatile
  6610  002772  EFBD  F013         	goto	u3441
  6611  002776  EFBF  F013         	goto	u3440
  6612  00277A                     u3441:
  6613  00277A  EFC0  F013         	goto	l4229
  6614  00277E                     u3440:
  6615  00277E  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  6616  002780                     l4229:
  6617                           
  6618                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  6619  002780  A882               	btfss	130,4,c	;volatile
  6620  002782  EFC5  F013         	goto	u3451
  6621  002786  EFC7  F013         	goto	u3450
  6622  00278A                     u3451:
  6623  00278A  EFC8  F013         	goto	l4233
  6624  00278E                     u3450:
  6625  00278E  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  6626  002790                     l4233:
  6627                           
  6628                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  6629  002790  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  6630  002792  B4D8               	btfsc	status,2,c
  6631  002794  EFCE  F013         	goto	u3461
  6632  002798  EFD2  F013         	goto	u3460
  6633  00279C                     u3461:
  6634  00279C  6A07               	clrf	??_Ecg_CheckLeads^0,c
  6635  00279E  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  6636  0027A0  EFD3  F013         	goto	u3478
  6637  0027A4                     u3460:
  6638  0027A4  6A07               	clrf	??_Ecg_CheckLeads^0,c
  6639  0027A6                     u3478:
  6640  0027A6  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  6641  0027A8  5056               	movf	_ECG_FLAGS^0,w,c
  6642  0027AA  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  6643  0027AC  0BFD               	andlw	-3
  6644  0027AE  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  6645  0027B0  6E56               	movwf	_ECG_FLAGS^0,c
  6646  0027B2                     
  6647                           ;ecg.c: 146: return leadsStatus;
  6648  0027B2  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  6649  0027B6  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  6650  0027B8  0012               	return		;funcret
  6651  0027BA                     __end_of_Ecg_CheckLeads:
  6652                           	opt callstack 0
  6653                           
  6654 ;; *************** function _Ecg_Background_Leads_Ok *****************
  6655 ;; Defined at:
  6656 ;;		line 180 in file "ecg.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;		None
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6670 ;;      Params:         0       0       0       0       0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6673 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6674 ;;Total ram usage:        0 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:    8
  6677 ;; This function calls:
  6678 ;;		_TFT_DrawLine
  6679 ;;		_TFT_DrawString
  6680 ;;		_TFT_FillScreen
  6681 ;; This function is called by:
  6682 ;;		_Ecg_Init
  6683 ;;		_Ecg_ProcessEcg
  6684 ;; This function uses a non-reentrant model
  6685 ;;
  6686                           
  6687                           	psect	text22
  6688  0022E6                     __ptext22:
  6689                           	opt callstack 0
  6690  0022E6                     _Ecg_Background_Leads_Ok:
  6691                           	opt callstack 21
  6692  0022E6                     
  6693                           ;ecg.c: 181: TFT_FillScreen(0x0000);
  6694  0022E6  0E00               	movlw	0
  6695  0022E8  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  6696  0022EA  0E00               	movlw	0
  6697  0022EC  6E1C               	movwf	TFT_FillScreen@color^0,c
  6698  0022EE  EC4E  F014         	call	_TFT_FillScreen	;wreg free
  6699  0022F2                     
  6700                           ;ecg.c: 182: TFT_DrawString(8, (400 - 10), "Frequenza:", 0xFFFF, 0x0000, 2);
  6701  0022F2  0E00               	movlw	0
  6702  0022F4  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  6703  0022F6  0E08               	movlw	8
  6704  0022F8  6E3F               	movwf	TFT_DrawString@x^0,c
  6705  0022FA  0E01               	movlw	1
  6706  0022FC  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  6707  0022FE  0E86               	movlw	134
  6708  002300  6E41               	movwf	TFT_DrawString@y^0,c
  6709  002302  0E6F               	movlw	low STR_20
  6710  002304  6E43               	movwf	TFT_DrawString@str^0,c
  6711  002306  0E5F               	movlw	high STR_20
  6712  002308  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  6713  00230A  0EFF               	movlw	255
  6714  00230C  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  6715  00230E  6845               	setf	TFT_DrawString@color^0,c
  6716  002310  0E00               	movlw	0
  6717  002312  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  6718  002314  0E00               	movlw	0
  6719  002316  6E47               	movwf	TFT_DrawString@bg^0,c
  6720  002318  0E02               	movlw	2
  6721  00231A  6E49               	movwf	TFT_DrawString@size^0,c
  6722  00231C  ECD9  F00E         	call	_TFT_DrawString	;wreg free
  6723  002320                     
  6724                           ;ecg.c: 183: TFT_DrawLine((33 - 1), 0, (33 - 1), 400, 0xFFFF);
  6725  002320  0E00               	movlw	0
  6726  002322  6E14               	movwf	(TFT_DrawLine@x0+1)^0,c
  6727  002324  0E20               	movlw	32
  6728  002326  6E13               	movwf	TFT_DrawLine@x0^0,c
  6729  002328  0E00               	movlw	0
  6730  00232A  6E16               	movwf	(TFT_DrawLine@y0+1)^0,c
  6731  00232C  0E00               	movlw	0
  6732  00232E  6E15               	movwf	TFT_DrawLine@y0^0,c
  6733  002330  0E00               	movlw	0
  6734  002332  6E18               	movwf	(TFT_DrawLine@x1+1)^0,c
  6735  002334  0E20               	movlw	32
  6736  002336  6E17               	movwf	TFT_DrawLine@x1^0,c
  6737  002338  0E01               	movlw	1
  6738  00233A  6E1A               	movwf	(TFT_DrawLine@y1+1)^0,c
  6739  00233C  0E90               	movlw	144
  6740  00233E  6E19               	movwf	TFT_DrawLine@y1^0,c
  6741  002340  0EFF               	movlw	255
  6742  002342  6E1C               	movwf	(TFT_DrawLine@color+1)^0,c
  6743  002344  681B               	setf	TFT_DrawLine@color^0,c
  6744  002346  ECCC  F006         	call	_TFT_DrawLine	;wreg free
  6745  00234A                     
  6746                           ;ecg.c: 184: Ecg_Y = 400 - 1;
  6747  00234A  0E01               	movlw	1
  6748  00234C  6E59               	movwf	(_Ecg_Y+1)^0,c
  6749  00234E  0E8F               	movlw	143
  6750  002350  6E58               	movwf	_Ecg_Y^0,c
  6751  002352                     
  6752                           ;ecg.c: 185: Ecg_Yold = 400 - 1;
  6753  002352  0E01               	movlw	1
  6754  002354  0100               	movlb	0	; () banked
  6755  002356  6FCF               	movwf	(_Ecg_Yold+1)& (0+255),b
  6756  002358  0E8F               	movlw	143
  6757  00235A  6FCE               	movwf	_Ecg_Yold& (0+255),b
  6758  00235C                     
  6759                           ; BSR set to: 0
  6760  00235C  0012               	return		;funcret
  6761  00235E                     __end_of_Ecg_Background_Leads_Ok:
  6762                           	opt callstack 0
  6763                           
  6764 ;; *************** function _TFT_DrawLine *****************
  6765 ;; Defined at:
  6766 ;;		line 100 in file "TFT.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  x0              2   18[COMRAM] int 
  6769 ;;  y0              2   20[COMRAM] int 
  6770 ;;  x1              2   22[COMRAM] int 
  6771 ;;  y1              2   24[COMRAM] int 
  6772 ;;  color           2   26[COMRAM] unsigned int 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  t               2   37[COMRAM] int 
  6775 ;;  t               2   35[COMRAM] int 
  6776 ;;  t               2   33[COMRAM] int 
  6777 ;;  t               2   31[COMRAM] int 
  6778 ;;  dx              2   47[COMRAM] int 
  6779 ;;  steep           2   45[COMRAM] int 
  6780 ;;  err             2   43[COMRAM] int 
  6781 ;;  ystep           2   41[COMRAM] int 
  6782 ;;  dy              2   39[COMRAM] int 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  1    wreg      void 
  6785 ;; Registers used:
  6786 ;;		wreg, status,2, status,0, cstack
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6792 ;;      Params:        10       0       0       0       0       0       0       0       0
  6793 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6794 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6795 ;;      Totals:        31       0       0       0       0       0       0       0       0
  6796 ;;Total ram usage:       31 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    4
  6799 ;; This function calls:
  6800 ;;		_TFT_DrawPixel
  6801 ;;		___awdiv
  6802 ;;		_abs
  6803 ;; This function is called by:
  6804 ;;		_Ecg_Background_Leads_Ok
  6805 ;;		_Ecg_Draw
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text23
  6810  000D98                     __ptext23:
  6811                           	opt callstack 0
  6812  000D98                     _TFT_DrawLine:
  6813                           	opt callstack 24
  6814  000D98                     
  6815                           ;TFT.c: 101: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  6816  000D98  5013               	movf	TFT_DrawLine@x0^0,w,c
  6817  000D9A  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6818  000D9C  6E05               	movwf	abs@a^0,c
  6819  000D9E  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6820  000DA0  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6821  000DA2  6E06               	movwf	(abs@a+1)^0,c
  6822  000DA4  EC29  F015         	call	_abs	;wreg free
  6823  000DA8  C005  F01D         	movff	?_abs,??_TFT_DrawLine
  6824  000DAC  C006  F01E         	movff	?_abs+1,??_TFT_DrawLine+1
  6825  000DB0  5015               	movf	TFT_DrawLine@y0^0,w,c
  6826  000DB2  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  6827  000DB4  6E05               	movwf	abs@a^0,c
  6828  000DB6  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6829  000DB8  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6830  000DBA  6E06               	movwf	(abs@a+1)^0,c
  6831  000DBC  EC29  F015         	call	_abs	;wreg free
  6832  000DC0  5005               	movf	?_abs^0,w,c
  6833  000DC2  5C1D               	subwf	??_TFT_DrawLine^0,w,c
  6834  000DC4  501E               	movf	(??_TFT_DrawLine+1)^0,w,c
  6835  000DC6  0A80               	xorlw	128
  6836  000DC8  6E1F               	movwf	(??_TFT_DrawLine+2)^0,c
  6837  000DCA  5006               	movf	(?_abs+1)^0,w,c
  6838  000DCC  0A80               	xorlw	128
  6839  000DCE  581F               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  6840  000DD0  A0D8               	btfss	status,0,c
  6841  000DD2  EFED  F006         	goto	u3201
  6842  000DD6  EFF0  F006         	goto	u3200
  6843  000DDA                     u3201:
  6844  000DDA  0E01               	movlw	1
  6845  000DDC  EFF1  F006         	goto	u3210
  6846  000DE0                     u3200:
  6847  000DE0  0E00               	movlw	0
  6848  000DE2                     u3210:
  6849  000DE2  6E2E               	movwf	TFT_DrawLine@steep^0,c
  6850  000DE4  6A2F               	clrf	(TFT_DrawLine@steep+1)^0,c
  6851  000DE6                     
  6852                           ;TFT.c: 102: if(steep) {
  6853  000DE6  502E               	movf	TFT_DrawLine@steep^0,w,c
  6854  000DE8  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6855  000DEA  B4D8               	btfsc	status,2,c
  6856  000DEC  EFFA  F006         	goto	u3221
  6857  000DF0  EFFC  F006         	goto	u3220
  6858  000DF4                     u3221:
  6859  000DF4  EF14  F007         	goto	l4059
  6860  000DF8                     u3220:
  6861  000DF8                     
  6862                           ;TFT.c: 103: { int16_t t = x0; x0 = y0; y0 = t; };
  6863  000DF8  C013  F020         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  6864  000DFC  C014  F021         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  6865  000E00  C015  F013         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  6866  000E04  C016  F014         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  6867  000E08  C020  F015         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  6868  000E0C  C021  F016         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  6869                           
  6870                           ;TFT.c: 104: { int16_t t = x1; x1 = y1; y1 = t; };
  6871  000E10  C017  F022         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_792
  6872  000E14  C018  F023         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_792+1
  6873  000E18  C019  F017         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  6874  000E1C  C01A  F018         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  6875  000E20  C022  F019         	movff	TFT_DrawLine@t_792,TFT_DrawLine@y1
  6876  000E24  C023  F01A         	movff	TFT_DrawLine@t_792+1,TFT_DrawLine@y1+1
  6877  000E28                     l4059:
  6878                           
  6879                           ;TFT.c: 105: };TFT.c: 106: if(x0 > x1) {
  6880  000E28  5013               	movf	TFT_DrawLine@x0^0,w,c
  6881  000E2A  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6882  000E2C  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6883  000E2E  0A80               	xorlw	128
  6884  000E30  6E1D               	movwf	??_TFT_DrawLine^0,c
  6885  000E32  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6886  000E34  0A80               	xorlw	128
  6887  000E36  581D               	subwfb	??_TFT_DrawLine^0,w,c
  6888  000E38  B0D8               	btfsc	status,0,c
  6889  000E3A  EF21  F007         	goto	u3231
  6890  000E3E  EF23  F007         	goto	u3230
  6891  000E42                     u3231:
  6892  000E42  EF3B  F007         	goto	l4063
  6893  000E46                     u3230:
  6894  000E46                     
  6895                           ;TFT.c: 107: { int16_t t = x0; x0 = x1; x1 = t; };
  6896  000E46  C013  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_793
  6897  000E4A  C014  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_793+1
  6898  000E4E  C017  F013         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  6899  000E52  C018  F014         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  6900  000E56  C024  F017         	movff	TFT_DrawLine@t_793,TFT_DrawLine@x1
  6901  000E5A  C025  F018         	movff	TFT_DrawLine@t_793+1,TFT_DrawLine@x1+1
  6902                           
  6903                           ;TFT.c: 108: { int16_t t = y0; y0 = y1; y1 = t; };
  6904  000E5E  C015  F026         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_794
  6905  000E62  C016  F027         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_794+1
  6906  000E66  C019  F015         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  6907  000E6A  C01A  F016         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  6908  000E6E  C026  F019         	movff	TFT_DrawLine@t_794,TFT_DrawLine@y1
  6909  000E72  C027  F01A         	movff	TFT_DrawLine@t_794+1,TFT_DrawLine@y1+1
  6910  000E76                     l4063:
  6911                           
  6912                           ;TFT.c: 109: };TFT.c: 111: int16_t dx, dy;;TFT.c: 112: dx = x1 - x0;
  6913  000E76  5013               	movf	TFT_DrawLine@x0^0,w,c
  6914  000E78  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6915  000E7A  6E30               	movwf	TFT_DrawLine@dx^0,c
  6916  000E7C  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6917  000E7E  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6918  000E80  6E31               	movwf	(TFT_DrawLine@dx+1)^0,c
  6919  000E82                     
  6920                           ;TFT.c: 113: dy = abs(y1 - y0);
  6921  000E82  5015               	movf	TFT_DrawLine@y0^0,w,c
  6922  000E84  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  6923  000E86  6E05               	movwf	abs@a^0,c
  6924  000E88  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6925  000E8A  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6926  000E8C  6E06               	movwf	(abs@a+1)^0,c
  6927  000E8E  EC29  F015         	call	_abs	;wreg free
  6928  000E92  C005  F028         	movff	?_abs,TFT_DrawLine@dy
  6929  000E96  C006  F029         	movff	?_abs+1,TFT_DrawLine@dy+1
  6930  000E9A                     
  6931                           ;TFT.c: 115: int16_t err = dx / 2;
  6932  000E9A  C030  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  6933  000E9E  C031  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  6934  000EA2  0E00               	movlw	0
  6935  000EA4  6E08               	movwf	(___awdiv@divisor+1)^0,c
  6936  000EA6  0E02               	movlw	2
  6937  000EA8  6E07               	movwf	___awdiv@divisor^0,c
  6938  000EAA  EC65  F00D         	call	___awdiv	;wreg free
  6939  000EAE  C005  F02C         	movff	?___awdiv,TFT_DrawLine@err
  6940  000EB2  C006  F02D         	movff	?___awdiv+1,TFT_DrawLine@err+1
  6941                           
  6942                           ;TFT.c: 116: int16_t ystep;;TFT.c: 118: if(y0 < y1) {
  6943  000EB6  5019               	movf	TFT_DrawLine@y1^0,w,c
  6944  000EB8  5C15               	subwf	TFT_DrawLine@y0^0,w,c
  6945  000EBA  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6946  000EBC  0A80               	xorlw	128
  6947  000EBE  6E1D               	movwf	??_TFT_DrawLine^0,c
  6948  000EC0  501A               	movf	(TFT_DrawLine@y1+1)^0,w,c
  6949  000EC2  0A80               	xorlw	128
  6950  000EC4  581D               	subwfb	??_TFT_DrawLine^0,w,c
  6951  000EC6  B0D8               	btfsc	status,0,c
  6952  000EC8  EF68  F007         	goto	u3241
  6953  000ECC  EF6A  F007         	goto	u3240
  6954  000ED0                     u3241:
  6955  000ED0  EF70  F007         	goto	l251
  6956  000ED4                     u3240:
  6957  000ED4                     
  6958                           ;TFT.c: 119: ystep = 1;
  6959  000ED4  0E00               	movlw	0
  6960  000ED6  6E2B               	movwf	(TFT_DrawLine@ystep+1)^0,c
  6961  000ED8  0E01               	movlw	1
  6962  000EDA  6E2A               	movwf	TFT_DrawLine@ystep^0,c
  6963                           
  6964                           ;TFT.c: 120: } else {
  6965  000EDC  EFB0  F007         	goto	l4085
  6966  000EE0                     l251:
  6967                           
  6968                           ;TFT.c: 121: ystep = -1;
  6969  000EE0  682A               	setf	TFT_DrawLine@ystep^0,c
  6970  000EE2  682B               	setf	(TFT_DrawLine@ystep+1)^0,c
  6971  000EE4  EFB0  F007         	goto	l4085
  6972  000EE8                     l4071:
  6973                           
  6974                           ;TFT.c: 125: if(steep) {
  6975  000EE8  502E               	movf	TFT_DrawLine@steep^0,w,c
  6976  000EEA  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6977  000EEC  B4D8               	btfsc	status,2,c
  6978  000EEE  EF7B  F007         	goto	u3251
  6979  000EF2  EF7D  F007         	goto	u3250
  6980  000EF6                     u3251:
  6981  000EF6  EF8D  F007         	goto	l4075
  6982  000EFA                     u3250:
  6983  000EFA                     
  6984                           ;TFT.c: 126: TFT_DrawPixel(y0, x0, color);
  6985  000EFA  C015  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  6986  000EFE  C016  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  6987  000F02  C013  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  6988  000F06  C014  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  6989  000F0A  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6990  000F0E  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6991  000F12  ECB3  F014         	call	_TFT_DrawPixel	;wreg free
  6992                           
  6993                           ;TFT.c: 127: } else {
  6994  000F16  EF9B  F007         	goto	l4077
  6995  000F1A                     l4075:
  6996                           
  6997                           ;TFT.c: 128: TFT_DrawPixel(x0, y0, color);
  6998  000F1A  C013  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  6999  000F1E  C014  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  7000  000F22  C015  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  7001  000F26  C016  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  7002  000F2A  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  7003  000F2E  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  7004  000F32  ECB3  F014         	call	_TFT_DrawPixel	;wreg free
  7005  000F36                     l4077:
  7006                           
  7007                           ;TFT.c: 129: };TFT.c: 130: err -= dy;
  7008  000F36  5028               	movf	TFT_DrawLine@dy^0,w,c
  7009  000F38  5E2C               	subwf	TFT_DrawLine@err^0,f,c
  7010  000F3A  5029               	movf	(TFT_DrawLine@dy+1)^0,w,c
  7011  000F3C  5A2D               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  7012  000F3E                     
  7013                           ;TFT.c: 131: if(err < 0) {
  7014  000F3E  BE2D               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  7015  000F40  EFA6  F007         	goto	u3260
  7016  000F44  EFA4  F007         	goto	u3261
  7017  000F48                     u3261:
  7018  000F48  EFAE  F007         	goto	l4083
  7019  000F4C                     u3260:
  7020  000F4C                     
  7021                           ;TFT.c: 132: y0 += ystep;
  7022  000F4C  502A               	movf	TFT_DrawLine@ystep^0,w,c
  7023  000F4E  2615               	addwf	TFT_DrawLine@y0^0,f,c
  7024  000F50  502B               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  7025  000F52  2216               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  7026                           
  7027                           ;TFT.c: 133: err += dx;
  7028  000F54  5030               	movf	TFT_DrawLine@dx^0,w,c
  7029  000F56  262C               	addwf	TFT_DrawLine@err^0,f,c
  7030  000F58  5031               	movf	(TFT_DrawLine@dx+1)^0,w,c
  7031  000F5A  222D               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  7032  000F5C                     l4083:
  7033  000F5C  4A13               	infsnz	TFT_DrawLine@x0^0,f,c
  7034  000F5E  2A14               	incf	(TFT_DrawLine@x0+1)^0,f,c
  7035  000F60                     l4085:
  7036  000F60  5013               	movf	TFT_DrawLine@x0^0,w,c
  7037  000F62  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  7038  000F64  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  7039  000F66  0A80               	xorlw	128
  7040  000F68  6E1D               	movwf	??_TFT_DrawLine^0,c
  7041  000F6A  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  7042  000F6C  0A80               	xorlw	128
  7043  000F6E  581D               	subwfb	??_TFT_DrawLine^0,w,c
  7044  000F70  B0D8               	btfsc	status,0,c
  7045  000F72  EFBD  F007         	goto	u3271
  7046  000F76  EFBF  F007         	goto	u3270
  7047  000F7A                     u3271:
  7048  000F7A  EF74  F007         	goto	l4071
  7049  000F7E                     u3270:
  7050  000F7E  0012               	return		;funcret
  7051  000F80                     __end_of_TFT_DrawLine:
  7052                           	opt callstack 0
  7053                           
  7054 ;; *************** function _abs *****************
  7055 ;; Defined at:
  7056 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  7057 ;; Parameters:    Size  Location     Type
  7058 ;;  a               2    4[COMRAM] int 
  7059 ;; Auto vars:     Size  Location     Type
  7060 ;;		None
  7061 ;; Return value:  Size  Location     Type
  7062 ;;                  2    4[COMRAM] int 
  7063 ;; Registers used:
  7064 ;;		wreg, status,2, status,0
  7065 ;; Tracked objects:
  7066 ;;		On entry : 0/0
  7067 ;;		On exit  : 0/0
  7068 ;;		Unchanged: 0/0
  7069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7070 ;;      Params:         2       0       0       0       0       0       0       0       0
  7071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7072 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7073 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7074 ;;Total ram usage:        4 bytes
  7075 ;; Hardware stack levels used:    1
  7076 ;; Hardware stack levels required when called:    2
  7077 ;; This function calls:
  7078 ;;		Nothing
  7079 ;; This function is called by:
  7080 ;;		_TFT_DrawLine
  7081 ;;		_Ecg_ProcessHeartbeat
  7082 ;; This function uses a non-reentrant model
  7083 ;;
  7084                           
  7085                           	psect	text24
  7086  002A52                     __ptext24:
  7087                           	opt callstack 0
  7088  002A52                     _abs:
  7089                           	opt callstack 25
  7090  002A52  BE06               	btfsc	(abs@a+1)^0,7,c
  7091  002A54  EF30  F015         	goto	u2520
  7092  002A58  EF2E  F015         	goto	u2521
  7093  002A5C                     u2521:
  7094  002A5C  EF3E  F015         	goto	l1382
  7095  002A60                     u2520:
  7096  002A60  C005  F007         	movff	abs@a,??_abs
  7097  002A64  C006  F008         	movff	abs@a+1,??_abs+1
  7098  002A68  1E07               	comf	??_abs^0,f,c
  7099  002A6A  1E08               	comf	(??_abs+1)^0,f,c
  7100  002A6C  4A07               	infsnz	??_abs^0,f,c
  7101  002A6E  2A08               	incf	(??_abs+1)^0,f,c
  7102  002A70  C007  F005         	movff	??_abs,?_abs
  7103  002A74  C008  F006         	movff	??_abs+1,?_abs+1
  7104  002A78  EF42  F015         	goto	l1383
  7105  002A7C                     l1382:
  7106  002A7C  C005  F005         	movff	abs@a,?_abs
  7107  002A80  C006  F006         	movff	abs@a+1,?_abs+1
  7108  002A84                     l1383:
  7109  002A84  0012               	return		;funcret
  7110  002A86                     __end_of_abs:
  7111                           	opt callstack 0
  7112                           
  7113 ;; *************** function ___awdiv *****************
  7114 ;; Defined at:
  7115 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  dividend        2    4[COMRAM] int 
  7118 ;;  divisor         2    6[COMRAM] int 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  quotient        2   10[COMRAM] int 
  7121 ;;  sign            1    9[COMRAM] unsigned char 
  7122 ;;  counter         1    8[COMRAM] unsigned char 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  2    4[COMRAM] int 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7132 ;;      Params:         4       0       0       0       0       0       0       0       0
  7133 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7135 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7136 ;;Total ram usage:        8 bytes
  7137 ;; Hardware stack levels used:    1
  7138 ;; Hardware stack levels required when called:    2
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_TFT_DrawLine
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text25
  7147  001ACA                     __ptext25:
  7148                           	opt callstack 0
  7149  001ACA                     ___awdiv:
  7150                           	opt callstack 25
  7151  001ACA  0E00               	movlw	0
  7152  001ACC  6E0A               	movwf	___awdiv@sign^0,c
  7153  001ACE  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7154  001AD0  EF6E  F00D         	goto	u2780
  7155  001AD4  EF6C  F00D         	goto	u2781
  7156  001AD8                     u2781:
  7157  001AD8  EF74  F00D         	goto	l3781
  7158  001ADC                     u2780:
  7159  001ADC  6C07               	negf	___awdiv@divisor^0,c
  7160  001ADE  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7161  001AE0  B0D8               	btfsc	status,0,c
  7162  001AE2  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7163  001AE4  0E01               	movlw	1
  7164  001AE6  6E0A               	movwf	___awdiv@sign^0,c
  7165  001AE8                     l3781:
  7166  001AE8  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7167  001AEA  EF7B  F00D         	goto	u2790
  7168  001AEE  EF79  F00D         	goto	u2791
  7169  001AF2                     u2791:
  7170  001AF2  EF81  F00D         	goto	l3787
  7171  001AF6                     u2790:
  7172  001AF6  6C05               	negf	___awdiv@dividend^0,c
  7173  001AF8  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7174  001AFA  B0D8               	btfsc	status,0,c
  7175  001AFC  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7176  001AFE  0E01               	movlw	1
  7177  001B00  1A0A               	xorwf	___awdiv@sign^0,f,c
  7178  001B02                     l3787:
  7179  001B02  0E00               	movlw	0
  7180  001B04  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7181  001B06  0E00               	movlw	0
  7182  001B08  6E0B               	movwf	___awdiv@quotient^0,c
  7183  001B0A  5007               	movf	___awdiv@divisor^0,w,c
  7184  001B0C  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7185  001B0E  B4D8               	btfsc	status,2,c
  7186  001B10  EF8C  F00D         	goto	u2801
  7187  001B14  EF8E  F00D         	goto	u2800
  7188  001B18                     u2801:
  7189  001B18  EFB6  F00D         	goto	l3809
  7190  001B1C                     u2800:
  7191  001B1C  0E01               	movlw	1
  7192  001B1E  6E09               	movwf	___awdiv@counter^0,c
  7193  001B20  EF96  F00D         	goto	l3795
  7194  001B24                     l3793:
  7195  001B24  90D8               	bcf	status,0,c
  7196  001B26  3607               	rlcf	___awdiv@divisor^0,f,c
  7197  001B28  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7198  001B2A  2A09               	incf	___awdiv@counter^0,f,c
  7199  001B2C                     l3795:
  7200  001B2C  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7201  001B2E  EF9B  F00D         	goto	u2811
  7202  001B32  EF9D  F00D         	goto	u2810
  7203  001B36                     u2811:
  7204  001B36  EF92  F00D         	goto	l3793
  7205  001B3A                     u2810:
  7206  001B3A                     l3797:
  7207  001B3A  90D8               	bcf	status,0,c
  7208  001B3C  360B               	rlcf	___awdiv@quotient^0,f,c
  7209  001B3E  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7210  001B40  5007               	movf	___awdiv@divisor^0,w,c
  7211  001B42  5C05               	subwf	___awdiv@dividend^0,w,c
  7212  001B44  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7213  001B46  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7214  001B48  A0D8               	btfss	status,0,c
  7215  001B4A  EFA9  F00D         	goto	u2821
  7216  001B4E  EFAB  F00D         	goto	u2820
  7217  001B52                     u2821:
  7218  001B52  EFB0  F00D         	goto	l3805
  7219  001B56                     u2820:
  7220  001B56  5007               	movf	___awdiv@divisor^0,w,c
  7221  001B58  5E05               	subwf	___awdiv@dividend^0,f,c
  7222  001B5A  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7223  001B5C  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7224  001B5E  800B               	bsf	___awdiv@quotient^0,0,c
  7225  001B60                     l3805:
  7226  001B60  90D8               	bcf	status,0,c
  7227  001B62  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7228  001B64  3207               	rrcf	___awdiv@divisor^0,f,c
  7229  001B66  2E09               	decfsz	___awdiv@counter^0,f,c
  7230  001B68  EF9D  F00D         	goto	l3797
  7231  001B6C                     l3809:
  7232  001B6C  500A               	movf	___awdiv@sign^0,w,c
  7233  001B6E  B4D8               	btfsc	status,2,c
  7234  001B70  EFBC  F00D         	goto	u2831
  7235  001B74  EFBE  F00D         	goto	u2830
  7236  001B78                     u2831:
  7237  001B78  EFC2  F00D         	goto	l3813
  7238  001B7C                     u2830:
  7239  001B7C  6C0B               	negf	___awdiv@quotient^0,c
  7240  001B7E  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7241  001B80  B0D8               	btfsc	status,0,c
  7242  001B82  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7243  001B84                     l3813:
  7244  001B84  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7245  001B88  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7246  001B8C  0012               	return		;funcret
  7247  001B8E                     __end_of___awdiv:
  7248                           	opt callstack 0
  7249                           
  7250 ;; *************** function _Ecg_Background_Leads_Failure *****************
  7251 ;; Defined at:
  7252 ;;		line 188 in file "ecg.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;		None
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1    wreg      void 
  7259 ;; Registers used:
  7260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7266 ;;      Params:         0       0       0       0       0       0       0       0       0
  7267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7269 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7270 ;;Total ram usage:        0 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    8
  7273 ;; This function calls:
  7274 ;;		_TFT_DrawString
  7275 ;;		_TFT_FillScreen
  7276 ;; This function is called by:
  7277 ;;		_Ecg_Init
  7278 ;;		_Ecg_ProcessEcg
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text26
  7283  0029A4                     __ptext26:
  7284                           	opt callstack 0
  7285  0029A4                     _Ecg_Background_Leads_Failure:
  7286                           	opt callstack 21
  7287  0029A4                     
  7288                           ;ecg.c: 189: TFT_FillScreen(0x0000);
  7289  0029A4  0E00               	movlw	0
  7290  0029A6  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  7291  0029A8  0E00               	movlw	0
  7292  0029AA  6E1C               	movwf	TFT_FillScreen@color^0,c
  7293  0029AC  EC4E  F014         	call	_TFT_FillScreen	;wreg free
  7294  0029B0                     
  7295                           ;ecg.c: 190: TFT_DrawString(70, 362, "*** Collegare elettrodi ***", 0xFFFF, 0x0000, 2);
  7296  0029B0  0E00               	movlw	0
  7297  0029B2  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  7298  0029B4  0E46               	movlw	70
  7299  0029B6  6E3F               	movwf	TFT_DrawString@x^0,c
  7300  0029B8  0E01               	movlw	1
  7301  0029BA  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  7302  0029BC  0E6A               	movlw	106
  7303  0029BE  6E41               	movwf	TFT_DrawString@y^0,c
  7304  0029C0  0E4F               	movlw	low STR_21
  7305  0029C2  6E43               	movwf	TFT_DrawString@str^0,c
  7306  0029C4  0E5E               	movlw	high STR_21
  7307  0029C6  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  7308  0029C8  0EFF               	movlw	255
  7309  0029CA  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  7310  0029CC  6845               	setf	TFT_DrawString@color^0,c
  7311  0029CE  0E00               	movlw	0
  7312  0029D0  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  7313  0029D2  0E00               	movlw	0
  7314  0029D4  6E47               	movwf	TFT_DrawString@bg^0,c
  7315  0029D6  0E02               	movlw	2
  7316  0029D8  6E49               	movwf	TFT_DrawString@size^0,c
  7317  0029DA  ECD9  F00E         	call	_TFT_DrawString	;wreg free
  7318  0029DE  0012               	return		;funcret
  7319  0029E0                     __end_of_Ecg_Background_Leads_Failure:
  7320                           	opt callstack 0
  7321                           
  7322 ;; *************** function _TFT_FillScreen *****************
  7323 ;; Defined at:
  7324 ;;		line 182 in file "TFT.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  color           2   27[COMRAM] unsigned int 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;		None
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  1    wreg      void 
  7331 ;; Registers used:
  7332 ;;		wreg, status,2, status,0, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7338 ;;      Params:         2       0       0       0       0       0       0       0       0
  7339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7341 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7342 ;;Total ram usage:        2 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    4
  7345 ;; This function calls:
  7346 ;;		_TFT_Flood
  7347 ;;		_TFT_WriteRegister
  7348 ;; This function is called by:
  7349 ;;		_TFT_Init
  7350 ;;		_Ecg_Background_Leads_Ok
  7351 ;;		_Ecg_Background_Leads_Failure
  7352 ;; This function uses a non-reentrant model
  7353 ;;
  7354                           
  7355                           	psect	text27
  7356  00289C                     __ptext27:
  7357                           	opt callstack 0
  7358  00289C                     _TFT_FillScreen:
  7359                           	opt callstack 25
  7360  00289C                     
  7361                           ;TFT.c: 183: TFT_WriteRegister(0x0200, 0);
  7362  00289C  0E02               	movlw	2
  7363  00289E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7364  0028A0  0E00               	movlw	0
  7365  0028A2  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7366  0028A4  0E00               	movlw	0
  7367  0028A6  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7368  0028A8  0E00               	movlw	0
  7369  0028AA  6E07               	movwf	TFT_WriteRegister@data^0,c
  7370  0028AC  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  7371                           
  7372                           ;TFT.c: 184: TFT_WriteRegister(0x0201, 0);
  7373  0028B0  0E02               	movlw	2
  7374  0028B2  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7375  0028B4  0E01               	movlw	1
  7376  0028B6  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7377  0028B8  0E00               	movlw	0
  7378  0028BA  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7379  0028BC  0E00               	movlw	0
  7380  0028BE  6E07               	movwf	TFT_WriteRegister@data^0,c
  7381  0028C0  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  7382  0028C4                     
  7383                           ;TFT.c: 185: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  7384  0028C4  C01C  F00D         	movff	TFT_FillScreen@color,TFT_Flood@color
  7385  0028C8  C01D  F00E         	movff	TFT_FillScreen@color+1,TFT_Flood@color+1
  7386  0028CC  0E00               	movlw	0
  7387  0028CE  6E0F               	movwf	TFT_Flood@len^0,c
  7388  0028D0  0E77               	movlw	119
  7389  0028D2  6E10               	movwf	(TFT_Flood@len+1)^0,c
  7390  0028D4  0E01               	movlw	1
  7391  0028D6  6E11               	movwf	(TFT_Flood@len+2)^0,c
  7392  0028D8  0E00               	movlw	0
  7393  0028DA  6E12               	movwf	(TFT_Flood@len+3)^0,c
  7394  0028DC  ECC0  F007         	call	_TFT_Flood	;wreg free
  7395  0028E0  0012               	return		;funcret
  7396  0028E2                     __end_of_TFT_FillScreen:
  7397                           	opt callstack 0
  7398                           
  7399 ;; *************** function _EUSART_Init *****************
  7400 ;; Defined at:
  7401 ;;		line 12 in file "EUSART.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7415 ;;      Params:         0       0       0       0       0       0       0       0       0
  7416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7419 ;;Total ram usage:        0 bytes
  7420 ;; Hardware stack levels used:    1
  7421 ;; Hardware stack levels required when called:    3
  7422 ;; This function calls:
  7423 ;;		_memset
  7424 ;; This function is called by:
  7425 ;;		_main
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           
  7429                           	psect	text28
  7430  002854                     __ptext28:
  7431                           	opt callstack 0
  7432  002854                     _EUSART_Init:
  7433                           	opt callstack 27
  7434  002854                     
  7435                           ;EUSART.c: 14: TXSTAbits.TX9 = 0;
  7436  002854  9CAC               	bcf	172,6,c	;volatile
  7437                           
  7438                           ;EUSART.c: 15: TXSTAbits.TXEN = 1;
  7439  002856  8AAC               	bsf	172,5,c	;volatile
  7440                           
  7441                           ;EUSART.c: 16: TXSTAbits.SYNC = 0;
  7442  002858  98AC               	bcf	172,4,c	;volatile
  7443                           
  7444                           ;EUSART.c: 17: TXSTAbits.SENDB = 0;
  7445  00285A  96AC               	bcf	172,3,c	;volatile
  7446                           
  7447                           ;EUSART.c: 18: TXSTAbits.BRGH = 1;
  7448  00285C  84AC               	bsf	172,2,c	;volatile
  7449                           
  7450                           ;EUSART.c: 21: RCSTAbits.SPEN = 1;
  7451  00285E  8EAB               	bsf	171,7,c	;volatile
  7452                           
  7453                           ;EUSART.c: 22: RCSTAbits.RX9 = 0;
  7454  002860  9CAB               	bcf	171,6,c	;volatile
  7455                           
  7456                           ;EUSART.c: 23: RCSTAbits.CREN = 1;
  7457  002862  88AB               	bsf	171,4,c	;volatile
  7458                           
  7459                           ;EUSART.c: 26: BAUDCONbits.BRG16 = 1;
  7460  002864  86B8               	bsf	184,3,c	;volatile
  7461                           
  7462                           ;EUSART.c: 27: BAUDCONbits.WUE = 0;
  7463  002866  92B8               	bcf	184,1,c	;volatile
  7464                           
  7465                           ;EUSART.c: 28: BAUDCONbits.ABDEN = 0;
  7466  002868  90B8               	bcf	184,0,c	;volatile
  7467  00286A                     
  7468                           ;EUSART.c: 29: SPBRGH = 0x04;
  7469  00286A  0E04               	movlw	4
  7470  00286C  6EB0               	movwf	176,c	;volatile
  7471                           
  7472                           ;EUSART.c: 30: SPBRG = 0xE1;
  7473  00286E  0EE1               	movlw	225
  7474  002870  6EAF               	movwf	175,c	;volatile
  7475  002872                     
  7476                           ;EUSART.c: 33: RCIE = 1;
  7477  002872  8A9D               	bsf	3997,5,c	;volatile
  7478                           
  7479                           ;EUSART.c: 36: EUSART_RX.iRead = 0;
  7480  002874  0E00               	movlw	0
  7481  002876  0102               	movlb	2	; () banked
  7482  002878  6F00               	movwf	_EUSART_RX& (0+255),b
  7483                           
  7484                           ;EUSART.c: 37: EUSART_RX.iWrite = 0;
  7485  00287A  0E00               	movlw	0
  7486  00287C  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
  7487  00287E                     
  7488                           ; BSR set to: 2
  7489                           ;EUSART.c: 38: memset(EUSART_RX.buffer, 0x00, 128);
  7490  00287E  0E02               	movlw	low (_EUSART_RX+2)
  7491  002880  6E05               	movwf	memset@p1^0,c
  7492  002882  0E02               	movlw	high (_EUSART_RX+2)
  7493  002884  6E06               	movwf	(memset@p1+1)^0,c
  7494  002886  0E00               	movlw	0
  7495  002888  6E08               	movwf	(memset@c+1)^0,c
  7496  00288A  0E00               	movlw	0
  7497  00288C  6E07               	movwf	memset@c^0,c
  7498  00288E  0E00               	movlw	0
  7499  002890  6E0A               	movwf	(memset@n+1)^0,c
  7500  002892  0E80               	movlw	128
  7501  002894  6E09               	movwf	memset@n^0,c
  7502  002896  EC0D  F015         	call	_memset	;wreg free
  7503  00289A  0012               	return		;funcret
  7504  00289C                     __end_of_EUSART_Init:
  7505                           	opt callstack 0
  7506                           
  7507 ;; *************** function _A6_Init *****************
  7508 ;; Defined at:
  7509 ;;		line 12 in file "A6Lib.c"
  7510 ;; Parameters:    Size  Location     Type
  7511 ;;		None
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;		None
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    wreg      void 
  7516 ;; Registers used:
  7517 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7523 ;;      Params:         0       0       0       0       0       0       0       0       0
  7524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7526 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7527 ;;Total ram usage:        0 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:   10
  7530 ;; This function calls:
  7531 ;;		_A6_BaudRateAutoDetect
  7532 ;;		_sleepMS
  7533 ;; This function is called by:
  7534 ;;		_main
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text29
  7539  002B92                     __ptext29:
  7540                           	opt callstack 0
  7541  002B92                     _A6_Init:
  7542                           	opt callstack 20
  7543  002B92                     
  7544                           ;A6Lib.c: 13: sleepMS(5000);
  7545  002B92  0E88               	movlw	136
  7546  002B94  6E05               	movwf	sleepMS@ms^0,c
  7547  002B96  0E13               	movlw	19
  7548  002B98  6E06               	movwf	(sleepMS@ms+1)^0,c
  7549  002B9A  0E00               	movlw	0
  7550  002B9C  6E07               	movwf	(sleepMS@ms+2)^0,c
  7551  002B9E  0E00               	movlw	0
  7552  002BA0  6E08               	movwf	(sleepMS@ms+3)^0,c
  7553  002BA2  ECF0  F014         	call	_sleepMS	;wreg free
  7554  002BA6                     
  7555                           ;A6Lib.c: 14: A6_BaudRateAutoDetect();
  7556  002BA6  EC8D  F00C         	call	_A6_BaudRateAutoDetect	;wreg free
  7557  002BAA  0012               	return		;funcret
  7558  002BAC                     __end_of_A6_Init:
  7559                           	opt callstack 0
  7560                           
  7561 ;; *************** function _A6_BaudRateAutoDetect *****************
  7562 ;; Defined at:
  7563 ;;		line 74 in file "A6Lib.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;  zzzz           32   16[BANK0 ] unsigned char [32]
  7568 ;;  i               1   48[BANK0 ] unsigned char 
  7569 ;; Return value:  Size  Location     Type
  7570 ;;                  4   26[None  ] unsigned long 
  7571 ;; Registers used:
  7572 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7573 ;; Tracked objects:
  7574 ;;		On entry : 0/0
  7575 ;;		On exit  : 0/0
  7576 ;;		Unchanged: 0/0
  7577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7578 ;;      Params:         0       0       0       0       0       0       0       0       0
  7579 ;;      Locals:         0      33       0       0       0       0       0       0       0
  7580 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7581 ;;      Totals:         0      33       0       0       0       0       0       0       0
  7582 ;;Total ram usage:       33 bytes
  7583 ;; Hardware stack levels used:    1
  7584 ;; Hardware stack levels required when called:    9
  7585 ;; This function calls:
  7586 ;;		_A6_IsAlive
  7587 ;;		_EUSART_BaudRateSet
  7588 ;;		_printLine
  7589 ;;		_sleepMS
  7590 ;;		_sprintf
  7591 ;; This function is called by:
  7592 ;;		_loop
  7593 ;;		_A6_Init
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           	psect	text30
  7598  00191A                     __ptext30:
  7599                           	opt callstack 0
  7600  00191A                     _A6_BaudRateAutoDetect:
  7601                           	opt callstack 20
  7602  00191A                     
  7603                           ;A6Lib.c: 75: printLine("Detecting baud rate...", 0xF81F);
  7604  00191A  0ED2               	movlw	low STR_29
  7605  00191C  6E4A               	movwf	printLine@str^0,c
  7606  00191E  0E5E               	movlw	high STR_29
  7607  001920  6E4B               	movwf	(printLine@str+1)^0,c
  7608  001922  0EF8               	movlw	248
  7609  001924  6E4D               	movwf	(printLine@color+1)^0,c
  7610  001926  0E1F               	movlw	31
  7611  001928  6E4C               	movwf	printLine@color^0,c
  7612  00192A  ECAB  F00F         	call	_printLine	;wreg free
  7613  00192E                     
  7614                           ;A6Lib.c: 77: for(uint8_t i=0; i<3; i++) {
  7615  00192E  0E00               	movlw	0
  7616  001930  0100               	movlb	0	; () banked
  7617  001932  6F90               	movwf	A6_BaudRateAutoDetect@i& (0+255),b
  7618  001934                     l5103:
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;A6Lib.c: 78: EUSART_BaudRateSet(A6_BAUDRATES[i]);
  7622  001934  5190               	movf	A6_BaudRateAutoDetect@i& (0+255),w,b
  7623  001936  0D04               	mullw	4
  7624  001938  0EE5               	movlw	low _A6_BAUDRATES
  7625  00193A  24F3               	addwf	243,w,c
  7626  00193C  6EF6               	movwf	tblptrl,c
  7627  00193E  0E5D               	movlw	high _A6_BAUDRATES
  7628  001940  20F4               	addwfc	244,w,c
  7629  001942  6EF7               	movwf	tblptrh,c
  7630  001944                     	if	0	;There are less than 3 active tblptr bytes
  7631  001944                     	endif
  7632  001944  0009               	tblrd		*+
  7633  001946  CFF5 F012          	movff	tablat,EUSART_BaudRateSet@baudRate
  7634  00194A  0009               	tblrd		*+
  7635  00194C  CFF5 F013          	movff	tablat,EUSART_BaudRateSet@baudRate+1
  7636  001950  0009               	tblrd		*+
  7637  001952  CFF5 F014          	movff	tablat,EUSART_BaudRateSet@baudRate+2
  7638  001956  000A               	tblrd		*-
  7639  001958  CFF5 F015          	movff	tablat,EUSART_BaudRateSet@baudRate+3
  7640  00195C  EC76  F010         	call	_EUSART_BaudRateSet	;wreg free
  7641  001960                     
  7642                           ;A6Lib.c: 79: if(A6_IsAlive() == 1) {
  7643  001960  EC8E  F013         	call	_A6_IsAlive	;wreg free
  7644  001964  06E8               	decf	wreg,f,c
  7645  001966  A4D8               	btfss	status,2,c
  7646  001968  EFB8  F00C         	goto	u4301
  7647  00196C  EFBA  F00C         	goto	u4300
  7648  001970                     u4301:
  7649  001970  EFE5  F00C         	goto	l5113
  7650  001974                     u4300:
  7651  001974                     
  7652                           ;A6Lib.c: 80: char zzzz[32];;A6Lib.c: 81: sprintf(zzzz, "%lu FOUND!", A6_BAUDRATES[i]);
  7653  001974  0E70               	movlw	low A6_BaudRateAutoDetect@zzzz
  7654  001976  6E4A               	movwf	sprintf@sp^0,c
  7655  001978  0E00               	movlw	high A6_BaudRateAutoDetect@zzzz
  7656  00197A  6E4B               	movwf	(sprintf@sp+1)^0,c
  7657  00197C  0E64               	movlw	low STR_30
  7658  00197E  6E4C               	movwf	sprintf@f^0,c
  7659  001980  0E5F               	movlw	high STR_30
  7660  001982  6E4D               	movwf	(sprintf@f+1)^0,c
  7661  001984  0100               	movlb	0	; () banked
  7662  001986  5190               	movf	A6_BaudRateAutoDetect@i& (0+255),w,b
  7663  001988  0D04               	mullw	4
  7664  00198A  0EE5               	movlw	low _A6_BAUDRATES
  7665  00198C  24F3               	addwf	243,w,c
  7666  00198E  6EF6               	movwf	tblptrl,c
  7667  001990  0E5D               	movlw	high _A6_BAUDRATES
  7668  001992  20F4               	addwfc	244,w,c
  7669  001994  6EF7               	movwf	tblptrh,c
  7670  001996                     	if	0	;There are less than 3 active tblptr bytes
  7671  001996                     	endif
  7672  001996  0009               	tblrd		*+
  7673  001998  CFF5 F04E          	movff	tablat,?_sprintf+4
  7674  00199C  0009               	tblrd		*+
  7675  00199E  CFF5 F04F          	movff	tablat,?_sprintf+5
  7676  0019A2  0009               	tblrd		*+
  7677  0019A4  CFF5 F050          	movff	tablat,?_sprintf+6
  7678  0019A8  000A               	tblrd		*-
  7679  0019AA  CFF5 F051          	movff	tablat,?_sprintf+7
  7680  0019AE  EC3C  F003         	call	_sprintf	;wreg free
  7681  0019B2                     
  7682                           ;A6Lib.c: 82: printLine(zzzz, 0xF800);
  7683  0019B2  0E70               	movlw	low A6_BaudRateAutoDetect@zzzz
  7684  0019B4  6E4A               	movwf	printLine@str^0,c
  7685  0019B6  0E00               	movlw	high A6_BaudRateAutoDetect@zzzz
  7686  0019B8  6E4B               	movwf	(printLine@str+1)^0,c
  7687  0019BA  0EF8               	movlw	248
  7688  0019BC  6E4D               	movwf	(printLine@color+1)^0,c
  7689  0019BE  0E00               	movlw	0
  7690  0019C0  6E4C               	movwf	printLine@color^0,c
  7691  0019C2  ECAB  F00F         	call	_printLine	;wreg free
  7692  0019C6  EFF9  F00C         	goto	l535
  7693  0019CA                     l5113:
  7694                           
  7695                           ;A6Lib.c: 84: };A6Lib.c: 85: sleepMS(100);
  7696  0019CA  0E64               	movlw	100
  7697  0019CC  6E05               	movwf	sleepMS@ms^0,c
  7698  0019CE  0E00               	movlw	0
  7699  0019D0  6E06               	movwf	(sleepMS@ms+1)^0,c
  7700  0019D2  0E00               	movlw	0
  7701  0019D4  6E07               	movwf	(sleepMS@ms+2)^0,c
  7702  0019D6  0E00               	movlw	0
  7703  0019D8  6E08               	movwf	(sleepMS@ms+3)^0,c
  7704  0019DA  ECF0  F014         	call	_sleepMS	;wreg free
  7705  0019DE  0100               	movlb	0	; () banked
  7706  0019E0  2B90               	incf	A6_BaudRateAutoDetect@i& (0+255),f,b
  7707  0019E2                     
  7708                           ; BSR set to: 0
  7709  0019E2  0E02               	movlw	2
  7710  0019E4  6590               	cpfsgt	A6_BaudRateAutoDetect@i& (0+255),b
  7711  0019E6  EFF7  F00C         	goto	u4311
  7712  0019EA  EFF9  F00C         	goto	u4310
  7713  0019EE                     u4311:
  7714  0019EE  EF9A  F00C         	goto	l5103
  7715  0019F2                     u4310:
  7716  0019F2                     l535:
  7717  0019F2  0012               	return		;funcret
  7718  0019F4                     __end_of_A6_BaudRateAutoDetect:
  7719                           	opt callstack 0
  7720                           
  7721 ;; *************** function _sprintf *****************
  7722 ;; Defined at:
  7723 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  sp              2   73[COMRAM] PTR unsigned char 
  7726 ;;		 -> A6_BaudRateAutoDetect@zzzz(32), A6_BaudRateSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), loop@zzzz_1
      +69(32), 
  7727 ;;		 -> loop@zzzz_165(32), loop@zzzz_162(32), loop@zzzz(32), 
  7728 ;;  f               2   75[COMRAM] PTR const unsigned char 
  7729 ;;		 -> STR_30(11), STR_27(12), STR_19(4), STR_15(24), 
  7730 ;;		 -> STR_13(23), STR_11(4), STR_3(27), STR_2(32), 
  7731 ;;		 -> STR_1(23), 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  val             4    6[BANK0 ] unsigned long 
  7734 ;;  tmpval          4    0        struct .
  7735 ;;  width           2   13[BANK0 ] int 
  7736 ;;  ap              2   11[BANK0 ] PTR void [1]
  7737 ;;		 -> ?_sprintf(2), 
  7738 ;;  len             2    4[BANK0 ] unsigned int 
  7739 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  7740 ;;		 -> STR_40(7), ?_sprintf(2), Ecg_ProcessHeartRate@heartbeatAverage(4), STR_18(6), 
  7741 ;;		 -> STR_17(11), STR_16(13), 
  7742 ;;  prec            2    0[BANK0 ] int 
  7743 ;;  c               1   15[BANK0 ] unsigned char 
  7744 ;;  flag            1   10[BANK0 ] unsigned char 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  2   73[COMRAM] int 
  7747 ;; Registers used:
  7748 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7754 ;;      Params:         8       0       0       0       0       0       0       0       0
  7755 ;;      Locals:         0      16       0       0       0       0       0       0       0
  7756 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7757 ;;      Totals:        12      16       0       0       0       0       0       0       0
  7758 ;;Total ram usage:       28 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    3
  7761 ;; This function calls:
  7762 ;;		___lldiv
  7763 ;;		___llmod
  7764 ;;		___wmul
  7765 ;;		_isdigit
  7766 ;; This function is called by:
  7767 ;;		_loop
  7768 ;;		_A6_BaudRateSet
  7769 ;;		_A6_BaudRateAutoDetect
  7770 ;;		_Ecg_ProcessHeartRate
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text31
  7775  000678                     __ptext31:
  7776                           	opt callstack 0
  7777  000678                     _sprintf:
  7778                           	opt callstack 26
  7779  000678                     
  7780                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  7781  000678  0E4E               	movlw	low (?_sprintf+4)
  7782  00067A  0100               	movlb	0	; () banked
  7783  00067C  6F6B               	movwf	sprintf@ap& (0+255),b
  7784  00067E  0E00               	movlw	high (?_sprintf+4)
  7785  000680  6F6C               	movwf	(sprintf@ap+1)& (0+255),b
  7786                           
  7787                           ;doprnt.c: 553: while((c = *f++)) {
  7788  000682  EFBA  F005         	goto	l5061
  7789  000686                     l4925:
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;doprnt.c: 555: if(c != '%')
  7793  000686  0E25               	movlw	37
  7794  000688  196F               	xorwf	sprintf@c& (0+255),w,b
  7795  00068A  B4D8               	btfsc	status,2,c
  7796  00068C  EF4A  F003         	goto	u4031
  7797  000690  EF4C  F003         	goto	u4030
  7798  000694                     u4031:
  7799  000694  EF56  F003         	goto	l4931
  7800  000698                     u4030:
  7801  000698                     
  7802                           ; BSR set to: 0
  7803                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  7804  000698  C04A  FFD9         	movff	sprintf@sp,fsr2l
  7805  00069C  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  7806  0006A0  C06F  FFDF         	movff	sprintf@c,indf2
  7807  0006A4                     
  7808                           ; BSR set to: 0
  7809  0006A4  4A4A               	infsnz	sprintf@sp^0,f,c
  7810  0006A6  2A4B               	incf	(sprintf@sp+1)^0,f,c
  7811                           
  7812                           ;doprnt.c: 559: continue;
  7813  0006A8  EFBA  F005         	goto	l5061
  7814  0006AC                     l4931:
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  7818  0006AC  0E00               	movlw	0
  7819  0006AE  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  7820  0006B0  0E00               	movlw	0
  7821  0006B2  6F6D               	movwf	sprintf@width& (0+255),b
  7822                           
  7823                           ;doprnt.c: 565: flag = 0;
  7824  0006B4  0E00               	movlw	0
  7825  0006B6  6F6A               	movwf	sprintf@flag& (0+255),b
  7826  0006B8                     
  7827                           ; BSR set to: 0
  7828                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  7829  0006B8  C04C  FFF6         	movff	sprintf@f,tblptrl
  7830  0006BC  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7831  0006C0                     	if	0	;tblptru may be non-zero
  7832  0006C0                     	endif
  7833  0006C0                     	if	0	;tblptru may be non-zero
  7834  0006C0                     	endif
  7835  0006C0  0008               	tblrd		*
  7836  0006C2  50F5               	movf	tablat,w,c
  7837  0006C4  EC43  F015         	call	_isdigit
  7838  0006C8  A0D8               	btfss	status,0,c
  7839  0006CA  EF69  F003         	goto	u4041
  7840  0006CE  EF6B  F003         	goto	u4040
  7841  0006D2                     u4041:
  7842  0006D2  EF44  F004         	goto	l4985
  7843  0006D6                     u4040:
  7844  0006D6                     
  7845                           ;doprnt.c: 615: width = 0;
  7846  0006D6  0E00               	movlw	0
  7847  0006D8  0100               	movlb	0	; () banked
  7848  0006DA  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  7849  0006DC  0E00               	movlw	0
  7850  0006DE  6F6D               	movwf	sprintf@width& (0+255),b
  7851  0006E0                     l4937:
  7852                           
  7853                           ;doprnt.c: 617: width *= 10;
  7854  0006E0  C06D  F005         	movff	sprintf@width,___wmul@multiplier
  7855  0006E4  C06E  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  7856  0006E8  0E00               	movlw	0
  7857  0006EA  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7858  0006EC  0E0A               	movlw	10
  7859  0006EE  6E07               	movwf	___wmul@multiplicand^0,c
  7860  0006F0  EC74  F015         	call	___wmul	;wreg free
  7861  0006F4  C005  F06D         	movff	?___wmul,sprintf@width
  7862  0006F8  C006  F06E         	movff	?___wmul+1,sprintf@width+1
  7863  0006FC                     
  7864                           ;doprnt.c: 618: width += *f++ - '0';
  7865  0006FC  0ED0               	movlw	208
  7866  0006FE  6E52               	movwf	??_sprintf^0,c
  7867  000700  0EFF               	movlw	255
  7868  000702  6E53               	movwf	(??_sprintf+1)^0,c
  7869  000704  C04C  FFF6         	movff	sprintf@f,tblptrl
  7870  000708  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7871  00070C                     	if	0	;tblptru may be non-zero
  7872  00070C                     	endif
  7873  00070C                     	if	0	;tblptru may be non-zero
  7874  00070C                     	endif
  7875  00070C  0008               	tblrd		*
  7876  00070E  50F5               	movf	tablat,w,c
  7877  000710  6E54               	movwf	(??_sprintf+2)^0,c
  7878  000712  6A55               	clrf	(??_sprintf+3)^0,c
  7879  000714  5052               	movf	??_sprintf^0,w,c
  7880  000716  2654               	addwf	(??_sprintf+2)^0,f,c
  7881  000718  5053               	movf	(??_sprintf+1)^0,w,c
  7882  00071A  2255               	addwfc	(??_sprintf+3)^0,f,c
  7883  00071C  5054               	movf	(??_sprintf+2)^0,w,c
  7884  00071E  0100               	movlb	0	; () banked
  7885  000720  276D               	addwf	sprintf@width& (0+255),f,b
  7886  000722  5055               	movf	(??_sprintf+3)^0,w,c
  7887  000724  236E               	addwfc	(sprintf@width+1)& (0+255),f,b
  7888  000726                     
  7889                           ; BSR set to: 0
  7890  000726  4A4C               	infsnz	sprintf@f^0,f,c
  7891  000728  2A4D               	incf	(sprintf@f+1)^0,f,c
  7892  00072A                     
  7893                           ; BSR set to: 0
  7894                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  7895  00072A  C04C  FFF6         	movff	sprintf@f,tblptrl
  7896  00072E  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7897  000732                     	if	0	;tblptru may be non-zero
  7898  000732                     	endif
  7899  000732                     	if	0	;tblptru may be non-zero
  7900  000732                     	endif
  7901  000732  0008               	tblrd		*
  7902  000734  50F5               	movf	tablat,w,c
  7903  000736  EC43  F015         	call	_isdigit
  7904  00073A  B0D8               	btfsc	status,0,c
  7905  00073C  EFA2  F003         	goto	u4051
  7906  000740  EFA4  F003         	goto	u4050
  7907  000744                     u4051:
  7908  000744  EF70  F003         	goto	l4937
  7909  000748                     u4050:
  7910  000748  EF44  F004         	goto	l4985
  7911  00074C                     l4945:
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;doprnt.c: 669: flag |= 0x10;
  7915  00074C  896A               	bsf	sprintf@flag& (0+255),4,b
  7916                           
  7917                           ;doprnt.c: 670: goto loop;
  7918  00074E  EF44  F004         	goto	l4985
  7919  000752                     l4947:
  7920                           
  7921                           ; BSR set to: 0
  7922                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  7923  000752  C06B  FFD9         	movff	sprintf@ap,fsr2l
  7924  000756  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  7925  00075A  CFDE F062          	movff	postinc2,sprintf@cp
  7926  00075E  CFDD F063          	movff	postdec2,sprintf@cp+1
  7927  000762                     
  7928                           ; BSR set to: 0
  7929  000762  0E02               	movlw	2
  7930  000764  276B               	addwf	sprintf@ap& (0+255),f,b
  7931  000766  0E00               	movlw	0
  7932  000768  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7933  00076A                     
  7934                           ; BSR set to: 0
  7935                           ;doprnt.c: 766: if(!cp)
  7936  00076A  5162               	movf	sprintf@cp& (0+255),w,b
  7937  00076C  1163               	iorwf	(sprintf@cp+1)& (0+255),w,b
  7938  00076E  A4D8               	btfss	status,2,c
  7939  000770  EFBC  F003         	goto	u4061
  7940  000774  EFBE  F003         	goto	u4060
  7941  000778                     u4061:
  7942  000778  EFC2  F003         	goto	l4955
  7943  00077C                     u4060:
  7944  00077C                     
  7945                           ; BSR set to: 0
  7946                           ;doprnt.c: 767: cp = "(null)";
  7947  00077C  0ED3               	movlw	low STR_40
  7948  00077E  6F62               	movwf	sprintf@cp& (0+255),b
  7949  000780  0E5F               	movlw	high STR_40
  7950  000782  6F63               	movwf	(sprintf@cp+1)& (0+255),b
  7951  000784                     l4955:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;doprnt.c: 771: len = 0;
  7955  000784  0E00               	movlw	0
  7956  000786  6F65               	movwf	(sprintf@len+1)& (0+255),b
  7957  000788  0E00               	movlw	0
  7958  00078A  6F64               	movwf	sprintf@len& (0+255),b
  7959                           
  7960                           ;doprnt.c: 772: while(cp[len])
  7961  00078C  EFCB  F003         	goto	l4959
  7962  000790                     l4957:
  7963                           
  7964                           ;doprnt.c: 773: len++;
  7965  000790  0100               	movlb	0	; () banked
  7966  000792  4B64               	infsnz	sprintf@len& (0+255),f,b
  7967  000794  2B65               	incf	(sprintf@len+1)& (0+255),f,b
  7968  000796                     l4959:
  7969                           
  7970                           ; BSR set to: 0
  7971  000796  5164               	movf	sprintf@len& (0+255),w,b
  7972  000798  2562               	addwf	sprintf@cp& (0+255),w,b
  7973  00079A  6E52               	movwf	??_sprintf^0,c
  7974  00079C  5165               	movf	(sprintf@len+1)& (0+255),w,b
  7975  00079E  2163               	addwfc	(sprintf@cp+1)& (0+255),w,b
  7976  0007A0  6E53               	movwf	(??_sprintf+1)^0,c
  7977  0007A2  C052  FFF6         	movff	??_sprintf,tblptrl
  7978  0007A6  C053  FFF7         	movff	??_sprintf+1,tblptrh
  7979  0007AA  6AF8               	clrf	tblptru,c
  7980  0007AC  0E07               	movlw	(high __ramtop+-1)
  7981  0007AE  64F7               	cpfsgt	tblptrh,c
  7982  0007B0  D003               	bra	u4077
  7983  0007B2  0008               	tblrd		*
  7984  0007B4  50F5               	movf	tablat,w,c
  7985  0007B6  D005               	bra	u4070
  7986  0007B8                     u4077:
  7987  0007B8  CFF6 FFE9          	movff	tblptrl,fsr0l
  7988  0007BC  CFF7 FFEA          	movff	tblptrh,fsr0h
  7989  0007C0  50EF               	movf	indf0,w,c
  7990  0007C2                     u4070:
  7991  0007C2  0900               	iorlw	0
  7992  0007C4  A4D8               	btfss	status,2,c
  7993  0007C6  EFE7  F003         	goto	u4081
  7994  0007CA  EFE9  F003         	goto	u4080
  7995  0007CE                     u4081:
  7996  0007CE  EFC8  F003         	goto	l4957
  7997  0007D2                     u4080:
  7998  0007D2                     
  7999                           ;doprnt.c: 783: if(((unsigned)width) > len)
  8000  0007D2  0100               	movlb	0	; () banked
  8001  0007D4  516D               	movf	sprintf@width& (0+255),w,b
  8002  0007D6  5D64               	subwf	sprintf@len& (0+255),w,b
  8003  0007D8  516E               	movf	(sprintf@width+1)& (0+255),w,b
  8004  0007DA  5965               	subwfb	(sprintf@len+1)& (0+255),w,b
  8005  0007DC  B0D8               	btfsc	status,0,c
  8006  0007DE  EFF3  F003         	goto	u4091
  8007  0007E2  EFF5  F003         	goto	u4090
  8008  0007E6                     u4091:
  8009  0007E6  EFFB  F003         	goto	l4965
  8010  0007EA                     u4090:
  8011  0007EA                     
  8012                           ; BSR set to: 0
  8013                           ;doprnt.c: 784: width -= len;
  8014  0007EA  5164               	movf	sprintf@len& (0+255),w,b
  8015  0007EC  5F6D               	subwf	sprintf@width& (0+255),f,b
  8016  0007EE  5165               	movf	(sprintf@len+1)& (0+255),w,b
  8017  0007F0  5B6E               	subwfb	(sprintf@width+1)& (0+255),f,b
  8018  0007F2  EF09  F004         	goto	l4971
  8019  0007F6                     l4965:
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  8023  0007F6  0E00               	movlw	0
  8024  0007F8  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  8025  0007FA  0E00               	movlw	0
  8026  0007FC  6F6D               	movwf	sprintf@width& (0+255),b
  8027  0007FE  EF09  F004         	goto	l4971
  8028  000802                     l4967:
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;doprnt.c: 791: ((*sp++ = (' ')));
  8032  000802  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8033  000806  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8034  00080A  0E20               	movlw	32
  8035  00080C  6EDF               	movwf	indf2,c
  8036  00080E                     
  8037                           ; BSR set to: 0
  8038  00080E  4A4A               	infsnz	sprintf@sp^0,f,c
  8039  000810  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8040  000812                     l4971:
  8041                           
  8042                           ; BSR set to: 0
  8043  000812  076D               	decf	sprintf@width& (0+255),f,b
  8044  000814  A0D8               	btfss	status,0,c
  8045  000816  076E               	decf	(sprintf@width+1)& (0+255),f,b
  8046  000818  296D               	incf	sprintf@width& (0+255),w,b
  8047  00081A  E106               	bnz	u4101
  8048  00081C  296E               	incf	(sprintf@width+1)& (0+255),w,b
  8049  00081E  A4D8               	btfss	status,2,c
  8050  000820  EF14  F004         	goto	u4101
  8051  000824  EF16  F004         	goto	u4100
  8052  000828                     u4101:
  8053  000828  EF01  F004         	goto	l4967
  8054  00082C                     u4100:
  8055  00082C  EF32  F004         	goto	l4979
  8056  000830                     l4973:
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  8060  000830  C062  FFF6         	movff	sprintf@cp,tblptrl
  8061  000834  C063  FFF7         	movff	sprintf@cp+1,tblptrh
  8062  000838  6AF8               	clrf	tblptru,c
  8063  00083A  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8064  00083E  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8065  000842  0E07               	movlw	(high __ramtop+-1)
  8066  000844  64F7               	cpfsgt	tblptrh,c
  8067  000846  D003               	bra	u4117
  8068  000848  0008               	tblrd		*
  8069  00084A  50F5               	movf	tablat,w,c
  8070  00084C  D005               	bra	u4110
  8071  00084E                     u4117:
  8072  00084E  CFF6 FFE9          	movff	tblptrl,fsr0l
  8073  000852  CFF7 FFEA          	movff	tblptrh,fsr0h
  8074  000856  50EF               	movf	indf0,w,c
  8075  000858                     u4110:
  8076  000858  6EDF               	movwf	indf2,c
  8077  00085A  0100               	movlb	0	; () banked
  8078  00085C  4B62               	infsnz	sprintf@cp& (0+255),f,b
  8079  00085E  2B63               	incf	(sprintf@cp+1)& (0+255),f,b
  8080  000860                     
  8081                           ; BSR set to: 0
  8082  000860  4A4A               	infsnz	sprintf@sp^0,f,c
  8083  000862  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8084  000864                     l4979:
  8085                           
  8086                           ; BSR set to: 0
  8087  000864  0764               	decf	sprintf@len& (0+255),f,b
  8088  000866  A0D8               	btfss	status,0,c
  8089  000868  0765               	decf	(sprintf@len+1)& (0+255),f,b
  8090  00086A  2964               	incf	sprintf@len& (0+255),w,b
  8091  00086C  E106               	bnz	u4121
  8092  00086E  2965               	incf	(sprintf@len+1)& (0+255),w,b
  8093  000870  A4D8               	btfss	status,2,c
  8094  000872  EF3D  F004         	goto	u4121
  8095  000876  EF3F  F004         	goto	u4120
  8096  00087A                     u4121:
  8097  00087A  EF18  F004         	goto	l4973
  8098  00087E                     u4120:
  8099  00087E  EFBA  F005         	goto	l5061
  8100  000882                     l4981:
  8101                           
  8102                           ; BSR set to: 0
  8103                           ;doprnt.c: 844: flag |= 0x40;
  8104  000882  8D6A               	bsf	sprintf@flag& (0+255),6,b
  8105                           
  8106                           ;doprnt.c: 845: break;
  8107  000884  EF69  F004         	goto	l680
  8108  000888                     l4985:
  8109  000888  C04C  FFF6         	movff	sprintf@f,tblptrl
  8110  00088C  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  8111  000890  4A4C               	infsnz	sprintf@f^0,f,c
  8112  000892  2A4D               	incf	(sprintf@f+1)^0,f,c
  8113  000894                     	if	0	;tblptru may be non-zero
  8114  000894                     	endif
  8115  000894                     	if	0	;tblptru may be non-zero
  8116  000894                     	endif
  8117  000894  0008               	tblrd		*
  8118  000896  CFF5 F06F          	movff	tablat,sprintf@c
  8119  00089A  0100               	movlb	0	; () banked
  8120  00089C  516F               	movf	sprintf@c& (0+255),w,b
  8121                           
  8122                           ; Switch size 1, requested type "simple"
  8123                           ; Number of cases is 6, Range of values is 0 to 117
  8124                           ; switch strategies available:
  8125                           ; Name         Instructions Cycles
  8126                           ; simple_byte           19    10 (average)
  8127                           ;	Chosen strategy is simple_byte
  8128  00089E  0A00               	xorlw	0	; case 0
  8129  0008A0  B4D8               	btfsc	status,2,c
  8130  0008A2  EFCB  F005         	goto	l5063
  8131  0008A6  0A64               	xorlw	100	; case 100
  8132  0008A8  B4D8               	btfsc	status,2,c
  8133  0008AA  EF69  F004         	goto	l680
  8134  0008AE  0A0D               	xorlw	13	; case 105
  8135  0008B0  B4D8               	btfsc	status,2,c
  8136  0008B2  EF69  F004         	goto	l680
  8137  0008B6  0A05               	xorlw	5	; case 108
  8138  0008B8  B4D8               	btfsc	status,2,c
  8139  0008BA  EFA6  F003         	goto	l4945
  8140  0008BE  0A1F               	xorlw	31	; case 115
  8141  0008C0  B4D8               	btfsc	status,2,c
  8142  0008C2  EFA9  F003         	goto	l4947
  8143  0008C6  0A06               	xorlw	6	; case 117
  8144  0008C8  B4D8               	btfsc	status,2,c
  8145  0008CA  EF41  F004         	goto	l4981
  8146  0008CE  EFBA  F005         	goto	l5061
  8147  0008D2                     l680:
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  8151  0008D2  BD6A               	btfsc	sprintf@flag& (0+255),6,b
  8152  0008D4  EF6E  F004         	goto	u4131
  8153  0008D8  EF70  F004         	goto	u4130
  8154  0008DC                     u4131:
  8155  0008DC  EFAD  F004         	goto	l696
  8156  0008E0                     u4130:
  8157  0008E0                     
  8158                           ; BSR set to: 0
  8159                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  8160  0008E0  A96A               	btfss	sprintf@flag& (0+255),4,b
  8161  0008E2  EF75  F004         	goto	u4141
  8162  0008E6  EF77  F004         	goto	u4140
  8163  0008EA                     u4141:
  8164  0008EA  EF89  F004         	goto	l4993
  8165  0008EE                     u4140:
  8166  0008EE                     
  8167                           ; BSR set to: 0
  8168                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  8169  0008EE  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8170  0008F2  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8171  0008F6  CFDE F066          	movff	postinc2,sprintf@val
  8172  0008FA  CFDE F067          	movff	postinc2,sprintf@val+1
  8173  0008FE  CFDE F068          	movff	postinc2,sprintf@val+2
  8174  000902  CFDE F069          	movff	postinc2,sprintf@val+3
  8175  000906                     
  8176                           ; BSR set to: 0
  8177  000906  0E04               	movlw	4
  8178  000908  276B               	addwf	sprintf@ap& (0+255),f,b
  8179  00090A  0E00               	movlw	0
  8180  00090C  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8181  00090E  EF9A  F004         	goto	l4997
  8182  000912                     l4993:
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  8186  000912  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8187  000916  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8188  00091A  CFDE F066          	movff	postinc2,sprintf@val
  8189  00091E  CFDD F067          	movff	postdec2,sprintf@val+1
  8190  000922  0E00               	movlw	0
  8191  000924  BF67               	btfsc	(sprintf@val+1)& (0+255),7,b
  8192  000926  0EFF               	movlw	-1
  8193  000928  6F68               	movwf	(sprintf@val+2)& (0+255),b
  8194  00092A  6F69               	movwf	(sprintf@val+3)& (0+255),b
  8195  00092C                     
  8196                           ; BSR set to: 0
  8197  00092C  0E02               	movlw	2
  8198  00092E  276B               	addwf	sprintf@ap& (0+255),f,b
  8199  000930  0E00               	movlw	0
  8200  000932  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8201  000934                     l4997:
  8202                           
  8203                           ; BSR set to: 0
  8204                           ;doprnt.c: 1287: if((long)val < 0) {
  8205  000934  BF69               	btfsc	(sprintf@val+3)& (0+255),7,b
  8206  000936  EFA1  F004         	goto	u4150
  8207  00093A  EF9F  F004         	goto	u4151
  8208  00093E                     u4151:
  8209  00093E  EFD8  F004         	goto	l5011
  8210  000942                     u4150:
  8211  000942                     
  8212                           ; BSR set to: 0
  8213                           ;doprnt.c: 1288: flag |= 0x03;
  8214  000942  0E03               	movlw	3
  8215  000944  136A               	iorwf	sprintf@flag& (0+255),f,b
  8216  000946                     
  8217                           ; BSR set to: 0
  8218                           ;doprnt.c: 1289: val = -val;
  8219  000946  1F69               	comf	(sprintf@val+3)& (0+255),f,b
  8220  000948  1F68               	comf	(sprintf@val+2)& (0+255),f,b
  8221  00094A  1F67               	comf	(sprintf@val+1)& (0+255),f,b
  8222  00094C  6D66               	negf	sprintf@val& (0+255),b
  8223  00094E  0E00               	movlw	0
  8224  000950  2367               	addwfc	(sprintf@val+1)& (0+255),f,b
  8225  000952  2368               	addwfc	(sprintf@val+2)& (0+255),f,b
  8226  000954  2369               	addwfc	(sprintf@val+3)& (0+255),f,b
  8227  000956  EFD8  F004         	goto	l5011
  8228  00095A                     l696:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  8232  00095A  A96A               	btfss	sprintf@flag& (0+255),4,b
  8233  00095C  EFB2  F004         	goto	u4161
  8234  000960  EFB4  F004         	goto	u4160
  8235  000964                     u4161:
  8236  000964  EFC6  F004         	goto	l5007
  8237  000968                     u4160:
  8238  000968                     
  8239                           ; BSR set to: 0
  8240                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  8241  000968  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8242  00096C  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8243  000970  CFDE F066          	movff	postinc2,sprintf@val
  8244  000974  CFDE F067          	movff	postinc2,sprintf@val+1
  8245  000978  CFDE F068          	movff	postinc2,sprintf@val+2
  8246  00097C  CFDE F069          	movff	postinc2,sprintf@val+3
  8247  000980                     
  8248                           ; BSR set to: 0
  8249  000980  0E04               	movlw	4
  8250  000982  276B               	addwf	sprintf@ap& (0+255),f,b
  8251  000984  0E00               	movlw	0
  8252  000986  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8253  000988  EFD8  F004         	goto	l5011
  8254  00098C                     l5007:
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  8258  00098C  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8259  000990  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8260  000994  CFDE F052          	movff	postinc2,??_sprintf
  8261  000998  CFDD F053          	movff	postdec2,??_sprintf+1
  8262  00099C  C052  F066         	movff	??_sprintf,sprintf@val
  8263  0009A0  C053  F067         	movff	??_sprintf+1,sprintf@val+1
  8264  0009A4  6B68               	clrf	(sprintf@val+2)& (0+255),b
  8265  0009A6  6B69               	clrf	(sprintf@val+3)& (0+255),b
  8266  0009A8                     
  8267                           ; BSR set to: 0
  8268  0009A8  0E02               	movlw	2
  8269  0009AA  276B               	addwf	sprintf@ap& (0+255),f,b
  8270  0009AC  0E00               	movlw	0
  8271  0009AE  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8272  0009B0                     l5011:
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  8276  0009B0  0E01               	movlw	1
  8277  0009B2  6F6F               	movwf	sprintf@c& (0+255),b
  8278  0009B4                     l5017:
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;doprnt.c: 1332: if(val < dpowers[c])
  8282  0009B4  516F               	movf	sprintf@c& (0+255),w,b
  8283  0009B6  0D04               	mullw	4
  8284  0009B8  0EBD               	movlw	low _dpowers
  8285  0009BA  24F3               	addwf	243,w,c
  8286  0009BC  6EF6               	movwf	tblptrl,c
  8287  0009BE  0E5D               	movlw	high _dpowers
  8288  0009C0  20F4               	addwfc	244,w,c
  8289  0009C2  6EF7               	movwf	tblptrh,c
  8290  0009C4                     	if	0	;There are less than 3 active tblptr bytes
  8291  0009C4                     	endif
  8292  0009C4  0009               	tblrd		*+
  8293  0009C6  50F5               	movf	tablat,w,c
  8294  0009C8  5D66               	subwf	sprintf@val& (0+255),w,b
  8295  0009CA  0009               	tblrd		*+
  8296  0009CC  50F5               	movf	tablat,w,c
  8297  0009CE  5967               	subwfb	(sprintf@val+1)& (0+255),w,b
  8298  0009D0  0009               	tblrd		*+
  8299  0009D2  50F5               	movf	tablat,w,c
  8300  0009D4  5968               	subwfb	(sprintf@val+2)& (0+255),w,b
  8301  0009D6  0009               	tblrd		*+
  8302  0009D8  50F5               	movf	tablat,w,c
  8303  0009DA  5969               	subwfb	(sprintf@val+3)& (0+255),w,b
  8304  0009DC  B0D8               	btfsc	status,0,c
  8305  0009DE  EFF3  F004         	goto	u4171
  8306  0009E2  EFF5  F004         	goto	u4170
  8307  0009E6                     u4171:
  8308  0009E6  EFF7  F004         	goto	l5021
  8309  0009EA                     u4170:
  8310  0009EA  EF01  F005         	goto	l5025
  8311  0009EE                     l5021:
  8312                           
  8313                           ; BSR set to: 0
  8314  0009EE  2B6F               	incf	sprintf@c& (0+255),f,b
  8315  0009F0                     
  8316                           ; BSR set to: 0
  8317  0009F0  0E0A               	movlw	10
  8318  0009F2  196F               	xorwf	sprintf@c& (0+255),w,b
  8319  0009F4  A4D8               	btfss	status,2,c
  8320  0009F6  EFFF  F004         	goto	u4181
  8321  0009FA  EF01  F005         	goto	u4180
  8322  0009FE                     u4181:
  8323  0009FE  EFDA  F004         	goto	l5017
  8324  000A02                     u4180:
  8325  000A02                     l5025:
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;doprnt.c: 1371: if(width && flag & 0x03)
  8329  000A02  516D               	movf	sprintf@width& (0+255),w,b
  8330  000A04  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8331  000A06  B4D8               	btfsc	status,2,c
  8332  000A08  EF08  F005         	goto	u4191
  8333  000A0C  EF0A  F005         	goto	u4190
  8334  000A10                     u4191:
  8335  000A10  EF18  F005         	goto	l5031
  8336  000A14                     u4190:
  8337  000A14                     
  8338                           ; BSR set to: 0
  8339  000A14  C06A  F052         	movff	sprintf@flag,??_sprintf
  8340  000A18  0E03               	movlw	3
  8341  000A1A  1652               	andwf	??_sprintf^0,f,c
  8342  000A1C  B4D8               	btfsc	status,2,c
  8343  000A1E  EF13  F005         	goto	u4201
  8344  000A22  EF15  F005         	goto	u4200
  8345  000A26                     u4201:
  8346  000A26  EF18  F005         	goto	l5031
  8347  000A2A                     u4200:
  8348  000A2A                     
  8349                           ; BSR set to: 0
  8350                           ;doprnt.c: 1372: width--;
  8351  000A2A  076D               	decf	sprintf@width& (0+255),f,b
  8352  000A2C  A0D8               	btfss	status,0,c
  8353  000A2E  076E               	decf	(sprintf@width+1)& (0+255),f,b
  8354  000A30                     l5031:
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;doprnt.c: 1407: if(width > c)
  8358  000A30  516F               	movf	sprintf@c& (0+255),w,b
  8359  000A32  6E52               	movwf	??_sprintf^0,c
  8360  000A34  6A53               	clrf	(??_sprintf+1)^0,c
  8361  000A36  516D               	movf	sprintf@width& (0+255),w,b
  8362  000A38  5C52               	subwf	??_sprintf^0,w,c
  8363  000A3A  5053               	movf	(??_sprintf+1)^0,w,c
  8364  000A3C  0A80               	xorlw	128
  8365  000A3E  6E54               	movwf	(??_sprintf+2)^0,c
  8366  000A40  516E               	movf	(sprintf@width+1)& (0+255),w,b
  8367  000A42  0A80               	xorlw	128
  8368  000A44  5854               	subwfb	(??_sprintf+2)^0,w,c
  8369  000A46  B0D8               	btfsc	status,0,c
  8370  000A48  EF28  F005         	goto	u4211
  8371  000A4C  EF2A  F005         	goto	u4210
  8372  000A50                     u4211:
  8373  000A50  EF30  F005         	goto	l5035
  8374  000A54                     u4210:
  8375  000A54                     
  8376                           ; BSR set to: 0
  8377                           ;doprnt.c: 1408: width -= c;
  8378  000A54  516F               	movf	sprintf@c& (0+255),w,b
  8379  000A56  5F6D               	subwf	sprintf@width& (0+255),f,b
  8380  000A58  0E00               	movlw	0
  8381  000A5A  5B6E               	subwfb	(sprintf@width+1)& (0+255),f,b
  8382  000A5C  EF34  F005         	goto	l5037
  8383  000A60                     l5035:
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  8387  000A60  0E00               	movlw	0
  8388  000A62  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  8389  000A64  0E00               	movlw	0
  8390  000A66  6F6D               	movwf	sprintf@width& (0+255),b
  8391  000A68                     l5037:
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  8395  000A68  516D               	movf	sprintf@width& (0+255),w,b
  8396  000A6A  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8397  000A6C  B4D8               	btfsc	status,2,c
  8398  000A6E  EF3B  F005         	goto	u4221
  8399  000A72  EF3D  F005         	goto	u4220
  8400  000A76                     u4221:
  8401  000A76  EF51  F005         	goto	l5045
  8402  000A7A                     u4220:
  8403  000A7A                     l5039:
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  8407  000A7A  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8408  000A7E  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8409  000A82  0E20               	movlw	32
  8410  000A84  6EDF               	movwf	indf2,c
  8411  000A86                     
  8412                           ; BSR set to: 0
  8413  000A86  4A4A               	infsnz	sprintf@sp^0,f,c
  8414  000A88  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8415  000A8A                     
  8416                           ; BSR set to: 0
  8417                           ;doprnt.c: 1457: while(--width);
  8418  000A8A  076D               	decf	sprintf@width& (0+255),f,b
  8419  000A8C  A0D8               	btfss	status,0,c
  8420  000A8E  076E               	decf	(sprintf@width+1)& (0+255),f,b
  8421  000A90  516D               	movf	sprintf@width& (0+255),w,b
  8422  000A92  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8423  000A94  A4D8               	btfss	status,2,c
  8424  000A96  EF4F  F005         	goto	u4231
  8425  000A9A  EF51  F005         	goto	u4230
  8426  000A9E                     u4231:
  8427  000A9E  EF3D  F005         	goto	l5039
  8428  000AA2                     u4230:
  8429  000AA2                     l5045:
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;doprnt.c: 1464: if(flag & 0x03)
  8433  000AA2  C06A  F052         	movff	sprintf@flag,??_sprintf
  8434  000AA6  0E03               	movlw	3
  8435  000AA8  1652               	andwf	??_sprintf^0,f,c
  8436  000AAA  B4D8               	btfsc	status,2,c
  8437  000AAC  EF5A  F005         	goto	u4241
  8438  000AB0  EF5C  F005         	goto	u4240
  8439  000AB4                     u4241:
  8440  000AB4  EF64  F005         	goto	l5051
  8441  000AB8                     u4240:
  8442  000AB8                     
  8443                           ; BSR set to: 0
  8444                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  8445  000AB8  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8446  000ABC  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8447  000AC0  0E2D               	movlw	45
  8448  000AC2  6EDF               	movwf	indf2,c
  8449  000AC4                     
  8450                           ; BSR set to: 0
  8451  000AC4  4A4A               	infsnz	sprintf@sp^0,f,c
  8452  000AC6  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8453  000AC8                     l5051:
  8454                           
  8455                           ; BSR set to: 0
  8456                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  8457  000AC8  C06F  F060         	movff	sprintf@c,sprintf@prec
  8458  000ACC  6B61               	clrf	(sprintf@prec+1)& (0+255),b
  8459                           
  8460                           ;doprnt.c: 1500: while(prec--) {
  8461  000ACE  EFAD  F005         	goto	l5059
  8462  000AD2                     l5053:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  8466  000AD2  C060  F052         	movff	sprintf@prec,??_sprintf
  8467  000AD6  C061  F053         	movff	sprintf@prec+1,??_sprintf+1
  8468  000ADA  90D8               	bcf	status,0,c
  8469  000ADC  3652               	rlcf	??_sprintf^0,f,c
  8470  000ADE  3653               	rlcf	(??_sprintf+1)^0,f,c
  8471  000AE0  90D8               	bcf	status,0,c
  8472  000AE2  3652               	rlcf	??_sprintf^0,f,c
  8473  000AE4  3653               	rlcf	(??_sprintf+1)^0,f,c
  8474  000AE6  0EBD               	movlw	low _dpowers
  8475  000AE8  2452               	addwf	??_sprintf^0,w,c
  8476  000AEA  6EF6               	movwf	tblptrl,c
  8477  000AEC  0E5D               	movlw	high _dpowers
  8478  000AEE  2053               	addwfc	(??_sprintf+1)^0,w,c
  8479  000AF0  6EF7               	movwf	tblptrh,c
  8480  000AF2                     	if	0	;There are less than 3 active tblptr bytes
  8481  000AF2                     	endif
  8482  000AF2  0009               	tblrd		*+
  8483  000AF4  CFF5 F009          	movff	tablat,___lldiv@divisor
  8484  000AF8  0009               	tblrd		*+
  8485  000AFA  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  8486  000AFE  0009               	tblrd		*+
  8487  000B00  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  8488  000B04  000A               	tblrd		*-
  8489  000B06  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  8490  000B0A  C066  F005         	movff	sprintf@val,___lldiv@dividend
  8491  000B0E  C067  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  8492  000B12  C068  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  8493  000B16  C069  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  8494  000B1A  EC87  F00E         	call	___lldiv	;wreg free
  8495  000B1E  C005  F012         	movff	?___lldiv,___llmod@dividend
  8496  000B22  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  8497  000B26  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  8498  000B2A  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  8499  000B2E  0E0A               	movlw	10
  8500  000B30  6E16               	movwf	___llmod@divisor^0,c
  8501  000B32  0E00               	movlw	0
  8502  000B34  6E17               	movwf	(___llmod@divisor+1)^0,c
  8503  000B36  0E00               	movlw	0
  8504  000B38  6E18               	movwf	(___llmod@divisor+2)^0,c
  8505  000B3A  0E00               	movlw	0
  8506  000B3C  6E19               	movwf	(___llmod@divisor+3)^0,c
  8507  000B3E  EC67  F00F         	call	___llmod	;wreg free
  8508  000B42  5012               	movf	?___llmod^0,w,c
  8509  000B44  0F30               	addlw	48
  8510  000B46  0100               	movlb	0	; () banked
  8511  000B48  6F6F               	movwf	sprintf@c& (0+255),b
  8512  000B4A                     
  8513                           ; BSR set to: 0
  8514                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  8515  000B4A  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8516  000B4E  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8517  000B52  C06F  FFDF         	movff	sprintf@c,indf2
  8518  000B56                     
  8519                           ; BSR set to: 0
  8520  000B56  4A4A               	infsnz	sprintf@sp^0,f,c
  8521  000B58  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8522  000B5A                     l5059:
  8523                           
  8524                           ; BSR set to: 0
  8525  000B5A  0760               	decf	sprintf@prec& (0+255),f,b
  8526  000B5C  A0D8               	btfss	status,0,c
  8527  000B5E  0761               	decf	(sprintf@prec+1)& (0+255),f,b
  8528  000B60  2960               	incf	sprintf@prec& (0+255),w,b
  8529  000B62  E106               	bnz	u4251
  8530  000B64  2961               	incf	(sprintf@prec+1)& (0+255),w,b
  8531  000B66  A4D8               	btfss	status,2,c
  8532  000B68  EFB8  F005         	goto	u4251
  8533  000B6C  EFBA  F005         	goto	u4250
  8534  000B70                     u4251:
  8535  000B70  EF69  F005         	goto	l5053
  8536  000B74                     u4250:
  8537  000B74                     l5061:
  8538                           
  8539                           ; BSR set to: 0
  8540  000B74  C04C  FFF6         	movff	sprintf@f,tblptrl
  8541  000B78  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  8542  000B7C  4A4C               	infsnz	sprintf@f^0,f,c
  8543  000B7E  2A4D               	incf	(sprintf@f+1)^0,f,c
  8544  000B80                     	if	0	;tblptru may be non-zero
  8545  000B80                     	endif
  8546  000B80                     	if	0	;tblptru may be non-zero
  8547  000B80                     	endif
  8548  000B80  0008               	tblrd		*
  8549  000B82  CFF5 F06F          	movff	tablat,sprintf@c
  8550  000B86  516F               	movf	sprintf@c& (0+255),w,b
  8551  000B88  A4D8               	btfss	status,2,c
  8552  000B8A  EFC9  F005         	goto	u4261
  8553  000B8E  EFCB  F005         	goto	u4260
  8554  000B92                     u4261:
  8555  000B92  EF43  F003         	goto	l4925
  8556  000B96                     u4260:
  8557  000B96                     l5063:
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;doprnt.c: 1564: *sp = 0;
  8561  000B96  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8562  000B9A  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8563  000B9E  0E00               	movlw	0
  8564  000BA0  6EDF               	movwf	indf2,c
  8565  000BA2                     
  8566                           ; BSR set to: 0
  8567  000BA2  0012               	return		;funcret
  8568  000BA4                     __end_of_sprintf:
  8569                           	opt callstack 0
  8570                           
  8571 ;; *************** function _isdigit *****************
  8572 ;; Defined at:
  8573 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  c               1    wreg     unsigned char 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  c               1    6[COMRAM] unsigned char 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;		None               void
  8580 ;; Registers used:
  8581 ;;		wreg, status,2, status,0
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8587 ;;      Params:         0       0       0       0       0       0       0       0       0
  8588 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8589 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8590 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8591 ;;Total ram usage:        3 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:    2
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_sprintf
  8598 ;;		_atoi
  8599 ;;		_atol
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text32
  8604  002A86                     __ptext32:
  8605                           	opt callstack 0
  8606  002A86                     _isdigit:
  8607                           	opt callstack 26
  8608                           
  8609                           ; BSR set to: 0
  8610                           ;incstack = 0
  8611                           ;isdigit@c stored from wreg
  8612  002A86  6E07               	movwf	isdigit@c^0,c
  8613  002A88  0E00               	movlw	0
  8614  002A8A  6E06               	movwf	_isdigit$1933^0,c
  8615  002A8C  0E3A               	movlw	58
  8616  002A8E  6007               	cpfslt	isdigit@c^0,c
  8617  002A90  EF4C  F015         	goto	u2351
  8618  002A94  EF4E  F015         	goto	u2350
  8619  002A98                     u2351:
  8620  002A98  EF58  F015         	goto	l3553
  8621  002A9C                     u2350:
  8622  002A9C  0E2F               	movlw	47
  8623  002A9E  6407               	cpfsgt	isdigit@c^0,c
  8624  002AA0  EF54  F015         	goto	u2361
  8625  002AA4  EF56  F015         	goto	u2360
  8626  002AA8                     u2361:
  8627  002AA8  EF58  F015         	goto	l3553
  8628  002AAC                     u2360:
  8629  002AAC  0E01               	movlw	1
  8630  002AAE  6E06               	movwf	_isdigit$1933^0,c
  8631  002AB0                     l3553:
  8632  002AB0  C006  F005         	movff	_isdigit$1933,??_isdigit
  8633  002AB4  3005               	rrcf	??_isdigit^0,w,c
  8634  002AB6  0012               	return		;funcret
  8635  002AB8                     __end_of_isdigit:
  8636                           	opt callstack 0
  8637                           
  8638 ;; *************** function ___llmod *****************
  8639 ;; Defined at:
  8640 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  dividend        4   17[COMRAM] unsigned long 
  8643 ;;  divisor         4   21[COMRAM] unsigned long 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  counter         1   25[COMRAM] unsigned char 
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  4   17[COMRAM] unsigned long 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8655 ;;      Params:         8       0       0       0       0       0       0       0       0
  8656 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8657 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8658 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8659 ;;Total ram usage:        9 bytes
  8660 ;; Hardware stack levels used:    1
  8661 ;; Hardware stack levels required when called:    2
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_sprintf
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           	psect	text33
  8670  001ECE                     __ptext33:
  8671                           	opt callstack 0
  8672  001ECE                     ___llmod:
  8673                           	opt callstack 26
  8674  001ECE  5016               	movf	___llmod@divisor^0,w,c
  8675  001ED0  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  8676  001ED2  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  8677  001ED4  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  8678  001ED6  B4D8               	btfsc	status,2,c
  8679  001ED8  EF70  F00F         	goto	u2841
  8680  001EDC  EF72  F00F         	goto	u2840
  8681  001EE0                     u2841:
  8682  001EE0  EFA2  F00F         	goto	l1128
  8683  001EE4                     u2840:
  8684  001EE4  0E01               	movlw	1
  8685  001EE6  6E1A               	movwf	___llmod@counter^0,c
  8686  001EE8  EF7C  F00F         	goto	l3823
  8687  001EEC                     l3821:
  8688  001EEC  90D8               	bcf	status,0,c
  8689  001EEE  3616               	rlcf	___llmod@divisor^0,f,c
  8690  001EF0  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  8691  001EF2  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  8692  001EF4  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  8693  001EF6  2A1A               	incf	___llmod@counter^0,f,c
  8694  001EF8                     l3823:
  8695  001EF8  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  8696  001EFA  EF81  F00F         	goto	u2851
  8697  001EFE  EF83  F00F         	goto	u2850
  8698  001F02                     u2851:
  8699  001F02  EF76  F00F         	goto	l3821
  8700  001F06                     u2850:
  8701  001F06                     l3825:
  8702  001F06  5016               	movf	___llmod@divisor^0,w,c
  8703  001F08  5C12               	subwf	___llmod@dividend^0,w,c
  8704  001F0A  5017               	movf	(___llmod@divisor+1)^0,w,c
  8705  001F0C  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  8706  001F0E  5018               	movf	(___llmod@divisor+2)^0,w,c
  8707  001F10  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  8708  001F12  5019               	movf	(___llmod@divisor+3)^0,w,c
  8709  001F14  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  8710  001F16  A0D8               	btfss	status,0,c
  8711  001F18  EF90  F00F         	goto	u2861
  8712  001F1C  EF92  F00F         	goto	u2860
  8713  001F20                     u2861:
  8714  001F20  EF9A  F00F         	goto	l3829
  8715  001F24                     u2860:
  8716  001F24  5016               	movf	___llmod@divisor^0,w,c
  8717  001F26  5E12               	subwf	___llmod@dividend^0,f,c
  8718  001F28  5017               	movf	(___llmod@divisor+1)^0,w,c
  8719  001F2A  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  8720  001F2C  5018               	movf	(___llmod@divisor+2)^0,w,c
  8721  001F2E  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  8722  001F30  5019               	movf	(___llmod@divisor+3)^0,w,c
  8723  001F32  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  8724  001F34                     l3829:
  8725  001F34  90D8               	bcf	status,0,c
  8726  001F36  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  8727  001F38  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  8728  001F3A  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  8729  001F3C  3216               	rrcf	___llmod@divisor^0,f,c
  8730  001F3E  2E1A               	decfsz	___llmod@counter^0,f,c
  8731  001F40  EF83  F00F         	goto	l3825
  8732  001F44                     l1128:
  8733  001F44  C012  F012         	movff	___llmod@dividend,?___llmod
  8734  001F48  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  8735  001F4C  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  8736  001F50  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  8737  001F54  0012               	return		;funcret
  8738  001F56                     __end_of___llmod:
  8739                           	opt callstack 0
  8740                           
  8741 ;; *************** function _sleepMS *****************
  8742 ;; Defined at:
  8743 ;;		line 105 in file "main.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;  ms              4    4[COMRAM] unsigned long 
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;  t               4    8[COMRAM] unsigned long 
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  1    wreg      void 
  8750 ;; Registers used:
  8751 ;;		wreg, status,2, status,0
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8757 ;;      Params:         4       0       0       0       0       0       0       0       0
  8758 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8760 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8761 ;;Total ram usage:        8 bytes
  8762 ;; Hardware stack levels used:    1
  8763 ;; Hardware stack levels required when called:    2
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_A6_Init
  8768 ;;		_A6_BaudRateSet
  8769 ;;		_A6_BaudRateAutoDetect
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           
  8773                           	psect	text34
  8774  0029E0                     __ptext34:
  8775                           	opt callstack 0
  8776  0029E0                     _sleepMS:
  8777                           	opt callstack 26
  8778  0029E0                     
  8779                           ;main.c: 106: uint32_t t = MILLISECONDS + ms;
  8780  0029E0  5005               	movf	sleepMS@ms^0,w,c
  8781  0029E2  0101               	movlb	1	; () banked
  8782  0029E4  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  8783  0029E6  6E09               	movwf	sleepMS@t^0,c
  8784  0029E8  5006               	movf	(sleepMS@ms+1)^0,w,c
  8785  0029EA  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  8786  0029EC  6E0A               	movwf	(sleepMS@t+1)^0,c
  8787  0029EE  5007               	movf	(sleepMS@ms+2)^0,w,c
  8788  0029F0  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  8789  0029F2  6E0B               	movwf	(sleepMS@t+2)^0,c
  8790  0029F4  5008               	movf	(sleepMS@ms+3)^0,w,c
  8791  0029F6  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  8792  0029F8  6E0C               	movwf	(sleepMS@t+3)^0,c
  8793  0029FA                     l4047:
  8794                           
  8795                           ; BSR set to: 1
  8796  0029FA  5009               	movf	sleepMS@t^0,w,c
  8797  0029FC  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  8798  0029FE  500A               	movf	(sleepMS@t+1)^0,w,c
  8799  002A00  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  8800  002A02  500B               	movf	(sleepMS@t+2)^0,w,c
  8801  002A04  59C3               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
  8802  002A06  500C               	movf	(sleepMS@t+3)^0,w,c
  8803  002A08  59C4               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
  8804  002A0A  A0D8               	btfss	status,0,c
  8805  002A0C  EF0A  F015         	goto	u3191
  8806  002A10  EF0C  F015         	goto	u3190
  8807  002A14                     u3191:
  8808  002A14  EFFD  F014         	goto	l4047
  8809  002A18                     u3190:
  8810  002A18                     
  8811                           ; BSR set to: 1
  8812  002A18  0012               	return		;funcret
  8813  002A1A                     __end_of_sleepMS:
  8814                           	opt callstack 0
  8815                           
  8816 ;; *************** function _printLine *****************
  8817 ;; Defined at:
  8818 ;;		line 110 in file "main.c"
  8819 ;; Parameters:    Size  Location     Type
  8820 ;;  str             2   73[COMRAM] PTR const unsigned char 
  8821 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateAutoDetect@zzzz(32), STR_29(23), loop@zzzz_169(32), 
  8822 ;;		 -> STR_14(27), loop@zzzz_165(32), STR_12(11), loop@zzzz_162(32), 
  8823 ;;		 -> STR_10(16), loop@response(32), STR_8(11), STR_7(13), 
  8824 ;;		 -> STR_6(11), STR_5(23), STR_4(25), loop@zzzz(32), 
  8825 ;;  color           2   75[COMRAM] unsigned int 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;		None
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8837 ;;      Params:         4       0       0       0       0       0       0       0       0
  8838 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8840 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8841 ;;Total ram usage:        4 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    8
  8844 ;; This function calls:
  8845 ;;		_TFT_DrawFillRect
  8846 ;;		_TFT_DrawString
  8847 ;; This function is called by:
  8848 ;;		_loop
  8849 ;;		_A6_BaudRateAutoDetect
  8850 ;;		_A6_Process_Random_Comms
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text35
  8855  001F56                     __ptext35:
  8856                           	opt callstack 0
  8857  001F56                     _printLine:
  8858                           	opt callstack 21
  8859  001F56                     
  8860                           ;main.c: 111: consoleX += 10;
  8861  001F56  0E0A               	movlw	10
  8862  001F58  0100               	movlb	0	; () banked
  8863  001F5A  27CC               	addwf	_consoleX& (0+255),f,b
  8864  001F5C  0E00               	movlw	0
  8865  001F5E  23CD               	addwfc	(_consoleX+1)& (0+255),f,b
  8866  001F60                     
  8867                           ; BSR set to: 0
  8868                           ;main.c: 112: TFT_DrawFillRect(consoleX, 0, 40, 400, 0x0000);
  8869  001F60  C0CC  F01C         	movff	_consoleX,TFT_DrawFillRect@x
  8870  001F64  C0CD  F01D         	movff	_consoleX+1,TFT_DrawFillRect@x+1
  8871  001F68  0E00               	movlw	0
  8872  001F6A  6E1F               	movwf	(TFT_DrawFillRect@y+1)^0,c
  8873  001F6C  0E00               	movlw	0
  8874  001F6E  6E1E               	movwf	TFT_DrawFillRect@y^0,c
  8875  001F70  0E00               	movlw	0
  8876  001F72  6E21               	movwf	(TFT_DrawFillRect@w+1)^0,c
  8877  001F74  0E28               	movlw	40
  8878  001F76  6E20               	movwf	TFT_DrawFillRect@w^0,c
  8879  001F78  0E01               	movlw	1
  8880  001F7A  6E23               	movwf	(TFT_DrawFillRect@h+1)^0,c
  8881  001F7C  0E90               	movlw	144
  8882  001F7E  6E22               	movwf	TFT_DrawFillRect@h^0,c
  8883  001F80  0E00               	movlw	0
  8884  001F82  6E25               	movwf	(TFT_DrawFillRect@color+1)^0,c
  8885  001F84  0E00               	movlw	0
  8886  001F86  6E24               	movwf	TFT_DrawFillRect@color^0,c
  8887  001F88  ECAF  F011         	call	_TFT_DrawFillRect	;wreg free
  8888  001F8C                     
  8889                           ;main.c: 113: TFT_DrawString(consoleX, (400 - 1), str, color, 0x0000, 1);
  8890  001F8C  C0CC  F03F         	movff	_consoleX,TFT_DrawString@x
  8891  001F90  C0CD  F040         	movff	_consoleX+1,TFT_DrawString@x+1
  8892  001F94  0E01               	movlw	1
  8893  001F96  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  8894  001F98  0E8F               	movlw	143
  8895  001F9A  6E41               	movwf	TFT_DrawString@y^0,c
  8896  001F9C  C04A  F043         	movff	printLine@str,TFT_DrawString@str
  8897  001FA0  C04B  F044         	movff	printLine@str+1,TFT_DrawString@str+1
  8898  001FA4  C04C  F045         	movff	printLine@color,TFT_DrawString@color
  8899  001FA8  C04D  F046         	movff	printLine@color+1,TFT_DrawString@color+1
  8900  001FAC  0E00               	movlw	0
  8901  001FAE  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  8902  001FB0  0E00               	movlw	0
  8903  001FB2  6E47               	movwf	TFT_DrawString@bg^0,c
  8904  001FB4  0E01               	movlw	1
  8905  001FB6  6E49               	movwf	TFT_DrawString@size^0,c
  8906  001FB8  ECD9  F00E         	call	_TFT_DrawString	;wreg free
  8907  001FBC                     
  8908                           ;main.c: 114: if(consoleX > (240 - 35)) consoleX = 0;
  8909  001FBC  0100               	movlb	0	; () banked
  8910  001FBE  51CD               	movf	(_consoleX+1)& (0+255),w,b
  8911  001FC0  E109               	bnz	u3150
  8912  001FC2  0ECE               	movlw	206
  8913  001FC4  5DCC               	subwf	_consoleX& (0+255),w,b
  8914  001FC6  A0D8               	btfss	status,0,c
  8915  001FC8  EFE8  F00F         	goto	u3151
  8916  001FCC  EFEA  F00F         	goto	u3150
  8917  001FD0                     u3151:
  8918  001FD0  EFEE  F00F         	goto	l111
  8919  001FD4                     u3150:
  8920  001FD4                     
  8921                           ; BSR set to: 0
  8922  001FD4  0E00               	movlw	0
  8923  001FD6  6FCD               	movwf	(_consoleX+1)& (0+255),b
  8924  001FD8  0E00               	movlw	0
  8925  001FDA  6FCC               	movwf	_consoleX& (0+255),b
  8926  001FDC                     l111:
  8927                           
  8928                           ; BSR set to: 0
  8929  001FDC  0012               	return		;funcret
  8930  001FDE                     __end_of_printLine:
  8931                           	opt callstack 0
  8932                           
  8933 ;; *************** function _TFT_DrawString *****************
  8934 ;; Defined at:
  8935 ;;		line 213 in file "TFT.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;  x               2   62[COMRAM] unsigned int 
  8938 ;;  y               2   64[COMRAM] unsigned int 
  8939 ;;  str             2   66[COMRAM] PTR const unsigned char 
  8940 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateAutoDetect@zzzz(32), STR_29(23), STR_21(28), 
  8941 ;;		 -> STR_20(11), Ecg_ProcessHeartRate@heartrateString(5), loop@zzzz_169(32), STR_14(27), 
  8942 ;;		 -> loop@zzzz_165(32), STR_12(11), loop@zzzz_162(32), STR_10(16), 
  8943 ;;		 -> loop@response(32), STR_8(11), STR_7(13), STR_6(11), 
  8944 ;;		 -> STR_5(23), STR_4(25), loop@zzzz(32), 
  8945 ;;  color           2   68[COMRAM] unsigned int 
  8946 ;;  bg              2   70[COMRAM] unsigned int 
  8947 ;;  size            1   72[COMRAM] unsigned char 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8959 ;;      Params:        11       0       0       0       0       0       0       0       0
  8960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8962 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8963 ;;Total ram usage:       11 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    7
  8966 ;; This function calls:
  8967 ;;		_TFT_DrawChar
  8968 ;; This function is called by:
  8969 ;;		_printLine
  8970 ;;		_Ecg_Background_Leads_Ok
  8971 ;;		_Ecg_Background_Leads_Failure
  8972 ;;		_Ecg_ProcessHeartRate
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text36
  8977  001DB2                     __ptext36:
  8978                           	opt callstack 0
  8979  001DB2                     _TFT_DrawString:
  8980                           	opt callstack 21
  8981  001DB2                     
  8982                           ;TFT.c: 214: while(*str) {
  8983  001DB2  EF08  F00F         	goto	l3621
  8984  001DB6                     l3615:
  8985                           
  8986                           ;TFT.c: 215: TFT_DrawChar(x, y, *str, color, bg, size);
  8987  001DB6  C03F  F02A         	movff	TFT_DrawString@x,TFT_DrawChar@x
  8988  001DBA  C040  F02B         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  8989  001DBE  C041  F02C         	movff	TFT_DrawString@y,TFT_DrawChar@y
  8990  001DC2  C042  F02D         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  8991  001DC6  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  8992  001DCA  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  8993  001DCE  6AF8               	clrf	tblptru,c
  8994  001DD0  0E07               	movlw	(high __ramtop+-1)
  8995  001DD2  64F7               	cpfsgt	tblptrh,c
  8996  001DD4  D003               	bra	u2497
  8997  001DD6  0008               	tblrd		*
  8998  001DD8  50F5               	movf	tablat,w,c
  8999  001DDA  D005               	bra	u2490
  9000  001DDC                     u2497:
  9001  001DDC  CFF6 FFE9          	movff	tblptrl,fsr0l
  9002  001DE0  CFF7 FFEA          	movff	tblptrh,fsr0h
  9003  001DE4  50EF               	movf	indf0,w,c
  9004  001DE6                     u2490:
  9005  001DE6  6E2E               	movwf	TFT_DrawChar@c^0,c
  9006  001DE8  C045  F02F         	movff	TFT_DrawString@color,TFT_DrawChar@color
  9007  001DEC  C046  F030         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  9008  001DF0  C047  F031         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  9009  001DF4  C048  F032         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  9010  001DF8  C049  F033         	movff	TFT_DrawString@size,TFT_DrawChar@size
  9011  001DFC  ECD2  F005         	call	_TFT_DrawChar	;wreg free
  9012  001E00                     
  9013                           ;TFT.c: 216: y -= (6 * size);
  9014  001E00  5049               	movf	TFT_DrawString@size^0,w,c
  9015  001E02  0D06               	mullw	6
  9016  001E04  50F3               	movf	243,w,c
  9017  001E06  5E41               	subwf	TFT_DrawString@y^0,f,c
  9018  001E08  50F4               	movf	244,w,c
  9019  001E0A  5A42               	subwfb	(TFT_DrawString@y+1)^0,f,c
  9020  001E0C                     
  9021                           ;TFT.c: 217: str++;
  9022  001E0C  4A43               	infsnz	TFT_DrawString@str^0,f,c
  9023  001E0E  2A44               	incf	(TFT_DrawString@str+1)^0,f,c
  9024  001E10                     l3621:
  9025  001E10  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  9026  001E14  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  9027  001E18  6AF8               	clrf	tblptru,c
  9028  001E1A  0E07               	movlw	(high __ramtop+-1)
  9029  001E1C  64F7               	cpfsgt	tblptrh,c
  9030  001E1E  D003               	bra	u2507
  9031  001E20  0008               	tblrd		*
  9032  001E22  50F5               	movf	tablat,w,c
  9033  001E24  D005               	bra	u2500
  9034  001E26                     u2507:
  9035  001E26  CFF6 FFE9          	movff	tblptrl,fsr0l
  9036  001E2A  CFF7 FFEA          	movff	tblptrh,fsr0h
  9037  001E2E  50EF               	movf	indf0,w,c
  9038  001E30                     u2500:
  9039  001E30  0900               	iorlw	0
  9040  001E32  A4D8               	btfss	status,2,c
  9041  001E34  EF1E  F00F         	goto	u2511
  9042  001E38  EF20  F00F         	goto	u2510
  9043  001E3C                     u2511:
  9044  001E3C  EFDB  F00E         	goto	l3615
  9045  001E40                     u2510:
  9046  001E40  0012               	return		;funcret
  9047  001E42                     __end_of_TFT_DrawString:
  9048                           	opt callstack 0
  9049                           
  9050 ;; *************** function _TFT_DrawChar *****************
  9051 ;; Defined at:
  9052 ;;		line 192 in file "TFT.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  x               2   41[COMRAM] unsigned int 
  9055 ;;  y               2   43[COMRAM] unsigned int 
  9056 ;;  c               1   45[COMRAM] unsigned char 
  9057 ;;  color           2   46[COMRAM] unsigned int 
  9058 ;;  bg              2   48[COMRAM] unsigned int 
  9059 ;;  size            1   50[COMRAM] unsigned char 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  j               1   60[COMRAM] char 
  9062 ;;  line            1   55[COMRAM] unsigned char 
  9063 ;;  i               1   61[COMRAM] char 
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      void 
  9066 ;; Registers used:
  9067 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9073 ;;      Params:        10       0       0       0       0       0       0       0       0
  9074 ;;      Locals:         7       0       0       0       0       0       0       0       0
  9075 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9076 ;;      Totals:        21       0       0       0       0       0       0       0       0
  9077 ;;Total ram usage:       21 bytes
  9078 ;; Hardware stack levels used:    1
  9079 ;; Hardware stack levels required when called:    6
  9080 ;; This function calls:
  9081 ;;		_TFT_DrawFillRect
  9082 ;;		_TFT_DrawPixel
  9083 ;;		___wmul
  9084 ;; This function is called by:
  9085 ;;		_TFT_DrawString
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text37
  9090  000BA4                     __ptext37:
  9091                           	opt callstack 0
  9092  000BA4                     _TFT_DrawChar:
  9093                           	opt callstack 21
  9094  000BA4                     
  9095                           ;TFT.c: 193: for(int8_t i=0; i<5; i++ ) {
  9096  000BA4  0E00               	movlw	0
  9097  000BA6  6E3E               	movwf	TFT_DrawChar@i^0,c
  9098  000BA8                     l3459:
  9099                           
  9100                           ;TFT.c: 194: uint8_t line = TFT_Font[c * 5 + i];
  9101  000BA8  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  9102  000BAC  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  9103  000BAE  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  9104  000BB0  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  9105  000BB2  502E               	movf	TFT_DrawChar@c^0,w,c
  9106  000BB4  0D05               	mullw	5
  9107  000BB6  0EF1               	movlw	low _TFT_Font
  9108  000BB8  6E36               	movwf	(??_TFT_DrawChar+2)^0,c
  9109  000BBA  0E57               	movlw	high _TFT_Font
  9110  000BBC  6E37               	movwf	(??_TFT_DrawChar+3)^0,c
  9111  000BBE  50F3               	movf	243,w,c
  9112  000BC0  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  9113  000BC2  50F4               	movf	244,w,c
  9114  000BC4  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  9115  000BC6  5034               	movf	??_TFT_DrawChar^0,w,c
  9116  000BC8  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  9117  000BCA  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  9118  000BCC  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  9119  000BCE  C036  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  9120  000BD2  C037  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  9121  000BD6                     	if	0	;tblptru may be non-zero
  9122  000BD6                     	endif
  9123  000BD6                     	if	0	;tblptru may be non-zero
  9124  000BD6                     	endif
  9125  000BD6  0008               	tblrd		*
  9126  000BD8  CFF5 F038          	movff	tablat,TFT_DrawChar@line
  9127  000BDC                     
  9128                           ;TFT.c: 195: for(int8_t j=0; j<8; j++, line >>= 1) {
  9129  000BDC  0E00               	movlw	0
  9130  000BDE  6E3D               	movwf	TFT_DrawChar@j^0,c
  9131  000BE0                     l290:
  9132                           
  9133                           ;TFT.c: 196: if(line & 1) {
  9134  000BE0  A038               	btfss	TFT_DrawChar@line^0,0,c
  9135  000BE2  EFF5  F005         	goto	u2181
  9136  000BE6  EFF7  F005         	goto	u2180
  9137  000BEA                     u2181:
  9138  000BEA  EF50  F006         	goto	l3473
  9139  000BEE                     u2180:
  9140  000BEE                     
  9141                           ;TFT.c: 197: if(size == 1) {
  9142  000BEE  0433               	decf	TFT_DrawChar@size^0,w,c
  9143  000BF0  A4D8               	btfss	status,2,c
  9144  000BF2  EFFD  F005         	goto	u2191
  9145  000BF6  EFFF  F005         	goto	u2190
  9146  000BFA                     u2191:
  9147  000BFA  EF1A  F006         	goto	l3471
  9148  000BFE                     u2190:
  9149  000BFE                     
  9150                           ;TFT.c: 198: TFT_DrawPixel((x + j), (y - i), color);
  9151  000BFE  502A               	movf	TFT_DrawChar@x^0,w,c
  9152  000C00  243D               	addwf	TFT_DrawChar@j^0,w,c
  9153  000C02  6E0D               	movwf	TFT_DrawPixel@x^0,c
  9154  000C04  0E00               	movlw	0
  9155  000C06  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  9156  000C08  0EFF               	movlw	255
  9157  000C0A  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  9158  000C0C  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  9159  000C0E  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  9160  000C12  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  9161  000C14  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  9162  000C16  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  9163  000C18  5034               	movf	??_TFT_DrawChar^0,w,c
  9164  000C1A  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  9165  000C1C  6E0F               	movwf	TFT_DrawPixel@y^0,c
  9166  000C1E  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  9167  000C20  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  9168  000C22  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  9169  000C24  C02F  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  9170  000C28  C030  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  9171  000C2C  ECB3  F014         	call	_TFT_DrawPixel	;wreg free
  9172                           
  9173                           ;TFT.c: 199: } else {
  9174  000C30  EFB3  F006         	goto	l3481
  9175  000C34                     l3471:
  9176                           
  9177                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  9178  000C34  503D               	movf	TFT_DrawChar@j^0,w,c
  9179  000C36  6E05               	movwf	___wmul@multiplier^0,c
  9180  000C38  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9181  000C3A  BE05               	btfsc	___wmul@multiplier^0,7,c
  9182  000C3C  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9183  000C3E  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9184  000C42  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9185  000C44  EC74  F015         	call	___wmul	;wreg free
  9186  000C48  502A               	movf	TFT_DrawChar@x^0,w,c
  9187  000C4A  2405               	addwf	?___wmul^0,w,c
  9188  000C4C  6E39               	movwf	_TFT_DrawChar$2204^0,c
  9189  000C4E  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  9190  000C50  2006               	addwfc	(?___wmul+1)^0,w,c
  9191  000C52  6E3A               	movwf	(_TFT_DrawChar$2204+1)^0,c
  9192                           
  9193                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  9194  000C54  503E               	movf	TFT_DrawChar@i^0,w,c
  9195  000C56  6E05               	movwf	___wmul@multiplier^0,c
  9196  000C58  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9197  000C5A  BE05               	btfsc	___wmul@multiplier^0,7,c
  9198  000C5C  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9199  000C5E  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9200  000C62  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9201  000C64  EC74  F015         	call	___wmul	;wreg free
  9202  000C68  5005               	movf	?___wmul^0,w,c
  9203  000C6A  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  9204  000C6C  6E3B               	movwf	_TFT_DrawChar$2205^0,c
  9205  000C6E  5006               	movf	(?___wmul+1)^0,w,c
  9206  000C70  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  9207  000C72  6E3C               	movwf	(_TFT_DrawChar$2205+1)^0,c
  9208                           
  9209                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  9210  000C74  C039  F01C         	movff	_TFT_DrawChar$2204,TFT_DrawFillRect@x
  9211  000C78  C03A  F01D         	movff	_TFT_DrawChar$2204+1,TFT_DrawFillRect@x+1
  9212  000C7C  C03B  F01E         	movff	_TFT_DrawChar$2205,TFT_DrawFillRect@y
  9213  000C80  C03C  F01F         	movff	_TFT_DrawChar$2205+1,TFT_DrawFillRect@y+1
  9214  000C84  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  9215  000C88  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  9216  000C8A  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  9217  000C8E  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  9218  000C90  C02F  F024         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  9219  000C94  C030  F025         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  9220  000C98  ECAF  F011         	call	_TFT_DrawFillRect	;wreg free
  9221  000C9C  EFB3  F006         	goto	l3481
  9222  000CA0                     l3473:
  9223  000CA0  502F               	movf	TFT_DrawChar@color^0,w,c
  9224  000CA2  1831               	xorwf	TFT_DrawChar@bg^0,w,c
  9225  000CA4  E109               	bnz	u2200
  9226  000CA6  5030               	movf	(TFT_DrawChar@color+1)^0,w,c
  9227  000CA8  1832               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  9228  000CAA  B4D8               	btfsc	status,2,c
  9229  000CAC  EF5A  F006         	goto	u2201
  9230  000CB0  EF5C  F006         	goto	u2200
  9231  000CB4                     u2201:
  9232  000CB4  EFB3  F006         	goto	l3481
  9233  000CB8                     u2200:
  9234  000CB8                     
  9235                           ;TFT.c: 203: if(size == 1) {
  9236  000CB8  0433               	decf	TFT_DrawChar@size^0,w,c
  9237  000CBA  A4D8               	btfss	status,2,c
  9238  000CBC  EF62  F006         	goto	u2211
  9239  000CC0  EF64  F006         	goto	u2210
  9240  000CC4                     u2211:
  9241  000CC4  EF7F  F006         	goto	l3479
  9242  000CC8                     u2210:
  9243  000CC8                     
  9244                           ;TFT.c: 204: TFT_DrawPixel((x + j), (y - i), bg);
  9245  000CC8  502A               	movf	TFT_DrawChar@x^0,w,c
  9246  000CCA  243D               	addwf	TFT_DrawChar@j^0,w,c
  9247  000CCC  6E0D               	movwf	TFT_DrawPixel@x^0,c
  9248  000CCE  0E00               	movlw	0
  9249  000CD0  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  9250  000CD2  0EFF               	movlw	255
  9251  000CD4  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  9252  000CD6  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  9253  000CD8  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  9254  000CDC  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  9255  000CDE  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  9256  000CE0  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  9257  000CE2  5034               	movf	??_TFT_DrawChar^0,w,c
  9258  000CE4  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  9259  000CE6  6E0F               	movwf	TFT_DrawPixel@y^0,c
  9260  000CE8  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  9261  000CEA  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  9262  000CEC  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  9263  000CEE  C031  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  9264  000CF2  C032  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  9265  000CF6  ECB3  F014         	call	_TFT_DrawPixel	;wreg free
  9266                           
  9267                           ;TFT.c: 205: } else {
  9268  000CFA  EFB3  F006         	goto	l3481
  9269  000CFE                     l3479:
  9270                           
  9271                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  9272  000CFE  503D               	movf	TFT_DrawChar@j^0,w,c
  9273  000D00  6E05               	movwf	___wmul@multiplier^0,c
  9274  000D02  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9275  000D04  BE05               	btfsc	___wmul@multiplier^0,7,c
  9276  000D06  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9277  000D08  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9278  000D0C  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9279  000D0E  EC74  F015         	call	___wmul	;wreg free
  9280  000D12  502A               	movf	TFT_DrawChar@x^0,w,c
  9281  000D14  2405               	addwf	?___wmul^0,w,c
  9282  000D16  6E39               	movwf	_TFT_DrawChar$2204^0,c
  9283  000D18  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  9284  000D1A  2006               	addwfc	(?___wmul+1)^0,w,c
  9285  000D1C  6E3A               	movwf	(_TFT_DrawChar$2204+1)^0,c
  9286                           
  9287                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  9288  000D1E  503E               	movf	TFT_DrawChar@i^0,w,c
  9289  000D20  6E05               	movwf	___wmul@multiplier^0,c
  9290  000D22  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9291  000D24  BE05               	btfsc	___wmul@multiplier^0,7,c
  9292  000D26  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9293  000D28  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9294  000D2C  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9295  000D2E  EC74  F015         	call	___wmul	;wreg free
  9296  000D32  5005               	movf	?___wmul^0,w,c
  9297  000D34  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  9298  000D36  6E3B               	movwf	_TFT_DrawChar$2205^0,c
  9299  000D38  5006               	movf	(?___wmul+1)^0,w,c
  9300  000D3A  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  9301  000D3C  6E3C               	movwf	(_TFT_DrawChar$2205+1)^0,c
  9302                           
  9303                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  9304  000D3E  C039  F01C         	movff	_TFT_DrawChar$2204,TFT_DrawFillRect@x
  9305  000D42  C03A  F01D         	movff	_TFT_DrawChar$2204+1,TFT_DrawFillRect@x+1
  9306  000D46  C03B  F01E         	movff	_TFT_DrawChar$2205,TFT_DrawFillRect@y
  9307  000D4A  C03C  F01F         	movff	_TFT_DrawChar$2205+1,TFT_DrawFillRect@y+1
  9308  000D4E  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  9309  000D52  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  9310  000D54  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  9311  000D58  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  9312  000D5A  C031  F024         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  9313  000D5E  C032  F025         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  9314  000D62  ECAF  F011         	call	_TFT_DrawFillRect	;wreg free
  9315  000D66                     l3481:
  9316  000D66  2A3D               	incf	TFT_DrawChar@j^0,f,c
  9317  000D68  90D8               	bcf	status,0,c
  9318  000D6A  3238               	rrcf	TFT_DrawChar@line^0,f,c
  9319  000D6C  503D               	movf	TFT_DrawChar@j^0,w,c
  9320  000D6E  0A80               	xorlw	128
  9321  000D70  0F78               	addlw	-136
  9322  000D72  A0D8               	btfss	status,0,c
  9323  000D74  EFBE  F006         	goto	u2221
  9324  000D78  EFC0  F006         	goto	u2220
  9325  000D7C                     u2221:
  9326  000D7C  EFF0  F005         	goto	l290
  9327  000D80                     u2220:
  9328  000D80  2A3E               	incf	TFT_DrawChar@i^0,f,c
  9329  000D82  503E               	movf	TFT_DrawChar@i^0,w,c
  9330  000D84  0A80               	xorlw	128
  9331  000D86  0F7B               	addlw	-133
  9332  000D88  A0D8               	btfss	status,0,c
  9333  000D8A  EFC9  F006         	goto	u2231
  9334  000D8E  EFCB  F006         	goto	u2230
  9335  000D92                     u2231:
  9336  000D92  EFD4  F005         	goto	l3459
  9337  000D96                     u2230:
  9338  000D96  0012               	return		;funcret
  9339  000D98                     __end_of_TFT_DrawChar:
  9340                           	opt callstack 0
  9341                           
  9342 ;; *************** function _TFT_DrawPixel *****************
  9343 ;; Defined at:
  9344 ;;		line 94 in file "TFT.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  x               2   12[COMRAM] unsigned int 
  9347 ;;  y               2   14[COMRAM] unsigned int 
  9348 ;;  color           2   16[COMRAM] unsigned int 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;		None
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg, status,2, cstack
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9360 ;;      Params:         6       0       0       0       0       0       0       0       0
  9361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9363 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9364 ;;Total ram usage:        6 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:    3
  9367 ;; This function calls:
  9368 ;;		_TFT_WriteRegister
  9369 ;; This function is called by:
  9370 ;;		_TFT_DrawLine
  9371 ;;		_TFT_DrawChar
  9372 ;;		_TFT_DrawBitmap
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           	psect	text38
  9377  002966                     __ptext38:
  9378                           	opt callstack 0
  9379  002966                     _TFT_DrawPixel:
  9380                           	opt callstack 23
  9381  002966                     
  9382                           ;TFT.c: 95: TFT_WriteRegister(0x0200, x);
  9383  002966  0E02               	movlw	2
  9384  002968  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9385  00296A  0E00               	movlw	0
  9386  00296C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9387  00296E  C00D  F007         	movff	TFT_DrawPixel@x,TFT_WriteRegister@data
  9388  002972  C00E  F008         	movff	TFT_DrawPixel@x+1,TFT_WriteRegister@data+1
  9389  002976  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9390                           
  9391                           ;TFT.c: 96: TFT_WriteRegister(0x0201, y);
  9392  00297A  0E02               	movlw	2
  9393  00297C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9394  00297E  0E01               	movlw	1
  9395  002980  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9396  002982  C00F  F007         	movff	TFT_DrawPixel@y,TFT_WriteRegister@data
  9397  002986  C010  F008         	movff	TFT_DrawPixel@y+1,TFT_WriteRegister@data+1
  9398  00298A  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9399                           
  9400                           ;TFT.c: 97: TFT_WriteRegister(0x0202, color);
  9401  00298E  0E02               	movlw	2
  9402  002990  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9403  002992  0E02               	movlw	2
  9404  002994  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9405  002996  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  9406  00299A  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  9407  00299E  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9408  0029A2  0012               	return		;funcret
  9409  0029A4                     __end_of_TFT_DrawPixel:
  9410                           	opt callstack 0
  9411                           
  9412 ;; *************** function _TFT_DrawFillRect *****************
  9413 ;; Defined at:
  9414 ;;		line 138 in file "TFT.c"
  9415 ;; Parameters:    Size  Location     Type
  9416 ;;  x               2   27[COMRAM] unsigned int 
  9417 ;;  y               2   29[COMRAM] unsigned int 
  9418 ;;  w               2   31[COMRAM] unsigned int 
  9419 ;;  h               2   33[COMRAM] unsigned int 
  9420 ;;  color           2   35[COMRAM] unsigned int 
  9421 ;; Auto vars:     Size  Location     Type
  9422 ;;		None
  9423 ;; Return value:  Size  Location     Type
  9424 ;;                  1    wreg      void 
  9425 ;; Registers used:
  9426 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9427 ;; Tracked objects:
  9428 ;;		On entry : 0/0
  9429 ;;		On exit  : 0/0
  9430 ;;		Unchanged: 0/0
  9431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9432 ;;      Params:        10       0       0       0       0       0       0       0       0
  9433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9434 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9435 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9436 ;;Total ram usage:       14 bytes
  9437 ;; Hardware stack levels used:    1
  9438 ;; Hardware stack levels required when called:    5
  9439 ;; This function calls:
  9440 ;;		_TFT_Flood
  9441 ;;		_TFT_FullScreen
  9442 ;;		_TFT_SetAddrWindow
  9443 ;;		___wmul
  9444 ;; This function is called by:
  9445 ;;		_printLine
  9446 ;;		_TFT_DrawChar
  9447 ;;		_Ecg_ProcessHeartbeat
  9448 ;;		_Ecg_Draw
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           	psect	text39
  9453  00235E                     __ptext39:
  9454                           	opt callstack 0
  9455  00235E                     _TFT_DrawFillRect:
  9456                           	opt callstack 21
  9457  00235E                     
  9458                           ;TFT.c: 139: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h -1));
  9459  00235E  C01C  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  9460  002362  C01D  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  9461  002366  C01E  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  9462  00236A  C01F  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  9463  00236E  5020               	movf	TFT_DrawFillRect@w^0,w,c
  9464  002370  241C               	addwf	TFT_DrawFillRect@x^0,w,c
  9465  002372  6E26               	movwf	??_TFT_DrawFillRect^0,c
  9466  002374  5021               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  9467  002376  201D               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  9468  002378  6E27               	movwf	(??_TFT_DrawFillRect+1)^0,c
  9469  00237A  0EFF               	movlw	255
  9470  00237C  2426               	addwf	??_TFT_DrawFillRect^0,w,c
  9471  00237E  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  9472  002380  0EFF               	movlw	255
  9473  002382  2027               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  9474  002384  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  9475  002386  5022               	movf	TFT_DrawFillRect@h^0,w,c
  9476  002388  241E               	addwf	TFT_DrawFillRect@y^0,w,c
  9477  00238A  6E28               	movwf	(??_TFT_DrawFillRect+2)^0,c
  9478  00238C  5023               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  9479  00238E  201F               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  9480  002390  6E29               	movwf	(??_TFT_DrawFillRect+3)^0,c
  9481  002392  0EFF               	movlw	255
  9482  002394  2428               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  9483  002396  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  9484  002398  0EFF               	movlw	255
  9485  00239A  2029               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  9486  00239C  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  9487  00239E  EC36  F011         	call	_TFT_SetAddrWindow	;wreg free
  9488  0023A2                     
  9489                           ;TFT.c: 140: TFT_Flood(color, (w * h));
  9490  0023A2  C024  F00D         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  9491  0023A6  C025  F00E         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  9492  0023AA  C020  F005         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  9493  0023AE  C021  F006         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  9494  0023B2  C022  F007         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  9495  0023B6  C023  F008         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  9496  0023BA  EC74  F015         	call	___wmul	;wreg free
  9497  0023BE  C005  F00F         	movff	?___wmul,TFT_Flood@len
  9498  0023C2  C006  F010         	movff	?___wmul+1,TFT_Flood@len+1
  9499  0023C6  6A11               	clrf	(TFT_Flood@len+2)^0,c
  9500  0023C8  6A12               	clrf	(TFT_Flood@len+3)^0,c
  9501  0023CA  ECC0  F007         	call	_TFT_Flood	;wreg free
  9502  0023CE                     
  9503                           ;TFT.c: 141: TFT_FullScreen();
  9504  0023CE  EC87  F015         	call	_TFT_FullScreen	;wreg free
  9505  0023D2  0012               	return		;funcret
  9506  0023D4                     __end_of_TFT_DrawFillRect:
  9507                           	opt callstack 0
  9508                           
  9509 ;; *************** function ___wmul *****************
  9510 ;; Defined at:
  9511 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  multiplier      2    4[COMRAM] unsigned int 
  9514 ;;  multiplicand    2    6[COMRAM] unsigned int 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  product         2    8[COMRAM] unsigned int 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  2    4[COMRAM] unsigned int 
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0, prodl, prodh
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9526 ;;      Params:         4       0       0       0       0       0       0       0       0
  9527 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9529 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9530 ;;Total ram usage:        6 bytes
  9531 ;; Hardware stack levels used:    1
  9532 ;; Hardware stack levels required when called:    2
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_TFT_DrawFillRect
  9537 ;;		_TFT_DrawChar
  9538 ;;		_sprintf
  9539 ;;		_atoi
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text40
  9544  002AE8                     __ptext40:
  9545                           	opt callstack 0
  9546  002AE8                     ___wmul:
  9547                           	opt callstack 26
  9548  002AE8  5005               	movf	___wmul@multiplier^0,w,c
  9549  002AEA  0207               	mulwf	___wmul@multiplicand^0,c
  9550  002AEC  CFF3 F009          	movff	prodl,___wmul@product
  9551  002AF0  CFF4 F00A          	movff	prodh,___wmul@product+1
  9552  002AF4  5005               	movf	___wmul@multiplier^0,w,c
  9553  002AF6  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  9554  002AF8  50F3               	movf	243,w,c
  9555  002AFA  260A               	addwf	(___wmul@product+1)^0,f,c
  9556  002AFC  5006               	movf	(___wmul@multiplier+1)^0,w,c
  9557  002AFE  0207               	mulwf	___wmul@multiplicand^0,c
  9558  002B00  50F3               	movf	243,w,c
  9559  002B02  260A               	addwf	(___wmul@product+1)^0,f,c
  9560  002B04  C009  F005         	movff	___wmul@product,?___wmul
  9561  002B08  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  9562  002B0C  0012               	return		;funcret
  9563  002B0E                     __end_of___wmul:
  9564                           	opt callstack 0
  9565                           
  9566 ;; *************** function _TFT_FullScreen *****************
  9567 ;; Defined at:
  9568 ;;		line 68 in file "TFT.c"
  9569 ;; Parameters:    Size  Location     Type
  9570 ;;		None
  9571 ;; Auto vars:     Size  Location     Type
  9572 ;;		None
  9573 ;; Return value:  Size  Location     Type
  9574 ;;                  1    wreg      void 
  9575 ;; Registers used:
  9576 ;;		wreg, status,2, cstack
  9577 ;; Tracked objects:
  9578 ;;		On entry : 0/0
  9579 ;;		On exit  : 0/0
  9580 ;;		Unchanged: 0/0
  9581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9582 ;;      Params:         0       0       0       0       0       0       0       0       0
  9583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9584 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9585 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9586 ;;Total ram usage:        0 bytes
  9587 ;; Hardware stack levels used:    1
  9588 ;; Hardware stack levels required when called:    4
  9589 ;; This function calls:
  9590 ;;		_TFT_SetAddrWindow
  9591 ;; This function is called by:
  9592 ;;		_TFT_Init
  9593 ;;		_TFT_DrawFillRect
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text41
  9598  002B0E                     __ptext41:
  9599                           	opt callstack 0
  9600  002B0E                     _TFT_FullScreen:
  9601                           	opt callstack 21
  9602  002B0E                     
  9603                           ;TFT.c: 69: TFT_SetAddrWindow(0, 0, 240 - 1, 400 - 1);
  9604  002B0E  0E00               	movlw	0
  9605  002B10  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  9606  002B12  0E00               	movlw	0
  9607  002B14  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  9608  002B16  0E00               	movlw	0
  9609  002B18  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  9610  002B1A  0E00               	movlw	0
  9611  002B1C  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  9612  002B1E  0E00               	movlw	0
  9613  002B20  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  9614  002B22  0EEF               	movlw	239
  9615  002B24  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  9616  002B26  0E01               	movlw	1
  9617  002B28  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  9618  002B2A  0E8F               	movlw	143
  9619  002B2C  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  9620  002B2E  EC36  F011         	call	_TFT_SetAddrWindow	;wreg free
  9621  002B32  0012               	return		;funcret
  9622  002B34                     __end_of_TFT_FullScreen:
  9623                           	opt callstack 0
  9624                           
  9625 ;; *************** function _TFT_SetAddrWindow *****************
  9626 ;; Defined at:
  9627 ;;		line 56 in file "TFT.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  x1              2   12[COMRAM] unsigned int 
  9630 ;;  y1              2   14[COMRAM] unsigned int 
  9631 ;;  x2              2   16[COMRAM] unsigned int 
  9632 ;;  y2              2   18[COMRAM] unsigned int 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, cstack
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9644 ;;      Params:         8       0       0       0       0       0       0       0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9647 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9648 ;;Total ram usage:        8 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    3
  9651 ;; This function calls:
  9652 ;;		_TFT_WriteRegister
  9653 ;; This function is called by:
  9654 ;;		_TFT_FullScreen
  9655 ;;		_TFT_DrawFillRect
  9656 ;; This function uses a non-reentrant model
  9657 ;;
  9658                           
  9659                           	psect	text42
  9660  00226C                     __ptext42:
  9661                           	opt callstack 0
  9662  00226C                     _TFT_SetAddrWindow:
  9663                           	opt callstack 22
  9664  00226C                     
  9665                           ;TFT.c: 58: TFT_WriteRegister(0x0210, x1);
  9666  00226C  0E02               	movlw	2
  9667  00226E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9668  002270  0E10               	movlw	16
  9669  002272  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9670  002274  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  9671  002278  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  9672  00227C  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9673                           
  9674                           ;TFT.c: 59: TFT_WriteRegister(0x0211, x2);
  9675  002280  0E02               	movlw	2
  9676  002282  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9677  002284  0E11               	movlw	17
  9678  002286  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9679  002288  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  9680  00228C  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  9681  002290  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9682                           
  9683                           ;TFT.c: 60: TFT_WriteRegister(0x0212, y1);
  9684  002294  0E02               	movlw	2
  9685  002296  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9686  002298  0E12               	movlw	18
  9687  00229A  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9688  00229C  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  9689  0022A0  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  9690  0022A4  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9691                           
  9692                           ;TFT.c: 61: TFT_WriteRegister(0x0213, y2);
  9693  0022A8  0E02               	movlw	2
  9694  0022AA  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9695  0022AC  0E13               	movlw	19
  9696  0022AE  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9697  0022B0  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  9698  0022B4  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  9699  0022B8  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9700                           
  9701                           ;TFT.c: 64: TFT_WriteRegister(0x0200, x1);
  9702  0022BC  0E02               	movlw	2
  9703  0022BE  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9704  0022C0  0E00               	movlw	0
  9705  0022C2  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9706  0022C4  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  9707  0022C8  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  9708  0022CC  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9709                           
  9710                           ;TFT.c: 65: TFT_WriteRegister(0x0201, y2);
  9711  0022D0  0E02               	movlw	2
  9712  0022D2  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9713  0022D4  0E01               	movlw	1
  9714  0022D6  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9715  0022D8  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  9716  0022DC  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  9717  0022E0  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9718  0022E4  0012               	return		;funcret
  9719  0022E6                     __end_of_TFT_SetAddrWindow:
  9720                           	opt callstack 0
  9721                           
  9722 ;; *************** function _TFT_Flood *****************
  9723 ;; Defined at:
  9724 ;;		line 144 in file "TFT.c"
  9725 ;; Parameters:    Size  Location     Type
  9726 ;;  color           2   12[COMRAM] unsigned int 
  9727 ;;  len             4   14[COMRAM] unsigned long 
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;  blocks          2   22[COMRAM] unsigned int 
  9730 ;;  color_lo        1   26[COMRAM] unsigned char 
  9731 ;;  color_hi        1   25[COMRAM] unsigned char 
  9732 ;;  i               1   24[COMRAM] unsigned char 
  9733 ;; Return value:  Size  Location     Type
  9734 ;;                  1    wreg      void 
  9735 ;; Registers used:
  9736 ;;		wreg, status,2, status,0, cstack
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9742 ;;      Params:         6       0       0       0       0       0       0       0       0
  9743 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9744 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9745 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9746 ;;Total ram usage:       15 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:    3
  9749 ;; This function calls:
  9750 ;;		_TFT_WriteRegister
  9751 ;; This function is called by:
  9752 ;;		_TFT_DrawFillRect
  9753 ;;		_TFT_FillScreen
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           	psect	text43
  9758  000F80                     __ptext43:
  9759                           	opt callstack 0
  9760  000F80                     _TFT_Flood:
  9761                           	opt callstack 22
  9762  000F80                     
  9763                           ;TFT.c: 145: uint16_t blocks;;TFT.c: 146: uint8_t i;;TFT.c: 147: uint8_t color_hi = colo
      +                          r >> 8;
  9764  000F80  500E               	movf	(TFT_Flood@color+1)^0,w,c
  9765  000F82  6E1A               	movwf	TFT_Flood@color_hi^0,c
  9766  000F84                     
  9767                           ;TFT.c: 148: uint8_t color_lo = color;
  9768  000F84  C00D  F01B         	movff	TFT_Flood@color,TFT_Flood@color_lo
  9769  000F88                     
  9770                           ;TFT.c: 151: TFT_WriteRegister(0x0202, color);
  9771  000F88  0E02               	movlw	2
  9772  000F8A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9773  000F8C  0E02               	movlw	2
  9774  000F8E  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9775  000F90  C00D  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  9776  000F94  C00E  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  9777  000F98  EC71  F014         	call	_TFT_WriteRegister	;wreg free
  9778  000F9C                     
  9779                           ;TFT.c: 152: len--;
  9780  000F9C  060F               	decf	TFT_Flood@len^0,f,c
  9781  000F9E  0E00               	movlw	0
  9782  000FA0  5A10               	subwfb	(TFT_Flood@len+1)^0,f,c
  9783  000FA2  5A11               	subwfb	(TFT_Flood@len+2)^0,f,c
  9784  000FA4  5A12               	subwfb	(TFT_Flood@len+3)^0,f,c
  9785  000FA6                     
  9786                           ;TFT.c: 156: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  9787  000FA6  9082               	bcf	130,0,c	;volatile
  9788  000FA8  F000               	nop		;# 
  9789  000FAA                     
  9790                           ;TFT.c: 157: blocks = (uint16_t)(len / 4);
  9791  000FAA  C00F  F013         	movff	TFT_Flood@len,??_TFT_Flood
  9792  000FAE  C010  F014         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  9793  000FB2  C011  F015         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  9794  000FB6  C012  F016         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  9795  000FBA  0E03               	movlw	3
  9796  000FBC  EFE5  F007         	goto	u2010
  9797  000FC0                     u2015:
  9798  000FC0  90D8               	bcf	status,0,c
  9799  000FC2  3216               	rrcf	(??_TFT_Flood+3)^0,f,c
  9800  000FC4  3215               	rrcf	(??_TFT_Flood+2)^0,f,c
  9801  000FC6  3214               	rrcf	(??_TFT_Flood+1)^0,f,c
  9802  000FC8  3213               	rrcf	??_TFT_Flood^0,f,c
  9803  000FCA                     u2010:
  9804  000FCA  2EE8               	decfsz	wreg,f,c
  9805  000FCC  EFE0  F007         	goto	u2015
  9806  000FD0  C013  F017         	movff	??_TFT_Flood,TFT_Flood@blocks
  9807  000FD4  C014  F018         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  9808  000FD8                     
  9809                           ;TFT.c: 158: if(color_hi == color_lo) {
  9810  000FD8  501B               	movf	TFT_Flood@color_lo^0,w,c
  9811  000FDA  181A               	xorwf	TFT_Flood@color_hi^0,w,c
  9812  000FDC  A4D8               	btfss	status,2,c
  9813  000FDE  EFF3  F007         	goto	u2021
  9814  000FE2  EFF5  F007         	goto	u2020
  9815  000FE6                     u2021:
  9816  000FE6  EF5A  F008         	goto	l3375
  9817  000FEA                     u2020:
  9818  000FEA  EF0F  F008         	goto	l3369
  9819  000FEE                     l267:
  9820                           
  9821                           ;TFT.c: 160: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9822  000FEE  9A80               	bcf	128,5,c	;volatile
  9823  000FF0  F000               	nop		;# 
  9824  000FF2  8A80               	bsf	128,5,c	;volatile
  9825  000FF4  9A80               	bcf	128,5,c	;volatile
  9826  000FF6  F000               	nop		;# 
  9827  000FF8  8A80               	bsf	128,5,c	;volatile
  9828                           
  9829                           ;TFT.c: 161: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9830  000FFA  9A80               	bcf	128,5,c	;volatile
  9831  000FFC  F000               	nop		;# 
  9832  000FFE  8A80               	bsf	128,5,c	;volatile
  9833  001000  9A80               	bcf	128,5,c	;volatile
  9834  001002  F000               	nop		;# 
  9835  001004  8A80               	bsf	128,5,c	;volatile
  9836                           
  9837                           ;TFT.c: 162: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9838  001006  9A80               	bcf	128,5,c	;volatile
  9839  001008  F000               	nop		;# 
  9840  00100A  8A80               	bsf	128,5,c	;volatile
  9841  00100C  9A80               	bcf	128,5,c	;volatile
  9842  00100E  F000               	nop		;# 
  9843  001010  8A80               	bsf	128,5,c	;volatile
  9844                           
  9845                           ;TFT.c: 163: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9846  001012  9A80               	bcf	128,5,c	;volatile
  9847  001014  F000               	nop		;# 
  9848  001016  8A80               	bsf	128,5,c	;volatile
  9849  001018  9A80               	bcf	128,5,c	;volatile
  9850  00101A  F000               	nop		;# 
  9851  00101C  8A80               	bsf	128,5,c	;volatile
  9852  00101E                     l3369:
  9853  00101E  0617               	decf	TFT_Flood@blocks^0,f,c
  9854  001020  A0D8               	btfss	status,0,c
  9855  001022  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  9856  001024  2817               	incf	TFT_Flood@blocks^0,w,c
  9857  001026  E106               	bnz	u2031
  9858  001028  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  9859  00102A  A4D8               	btfss	status,2,c
  9860  00102C  EF1A  F008         	goto	u2031
  9861  001030  EF1C  F008         	goto	u2030
  9862  001034                     u2031:
  9863  001034  EFF7  F007         	goto	l267
  9864  001038                     u2030:
  9865  001038                     
  9866                           ;TFT.c: 164: };TFT.c: 165: for(i = (uint8_t)len & 3; i--; ) {
  9867  001038  500F               	movf	TFT_Flood@len^0,w,c
  9868  00103A  0B03               	andlw	3
  9869  00103C  6E19               	movwf	TFT_Flood@i^0,c
  9870  00103E  EF27  F008         	goto	l3373
  9871  001042                     l270:
  9872                           
  9873                           ;TFT.c: 166: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9874  001042  9A80               	bcf	128,5,c	;volatile
  9875  001044  F000               	nop		;# 
  9876  001046  8A80               	bsf	128,5,c	;volatile
  9877  001048  9A80               	bcf	128,5,c	;volatile
  9878  00104A  F000               	nop		;# 
  9879  00104C  8A80               	bsf	128,5,c	;volatile
  9880  00104E                     l3373:
  9881  00104E  0619               	decf	TFT_Flood@i^0,f,c
  9882  001050  2819               	incf	TFT_Flood@i^0,w,c
  9883  001052  A4D8               	btfss	status,2,c
  9884  001054  EF2E  F008         	goto	u2041
  9885  001058  EF30  F008         	goto	u2040
  9886  00105C                     u2041:
  9887  00105C  EF21  F008         	goto	l270
  9888  001060                     u2040:
  9889  001060  EF7F  F008         	goto	l272
  9890  001064                     l274:
  9891                           
  9892                           ;TFT.c: 170: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9893  001064  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9894  001068  9A80               	bcf	128,5,c	;volatile
  9895  00106A  F000               	nop		;# 
  9896  00106C  8A80               	bsf	128,5,c	;volatile
  9897  00106E  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9898  001072  9A80               	bcf	128,5,c	;volatile
  9899  001074  F000               	nop		;# 
  9900  001076  8A80               	bsf	128,5,c	;volatile
  9901                           
  9902                           ;TFT.c: 171: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9903  001078  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9904  00107C  9A80               	bcf	128,5,c	;volatile
  9905  00107E  F000               	nop		;# 
  9906  001080  8A80               	bsf	128,5,c	;volatile
  9907  001082  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9908  001086  9A80               	bcf	128,5,c	;volatile
  9909  001088  F000               	nop		;# 
  9910  00108A  8A80               	bsf	128,5,c	;volatile
  9911                           
  9912                           ;TFT.c: 172: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9913  00108C  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9914  001090  9A80               	bcf	128,5,c	;volatile
  9915  001092  F000               	nop		;# 
  9916  001094  8A80               	bsf	128,5,c	;volatile
  9917  001096  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9918  00109A  9A80               	bcf	128,5,c	;volatile
  9919  00109C  F000               	nop		;# 
  9920  00109E  8A80               	bsf	128,5,c	;volatile
  9921                           
  9922                           ;TFT.c: 173: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9923  0010A0  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9924  0010A4  9A80               	bcf	128,5,c	;volatile
  9925  0010A6  F000               	nop		;# 
  9926  0010A8  8A80               	bsf	128,5,c	;volatile
  9927  0010AA  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9928  0010AE  9A80               	bcf	128,5,c	;volatile
  9929  0010B0  F000               	nop		;# 
  9930  0010B2  8A80               	bsf	128,5,c	;volatile
  9931  0010B4                     l3375:
  9932  0010B4  0617               	decf	TFT_Flood@blocks^0,f,c
  9933  0010B6  A0D8               	btfss	status,0,c
  9934  0010B8  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  9935  0010BA  2817               	incf	TFT_Flood@blocks^0,w,c
  9936  0010BC  E106               	bnz	u2051
  9937  0010BE  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  9938  0010C0  A4D8               	btfss	status,2,c
  9939  0010C2  EF65  F008         	goto	u2051
  9940  0010C6  EF67  F008         	goto	u2050
  9941  0010CA                     u2051:
  9942  0010CA  EF32  F008         	goto	l274
  9943  0010CE                     u2050:
  9944  0010CE                     
  9945                           ;TFT.c: 174: };TFT.c: 175: for(i = (uint8_t)len & 3; i--; ) {
  9946  0010CE  500F               	movf	TFT_Flood@len^0,w,c
  9947  0010D0  0B03               	andlw	3
  9948  0010D2  6E19               	movwf	TFT_Flood@i^0,c
  9949  0010D4  EF76  F008         	goto	l3379
  9950  0010D8                     l277:
  9951                           
  9952                           ;TFT.c: 176: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9953  0010D8  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9954  0010DC  9A80               	bcf	128,5,c	;volatile
  9955  0010DE  F000               	nop		;# 
  9956  0010E0  8A80               	bsf	128,5,c	;volatile
  9957  0010E2  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9958  0010E6  9A80               	bcf	128,5,c	;volatile
  9959  0010E8  F000               	nop		;# 
  9960  0010EA  8A80               	bsf	128,5,c	;volatile
  9961  0010EC                     l3379:
  9962  0010EC  0619               	decf	TFT_Flood@i^0,f,c
  9963  0010EE  2819               	incf	TFT_Flood@i^0,w,c
  9964  0010F0  A4D8               	btfss	status,2,c
  9965  0010F2  EF7D  F008         	goto	u2061
  9966  0010F6  EF7F  F008         	goto	u2060
  9967  0010FA                     u2061:
  9968  0010FA  EF6C  F008         	goto	l277
  9969  0010FE                     u2060:
  9970  0010FE                     l272:
  9971                           
  9972                           ;TFT.c: 177: };TFT.c: 178: };TFT.c: 179: PORTCbits.RC0 = 1;;
  9973  0010FE  8082               	bsf	130,0,c	;volatile
  9974  001100  0012               	return		;funcret
  9975  001102                     __end_of_TFT_Flood:
  9976                           	opt callstack 0
  9977                           
  9978 ;; *************** function _TFT_WriteRegister *****************
  9979 ;; Defined at:
  9980 ;;		line 12 in file "TFT.c"
  9981 ;; Parameters:    Size  Location     Type
  9982 ;;  reg             2    4[COMRAM] unsigned int 
  9983 ;;  data            2    6[COMRAM] unsigned int 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  l               1   11[COMRAM] unsigned char 
  9986 ;;  h               1   10[COMRAM] unsigned char 
  9987 ;;  l               1    9[COMRAM] unsigned char 
  9988 ;;  h               1    8[COMRAM] unsigned char 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, status,2
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9998 ;;      Params:         4       0       0       0       0       0       0       0       0
  9999 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10001 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10002 ;;Total ram usage:        8 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; Hardware stack levels required when called:    2
 10005 ;; This function calls:
 10006 ;;		Nothing
 10007 ;; This function is called by:
 10008 ;;		_TFT_SetAddrWindow
 10009 ;;		_TFT_Init
 10010 ;;		_TFT_DrawPixel
 10011 ;;		_TFT_Flood
 10012 ;;		_TFT_FillScreen
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           	psect	text44
 10017  0028E2                     __ptext44:
 10018                           	opt callstack 0
 10019  0028E2                     _TFT_WriteRegister:
 10020                           	opt callstack 23
 10021  0028E2                     
 10022                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
 10023  0028E2  9082               	bcf	130,0,c	;volatile
 10024  0028E4  F000               	nop		;# 
 10025                           
 10026                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
 10027  0028E6  9282               	bcf	130,1,c	;volatile
 10028  0028E8  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
 10029  0028EA  6E09               	movwf	TFT_WriteRegister@h^0,c
 10030  0028EC  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
 10031  0028F0  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
 10032  0028F4  9A80               	bcf	128,5,c	;volatile
 10033  0028F6  F000               	nop		;# 
 10034  0028F8  8A80               	bsf	128,5,c	;volatile
 10035  0028FA  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
 10036  0028FE  9A80               	bcf	128,5,c	;volatile
 10037  002900  F000               	nop		;# 
 10038  002902  8A80               	bsf	128,5,c	;volatile
 10039  002904                     
 10040                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
 10041  002904  8282               	bsf	130,1,c	;volatile
 10042  002906  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
 10043  002908  6E0B               	movwf	TFT_WriteRegister@h_747^0,c
 10044  00290A  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_748
 10045  00290E  C00B  FF81         	movff	TFT_WriteRegister@h_747,3969	;volatile
 10046  002912  9A80               	bcf	128,5,c	;volatile
 10047  002914  F000               	nop		;# 
 10048  002916  8A80               	bsf	128,5,c	;volatile
 10049  002918  C00C  FF81         	movff	TFT_WriteRegister@l_748,3969	;volatile
 10050  00291C  9A80               	bcf	128,5,c	;volatile
 10051  00291E  F000               	nop		;# 
 10052  002920  8A80               	bsf	128,5,c	;volatile
 10053  002922                     
 10054                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
 10055  002922  8082               	bsf	130,0,c	;volatile
 10056  002924  0012               	return		;funcret
 10057  002926                     __end_of_TFT_WriteRegister:
 10058                           	opt callstack 0
 10059                           
 10060 ;; *************** function _EUSART_BaudRateSet *****************
 10061 ;; Defined at:
 10062 ;;		line 41 in file "EUSART.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  baudRate        4   17[COMRAM] const unsigned long 
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;  tmp             4   25[COMRAM] unsigned long 
 10067 ;; Return value:  Size  Location     Type
 10068 ;;                  1    wreg      void 
 10069 ;; Registers used:
 10070 ;;		wreg, status,2, status,0, cstack
 10071 ;; Tracked objects:
 10072 ;;		On entry : 0/0
 10073 ;;		On exit  : 0/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10076 ;;      Params:         4       0       0       0       0       0       0       0       0
 10077 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10078 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10079 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10080 ;;Total ram usage:       12 bytes
 10081 ;; Hardware stack levels used:    1
 10082 ;; Hardware stack levels required when called:    3
 10083 ;; This function calls:
 10084 ;;		___lldiv
 10085 ;; This function is called by:
 10086 ;;		_A6_BaudRateSet
 10087 ;;		_A6_BaudRateAutoDetect
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           	psect	text45
 10092  0020EC                     __ptext45:
 10093                           	opt callstack 0
 10094  0020EC                     _EUSART_BaudRateSet:
 10095                           	opt callstack 25
 10096  0020EC                     
 10097                           ;EUSART.c: 42: TXSTAbits.SYNC = 0;
 10098  0020EC  98AC               	bcf	172,4,c	;volatile
 10099                           
 10100                           ;EUSART.c: 43: TXSTAbits.BRGH = 1;
 10101  0020EE  84AC               	bsf	172,2,c	;volatile
 10102                           
 10103                           ;EUSART.c: 44: BAUDCONbits.BRG16 = 1;
 10104  0020F0  86B8               	bsf	184,3,c	;volatile
 10105  0020F2                     
 10106                           ;EUSART.c: 46: uint32_t tmp = (48000000 / baudRate);
 10107  0020F2  0E00               	movlw	0
 10108  0020F4  6E05               	movwf	___lldiv@dividend^0,c
 10109  0020F6  0E6C               	movlw	108
 10110  0020F8  6E06               	movwf	(___lldiv@dividend+1)^0,c
 10111  0020FA  0EDC               	movlw	220
 10112  0020FC  6E07               	movwf	(___lldiv@dividend+2)^0,c
 10113  0020FE  0E02               	movlw	2
 10114  002100  6E08               	movwf	(___lldiv@dividend+3)^0,c
 10115  002102  C012  F009         	movff	EUSART_BaudRateSet@baudRate,___lldiv@divisor
 10116  002106  C013  F00A         	movff	EUSART_BaudRateSet@baudRate+1,___lldiv@divisor+1
 10117  00210A  C014  F00B         	movff	EUSART_BaudRateSet@baudRate+2,___lldiv@divisor+2
 10118  00210E  C015  F00C         	movff	EUSART_BaudRateSet@baudRate+3,___lldiv@divisor+3
 10119  002112  EC87  F00E         	call	___lldiv	;wreg free
 10120  002116  C005  F01A         	movff	?___lldiv,EUSART_BaudRateSet@tmp
 10121  00211A  C006  F01B         	movff	?___lldiv+1,EUSART_BaudRateSet@tmp+1
 10122  00211E  C007  F01C         	movff	?___lldiv+2,EUSART_BaudRateSet@tmp+2
 10123  002122  C008  F01D         	movff	?___lldiv+3,EUSART_BaudRateSet@tmp+3
 10124  002126                     
 10125                           ;EUSART.c: 47: tmp = tmp / 4;
 10126  002126  C01A  F016         	movff	EUSART_BaudRateSet@tmp,??_EUSART_BaudRateSet
 10127  00212A  C01B  F017         	movff	EUSART_BaudRateSet@tmp+1,??_EUSART_BaudRateSet+1
 10128  00212E  C01C  F018         	movff	EUSART_BaudRateSet@tmp+2,??_EUSART_BaudRateSet+2
 10129  002132  C01D  F019         	movff	EUSART_BaudRateSet@tmp+3,??_EUSART_BaudRateSet+3
 10130  002136  0E03               	movlw	3
 10131  002138  EFA3  F010         	goto	u3280
 10132  00213C                     u3285:
 10133  00213C  90D8               	bcf	status,0,c
 10134  00213E  3219               	rrcf	(??_EUSART_BaudRateSet+3)^0,f,c
 10135  002140  3218               	rrcf	(??_EUSART_BaudRateSet+2)^0,f,c
 10136  002142  3217               	rrcf	(??_EUSART_BaudRateSet+1)^0,f,c
 10137  002144  3216               	rrcf	??_EUSART_BaudRateSet^0,f,c
 10138  002146                     u3280:
 10139  002146  2EE8               	decfsz	wreg,f,c
 10140  002148  EF9E  F010         	goto	u3285
 10141  00214C  C016  F01A         	movff	??_EUSART_BaudRateSet,EUSART_BaudRateSet@tmp
 10142  002150  C017  F01B         	movff	??_EUSART_BaudRateSet+1,EUSART_BaudRateSet@tmp+1
 10143  002154  C018  F01C         	movff	??_EUSART_BaudRateSet+2,EUSART_BaudRateSet@tmp+2
 10144  002158  C019  F01D         	movff	??_EUSART_BaudRateSet+3,EUSART_BaudRateSet@tmp+3
 10145  00215C                     
 10146                           ;EUSART.c: 48: tmp--;
 10147  00215C  061A               	decf	EUSART_BaudRateSet@tmp^0,f,c
 10148  00215E  0E00               	movlw	0
 10149  002160  5A1B               	subwfb	(EUSART_BaudRateSet@tmp+1)^0,f,c
 10150  002162  5A1C               	subwfb	(EUSART_BaudRateSet@tmp+2)^0,f,c
 10151  002164  5A1D               	subwfb	(EUSART_BaudRateSet@tmp+3)^0,f,c
 10152  002166                     
 10153                           ;EUSART.c: 50: SPBRG = (uint8_t) tmp;
 10154  002166  C01A  FFAF         	movff	EUSART_BaudRateSet@tmp,4015	;volatile
 10155  00216A                     
 10156                           ;EUSART.c: 51: SPBRGH = (uint8_t) (tmp >> 8);
 10157  00216A  C01B  FFB0         	movff	EUSART_BaudRateSet@tmp+1,4016	;volatile
 10158  00216E  0012               	return		;funcret
 10159  002170                     __end_of_EUSART_BaudRateSet:
 10160                           	opt callstack 0
 10161                           
 10162 ;; *************** function ___lldiv *****************
 10163 ;; Defined at:
 10164 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
 10165 ;; Parameters:    Size  Location     Type
 10166 ;;  dividend        4    4[COMRAM] unsigned long 
 10167 ;;  divisor         4    8[COMRAM] unsigned long 
 10168 ;; Auto vars:     Size  Location     Type
 10169 ;;  quotient        4   12[COMRAM] unsigned long 
 10170 ;;  counter         1   16[COMRAM] unsigned char 
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  4    4[COMRAM] unsigned long 
 10173 ;; Registers used:
 10174 ;;		wreg, status,2, status,0
 10175 ;; Tracked objects:
 10176 ;;		On entry : 0/0
 10177 ;;		On exit  : 0/0
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10180 ;;      Params:         8       0       0       0       0       0       0       0       0
 10181 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10183 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10184 ;;Total ram usage:       13 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:    2
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_EUSART_BaudRateSet
 10191 ;;		_sprintf
 10192 ;;		_Ecg_ProcessHeartRate
 10193 ;; This function uses a non-reentrant model
 10194 ;;
 10195                           
 10196                           	psect	text46
 10197  001D0E                     __ptext46:
 10198                           	opt callstack 0
 10199  001D0E                     ___lldiv:
 10200                           	opt callstack 26
 10201  001D0E  0E00               	movlw	0
 10202  001D10  6E0D               	movwf	___lldiv@quotient^0,c
 10203  001D12  0E00               	movlw	0
 10204  001D14  6E0E               	movwf	(___lldiv@quotient+1)^0,c
 10205  001D16  0E00               	movlw	0
 10206  001D18  6E0F               	movwf	(___lldiv@quotient+2)^0,c
 10207  001D1A  0E00               	movlw	0
 10208  001D1C  6E10               	movwf	(___lldiv@quotient+3)^0,c
 10209  001D1E  5009               	movf	___lldiv@divisor^0,w,c
 10210  001D20  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
 10211  001D22  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
 10212  001D24  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
 10213  001D26  B4D8               	btfsc	status,2,c
 10214  001D28  EF98  F00E         	goto	u2751
 10215  001D2C  EF9A  F00E         	goto	u2750
 10216  001D30                     u2751:
 10217  001D30  EFD0  F00E         	goto	l747
 10218  001D34                     u2750:
 10219  001D34  0E01               	movlw	1
 10220  001D36  6E11               	movwf	___lldiv@counter^0,c
 10221  001D38  EFA4  F00E         	goto	l3759
 10222  001D3C                     l3757:
 10223  001D3C  90D8               	bcf	status,0,c
 10224  001D3E  3609               	rlcf	___lldiv@divisor^0,f,c
 10225  001D40  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
 10226  001D42  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
 10227  001D44  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
 10228  001D46  2A11               	incf	___lldiv@counter^0,f,c
 10229  001D48                     l3759:
 10230  001D48  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
 10231  001D4A  EFA9  F00E         	goto	u2761
 10232  001D4E  EFAB  F00E         	goto	u2760
 10233  001D52                     u2761:
 10234  001D52  EF9E  F00E         	goto	l3757
 10235  001D56                     u2760:
 10236  001D56                     l3761:
 10237  001D56  90D8               	bcf	status,0,c
 10238  001D58  360D               	rlcf	___lldiv@quotient^0,f,c
 10239  001D5A  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
 10240  001D5C  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
 10241  001D5E  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
 10242  001D60  5009               	movf	___lldiv@divisor^0,w,c
 10243  001D62  5C05               	subwf	___lldiv@dividend^0,w,c
 10244  001D64  500A               	movf	(___lldiv@divisor+1)^0,w,c
 10245  001D66  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
 10246  001D68  500B               	movf	(___lldiv@divisor+2)^0,w,c
 10247  001D6A  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
 10248  001D6C  500C               	movf	(___lldiv@divisor+3)^0,w,c
 10249  001D6E  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
 10250  001D70  A0D8               	btfss	status,0,c
 10251  001D72  EFBD  F00E         	goto	u2771
 10252  001D76  EFBF  F00E         	goto	u2770
 10253  001D7A                     u2771:
 10254  001D7A  EFC8  F00E         	goto	l3769
 10255  001D7E                     u2770:
 10256  001D7E  5009               	movf	___lldiv@divisor^0,w,c
 10257  001D80  5E05               	subwf	___lldiv@dividend^0,f,c
 10258  001D82  500A               	movf	(___lldiv@divisor+1)^0,w,c
 10259  001D84  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
 10260  001D86  500B               	movf	(___lldiv@divisor+2)^0,w,c
 10261  001D88  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
 10262  001D8A  500C               	movf	(___lldiv@divisor+3)^0,w,c
 10263  001D8C  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
 10264  001D8E  800D               	bsf	___lldiv@quotient^0,0,c
 10265  001D90                     l3769:
 10266  001D90  90D8               	bcf	status,0,c
 10267  001D92  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
 10268  001D94  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
 10269  001D96  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
 10270  001D98  3209               	rrcf	___lldiv@divisor^0,f,c
 10271  001D9A  2E11               	decfsz	___lldiv@counter^0,f,c
 10272  001D9C  EFAB  F00E         	goto	l3761
 10273  001DA0                     l747:
 10274  001DA0  C00D  F005         	movff	___lldiv@quotient,?___lldiv
 10275  001DA4  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
 10276  001DA8  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
 10277  001DAC  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
 10278  001DB0  0012               	return		;funcret
 10279  001DB2                     __end_of___lldiv:
 10280                           	opt callstack 0
 10281                           
 10282 ;; *************** function _A6_IsAlive *****************
 10283 ;; Defined at:
 10284 ;;		line 17 in file "A6Lib.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;		None
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  response       32   30[COMRAM] unsigned char [32]
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      unsigned char 
 10291 ;; Registers used:
 10292 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10298 ;;      Params:         0       0       0       0       0       0       0       0       0
 10299 ;;      Locals:        32       0       0       0       0       0       0       0       0
 10300 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10301 ;;      Totals:        32       0       0       0       0       0       0       0       0
 10302 ;;Total ram usage:       32 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; Hardware stack levels required when called:    6
 10305 ;; This function calls:
 10306 ;;		_A6_Command
 10307 ;;		_strcmp
 10308 ;; This function is called by:
 10309 ;;		_loop
 10310 ;;		_A6_BaudRateSet
 10311 ;;		_A6_BaudRateAutoDetect
 10312 ;; This function uses a non-reentrant model
 10313 ;;
 10314                           
 10315                           	psect	text47
 10316  00271C                     __ptext47:
 10317                           	opt callstack 0
 10318  00271C                     _A6_IsAlive:
 10319                           	opt callstack 23
 10320  00271C                     
 10321                           ;A6Lib.c: 18: char response[32];;A6Lib.c: 19: A6_Command("AT\r", 0, response, 32);
 10322  00271C  0EEE               	movlw	low STR_22
 10323  00271E  6E18               	movwf	A6_Command@command^0,c
 10324  002720  0E5F               	movlw	high STR_22
 10325  002722  6E19               	movwf	(A6_Command@command+1)^0,c
 10326  002724  0E00               	movlw	0
 10327  002726  6E1B               	movwf	(A6_Command@timeout+1)^0,c
 10328  002728  0E00               	movlw	0
 10329  00272A  6E1A               	movwf	A6_Command@timeout^0,c
 10330  00272C  0E1F               	movlw	low A6_IsAlive@response
 10331  00272E  6E1C               	movwf	A6_Command@response^0,c
 10332  002730  0E00               	movlw	high A6_IsAlive@response
 10333  002732  6E1D               	movwf	(A6_Command@response+1)^0,c
 10334  002734  0E20               	movlw	32
 10335  002736  6E1E               	movwf	A6_Command@responseLen^0,c
 10336  002738  EC33  F010         	call	_A6_Command	;wreg free
 10337  00273C                     
 10338                           ;A6Lib.c: 20: if(strcmp(response, "OK") == 0) {
 10339  00273C  0E1F               	movlw	low A6_IsAlive@response
 10340  00273E  6E05               	movwf	strcmp@s1^0,c
 10341  002740  0E00               	movlw	high A6_IsAlive@response
 10342  002742  6E06               	movwf	(strcmp@s1+1)^0,c
 10343  002744  0EFA               	movlw	low STR_23
 10344  002746  6E07               	movwf	strcmp@s2^0,c
 10345  002748  0E5F               	movlw	high STR_23
 10346  00274A  6E08               	movwf	(strcmp@s2+1)^0,c
 10347  00274C  EC5E  F013         	call	_strcmp	;wreg free
 10348  002750  5005               	movf	?_strcmp^0,w,c
 10349  002752  1006               	iorwf	(?_strcmp+1)^0,w,c
 10350  002754  A4D8               	btfss	status,2,c
 10351  002756  EFAF  F013         	goto	u3161
 10352  00275A  EFB1  F013         	goto	u3160
 10353  00275E                     u3161:
 10354  00275E  EFB4  F013         	goto	l4023
 10355  002762                     u3160:
 10356  002762                     
 10357                           ;A6Lib.c: 21: return 1;
 10358  002762  0E01               	movlw	1
 10359  002764  EFB5  F013         	goto	l515
 10360  002768                     l4023:
 10361                           
 10362                           ;A6Lib.c: 22: };A6Lib.c: 23: return 0;
 10363  002768  0E00               	movlw	0
 10364  00276A                     l515:
 10365  00276A  0012               	return		;funcret
 10366  00276C                     __end_of_A6_IsAlive:
 10367                           	opt callstack 0
 10368                           
 10369 ;; *************** function _strcmp *****************
 10370 ;; Defined at:
 10371 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
 10372 ;; Parameters:    Size  Location     Type
 10373 ;;  s1              2    4[COMRAM] PTR const unsigned char 
 10374 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_IsAlive@response(32), 
 10375 ;;  s2              2    6[COMRAM] PTR const unsigned char 
 10376 ;;		 -> STR_31(3), STR_28(3), STR_23(3), 
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;  r               1   10[COMRAM] char 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;                  2    4[COMRAM] int 
 10381 ;; Registers used:
 10382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10388 ;;      Params:         4       0       0       0       0       0       0       0       0
 10389 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10390 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10391 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10392 ;;Total ram usage:        7 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:    2
 10395 ;; This function calls:
 10396 ;;		Nothing
 10397 ;; This function is called by:
 10398 ;;		_A6_IsAlive
 10399 ;;		_A6_BaudRateSet
 10400 ;;		_A6_Process_Random_Comms
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text48
 10405  0026BC                     __ptext48:
 10406                           	opt callstack 0
 10407  0026BC                     _strcmp:
 10408                           	opt callstack 26
 10409  0026BC  EF64  F013         	goto	l3631
 10410  0026C0                     l3629:
 10411  0026C0  4A05               	infsnz	strcmp@s1^0,f,c
 10412  0026C2  2A06               	incf	(strcmp@s1+1)^0,f,c
 10413  0026C4  4A07               	infsnz	strcmp@s2^0,f,c
 10414  0026C6  2A08               	incf	(strcmp@s2+1)^0,f,c
 10415  0026C8                     l3631:
 10416  0026C8  C007  FFF6         	movff	strcmp@s2,tblptrl
 10417  0026CC  C008  FFF7         	movff	strcmp@s2+1,tblptrh
 10418  0026D0                     	if	0	;tblptru may be non-zero
 10419  0026D0                     	endif
 10420  0026D0                     	if	0	;tblptru may be non-zero
 10421  0026D0                     	endif
 10422  0026D0  0008               	tblrd		*
 10423  0026D2  CFF5 F009          	movff	tablat,??_strcmp
 10424  0026D6  C005  FFD9         	movff	strcmp@s1,fsr2l
 10425  0026DA  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 10426  0026DE  50DF               	movf	indf2,w,c
 10427  0026E0  6E0A               	movwf	(??_strcmp+1)^0,c
 10428  0026E2  5009               	movf	??_strcmp^0,w,c
 10429  0026E4  5C0A               	subwf	(??_strcmp+1)^0,w,c
 10430  0026E6  6E0B               	movwf	strcmp@r^0,c
 10431  0026E8  500B               	movf	strcmp@r^0,w,c
 10432  0026EA  A4D8               	btfss	status,2,c
 10433  0026EC  EF7A  F013         	goto	u2531
 10434  0026F0  EF7C  F013         	goto	u2530
 10435  0026F4                     u2531:
 10436  0026F4  EF88  F013         	goto	l3635
 10437  0026F8                     u2530:
 10438  0026F8  C005  FFD9         	movff	strcmp@s1,fsr2l
 10439  0026FC  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 10440  002700  50DF               	movf	indf2,w,c
 10441  002702  A4D8               	btfss	status,2,c
 10442  002704  EF86  F013         	goto	u2541
 10443  002708  EF88  F013         	goto	u2540
 10444  00270C                     u2541:
 10445  00270C  EF60  F013         	goto	l3629
 10446  002710                     u2540:
 10447  002710                     l3635:
 10448  002710  500B               	movf	strcmp@r^0,w,c
 10449  002712  6E05               	movwf	?_strcmp^0,c
 10450  002714  6A06               	clrf	(?_strcmp+1)^0,c
 10451  002716  BE05               	btfsc	?_strcmp^0,7,c
 10452  002718  0606               	decf	(?_strcmp+1)^0,f,c
 10453  00271A  0012               	return		;funcret
 10454  00271C                     __end_of_strcmp:
 10455                           	opt callstack 0
 10456                           
 10457 ;; *************** function _A6_Command *****************
 10458 ;; Defined at:
 10459 ;;		line 91 in file "A6Lib.c"
 10460 ;; Parameters:    Size  Location     Type
 10461 ;;  command         2   23[COMRAM] PTR const unsigned char 
 10462 ;;		 -> STR_36(8), STR_32(10), A6_BaudRateSet@request(20), STR_24(9), 
 10463 ;;		 -> STR_22(4), STR_9(10), 
 10464 ;;  timeout         2   25[COMRAM] int 
 10465 ;;  response        2   27[COMRAM] PTR unsigned char 
 10466 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@re
      +sponse(32), 
 10467 ;;		 -> A6_IsAlive@response(32), loop@response(32), 
 10468 ;;  responseLen     1   29[COMRAM] unsigned char 
 10469 ;; Auto vars:     Size  Location     Type
 10470 ;;		None
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  1    wreg      void 
 10473 ;; Registers used:
 10474 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10480 ;;      Params:         7       0       0       0       0       0       0       0       0
 10481 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10482 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10483 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10484 ;;Total ram usage:        7 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; Hardware stack levels required when called:    5
 10487 ;; This function calls:
 10488 ;;		_A6_ReadLine
 10489 ;;		_EUSART_RX_Flush
 10490 ;;		_EUSART_TX_String
 10491 ;;		_strlen
 10492 ;; This function is called by:
 10493 ;;		_loop
 10494 ;;		_A6_IsAlive
 10495 ;;		_A6_BaudRateGet
 10496 ;;		_A6_BaudRateSet
 10497 ;;		_A6_NetworkGetStatus
 10498 ;;		_A6_NetworkGetRSSI
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text49
 10503  002066                     __ptext49:
 10504                           	opt callstack 0
 10505  002066                     _A6_Command:
 10506                           	opt callstack 23
 10507  002066                     
 10508                           ;A6Lib.c: 92: A6_LAST_COMMAND_MILLISECONDS += 75;
 10509  002066  0E4B               	movlw	75
 10510  002068  0100               	movlb	0	; () banked
 10511  00206A  27C6               	addwf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),f,b
 10512  00206C  0E00               	movlw	0
 10513  00206E  23C7               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),f,b
 10514  002070  23C8               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),f,b
 10515  002072  23C9               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),f,b
 10516  002074                     l3603:
 10517  002074  0100               	movlb	0	; () banked
 10518  002076  51C6               	movf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),w,b
 10519  002078  0101               	movlb	1	; () banked
 10520  00207A  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
 10521  00207C  0100               	movlb	0	; () banked
 10522  00207E  51C7               	movf	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),w,b
 10523  002080  0101               	movlb	1	; () banked
 10524  002082  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
 10525  002084  0100               	movlb	0	; () banked
 10526  002086  51C8               	movf	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),w,b
 10527  002088  0101               	movlb	1	; () banked
 10528  00208A  59C3               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
 10529  00208C  0100               	movlb	0	; () banked
 10530  00208E  51C9               	movf	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),w,b
 10531  002090  0101               	movlb	1	; () banked
 10532  002092  59C4               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
 10533  002094  A0D8               	btfss	status,0,c
 10534  002096  EF4F  F010         	goto	u2481
 10535  00209A  EF51  F010         	goto	u2480
 10536  00209E                     u2481:
 10537  00209E  EF3A  F010         	goto	l3603
 10538  0020A2                     u2480:
 10539  0020A2                     
 10540                           ; BSR set to: 1
 10541                           ;A6Lib.c: 94: A6_LAST_COMMAND_MILLISECONDS = MILLISECONDS;
 10542  0020A2  C1C1  F0C6         	movff	_MILLISECONDS,_A6_LAST_COMMAND_MILLISECONDS
 10543  0020A6  C1C2  F0C7         	movff	_MILLISECONDS+1,_A6_LAST_COMMAND_MILLISECONDS+1
 10544  0020AA  C1C3  F0C8         	movff	_MILLISECONDS+2,_A6_LAST_COMMAND_MILLISECONDS+2
 10545  0020AE  C1C4  F0C9         	movff	_MILLISECONDS+3,_A6_LAST_COMMAND_MILLISECONDS+3
 10546  0020B2                     
 10547                           ; BSR set to: 1
 10548                           ;A6Lib.c: 96: EUSART_RX_Flush();
 10549  0020B2  ECE5  F015         	call	_EUSART_RX_Flush	;wreg free
 10550  0020B6                     
 10551                           ;A6Lib.c: 97: EUSART_TX_String(command, strlen(command));
 10552  0020B6  C018  F009         	movff	A6_Command@command,EUSART_TX_String@str
 10553  0020BA  C019  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
 10554  0020BE  C018  F005         	movff	A6_Command@command,strlen@s
 10555  0020C2  C019  F006         	movff	A6_Command@command+1,strlen@s+1
 10556  0020C6  ECDD  F013         	call	_strlen	;wreg free
 10557  0020CA  5005               	movf	?_strlen^0,w,c
 10558  0020CC  6E0B               	movwf	EUSART_TX_String@len^0,c
 10559  0020CE  EC93  F014         	call	_EUSART_TX_String	;wreg free
 10560  0020D2                     
 10561                           ;A6Lib.c: 98: A6_ReadLine(response, responseLen, timeout);
 10562  0020D2  C01C  F011         	movff	A6_Command@response,A6_ReadLine@response
 10563  0020D6  C01D  F012         	movff	A6_Command@response+1,A6_ReadLine@response+1
 10564  0020DA  C01E  F013         	movff	A6_Command@responseLen,A6_ReadLine@responseLen
 10565  0020DE  C01A  F014         	movff	A6_Command@timeout,A6_ReadLine@timeout
 10566  0020E2  C01B  F015         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
 10567  0020E6  ECFA  F00C         	call	_A6_ReadLine	;wreg free
 10568  0020EA  0012               	return		;funcret
 10569  0020EC                     __end_of_A6_Command:
 10570                           	opt callstack 0
 10571                           
 10572 ;; *************** function _strlen *****************
 10573 ;; Defined at:
 10574 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;  s               2    4[COMRAM] PTR const unsigned char 
 10577 ;;		 -> STR_37(7), STR_36(8), STR_33(8), STR_32(10), 
 10578 ;;		 -> A6_BaudRateSet@request(20), STR_25(7), STR_24(9), STR_22(4), 
 10579 ;;		 -> STR_9(10), 
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  cp              2    6[COMRAM] PTR const unsigned char 
 10582 ;;		 -> STR_37(7), STR_36(8), STR_33(8), STR_32(10), 
 10583 ;;		 -> A6_BaudRateSet@request(20), STR_25(7), STR_24(9), STR_22(4), 
 10584 ;;		 -> STR_9(10), 
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  2    4[COMRAM] unsigned int 
 10587 ;; Registers used:
 10588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10589 ;; Tracked objects:
 10590 ;;		On entry : 0/0
 10591 ;;		On exit  : 0/0
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10594 ;;      Params:         2       0       0       0       0       0       0       0       0
 10595 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10596 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10597 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10598 ;;Total ram usage:        4 bytes
 10599 ;; Hardware stack levels used:    1
 10600 ;; Hardware stack levels required when called:    2
 10601 ;; This function calls:
 10602 ;;		Nothing
 10603 ;; This function is called by:
 10604 ;;		_A6_Command
 10605 ;;		_strstr
 10606 ;; This function uses a non-reentrant model
 10607 ;;
 10608                           
 10609                           	psect	text50
 10610  0027BA                     __ptext50:
 10611                           	opt callstack 0
 10612  0027BA                     _strlen:
 10613                           	opt callstack 25
 10614  0027BA  C005  F007         	movff	strlen@s,strlen@cp
 10615  0027BE  C006  F008         	movff	strlen@s+1,strlen@cp+1
 10616  0027C2  EFE5  F013         	goto	l3497
 10617  0027C6                     l3495:
 10618  0027C6  4A07               	infsnz	strlen@cp^0,f,c
 10619  0027C8  2A08               	incf	(strlen@cp+1)^0,f,c
 10620  0027CA                     l3497:
 10621  0027CA  C007  FFF6         	movff	strlen@cp,tblptrl
 10622  0027CE  C008  FFF7         	movff	strlen@cp+1,tblptrh
 10623  0027D2  6AF8               	clrf	tblptru,c
 10624  0027D4  0E07               	movlw	(high __ramtop+-1)
 10625  0027D6  64F7               	cpfsgt	tblptrh,c
 10626  0027D8  D003               	bra	u2247
 10627  0027DA  0008               	tblrd		*
 10628  0027DC  50F5               	movf	tablat,w,c
 10629  0027DE  D005               	bra	u2240
 10630  0027E0                     u2247:
 10631  0027E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10632  0027E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10633  0027E8  50EF               	movf	indf0,w,c
 10634  0027EA                     u2240:
 10635  0027EA  0900               	iorlw	0
 10636  0027EC  A4D8               	btfss	status,2,c
 10637  0027EE  EFFB  F013         	goto	u2251
 10638  0027F2  EFFD  F013         	goto	u2250
 10639  0027F6                     u2251:
 10640  0027F6  EFE3  F013         	goto	l3495
 10641  0027FA                     u2250:
 10642  0027FA  5005               	movf	strlen@s^0,w,c
 10643  0027FC  5C07               	subwf	strlen@cp^0,w,c
 10644  0027FE  6E05               	movwf	?_strlen^0,c
 10645  002800  5006               	movf	(strlen@s+1)^0,w,c
 10646  002802  5808               	subwfb	(strlen@cp+1)^0,w,c
 10647  002804  6E06               	movwf	(?_strlen+1)^0,c
 10648  002806  0012               	return		;funcret
 10649  002808                     __end_of_strlen:
 10650                           	opt callstack 0
 10651                           
 10652 ;; *************** function _EUSART_TX_String *****************
 10653 ;; Defined at:
 10654 ;;		line 62 in file "EUSART.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;  str             2    8[COMRAM] PTR const unsigned char 
 10657 ;;		 -> STR_36(8), STR_32(10), A6_BaudRateSet@request(20), STR_24(9), 
 10658 ;;		 -> STR_22(4), STR_9(10), 
 10659 ;;  len             1   10[COMRAM] unsigned char 
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;		None
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      void 
 10664 ;; Registers used:
 10665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10671 ;;      Params:         3       0       0       0       0       0       0       0       0
 10672 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10673 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10674 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10675 ;;Total ram usage:        3 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:    3
 10678 ;; This function calls:
 10679 ;;		_EUSART_TX_Char
 10680 ;; This function is called by:
 10681 ;;		_A6_Command
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text51
 10686  002926                     __ptext51:
 10687                           	opt callstack 0
 10688  002926                     _EUSART_TX_String:
 10689                           	opt callstack 24
 10690  002926                     
 10691                           ;EUSART.c: 63: while(len--) {
 10692  002926  EFA9  F014         	goto	l3509
 10693  00292A                     l3505:
 10694                           
 10695                           ;EUSART.c: 64: EUSART_TX_Char(*str++);
 10696  00292A  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
 10697  00292E  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
 10698  002932  6AF8               	clrf	tblptru,c
 10699  002934  0E07               	movlw	(high __ramtop+-1)
 10700  002936  64F7               	cpfsgt	tblptrh,c
 10701  002938  D003               	bra	u2267
 10702  00293A  0008               	tblrd		*
 10703  00293C  50F5               	movf	tablat,w,c
 10704  00293E  D005               	bra	u2260
 10705  002940                     u2267:
 10706  002940  CFF6 FFE9          	movff	tblptrl,fsr0l
 10707  002944  CFF7 FFEA          	movff	tblptrh,fsr0h
 10708  002948  50EF               	movf	indf0,w,c
 10709  00294A                     u2260:
 10710  00294A  ECD6  F015         	call	_EUSART_TX_Char
 10711  00294E  4A09               	infsnz	EUSART_TX_String@str^0,f,c
 10712  002950  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
 10713  002952                     l3509:
 10714  002952  060B               	decf	EUSART_TX_String@len^0,f,c
 10715  002954  280B               	incf	EUSART_TX_String@len^0,w,c
 10716  002956  A4D8               	btfss	status,2,c
 10717  002958  EFB0  F014         	goto	u2271
 10718  00295C  EFB2  F014         	goto	u2270
 10719  002960                     u2271:
 10720  002960  EF95  F014         	goto	l3505
 10721  002964                     u2270:
 10722  002964  0012               	return		;funcret
 10723  002966                     __end_of_EUSART_TX_String:
 10724                           	opt callstack 0
 10725                           
 10726 ;; *************** function _EUSART_TX_Char *****************
 10727 ;; Defined at:
 10728 ;;		line 56 in file "EUSART.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;  c               1    wreg     unsigned char 
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;  c               1    4[COMRAM] unsigned char 
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  1    wreg      void 
 10735 ;; Registers used:
 10736 ;;		wreg
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10742 ;;      Params:         0       0       0       0       0       0       0       0       0
 10743 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10744 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10745 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10746 ;;Total ram usage:        1 bytes
 10747 ;; Hardware stack levels used:    1
 10748 ;; Hardware stack levels required when called:    2
 10749 ;; This function calls:
 10750 ;;		Nothing
 10751 ;; This function is called by:
 10752 ;;		_EUSART_TX_String
 10753 ;; This function uses a non-reentrant model
 10754 ;;
 10755                           
 10756                           	psect	text52
 10757  002BAC                     __ptext52:
 10758                           	opt callstack 0
 10759  002BAC                     _EUSART_TX_Char:
 10760                           	opt callstack 24
 10761                           
 10762                           ;incstack = 0
 10763                           ;EUSART_TX_Char@c stored from wreg
 10764  002BAC  6E05               	movwf	EUSART_TX_Char@c^0,c
 10765  002BAE                     l626:
 10766  002BAE  A89E               	btfss	3998,4,c	;volatile
 10767  002BB0  EFDC  F015         	goto	u2131
 10768  002BB4  EFDE  F015         	goto	u2130
 10769  002BB8                     u2131:
 10770  002BB8  EFD7  F015         	goto	l626
 10771  002BBC                     u2130:
 10772  002BBC                     
 10773                           ;EUSART.c: 58: TXREG = c;
 10774  002BBC  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
 10775  002BC0  F000               	nop		;# 
 10776  002BC2  0012               	return		;funcret
 10777  002BC4                     __end_of_EUSART_TX_Char:
 10778                           	opt callstack 0
 10779                           
 10780 ;; *************** function _EUSART_RX_Flush *****************
 10781 ;; Defined at:
 10782 ;;		line 82 in file "EUSART.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;		None
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;		None
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  1    wreg      void 
 10789 ;; Registers used:
 10790 ;;		None
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10796 ;;      Params:         0       0       0       0       0       0       0       0       0
 10797 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10799 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10800 ;;Total ram usage:        0 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    2
 10803 ;; This function calls:
 10804 ;;		Nothing
 10805 ;; This function is called by:
 10806 ;;		_A6_Command
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           	psect	text53
 10811  002BCA                     __ptext53:
 10812                           	opt callstack 0
 10813  002BCA                     _EUSART_RX_Flush:
 10814                           	opt callstack 25
 10815  002BCA                     
 10816                           ;EUSART.c: 83: EUSART_RX.iRead = EUSART_RX.iWrite;
 10817  002BCA  C201  F200         	movff	_EUSART_RX+1,_EUSART_RX
 10818  002BCE  0012               	return		;funcret
 10819  002BD0                     __end_of_EUSART_RX_Flush:
 10820                           	opt callstack 0
 10821                           
 10822 ;; *************** function _A6_ReadLine *****************
 10823 ;; Defined at:
 10824 ;;		line 102 in file "A6Lib.c"
 10825 ;; Parameters:    Size  Location     Type
 10826 ;;  response        2   16[COMRAM] PTR unsigned char 
 10827 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@response(32), A6_BaudR
      +ateSet@response(32), 
 10828 ;;		 -> A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 10829 ;;  responseLen     1   18[COMRAM] unsigned char 
 10830 ;;  timeout         2   19[COMRAM] int 
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;  c               1   22[COMRAM] unsigned char 
 10833 ;;  iResponse       1   21[COMRAM] unsigned char 
 10834 ;; Return value:  Size  Location     Type
 10835 ;;                  1    wreg      unsigned char 
 10836 ;; Registers used:
 10837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10838 ;; Tracked objects:
 10839 ;;		On entry : 0/0
 10840 ;;		On exit  : 0/0
 10841 ;;		Unchanged: 0/0
 10842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10843 ;;      Params:         5       0       0       0       0       0       0       0       0
 10844 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10845 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10846 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10847 ;;Total ram usage:        7 bytes
 10848 ;; Hardware stack levels used:    1
 10849 ;; Hardware stack levels required when called:    4
 10850 ;; This function calls:
 10851 ;;		_EUSART_BufferGetChar
 10852 ;;		_memset
 10853 ;; This function is called by:
 10854 ;;		_A6_Command
 10855 ;;		_A6_Process_Random_Comms
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text54
 10860  0019F4                     __ptext54:
 10861                           	opt callstack 0
 10862  0019F4                     _A6_ReadLine:
 10863                           	opt callstack 24
 10864  0019F4                     
 10865                           ;A6Lib.c: 103: char c;;A6Lib.c: 104: memset(response, 0x00, responseLen);
 10866  0019F4  C011  F005         	movff	A6_ReadLine@response,memset@p1
 10867  0019F8  C012  F006         	movff	A6_ReadLine@response+1,memset@p1+1
 10868  0019FC  0E00               	movlw	0
 10869  0019FE  6E08               	movwf	(memset@c+1)^0,c
 10870  001A00  0E00               	movlw	0
 10871  001A02  6E07               	movwf	memset@c^0,c
 10872  001A04  C013  F009         	movff	A6_ReadLine@responseLen,memset@n
 10873  001A08  6A0A               	clrf	(memset@n+1)^0,c
 10874  001A0A  EC0D  F015         	call	_memset	;wreg free
 10875  001A0E                     l544:
 10876                           
 10877                           ;A6Lib.c: 108: c = EUSART_BufferGetChar(timeout);
 10878  001A0E  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 10879  001A12  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 10880  001A16  EC04  F014         	call	_EUSART_BufferGetChar	;wreg free
 10881  001A1A  6E17               	movwf	A6_ReadLine@c^0,c
 10882  001A1C                     
 10883                           ;A6Lib.c: 109: if(c == (0)) return 0;
 10884  001A1C  5017               	movf	A6_ReadLine@c^0,w,c
 10885  001A1E  A4D8               	btfss	status,2,c
 10886  001A20  EF14  F00D         	goto	u2281
 10887  001A24  EF16  F00D         	goto	u2280
 10888  001A28                     u2281:
 10889  001A28  EF19  F00D         	goto	l3519
 10890  001A2C                     u2280:
 10891  001A2C  0E00               	movlw	0
 10892  001A2E  EF64  F00D         	goto	l546
 10893  001A32                     l3519:
 10894                           
 10895                           ;A6Lib.c: 110: if((c != '\r') && (c != '\n')) break;
 10896  001A32  0E0D               	movlw	13
 10897  001A34  1817               	xorwf	A6_ReadLine@c^0,w,c
 10898  001A36  B4D8               	btfsc	status,2,c
 10899  001A38  EF20  F00D         	goto	u2291
 10900  001A3C  EF22  F00D         	goto	u2290
 10901  001A40                     u2291:
 10902  001A40  EF07  F00D         	goto	l544
 10903  001A44                     u2290:
 10904  001A44  0E0A               	movlw	10
 10905  001A46  1817               	xorwf	A6_ReadLine@c^0,w,c
 10906  001A48  B4D8               	btfsc	status,2,c
 10907  001A4A  EF29  F00D         	goto	u2301
 10908  001A4E  EF2B  F00D         	goto	u2300
 10909  001A52                     u2301:
 10910  001A52  EF07  F00D         	goto	l544
 10911  001A56                     u2300:
 10912  001A56                     
 10913                           ;A6Lib.c: 111: };A6Lib.c: 114: uint8_t iResponse = 0;
 10914  001A56  0E00               	movlw	0
 10915  001A58  6E16               	movwf	A6_ReadLine@iResponse^0,c
 10916  001A5A                     l3527:
 10917                           
 10918                           ;A6Lib.c: 116: if((c == '\r') || (c == (0))) break;
 10919  001A5A  0E0D               	movlw	13
 10920  001A5C  1817               	xorwf	A6_ReadLine@c^0,w,c
 10921  001A5E  B4D8               	btfsc	status,2,c
 10922  001A60  EF34  F00D         	goto	u2311
 10923  001A64  EF36  F00D         	goto	u2310
 10924  001A68                     u2311:
 10925  001A68  EF63  F00D         	goto	l3541
 10926  001A6C                     u2310:
 10927  001A6C  5017               	movf	A6_ReadLine@c^0,w,c
 10928  001A6E  A4D8               	btfss	status,2,c
 10929  001A70  EF3C  F00D         	goto	u2321
 10930  001A74  EF3E  F00D         	goto	u2320
 10931  001A78                     u2321:
 10932  001A78  EF40  F00D         	goto	l3531
 10933  001A7C                     u2320:
 10934  001A7C  EF63  F00D         	goto	l3541
 10935  001A80                     l3531:
 10936                           
 10937                           ;A6Lib.c: 117: response[iResponse] = c;
 10938  001A80  5016               	movf	A6_ReadLine@iResponse^0,w,c
 10939  001A82  2411               	addwf	A6_ReadLine@response^0,w,c
 10940  001A84  6ED9               	movwf	fsr2l,c
 10941  001A86  0E00               	movlw	0
 10942  001A88  2012               	addwfc	(A6_ReadLine@response+1)^0,w,c
 10943  001A8A  6EDA               	movwf	fsr2h,c
 10944  001A8C  C017  FFDF         	movff	A6_ReadLine@c,indf2
 10945  001A90                     
 10946                           ;A6Lib.c: 118: iResponse++;
 10947  001A90  2A16               	incf	A6_ReadLine@iResponse^0,f,c
 10948  001A92                     
 10949                           ;A6Lib.c: 119: if(iResponse == responseLen) break;
 10950  001A92  5013               	movf	A6_ReadLine@responseLen^0,w,c
 10951  001A94  1816               	xorwf	A6_ReadLine@iResponse^0,w,c
 10952  001A96  A4D8               	btfss	status,2,c
 10953  001A98  EF50  F00D         	goto	u2331
 10954  001A9C  EF52  F00D         	goto	u2330
 10955  001AA0                     u2331:
 10956  001AA0  EF54  F00D         	goto	l3539
 10957  001AA4                     u2330:
 10958  001AA4  EF63  F00D         	goto	l3541
 10959  001AA8                     l3539:
 10960                           
 10961                           ;A6Lib.c: 120: } while(c = EUSART_BufferGetChar(timeout));
 10962  001AA8  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 10963  001AAC  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 10964  001AB0  EC04  F014         	call	_EUSART_BufferGetChar	;wreg free
 10965  001AB4  6E17               	movwf	A6_ReadLine@c^0,c
 10966  001AB6  5017               	movf	A6_ReadLine@c^0,w,c
 10967  001AB8  A4D8               	btfss	status,2,c
 10968  001ABA  EF61  F00D         	goto	u2341
 10969  001ABE  EF63  F00D         	goto	u2340
 10970  001AC2                     u2341:
 10971  001AC2  EF2D  F00D         	goto	l3527
 10972  001AC6                     u2340:
 10973  001AC6                     l3541:
 10974                           
 10975                           ;A6Lib.c: 122: return iResponse;
 10976  001AC6  5016               	movf	A6_ReadLine@iResponse^0,w,c
 10977  001AC8                     l546:
 10978  001AC8  0012               	return		;funcret
 10979  001ACA                     __end_of_A6_ReadLine:
 10980                           	opt callstack 0
 10981                           
 10982 ;; *************** function _memset *****************
 10983 ;; Defined at:
 10984 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  p1              2    4[COMRAM] PTR void 
 10987 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 10988 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 10989 ;;  c               2    6[COMRAM] int 
 10990 ;;  n               2    8[COMRAM] unsigned int 
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;  p               2   10[COMRAM] PTR unsigned char 
 10993 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 10994 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  2    4[COMRAM] PTR void 
 10997 ;; Registers used:
 10998 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11004 ;;      Params:         6       0       0       0       0       0       0       0       0
 11005 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11007 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11008 ;;Total ram usage:        8 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; Hardware stack levels required when called:    2
 11011 ;; This function calls:
 11012 ;;		Nothing
 11013 ;; This function is called by:
 11014 ;;		_A6_ReadLine
 11015 ;;		_EUSART_Init
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019                           	psect	text55
 11020  002A1A                     __ptext55:
 11021                           	opt callstack 0
 11022  002A1A                     _memset:
 11023                           	opt callstack 25
 11024  002A1A  C005  F00B         	movff	memset@p1,memset@p
 11025  002A1E  C006  F00C         	movff	memset@p1+1,memset@p+1
 11026  002A22  EF1B  F015         	goto	l3419
 11027  002A26                     l3415:
 11028  002A26  C00B  FFD9         	movff	memset@p,fsr2l
 11029  002A2A  C00C  FFDA         	movff	memset@p+1,fsr2h
 11030  002A2E  C007  FFDF         	movff	memset@c,indf2
 11031  002A32  4A0B               	infsnz	memset@p^0,f,c
 11032  002A34  2A0C               	incf	(memset@p+1)^0,f,c
 11033  002A36                     l3419:
 11034  002A36  0609               	decf	memset@n^0,f,c
 11035  002A38  A0D8               	btfss	status,0,c
 11036  002A3A  060A               	decf	(memset@n+1)^0,f,c
 11037  002A3C  2809               	incf	memset@n^0,w,c
 11038  002A3E  E106               	bnz	u2101
 11039  002A40  280A               	incf	(memset@n+1)^0,w,c
 11040  002A42  A4D8               	btfss	status,2,c
 11041  002A44  EF26  F015         	goto	u2101
 11042  002A48  EF28  F015         	goto	u2100
 11043  002A4C                     u2101:
 11044  002A4C  EF13  F015         	goto	l3415
 11045  002A50                     u2100:
 11046  002A50  0012               	return		;funcret
 11047  002A52                     __end_of_memset:
 11048                           	opt callstack 0
 11049                           
 11050 ;; *************** function _EUSART_BufferGetChar *****************
 11051 ;; Defined at:
 11052 ;;		line 95 in file "EUSART.c"
 11053 ;; Parameters:    Size  Location     Type
 11054 ;;  timeout         2   14[COMRAM] int 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;                  1    wreg      unsigned char 
 11059 ;; Registers used:
 11060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11066 ;;      Params:         2       0       0       0       0       0       0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11068 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11069 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11070 ;;Total ram usage:        2 bytes
 11071 ;; Hardware stack levels used:    1
 11072 ;; Hardware stack levels required when called:    3
 11073 ;; This function calls:
 11074 ;;		_EUSART_RX_AvailableData
 11075 ;; This function is called by:
 11076 ;;		_A6_ReadLine
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text56
 11081  002808                     __ptext56:
 11082                           	opt callstack 0
 11083  002808                     _EUSART_BufferGetChar:
 11084                           	opt callstack 24
 11085  002808                     
 11086                           ;EUSART.c: 96: if(EUSART_RX_AvailableData(timeout) == 0) return (0);
 11087  002808  C00F  F005         	movff	EUSART_BufferGetChar@timeout,EUSART_RX_AvailableData@timeout
 11088  00280C  C010  F006         	movff	EUSART_BufferGetChar@timeout+1,EUSART_RX_AvailableData@timeout+1
 11089  002810  ECEF  F00F         	call	_EUSART_RX_AvailableData	;wreg free
 11090  002814  0900               	iorlw	0
 11091  002816  A4D8               	btfss	status,2,c
 11092  002818  EF10  F014         	goto	u2111
 11093  00281C  EF12  F014         	goto	u2110
 11094  002820                     u2111:
 11095  002820  EF15  F014         	goto	l3427
 11096  002824                     u2110:
 11097  002824  0E00               	movlw	0
 11098  002826  EF29  F014         	goto	l655
 11099  00282A                     l3427:
 11100                           
 11101                           ;EUSART.c: 97: EUSART_RX.iRead++;
 11102  00282A  0102               	movlb	2	; () banked
 11103  00282C  2B00               	incf	_EUSART_RX& (0+255),f,b
 11104  00282E                     
 11105                           ; BSR set to: 2
 11106                           ;EUSART.c: 98: if(EUSART_RX.iRead == 128) EUSART_RX.iRead = 0;
 11107  00282E  0E80               	movlw	128
 11108  002830  1900               	xorwf	_EUSART_RX& (0+255),w,b
 11109  002832  A4D8               	btfss	status,2,c
 11110  002834  EF1E  F014         	goto	u2121
 11111  002838  EF20  F014         	goto	u2120
 11112  00283C                     u2121:
 11113  00283C  EF22  F014         	goto	l3433
 11114  002840                     u2120:
 11115  002840                     
 11116                           ; BSR set to: 2
 11117  002840  0E00               	movlw	0
 11118  002842  6F00               	movwf	_EUSART_RX& (0+255),b
 11119  002844                     l3433:
 11120                           
 11121                           ; BSR set to: 2
 11122                           ;EUSART.c: 99: return EUSART_RX.buffer[EUSART_RX.iRead];
 11123  002844  0E02               	movlw	low (_EUSART_RX+2)
 11124  002846  2500               	addwf	_EUSART_RX& (0+255),w,b
 11125  002848  6ED9               	movwf	fsr2l,c
 11126  00284A  6ADA               	clrf	fsr2h,c
 11127  00284C  0E02               	movlw	high (_EUSART_RX+2)
 11128  00284E  22DA               	addwfc	fsr2h,f,c
 11129  002850  50DF               	movf	indf2,w,c
 11130  002852                     l655:
 11131  002852  0012               	return		;funcret
 11132  002854                     __end_of_EUSART_BufferGetChar:
 11133                           	opt callstack 0
 11134                           
 11135 ;; *************** function _EUSART_RX_AvailableData *****************
 11136 ;; Defined at:
 11137 ;;		line 86 in file "EUSART.c"
 11138 ;; Parameters:    Size  Location     Type
 11139 ;;  timeout         2    4[COMRAM] int 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;  t               4   10[COMRAM] unsigned long 
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  1    wreg      unsigned char 
 11144 ;; Registers used:
 11145 ;;		wreg, status,2, status,0
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11151 ;;      Params:         2       0       0       0       0       0       0       0       0
 11152 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11153 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11154 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11155 ;;Total ram usage:       10 bytes
 11156 ;; Hardware stack levels used:    1
 11157 ;; Hardware stack levels required when called:    2
 11158 ;; This function calls:
 11159 ;;		Nothing
 11160 ;; This function is called by:
 11161 ;;		_A6_Process_Random_Comms
 11162 ;;		_EUSART_BufferGetChar
 11163 ;; This function uses a non-reentrant model
 11164 ;;
 11165                           
 11166                           	psect	text57
 11167  001FDE                     __ptext57:
 11168                           	opt callstack 0
 11169  001FDE                     _EUSART_RX_AvailableData:
 11170                           	opt callstack 26
 11171  001FDE                     
 11172                           ;EUSART.c: 87: if(timeout == 0) timeout = 1000;
 11173  001FDE  5005               	movf	EUSART_RX_AvailableData@timeout^0,w,c
 11174  001FE0  1006               	iorwf	(EUSART_RX_AvailableData@timeout+1)^0,w,c
 11175  001FE2  A4D8               	btfss	status,2,c
 11176  001FE4  EFF6  F00F         	goto	u2071
 11177  001FE8  EFF8  F00F         	goto	u2070
 11178  001FEC                     u2071:
 11179  001FEC  EFFC  F00F         	goto	l3385
 11180  001FF0                     u2070:
 11181  001FF0  0E03               	movlw	3
 11182  001FF2  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
 11183  001FF4  0EE8               	movlw	232
 11184  001FF6  6E05               	movwf	EUSART_RX_AvailableData@timeout^0,c
 11185  001FF8                     l3385:
 11186                           
 11187                           ;EUSART.c: 88: uint32_t t = MILLISECONDS + timeout;
 11188  001FF8  C005  F007         	movff	EUSART_RX_AvailableData@timeout,??_EUSART_RX_AvailableData
 11189  001FFC  C006  F008         	movff	EUSART_RX_AvailableData@timeout+1,??_EUSART_RX_AvailableData+1
 11190  002000  0E00               	movlw	0
 11191  002002  BE08               	btfsc	(??_EUSART_RX_AvailableData+1)^0,7,c
 11192  002004  0EFF               	movlw	255
 11193  002006  6E09               	movwf	(??_EUSART_RX_AvailableData+2)^0,c
 11194  002008  6E0A               	movwf	(??_EUSART_RX_AvailableData+3)^0,c
 11195  00200A  0101               	movlb	1	; () banked
 11196  00200C  51C1               	movf	_MILLISECONDS& (0+255),w,b
 11197  00200E  2407               	addwf	??_EUSART_RX_AvailableData^0,w,c
 11198  002010  6E0B               	movwf	EUSART_RX_AvailableData@t^0,c
 11199  002012  51C2               	movf	(_MILLISECONDS+1)& (0+255),w,b
 11200  002014  2008               	addwfc	(??_EUSART_RX_AvailableData+1)^0,w,c
 11201  002016  6E0C               	movwf	(EUSART_RX_AvailableData@t+1)^0,c
 11202  002018  51C3               	movf	(_MILLISECONDS+2)& (0+255),w,b
 11203  00201A  2009               	addwfc	(??_EUSART_RX_AvailableData+2)^0,w,c
 11204  00201C  6E0D               	movwf	(EUSART_RX_AvailableData@t+2)^0,c
 11205  00201E  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
 11206  002020  200A               	addwfc	(??_EUSART_RX_AvailableData+3)^0,w,c
 11207  002022  6E0E               	movwf	(EUSART_RX_AvailableData@t+3)^0,c
 11208                           
 11209                           ;EUSART.c: 89: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
 11210  002024  EF27  F010         	goto	l3393
 11211  002028                     l3387:
 11212                           
 11213                           ; BSR set to: 2
 11214                           ;EUSART.c: 90: if(t < MILLISECONDS) return 0;
 11215  002028  0101               	movlb	1	; () banked
 11216  00202A  51C1               	movf	_MILLISECONDS& (0+255),w,b
 11217  00202C  5C0B               	subwf	EUSART_RX_AvailableData@t^0,w,c
 11218  00202E  51C2               	movf	(_MILLISECONDS+1)& (0+255),w,b
 11219  002030  580C               	subwfb	(EUSART_RX_AvailableData@t+1)^0,w,c
 11220  002032  51C3               	movf	(_MILLISECONDS+2)& (0+255),w,b
 11221  002034  580D               	subwfb	(EUSART_RX_AvailableData@t+2)^0,w,c
 11222  002036  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
 11223  002038  580E               	subwfb	(EUSART_RX_AvailableData@t+3)^0,w,c
 11224  00203A  B0D8               	btfsc	status,0,c
 11225  00203C  EF22  F010         	goto	u2081
 11226  002040  EF24  F010         	goto	u2080
 11227  002044                     u2081:
 11228  002044  EF27  F010         	goto	l3393
 11229  002048                     u2080:
 11230  002048                     
 11231                           ; BSR set to: 1
 11232  002048  0E00               	movlw	0
 11233  00204A  EF32  F010         	goto	l650
 11234  00204E                     l3393:
 11235                           
 11236                           ; BSR set to: 1
 11237  00204E  0102               	movlb	2	; () banked
 11238  002050  5100               	movf	_EUSART_RX& (0+255),w,b
 11239  002052  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 11240  002054  B4D8               	btfsc	status,2,c
 11241  002056  EF2F  F010         	goto	u2091
 11242  00205A  EF31  F010         	goto	u2090
 11243  00205E                     u2091:
 11244  00205E  EF14  F010         	goto	l3387
 11245  002062                     u2090:
 11246  002062                     
 11247                           ; BSR set to: 2
 11248                           ;EUSART.c: 91: };EUSART.c: 92: return 1;
 11249  002062  0E01               	movlw	1
 11250  002064                     l650:
 11251  002064  0012               	return		;funcret
 11252  002066                     __end_of_EUSART_RX_AvailableData:
 11253                           	opt callstack 0
 11254                           
 11255 ;; *************** function _isr *****************
 11256 ;; Defined at:
 11257 ;;		line 90 in file "init.c"
 11258 ;; Parameters:    Size  Location     Type
 11259 ;;		None
 11260 ;; Auto vars:     Size  Location     Type
 11261 ;;		None
 11262 ;; Return value:  Size  Location     Type
 11263 ;;                  1    wreg      void 
 11264 ;; Registers used:
 11265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11271 ;;      Params:         0       0       0       0       0       0       0       0       0
 11272 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11273 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11274 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11275 ;;Total ram usage:        2 bytes
 11276 ;; Hardware stack levels used:    1
 11277 ;; Hardware stack levels required when called:    1
 11278 ;; This function calls:
 11279 ;;		_EUSART_RX_Interrupt
 11280 ;;		_Ecg_Interrupt
 11281 ;; This function is called by:
 11282 ;;		Interrupt level 2
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	intcode
 11287  000008                     __pintcode:
 11288                           	opt callstack 0
 11289  000008                     _isr:
 11290                           	opt callstack 20
 11291                           
 11292                           ;incstack = 0
 11293  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11294  00000A  ED5A  F012         	call	int_func,f	;refresh shadow registers
 11295                           
 11296                           	psect	intcode_body
 11297  0024B4                     __pintcode_body:
 11298                           	opt callstack 20
 11299  0024B4                     int_func:
 11300                           	opt callstack 20
 11301  0024B4  0006               	pop		; remove dummy address from shadow register refresh
 11302  0024B6  CFD9 F003          	movff	fsr2l,??_isr
 11303  0024BA  CFDA F004          	movff	fsr2h,??_isr+1
 11304  0024BE                     
 11305                           ;init.c: 92: if(TMR3IE && TMR3IF) {
 11306  0024BE  A2A0               	btfss	4000,1,c	;volatile
 11307  0024C0  EF64  F012         	goto	i2u376_41
 11308  0024C4  EF66  F012         	goto	i2u376_40
 11309  0024C8                     i2u376_41:
 11310  0024C8  EF7B  F012         	goto	i2l4559
 11311  0024CC                     i2u376_40:
 11312  0024CC  A2A1               	btfss	4001,1,c	;volatile
 11313  0024CE  EF6B  F012         	goto	i2u377_41
 11314  0024D2  EF6D  F012         	goto	i2u377_40
 11315  0024D6                     i2u377_41:
 11316  0024D6  EF7B  F012         	goto	i2l4559
 11317  0024DA                     i2u377_40:
 11318  0024DA                     
 11319                           ;init.c: 93: MILLISECONDS += 5;
 11320  0024DA  0E05               	movlw	5
 11321  0024DC  0101               	movlb	1	; () banked
 11322  0024DE  27C1               	addwf	_MILLISECONDS& (0+255),f,b
 11323  0024E0  0E00               	movlw	0
 11324  0024E2  23C2               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
 11325  0024E4  23C3               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
 11326  0024E6  23C4               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
 11327  0024E8                     
 11328                           ; BSR set to: 1
 11329                           ;init.c: 94: Ecg_Interrupt();
 11330  0024E8  ECAA  F015         	call	_Ecg_Interrupt	;wreg free
 11331  0024EC                     
 11332                           ;init.c: 97: TMR3H = 0x16;
 11333  0024EC  0E16               	movlw	22
 11334  0024EE  6EB3               	movwf	179,c	;volatile
 11335  0024F0                     
 11336                           ;init.c: 98: TMR3L = 0x00;
 11337  0024F0  0E00               	movlw	0
 11338  0024F2  6EB2               	movwf	178,c	;volatile
 11339  0024F4                     
 11340                           ;init.c: 99: TMR3IF = 0;
 11341  0024F4  92A1               	bcf	4001,1,c	;volatile
 11342  0024F6                     i2l4559:
 11343                           
 11344                           ;init.c: 100: };init.c: 103: if(RCIE && RCIF) {
 11345  0024F6  AA9D               	btfss	3997,5,c	;volatile
 11346  0024F8  EF80  F012         	goto	i2u378_41
 11347  0024FC  EF82  F012         	goto	i2u378_40
 11348  002500                     i2u378_41:
 11349  002500  EF8B  F012         	goto	i2l185
 11350  002504                     i2u378_40:
 11351  002504  AA9E               	btfss	3998,5,c	;volatile
 11352  002506  EF87  F012         	goto	i2u379_41
 11353  00250A  EF89  F012         	goto	i2u379_40
 11354  00250E                     i2u379_41:
 11355  00250E  EF8B  F012         	goto	i2l185
 11356  002512                     i2u379_40:
 11357  002512                     
 11358                           ;init.c: 104: EUSART_RX_Interrupt();
 11359  002512  EC2C  F013         	call	_EUSART_RX_Interrupt	;wreg free
 11360  002516                     i2l185:
 11361  002516  C004  FFDA         	movff	??_isr+1,fsr2h
 11362  00251A  C003  FFD9         	movff	??_isr,fsr2l
 11363  00251E  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11364  002520  0011               	retfie		f
 11365  002522                     __end_of_isr:
 11366                           	opt callstack 0
 11367                           
 11368 ;; *************** function _Ecg_Interrupt *****************
 11369 ;; Defined at:
 11370 ;;		line 135 in file "ecg.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;		None
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		wreg, status,2, status,0
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11384 ;;      Params:         0       0       0       0       0       0       0       0       0
 11385 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11386 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11387 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11388 ;;Total ram usage:        2 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; This function calls:
 11391 ;;		Nothing
 11392 ;; This function is called by:
 11393 ;;		_isr
 11394 ;; This function uses a non-reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text59
 11398  002B54                     __ptext59:
 11399                           	opt callstack 0
 11400  002B54                     _Ecg_Interrupt:
 11401                           	opt callstack 20
 11402  002B54                     
 11403                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
 11404  002B54  0E01               	movlw	1
 11405  002B56  6E01               	movwf	??_Ecg_Interrupt^0,c
 11406  002B58  5057               	movf	(_ECG_FLAGS+1)^0,w,c
 11407  002B5A  0B07               	andlw	7
 11408  002B5C  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
 11409  002B5E  5001               	movf	??_Ecg_Interrupt^0,w,c
 11410  002B60  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
 11411  002B62  5057               	movf	(_ECG_FLAGS+1)^0,w,c
 11412  002B64  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 11413  002B66  0BF8               	andlw	-8
 11414  002B68  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 11415  002B6A  6E57               	movwf	(_ECG_FLAGS+1)^0,c
 11416  002B6C                     
 11417                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
 11418  002B6C  0100               	movlb	0	; () banked
 11419  002B6E  2BC5               	incf	(_ECG_HEARTRATE+3)& (0+255),f,b
 11420  002B70                     
 11421                           ; BSR set to: 0
 11422                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
 11423  002B70  8856               	bsf	_ECG_FLAGS^0,4,c
 11424  002B72                     
 11425                           ; BSR set to: 0
 11426  002B72  0012               	return		;funcret
 11427  002B74                     __end_of_Ecg_Interrupt:
 11428                           	opt callstack 0
 11429                           
 11430 ;; *************** function _EUSART_RX_Interrupt *****************
 11431 ;; Defined at:
 11432 ;;		line 68 in file "EUSART.c"
 11433 ;; Parameters:    Size  Location     Type
 11434 ;;		None
 11435 ;; Auto vars:     Size  Location     Type
 11436 ;;  c               1    1[COMRAM] unsigned char 
 11437 ;; Return value:  Size  Location     Type
 11438 ;;                  1    wreg      void 
 11439 ;; Registers used:
 11440 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11441 ;; Tracked objects:
 11442 ;;		On entry : 0/0
 11443 ;;		On exit  : 0/0
 11444 ;;		Unchanged: 0/0
 11445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11446 ;;      Params:         0       0       0       0       0       0       0       0       0
 11447 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11448 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11449 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11450 ;;Total ram usage:        2 bytes
 11451 ;; Hardware stack levels used:    1
 11452 ;; This function calls:
 11453 ;;		Nothing
 11454 ;; This function is called by:
 11455 ;;		_isr
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           	psect	text60
 11460  002658                     __ptext60:
 11461                           	opt callstack 0
 11462  002658                     _EUSART_RX_Interrupt:
 11463                           	opt callstack 20
 11464  002658                     
 11465                           ;EUSART.c: 69: uint8_t c = RCREG;
 11466  002658  CFAE F002          	movff	4014,EUSART_RX_Interrupt@c	;volatile
 11467                           
 11468                           ;EUSART.c: 70: if(OERR == 1) {
 11469  00265C  A2AB               	btfss	4011,1,c	;volatile
 11470  00265E  EF33  F013         	goto	i2u366_41
 11471  002662  EF35  F013         	goto	i2u366_40
 11472  002666                     i2u366_41:
 11473  002666  EF48  F013         	goto	i2l4465
 11474  00266A                     i2u366_40:
 11475  00266A                     
 11476                           ;EUSART.c: 71: CREN = 0;
 11477  00266A  98AB               	bcf	4011,4,c	;volatile
 11478                           
 11479                           ;EUSART.c: 72: CREN = 1;
 11480  00266C  88AB               	bsf	4011,4,c	;volatile
 11481  00266E                     
 11482                           ;EUSART.c: 73: PORTAbits.RA2 = !PORTAbits.RA2;
 11483  00266E  A480               	btfss	128,2,c	;volatile
 11484  002670  EF3C  F013         	goto	i2u367_41
 11485  002674  EF40  F013         	goto	i2u367_40
 11486  002678                     i2u367_41:
 11487  002678  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 11488  00267A  2A01               	incf	??_EUSART_RX_Interrupt^0,f,c
 11489  00267C  EF41  F013         	goto	i2u368_48
 11490  002680                     i2u367_40:
 11491  002680  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 11492  002682                     i2u368_48:
 11493  002682  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 11494  002684  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 11495  002686  5080               	movf	128,w,c	;volatile
 11496  002688  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 11497  00268A  0BFB               	andlw	-5
 11498  00268C  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 11499  00268E  6E80               	movwf	128,c	;volatile
 11500  002690                     i2l4465:
 11501                           
 11502                           ;EUSART.c: 74: };EUSART.c: 76: EUSART_RX.iWrite++;
 11503  002690  0102               	movlb	2	; () banked
 11504  002692  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
 11505  002694                     
 11506                           ; BSR set to: 2
 11507                           ;EUSART.c: 77: if(EUSART_RX.iWrite == 128) EUSART_RX.iWrite = 0;
 11508  002694  0E80               	movlw	128
 11509  002696  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 11510  002698  A4D8               	btfss	status,2,c
 11511  00269A  EF51  F013         	goto	i2u369_41
 11512  00269E  EF53  F013         	goto	i2u369_40
 11513  0026A2                     i2u369_41:
 11514  0026A2  EF55  F013         	goto	i2l4471
 11515  0026A6                     i2u369_40:
 11516  0026A6                     
 11517                           ; BSR set to: 2
 11518  0026A6  0E00               	movlw	0
 11519  0026A8  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
 11520  0026AA                     i2l4471:
 11521                           
 11522                           ; BSR set to: 2
 11523                           ;EUSART.c: 78: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
 11524  0026AA  0E02               	movlw	low (_EUSART_RX+2)
 11525  0026AC  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
 11526  0026AE  6ED9               	movwf	fsr2l,c
 11527  0026B0  6ADA               	clrf	fsr2h,c
 11528  0026B2  0E02               	movlw	high (_EUSART_RX+2)
 11529  0026B4  22DA               	addwfc	fsr2h,f,c
 11530  0026B6  C002  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
 11531  0026BA                     
 11532                           ; BSR set to: 2
 11533  0026BA  0012               	return		;funcret
 11534  0026BC                     __end_of_EUSART_RX_Interrupt:
 11535                           	opt callstack 0
 11536                           
 11537                           	psect	rparam
 11538  0000                     
 11539                           	psect	temp
 11540  00005A                     btemp:
 11541                           	opt callstack 0
 11542  00005A                     	ds	1
 11543  0000                     int$flags	set	btemp
 11544  0000                     wtemp8	set	btemp+1
 11545  0000                     ttemp5	set	btemp+1
 11546  0000                     ttemp6	set	btemp+4
 11547  0000                     ttemp7	set	btemp+8
 11548                           tosu	equ	0xFFF
 11549                           tosh	equ	0xFFE
 11550                           tosl	equ	0xFFD
 11551                           stkptr	equ	0xFFC
 11552                           pclatu	equ	0xFFB
 11553                           pclath	equ	0xFFA
 11554                           pcl	equ	0xFF9
 11555                           tblptru	equ	0xFF8
 11556                           tblptrh	equ	0xFF7
 11557                           tblptrl	equ	0xFF6
 11558                           tablat	equ	0xFF5
 11559                           prodh	equ	0xFF4
 11560                           prodl	equ	0xFF3
 11561                           indf0	equ	0xFEF
 11562                           postinc0	equ	0xFEE
 11563                           postdec0	equ	0xFED
 11564                           preinc0	equ	0xFEC
 11565                           plusw0	equ	0xFEB
 11566                           fsr0h	equ	0xFEA
 11567                           fsr0l	equ	0xFE9
 11568                           wreg	equ	0xFE8
 11569                           indf1	equ	0xFE7
 11570                           postinc1	equ	0xFE6
 11571                           postdec1	equ	0xFE5
 11572                           preinc1	equ	0xFE4
 11573                           plusw1	equ	0xFE3
 11574                           fsr1h	equ	0xFE2
 11575                           fsr1l	equ	0xFE1
 11576                           bsr	equ	0xFE0
 11577                           indf2	equ	0xFDF
 11578                           postinc2	equ	0xFDE
 11579                           postdec2	equ	0xFDD
 11580                           preinc2	equ	0xFDC
 11581                           plusw2	equ	0xFDB
 11582                           fsr2h	equ	0xFDA
 11583                           fsr2l	equ	0xFD9
 11584                           status	equ	0xFD8


Data Sizes:
    Strings     464
    Constant    1598
    Data        8
    BSS         186
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     80     116
    BANK1           256    173     197
    BANK2           256      0     130
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_37(CODE[7]), STR_33(CODE[8]), STR_25(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_37(CODE[7]), STR_33(CODE[8]), STR_25(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[7]), STR_36(CODE[8]), STR_33(CODE[8]), STR_32(CODE[10]), 
		 -> A6_BaudRateSet@request(BANK0[20]), STR_25(CODE[7]), STR_24(CODE[9]), STR_22(CODE[4]), 
		 -> STR_9(CODE[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[7]), STR_36(CODE[8]), STR_33(CODE[8]), STR_32(CODE[10]), 
		 -> A6_BaudRateSet@request(BANK0[20]), STR_25(CODE[7]), STR_24(CODE[9]), STR_22(CODE[4]), 
		 -> STR_9(CODE[10]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_31(CODE[3]), STR_28(CODE[3]), STR_23(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_40(CODE[7]), ?_sprintf(COMRAM[2]), Ecg_ProcessHeartRate@heartbeatAverage(COMRAM[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[11]), STR_16(CODE[13]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_30(CODE[11]), STR_27(CODE[12]), STR_19(CODE[4]), STR_15(CODE[24]), 
		 -> STR_13(CODE[23]), STR_11(CODE[4]), STR_3(CODE[27]), STR_2(CODE[32]), 
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_BaudRateAutoDetect@zzzz(BANK0[32]), A6_BaudRateSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@zzzz_169(BANK1[32]), 
		 -> loop@zzzz_165(BANK1[32]), loop@zzzz_162(BANK1[32]), loop@zzzz(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_36(CODE[8]), STR_32(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_24(CODE[9]), 
		 -> STR_22(CODE[4]), STR_9(CODE[10]), 

    A6_NetworkGetRSSI@RSSIToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    A6_NetworkGetStatus@networkStatusToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__memset	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_ReadLine@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_36(CODE[8]), STR_32(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_24(CODE[9]), 
		 -> STR_22(CODE[4]), STR_9(CODE[10]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    A6_BaudRateGet@baudRateToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateAutoDetect@zzzz(BANK0[32]), STR_29(CODE[23]), STR_21(CODE[28]), 
		 -> STR_20(CODE[11]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@zzzz_169(BANK1[32]), STR_14(CODE[27]), 
		 -> loop@zzzz_165(BANK1[32]), STR_12(CODE[11]), loop@zzzz_162(BANK1[32]), STR_10(CODE[16]), 
		 -> loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), STR_6(CODE[11]), 
		 -> STR_5(CODE[23]), STR_4(CODE[25]), loop@zzzz(BANK1[32]), 

    printLine@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateAutoDetect@zzzz(BANK0[32]), STR_29(CODE[23]), loop@zzzz_169(BANK1[32]), 
		 -> STR_14(CODE[27]), loop@zzzz_165(BANK1[32]), STR_12(CODE[11]), loop@zzzz_162(BANK1[32]), 
		 -> STR_10(CODE[16]), loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), 
		 -> STR_6(CODE[11]), STR_5(CODE[23]), STR_4(CODE[25]), loop@zzzz(BANK1[32]), 

    loop$177	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_18(CODE[6]), STR_17(CODE[11]), 

    loop$176	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_18(CODE[6]), STR_17(CODE[11]), STR_16(CODE[13]), 

    loop$157	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_7(CODE[13]), STR_6(CODE[11]), 

    loop$152	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_4(CODE[25]), loop@zzzz(BANK1[32]), 


Critical Paths under _main in COMRAM

    _loop->_sprintf
    _A6_Process_Random_Comms->_printLine
    _A6_NetworkGetStatus->_A6_Command
    _A6_NetworkGetRSSILevel->_A6_NetworkGetRSSI
    _A6_NetworkGetRSSI->_A6_Command
    _atoi->___wmul
    _A6_BaudRateSet->_sprintf
    _A6_BaudRateGet->_A6_Command
    _A6_BaudRateGet->_atol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _atol->___lmul
    _TFT_Init->_TFT_FillScreen
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _TFT_DrawLine->_TFT_DrawPixel
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _TFT_FillScreen->_TFT_Flood
    _EUSART_Init->_memset
    _A6_BaudRateAutoDetect->_sprintf
    _sprintf->_A6_BaudRateGet
    ___llmod->___lldiv
    _printLine->_TFT_DrawString
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawFillRect
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_Flood
    _TFT_FullScreen->_TFT_SetAddrWindow
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister
    _EUSART_BaudRateSet->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen
    _A6_ReadLine->_EUSART_BufferGetChar
    _EUSART_BufferGetChar->_EUSART_RX_AvailableData

Critical Paths under _isr in COMRAM

    _isr->_EUSART_RX_Interrupt
    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_A6_BaudRateSet
    _A6_BaudRateSet->_sprintf
    _A6_Init->_A6_BaudRateAutoDetect
    _A6_BaudRateAutoDetect->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  318211
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               177   177      0  203626
                                             76 BANK0      4     4      0
                                              0 BANK1    173   173      0
              _A6_BaudRateAutoDetect
                     _A6_BaudRateGet
                     _A6_BaudRateSet
                         _A6_Command
                         _A6_IsAlive
                  _A6_NetworkGetRSSI
             _A6_NetworkGetRSSILevel
                _A6_NetworkGetStatus
            _A6_Process_Random_Comms
                          _printLine
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _A6_Process_Random_Comms                             33    33      0   37201
                                              0 BANK0     33    33      0
                        _A6_ReadLine
            _EUSART_RX_AvailableData
                          _printLine
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _A6_NetworkGetStatus                                 34    34      0   10933
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _A6_NetworkGetRSSILevel                               1     1      0   11021
                                             64 COMRAM     1     1      0
                  _A6_NetworkGetRSSI
 ---------------------------------------------------------------------------------
 (3) _A6_NetworkGetRSSI                                   34    34      0   10910
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1671
                                             10 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateSet                                      60    56      4   27020
                                             16 BANK0     60    56      4
                     _A6_BaudRateGet
                         _A6_Command
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _A6_BaudRateGet                                      43    39      4   10163
                                             30 COMRAM    43    39      4
                         _A6_Command
                               _atol
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    3142
                                             17 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1781
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              7     1      6     362
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _strchr                                               6     2      4     544
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4     834
                                             16 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            10    10      0   10568
                                             29 COMRAM    10    10      0
                     _TFT_FillScreen
                     _TFT_FullScreen
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0   56707
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (2) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Ok                              0     0      0   31242
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawLine                                        31    21     10    5824
                                             18 COMRAM    31    21     10
                      _TFT_DrawPixel
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     370
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Failure                         0     0      0   25418
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (2) _TFT_FillScreen                                       2     0      2    5356
                                             27 COMRAM     2     0      2
                          _TFT_Flood
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0     552
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              0     0      0   46758
              _A6_BaudRateAutoDetect
                            _sleepMS
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateAutoDetect                               33    33      0   46409
                                             16 BANK0     33    33      0
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                          _printLine
                            _sleepMS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    24      8    5547
                                             73 COMRAM    12     4      8
                                              0 BANK0     16    16      0
                     _A6_BaudRateGet (ARG)
                  _A6_NetworkGetRSSI (ARG)
             _A6_NetworkGetRSSILevel (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     349
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _printLine                                            4     0      4   34601
                                             73 COMRAM     4     0      4
                   _TFT_DrawFillRect
                     _TFT_DrawString
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawString                                      11     0     11   20062
                                             62 COMRAM    11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawChar                                        21    11     10   18060
                                             41 COMRAM    21    11     10
                   _TFT_DrawFillRect
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawPixel                                        6     0      6    3362
                                             12 COMRAM     6     0      6
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawFillRect                                    14     4     10   12063
                                             27 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1223
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _TFT_FullScreen                                       0     0      0    2896
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (6) _TFT_SetAddrWindow                                    8     0      8    2896
                                             12 COMRAM     8     0      8
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (6) _TFT_Flood                                           15     9      6    2950
                                             12 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TFT_WriteRegister                                    8     4      4    2156
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateSet                                  12     8      4     937
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _A6_IsAlive                                          32    32      0    4728
                                             30 COMRAM    32    32      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     547
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _A6_Command                                           7     0      7    4131
                                             23 COMRAM     7     0      7
                        _A6_ReadLine
                    _EUSART_RX_Flush
                   _EUSART_TX_String
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_TX_String                                     3     0      3     219
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_Char                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_RX_Flush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _A6_ReadLine                                          7     2      5    1736
                                             16 COMRAM     7     2      5
               _EUSART_BufferGetChar
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     552
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _EUSART_BufferGetChar                                 2     0      2     394
                                             14 COMRAM     2     0      2
            _EUSART_RX_AvailableData
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_AvailableData                             10     8      2     220
                                              4 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (11) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_Interrupt                                 2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _sleepMS
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_WriteRegister
         ___awdiv
         _abs
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_FillScreen
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_WriteRegister
     _TFT_FullScreen
       _TFT_SetAddrWindow
         _TFT_WriteRegister
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _A6_BaudRateGet
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atol
         ___lmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_BaudRateSet
       _A6_BaudRateGet
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
       _strcmp
     _A6_Command
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_Flush
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _strlen
     _A6_IsAlive
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _strcmp
     _A6_NetworkGetRSSI
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atoi
         ___wmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_NetworkGetRSSILevel
       _A6_NetworkGetRSSI
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atoi
           ___wmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
     _A6_NetworkGetStatus
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atoi
         ___wmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_Process_Random_Comms
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_AvailableData
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _strcmp
     _printLine
       _TFT_DrawFillRect
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_FullScreen
           _TFT_SetAddrWindow
             _TFT_WriteRegister
         _TFT_SetAddrWindow
           _TFT_WriteRegister
         ___wmul
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
     _sprintf
       _A6_BaudRateGet (ARG)
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_NetworkGetRSSI (ARG)
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atoi
           ___wmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_NetworkGetRSSILevel (ARG)
         _A6_NetworkGetRSSI
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      82       9       50.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AD      C5       7       77.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      74       5       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     214      20        0.0%
DATA                 0      0     214       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 26 21:15:59 2019

             ?_A6_Process_Random_Comms 0001                 A6_BaudRateAutoDetect@i 0090  
                  __size_of_A6_IsAlive 0050                    __size_of_A6_Command 0086  
                         ___awdiv@sign 000A                    ___wmul@multiplicand 0007  
                          __CFG_BORV$0 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                                  l100 062E                                    l101 0676  
                                  l111 1FDC                                    l107 2A18  
                                  l214 2924                                    l232 22E4  
                                  l305 1E40                                    l235 2B32  
                                  l251 0EE0                                    l243 183E  
                                  l229 2B90                                    l270 1042  
                                  l262 23D2                                    l246 29A2  
                                  l511 2BAA                                    l272 10FE  
                                  l274 1064                                    l290 0BE0  
                                  l282 28E0                                    l178 2444  
                                  l515 276A                                    l267 0FEE  
                                  l259 0F7E                                    l443 27B8  
                                  l523 1488                                    l540 20A2  
                                  l620 289A                                    l460 29DE  
                                  l541 20EA                                    l277 10D8  
                                  l623 216E                                    l279 1100  
                                  l535 19F2                                    l527 1364  
                                  l544 1A0E                                    l720 2B0C  
                                  l392 2AE6                                    l457 235C  
                                  l650 2064                                    l546 1AC8  
                                  l626 2BAE                                    l643 2BCE  
                                  l635 2964                                    l299 0D96  
                                  l731 257A                                    l571 1C4E  
                                  l732 258A                                    l629 2BC2  
                                  l717 0BA2                                    l566 1760  
                                  l655 2852                                    l575 226A  
                                  l559 1ECC                                    l680 08D2  
                                  l754 1DB0                                    l747 1DA0  
      __end_of_Ecg_Background_Leads_Ok 235E                                    l951 1B8C  
                                  l696 095A                                    _GIE 007F97  
                         __CFG_CPB$OFF 000000                           printLine@str 004A  
                         __CFG_CPD$OFF 000000                           __CFG_BOR$OFF 000000  
                                  _abs 2A52                                    _isr 0008  
                      __end_of_A6_Init 2BAC                                    wreg 000FE8  
                 __size_of_A6_ReadLine 00D6                           TFT_Flood@len 000F  
                EUSART_BaudRateSet@tmp 001A                           ?_EUSART_Init 0001  
                         __CFG_LVP$OFF 000000                           TFT_Init@data 0020  
                         __CFG_WDT$OFF 000000                                   ?_abs 0005  
                                 l1135 1F54                                   l1128 1F44  
                                 l1411 122A                                   l1403 1102  
                                 l1412 123A                                   l1500 25E8  
                                 l1501 25F0                                   l1423 2A50  
                                 l1431 271A                                   l1417 2AB6  
                                 l4011 1FBC                                   l1437 2806  
                                 l4013 1FD4                                   l4005 1F56  
                                 l2501 2B80                                   l1461 15BC  
                                 l4101 1E42                                   l1382 2A7C  
                                 l4023 2768                                   l4015 271C  
                                 l4007 1F60                                   l1383 2A84  
                                 l2503 2B8E                                   l1471 21F0  
                                 l1463 1682                                   l4031 1BD4  
                                 l4111 1E90                                   l4017 273C  
                                 l3321 28F4                                   l3313 28E2  
                                 l3401 2B04                                   l4009 1F8C  
                                 l5001 0946                                   l1449 1D0C  
                                 l1481 264E                                   l4033 1C0C  
                                 l4041 1C4C                                   l4201 2268  
                                 l4105 1E60                                   l1490 1918  
                                 l1482 2656                                   l1466 167A  
                                 l4019 2762                                   l3331 2904  
                                 l3323 28F8                                   l3315 28E8  
                                 l3411 2966                                   l5003 0968  
                                 l5011 09B0                                   l4051 28C4  
                                 l4035 1C1E                                   l4027 1B8E  
                                 l4211 1702                                   l4115 1EBA  
                                 l4107 1E7C                                   l3421 2808  
                                 l3413 2A1A                                   l3341 2918  
                                 l3333 290A                                   l3325 28FA  
                                 l3317 28EC                                   l3405 235E  
                                 l4045 29E0                                   l5021 09EE  
                                 l5005 0980                                   l4061 0E46  
                                 l4053 0D98                                   l2541 23E4  
                                 l1469 2170                                   l1397 1598  
                                 l4037 1C3A                                   l4029 1BAE  
                                 l4213 1714                                   l4205 1684  
                                 l1398 15A0                                   l3431 2840  
                                 l3423 2824                                   l3415 2A26  
                                 l3511 19F4                                   l3503 2926  
                                 l3343 291C                                   l3335 290E  
                                 l3327 28FE                                   l3319 28F0  
                                 l3351 2B0E                                   l3407 23A2  
                                 l4047 29FA                                   l5031 0A30  
                                 l5023 09F0                                   l5007 098C  
                                 l5103 1934                                   l4071 0EE8  
                                 l4063 0E76                                   l4055 0DE6  
                                 l4231 278E                                   l4223 276C  
                                 l2551 2408                                   l2543 23FC  
                                 l2535 23D4                                   l4215 174C  
                                 l4207 16A4                                   l3433 2844  
                                 l3417 2A32                                   l3521 1A44  
                                 l3513 1A1C                                   l3505 292A  
                                 l3601 2066                                   l3345 2920  
                                 l3337 2912                                   l3329 2902  
                                 l3361 0FA6                                   l3353 0F80  
                                 l3409 23CE                                   l5041 0A86  
                                 l5033 0A54                                   l5025 0A02  
                                 l5017 09B4                                   l5009 09A8  
                                 l5113 19CA                                   l5105 1960  
                                 l5121 2BA6                                   l4049 289C  
                                 l4081 0F4C                                   l4073 0EFA  
                                 l4065 0E82                                   l4057 0DF8  
                                 l4241 22F2                                   l4233 2790  
                                 l4225 2770                                   l2561 241A  
                                 l2553 240A                                   l2545 23FE  
                                 l2537 23D6                                   l3441 2170  
                                 l4209 16CA                                   l5201 0488  
                                 l3427 282A                                   l3419 2A36  
                                 l3531 1A80                                   l3515 1A2C  
                                 l3507 294E                                   l3603 2074  
                                 l4091 2126                                   l3347 2922  
                                 l3339 2916                                   l3371 1038  
                                 l3363 0FAA                                   l3355 0F84  
                                 l5051 0AC8                                   l5043 0A8A  
                                 l5035 0A60                                   l5027 0A14  
                                 l5115 19DE                                   l5107 1974  
                                 l4251 29B0                                   l4083 0F5C  
                                 l4075 0F1A                                   l4067 0E9A  
                                 l4059 0E28                                   l4243 2320  
                                 l4235 27B2                                   l4227 277E  
                                 l2491 2B74                                   l2571 242E  
                                 l2563 241C                                   l2555 240E  
                                 l2547 2400                                   l2539 23DE  
                                 l3443 21A0                                   l4171 21F8  
                                 l4219 175E                                   l5211 054A  
                                 l5203 04A6                                   l5131 0096  
                                 l5123 0012                                   l3381 1FDE  
                                 l3429 282E                                   l3533 1A90  
                                 l3541 1AC6                                   l3525 1A56  
                                 l3437 2BAE                                   l3509 2952  
                                 l3605 20B2                                   l4093 215C  
                                 l3373 104E                                   l3365 0FD8  
                                 l3357 0F88                                   l3349 226C  
                                 l3461 0BDC                                   l3453 0BA4  
                                 l3621 1E10                                   l3613 1DB2  
                                 l5053 0AD2                                   l5045 0AA2  
                                 l5037 0A68                                   l5029 0A2A  
                                 l5061 0B74                                   l5117 19E2  
                                 l5109 19B2                                   l4077 0F36  
                                 l4085 0F60                                   l4069 0ED4  
                                 l4245 234A                                   l4229 2780  
                                 l2493 2B78                                   l4261 1790  
                                 l4253 1762                                   l2581 2440  
                                 l2573 2436                                   l2565 2420  
                                 l2557 2412                                   l2549 2404  
                                 l3701 116A                                   l4173 220A  
                                 l5221 05F0                                   l5205 04F8  
                                 l5213 055C                                   l5141 013C  
                                 l5133 00BE                                   l5125 0016  
                                 l3383 1FF0                                   l3535 1A92  
                                 l3527 1A5A                                   l3519 1A32  
                                 l3439 2BBC                                   l3607 20B6  
                                 l3631 26C8                                   l4095 2166  
                                 l4087 20EC                                   l3375 10B4  
                                 l3359 0F9C                                   l3471 0C34  
                                 l3615 1DB6                                   l3551 2AAC  
                                 l5055 0B4A                                   l5047 0AB8  
                                 l5039 0A7A                                   l5063 0B96  
                                 l5119 2B92                                   l3623 2A52  
                                 l4079 0F3E                                   l4247 2352  
                                 l4239 22E6                                   l2495 2B7A  
                                 l4271 1802                                   l4263 17AE  
                                 l4255 1766                                   l2583 2442  
                                 l2575 243A                                   l2567 2428  
                                 l2559 2416                                   l3703 1172  
                                 l3447 21AC                                   l5071 1268  
                                 l4191 224C                                   l4183 2226  
                                 l5231 063A                                   l5223 05F8  
                                 l5215 057A                                   l5207 0508  
                                 l5143 0166                                   l5151 01AA  
                                 l5135 00D2                                   l5127 0034  
                                 l3393 204E                                   l3385 1FF8  
                                 l3529 1A6C                                   l3609 20D2  
                                 l3633 26F8                                   l4097 216A  
                                 l4089 20F2                                   l3377 10CE  
                                 l3369 101E                                   l3481 0D66  
                                 l3473 0CA0                                   l3617 1E00  
                                 l3553 2AB0                                   l3545 2A88  
                                 l5057 0B56                                   l5049 0AC4  
                                 l4281 286A                                   l4249 29A4  
                                 l3801 1B56                                   l3625 2A60  
                                 l2497 2B7C                                   l4265 17B2  
                                 l4273 1816                                   l4257 177C  
                                 l2577 243C                                   l2569 242A  
                                 l3561 2540                                   l3449 21E8  
                                 l3641 1C54                                   l5081 12D6  
                                 l4185 2236                                   l4177 2210  
                                 l4169 21F2                                   l5233 0642  
                                 l5225 060A                                   l5217 05CC  
                                 l5209 051C                                   l5161 0270  
                                 l5145 018E                                   l5153 0220  
                                 l5137 00E8                                   l5129 0086  
                                 l3395 2062                                   l3387 2028  
                                 l3539 1AA8                                   l3491 2BCA  
                                 l3635 2710                                   l3627 26BC  
                                 l3379 10EC                                   l3483 0D68  
                                 l3475 0CB8                                   l3467 0BEE  
                                 l3459 0BA8                                   l3619 1E0C  
                                 l3547 2A8C                                   l5059 0B5A  
                                 l4283 2872                                   l3811 1B7C  
                                 l3803 1B5E                                   l4291 2AD6  
                                 l2499 2B7E                                   l4275 182E  
                                 l4267 17D4                                   l4259 1784  
                                 l2579 243E                                   l3563 2550  
                                 l3715 11D0                                   l3571 1874  
                                 l3651 1CD4                                   l3643 1C8E  
                                 l5083 12FC                                   l5075 127E  
                                 l5067 123C                                   l3731 14C6  
                                 l3723 148A                                   l4195 2252  
                                 l4179 2220                                   l5235 0664  
                                 l5227 061A                                   l5219 05DC  
                                 l5171 02C4                                   l5163 0284  
                                 l5155 0244                                   l5147 01A2  
                                 l5139 0112                                   l3389 2048  
                                 l3493 27BA                                   l3629 26C0  
                                 l3485 0D6C                                   l3477 0CC8  
                                 l3469 0BFE                                   l3821 1EEC  
                                 l3549 2A9C                                   l4285 287E  
                                 l3813 1B84                                   l3805 1B60  
                                 l4293 2ADA                                   l4277 1832  
                                 l4269 17E8                                   l3565 255A  
                                 l3557 2522                                   l3717 11E4  
                                 l3709 1188                                   l3581 1910  
                                 l3573 18B2                                   l3653 1D04  
                                 l3661 15CE                                   l5085 1324  
                                 l5077 12A2                                   l5069 1250  
                                 l3741 1518                                   l3733 14D2  
                                 l3725 148E                                   l4197 2262  
                                 l4189 223C                                   l5229 0626  
                                 l5181 0360                                   l5173 02D2  
                                 l5165 0298                                   l5157 025C  
                                 l3495 27C6                                   l3751 1D0E  
                                 l3399 2AE8                                   l3487 0D80  
                                 l3479 0CFE                                   l3831 1F3E  
                                 l3823 1EF8                                   l5095 191A  
                                 l4279 2854                                   l3807 1B66  
                                 l4295 2AE0                                   l4287 2AB8  
                                 l3559 2532                                   l3719 11F4  
                                 l3567 1840                                   l3647 1C9A  
                                 l3639 1C50                                   l3591 25B8  
                                 l5087 1338                                   l5079 12C2  
                                 l3735 14EC                                   l3727 1492  
                                 l5191 03D6                                   l5183 0370  
                                 l5175 02DC                                   l5167 02AC  
                                 l5159 0268                                   l3497 27CA  
                                 l3761 1D56                                   l3753 1D1E  
                                 l3489 0D82                                   l3825 1F06  
                                 l3817 1ECE                                   l5097 192E  
                                 l3809 1B6C                                   l4297 2AE4  
                                 l4289 2ACE                                   l3577 18EE  
                                 l3569 1844                                   l3649 1CC2  
                                 l3593 25F2                                   l3585 258C  
                                 l3681 1672                                   l3673 1624  
                                 l3665 15DA                                   l3657 15A2  
                                 l3841 13F6                                   l3833 1366  
                                 l5089 134C                                   l3745 1550  
                                 l3737 14F6                                   l3729 14AC  
                                 l5193 0428                                   l5185 0384  
                                 l5169 02B0                                   l5521 01D2  
                                 l5177 02F0                                   l5281 2B44  
                                 l5273 2B34                                   l3499 27FA  
                                 l3771 1D9A                                   l3763 1D60  
                                 l3755 1D34                                   l3827 1F24  
                                 l3819 1EE4                                   l3691 1124  
                                 l3579 18F6                                   l3595 25FE  
                                 l3587 2598                                   l3675 1646  
                                 l3667 15F6                                   l3659 15B4  
                                 l3851 1452                                   l3843 1412  
                                 l3835 1386                                   l3747 156C  
                                 l3739 1510                                   l5195 0438  
                                 l5187 03A4                                   l5179 030E  
                                 l5523 01E0                                   l5515 01BC  
                                 l5283 2B48                                   l5275 2B38  
                                 l3765 1D7E                                   l3757 1D3C  
                                 l3829 1F34                                   l3781 1AE8  
                                 l3773 1ACA                                   l3693 1136  
                                 l3685 1102                                   l3597 2606  
                                 l3589 25A0                                   l3677 165E  
                                 l3669 160E                                   l3853 1466  
                                 l3837 13AC                                   l3749 157C  
                                 l5197 044C                                   l5189 03B8  
                                 l5525 01FC                                   l5517 01EE  
                                 l5277 2B3C                                   l3767 1D8E  
                                 l3759 1D48                                   l3791 1B1C  
                                 l3783 1AF6                                   l3775 1ACE  
                                 l3695 114A                                   l3687 110E  
                                 l3599 261E                                   l3679 166A  
                                 l3855 1468                                   l3839 13E4  
                                 l5199 0474                                   l5519 020A  
                                 l5279 2B40                                   l3769 1D90  
                                 l3793 1B24                                   l3785 1AFE  
                                 l3777 1ADC                                   l3697 115C  
                                 l3689 1112                                   l3849 1416  
                                 l3857 1478                                   l4931 06AC  
                                 l4923 0678                                   l3795 1B2C  
                                 l3787 1B02                                   l3779 1AE4  
                                 l3699 115E                                   l4941 0726  
                                 l4933 06B8                                   l4925 0686  
                                 l3797 1B3A                                   l3789 1B0A  
                                 l4951 076A                                   l4943 072A  
                                 l4935 06D6                                   l4927 0698  
                                 l3799 1B40                                   l4961 07D2  
                                 l4953 077C                                   l4945 074C  
                                 l4937 06E0                                   l4929 06A4  
                                 l4971 0812                                   l4963 07EA  
                                 l4955 0784                                   l4947 0752  
                                 l4939 06FC                                   ?_isr 0001  
                                 l4981 0882                                   l4973 0830  
                                 l4965 07F6                                   l4957 0790  
                                 l4949 0762                                   l4991 0906  
                                 l4975 085A                                   l4967 0802  
                                 l4959 0796                                   l4993 0912  
                                 l4977 0860                                   l4969 080E  
                                 l4985 0888                                   l4995 092C  
                                 l4987 08E0                                   l4979 0864  
                                 l4997 0934                                   l4989 08EE  
                                 l4999 0942                                   STR_1 5EE9  
                                 STR_2 5E2F                                   STR_3 5E6B  
                                 STR_4 5EA1                                   STR_5 5F00  
                                 STR_6 5F85                                   STR_7 5F3E  
                                 STR_8 5F9B                                   STR_9 5FB0  
                                 _CREN 007D5C                                   u2010 0FCA  
                                 u2100 2A50                                   u2020 0FEA  
                                 u2101 2A4C                                   u2021 0FE6  
                        TFT_DrawChar@c 002E                                   u2110 2824  
                                 u2030 1038                                   u2111 2820  
                                 u2031 1034                                   u2015 0FC0  
                                 u2120 2840                                   u2040 1060  
                                 u2200 0CB8                                   u2121 283C  
                                 u2041 105C                                   u2201 0CB4  
                                 u2130 2BBC                                   u2050 10CE  
                                 u2210 0CC8                                   u2131 2BB8  
                                 u2051 10CA                                   u2211 0CC4  
                        TFT_DrawChar@i 003E                                   u2300 1A56  
                                 u2060 10FE                                   u2220 0D80  
                                 u2140 2190                          TFT_DrawChar@j 003D  
                                 u2301 1A52                                   u2061 10FA  
                                 u2221 0D7C                                   _LATA 000F89  
                                 u2070 1FF0                                   u2310 1A6C  
                                 u2230 0D96                                   u2150 21A0  
                                 _LATB 000F8A                                   u2071 1FEC  
                                 u2311 1A68                                   u2231 0D92  
                                 u2151 219C                                   _LATC 000F8B  
                                 u2080 2048                                   u2320 1A7C  
                                 u2240 27EA                                   u3200 0DE0  
                                 u2160 21D8                                   u2400 1874  
                                 u2081 2044                                   u2321 1A78  
                                 u3201 0DDA                                   u2401 1870  
                                 u2090 2062                                   u2330 1AA4  
                                 u2250 27FA                                   u3210 0DE2  
                                 u2170 21E8                                   u2410 18B2  
                                 u2091 205E                                   u2331 1AA0  
                                 u2251 27F6                                   u2171 21E4  
                                 u2147 2186                                   u2411 18AE  
                                 u2340 1AC6                                   u2260 294A  
                                 u2180 0BEE                                   u2500 1E30  
                                 u4100 082C                                   u3220 0DF8  
                                 u2420 18D2                                   u3300 1E8C  
                                 u2341 1AC2                                   u2181 0BEA  
                                 u4101 0828                                   u3221 0DF4  
                                 u3301 1E88                                   u2270 2964  
                                 u2190 0BFE                                   u2510 1E40  
                                 u3150 1FD4                                   u2350 2A9C  
                                 u4110 0858                                   u4030 0698  
                                 u3230 0E46                                   u2430 1910  
                                 u3310 1EB6                                   u2271 2960  
                                 u2247 27E0                                   u2191 0BFA  
                                 u2511 1E3C                                   u3151 1FD0  
                                 u2351 2A98                                   u4031 0694  
                                 u3231 0E42                                   u2167 21CE  
                                 u2431 190C                                   u2415 18A2  
                                 u3311 1EB2                                   u2280 1A2C  
                                 u3160 2762                                   u2360 2AAC  
                                 u4200 0A2A                                   u4120 087E  
                                 u4040 06D6                                   u2520 2A60  
                                 u3240 0ED4                                   u2440 25B8  
                                 u2600 15CE                                   u3400 224C  
                                 u2281 1A28                                   u3161 275E  
                                 u2361 2AA8                                   u4201 0A26  
                                 u4121 087A                                   u4041 06D2  
                                 u2521 2A5C                                   u3241 0ED0  
                                 u2417 1898                                   u2441 25B4  
                                 u2601 15CA                                   u3401 2248  
                                 u2290 1A44                                   u2530 26F8  
                                 u4210 0A54                                   u4130 08E0  
                                 u4050 0748                                   u3250 0EFA  
                                 u2370 2540                                   u2450 25E8  
                                 u2610 160E                                   u3170 1BD4  
                                 u3410 2262                          TFT_DrawChar@x 002A  
                                 u2291 1A40                                   u2267 2940  
                                 u2531 26F4                                   u2507 1E26  
                                 u4211 0A50                                   u4131 08DC  
                                 u4051 0744                                   u3251 0EF6  
                                 u2371 253C                                   u2427 18C8  
                                 u2451 25E4                                   u2611 160A  
                                 u3171 1BD0                                   u3411 225E  
                        TFT_DrawChar@y 002C                                   u2540 2710  
                                 u4220 0A7A                                   u4140 08EE  
                                 u4060 077C                                   u4300 1974  
                                 u3260 0F4C                                   u3500 2ACE  
                                 u2380 257A                                   u2460 261E  
                                 u2620 165E                                   u2700 14C6  
                                 u3180 1C1E                                   u3420 16CA  
                                 u2541 270C                                   u4221 0A76  
                                 u4141 08EA                                   u4117 084E  
                                 u4061 0778                                   u4301 1970  
                                 u3261 0F48                                   u3501 2ACA  
                                 u2381 2576                                   u2461 261A  
                                 u2621 165A                                   u2701 14C2  
                                 u3181 1C1A                                   u3421 16C6  
                                 u3190 2A18                                   u4230 0AA2  
                                 u4150 0942                                   u4070 07C2  
                                 u4310 19F2                                   u3270 0F7E  
                                 u2630 1124                                   u2390 1864  
                                 u2550 1C8E                                   u2470 264E  
                                 u2710 14EC                                   u3430 1714  
                                 u3191 2A14                                   u4231 0A9E  
                                 u4151 093E                                   u4311 19EE  
                                 u3271 0F7A                                   u2631 1120  
                                 u2551 1C8A                                   u2471 264A  
                                 u2711 14E8                                   u3431 1710  
                                 u2480 20A2                                   u3280 2146  
                                 u4240 0AB8                                   u4160 0968  
                                 u4080 07D2                                   u2800 1B1C  
                                 u3440 277E                                   u2640 1136  
                                 u2560 1CD4                                   u2720 1510  
                                 u4400 0428                                   u4320 0034  
                                 u2481 209E                                   u4241 0AB4  
                                 u4161 0964                                   u4081 07CE  
                                 u2801 1B18                                   u3441 277A  
                                 u2641 1132                                   u2561 1CD0  
                                 u2721 150C                                   u4401 0424  
                                 u4321 0030                                   u2490 1DE6  
                                 u4250 0B74                                   u4170 09EA  
                                 u4090 07EA                                   u2810 1B3A  
                                 u3450 278E                                   u2650 115C  
                                 u2570 1CF4                                   u2730 156C  
                                 u3370 220A                                   u3290 1E5C  
                                 u4410 04A6                                   u4330 0086  
                                 u4251 0B70                                   u4171 09E6  
                                 u4091 07E6                                   u2811 1B36  
                                 u3451 278A                                   u2651 1158  
                                 u2731 1568                                   u3371 2206  
                                 u3291 1E58                                   u4411 04A2  
                                 u4331 0082                                   u4260 0B96  
                                 u4180 0A02                                   u2820 1B56  
                                 u3460 27A4                                   u2660 1184  
                                 u2580 1D04                                   u2900 1478  
                                 u2740 157C                                   u3380 2220  
                                 u4420 04F8                                   u4340 025C  
                                 u3285 213C                                   u4261 0B92  
                                 u4181 09FE                                   u4077 07B8  
                                 u2821 1B52                                   u3461 279C  
                                 u2661 1180                                   u2397 185A  
                                 u2581 1D00                                   u2901 1474  
                                 u2741 1578                                   u3381 221C  
                                 u4421 04F4                                   u4341 0258  
                                 u2750 1D34                                   u4190 0A14  
                                 u2830 1B7C                                   u2670 11E4  
                                 u2590 15B4                                   u4270 1268  
                                 u3390 2236                                   u4430 057A  
                                 u4350 0298                                   u2751 1D30  
                                 u4191 0A10                                   u2831 1B78  
                                 u2671 11E0                                   u2591 15B0  
                                 u4271 1264                                   u3391 2232  
                                 u4431 0576                                   u4351 0294  
                                 u2760 1D56                                   u2840 1EE4  
                                 u3480 17E8                                   u2680 11F4  
                                 u4280 12FC                                   u4440 05CC  
                                 u4360 02C4                                   u2761 1D52  
                                 u2497 1DDC                                   u2841 1EE0  
                                 u3481 17E4                                   u2681 11F0  
                                 u2577 1CEA                                   u4281 12F8  
                                 u4441 05C8                                   u4361 02C0  
                                 u2770 1D7E                                   u2850 1F06  
                                 u3490 182E                                   u4290 1338  
                                 u2690 14AC                                   u4450 060A  
                                 u4370 030E                                   u2771 1D7A  
                                 u2851 1F02                                   u3491 182A  
                                 u4291 1334                                   u2691 14A8  
                                 u4451 0606                                   u4371 030A  
                                 _PEIE 007F96                                   u2860 1F24  
                                 u2780 1ADC                                   u4460 061A  
                                 u4380 0360                                   u2861 1F20  
                                 u2781 1AD8                                   u4461 0616  
                                 u4381 035C                                   u2790 1AF6  
                                 u3478 27A6                                   u2870 13AC  
                                 u4390 03D6                                   u2791 1AF2  
                                 u2871 13A8                                   u4391 03D2  
                                 u2880 13F6                                   u2881 13F2  
                                 u2890 1452                                   u4547 23EE  
                                 u2891 144E                                   _RCIE 007CED  
                                 _RCIF 007CF5                                   u4557 1770  
                                 u4567 17F2                                   u4577 2B86  
                                 _OERR 007D59                                   _RBPU 007F8F  
              __size_of_A6_BaudRateGet 0124                __size_of_A6_BaudRateSet 012A  
                                 _TXIF 007CF4                          TFT_DrawLine@t 0020  
                                 abs@a 0005                                   _atoi 148A  
                                 _atol 1102                                   _main 2B34  
                      A6_BaudRateGet@j 0049                                   _init 23D4  
                                 _tmp1 01BD                                   _tmp2 01B9  
                                 _tmp3 01B5                                   _tmp4 01B1  
                                 _tmp5 01AD                                   _loop 0012  
                                 fsr0h 000FEA                                   indf0 000FEF  
                                 fsr2h 000FDA                                   fsr0l 000FE9  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 005A  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                      TFT_Flood@color_hi 001A  
                    TFT_Flood@color_lo 001B                          __CFG_IESO$OFF 000000  
          __size_of_EUSART_BaudRateSet 0084        __size_of_A6_NetworkGetRSSILevel 007A  
         __end_of_EUSART_BufferGetChar 2854                           ___param_bank 000000  
        ?_Ecg_Background_Leads_Failure 0001          A6_BaudRateSet@currentBaudRate 00A8  
          __end_of_A6_NetworkGetStatus 1762                                  ??_abs 0007  
                                ??_isr 0003                          __CFG_PLLDIV$1 000000  
                      ??_TFT_DrawPixel 0013                         __CFG_CCP2MX$ON 000000  
                       printLine@color 004C                                  ?_atoi 000B  
                                ?_atol 0011                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 1B8E  
                                ?_loop 0001                                  STR_10 5F2E  
                                STR_11 5FF6                                  STR_12 5F7A  
                                STR_20 5F6F                                  STR_13 5F17  
                                STR_21 5E4F                                  STR_22 5FEE  
                                STR_30 5F64                                  STR_14 5E86  
                                STR_31 5FFA                                  STR_23 5FFA  
                                STR_15 5EBA                                  STR_40 5FD3  
                                STR_24 5FBA                                  STR_32 5FA6  
                                STR_16 5F4B                                  STR_25 5FE1  
                                STR_33 5FCB                                  STR_17 5F90  
                                STR_34 5FD1                                  STR_26 5FD1  
                                STR_18 5FE8                                  STR_35 5FFD  
                                STR_19 5FF2                                  STR_27 5F58  
                                STR_28 5FFA                                  STR_36 5FC3  
                                STR_37 5FDA                                  STR_29 5ED2  
                                STR_38 5FD1                                  STR_39 5FFD  
                      __end_of___lldiv 1DB2                        ___awdiv@divisor 0007  
                      __end_of___llmod 1F56                         TFT_DrawChar@bg 0031  
                                i2l185 2516                                  i2l438 2B72  
                                i2l640 26BA                        ___awdiv@counter 0009  
                                _RCREG 000FAE                                  _TMR3H 000FB3  
                                _TMR3L 000FB2                                  _SPBRG 000FAF  
                                _PORTB 000F81                          __CFG_USBDIV$2 000000  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TXREG 000FAD  
                                _Ecg_X 00D2                                  _Ecg_Y 0058  
                        __CFG_PWRT$OFF 000000                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0009                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                      ??_EUSART_RX_Flush 0005  
                       TFT_DrawLine@x0 0013                         TFT_DrawLine@x1 0017  
                       TFT_DrawLine@y0 0015                         TFT_DrawLine@y1 0019  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                       TFT_DrawLine@dx 0030                         TFT_DrawLine@dy 0028  
                        __CFG_WRTD$OFF 000000                         __CFG_EBTRB$OFF 000000  
              __size_of_Ecg_CheckLeads 004E                        __end_of_dpowers 5DE5  
                      __end_of_isdigit 2AB8                       __end_of_TFT_Font 5CF1  
                     __end_of_TFT_Init 1840                                  atoi@a 0010  
                                atol@a 001A                                  atol@c 001E  
                                atoi@s 000B                                  atol@s 0011  
                       TFT_DrawPixel@x 000D                         TFT_DrawPixel@y 000F  
                   __size_of_TFT_Flood 0182                        __end_of_sleepMS 2A1A  
                     _TFT_DrawFillRect 235E                                  tablat 000FF5  
                   __size_of_TFT_Reset 001E                 __size_of_Ecg_Interrupt 0020  
                     __end_of_Ecg_Init 2AE8        A6_Process_Random_Comms@response 0060  
                                ttemp5 005B                                  ttemp6 005E  
                                ttemp7 0062                                  status 000FD8  
                                wtemp8 005B                        __end_of_sprintf 0BA4  
          EUSART_BufferGetChar@timeout 000F                        __end_of_strcspn 2658  
                      __end_of_strncmp 191A        __end_of_A6_Process_Random_Comms 1ECE  
                       __CFG_MCLRE$OFF 000000                         TFT_Flood@color 000D  
                      __initialization 2446  A6_NetworkGetStatus@networkStatusToken 003F  
                         __end_of_atoi 15A2                           __end_of_atol 123C  
                         __end_of_main 2B54                           __end_of_init 2446  
                         __end_of_loop 0678                              ??_A6_Init 0056  
                               ??_atoi 000D                                 ??_atol 0015  
                               ??_main 0056                       ??_TFT_FillScreen 001E  
                               ??_init 0005                                 ??_loop 00AC  
                        __activetblptr 000002                 _A6_NetworkGetRSSILevel 21F2  
                     ??_TFT_DrawString 004A                           ??_A6_IsAlive 001F  
                         ??_A6_Command 001F                         _EUSART_TX_Char 2BAC  
                     ___llmod@dividend 0012                                 _ADRESH 000FC4  
                               _ADRESL 000FC3                       ___awdiv@dividend 0005  
                    _TFT_DrawChar$2204 0039                      _TFT_DrawChar$2205 003B  
                               i2l4461 266A                                 i2l4453 2B54  
                               i2l4471 26AA                                 i2l4463 266E  
                               i2l4455 2B6C                                 i2l4551 24E8  
                               i2l4465 2690                                 i2l4457 2B70  
                               i2l4561 2504                                 i2l4553 24EC  
                               i2l4545 24BE                                 i2l4467 2694  
                               i2l4459 2658                                 i2l4563 2512  
                               i2l4555 24F0                                 i2l4547 24CC  
                               i2l4469 26A6                                 i2l4557 24F4  
                               i2l4549 24DA                                 i2l4559 24F6  
                _A6_BaudRateAutoDetect 191A                                 _TMR3IE 007D01  
                               _TMR3IF 007D09                                 _SPBRGH 000FB0  
     __size_of_Ecg_Background_Leads_Ok 0078                         __CFG_XINST$OFF 000000  
                      TFT_DrawLine@err 002C                       ??_TFT_FullScreen 0015  
                               ___lmul 2522                                 ___wmul 2AE8  
               A6_BaudRateSet@baudRate 0070                              ??___awdiv 0009  
                            ??___lldiv 000D                              ??___llmod 001A  
                    ?_EUSART_TX_String 0009                     __end_of_A6_IsAlive 276C  
                               _memset 2A1A                          _Ecg_Interrupt 2B54  
                    __end_of_TFT_Flood 1102                                 clear_0 2484  
                               clear_1 2490                                 clear_2 249C  
                   __end_of_A6_Command 20EC                       ___awdiv@quotient 000B  
                    __end_of_TFT_Reset 2B92                     ??_EUSART_TX_String 000C  
                               _strchr 2170                                 _strcmp 26BC  
                               _strlen 27BA                                 _strtok 15A2  
                               _strspn 258C                                 _strstr 1C50  
                         __pdataCOMRAM 0058                              ??_isdigit 0005  
                               loop@ns 01AC                                 loop@zz 01A8  
                         __mediumconst 57F0                 __end_of_EUSART_TX_Char 2BC4  
                            ??_sleepMS 0009                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                 _EUSART_BufferGetChar 2808                        TFT_DrawString@x 003F  
                      TFT_DrawString@y 0041                              ??_sprintf 0052  
                            ??_strcspn 000F                              ??_strncmp 000F  
                       _A6_BaudRateGet 1366                         _A6_BaudRateSet 123C  
                 __size_of_EUSART_Init 0048                             __accesstop 0060  
              __end_of__initialization 24A6                 A6_BaudRateSet@response 0074  
                      __CFG_PBADEN$OFF 000000                          ___rparam_used 000001  
                      TFT_Flood@blocks 0017                         __pcstackCOMRAM 0001  
                         __pidataBANK0 2BC4                         ?_Ecg_Interrupt 0001  
                            ?_TFT_Init 0001                              ?_Ecg_Init 0001  
         __size_of_EUSART_RX_Interrupt 0064                        ?_EUSART_TX_Char 0001  
                ?_EUSART_BufferGetChar 000F                         _Ecg_CheckLeads 276C  
               __end_of_A6_BaudRateGet 148A       __size_of_A6_Process_Random_Comms 008C  
               __end_of_A6_BaudRateSet 1366                           sprintf@width 006D  
               ?_A6_BaudRateAutoDetect 0001                             __pbssBANK0 00B0  
                           __pbssBANK1 01AD                             __pbssBANK2 0200  
                 A6_ReadLine@iResponse 0016                                ?___lmul 0005  
                              ?___wmul 0005             EUSART_BaudRateSet@baudRate 0012  
                      _EUSART_RX_Flush 2BCA                             ??_TFT_Init 001E  
                              ?_memset 0005                                _A6_Init 2B92  
                       ___lmul@product 000D               __end_of_TFT_DrawFillRect 23D4  
                              ?_strchr 0005                                ?_strcmp 0005  
                              ?_strlen 0005                          ??_A6_ReadLine 0016  
                              ?_strtok 0012                                ?_strspn 000B  
                              ?_strstr 0010                             ??_Ecg_Init 004A  
                   A6_ReadLine@timeout 0014                 TFT_WriteRegister@h_747 000B  
               TFT_WriteRegister@l_748 000C                 __end_of_Ecg_CheckLeads 27BA  
                     TFT_DrawChar@line 0038                       TFT_DrawChar@size 0033  
                   __size_of_printLine 0088                           A6_ReadLine@c 0017  
             ?_EUSART_RX_AvailableData 0005                        ?_A6_BaudRateGet 001F  
                      ?_A6_BaudRateSet 0070                              TFT_Init@i 0026  
                      __CFG_VREGEN$OFF 000000                  TFT_DrawFillRect@color 0024  
           __end_of_EUSART_BaudRateSet 2170                _Ecg_Background_Leads_Ok 22E6  
                              __Hparam 0000                                __Lparam 0000  
                    A6_Command@command 0018                              _ECG_FLAGS 0056  
                      ??_Ecg_Interrupt 0001              A6_NetworkGetRSSI@response 001F  
                              ___awdiv 1ACA                        __size_of___lmul 006A  
                              ___lldiv 1D0E                        __size_of___wmul 0026  
                              ___llmod 1ECE                      _A6_NetworkGetRSSI 1B8E  
                      __CFG_STVREN$OFF 000000                      A6_Command@timeout 001A  
                        _ECG_HEARTBEAT 00B0                                __pcinit 2446  
                      __size_of_memset 0038                                __ramtop 0800  
                        _ECG_HEARTRATE 00C2                ?_A6_NetworkGetRSSILevel 0001  
                              __ptext0 2B34                                __ptext1 0012  
                              __ptext2 1E42                                __ptext3 1684  
                              __ptext4 21F2                                __ptext5 1B8E  
                              __ptext6 148A                                __ptext7 123C  
                              __ptext8 1366                                __ptext9 15A2  
                   ?_A6_NetworkGetRSSI 0001                  __end_of_TFT_DrawPixel 29A4  
                      __size_of_strchr 0082                        __size_of_strcmp 0060  
                      __size_of_strlen 004E                        __size_of_strtok 00E2  
                      __size_of_strspn 0066                        __size_of_strstr 00BE  
                              _dpowers 5DBD                           __size_of_abs 0034  
                              _isdigit 2A86                           __size_of_isr 251A  
         __size_of_A6_NetworkGetStatus 00DE                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                 ??_EUSART_BufferGetChar 0011  
                              _sleepMS 29E0                    ??_A6_NetworkGetRSSI 001F  
                  __end_of_A6_ReadLine 1ACA                                _sprintf 0678  
                              _strcspn 25F2                                _strncmp 1840  
                       __pintcode_body 24B4                              _EUSART_RX 0200  
                 end_of_initialization 24A6                                memset@c 0007  
                              memset@n 0009                                memset@p 000B  
                        __Lmediumconst 57F0                                int_func 24B4  
                   TFT_WriteRegister@h 0009                     TFT_WriteRegister@l 000A  
                      ___lldiv@divisor 0009                __end_of_EUSART_RX_Flush 2BD0  
                      ___lldiv@counter 0011                      __end_of_printLine 1FDE  
            Ecg_CheckLeads@leadsStatus 0008                              _RCSTAbits 000FAB  
            __end_of_A6_NetworkGetRSSI 1C50                                postdec1 000FE5  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                       TFT_DrawString@bg 0047  
                        ?_TFT_DrawChar 002A                          ?_TFT_DrawLine 0013  
       __end_of_A6_NetworkGetRSSILevel 226C                                strcmp@r 000B  
                              strlen@s 0005                                strspn@i 0010  
                            _PORTAbits 000F80        __end_of_EUSART_RX_AvailableData 2066  
                            _PORTCbits 000F82                              _TFT_Flood 0F80  
                            _TFT_Reset 2B74                _A6_Process_Random_Comms 1E42  
          A6_NetworkGetStatus@response 001F              __size_of_EUSART_TX_String 0040  
            ??_Ecg_Background_Leads_Ok 004A                            TFT_Init@cmd 0024  
                            _TXSTAbits 000FAC                    _EUSART_RX_Interrupt 2658  
                       ??_TFT_DrawChar 0034                         ??_TFT_DrawLine 001D  
             EUSART_RX_AvailableData@t 000B                         __end_of___lmul 258C  
                       __end_of___wmul 2B0E                            _BAUDCONbits 000FB8  
                   A6_IsAlive@response 001F                          __pidataCOMRAM 2BD0  
                     ??_EUSART_TX_Char 0005                         __end_of_memset 2A52  
                    __size_of_TFT_Init 00DE                           _MILLISECONDS 01C1  
                          _A6_ReadLine 19F4                             ?_TFT_Flood 000D  
                       __end_of_strchr 21F2                         __end_of_strcmp 271C  
                       __end_of_strlen 2808                         __end_of_strtok 1684  
                       __end_of_strspn 25F2                         __end_of_strstr 1D0E  
                           ?_TFT_Reset 0001                    start_initialization 2446  
                 ?_EUSART_RX_Interrupt 0001                ??_A6_BaudRateAutoDetect 0056  
                    __size_of_Ecg_Init 0030                            __end_of_abs 2A86  
                          __end_of_isr 2522                          ??_EUSART_Init 000D  
                  TFT_SetAddrWindow@x1 000D                    TFT_SetAddrWindow@x2 0011  
                  TFT_SetAddrWindow@y1 000F                    TFT_SetAddrWindow@y2 0013  
           A6_NetworkGetRSSI@RSSIToken 003F                __size_of_TFT_FillScreen 0046  
                  EUSART_TX_String@len 000B                    EUSART_TX_String@str 0009  
                      ___llmod@divisor 0016                        ___llmod@counter 001A  
              __size_of_TFT_DrawString 0090                       ?_EUSART_RX_Flush 0001  
           __size_of_A6_NetworkGetRSSI 00C2                      _TFT_Init_Sequence 5CF1  
                             ??___lmul 000D                               ??___wmul 0009  
                A6_Command@responseLen 001E                            __pdataBANK0 00CE  
                     __CFG_LPT1OSC$OFF 000000                               ??_memset 000B  
                             ?_A6_Init 0001                      ?_TFT_DrawFillRect 001C  
       EUSART_RX_AvailableData@timeout 0005              ??_A6_Process_Random_Comms 004E  
                             ??_strchr 0009                               ??_strcmp 0009  
                             ??_strlen 0007                       ??_A6_BaudRateGet 0023  
                             ??_strtok 0016                               ??_strspn 000F  
                             ??_strstr 0014                       ??_A6_BaudRateSet 0056  
                A6_BaudRateSet@request 0094                     ??_TFT_DrawFillRect 0026  
                ??_EUSART_RX_Interrupt 0001         ??_Ecg_Background_Leads_Failure 004A  
              __size_of_TFT_FullScreen 0026                            __pbssCOMRAM 0056  
           A6_Process_Random_Comms@cnt 0080                          __pcstackBANK0 0060  
                        __pcstackBANK1 0100                           loop@response 0100  
                         _isdigit$1933 0006           _A6_LAST_COMMAND_MILLISECONDS 00C6  
                          sprintf@flag 006A                            sprintf@prec 0060  
                  __end_of_EUSART_Init 289C       __size_of_EUSART_RX_AvailableData 0088  
                  _A6_NetworkGetStatus 1684              __end_of_TFT_Init_Sequence 5DBD  
            A6_BaudRateAutoDetect@zzzz 0070                              __pintcode 0008  
                        __pmediumconst 57F0                           loop@zzzz_162 0120  
                         loop@zzzz_165 0140                           loop@zzzz_169 0160  
                             ?___awdiv 0005                               ?___lldiv 0005  
                             ?___llmod 0012                       ??_Ecg_CheckLeads 0007  
                   _EUSART_BaudRateSet 20EC                  TFT_WriteRegister@data 0007  
               A6_ReadLine@responseLen 0013                   ?_A6_NetworkGetStatus 0001  
                          ??_TFT_Flood 0013                               ?_isdigit 0001  
                 EUSART_RX_Interrupt@c 0002                            ??_TFT_Reset 0005  
                  ?_EUSART_BaudRateSet 0012                               ?_sleepMS 0005  
                 __end_of_A6_BAUDRATES 5DF1                      _TFT_WriteRegister 28E2  
                     _EUSART_TX_String 2926                               ?_sprintf 004A  
                 __end_of_TFT_DrawChar 0D98                               ?_strcspn 000B  
                             ?_strncmp 0009                   __end_of_TFT_DrawLine 0F80  
                  A6_ReadLine@response 0011                     ?_TFT_WriteRegister 0005  
                       ___wmul@product 0009                      TFT_DrawChar@color 002F  
                  ??_TFT_WriteRegister 0009                   ??_EUSART_BaudRateSet 0016  
                             i2u366_40 266A                               i2u366_41 2666  
                             i2u367_40 2680                               i2u367_41 2678  
                             i2u376_40 24CC                               i2u376_41 24C8  
                             i2u369_40 26A6                               i2u368_48 2682  
                             i2u377_40 24DA                               i2u369_41 26A2  
                             i2u377_41 24D6                               i2u378_40 2504  
                             i2u378_41 2500                               i2u379_40 2512  
                             i2u379_41 250E                               _GO_nDONE 007E11  
                             _UCFGbits 000F6F                       __CFG_WDTPS$32768 000000  
                             _UCONbits 000F6D                              _printLine 1F56  
                __end_of_Ecg_Interrupt 2B74                               _TFT_Font 57F1  
                             _TFT_Init 1762                       __size_of_A6_Init 001A  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0                      ___wmul@multiplier 0005  
                             _Ecg_Init 2AB8                  ??_A6_NetworkGetStatus 001F  
                           TFT_Flood@i 0019                               _Ecg_Xold 00D0  
                             _Ecg_Yold 00CE              __end_of_TFT_WriteRegister 2926  
                   TFT_DrawPixel@color 0011          __size_of_EUSART_BufferGetChar 004C  
                           _A6_IsAlive 271C                        EUSART_TX_Char@c 0005  
                          _EUSART_Init 2854                      TFT_DrawFillRect@h 0022  
                           _A6_Command 2066                      TFT_DrawFillRect@w 0020  
                    TFT_DrawFillRect@x 001C                      TFT_DrawFillRect@y 001E  
                    ___lmul@multiplier 0005                         _TFT_FillScreen 289C  
                            copy_data0 245A                      _TFT_SetAddrWindow 226C  
                       _TFT_DrawString 1DB2                 __size_of_TFT_DrawPixel 003E  
                   ?_TFT_SetAddrWindow 000D                               __Hrparam 0000  
               A6_BaudRateGet@baudRate 0043                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0022                             _ECG_BUFFER 00BD  
                  TFT_DrawString@color 0045                             ?_printLine 004A  
                  ??_TFT_SetAddrWindow 0015                      TFT_DrawLine@t_792 0022  
                    TFT_DrawLine@t_793 0024                      TFT_DrawLine@t_794 0026  
                     __size_of___awdiv 00C4                       __size_of___lldiv 00A4  
                     __size_of___llmod 0088                      TFT_DrawLine@color 001B  
                    TFT_DrawLine@steep 002E                      TFT_DrawLine@ystep 002A  
                         ?_A6_ReadLine 0011                         _TFT_FullScreen 2B0E  
                   A6_Command@response 001C                             sprintf@len 0064  
                           sprintf@val 0066                       __size_of_isdigit 0032  
               __end_of_TFT_FillScreen 28E2                               __ptext10 258C  
                             __ptext11 25F2                               __ptext20 2AB8  
                             __ptext12 1C50                               __ptext21 276C  
                             __ptext13 1840                               __ptext30 191A  
                             __ptext22 22E6                               __ptext14 2170  
                             __ptext31 0678                               __ptext23 0D98  
                             __ptext15 1102                               __ptext40 2AE8  
                             __ptext32 2A86                               __ptext24 2A52  
                             __ptext16 2522                               __ptext41 2B0E  
                             __ptext33 1ECE                               __ptext25 1ACA  
                             __ptext17 23D4                               __ptext50 27BA  
                             __ptext42 226C                               __ptext34 29E0  
                             __ptext26 29A4                               __ptext18 1762  
                             __ptext51 2926                               __ptext43 0F80  
                             __ptext35 1F56                               __ptext27 289C  
                             __ptext19 2B74                               __ptext60 2658  
                             __ptext52 2BAC                               __ptext44 28E2  
                             __ptext36 1DB2                               __ptext28 2854  
                             __ptext53 2BCA                               __ptext45 20EC  
                             __ptext37 0BA4                               __ptext29 2B92  
                             __ptext54 19F4                               __ptext46 1D0E  
                             __ptext38 2966                               __ptext55 2A1A  
                             __ptext47 271C                               __ptext39 235E  
                             __ptext56 2808                               __ptext48 26BC  
                             __ptext57 1FDE                               __ptext49 2066  
                             __ptext59 2B54                       __size_of_sleepMS 003A  
       __size_of_A6_BaudRateAutoDetect 00DA          __end_of_A6_BaudRateAutoDetect 19F4  
                 TFT_WriteRegister@reg 0005              __end_of_TFT_SetAddrWindow 22E6  
               A6_BaudRateGet@response 0023                       __size_of_sprintf 052C  
                             _consoleX 00CC                       __size_of_strcspn 0066  
                     __size_of_strncmp 00DA                 __end_of_TFT_DrawString 1E42  
                             _loop$152 01A0                               _loop$157 01A2  
                             _loop$176 01A4                               _loop$177 01A6  
                            sleepMS@ms 0005                          __size_of_atoi 0118  
                        __size_of_atol 013A                          __size_of_main 0020  
                        __size_of_init 0072                          __size_of_loop 0666  
              _EUSART_RX_AvailableData 1FDE             A6_NetworkGetRSSILevel@RSSI 0041  
                           strncmp@len 000D                         _ECG_ICON_HEART 5DF1  
                             int$flags 005A                               atoi@sign 000F  
                             atol@sign 0019                    TFT_FillScreen@color 001C  
               __end_of_TFT_FullScreen 2B34                  __CFG_CPUDIV$OSC1_PLL2 000000  
                        _TFT_DrawPixel 2966                            _OSCTUNEbits 000F9B  
                __size_of_TFT_DrawChar 01F4                  __size_of_TFT_DrawLine 01E8  
           __size_of_TFT_WriteRegister 0044                        ?_TFT_FillScreen 001C  
             ?_Ecg_Background_Leads_Ok 0001                               isdigit@c 0007  
                             memset@p1 0005                            ?_A6_IsAlive 0001  
                   TFT_DrawString@size 0049                            ?_A6_Command 0018  
                             intlevel2 0000                              sprintf@ap 006B  
                            sprintf@cp 0062                              sprintf@sp 004A  
            __size_of_TFT_DrawFillRect 0076                        ?_TFT_DrawString 003F  
                            strchr@chr 0007                               loop@zzzz 0180  
                            strchr@ptr 0005                       ___lldiv@dividend 0005  
               __end_of_ECG_ICON_HEART 5E2F                              strcspn@s1 000B  
                            strcspn@s2 000D                               sleepMS@t 0009  
                            strncmp@s1 0009                              strncmp@s2 000B  
             ??_A6_NetworkGetRSSILevel 0041                             _OSCCONbits 000FD3  
                         _A6_BAUDRATES 5DE5               __end_of_EUSART_TX_String 2966  
                          ??_printLine 004E                           _TFT_DrawChar 0BA4  
                         _TFT_DrawLine 0D98            __end_of_EUSART_RX_Interrupt 26BC  
             __size_of_EUSART_RX_Flush 0006                        ?_TFT_FullScreen 0001  
                    TFT_DrawString@str 0043                         ?_TFT_DrawPixel 000D  
                             sprintf@c 006F                               sprintf@f 004C  
                             strcmp@s1 0005                               strcmp@s2 0007  
                     ___lldiv@quotient 000D                               strlen@cp 0007  
                             strcspn@i 0010            A6_BaudRateGet@baudRateToken 0047  
                             strtok@s1 0012                               strtok@s2 0014  
                             strspn@s1 000B                               strspn@s2 000D  
                             strtok@sp 00CA                               strstr@s1 0010  
                             strstr@s2 0012                __size_of_EUSART_TX_Char 0018  
           __size_of_TFT_SetAddrWindow 007A              ??_EUSART_RX_AvailableData 0007  
                   __CFG_FOSC$HSPLL_HS 000000   __end_of_Ecg_Background_Leads_Failure 29E0  
__size_of_Ecg_Background_Leads_Failure 003C           _Ecg_Background_Leads_Failure 29A4  
