

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 26 20:20:04 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    77                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83  0000                     
    84                           ; Version 2.10
    85                           ; Generated 31/07/2019 GMT
    86                           ; 
    87                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F2455 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119                           	psect	idataCOMRAM
   120  002BAA                     __pidataCOMRAM:
   121                           	opt callstack 0
   122                           
   123                           ;initializer for _Ecg_Y
   124  002BAA  018F               	dw	399
   125                           
   126                           	psect	idataBANK0
   127  002B9E                     __pidataBANK0:
   128                           	opt callstack 0
   129                           
   130                           ;initializer for _Ecg_Yold
   131  002B9E  018F               	dw	399
   132                           
   133                           ;initializer for _Ecg_Xold
   134  002BA0  00EF               	dw	239
   135                           
   136                           ;initializer for _Ecg_X
   137  002BA2  00EF               	dw	239
   138                           
   139                           	psect	mediumconst
   140  0057F4                     __pmediumconst:
   141                           	opt callstack 0
   142  0057F4  00                 	db	0
   143  0057F5                     _TFT_Font:
   144                           	opt callstack 0
   145  0057F5  00                 	db	0
   146  0057F6  00                 	db	0
   147  0057F7  00                 	db	0
   148  0057F8  00                 	db	0
   149  0057F9  00                 	db	0
   150  0057FA  3E                 	db	62
   151  0057FB  5B                 	db	91
   152  0057FC  4F                 	db	79
   153  0057FD  5B                 	db	91
   154  0057FE  3E                 	db	62
   155  0057FF  3E                 	db	62
   156  005800  6B                 	db	107
   157  005801  4F                 	db	79
   158  005802  6B                 	db	107
   159  005803  3E                 	db	62
   160  005804  1C                 	db	28
   161  005805  3E                 	db	62
   162  005806  7C                 	db	124
   163  005807  3E                 	db	62
   164  005808  1C                 	db	28
   165  005809  18                 	db	24
   166  00580A  3C                 	db	60
   167  00580B  7E                 	db	126
   168  00580C  3C                 	db	60
   169  00580D  18                 	db	24
   170  00580E  1C                 	db	28
   171  00580F  57                 	db	87
   172  005810  7D                 	db	125
   173  005811  57                 	db	87
   174  005812  1C                 	db	28
   175  005813  1C                 	db	28
   176  005814  5E                 	db	94
   177  005815  7F                 	db	127
   178  005816  5E                 	db	94
   179  005817  1C                 	db	28
   180  005818  00                 	db	0
   181  005819  18                 	db	24
   182  00581A  3C                 	db	60
   183  00581B  18                 	db	24
   184  00581C  00                 	db	0
   185  00581D  FF                 	db	255
   186  00581E  E7                 	db	231
   187  00581F  C3                 	db	195
   188  005820  E7                 	db	231
   189  005821  FF                 	db	255
   190  005822  00                 	db	0
   191  005823  18                 	db	24
   192  005824  24                 	db	36
   193  005825  18                 	db	24
   194  005826  00                 	db	0
   195  005827  FF                 	db	255
   196  005828  E7                 	db	231
   197  005829  DB                 	db	219
   198  00582A  E7                 	db	231
   199  00582B  FF                 	db	255
   200  00582C  30                 	db	48
   201  00582D  48                 	db	72
   202  00582E  3A                 	db	58
   203  00582F  06                 	db	6
   204  005830  0E                 	db	14
   205  005831  26                 	db	38
   206  005832  29                 	db	41
   207  005833  79                 	db	121
   208  005834  29                 	db	41
   209  005835  26                 	db	38
   210  005836  40                 	db	64
   211  005837  7F                 	db	127
   212  005838  05                 	db	5
   213  005839  05                 	db	5
   214  00583A  07                 	db	7
   215  00583B  40                 	db	64
   216  00583C  7F                 	db	127
   217  00583D  05                 	db	5
   218  00583E  25                 	db	37
   219  00583F  3F                 	db	63
   220  005840  5A                 	db	90
   221  005841  3C                 	db	60
   222  005842  E7                 	db	231
   223  005843  3C                 	db	60
   224  005844  5A                 	db	90
   225  005845  7F                 	db	127
   226  005846  3E                 	db	62
   227  005847  1C                 	db	28
   228  005848  1C                 	db	28
   229  005849  08                 	db	8
   230  00584A  08                 	db	8
   231  00584B  1C                 	db	28
   232  00584C  1C                 	db	28
   233  00584D  3E                 	db	62
   234  00584E  7F                 	db	127
   235  00584F  14                 	db	20
   236  005850  22                 	db	34
   237  005851  7F                 	db	127
   238  005852  22                 	db	34
   239  005853  14                 	db	20
   240  005854  5F                 	db	95
   241  005855  5F                 	db	95
   242  005856  00                 	db	0
   243  005857  5F                 	db	95
   244  005858  5F                 	db	95
   245  005859  06                 	db	6
   246  00585A  09                 	db	9
   247  00585B  7F                 	db	127
   248  00585C  01                 	db	1
   249  00585D  7F                 	db	127
   250  00585E  00                 	db	0
   251  00585F  66                 	db	102
   252  005860  89                 	db	137
   253  005861  95                 	db	149
   254  005862  6A                 	db	106
   255  005863  60                 	db	96
   256  005864  60                 	db	96
   257  005865  60                 	db	96
   258  005866  60                 	db	96
   259  005867  60                 	db	96
   260  005868  94                 	db	148
   261  005869  A2                 	db	162
   262  00586A  FF                 	db	255
   263  00586B  A2                 	db	162
   264  00586C  94                 	db	148
   265  00586D  08                 	db	8
   266  00586E  04                 	db	4
   267  00586F  7E                 	db	126
   268  005870  04                 	db	4
   269  005871  08                 	db	8
   270  005872  10                 	db	16
   271  005873  20                 	db	32
   272  005874  7E                 	db	126
   273  005875  20                 	db	32
   274  005876  10                 	db	16
   275  005877  08                 	db	8
   276  005878  08                 	db	8
   277  005879  2A                 	db	42
   278  00587A  1C                 	db	28
   279  00587B  08                 	db	8
   280  00587C  08                 	db	8
   281  00587D  1C                 	db	28
   282  00587E  2A                 	db	42
   283  00587F  08                 	db	8
   284  005880  08                 	db	8
   285  005881  1E                 	db	30
   286  005882  10                 	db	16
   287  005883  10                 	db	16
   288  005884  10                 	db	16
   289  005885  10                 	db	16
   290  005886  0C                 	db	12
   291  005887  1E                 	db	30
   292  005888  0C                 	db	12
   293  005889  1E                 	db	30
   294  00588A  0C                 	db	12
   295  00588B  30                 	db	48
   296  00588C  38                 	db	56
   297  00588D  3E                 	db	62
   298  00588E  38                 	db	56
   299  00588F  30                 	db	48
   300  005890  06                 	db	6
   301  005891  0E                 	db	14
   302  005892  3E                 	db	62
   303  005893  0E                 	db	14
   304  005894  06                 	db	6
   305  005895  00                 	db	0
   306  005896  00                 	db	0
   307  005897  00                 	db	0
   308  005898  00                 	db	0
   309  005899  00                 	db	0
   310  00589A  00                 	db	0
   311  00589B  00                 	db	0
   312  00589C  5F                 	db	95
   313  00589D  00                 	db	0
   314  00589E  00                 	db	0
   315  00589F  00                 	db	0
   316  0058A0  07                 	db	7
   317  0058A1  00                 	db	0
   318  0058A2  07                 	db	7
   319  0058A3  00                 	db	0
   320  0058A4  14                 	db	20
   321  0058A5  7F                 	db	127
   322  0058A6  14                 	db	20
   323  0058A7  7F                 	db	127
   324  0058A8  14                 	db	20
   325  0058A9  24                 	db	36
   326  0058AA  2A                 	db	42
   327  0058AB  7F                 	db	127
   328  0058AC  2A                 	db	42
   329  0058AD  12                 	db	18
   330  0058AE  23                 	db	35
   331  0058AF  13                 	db	19
   332  0058B0  08                 	db	8
   333  0058B1  64                 	db	100
   334  0058B2  62                 	db	98
   335  0058B3  36                 	db	54
   336  0058B4  49                 	db	73
   337  0058B5  56                 	db	86
   338  0058B6  20                 	db	32
   339  0058B7  50                 	db	80
   340  0058B8  00                 	db	0
   341  0058B9  08                 	db	8
   342  0058BA  07                 	db	7
   343  0058BB  03                 	db	3
   344  0058BC  00                 	db	0
   345  0058BD  00                 	db	0
   346  0058BE  1C                 	db	28
   347  0058BF  22                 	db	34
   348  0058C0  41                 	db	65
   349  0058C1  00                 	db	0
   350  0058C2  00                 	db	0
   351  0058C3  41                 	db	65
   352  0058C4  22                 	db	34
   353  0058C5  1C                 	db	28
   354  0058C6  00                 	db	0
   355  0058C7  2A                 	db	42
   356  0058C8  1C                 	db	28
   357  0058C9  7F                 	db	127
   358  0058CA  1C                 	db	28
   359  0058CB  2A                 	db	42
   360  0058CC  08                 	db	8
   361  0058CD  08                 	db	8
   362  0058CE  3E                 	db	62
   363  0058CF  08                 	db	8
   364  0058D0  08                 	db	8
   365  0058D1  00                 	db	0
   366  0058D2  80                 	db	128
   367  0058D3  70                 	db	112
   368  0058D4  30                 	db	48
   369  0058D5  00                 	db	0
   370  0058D6  08                 	db	8
   371  0058D7  08                 	db	8
   372  0058D8  08                 	db	8
   373  0058D9  08                 	db	8
   374  0058DA  08                 	db	8
   375  0058DB  00                 	db	0
   376  0058DC  00                 	db	0
   377  0058DD  60                 	db	96
   378  0058DE  60                 	db	96
   379  0058DF  00                 	db	0
   380  0058E0  20                 	db	32
   381  0058E1  10                 	db	16
   382  0058E2  08                 	db	8
   383  0058E3  04                 	db	4
   384  0058E4  02                 	db	2
   385  0058E5  3E                 	db	62
   386  0058E6  51                 	db	81
   387  0058E7  49                 	db	73
   388  0058E8  45                 	db	69
   389  0058E9  3E                 	db	62
   390  0058EA  00                 	db	0
   391  0058EB  42                 	db	66
   392  0058EC  7F                 	db	127
   393  0058ED  40                 	db	64
   394  0058EE  00                 	db	0
   395  0058EF  72                 	db	114
   396  0058F0  49                 	db	73
   397  0058F1  49                 	db	73
   398  0058F2  49                 	db	73
   399  0058F3  46                 	db	70
   400  0058F4  21                 	db	33
   401  0058F5  41                 	db	65
   402  0058F6  49                 	db	73
   403  0058F7  4D                 	db	77
   404  0058F8  33                 	db	51
   405  0058F9  18                 	db	24
   406  0058FA  14                 	db	20
   407  0058FB  12                 	db	18
   408  0058FC  7F                 	db	127
   409  0058FD  10                 	db	16
   410  0058FE  27                 	db	39
   411  0058FF  45                 	db	69
   412  005900  45                 	db	69
   413  005901  45                 	db	69
   414  005902  39                 	db	57
   415  005903  3C                 	db	60
   416  005904  4A                 	db	74
   417  005905  49                 	db	73
   418  005906  49                 	db	73
   419  005907  31                 	db	49
   420  005908  41                 	db	65
   421  005909  21                 	db	33
   422  00590A  11                 	db	17
   423  00590B  09                 	db	9
   424  00590C  07                 	db	7
   425  00590D  36                 	db	54
   426  00590E  49                 	db	73
   427  00590F  49                 	db	73
   428  005910  49                 	db	73
   429  005911  36                 	db	54
   430  005912  46                 	db	70
   431  005913  49                 	db	73
   432  005914  49                 	db	73
   433  005915  29                 	db	41
   434  005916  1E                 	db	30
   435  005917  00                 	db	0
   436  005918  00                 	db	0
   437  005919  14                 	db	20
   438  00591A  00                 	db	0
   439  00591B  00                 	db	0
   440  00591C  00                 	db	0
   441  00591D  40                 	db	64
   442  00591E  34                 	db	52
   443  00591F  00                 	db	0
   444  005920  00                 	db	0
   445  005921  00                 	db	0
   446  005922  08                 	db	8
   447  005923  14                 	db	20
   448  005924  22                 	db	34
   449  005925  41                 	db	65
   450  005926  14                 	db	20
   451  005927  14                 	db	20
   452  005928  14                 	db	20
   453  005929  14                 	db	20
   454  00592A  14                 	db	20
   455  00592B  00                 	db	0
   456  00592C  41                 	db	65
   457  00592D  22                 	db	34
   458  00592E  14                 	db	20
   459  00592F  08                 	db	8
   460  005930  02                 	db	2
   461  005931  01                 	db	1
   462  005932  59                 	db	89
   463  005933  09                 	db	9
   464  005934  06                 	db	6
   465  005935  3E                 	db	62
   466  005936  41                 	db	65
   467  005937  5D                 	db	93
   468  005938  59                 	db	89
   469  005939  4E                 	db	78
   470  00593A  7C                 	db	124
   471  00593B  12                 	db	18
   472  00593C  11                 	db	17
   473  00593D  12                 	db	18
   474  00593E  7C                 	db	124
   475  00593F  7F                 	db	127
   476  005940  49                 	db	73
   477  005941  49                 	db	73
   478  005942  49                 	db	73
   479  005943  36                 	db	54
   480  005944  3E                 	db	62
   481  005945  41                 	db	65
   482  005946  41                 	db	65
   483  005947  41                 	db	65
   484  005948  22                 	db	34
   485  005949  7F                 	db	127
   486  00594A  41                 	db	65
   487  00594B  41                 	db	65
   488  00594C  41                 	db	65
   489  00594D  3E                 	db	62
   490  00594E  7F                 	db	127
   491  00594F  49                 	db	73
   492  005950  49                 	db	73
   493  005951  49                 	db	73
   494  005952  41                 	db	65
   495  005953  7F                 	db	127
   496  005954  09                 	db	9
   497  005955  09                 	db	9
   498  005956  09                 	db	9
   499  005957  01                 	db	1
   500  005958  3E                 	db	62
   501  005959  41                 	db	65
   502  00595A  41                 	db	65
   503  00595B  51                 	db	81
   504  00595C  73                 	db	115
   505  00595D  7F                 	db	127
   506  00595E  08                 	db	8
   507  00595F  08                 	db	8
   508  005960  08                 	db	8
   509  005961  7F                 	db	127
   510  005962  00                 	db	0
   511  005963  41                 	db	65
   512  005964  7F                 	db	127
   513  005965  41                 	db	65
   514  005966  00                 	db	0
   515  005967  20                 	db	32
   516  005968  40                 	db	64
   517  005969  41                 	db	65
   518  00596A  3F                 	db	63
   519  00596B  01                 	db	1
   520  00596C  7F                 	db	127
   521  00596D  08                 	db	8
   522  00596E  14                 	db	20
   523  00596F  22                 	db	34
   524  005970  41                 	db	65
   525  005971  7F                 	db	127
   526  005972  40                 	db	64
   527  005973  40                 	db	64
   528  005974  40                 	db	64
   529  005975  40                 	db	64
   530  005976  7F                 	db	127
   531  005977  02                 	db	2
   532  005978  1C                 	db	28
   533  005979  02                 	db	2
   534  00597A  7F                 	db	127
   535  00597B  7F                 	db	127
   536  00597C  04                 	db	4
   537  00597D  08                 	db	8
   538  00597E  10                 	db	16
   539  00597F  7F                 	db	127
   540  005980  3E                 	db	62
   541  005981  41                 	db	65
   542  005982  41                 	db	65
   543  005983  41                 	db	65
   544  005984  3E                 	db	62
   545  005985  7F                 	db	127
   546  005986  09                 	db	9
   547  005987  09                 	db	9
   548  005988  09                 	db	9
   549  005989  06                 	db	6
   550  00598A  3E                 	db	62
   551  00598B  41                 	db	65
   552  00598C  51                 	db	81
   553  00598D  21                 	db	33
   554  00598E  5E                 	db	94
   555  00598F  7F                 	db	127
   556  005990  09                 	db	9
   557  005991  19                 	db	25
   558  005992  29                 	db	41
   559  005993  46                 	db	70
   560  005994  26                 	db	38
   561  005995  49                 	db	73
   562  005996  49                 	db	73
   563  005997  49                 	db	73
   564  005998  32                 	db	50
   565  005999  03                 	db	3
   566  00599A  01                 	db	1
   567  00599B  7F                 	db	127
   568  00599C  01                 	db	1
   569  00599D  03                 	db	3
   570  00599E  3F                 	db	63
   571  00599F  40                 	db	64
   572  0059A0  40                 	db	64
   573  0059A1  40                 	db	64
   574  0059A2  3F                 	db	63
   575  0059A3  1F                 	db	31
   576  0059A4  20                 	db	32
   577  0059A5  40                 	db	64
   578  0059A6  20                 	db	32
   579  0059A7  1F                 	db	31
   580  0059A8  3F                 	db	63
   581  0059A9  40                 	db	64
   582  0059AA  38                 	db	56
   583  0059AB  40                 	db	64
   584  0059AC  3F                 	db	63
   585  0059AD  63                 	db	99
   586  0059AE  14                 	db	20
   587  0059AF  08                 	db	8
   588  0059B0  14                 	db	20
   589  0059B1  63                 	db	99
   590  0059B2  03                 	db	3
   591  0059B3  04                 	db	4
   592  0059B4  78                 	db	120
   593  0059B5  04                 	db	4
   594  0059B6  03                 	db	3
   595  0059B7  61                 	db	97
   596  0059B8  59                 	db	89
   597  0059B9  49                 	db	73
   598  0059BA  4D                 	db	77
   599  0059BB  43                 	db	67
   600  0059BC  00                 	db	0
   601  0059BD  7F                 	db	127
   602  0059BE  41                 	db	65
   603  0059BF  41                 	db	65
   604  0059C0  41                 	db	65
   605  0059C1  02                 	db	2
   606  0059C2  04                 	db	4
   607  0059C3  08                 	db	8
   608  0059C4  10                 	db	16
   609  0059C5  20                 	db	32
   610  0059C6  00                 	db	0
   611  0059C7  41                 	db	65
   612  0059C8  41                 	db	65
   613  0059C9  41                 	db	65
   614  0059CA  7F                 	db	127
   615  0059CB  04                 	db	4
   616  0059CC  02                 	db	2
   617  0059CD  01                 	db	1
   618  0059CE  02                 	db	2
   619  0059CF  04                 	db	4
   620  0059D0  40                 	db	64
   621  0059D1  40                 	db	64
   622  0059D2  40                 	db	64
   623  0059D3  40                 	db	64
   624  0059D4  40                 	db	64
   625  0059D5  00                 	db	0
   626  0059D6  03                 	db	3
   627  0059D7  07                 	db	7
   628  0059D8  08                 	db	8
   629  0059D9  00                 	db	0
   630  0059DA  20                 	db	32
   631  0059DB  54                 	db	84
   632  0059DC  54                 	db	84
   633  0059DD  78                 	db	120
   634  0059DE  40                 	db	64
   635  0059DF  7F                 	db	127
   636  0059E0  28                 	db	40
   637  0059E1  44                 	db	68
   638  0059E2  44                 	db	68
   639  0059E3  38                 	db	56
   640  0059E4  38                 	db	56
   641  0059E5  44                 	db	68
   642  0059E6  44                 	db	68
   643  0059E7  44                 	db	68
   644  0059E8  28                 	db	40
   645  0059E9  38                 	db	56
   646  0059EA  44                 	db	68
   647  0059EB  44                 	db	68
   648  0059EC  28                 	db	40
   649  0059ED  7F                 	db	127
   650  0059EE  38                 	db	56
   651  0059EF  54                 	db	84
   652  0059F0  54                 	db	84
   653  0059F1  54                 	db	84
   654  0059F2  18                 	db	24
   655  0059F3  00                 	db	0
   656  0059F4  08                 	db	8
   657  0059F5  7E                 	db	126
   658  0059F6  09                 	db	9
   659  0059F7  02                 	db	2
   660  0059F8  18                 	db	24
   661  0059F9  A4                 	db	164
   662  0059FA  A4                 	db	164
   663  0059FB  9C                 	db	156
   664  0059FC  78                 	db	120
   665  0059FD  7F                 	db	127
   666  0059FE  08                 	db	8
   667  0059FF  04                 	db	4
   668  005A00  04                 	db	4
   669  005A01  78                 	db	120
   670  005A02  00                 	db	0
   671  005A03  44                 	db	68
   672  005A04  7D                 	db	125
   673  005A05  40                 	db	64
   674  005A06  00                 	db	0
   675  005A07  20                 	db	32
   676  005A08  40                 	db	64
   677  005A09  40                 	db	64
   678  005A0A  3D                 	db	61
   679  005A0B  00                 	db	0
   680  005A0C  7F                 	db	127
   681  005A0D  10                 	db	16
   682  005A0E  28                 	db	40
   683  005A0F  44                 	db	68
   684  005A10  00                 	db	0
   685  005A11  00                 	db	0
   686  005A12  41                 	db	65
   687  005A13  7F                 	db	127
   688  005A14  40                 	db	64
   689  005A15  00                 	db	0
   690  005A16  7C                 	db	124
   691  005A17  04                 	db	4
   692  005A18  78                 	db	120
   693  005A19  04                 	db	4
   694  005A1A  78                 	db	120
   695  005A1B  7C                 	db	124
   696  005A1C  08                 	db	8
   697  005A1D  04                 	db	4
   698  005A1E  04                 	db	4
   699  005A1F  78                 	db	120
   700  005A20  38                 	db	56
   701  005A21  44                 	db	68
   702  005A22  44                 	db	68
   703  005A23  44                 	db	68
   704  005A24  38                 	db	56
   705  005A25  FC                 	db	252
   706  005A26  18                 	db	24
   707  005A27  24                 	db	36
   708  005A28  24                 	db	36
   709  005A29  18                 	db	24
   710  005A2A  18                 	db	24
   711  005A2B  24                 	db	36
   712  005A2C  24                 	db	36
   713  005A2D  18                 	db	24
   714  005A2E  FC                 	db	252
   715  005A2F  7C                 	db	124
   716  005A30  08                 	db	8
   717  005A31  04                 	db	4
   718  005A32  04                 	db	4
   719  005A33  08                 	db	8
   720  005A34  48                 	db	72
   721  005A35  54                 	db	84
   722  005A36  54                 	db	84
   723  005A37  54                 	db	84
   724  005A38  24                 	db	36
   725  005A39  04                 	db	4
   726  005A3A  04                 	db	4
   727  005A3B  3F                 	db	63
   728  005A3C  44                 	db	68
   729  005A3D  24                 	db	36
   730  005A3E  3C                 	db	60
   731  005A3F  40                 	db	64
   732  005A40  40                 	db	64
   733  005A41  20                 	db	32
   734  005A42  7C                 	db	124
   735  005A43  1C                 	db	28
   736  005A44  20                 	db	32
   737  005A45  40                 	db	64
   738  005A46  20                 	db	32
   739  005A47  1C                 	db	28
   740  005A48  3C                 	db	60
   741  005A49  40                 	db	64
   742  005A4A  30                 	db	48
   743  005A4B  40                 	db	64
   744  005A4C  3C                 	db	60
   745  005A4D  44                 	db	68
   746  005A4E  28                 	db	40
   747  005A4F  10                 	db	16
   748  005A50  28                 	db	40
   749  005A51  44                 	db	68
   750  005A52  4C                 	db	76
   751  005A53  90                 	db	144
   752  005A54  90                 	db	144
   753  005A55  90                 	db	144
   754  005A56  7C                 	db	124
   755  005A57  44                 	db	68
   756  005A58  64                 	db	100
   757  005A59  54                 	db	84
   758  005A5A  4C                 	db	76
   759  005A5B  44                 	db	68
   760  005A5C  00                 	db	0
   761  005A5D  08                 	db	8
   762  005A5E  36                 	db	54
   763  005A5F  41                 	db	65
   764  005A60  00                 	db	0
   765  005A61  00                 	db	0
   766  005A62  00                 	db	0
   767  005A63  77                 	db	119
   768  005A64  00                 	db	0
   769  005A65  00                 	db	0
   770  005A66  00                 	db	0
   771  005A67  41                 	db	65
   772  005A68  36                 	db	54
   773  005A69  08                 	db	8
   774  005A6A  00                 	db	0
   775  005A6B  02                 	db	2
   776  005A6C  01                 	db	1
   777  005A6D  02                 	db	2
   778  005A6E  04                 	db	4
   779  005A6F  02                 	db	2
   780  005A70  3C                 	db	60
   781  005A71  26                 	db	38
   782  005A72  23                 	db	35
   783  005A73  26                 	db	38
   784  005A74  3C                 	db	60
   785  005A75  1E                 	db	30
   786  005A76  A1                 	db	161
   787  005A77  A1                 	db	161
   788  005A78  61                 	db	97
   789  005A79  12                 	db	18
   790  005A7A  3A                 	db	58
   791  005A7B  40                 	db	64
   792  005A7C  40                 	db	64
   793  005A7D  20                 	db	32
   794  005A7E  7A                 	db	122
   795  005A7F  38                 	db	56
   796  005A80  54                 	db	84
   797  005A81  54                 	db	84
   798  005A82  55                 	db	85
   799  005A83  59                 	db	89
   800  005A84  21                 	db	33
   801  005A85  55                 	db	85
   802  005A86  55                 	db	85
   803  005A87  79                 	db	121
   804  005A88  41                 	db	65
   805  005A89  22                 	db	34
   806  005A8A  54                 	db	84
   807  005A8B  54                 	db	84
   808  005A8C  78                 	db	120
   809  005A8D  42                 	db	66
   810  005A8E  21                 	db	33
   811  005A8F  55                 	db	85
   812  005A90  54                 	db	84
   813  005A91  78                 	db	120
   814  005A92  40                 	db	64
   815  005A93  20                 	db	32
   816  005A94  54                 	db	84
   817  005A95  55                 	db	85
   818  005A96  79                 	db	121
   819  005A97  40                 	db	64
   820  005A98  0C                 	db	12
   821  005A99  1E                 	db	30
   822  005A9A  52                 	db	82
   823  005A9B  72                 	db	114
   824  005A9C  12                 	db	18
   825  005A9D  39                 	db	57
   826  005A9E  55                 	db	85
   827  005A9F  55                 	db	85
   828  005AA0  55                 	db	85
   829  005AA1  59                 	db	89
   830  005AA2  39                 	db	57
   831  005AA3  54                 	db	84
   832  005AA4  54                 	db	84
   833  005AA5  54                 	db	84
   834  005AA6  59                 	db	89
   835  005AA7  39                 	db	57
   836  005AA8  55                 	db	85
   837  005AA9  54                 	db	84
   838  005AAA  54                 	db	84
   839  005AAB  58                 	db	88
   840  005AAC  00                 	db	0
   841  005AAD  00                 	db	0
   842  005AAE  45                 	db	69
   843  005AAF  7C                 	db	124
   844  005AB0  41                 	db	65
   845  005AB1  00                 	db	0
   846  005AB2  02                 	db	2
   847  005AB3  45                 	db	69
   848  005AB4  7D                 	db	125
   849  005AB5  42                 	db	66
   850  005AB6  00                 	db	0
   851  005AB7  01                 	db	1
   852  005AB8  45                 	db	69
   853  005AB9  7C                 	db	124
   854  005ABA  40                 	db	64
   855  005ABB  7D                 	db	125
   856  005ABC  12                 	db	18
   857  005ABD  11                 	db	17
   858  005ABE  12                 	db	18
   859  005ABF  7D                 	db	125
   860  005AC0  F0                 	db	240
   861  005AC1  28                 	db	40
   862  005AC2  25                 	db	37
   863  005AC3  28                 	db	40
   864  005AC4  F0                 	db	240
   865  005AC5  7C                 	db	124
   866  005AC6  54                 	db	84
   867  005AC7  55                 	db	85
   868  005AC8  45                 	db	69
   869  005AC9  00                 	db	0
   870  005ACA  20                 	db	32
   871  005ACB  54                 	db	84
   872  005ACC  54                 	db	84
   873  005ACD  7C                 	db	124
   874  005ACE  54                 	db	84
   875  005ACF  7C                 	db	124
   876  005AD0  0A                 	db	10
   877  005AD1  09                 	db	9
   878  005AD2  7F                 	db	127
   879  005AD3  49                 	db	73
   880  005AD4  32                 	db	50
   881  005AD5  49                 	db	73
   882  005AD6  49                 	db	73
   883  005AD7  49                 	db	73
   884  005AD8  32                 	db	50
   885  005AD9  3A                 	db	58
   886  005ADA  44                 	db	68
   887  005ADB  44                 	db	68
   888  005ADC  44                 	db	68
   889  005ADD  3A                 	db	58
   890  005ADE  32                 	db	50
   891  005ADF  4A                 	db	74
   892  005AE0  48                 	db	72
   893  005AE1  48                 	db	72
   894  005AE2  30                 	db	48
   895  005AE3  3A                 	db	58
   896  005AE4  41                 	db	65
   897  005AE5  41                 	db	65
   898  005AE6  21                 	db	33
   899  005AE7  7A                 	db	122
   900  005AE8  3A                 	db	58
   901  005AE9  42                 	db	66
   902  005AEA  40                 	db	64
   903  005AEB  20                 	db	32
   904  005AEC  78                 	db	120
   905  005AED  00                 	db	0
   906  005AEE  9D                 	db	157
   907  005AEF  A0                 	db	160
   908  005AF0  A0                 	db	160
   909  005AF1  7D                 	db	125
   910  005AF2  3D                 	db	61
   911  005AF3  42                 	db	66
   912  005AF4  42                 	db	66
   913  005AF5  42                 	db	66
   914  005AF6  3D                 	db	61
   915  005AF7  3D                 	db	61
   916  005AF8  40                 	db	64
   917  005AF9  40                 	db	64
   918  005AFA  40                 	db	64
   919  005AFB  3D                 	db	61
   920  005AFC  3C                 	db	60
   921  005AFD  24                 	db	36
   922  005AFE  FF                 	db	255
   923  005AFF  24                 	db	36
   924  005B00  24                 	db	36
   925  005B01  48                 	db	72
   926  005B02  7E                 	db	126
   927  005B03  49                 	db	73
   928  005B04  43                 	db	67
   929  005B05  66                 	db	102
   930  005B06  2B                 	db	43
   931  005B07  2F                 	db	47
   932  005B08  FC                 	db	252
   933  005B09  2F                 	db	47
   934  005B0A  2B                 	db	43
   935  005B0B  FF                 	db	255
   936  005B0C  09                 	db	9
   937  005B0D  29                 	db	41
   938  005B0E  F6                 	db	246
   939  005B0F  20                 	db	32
   940  005B10  C0                 	db	192
   941  005B11  88                 	db	136
   942  005B12  7E                 	db	126
   943  005B13  09                 	db	9
   944  005B14  03                 	db	3
   945  005B15  20                 	db	32
   946  005B16  54                 	db	84
   947  005B17  54                 	db	84
   948  005B18  79                 	db	121
   949  005B19  41                 	db	65
   950  005B1A  00                 	db	0
   951  005B1B  00                 	db	0
   952  005B1C  44                 	db	68
   953  005B1D  7D                 	db	125
   954  005B1E  41                 	db	65
   955  005B1F  30                 	db	48
   956  005B20  48                 	db	72
   957  005B21  48                 	db	72
   958  005B22  4A                 	db	74
   959  005B23  32                 	db	50
   960  005B24  38                 	db	56
   961  005B25  40                 	db	64
   962  005B26  40                 	db	64
   963  005B27  22                 	db	34
   964  005B28  7A                 	db	122
   965  005B29  00                 	db	0
   966  005B2A  7A                 	db	122
   967  005B2B  0A                 	db	10
   968  005B2C  0A                 	db	10
   969  005B2D  72                 	db	114
   970  005B2E  7D                 	db	125
   971  005B2F  0D                 	db	13
   972  005B30  19                 	db	25
   973  005B31  31                 	db	49
   974  005B32  7D                 	db	125
   975  005B33  26                 	db	38
   976  005B34  29                 	db	41
   977  005B35  29                 	db	41
   978  005B36  2F                 	db	47
   979  005B37  28                 	db	40
   980  005B38  26                 	db	38
   981  005B39  29                 	db	41
   982  005B3A  29                 	db	41
   983  005B3B  29                 	db	41
   984  005B3C  26                 	db	38
   985  005B3D  30                 	db	48
   986  005B3E  48                 	db	72
   987  005B3F  4D                 	db	77
   988  005B40  40                 	db	64
   989  005B41  20                 	db	32
   990  005B42  38                 	db	56
   991  005B43  08                 	db	8
   992  005B44  08                 	db	8
   993  005B45  08                 	db	8
   994  005B46  08                 	db	8
   995  005B47  08                 	db	8
   996  005B48  08                 	db	8
   997  005B49  08                 	db	8
   998  005B4A  08                 	db	8
   999  005B4B  38                 	db	56
  1000  005B4C  2F                 	db	47
  1001  005B4D  10                 	db	16
  1002  005B4E  C8                 	db	200
  1003  005B4F  AC                 	db	172
  1004  005B50  BA                 	db	186
  1005  005B51  2F                 	db	47
  1006  005B52  10                 	db	16
  1007  005B53  28                 	db	40
  1008  005B54  34                 	db	52
  1009  005B55  FA                 	db	250
  1010  005B56  00                 	db	0
  1011  005B57  00                 	db	0
  1012  005B58  7B                 	db	123
  1013  005B59  00                 	db	0
  1014  005B5A  00                 	db	0
  1015  005B5B  08                 	db	8
  1016  005B5C  14                 	db	20
  1017  005B5D  2A                 	db	42
  1018  005B5E  14                 	db	20
  1019  005B5F  22                 	db	34
  1020  005B60  22                 	db	34
  1021  005B61  14                 	db	20
  1022  005B62  2A                 	db	42
  1023  005B63  14                 	db	20
  1024  005B64  08                 	db	8
  1025  005B65  55                 	db	85
  1026  005B66  00                 	db	0
  1027  005B67  55                 	db	85
  1028  005B68  00                 	db	0
  1029  005B69  55                 	db	85
  1030  005B6A  AA                 	db	170
  1031  005B6B  55                 	db	85
  1032  005B6C  AA                 	db	170
  1033  005B6D  55                 	db	85
  1034  005B6E  AA                 	db	170
  1035  005B6F  FF                 	db	255
  1036  005B70  55                 	db	85
  1037  005B71  FF                 	db	255
  1038  005B72  55                 	db	85
  1039  005B73  FF                 	db	255
  1040  005B74  00                 	db	0
  1041  005B75  00                 	db	0
  1042  005B76  00                 	db	0
  1043  005B77  FF                 	db	255
  1044  005B78  00                 	db	0
  1045  005B79  10                 	db	16
  1046  005B7A  10                 	db	16
  1047  005B7B  10                 	db	16
  1048  005B7C  FF                 	db	255
  1049  005B7D  00                 	db	0
  1050  005B7E  14                 	db	20
  1051  005B7F  14                 	db	20
  1052  005B80  14                 	db	20
  1053  005B81  FF                 	db	255
  1054  005B82  00                 	db	0
  1055  005B83  10                 	db	16
  1056  005B84  10                 	db	16
  1057  005B85  FF                 	db	255
  1058  005B86  00                 	db	0
  1059  005B87  FF                 	db	255
  1060  005B88  10                 	db	16
  1061  005B89  10                 	db	16
  1062  005B8A  F0                 	db	240
  1063  005B8B  10                 	db	16
  1064  005B8C  F0                 	db	240
  1065  005B8D  14                 	db	20
  1066  005B8E  14                 	db	20
  1067  005B8F  14                 	db	20
  1068  005B90  FC                 	db	252
  1069  005B91  00                 	db	0
  1070  005B92  14                 	db	20
  1071  005B93  14                 	db	20
  1072  005B94  F7                 	db	247
  1073  005B95  00                 	db	0
  1074  005B96  FF                 	db	255
  1075  005B97  00                 	db	0
  1076  005B98  00                 	db	0
  1077  005B99  FF                 	db	255
  1078  005B9A  00                 	db	0
  1079  005B9B  FF                 	db	255
  1080  005B9C  14                 	db	20
  1081  005B9D  14                 	db	20
  1082  005B9E  F4                 	db	244
  1083  005B9F  04                 	db	4
  1084  005BA0  FC                 	db	252
  1085  005BA1  14                 	db	20
  1086  005BA2  14                 	db	20
  1087  005BA3  17                 	db	23
  1088  005BA4  10                 	db	16
  1089  005BA5  1F                 	db	31
  1090  005BA6  10                 	db	16
  1091  005BA7  10                 	db	16
  1092  005BA8  1F                 	db	31
  1093  005BA9  10                 	db	16
  1094  005BAA  1F                 	db	31
  1095  005BAB  14                 	db	20
  1096  005BAC  14                 	db	20
  1097  005BAD  14                 	db	20
  1098  005BAE  1F                 	db	31
  1099  005BAF  00                 	db	0
  1100  005BB0  10                 	db	16
  1101  005BB1  10                 	db	16
  1102  005BB2  10                 	db	16
  1103  005BB3  F0                 	db	240
  1104  005BB4  00                 	db	0
  1105  005BB5  00                 	db	0
  1106  005BB6  00                 	db	0
  1107  005BB7  00                 	db	0
  1108  005BB8  1F                 	db	31
  1109  005BB9  10                 	db	16
  1110  005BBA  10                 	db	16
  1111  005BBB  10                 	db	16
  1112  005BBC  10                 	db	16
  1113  005BBD  1F                 	db	31
  1114  005BBE  10                 	db	16
  1115  005BBF  10                 	db	16
  1116  005BC0  10                 	db	16
  1117  005BC1  10                 	db	16
  1118  005BC2  F0                 	db	240
  1119  005BC3  10                 	db	16
  1120  005BC4  00                 	db	0
  1121  005BC5  00                 	db	0
  1122  005BC6  00                 	db	0
  1123  005BC7  FF                 	db	255
  1124  005BC8  10                 	db	16
  1125  005BC9  10                 	db	16
  1126  005BCA  10                 	db	16
  1127  005BCB  10                 	db	16
  1128  005BCC  10                 	db	16
  1129  005BCD  10                 	db	16
  1130  005BCE  10                 	db	16
  1131  005BCF  10                 	db	16
  1132  005BD0  10                 	db	16
  1133  005BD1  FF                 	db	255
  1134  005BD2  10                 	db	16
  1135  005BD3  00                 	db	0
  1136  005BD4  00                 	db	0
  1137  005BD5  00                 	db	0
  1138  005BD6  FF                 	db	255
  1139  005BD7  14                 	db	20
  1140  005BD8  00                 	db	0
  1141  005BD9  00                 	db	0
  1142  005BDA  FF                 	db	255
  1143  005BDB  00                 	db	0
  1144  005BDC  FF                 	db	255
  1145  005BDD  00                 	db	0
  1146  005BDE  00                 	db	0
  1147  005BDF  1F                 	db	31
  1148  005BE0  10                 	db	16
  1149  005BE1  17                 	db	23
  1150  005BE2  00                 	db	0
  1151  005BE3  00                 	db	0
  1152  005BE4  FC                 	db	252
  1153  005BE5  04                 	db	4
  1154  005BE6  F4                 	db	244
  1155  005BE7  14                 	db	20
  1156  005BE8  14                 	db	20
  1157  005BE9  17                 	db	23
  1158  005BEA  10                 	db	16
  1159  005BEB  17                 	db	23
  1160  005BEC  14                 	db	20
  1161  005BED  14                 	db	20
  1162  005BEE  F4                 	db	244
  1163  005BEF  04                 	db	4
  1164  005BF0  F4                 	db	244
  1165  005BF1  00                 	db	0
  1166  005BF2  00                 	db	0
  1167  005BF3  FF                 	db	255
  1168  005BF4  00                 	db	0
  1169  005BF5  F7                 	db	247
  1170  005BF6  14                 	db	20
  1171  005BF7  14                 	db	20
  1172  005BF8  14                 	db	20
  1173  005BF9  14                 	db	20
  1174  005BFA  14                 	db	20
  1175  005BFB  14                 	db	20
  1176  005BFC  14                 	db	20
  1177  005BFD  F7                 	db	247
  1178  005BFE  00                 	db	0
  1179  005BFF  F7                 	db	247
  1180  005C00  14                 	db	20
  1181  005C01  14                 	db	20
  1182  005C02  14                 	db	20
  1183  005C03  17                 	db	23
  1184  005C04  14                 	db	20
  1185  005C05  10                 	db	16
  1186  005C06  10                 	db	16
  1187  005C07  1F                 	db	31
  1188  005C08  10                 	db	16
  1189  005C09  1F                 	db	31
  1190  005C0A  14                 	db	20
  1191  005C0B  14                 	db	20
  1192  005C0C  14                 	db	20
  1193  005C0D  F4                 	db	244
  1194  005C0E  14                 	db	20
  1195  005C0F  10                 	db	16
  1196  005C10  10                 	db	16
  1197  005C11  F0                 	db	240
  1198  005C12  10                 	db	16
  1199  005C13  F0                 	db	240
  1200  005C14  00                 	db	0
  1201  005C15  00                 	db	0
  1202  005C16  1F                 	db	31
  1203  005C17  10                 	db	16
  1204  005C18  1F                 	db	31
  1205  005C19  00                 	db	0
  1206  005C1A  00                 	db	0
  1207  005C1B  00                 	db	0
  1208  005C1C  1F                 	db	31
  1209  005C1D  14                 	db	20
  1210  005C1E  00                 	db	0
  1211  005C1F  00                 	db	0
  1212  005C20  00                 	db	0
  1213  005C21  FC                 	db	252
  1214  005C22  14                 	db	20
  1215  005C23  00                 	db	0
  1216  005C24  00                 	db	0
  1217  005C25  F0                 	db	240
  1218  005C26  10                 	db	16
  1219  005C27  F0                 	db	240
  1220  005C28  10                 	db	16
  1221  005C29  10                 	db	16
  1222  005C2A  FF                 	db	255
  1223  005C2B  10                 	db	16
  1224  005C2C  FF                 	db	255
  1225  005C2D  14                 	db	20
  1226  005C2E  14                 	db	20
  1227  005C2F  14                 	db	20
  1228  005C30  FF                 	db	255
  1229  005C31  14                 	db	20
  1230  005C32  10                 	db	16
  1231  005C33  10                 	db	16
  1232  005C34  10                 	db	16
  1233  005C35  1F                 	db	31
  1234  005C36  00                 	db	0
  1235  005C37  00                 	db	0
  1236  005C38  00                 	db	0
  1237  005C39  00                 	db	0
  1238  005C3A  F0                 	db	240
  1239  005C3B  10                 	db	16
  1240  005C3C  FF                 	db	255
  1241  005C3D  FF                 	db	255
  1242  005C3E  FF                 	db	255
  1243  005C3F  FF                 	db	255
  1244  005C40  FF                 	db	255
  1245  005C41  F0                 	db	240
  1246  005C42  F0                 	db	240
  1247  005C43  F0                 	db	240
  1248  005C44  F0                 	db	240
  1249  005C45  F0                 	db	240
  1250  005C46  FF                 	db	255
  1251  005C47  FF                 	db	255
  1252  005C48  FF                 	db	255
  1253  005C49  00                 	db	0
  1254  005C4A  00                 	db	0
  1255  005C4B  00                 	db	0
  1256  005C4C  00                 	db	0
  1257  005C4D  00                 	db	0
  1258  005C4E  FF                 	db	255
  1259  005C4F  FF                 	db	255
  1260  005C50  0F                 	db	15
  1261  005C51  0F                 	db	15
  1262  005C52  0F                 	db	15
  1263  005C53  0F                 	db	15
  1264  005C54  0F                 	db	15
  1265  005C55  38                 	db	56
  1266  005C56  44                 	db	68
  1267  005C57  44                 	db	68
  1268  005C58  38                 	db	56
  1269  005C59  44                 	db	68
  1270  005C5A  FC                 	db	252
  1271  005C5B  4A                 	db	74
  1272  005C5C  4A                 	db	74
  1273  005C5D  4A                 	db	74
  1274  005C5E  34                 	db	52
  1275  005C5F  7E                 	db	126
  1276  005C60  02                 	db	2
  1277  005C61  02                 	db	2
  1278  005C62  06                 	db	6
  1279  005C63  06                 	db	6
  1280  005C64  02                 	db	2
  1281  005C65  7E                 	db	126
  1282  005C66  02                 	db	2
  1283  005C67  7E                 	db	126
  1284  005C68  02                 	db	2
  1285  005C69  63                 	db	99
  1286  005C6A  55                 	db	85
  1287  005C6B  49                 	db	73
  1288  005C6C  41                 	db	65
  1289  005C6D  63                 	db	99
  1290  005C6E  38                 	db	56
  1291  005C6F  44                 	db	68
  1292  005C70  44                 	db	68
  1293  005C71  3C                 	db	60
  1294  005C72  04                 	db	4
  1295  005C73  40                 	db	64
  1296  005C74  7E                 	db	126
  1297  005C75  20                 	db	32
  1298  005C76  1E                 	db	30
  1299  005C77  20                 	db	32
  1300  005C78  06                 	db	6
  1301  005C79  02                 	db	2
  1302  005C7A  7E                 	db	126
  1303  005C7B  02                 	db	2
  1304  005C7C  02                 	db	2
  1305  005C7D  99                 	db	153
  1306  005C7E  A5                 	db	165
  1307  005C7F  E7                 	db	231
  1308  005C80  A5                 	db	165
  1309  005C81  99                 	db	153
  1310  005C82  1C                 	db	28
  1311  005C83  2A                 	db	42
  1312  005C84  49                 	db	73
  1313  005C85  2A                 	db	42
  1314  005C86  1C                 	db	28
  1315  005C87  4C                 	db	76
  1316  005C88  72                 	db	114
  1317  005C89  01                 	db	1
  1318  005C8A  72                 	db	114
  1319  005C8B  4C                 	db	76
  1320  005C8C  30                 	db	48
  1321  005C8D  4A                 	db	74
  1322  005C8E  4D                 	db	77
  1323  005C8F  4D                 	db	77
  1324  005C90  30                 	db	48
  1325  005C91  30                 	db	48
  1326  005C92  48                 	db	72
  1327  005C93  78                 	db	120
  1328  005C94  48                 	db	72
  1329  005C95  30                 	db	48
  1330  005C96  BC                 	db	188
  1331  005C97  62                 	db	98
  1332  005C98  5A                 	db	90
  1333  005C99  46                 	db	70
  1334  005C9A  3D                 	db	61
  1335  005C9B  3E                 	db	62
  1336  005C9C  49                 	db	73
  1337  005C9D  49                 	db	73
  1338  005C9E  49                 	db	73
  1339  005C9F  00                 	db	0
  1340  005CA0  7E                 	db	126
  1341  005CA1  01                 	db	1
  1342  005CA2  01                 	db	1
  1343  005CA3  01                 	db	1
  1344  005CA4  7E                 	db	126
  1345  005CA5  2A                 	db	42
  1346  005CA6  2A                 	db	42
  1347  005CA7  2A                 	db	42
  1348  005CA8  2A                 	db	42
  1349  005CA9  2A                 	db	42
  1350  005CAA  44                 	db	68
  1351  005CAB  44                 	db	68
  1352  005CAC  5F                 	db	95
  1353  005CAD  44                 	db	68
  1354  005CAE  44                 	db	68
  1355  005CAF  40                 	db	64
  1356  005CB0  51                 	db	81
  1357  005CB1  4A                 	db	74
  1358  005CB2  44                 	db	68
  1359  005CB3  40                 	db	64
  1360  005CB4  40                 	db	64
  1361  005CB5  44                 	db	68
  1362  005CB6  4A                 	db	74
  1363  005CB7  51                 	db	81
  1364  005CB8  40                 	db	64
  1365  005CB9  00                 	db	0
  1366  005CBA  00                 	db	0
  1367  005CBB  FF                 	db	255
  1368  005CBC  01                 	db	1
  1369  005CBD  03                 	db	3
  1370  005CBE  E0                 	db	224
  1371  005CBF  80                 	db	128
  1372  005CC0  FF                 	db	255
  1373  005CC1  00                 	db	0
  1374  005CC2  00                 	db	0
  1375  005CC3  08                 	db	8
  1376  005CC4  08                 	db	8
  1377  005CC5  6B                 	db	107
  1378  005CC6  6B                 	db	107
  1379  005CC7  08                 	db	8
  1380  005CC8  36                 	db	54
  1381  005CC9  12                 	db	18
  1382  005CCA  36                 	db	54
  1383  005CCB  24                 	db	36
  1384  005CCC  36                 	db	54
  1385  005CCD  06                 	db	6
  1386  005CCE  0F                 	db	15
  1387  005CCF  09                 	db	9
  1388  005CD0  0F                 	db	15
  1389  005CD1  06                 	db	6
  1390  005CD2  00                 	db	0
  1391  005CD3  00                 	db	0
  1392  005CD4  18                 	db	24
  1393  005CD5  18                 	db	24
  1394  005CD6  00                 	db	0
  1395  005CD7  00                 	db	0
  1396  005CD8  00                 	db	0
  1397  005CD9  10                 	db	16
  1398  005CDA  10                 	db	16
  1399  005CDB  00                 	db	0
  1400  005CDC  30                 	db	48
  1401  005CDD  40                 	db	64
  1402  005CDE  FF                 	db	255
  1403  005CDF  01                 	db	1
  1404  005CE0  01                 	db	1
  1405  005CE1  00                 	db	0
  1406  005CE2  1F                 	db	31
  1407  005CE3  01                 	db	1
  1408  005CE4  01                 	db	1
  1409  005CE5  1E                 	db	30
  1410  005CE6  00                 	db	0
  1411  005CE7  19                 	db	25
  1412  005CE8  1D                 	db	29
  1413  005CE9  17                 	db	23
  1414  005CEA  12                 	db	18
  1415  005CEB  00                 	db	0
  1416  005CEC  3C                 	db	60
  1417  005CED  3C                 	db	60
  1418  005CEE  3C                 	db	60
  1419  005CEF  3C                 	db	60
  1420  005CF0  00                 	db	0
  1421  005CF1  00                 	db	0
  1422  005CF2  00                 	db	0
  1423  005CF3  00                 	db	0
  1424  005CF4  00                 	db	0
  1425  005CF5                     __end_of_TFT_Font:
  1426                           	opt callstack 0
  1427  005CF5                     _TFT_Init_Sequence:
  1428                           	opt callstack 0
  1429  005CF5  0702               	dw	1794
  1430  005CF7  3008               	dw	12296
  1431  005CF9  0705               	dw	1797
  1432  005CFB  0036               	dw	54
  1433  005CFD  070B               	dw	1803
  1434  005CFF  1213               	dw	4627
  1435  005D01  0001               	dw	1
  1436  005D03  0100               	dw	256
  1437  005D05  0002               	dw	2
  1438  005D07  0100               	dw	256
  1439  005D09  0003               	dw	3
  1440  005D0B  1030               	dw	4144
  1441  005D0D  0008               	dw	8
  1442  005D0F  0202               	dw	514
  1443  005D11  0009               	dw	9
  1444  005D13  0000               	dw	0
  1445  005D15  000C               	dw	12
  1446  005D17  0000               	dw	0
  1447  005D19  000F               	dw	15
  1448  005D1B  0000               	dw	0
  1449  005D1D  0100               	dw	256
  1450  005D1F  0000               	dw	0
  1451  005D21  0102               	dw	258
  1452  005D23  0000               	dw	0
  1453  005D25  0103               	dw	259
  1454  005D27  0000               	dw	0
  1455  005D29  FFFF               	dw	65535
  1456  005D2B  0001               	dw	1
  1457  005D2D  0100               	dw	256
  1458  005D2F  1190               	dw	4496
  1459  005D31  0101               	dw	257
  1460  005D33  0227               	dw	551
  1461  005D35  FFFF               	dw	65535
  1462  005D37  0001               	dw	1
  1463  005D39  0102               	dw	258
  1464  005D3B  01BD               	dw	445
  1465  005D3D  FFFF               	dw	65535
  1466  005D3F  0001               	dw	1
  1467  005D41  0103               	dw	259
  1468  005D43  2D00               	dw	11520
  1469  005D45  0281               	dw	641
  1470  005D47  000E               	dw	14
  1471  005D49  FFFF               	dw	65535
  1472  005D4B  0001               	dw	1
  1473  005D4D  0200               	dw	512
  1474  005D4F  0000               	dw	0
  1475  005D51  0201               	dw	513
  1476  005D53  0000               	dw	0
  1477  005D55  0300               	dw	768
  1478  005D57  0000               	dw	0
  1479  005D59  0301               	dw	769
  1480  005D5B  0707               	dw	1799
  1481  005D5D  0302               	dw	770
  1482  005D5F  0606               	dw	1542
  1483  005D61  0305               	dw	773
  1484  005D63  0000               	dw	0
  1485  005D65  0306               	dw	774
  1486  005D67  0D00               	dw	3328
  1487  005D69  0307               	dw	775
  1488  005D6B  0706               	dw	1798
  1489  005D6D  0308               	dw	776
  1490  005D6F  0005               	dw	5
  1491  005D71  0309               	dw	777
  1492  005D73  0007               	dw	7
  1493  005D75  030C               	dw	780
  1494  005D77  0000               	dw	0
  1495  005D79  030D               	dw	781
  1496  005D7B  000A               	dw	10
  1497  005D7D  0210               	dw	528
  1498  005D7F  0000               	dw	0
  1499  005D81  0211               	dw	529
  1500  005D83  00EF               	dw	239
  1501  005D85  0212               	dw	530
  1502  005D87  0000               	dw	0
  1503  005D89  0213               	dw	531
  1504  005D8B  018F               	dw	399
  1505  005D8D  0400               	dw	1024
  1506  005D8F  3100               	dw	12544
  1507  005D91  0401               	dw	1025
  1508  005D93  0001               	dw	1
  1509  005D95  0404               	dw	1028
  1510  005D97  0000               	dw	0
  1511  005D99  0500               	dw	1280
  1512  005D9B  0000               	dw	0
  1513  005D9D  0501               	dw	1281
  1514  005D9F  0000               	dw	0
  1515  005DA1  0502               	dw	1282
  1516  005DA3  0000               	dw	0
  1517  005DA5  0503               	dw	1283
  1518  005DA7  0000               	dw	0
  1519  005DA9  0504               	dw	1284
  1520  005DAB  0000               	dw	0
  1521  005DAD  0505               	dw	1285
  1522  005DAF  0000               	dw	0
  1523  005DB1  0010               	dw	16
  1524  005DB3  0010               	dw	16
  1525  005DB5  0011               	dw	17
  1526  005DB7  0600               	dw	1536
  1527  005DB9  0020               	dw	32
  1528  005DBB  0002               	dw	2
  1529  005DBD  0007               	dw	7
  1530  005DBF  0173               	dw	371
  1531  005DC1                     __end_of_TFT_Init_Sequence:
  1532                           	opt callstack 0
  1533  005DC1                     _dpowers:
  1534                           	opt callstack 0
  1535  005DC1  0001               	dw	1
  1536  005DC3  0000               	dw	0
  1537  005DC5  000A               	dw	10
  1538  005DC7  0000               	dw	0
  1539  005DC9  0064               	dw	100
  1540  005DCB  0000               	dw	0
  1541  005DCD  03E8               	dw	1000
  1542  005DCF  0000               	dw	0
  1543  005DD1  2710               	dw	10000
  1544  005DD3  0000               	dw	0
  1545  005DD5  86A0               	dw	34464
  1546  005DD7  0001               	dw	1
  1547  005DD9  4240               	dw	16960
  1548  005DDB  000F               	dw	15
  1549  005DDD  9680               	dw	38528
  1550  005DDF  0098               	dw	152
  1551  005DE1  E100               	dw	57600
  1552  005DE3  05F5               	dw	1525
  1553  005DE5  CA00               	dw	51712
  1554  005DE7  3B9A               	dw	15258
  1555  005DE9                     __end_of_dpowers:
  1556                           	opt callstack 0
  1557  005DE9                     _A6_BAUDRATES:
  1558                           	opt callstack 0
  1559  005DE9  2580               	dw	9600
  1560  005DEB  0000               	dw	0
  1561  005DED  E100               	dw	57600
  1562  005DEF  0000               	dw	0
  1563  005DF1  C200               	dw	49664
  1564  005DF3  0001               	dw	1
  1565  005DF5                     __end_of_A6_BAUDRATES:
  1566                           	opt callstack 0
  1567  005DF5                     _ECG_ICON_HEART:
  1568                           	opt callstack 0
  1569  005DF5  14                 	db	20
  1570  005DF6  14                 	db	20
  1571  005DF7  00                 	db	0
  1572  005DF8  00                 	db	0
  1573  005DF9  00                 	db	0
  1574  005DFA  00                 	db	0
  1575  005DFB  00                 	db	0
  1576  005DFC  00                 	db	0
  1577  005DFD  F8                 	db	248
  1578  005DFE  F0                 	db	240
  1579  005DFF  01                 	db	1
  1580  005E00  FC                 	db	252
  1581  005E01  F9                 	db	249
  1582  005E02  03                 	db	3
  1583  005E03  FC                 	db	252
  1584  005E04  FF                 	db	255
  1585  005E05  03                 	db	3
  1586  005E06  FE                 	db	254
  1587  005E07  FF                 	db	255
  1588  005E08  07                 	db	7
  1589  005E09  FE                 	db	254
  1590  005E0A  FF                 	db	255
  1591  005E0B  07                 	db	7
  1592  005E0C  FE                 	db	254
  1593  005E0D  FF                 	db	255
  1594  005E0E  07                 	db	7
  1595  005E0F  FE                 	db	254
  1596  005E10  FF                 	db	255
  1597  005E11  07                 	db	7
  1598  005E12  FC                 	db	252
  1599  005E13  FF                 	db	255
  1600  005E14  03                 	db	3
  1601  005E15  FC                 	db	252
  1602  005E16  FF                 	db	255
  1603  005E17  03                 	db	3
  1604  005E18  F8                 	db	248
  1605  005E19  FF                 	db	255
  1606  005E1A  01                 	db	1
  1607  005E1B  F0                 	db	240
  1608  005E1C  FF                 	db	255
  1609  005E1D  00                 	db	0
  1610  005E1E  E0                 	db	224
  1611  005E1F  7F                 	db	127
  1612  005E20  00                 	db	0
  1613  005E21  C0                 	db	192
  1614  005E22  3F                 	db	63
  1615  005E23  00                 	db	0
  1616  005E24  80                 	db	128
  1617  005E25  1F                 	db	31
  1618  005E26  00                 	db	0
  1619  005E27  00                 	db	0
  1620  005E28  0F                 	db	15
  1621  005E29  00                 	db	0
  1622  005E2A  00                 	db	0
  1623  005E2B  06                 	db	6
  1624  005E2C  00                 	db	0
  1625  005E2D  00                 	db	0
  1626  005E2E  00                 	db	0
  1627  005E2F  00                 	db	0
  1628  005E30  00                 	db	0
  1629  005E31  00                 	db	0
  1630  005E32  00                 	db	0
  1631  005E33                     __end_of_ECG_ICON_HEART:
  1632                           	opt callstack 0
  1633  0000                     _RCREG	set	4014
  1634  0000                     _TXREG	set	4013
  1635  0000                     _SPBRG	set	4015
  1636  0000                     _SPBRGH	set	4016
  1637  0000                     _BAUDCONbits	set	4024
  1638  0000                     _RCSTAbits	set	4011
  1639  0000                     _TXSTAbits	set	4012
  1640  0000                     _ADRESL	set	4035
  1641  0000                     _ADRESH	set	4036
  1642  0000                     _PORTAbits	set	3968
  1643  0000                     _PORTB	set	3969
  1644  0000                     _PORTCbits	set	3970
  1645  0000                     _TMR3L	set	4018
  1646  0000                     _TMR3H	set	4019
  1647  0000                     _T3CONbits	set	4017
  1648  0000                     _ADCON2bits	set	4032
  1649  0000                     _ADCON1bits	set	4033
  1650  0000                     _ADCON0bits	set	4034
  1651  0000                     _LATC	set	3979
  1652  0000                     _TRISC	set	3988
  1653  0000                     _LATB	set	3978
  1654  0000                     _TRISB	set	3987
  1655  0000                     _LATA	set	3977
  1656  0000                     _TRISA	set	3986
  1657  0000                     _UCFGbits	set	3951
  1658  0000                     _UCONbits	set	3949
  1659  0000                     _OSCTUNEbits	set	3995
  1660  0000                     _OSCCONbits	set	4051
  1661  0000                     _CREN	set	32092
  1662  0000                     _OERR	set	32089
  1663  0000                     _TXIF	set	31988
  1664  0000                     _GO_nDONE	set	32273
  1665  0000                     _RCIF	set	31989
  1666  0000                     _RCIE	set	31981
  1667  0000                     _TMR3IF	set	32009
  1668  0000                     _GIE	set	32663
  1669  0000                     _PEIE	set	32662
  1670  0000                     _TMR3IE	set	32001
  1671  0000                     _RBPU	set	32655
  1672  005E33                     STR_2:
  1673                           
  1674                           ; BSR set to: 2
  1675  005E33  49                 	db	73	;'I'
  1676  005E34  6E                 	db	110	;'n'
  1677  005E35  76                 	db	118	;'v'
  1678  005E36  61                 	db	97	;'a'
  1679  005E37  6C                 	db	108	;'l'
  1680  005E38  69                 	db	105	;'i'
  1681  005E39  64                 	db	100	;'d'
  1682  005E3A  20                 	db	32
  1683  005E3B  63                 	db	99	;'c'
  1684  005E3C  75                 	db	117	;'u'
  1685  005E3D  72                 	db	114	;'r'
  1686  005E3E  72                 	db	114	;'r'
  1687  005E3F  65                 	db	101	;'e'
  1688  005E40  6E                 	db	110	;'n'
  1689  005E41  74                 	db	116	;'t'
  1690  005E42  20                 	db	32
  1691  005E43  62                 	db	98	;'b'
  1692  005E44  61                 	db	97	;'a'
  1693  005E45  75                 	db	117	;'u'
  1694  005E46  64                 	db	100	;'d'
  1695  005E47  20                 	db	32
  1696  005E48  72                 	db	114	;'r'
  1697  005E49  61                 	db	97	;'a'
  1698  005E4A  74                 	db	116	;'t'
  1699  005E4B  65                 	db	101	;'e'
  1700  005E4C  20                 	db	32
  1701  005E4D  28                 	db	40
  1702  005E4E  25                 	db	37
  1703  005E4F  6C                 	db	108	;'l'
  1704  005E50  75                 	db	117	;'u'
  1705  005E51  29                 	db	41
  1706  005E52  00                 	db	0
  1707  005E53                     STR_22:
  1708                           
  1709                           ; BSR set to: 2
  1710  005E53  2A                 	db	42
  1711  005E54  2A                 	db	42
  1712  005E55  2A                 	db	42
  1713  005E56  20                 	db	32
  1714  005E57  43                 	db	67	;'C'
  1715  005E58  6F                 	db	111	;'o'
  1716  005E59  6C                 	db	108	;'l'
  1717  005E5A  6C                 	db	108	;'l'
  1718  005E5B  65                 	db	101	;'e'
  1719  005E5C  67                 	db	103	;'g'
  1720  005E5D  61                 	db	97	;'a'
  1721  005E5E  72                 	db	114	;'r'
  1722  005E5F  65                 	db	101	;'e'
  1723  005E60  20                 	db	32
  1724  005E61  65                 	db	101	;'e'
  1725  005E62  6C                 	db	108	;'l'
  1726  005E63  65                 	db	101	;'e'
  1727  005E64  74                 	db	116	;'t'
  1728  005E65  74                 	db	116	;'t'
  1729  005E66  72                 	db	114	;'r'
  1730  005E67  6F                 	db	111	;'o'
  1731  005E68  64                 	db	100	;'d'
  1732  005E69  69                 	db	105	;'i'
  1733  005E6A  20                 	db	32
  1734  005E6B  2A                 	db	42
  1735  005E6C  2A                 	db	42
  1736  005E6D  2A                 	db	42
  1737  005E6E  00                 	db	0
  1738  005E6F                     STR_3:
  1739                           
  1740                           ; BSR set to: 2
  1741  005E6F  42                 	db	66	;'B'
  1742  005E70  61                 	db	97	;'a'
  1743  005E71  75                 	db	117	;'u'
  1744  005E72  64                 	db	100	;'d'
  1745  005E73  20                 	db	32
  1746  005E74  72                 	db	114	;'r'
  1747  005E75  61                 	db	97	;'a'
  1748  005E76  74                 	db	116	;'t'
  1749  005E77  65                 	db	101	;'e'
  1750  005E78  20                 	db	32
  1751  005E79  63                 	db	99	;'c'
  1752  005E7A  68                 	db	104	;'h'
  1753  005E7B  61                 	db	97	;'a'
  1754  005E7C  6E                 	db	110	;'n'
  1755  005E7D  67                 	db	103	;'g'
  1756  005E7E  65                 	db	101	;'e'
  1757  005E7F  64                 	db	100	;'d'
  1758  005E80  20                 	db	32
  1759  005E81  28                 	db	40
  1760  005E82  2D                 	db	45
  1761  005E83  3E                 	db	62	;'>'
  1762  005E84  20                 	db	32
  1763  005E85  25                 	db	37
  1764  005E86  6C                 	db	108	;'l'
  1765  005E87  75                 	db	117	;'u'
  1766  005E88  29                 	db	41
  1767  005E89  00                 	db	0
  1768  005E8A                     STR_15:
  1769                           
  1770                           ; BSR set to: 2
  1771  005E8A  43                 	db	67	;'C'
  1772  005E8B  68                 	db	104	;'h'
  1773  005E8C  65                 	db	101	;'e'
  1774  005E8D  63                 	db	99	;'c'
  1775  005E8E  6B                 	db	107	;'k'
  1776  005E8F  20                 	db	32
  1777  005E90  6E                 	db	110	;'n'
  1778  005E91  65                 	db	101	;'e'
  1779  005E92  74                 	db	116	;'t'
  1780  005E93  77                 	db	119	;'w'
  1781  005E94  6F                 	db	111	;'o'
  1782  005E95  72                 	db	114	;'r'
  1783  005E96  6B                 	db	107	;'k'
  1784  005E97  20                 	db	32
  1785  005E98  72                 	db	114	;'r'
  1786  005E99  65                 	db	101	;'e'
  1787  005E9A  67                 	db	103	;'g'
  1788  005E9B  69                 	db	105	;'i'
  1789  005E9C  73                 	db	115	;'s'
  1790  005E9D  74                 	db	116	;'t'
  1791  005E9E  72                 	db	114	;'r'
  1792  005E9F  61                 	db	97	;'a'
  1793  005EA0  74                 	db	116	;'t'
  1794  005EA1  69                 	db	105	;'i'
  1795  005EA2  6F                 	db	111	;'o'
  1796  005EA3  6E                 	db	110	;'n'
  1797  005EA4  00                 	db	0
  1798  005EA5                     STR_4:
  1799                           
  1800                           ; BSR set to: 2
  1801  005EA5  45                 	db	69	;'E'
  1802  005EA6  72                 	db	114	;'r'
  1803  005EA7  72                 	db	114	;'r'
  1804  005EA8  6F                 	db	111	;'o'
  1805  005EA9  72                 	db	114	;'r'
  1806  005EAA  20                 	db	32
  1807  005EAB  63                 	db	99	;'c'
  1808  005EAC  68                 	db	104	;'h'
  1809  005EAD  61                 	db	97	;'a'
  1810  005EAE  6E                 	db	110	;'n'
  1811  005EAF  67                 	db	103	;'g'
  1812  005EB0  69                 	db	105	;'i'
  1813  005EB1  6E                 	db	110	;'n'
  1814  005EB2  67                 	db	103	;'g'
  1815  005EB3  20                 	db	32
  1816  005EB4  62                 	db	98	;'b'
  1817  005EB5  61                 	db	97	;'a'
  1818  005EB6  75                 	db	117	;'u'
  1819  005EB7  64                 	db	100	;'d'
  1820  005EB8  20                 	db	32
  1821  005EB9  72                 	db	114	;'r'
  1822  005EBA  61                 	db	97	;'a'
  1823  005EBB  74                 	db	116	;'t'
  1824  005EBC  65                 	db	101	;'e'
  1825  005EBD  00                 	db	0
  1826  005EBE                     STR_16:
  1827                           
  1828                           ; BSR set to: 2
  1829  005EBE  4E                 	db	78	;'N'
  1830  005EBF  65                 	db	101	;'e'
  1831  005EC0  74                 	db	116	;'t'
  1832  005EC1  77                 	db	119	;'w'
  1833  005EC2  6F                 	db	111	;'o'
  1834  005EC3  72                 	db	114	;'r'
  1835  005EC4  6B                 	db	107	;'k'
  1836  005EC5  20                 	db	32
  1837  005EC6  73                 	db	115	;'s'
  1838  005EC7  74                 	db	116	;'t'
  1839  005EC8  61                 	db	97	;'a'
  1840  005EC9  74                 	db	116	;'t'
  1841  005ECA  75                 	db	117	;'u'
  1842  005ECB  73                 	db	115	;'s'
  1843  005ECC  3A                 	db	58	;':'
  1844  005ECD  20                 	db	32
  1845  005ECE  25                 	db	37
  1846  005ECF  75                 	db	117	;'u'
  1847  005ED0  20                 	db	32
  1848  005ED1  28                 	db	40
  1849  005ED2  25                 	db	37
  1850  005ED3  73                 	db	115	;'s'
  1851  005ED4  29                 	db	41
  1852  005ED5  00                 	db	0
  1853  005ED6                     STR_30:
  1854                           
  1855                           ; BSR set to: 2
  1856  005ED6  44                 	db	68	;'D'
  1857  005ED7  65                 	db	101	;'e'
  1858  005ED8  74                 	db	116	;'t'
  1859  005ED9  65                 	db	101	;'e'
  1860  005EDA  63                 	db	99	;'c'
  1861  005EDB  74                 	db	116	;'t'
  1862  005EDC  69                 	db	105	;'i'
  1863  005EDD  6E                 	db	110	;'n'
  1864  005EDE  67                 	db	103	;'g'
  1865  005EDF  20                 	db	32
  1866  005EE0  62                 	db	98	;'b'
  1867  005EE1  61                 	db	97	;'a'
  1868  005EE2  75                 	db	117	;'u'
  1869  005EE3  64                 	db	100	;'d'
  1870  005EE4  20                 	db	32
  1871  005EE5  72                 	db	114	;'r'
  1872  005EE6  61                 	db	97	;'a'
  1873  005EE7  74                 	db	116	;'t'
  1874  005EE8  65                 	db	101	;'e'
  1875  005EE9  2E                 	db	46
  1876  005EEA  2E                 	db	46
  1877  005EEB  2E                 	db	46
  1878  005EEC  00                 	db	0
  1879  005EED                     STR_1:
  1880                           
  1881                           ; BSR set to: 2
  1882  005EED  43                 	db	67	;'C'
  1883  005EEE  68                 	db	104	;'h'
  1884  005EEF  61                 	db	97	;'a'
  1885  005EF0  6E                 	db	110	;'n'
  1886  005EF1  67                 	db	103	;'g'
  1887  005EF2  65                 	db	101	;'e'
  1888  005EF3  20                 	db	32
  1889  005EF4  62                 	db	98	;'b'
  1890  005EF5  61                 	db	97	;'a'
  1891  005EF6  75                 	db	117	;'u'
  1892  005EF7  64                 	db	100	;'d'
  1893  005EF8  20                 	db	32
  1894  005EF9  72                 	db	114	;'r'
  1895  005EFA  61                 	db	97	;'a'
  1896  005EFB  74                 	db	116	;'t'
  1897  005EFC  65                 	db	101	;'e'
  1898  005EFD  20                 	db	32
  1899  005EFE  28                 	db	40
  1900  005EFF  25                 	db	37
  1901  005F00  6C                 	db	108	;'l'
  1902  005F01  75                 	db	117	;'u'
  1903  005F02  29                 	db	41
  1904  005F03  00                 	db	0
  1905  005F04                     STR_5:
  1906                           
  1907                           ; BSR set to: 2
  1908  005F04  43                 	db	67	;'C'
  1909  005F05  6F                 	db	111	;'o'
  1910  005F06  6D                 	db	109	;'m'
  1911  005F07  6D                 	db	109	;'m'
  1912  005F08  20                 	db	32
  1913  005F09  69                 	db	105	;'i'
  1914  005F0A  73                 	db	115	;'s'
  1915  005F0B  20                 	db	32
  1916  005F0C  64                 	db	100	;'d'
  1917  005F0D  65                 	db	101	;'e'
  1918  005F0E  61                 	db	97	;'a'
  1919  005F0F  64                 	db	100	;'d'
  1920  005F10  2E                 	db	46
  1921  005F11  20                 	db	32
  1922  005F12  52                 	db	82	;'R'
  1923  005F13  65                 	db	101	;'e'
  1924  005F14  74                 	db	116	;'t'
  1925  005F15  72                 	db	114	;'r'
  1926  005F16  79                 	db	121	;'y'
  1927  005F17  2E                 	db	46
  1928  005F18  2E                 	db	46
  1929  005F19  2E                 	db	46
  1930  005F1A  00                 	db	0
  1931  005F1B                     STR_10:
  1932                           
  1933                           ; BSR set to: 2
  1934  005F1B  43                 	db	67	;'C'
  1935  005F1C  68                 	db	104	;'h'
  1936  005F1D  65                 	db	101	;'e'
  1937  005F1E  63                 	db	99	;'c'
  1938  005F1F  6B                 	db	107	;'k'
  1939  005F20  20                 	db	32
  1940  005F21  62                 	db	98	;'b'
  1941  005F22  61                 	db	97	;'a'
  1942  005F23  75                 	db	117	;'u'
  1943  005F24  64                 	db	100	;'d'
  1944  005F25  20                 	db	32
  1945  005F26  72                 	db	114	;'r'
  1946  005F27  61                 	db	97	;'a'
  1947  005F28  74                 	db	116	;'t'
  1948  005F29  65                 	db	101	;'e'
  1949  005F2A  00                 	db	0
  1950  005F2B                     STR_7:
  1951                           
  1952                           ; BSR set to: 2
  1953  005F2B  52                 	db	82	;'R'
  1954  005F2C  65                 	db	101	;'e'
  1955  005F2D  73                 	db	115	;'s'
  1956  005F2E  75                 	db	117	;'u'
  1957  005F2F  72                 	db	114	;'r'
  1958  005F30  72                 	db	114	;'r'
  1959  005F31  65                 	db	101	;'e'
  1960  005F32  63                 	db	99	;'c'
  1961  005F33  74                 	db	116	;'t'
  1962  005F34  65                 	db	101	;'e'
  1963  005F35  64                 	db	100	;'d'
  1964  005F36  21                 	db	33
  1965  005F37  00                 	db	0
  1966  005F38                     STR_17:
  1967                           
  1968                           ; BSR set to: 2
  1969  005F38  53                 	db	83	;'S'
  1970  005F39  65                 	db	101	;'e'
  1971  005F3A  61                 	db	97	;'a'
  1972  005F3B  72                 	db	114	;'r'
  1973  005F3C  63                 	db	99	;'c'
  1974  005F3D  68                 	db	104	;'h'
  1975  005F3E  69                 	db	105	;'i'
  1976  005F3F  6E                 	db	110	;'n'
  1977  005F40  67                 	db	103	;'g'
  1978  005F41  2E                 	db	46
  1979  005F42  2E                 	db	46
  1980  005F43  2E                 	db	46
  1981  005F44  00                 	db	0
  1982  005F45                     STR_28:
  1983                           
  1984                           ; BSR set to: 2
  1985  005F45  41                 	db	65	;'A'
  1986  005F46  54                 	db	84	;'T'
  1987  005F47  2B                 	db	43
  1988  005F48  49                 	db	73	;'I'
  1989  005F49  50                 	db	80	;'P'
  1990  005F4A  52                 	db	82	;'R'
  1991  005F4B  3D                 	db	61	;'='
  1992  005F4C  25                 	db	37
  1993  005F4D  6C                 	db	108	;'l'
  1994  005F4E  75                 	db	117	;'u'
  1995  005F4F  0D                 	db	13
  1996  005F50  00                 	db	0
  1997  005F51                     STR_31:
  1998                           
  1999                           ; BSR set to: 2
  2000  005F51  25                 	db	37
  2001  005F52  6C                 	db	108	;'l'
  2002  005F53  75                 	db	117	;'u'
  2003  005F54  20                 	db	32
  2004  005F55  46                 	db	70	;'F'
  2005  005F56  4F                 	db	79	;'O'
  2006  005F57  55                 	db	85	;'U'
  2007  005F58  4E                 	db	78	;'N'
  2008  005F59  44                 	db	68	;'D'
  2009  005F5A  21                 	db	33
  2010  005F5B  00                 	db	0
  2011  005F5C                     STR_21:
  2012                           
  2013                           ; BSR set to: 2
  2014  005F5C  46                 	db	70	;'F'
  2015  005F5D  72                 	db	114	;'r'
  2016  005F5E  65                 	db	101	;'e'
  2017  005F5F  71                 	db	113	;'q'
  2018  005F60  75                 	db	117	;'u'
  2019  005F61  65                 	db	101	;'e'
  2020  005F62  6E                 	db	110	;'n'
  2021  005F63  7A                 	db	122	;'z'
  2022  005F64  61                 	db	97	;'a'
  2023  005F65  3A                 	db	58	;':'
  2024  005F66  00                 	db	0
  2025  005F67                     STR_12:
  2026                           
  2027                           ; BSR set to: 2
  2028  005F67  43                 	db	67	;'C'
  2029  005F68  68                 	db	104	;'h'
  2030  005F69  65                 	db	101	;'e'
  2031  005F6A  63                 	db	99	;'c'
  2032  005F6B  6B                 	db	107	;'k'
  2033  005F6C  20                 	db	32
  2034  005F6D  52                 	db	82	;'R'
  2035  005F6E  53                 	db	83	;'S'
  2036  005F6F  53                 	db	83	;'S'
  2037  005F70  49                 	db	73	;'I'
  2038  005F71  00                 	db	0
  2039  005F72                     STR_6:
  2040                           
  2041                           ; BSR set to: 2
  2042  005F72  53                 	db	83	;'S'
  2043  005F73  74                 	db	116	;'t'
  2044  005F74  69                 	db	105	;'i'
  2045  005F75  6C                 	db	108	;'l'
  2046  005F76  6C                 	db	108	;'l'
  2047  005F77  20                 	db	32
  2048  005F78  64                 	db	100	;'d'
  2049  005F79  65                 	db	101	;'e'
  2050  005F7A  61                 	db	97	;'a'
  2051  005F7B  64                 	db	100	;'d'
  2052  005F7C  00                 	db	0
  2053  005F7D                     STR_18:
  2054                           
  2055                           ; BSR set to: 2
  2056  005F7D  52                 	db	82	;'R'
  2057  005F7E  65                 	db	101	;'e'
  2058  005F7F  67                 	db	103	;'g'
  2059  005F80  69                 	db	105	;'i'
  2060  005F81  73                 	db	115	;'s'
  2061  005F82  74                 	db	116	;'t'
  2062  005F83  65                 	db	101	;'e'
  2063  005F84  72                 	db	114	;'r'
  2064  005F85  65                 	db	101	;'e'
  2065  005F86  64                 	db	100	;'d'
  2066  005F87  00                 	db	0
  2067  005F88                     STR_8:
  2068                           
  2069                           ; BSR set to: 2
  2070  005F88  43                 	db	67	;'C'
  2071  005F89  68                 	db	104	;'h'
  2072  005F8A  65                 	db	101	;'e'
  2073  005F8B  63                 	db	99	;'c'
  2074  005F8C  6B                 	db	107	;'k'
  2075  005F8D  20                 	db	32
  2076  005F8E  74                 	db	116	;'t'
  2077  005F8F  69                 	db	105	;'i'
  2078  005F90  6D                 	db	109	;'m'
  2079  005F91  65                 	db	101	;'e'
  2080  005F92  00                 	db	0
  2081  005F93                     STR_33:
  2082                           
  2083                           ; BSR set to: 2
  2084  005F93  41                 	db	65	;'A'
  2085  005F94  54                 	db	84	;'T'
  2086  005F95  2B                 	db	43
  2087  005F96  43                 	db	67	;'C'
  2088  005F97  52                 	db	82	;'R'
  2089  005F98  45                 	db	69	;'E'
  2090  005F99  47                 	db	71	;'G'
  2091  005F9A  3F                 	db	63	;'?'
  2092  005F9B  0D                 	db	13
  2093  005F9C  00                 	db	0
  2094  005F9D                     STR_9:
  2095                           
  2096                           ; BSR set to: 2
  2097  005F9D  41                 	db	65	;'A'
  2098  005F9E  54                 	db	84	;'T'
  2099  005F9F  2B                 	db	43
  2100  005FA0  43                 	db	67	;'C'
  2101  005FA1  43                 	db	67	;'C'
  2102  005FA2  4C                 	db	76	;'L'
  2103  005FA3  4B                 	db	75	;'K'
  2104  005FA4  3F                 	db	63	;'?'
  2105  005FA5  0D                 	db	13
  2106  005FA6  00                 	db	0
  2107  005FA7                     STR_14:
  2108                           
  2109                           ; BSR set to: 2
  2110  005FA7  4C                 	db	76	;'L'
  2111  005FA8  65                 	db	101	;'e'
  2112  005FA9  76                 	db	118	;'v'
  2113  005FAA  65                 	db	101	;'e'
  2114  005FAB  6C                 	db	108	;'l'
  2115  005FAC  3A                 	db	58	;':'
  2116  005FAD  20                 	db	32
  2117  005FAE  25                 	db	37
  2118  005FAF  75                 	db	117	;'u'
  2119  005FB0  00                 	db	0
  2120  005FB1                     STR_25:
  2121                           
  2122                           ; BSR set to: 2
  2123  005FB1  41                 	db	65	;'A'
  2124  005FB2  54                 	db	84	;'T'
  2125  005FB3  2B                 	db	43
  2126  005FB4  49                 	db	73	;'I'
  2127  005FB5  50                 	db	80	;'P'
  2128  005FB6  52                 	db	82	;'R'
  2129  005FB7  3F                 	db	63	;'?'
  2130  005FB8  0D                 	db	13
  2131  005FB9  00                 	db	0
  2132  005FBA                     STR_13:
  2133                           
  2134                           ; BSR set to: 2
  2135  005FBA  52                 	db	82	;'R'
  2136  005FBB  53                 	db	83	;'S'
  2137  005FBC  53                 	db	83	;'S'
  2138  005FBD  49                 	db	73	;'I'
  2139  005FBE  3A                 	db	58	;':'
  2140  005FBF  20                 	db	32
  2141  005FC0  25                 	db	37
  2142  005FC1  75                 	db	117	;'u'
  2143  005FC2  00                 	db	0
  2144  005FC3                     STR_37:
  2145                           
  2146                           ; BSR set to: 2
  2147  005FC3  41                 	db	65	;'A'
  2148  005FC4  54                 	db	84	;'T'
  2149  005FC5  2B                 	db	43
  2150  005FC6  43                 	db	67	;'C'
  2151  005FC7  53                 	db	83	;'S'
  2152  005FC8  51                 	db	81	;'Q'
  2153  005FC9  0D                 	db	13
  2154  005FCA  00                 	db	0
  2155  005FCB                     STR_34:
  2156                           
  2157                           ; BSR set to: 2
  2158  005FCB  2B                 	db	43
  2159  005FCC  43                 	db	67	;'C'
  2160  005FCD  52                 	db	82	;'R'
  2161  005FCE  45                 	db	69	;'E'
  2162  005FCF  47                 	db	71	;'G'
  2163  005FD0  3A                 	db	58	;':'
  2164  005FD1  20                 	db	32
  2165  005FD2  00                 	db	0
  2166  005FD3                     STR_41:
  2167                           
  2168                           ; BSR set to: 2
  2169  005FD3  28                 	db	40
  2170  005FD4  6E                 	db	110	;'n'
  2171  005FD5  75                 	db	117	;'u'
  2172  005FD6  6C                 	db	108	;'l'
  2173  005FD7  6C                 	db	108	;'l'
  2174  005FD8  29                 	db	41
  2175  005FD9  00                 	db	0
  2176  005FDA                     STR_38:
  2177                           
  2178                           ; BSR set to: 2
  2179  005FDA  2B                 	db	43
  2180  005FDB  43                 	db	67	;'C'
  2181  005FDC  53                 	db	83	;'S'
  2182  005FDD  51                 	db	81	;'Q'
  2183  005FDE  3A                 	db	58	;':'
  2184  005FDF  20                 	db	32
  2185  005FE0  00                 	db	0
  2186  005FE1                     STR_26:
  2187                           
  2188                           ; BSR set to: 2
  2189  005FE1  2B                 	db	43
  2190  005FE2  49                 	db	73	;'I'
  2191  005FE3  50                 	db	80	;'P'
  2192  005FE4  52                 	db	82	;'R'
  2193  005FE5  3A                 	db	58	;':'
  2194  005FE6  20                 	db	32
  2195  005FE7  00                 	db	0
  2196  005FE8                     STR_19:
  2197                           
  2198                           ; BSR set to: 2
  2199  005FE8  4F                 	db	79	;'O'
  2200  005FE9  74                 	db	116	;'t'
  2201  005FEA  68                 	db	104	;'h'
  2202  005FEB  65                 	db	101	;'e'
  2203  005FEC  72                 	db	114	;'r'
  2204  005FED  00                 	db	0
  2205  005FEE                     STR_23:
  2206                           
  2207                           ; BSR set to: 2
  2208  005FEE  41                 	db	65	;'A'
  2209  005FEF  54                 	db	84	;'T'
  2210  005FF0  0D                 	db	13
  2211  005FF1  00                 	db	0
  2212  005FF2                     
  2213                           ; BSR set to: 2
  2214  005FF2  25                 	db	37
  2215  005FF3  33                 	db	51	;'3'
  2216  005FF4  64                 	db	100	;'d'
  2217  005FF5  00                 	db	0
  2218  005FF6                     STR_11:
  2219                           
  2220                           ; BSR set to: 2
  2221  005FF6  25                 	db	37
  2222  005FF7  6C                 	db	108	;'l'
  2223  005FF8  75                 	db	117	;'u'
  2224  005FF9  00                 	db	0
  2225  005FFA                     STR_24:
  2226                           
  2227                           ; BSR set to: 2
  2228  005FFA  4F                 	db	79	;'O'
  2229  005FFB  4B                 	db	75	;'K'
  2230  005FFC  00                 	db	0
  2231  005FFD                     STR_36:
  2232                           
  2233                           ; BSR set to: 2
  2234  005FFD  2C                 	db	44
  2235  005FFE  00                 	db	0
  2236  0000                     
  2237                           ; #config settings
  2238  005FFF  00                 	db	0	; dummy byte at the end
  2239  0000                     
  2240                           	psect	cinit
  2241  0023E6                     __pcinit:
  2242                           	opt callstack 0
  2243  0023E6                     start_initialization:
  2244                           	opt callstack 0
  2245  0023E6                     __initialization:
  2246                           	opt callstack 0
  2247                           
  2248                           ; Initialize objects allocated to BANK0 (6 bytes)
  2249                           ; load TBLPTR registers with __pidataBANK0
  2250  0023E6  0E9E               	movlw	low __pidataBANK0
  2251  0023E8  6EF6               	movwf	tblptrl,c
  2252  0023EA  0E2B               	movlw	high __pidataBANK0
  2253  0023EC  6EF7               	movwf	tblptrh,c
  2254  0023EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2255  0023F0  6EF8               	movwf	tblptru,c
  2256  0023F2  EE00  F0CA         	lfsr	0,__pdataBANK0
  2257  0023F6  EE10 F006          	lfsr	1,6
  2258  0023FA                     copy_data0:
  2259  0023FA  0009               	tblrd		*+
  2260  0023FC  CFF5 FFEE          	movff	tablat,postinc0
  2261  002400  50E5               	movf	postdec1,w,c
  2262  002402  50E1               	movf	fsr1l,w,c
  2263  002404  E1FA               	bnz	copy_data0
  2264                           
  2265                           ; Initialize objects allocated to COMRAM (2 bytes)
  2266                           ; load TBLPTR registers with __pidataCOMRAM
  2267  002406  0EAA               	movlw	low __pidataCOMRAM
  2268  002408  6EF6               	movwf	tblptrl,c
  2269  00240A  0E2B               	movlw	high __pidataCOMRAM
  2270  00240C  6EF7               	movwf	tblptrh,c
  2271  00240E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2272  002410  6EF8               	movwf	tblptru,c
  2273  002412  0009               	tblrd		*+	;fetch initializer
  2274  002414  CFF5 F058          	movff	tablat,__pdataCOMRAM
  2275  002418  0009               	tblrd		*+	;fetch initializer
  2276  00241A  CFF5 F059          	movff	tablat,__pdataCOMRAM+1
  2277                           
  2278                           ; Clear objects allocated to BANK2 (130 bytes)
  2279  00241E  EE02  F000         	lfsr	0,__pbssBANK2
  2280  002422  0E82               	movlw	130
  2281  002424                     clear_0:
  2282  002424  6AEE               	clrf	postinc0,c
  2283  002426  06E8               	decf	wreg,f,c
  2284  002428  E1FD               	bnz	clear_0
  2285                           
  2286                           ; Clear objects allocated to BANK1 (24 bytes)
  2287  00242A  EE01  F0AD         	lfsr	0,__pbssBANK1
  2288  00242E  0E18               	movlw	24
  2289  002430                     clear_1:
  2290  002430  6AEE               	clrf	postinc0,c
  2291  002432  06E8               	decf	wreg,f,c
  2292  002434  E1FD               	bnz	clear_1
  2293                           
  2294                           ; Clear objects allocated to BANK0 (26 bytes)
  2295  002436  EE00  F0B0         	lfsr	0,__pbssBANK0
  2296  00243A  0E1A               	movlw	26
  2297  00243C                     clear_2:
  2298  00243C  6AEE               	clrf	postinc0,c
  2299  00243E  06E8               	decf	wreg,f,c
  2300  002440  E1FD               	bnz	clear_2
  2301                           
  2302                           ; Clear objects allocated to COMRAM (2 bytes)
  2303  002442  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2304  002444  6A56               	clrf	__pbssCOMRAM& (0+255),c
  2305  002446                     end_of_initialization:
  2306                           	opt callstack 0
  2307  002446                     __end_of__initialization:
  2308                           	opt callstack 0
  2309  002446  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2310  002448  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2311  00244A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2312  00244C  6EF8               	movwf	tblptru,c
  2313  00244E  0100               	movlb	0
  2314  002450  EF87  F015         	goto	_main	;jump to C main() function
  2315                           
  2316                           	psect	bssCOMRAM
  2317  000056                     __pbssCOMRAM:
  2318                           	opt callstack 0
  2319  000056                     _ECG_FLAGS:
  2320                           	opt callstack 0
  2321  000056                     	ds	2
  2322                           
  2323                           	psect	dataCOMRAM
  2324  000058                     __pdataCOMRAM:
  2325                           	opt callstack 0
  2326  000058                     _Ecg_Y:
  2327                           	opt callstack 0
  2328  000058                     	ds	2
  2329                           
  2330                           	psect	bssBANK0
  2331  0000B0                     __pbssBANK0:
  2332                           	opt callstack 0
  2333  0000B0                     _ECG_HEARTBEAT:
  2334                           	opt callstack 0
  2335  0000B0                     	ds	13
  2336  0000BD                     _ECG_BUFFER:
  2337                           	opt callstack 0
  2338  0000BD                     	ds	5
  2339  0000C2                     _ECG_HEARTRATE:
  2340                           	opt callstack 0
  2341  0000C2                     	ds	4
  2342  0000C6                     strtok@sp:
  2343                           	opt callstack 0
  2344  0000C6                     	ds	2
  2345  0000C8                     _consoleX:
  2346                           	opt callstack 0
  2347  0000C8                     	ds	2
  2348                           
  2349                           	psect	dataBANK0
  2350  0000CA                     __pdataBANK0:
  2351                           	opt callstack 0
  2352  0000CA                     _Ecg_Yold:
  2353                           	opt callstack 0
  2354  0000CA                     	ds	2
  2355  0000CC                     _Ecg_Xold:
  2356                           	opt callstack 0
  2357  0000CC                     	ds	2
  2358  0000CE                     _Ecg_X:
  2359                           	opt callstack 0
  2360  0000CE                     	ds	2
  2361                           
  2362                           	psect	bssBANK1
  2363  0001AD                     __pbssBANK1:
  2364                           	opt callstack 0
  2365  0001AD                     _tmp5:
  2366                           	opt callstack 0
  2367  0001AD                     	ds	4
  2368  0001B1                     _tmp4:
  2369                           	opt callstack 0
  2370  0001B1                     	ds	4
  2371  0001B5                     _tmp3:
  2372                           	opt callstack 0
  2373  0001B5                     	ds	4
  2374  0001B9                     _tmp2:
  2375                           	opt callstack 0
  2376  0001B9                     	ds	4
  2377  0001BD                     _tmp1:
  2378                           	opt callstack 0
  2379  0001BD                     	ds	4
  2380  0001C1                     _MILLISECONDS:
  2381                           	opt callstack 0
  2382  0001C1                     	ds	4
  2383                           
  2384                           	psect	bssBANK2
  2385  000200                     __pbssBANK2:
  2386                           	opt callstack 0
  2387  000200                     _EUSART_RX:
  2388                           	opt callstack 0
  2389  000200                     	ds	130
  2390                           
  2391                           	psect	cstackBANK1
  2392  000100                     __pcstackBANK1:
  2393                           	opt callstack 0
  2394  000100                     loop@response:
  2395                           	opt callstack 0
  2396                           
  2397                           ; 32 bytes @ 0x0
  2398  000100                     	ds	32
  2399  000120                     loop@zzzz_161:
  2400                           	opt callstack 0
  2401                           
  2402                           ; 32 bytes @ 0x20
  2403  000120                     	ds	32
  2404  000140                     loop@zzzz_169:
  2405                           	opt callstack 0
  2406                           
  2407                           ; 32 bytes @ 0x40
  2408  000140                     	ds	32
  2409  000160                     loop@zzzz_164:
  2410                           	opt callstack 0
  2411                           
  2412                           ; 32 bytes @ 0x60
  2413  000160                     	ds	32
  2414  000180                     loop@zzzz:
  2415                           	opt callstack 0
  2416                           
  2417                           ; 32 bytes @ 0x80
  2418  000180                     	ds	32
  2419  0001A0                     _loop$151:
  2420                           	opt callstack 0
  2421                           
  2422                           ; 2 bytes @ 0xA0
  2423  0001A0                     	ds	2
  2424  0001A2                     _loop$156:
  2425                           	opt callstack 0
  2426                           
  2427                           ; 2 bytes @ 0xA2
  2428  0001A2                     	ds	2
  2429  0001A4                     _loop$176:
  2430                           	opt callstack 0
  2431                           
  2432                           ; 2 bytes @ 0xA4
  2433  0001A4                     	ds	2
  2434  0001A6                     _loop$177:
  2435                           	opt callstack 0
  2436                           
  2437                           ; 2 bytes @ 0xA6
  2438  0001A6                     	ds	2
  2439  0001A8                     loop@zz:
  2440                           	opt callstack 0
  2441                           
  2442                           ; 4 bytes @ 0xA8
  2443  0001A8                     	ds	4
  2444  0001AC                     loop@ns:
  2445                           	opt callstack 0
  2446                           
  2447                           ; 1 bytes @ 0xAC
  2448  0001AC                     	ds	1
  2449                           
  2450                           	psect	cstackBANK0
  2451  000060                     __pcstackBANK0:
  2452                           	opt callstack 0
  2453  000060                     sprintf@prec:
  2454                           	opt callstack 0
  2455  000060                     A6_Process_Random_Comms@response:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 32 bytes @ 0x0
  2459  000060                     	ds	2
  2460  000062                     sprintf@cp:
  2461                           	opt callstack 0
  2462                           
  2463                           ; 2 bytes @ 0x2
  2464  000062                     	ds	2
  2465  000064                     sprintf@len:
  2466                           	opt callstack 0
  2467                           
  2468                           ; 2 bytes @ 0x4
  2469  000064                     	ds	2
  2470  000066                     sprintf@val:
  2471                           	opt callstack 0
  2472                           
  2473                           ; 4 bytes @ 0x6
  2474  000066                     	ds	4
  2475  00006A                     sprintf@flag:
  2476                           	opt callstack 0
  2477                           
  2478                           ; 1 bytes @ 0xA
  2479  00006A                     	ds	1
  2480  00006B                     sprintf@ap:
  2481                           	opt callstack 0
  2482                           
  2483                           ; 2 bytes @ 0xB
  2484  00006B                     	ds	2
  2485  00006D                     sprintf@width:
  2486                           	opt callstack 0
  2487                           
  2488                           ; 2 bytes @ 0xD
  2489  00006D                     	ds	2
  2490  00006F                     sprintf@c:
  2491                           	opt callstack 0
  2492                           
  2493                           ; 1 bytes @ 0xF
  2494  00006F                     	ds	1
  2495  000070                     ?_A6_BaudRateSet:
  2496                           	opt callstack 0
  2497  000070                     A6_BaudRateSet@baudRate:
  2498                           	opt callstack 0
  2499  000070                     A6_BaudRateAutoDetect@zzzz:
  2500                           	opt callstack 0
  2501                           
  2502                           ; 32 bytes @ 0x10
  2503  000070                     	ds	4
  2504  000074                     A6_BaudRateSet@response:
  2505                           	opt callstack 0
  2506                           
  2507                           ; 32 bytes @ 0x14
  2508  000074                     	ds	12
  2509  000080                     A6_Process_Random_Comms@cnt:
  2510                           	opt callstack 0
  2511                           
  2512                           ; 1 bytes @ 0x20
  2513  000080                     	ds	16
  2514  000090                     A6_BaudRateAutoDetect@i:
  2515                           	opt callstack 0
  2516                           
  2517                           ; 1 bytes @ 0x30
  2518  000090                     	ds	4
  2519  000094                     A6_BaudRateSet@request:
  2520                           	opt callstack 0
  2521                           
  2522                           ; 20 bytes @ 0x34
  2523  000094                     	ds	20
  2524  0000A8                     A6_BaudRateSet@currentBaudRate:
  2525                           	opt callstack 0
  2526                           
  2527                           ; 4 bytes @ 0x48
  2528  0000A8                     	ds	4
  2529  0000AC                     ??_loop:
  2530                           
  2531                           ; 1 bytes @ 0x4C
  2532  0000AC                     	ds	4
  2533                           
  2534                           	psect	cstackCOMRAM
  2535  000001                     __pcstackCOMRAM:
  2536                           	opt callstack 0
  2537  000001                     ??_Ecg_Interrupt:
  2538  000001                     ??_EUSART_RX_Interrupt:
  2539  000001                     
  2540                           ; 4 bytes @ 0x0
  2541  000001                     	ds	1
  2542  000002                     EUSART_RX_Interrupt@c:
  2543                           	opt callstack 0
  2544                           
  2545                           ; 1 bytes @ 0x1
  2546  000002                     	ds	1
  2547  000003                     ??_isr:
  2548                           
  2549                           ; 1 bytes @ 0x2
  2550  000003                     	ds	2
  2551  000005                     ??_init:
  2552  000005                     ??_isdigit:
  2553  000005                     ??_TFT_Reset:
  2554  000005                     ?_abs:
  2555                           	opt callstack 0
  2556  000005                     ?_Ecg_CheckLeads:
  2557                           	opt callstack 0
  2558  000005                     ?_strcmp:
  2559                           	opt callstack 0
  2560  000005                     ?_strlen:
  2561                           	opt callstack 0
  2562  000005                     ?_strchr:
  2563                           	opt callstack 0
  2564  000005                     ?___wmul:
  2565                           	opt callstack 0
  2566  000005                     ?___awdiv:
  2567                           	opt callstack 0
  2568  000005                     ?___lmul:
  2569                           	opt callstack 0
  2570  000005                     ?___lldiv:
  2571                           	opt callstack 0
  2572  000005                     EUSART_TX_Char@c:
  2573                           	opt callstack 0
  2574  000005                     TFT_WriteRegister@reg:
  2575                           	opt callstack 0
  2576  000005                     EUSART_RX_AvailableData@timeout:
  2577                           	opt callstack 0
  2578  000005                     ___wmul@multiplier:
  2579                           	opt callstack 0
  2580  000005                     ___awdiv@dividend:
  2581                           	opt callstack 0
  2582  000005                     abs@a:
  2583                           	opt callstack 0
  2584  000005                     memset@p1:
  2585                           	opt callstack 0
  2586  000005                     strcmp@s1:
  2587                           	opt callstack 0
  2588  000005                     strlen@s:
  2589                           	opt callstack 0
  2590  000005                     strchr@ptr:
  2591                           	opt callstack 0
  2592  000005                     sleepMS@ms:
  2593                           	opt callstack 0
  2594  000005                     ___lmul@multiplier:
  2595                           	opt callstack 0
  2596  000005                     ___lldiv@dividend:
  2597                           	opt callstack 0
  2598                           
  2599                           ; 4 bytes @ 0x4
  2600  000005                     	ds	1
  2601  000006                     _isdigit$1927:
  2602                           	opt callstack 0
  2603                           
  2604                           ; 1 bytes @ 0x5
  2605  000006                     	ds	1
  2606  000007                     ??_abs:
  2607  000007                     ??_Ecg_CheckLeads:
  2608  000007                     ??_EUSART_RX_AvailableData:
  2609  000007                     isdigit@c:
  2610                           	opt callstack 0
  2611  000007                     TFT_WriteRegister@data:
  2612                           	opt callstack 0
  2613  000007                     ___wmul@multiplicand:
  2614                           	opt callstack 0
  2615  000007                     ___awdiv@divisor:
  2616                           	opt callstack 0
  2617  000007                     memset@c:
  2618                           	opt callstack 0
  2619  000007                     strcmp@s2:
  2620                           	opt callstack 0
  2621  000007                     strlen@cp:
  2622                           	opt callstack 0
  2623  000007                     strchr@chr:
  2624                           	opt callstack 0
  2625                           
  2626                           ; 2 bytes @ 0x6
  2627  000007                     	ds	1
  2628  000008                     Ecg_CheckLeads@leadsStatus:
  2629                           	opt callstack 0
  2630                           
  2631                           ; 1 bytes @ 0x7
  2632  000008                     	ds	1
  2633  000009                     ??_strcmp:
  2634  000009                     ??_strchr:
  2635  000009                     ?_strncmp:
  2636                           	opt callstack 0
  2637  000009                     TFT_WriteRegister@h:
  2638                           	opt callstack 0
  2639  000009                     ___awdiv@counter:
  2640                           	opt callstack 0
  2641  000009                     EUSART_TX_String@str:
  2642                           	opt callstack 0
  2643  000009                     ___wmul@product:
  2644                           	opt callstack 0
  2645  000009                     memset@n:
  2646                           	opt callstack 0
  2647  000009                     strncmp@s1:
  2648                           	opt callstack 0
  2649  000009                     sleepMS@t:
  2650                           	opt callstack 0
  2651  000009                     ___lmul@multiplicand:
  2652                           	opt callstack 0
  2653  000009                     ___lldiv@divisor:
  2654                           	opt callstack 0
  2655                           
  2656                           ; 4 bytes @ 0x8
  2657  000009                     	ds	1
  2658  00000A                     TFT_WriteRegister@l:
  2659                           	opt callstack 0
  2660  00000A                     ___awdiv@sign:
  2661                           	opt callstack 0
  2662                           
  2663                           ; 1 bytes @ 0x9
  2664  00000A                     	ds	1
  2665  00000B                     ?_atoi:
  2666                           	opt callstack 0
  2667  00000B                     ?_strspn:
  2668                           	opt callstack 0
  2669  00000B                     ?_strcspn:
  2670                           	opt callstack 0
  2671  00000B                     TFT_WriteRegister@h_745:
  2672                           	opt callstack 0
  2673  00000B                     EUSART_TX_String@len:
  2674                           	opt callstack 0
  2675  00000B                     strcmp@r:
  2676                           	opt callstack 0
  2677  00000B                     ___awdiv@quotient:
  2678                           	opt callstack 0
  2679  00000B                     atoi@s:
  2680                           	opt callstack 0
  2681  00000B                     memset@p:
  2682                           	opt callstack 0
  2683  00000B                     strcspn@s1:
  2684                           	opt callstack 0
  2685  00000B                     strncmp@s2:
  2686                           	opt callstack 0
  2687  00000B                     strspn@s1:
  2688                           	opt callstack 0
  2689  00000B                     EUSART_RX_AvailableData@t:
  2690                           	opt callstack 0
  2691                           
  2692                           ; 4 bytes @ 0xA
  2693  00000B                     	ds	1
  2694  00000C                     TFT_WriteRegister@l_746:
  2695                           	opt callstack 0
  2696                           
  2697                           ; 1 bytes @ 0xB
  2698  00000C                     	ds	1
  2699  00000D                     ??_atoi:
  2700  00000D                     TFT_SetAddrWindow@x1:
  2701                           	opt callstack 0
  2702  00000D                     TFT_DrawPixel@x:
  2703                           	opt callstack 0
  2704  00000D                     TFT_Flood@color:
  2705                           	opt callstack 0
  2706  00000D                     strcspn@s2:
  2707                           	opt callstack 0
  2708  00000D                     strncmp@len:
  2709                           	opt callstack 0
  2710  00000D                     strspn@s2:
  2711                           	opt callstack 0
  2712  00000D                     ___lmul@product:
  2713                           	opt callstack 0
  2714  00000D                     ___lldiv@quotient:
  2715                           	opt callstack 0
  2716                           
  2717                           ; 4 bytes @ 0xC
  2718  00000D                     	ds	2
  2719  00000F                     ??_strncmp:
  2720  00000F                     ??_strspn:
  2721  00000F                     ??_strcspn:
  2722  00000F                     atoi@sign:
  2723                           	opt callstack 0
  2724  00000F                     TFT_SetAddrWindow@y1:
  2725                           	opt callstack 0
  2726  00000F                     TFT_DrawPixel@y:
  2727                           	opt callstack 0
  2728  00000F                     EUSART_BufferGetChar@timeout:
  2729                           	opt callstack 0
  2730  00000F                     TFT_Flood@len:
  2731                           	opt callstack 0
  2732                           
  2733                           ; 4 bytes @ 0xE
  2734  00000F                     	ds	1
  2735  000010                     ?_strstr:
  2736                           	opt callstack 0
  2737  000010                     atoi@a:
  2738                           	opt callstack 0
  2739  000010                     strstr@s1:
  2740                           	opt callstack 0
  2741  000010                     strcspn@i:
  2742                           	opt callstack 0
  2743  000010                     strspn@i:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 2 bytes @ 0xF
  2747  000010                     	ds	1
  2748  000011                     ?_atol:
  2749                           	opt callstack 0
  2750  000011                     ___lldiv@counter:
  2751                           	opt callstack 0
  2752  000011                     TFT_SetAddrWindow@x2:
  2753                           	opt callstack 0
  2754  000011                     TFT_DrawPixel@color:
  2755                           	opt callstack 0
  2756  000011                     A6_ReadLine@response:
  2757                           	opt callstack 0
  2758  000011                     atol@s:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x10
  2762  000011                     	ds	1
  2763  000012                     ?_strtok:
  2764                           	opt callstack 0
  2765  000012                     ?___llmod:
  2766                           	opt callstack 0
  2767  000012                     strstr@s2:
  2768                           	opt callstack 0
  2769  000012                     strtok@s1:
  2770                           	opt callstack 0
  2771  000012                     EUSART_BaudRateSet@baudRate:
  2772                           	opt callstack 0
  2773  000012                     ___llmod@dividend:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 4 bytes @ 0x11
  2777  000012                     	ds	1
  2778  000013                     ??_TFT_Flood:
  2779  000013                     A6_ReadLine@responseLen:
  2780                           	opt callstack 0
  2781  000013                     TFT_SetAddrWindow@y2:
  2782                           	opt callstack 0
  2783  000013                     TFT_DrawLine@x0:
  2784                           	opt callstack 0
  2785                           
  2786                           ; 2 bytes @ 0x12
  2787  000013                     	ds	1
  2788  000014                     A6_ReadLine@timeout:
  2789                           	opt callstack 0
  2790  000014                     strtok@s2:
  2791                           	opt callstack 0
  2792                           
  2793                           ; 2 bytes @ 0x13
  2794  000014                     	ds	1
  2795  000015                     ??_atol:
  2796  000015                     TFT_DrawLine@y0:
  2797                           	opt callstack 0
  2798                           
  2799                           ; 2 bytes @ 0x14
  2800  000015                     	ds	1
  2801  000016                     ??_EUSART_BaudRateSet:
  2802  000016                     A6_ReadLine@iResponse:
  2803                           	opt callstack 0
  2804  000016                     ___llmod@divisor:
  2805                           	opt callstack 0
  2806                           
  2807                           ; 4 bytes @ 0x15
  2808  000016                     	ds	1
  2809  000017                     A6_ReadLine@c:
  2810                           	opt callstack 0
  2811  000017                     TFT_DrawLine@x1:
  2812                           	opt callstack 0
  2813  000017                     TFT_Flood@blocks:
  2814                           	opt callstack 0
  2815                           
  2816                           ; 2 bytes @ 0x16
  2817  000017                     	ds	1
  2818  000018                     A6_Command@command:
  2819                           	opt callstack 0
  2820                           
  2821                           ; 2 bytes @ 0x17
  2822  000018                     	ds	1
  2823  000019                     TFT_Flood@i:
  2824                           	opt callstack 0
  2825  000019                     atol@sign:
  2826                           	opt callstack 0
  2827  000019                     TFT_DrawLine@y1:
  2828                           	opt callstack 0
  2829                           
  2830                           ; 2 bytes @ 0x18
  2831  000019                     	ds	1
  2832  00001A                     TFT_Flood@color_hi:
  2833                           	opt callstack 0
  2834  00001A                     ___llmod@counter:
  2835                           	opt callstack 0
  2836  00001A                     A6_Command@timeout:
  2837                           	opt callstack 0
  2838  00001A                     EUSART_BaudRateSet@tmp:
  2839                           	opt callstack 0
  2840  00001A                     atol@a:
  2841                           	opt callstack 0
  2842                           
  2843                           ; 4 bytes @ 0x19
  2844  00001A                     	ds	1
  2845  00001B                     TFT_Flood@color_lo:
  2846                           	opt callstack 0
  2847  00001B                     TFT_DrawLine@color:
  2848                           	opt callstack 0
  2849                           
  2850                           ; 2 bytes @ 0x1A
  2851  00001B                     	ds	1
  2852  00001C                     TFT_DrawFillRect@x:
  2853                           	opt callstack 0
  2854  00001C                     TFT_FillScreen@color:
  2855                           	opt callstack 0
  2856  00001C                     A6_Command@response:
  2857                           	opt callstack 0
  2858                           
  2859                           ; 2 bytes @ 0x1B
  2860  00001C                     	ds	1
  2861  00001D                     ??_TFT_DrawLine:
  2862                           
  2863                           ; 1 bytes @ 0x1C
  2864  00001D                     	ds	1
  2865  00001E                     ??_TFT_Init:
  2866  00001E                     A6_Command@responseLen:
  2867                           	opt callstack 0
  2868  00001E                     atol@c:
  2869                           	opt callstack 0
  2870  00001E                     TFT_DrawFillRect@y:
  2871                           	opt callstack 0
  2872                           
  2873                           ; 2 bytes @ 0x1D
  2874  00001E                     	ds	1
  2875  00001F                     ?_A6_BaudRateGet:
  2876                           	opt callstack 0
  2877  00001F                     A6_IsAlive@response:
  2878                           	opt callstack 0
  2879  00001F                     A6_NetworkGetStatus@response:
  2880                           	opt callstack 0
  2881  00001F                     A6_NetworkGetRSSI@response:
  2882                           	opt callstack 0
  2883                           
  2884                           ; 32 bytes @ 0x1E
  2885  00001F                     	ds	1
  2886  000020                     TFT_Init@data:
  2887                           	opt callstack 0
  2888  000020                     TFT_DrawLine@t:
  2889                           	opt callstack 0
  2890  000020                     TFT_DrawFillRect@w:
  2891                           	opt callstack 0
  2892                           
  2893                           ; 2 bytes @ 0x1F
  2894  000020                     	ds	2
  2895  000022                     TFT_Init@initSequenceSize:
  2896                           	opt callstack 0
  2897  000022                     TFT_DrawLine@t_790:
  2898                           	opt callstack 0
  2899  000022                     TFT_DrawFillRect@h:
  2900                           	opt callstack 0
  2901                           
  2902                           ; 2 bytes @ 0x21
  2903  000022                     	ds	1
  2904  000023                     A6_BaudRateGet@response:
  2905                           	opt callstack 0
  2906                           
  2907                           ; 32 bytes @ 0x22
  2908  000023                     	ds	1
  2909  000024                     TFT_Init@cmd:
  2910                           	opt callstack 0
  2911  000024                     TFT_DrawLine@t_791:
  2912                           	opt callstack 0
  2913  000024                     TFT_DrawFillRect@color:
  2914                           	opt callstack 0
  2915                           
  2916                           ; 2 bytes @ 0x23
  2917  000024                     	ds	2
  2918  000026                     ??_TFT_DrawFillRect:
  2919  000026                     TFT_Init@i:
  2920                           	opt callstack 0
  2921  000026                     TFT_DrawLine@t_792:
  2922                           	opt callstack 0
  2923                           
  2924                           ; 2 bytes @ 0x25
  2925  000026                     	ds	2
  2926  000028                     TFT_DrawLine@dy:
  2927                           	opt callstack 0
  2928                           
  2929                           ; 2 bytes @ 0x27
  2930  000028                     	ds	2
  2931  00002A                     TFT_DrawLine@ystep:
  2932                           	opt callstack 0
  2933  00002A                     TFT_DrawChar@x:
  2934                           	opt callstack 0
  2935                           
  2936                           ; 2 bytes @ 0x29
  2937  00002A                     	ds	2
  2938  00002C                     TFT_DrawLine@err:
  2939                           	opt callstack 0
  2940  00002C                     TFT_DrawChar@y:
  2941                           	opt callstack 0
  2942                           
  2943                           ; 2 bytes @ 0x2B
  2944  00002C                     	ds	2
  2945  00002E                     TFT_DrawChar@c:
  2946                           	opt callstack 0
  2947  00002E                     TFT_DrawLine@steep:
  2948                           	opt callstack 0
  2949                           
  2950                           ; 2 bytes @ 0x2D
  2951  00002E                     	ds	1
  2952  00002F                     TFT_DrawChar@color:
  2953                           	opt callstack 0
  2954                           
  2955                           ; 2 bytes @ 0x2E
  2956  00002F                     	ds	1
  2957  000030                     TFT_DrawLine@dx:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 2 bytes @ 0x2F
  2961  000030                     	ds	1
  2962  000031                     TFT_DrawChar@bg:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 2 bytes @ 0x30
  2966  000031                     	ds	2
  2967  000033                     TFT_DrawChar@size:
  2968                           	opt callstack 0
  2969                           
  2970                           ; 1 bytes @ 0x32
  2971  000033                     	ds	1
  2972  000034                     ??_TFT_DrawChar:
  2973                           
  2974                           ; 1 bytes @ 0x33
  2975  000034                     	ds	4
  2976  000038                     TFT_DrawChar@line:
  2977                           	opt callstack 0
  2978                           
  2979                           ; 1 bytes @ 0x37
  2980  000038                     	ds	1
  2981  000039                     _TFT_DrawChar$2198:
  2982                           	opt callstack 0
  2983                           
  2984                           ; 2 bytes @ 0x38
  2985  000039                     	ds	2
  2986  00003B                     _TFT_DrawChar$2199:
  2987                           	opt callstack 0
  2988                           
  2989                           ; 2 bytes @ 0x3A
  2990  00003B                     	ds	2
  2991  00003D                     TFT_DrawChar@j:
  2992                           	opt callstack 0
  2993                           
  2994                           ; 1 bytes @ 0x3C
  2995  00003D                     	ds	1
  2996  00003E                     TFT_DrawChar@i:
  2997                           	opt callstack 0
  2998                           
  2999                           ; 1 bytes @ 0x3D
  3000  00003E                     	ds	1
  3001  00003F                     TFT_DrawString@x:
  3002                           	opt callstack 0
  3003  00003F                     A6_NetworkGetStatus@networkStatusToken:
  3004                           	opt callstack 0
  3005  00003F                     A6_NetworkGetRSSI@RSSIToken:
  3006                           	opt callstack 0
  3007                           
  3008                           ; 2 bytes @ 0x3E
  3009  00003F                     	ds	2
  3010  000041                     A6_NetworkGetRSSILevel@RSSI:
  3011                           	opt callstack 0
  3012  000041                     TFT_DrawString@y:
  3013                           	opt callstack 0
  3014                           
  3015                           ; 2 bytes @ 0x40
  3016  000041                     	ds	2
  3017  000043                     TFT_DrawString@str:
  3018                           	opt callstack 0
  3019  000043                     A6_BaudRateGet@baudRate:
  3020                           	opt callstack 0
  3021                           
  3022                           ; 4 bytes @ 0x42
  3023  000043                     	ds	2
  3024  000045                     TFT_DrawString@color:
  3025                           	opt callstack 0
  3026                           
  3027                           ; 2 bytes @ 0x44
  3028  000045                     	ds	2
  3029  000047                     TFT_DrawString@bg:
  3030                           	opt callstack 0
  3031  000047                     A6_BaudRateGet@baudRateToken:
  3032                           	opt callstack 0
  3033                           
  3034                           ; 2 bytes @ 0x46
  3035  000047                     	ds	2
  3036  000049                     TFT_DrawString@size:
  3037                           	opt callstack 0
  3038  000049                     A6_BaudRateGet@j:
  3039                           	opt callstack 0
  3040                           
  3041                           ; 1 bytes @ 0x48
  3042  000049                     	ds	1
  3043  00004A                     ?_sprintf:
  3044                           	opt callstack 0
  3045  00004A                     printLine@str:
  3046                           	opt callstack 0
  3047  00004A                     sprintf@sp:
  3048                           	opt callstack 0
  3049                           
  3050                           ; 2 bytes @ 0x49
  3051  00004A                     	ds	2
  3052  00004C                     printLine@color:
  3053                           	opt callstack 0
  3054  00004C                     sprintf@f:
  3055                           	opt callstack 0
  3056                           
  3057                           ; 2 bytes @ 0x4B
  3058  00004C                     	ds	2
  3059  00004E                     
  3060                           ; 1 bytes @ 0x4D
  3061  00004E                     	ds	4
  3062  000052                     ??_sprintf:
  3063                           
  3064                           ; 1 bytes @ 0x51
  3065  000052                     	ds	4
  3066  000056                     
  3067                           ; 1 bytes @ 0x55
  3068 ;;
  3069 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3070 ;;
  3071 ;; *************** function _main *****************
  3072 ;; Defined at:
  3073 ;;		line 12 in file "main.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0
  3088 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3090 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3091 ;;Total ram usage:        0 bytes
  3092 ;; Hardware stack levels required when called:   11
  3093 ;; This function calls:
  3094 ;;		_A6_Init
  3095 ;;		_EUSART_Init
  3096 ;;		_Ecg_Init
  3097 ;;		_TFT_Init
  3098 ;;		_init
  3099 ;;		_loop
  3100 ;; This function is called by:
  3101 ;;		Startup code after reset
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text0
  3106  002B0E                     __ptext0:
  3107                           	opt callstack 0
  3108  002B0E                     _main:
  3109                           	opt callstack 20
  3110  002B0E                     
  3111                           ;main.c: 14: init();
  3112  002B0E  ECBA  F011         	call	_init	;wreg free
  3113  002B12                     
  3114                           ;main.c: 15: TFT_Init();
  3115  002B12  ECC4  F00B         	call	_TFT_Init	;wreg free
  3116  002B16                     
  3117                           ;main.c: 16: EUSART_Init();
  3118  002B16  ECFA  F013         	call	_EUSART_Init	;wreg free
  3119  002B1A                     
  3120                           ;main.c: 17: Ecg_Init();
  3121  002B1A  EC49  F015         	call	_Ecg_Init	;wreg free
  3122  002B1E                     
  3123                           ;main.c: 18: A6_Init();
  3124  002B1E  ECB6  F015         	call	_A6_Init	;wreg free
  3125  002B22                     l4522:
  3126  002B22  EC09  F000         	call	_loop	;wreg free
  3127  002B26  EF91  F015         	goto	l4522
  3128  002B2A  EF07  F000         	goto	start
  3129  002B2E                     __end_of_main:
  3130                           	opt callstack 0
  3131                           
  3132 ;; *************** function _loop *****************
  3133 ;; Defined at:
  3134 ;;		line 28 in file "main.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  zzzz           32   64[BANK1 ] unsigned char [32]
  3139 ;;  ns              1  172[BANK1 ] unsigned char 
  3140 ;;  zzzz           32   96[BANK1 ] unsigned char [32]
  3141 ;;  zzzz           32   32[BANK1 ] unsigned char [32]
  3142 ;;  response       32    0[BANK1 ] unsigned char [32]
  3143 ;;  zzzz           32  128[BANK1 ] unsigned char [32]
  3144 ;;  zz              4  168[BANK1 ] unsigned long 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3154 ;;      Params:         0       0       0       0       0       0       0       0       0
  3155 ;;      Locals:         0       0     173       0       0       0       0       0       0
  3156 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3157 ;;      Totals:         0       4     173       0       0       0       0       0       0
  3158 ;;Total ram usage:      177 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:   10
  3161 ;; This function calls:
  3162 ;;		_A6_BaudRateAutoDetect
  3163 ;;		_A6_BaudRateGet
  3164 ;;		_A6_BaudRateSet
  3165 ;;		_A6_Command
  3166 ;;		_A6_IsAlive
  3167 ;;		_A6_NetworkGetRSSI
  3168 ;;		_A6_NetworkGetRSSILevel
  3169 ;;		_A6_NetworkGetStatus
  3170 ;;		_A6_Process_Random_Comms
  3171 ;;		_printLine
  3172 ;;		_sprintf
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text1
  3179  000012                     __ptext1:
  3180                           	opt callstack 0
  3181  000012                     _loop:
  3182                           	opt callstack 20
  3183  000012                     
  3184                           ;main.c: 31: A6_Process_Random_Comms();
  3185  000012  EC34  F00F         	call	_A6_Process_Random_Comms	;wreg free
  3186  000016                     
  3187                           ;main.c: 33: if((MILLISECONDS > 20000) && (tmp4 < (MILLISECONDS - 20000))) {
  3188  000016  0101               	movlb	1	; () banked
  3189  000018  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3190  00001A  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3191  00001C  E10B               	bnz	u3490
  3192  00001E  0E21               	movlw	33
  3193  000020  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3194  000022  0E4E               	movlw	78
  3195  000024  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3196  000026  A0D8               	btfss	status,0,c
  3197  000028  EF18  F000         	goto	u3491
  3198  00002C  EF1A  F000         	goto	u3490
  3199  000030                     u3491:
  3200  000030  EF78  F001         	goto	l4334
  3201  000034                     u3490:
  3202  000034                     
  3203                           ; BSR set to: 1
  3204  000034  0EE0               	movlw	224
  3205  000036  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3206  000038  0100               	movlb	0	; () banked
  3207  00003A  6FAC               	movwf	??_loop& (0+255),b
  3208  00003C  0EB1               	movlw	177
  3209  00003E  0101               	movlb	1	; () banked
  3210  000040  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3211  000042  0100               	movlb	0	; () banked
  3212  000044  6FAD               	movwf	(??_loop+1)& (0+255),b
  3213  000046  0EFF               	movlw	255
  3214  000048  0101               	movlb	1	; () banked
  3215  00004A  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3216  00004C  0100               	movlb	0	; () banked
  3217  00004E  6FAE               	movwf	(??_loop+2)& (0+255),b
  3218  000050  0EFF               	movlw	255
  3219  000052  0101               	movlb	1	; () banked
  3220  000054  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3221  000056  0100               	movlb	0	; () banked
  3222  000058  6FAF               	movwf	(??_loop+3)& (0+255),b
  3223  00005A  51AC               	movf	??_loop& (0+255),w,b
  3224  00005C  0101               	movlb	1	; () banked
  3225  00005E  5DB1               	subwf	_tmp4& (0+255),w,b
  3226  000060  0100               	movlb	0	; () banked
  3227  000062  51AD               	movf	(??_loop+1)& (0+255),w,b
  3228  000064  0101               	movlb	1	; () banked
  3229  000066  59B2               	subwfb	(_tmp4+1)& (0+255),w,b
  3230  000068  0100               	movlb	0	; () banked
  3231  00006A  51AE               	movf	(??_loop+2)& (0+255),w,b
  3232  00006C  0101               	movlb	1	; () banked
  3233  00006E  59B3               	subwfb	(_tmp4+2)& (0+255),w,b
  3234  000070  0100               	movlb	0	; () banked
  3235  000072  51AF               	movf	(??_loop+3)& (0+255),w,b
  3236  000074  0101               	movlb	1	; () banked
  3237  000076  59B4               	subwfb	(_tmp4+3)& (0+255),w,b
  3238  000078  B0D8               	btfsc	status,0,c
  3239  00007A  EF41  F000         	goto	u3501
  3240  00007E  EF43  F000         	goto	u3500
  3241  000082                     u3501:
  3242  000082  EF78  F001         	goto	l4334
  3243  000086                     u3500:
  3244  000086                     
  3245                           ; BSR set to: 1
  3246                           ;main.c: 34: tmp4 = MILLISECONDS;
  3247  000086  C1C1  F1B1         	movff	_MILLISECONDS,_tmp4
  3248  00008A  C1C2  F1B2         	movff	_MILLISECONDS+1,_tmp4+1
  3249  00008E  C1C3  F1B3         	movff	_MILLISECONDS+2,_tmp4+2
  3250  000092  C1C4  F1B4         	movff	_MILLISECONDS+3,_tmp4+3
  3251  000096                     
  3252                           ; BSR set to: 1
  3253                           ;main.c: 36: char zzzz[32];;main.c: 37: sprintf(zzzz, "Change baud rate (%lu)", A6_BaudR
      +                          ateGet());
  3254  000096  0E80               	movlw	low loop@zzzz
  3255  000098  6E4A               	movwf	sprintf@sp^0,c
  3256  00009A  0E01               	movlw	high loop@zzzz
  3257  00009C  6E4B               	movwf	(sprintf@sp+1)^0,c
  3258  00009E  0EED               	movlw	low STR_1
  3259  0000A0  6E4C               	movwf	sprintf@f^0,c
  3260  0000A2  0E5E               	movlw	high STR_1
  3261  0000A4  6E4D               	movwf	(sprintf@f+1)^0,c
  3262  0000A6  ECC6  F009         	call	_A6_BaudRateGet	;wreg free
  3263  0000AA  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3264  0000AE  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3265  0000B2  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3266  0000B6  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3267  0000BA  EC4F  F003         	call	_sprintf	;wreg free
  3268  0000BE                     
  3269                           ;main.c: 38: printLine(zzzz, 0xFFE0);
  3270  0000BE  0E80               	movlw	low loop@zzzz
  3271  0000C0  6E4A               	movwf	printLine@str^0,c
  3272  0000C2  0E01               	movlw	high loop@zzzz
  3273  0000C4  6E4B               	movwf	(printLine@str+1)^0,c
  3274  0000C6  0EFF               	movlw	255
  3275  0000C8  6E4D               	movwf	(printLine@color+1)^0,c
  3276  0000CA  0EE0               	movlw	224
  3277  0000CC  6E4C               	movwf	printLine@color^0,c
  3278  0000CE  ECBE  F00F         	call	_printLine	;wreg free
  3279  0000D2                     
  3280                           ;main.c: 40: uint32_t zz = 0;
  3281  0000D2  0E00               	movlw	0
  3282  0000D4  0101               	movlb	1	; () banked
  3283  0000D6  6FA8               	movwf	loop@zz& (0+255),b
  3284  0000D8  0E00               	movlw	0
  3285  0000DA  6FA9               	movwf	(loop@zz+1)& (0+255),b
  3286  0000DC  0E00               	movlw	0
  3287  0000DE  6FAA               	movwf	(loop@zz+2)& (0+255),b
  3288  0000E0  0E00               	movlw	0
  3289  0000E2  6FAB               	movwf	(loop@zz+3)& (0+255),b
  3290                           
  3291                           ;main.c: 41: switch(A6_BaudRateGet()) {
  3292  0000E4  EFD5  F000         	goto	l4308
  3293  0000E8                     l4294:
  3294                           
  3295                           ;main.c: 43: zz = A6_BaudRateSet(115200);
  3296  0000E8  0E00               	movlw	0
  3297  0000EA  0100               	movlb	0	; () banked
  3298  0000EC  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3299  0000EE  0EC2               	movlw	194
  3300  0000F0  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3301  0000F2  0E01               	movlw	1
  3302  0000F4  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3303  0000F6  0E00               	movlw	0
  3304  0000F8  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3305  0000FA  EC31  F009         	call	_A6_BaudRateSet	;wreg free
  3306  0000FE  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3307  000102  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3308  000106  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3309  00010A  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3310                           
  3311                           ;main.c: 44: break;
  3312  00010E  EF10  F001         	goto	l4310
  3313  000112                     l4296:
  3314                           
  3315                           ;main.c: 46: zz = A6_BaudRateSet(9600);
  3316  000112  0E80               	movlw	128
  3317  000114  0100               	movlb	0	; () banked
  3318  000116  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3319  000118  0E25               	movlw	37
  3320  00011A  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3321  00011C  0E00               	movlw	0
  3322  00011E  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3323  000120  0E00               	movlw	0
  3324  000122  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3325  000124  EC31  F009         	call	_A6_BaudRateSet	;wreg free
  3326  000128  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3327  00012C  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3328  000130  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3329  000134  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3330                           
  3331                           ;main.c: 47: break;
  3332  000138  EF10  F001         	goto	l4310
  3333  00013C                     l4298:
  3334                           
  3335                           ;main.c: 49: zz = A6_BaudRateSet(57600);
  3336  00013C  0E00               	movlw	0
  3337  00013E  0100               	movlb	0	; () banked
  3338  000140  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3339  000142  0EE1               	movlw	225
  3340  000144  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3341  000146  0E00               	movlw	0
  3342  000148  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3343  00014A  0E00               	movlw	0
  3344  00014C  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3345  00014E  EC31  F009         	call	_A6_BaudRateSet	;wreg free
  3346  000152  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3347  000156  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3348  00015A  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3349  00015E  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3350                           
  3351                           ;main.c: 50: break;
  3352  000162  EF10  F001         	goto	l4310
  3353  000166                     l4300:
  3354                           
  3355                           ;main.c: 52: sprintf(zzzz, "Invalid current baud rate (%lu)", A6_BaudRateGet());
  3356  000166  0E80               	movlw	low loop@zzzz
  3357  000168  6E4A               	movwf	sprintf@sp^0,c
  3358  00016A  0E01               	movlw	high loop@zzzz
  3359  00016C  6E4B               	movwf	(sprintf@sp+1)^0,c
  3360  00016E  0E33               	movlw	low STR_2
  3361  000170  6E4C               	movwf	sprintf@f^0,c
  3362  000172  0E5E               	movlw	high STR_2
  3363  000174  6E4D               	movwf	(sprintf@f+1)^0,c
  3364  000176  ECC6  F009         	call	_A6_BaudRateGet	;wreg free
  3365  00017A  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3366  00017E  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3367  000182  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3368  000186  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3369  00018A  EC4F  F003         	call	_sprintf	;wreg free
  3370  00018E                     
  3371                           ;main.c: 53: printLine(zzzz, 0xFFE0);
  3372  00018E  0E80               	movlw	low loop@zzzz
  3373  000190  6E4A               	movwf	printLine@str^0,c
  3374  000192  0E01               	movlw	high loop@zzzz
  3375  000194  6E4B               	movwf	(printLine@str+1)^0,c
  3376  000196  0EFF               	movlw	255
  3377  000198  6E4D               	movwf	(printLine@color+1)^0,c
  3378  00019A  0EE0               	movlw	224
  3379  00019C  6E4C               	movwf	printLine@color^0,c
  3380  00019E  ECBE  F00F         	call	_printLine	;wreg free
  3381  0001A2                     
  3382                           ;main.c: 54: A6_BaudRateAutoDetect();
  3383  0001A2  ECA0  F00C         	call	_A6_BaudRateAutoDetect	;wreg free
  3384                           
  3385                           ;main.c: 55: break;
  3386  0001A6  EF10  F001         	goto	l4310
  3387  0001AA                     l4308:
  3388                           
  3389                           ; BSR set to: 1
  3390  0001AA  ECC6  F009         	call	_A6_BaudRateGet	;wreg free
  3391                           
  3392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3393                           ; Switch size 1, requested type "simple"
  3394                           ; Number of cases is 1, Range of values is 0 to 0
  3395                           ; switch strategies available:
  3396                           ; Name         Instructions Cycles
  3397                           ; simple_byte            4     3 (average)
  3398                           ;	Chosen strategy is simple_byte
  3399  0001AE  5022               	movf	(?_A6_BaudRateGet+3)^0,w,c
  3400  0001B0  0A00               	xorlw	0	; case 0
  3401  0001B2  B4D8               	btfsc	status,2,c
  3402  0001B4  EF05  F001         	goto	l4906
  3403  0001B8  EFB3  F000         	goto	l4300
  3404  0001BC                     l4902:
  3405                           
  3406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3407                           ; Switch size 1, requested type "simple"
  3408                           ; Number of cases is 2, Range of values is 37 to 225
  3409                           ; switch strategies available:
  3410                           ; Name         Instructions Cycles
  3411                           ; simple_byte            7     4 (average)
  3412                           ;	Chosen strategy is simple_byte
  3413  0001BC  5020               	movf	(?_A6_BaudRateGet+1)^0,w,c
  3414  0001BE  0A25               	xorlw	37	; case 37
  3415  0001C0  B4D8               	btfsc	status,2,c
  3416  0001C2  EFE9  F000         	goto	l4908
  3417  0001C6  0AC4               	xorlw	196	; case 225
  3418  0001C8  B4D8               	btfsc	status,2,c
  3419  0001CA  EFF0  F000         	goto	l4910
  3420  0001CE  EFB3  F000         	goto	l4300
  3421  0001D2                     l4908:
  3422                           
  3423                           ; Switch size 1, requested type "simple"
  3424                           ; Number of cases is 1, Range of values is 128 to 128
  3425                           ; switch strategies available:
  3426                           ; Name         Instructions Cycles
  3427                           ; simple_byte            4     3 (average)
  3428                           ;	Chosen strategy is simple_byte
  3429  0001D2  501F               	movf	?_A6_BaudRateGet^0,w,c
  3430  0001D4  0A80               	xorlw	128	; case 128
  3431  0001D6  B4D8               	btfsc	status,2,c
  3432  0001D8  EF9E  F000         	goto	l4298
  3433  0001DC  EFB3  F000         	goto	l4300
  3434  0001E0                     l4910:
  3435                           
  3436                           ; Switch size 1, requested type "simple"
  3437                           ; Number of cases is 1, Range of values is 0 to 0
  3438                           ; switch strategies available:
  3439                           ; Name         Instructions Cycles
  3440                           ; simple_byte            4     3 (average)
  3441                           ;	Chosen strategy is simple_byte
  3442  0001E0  501F               	movf	?_A6_BaudRateGet^0,w,c
  3443  0001E2  0A00               	xorlw	0	; case 0
  3444  0001E4  B4D8               	btfsc	status,2,c
  3445  0001E6  EF74  F000         	goto	l4294
  3446  0001EA  EFB3  F000         	goto	l4300
  3447  0001EE                     l4904:
  3448                           
  3449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3450                           ; Switch size 1, requested type "simple"
  3451                           ; Number of cases is 1, Range of values is 194 to 194
  3452                           ; switch strategies available:
  3453                           ; Name         Instructions Cycles
  3454                           ; simple_byte            4     3 (average)
  3455                           ;	Chosen strategy is simple_byte
  3456  0001EE  5020               	movf	(?_A6_BaudRateGet+1)^0,w,c
  3457  0001F0  0AC2               	xorlw	194	; case 194
  3458  0001F2  B4D8               	btfsc	status,2,c
  3459  0001F4  EFFE  F000         	goto	l4912
  3460  0001F8  EFB3  F000         	goto	l4300
  3461  0001FC                     l4912:
  3462                           
  3463                           ; Switch size 1, requested type "simple"
  3464                           ; Number of cases is 1, Range of values is 0 to 0
  3465                           ; switch strategies available:
  3466                           ; Name         Instructions Cycles
  3467                           ; simple_byte            4     3 (average)
  3468                           ;	Chosen strategy is simple_byte
  3469  0001FC  501F               	movf	?_A6_BaudRateGet^0,w,c
  3470  0001FE  0A00               	xorlw	0	; case 0
  3471  000200  B4D8               	btfsc	status,2,c
  3472  000202  EF89  F000         	goto	l4296
  3473  000206  EFB3  F000         	goto	l4300
  3474  00020A                     l4906:
  3475                           
  3476                           ; Switch size 1, requested type "simple"
  3477                           ; Number of cases is 2, Range of values is 0 to 1
  3478                           ; switch strategies available:
  3479                           ; Name         Instructions Cycles
  3480                           ; simple_byte            7     4 (average)
  3481                           ;	Chosen strategy is simple_byte
  3482  00020A  5021               	movf	(?_A6_BaudRateGet+2)^0,w,c
  3483  00020C  0A00               	xorlw	0	; case 0
  3484  00020E  B4D8               	btfsc	status,2,c
  3485  000210  EFDE  F000         	goto	l4902
  3486  000214  0A01               	xorlw	1	; case 1
  3487  000216  B4D8               	btfsc	status,2,c
  3488  000218  EFF7  F000         	goto	l4904
  3489  00021C  EFB3  F000         	goto	l4300
  3490  000220                     l4310:
  3491                           
  3492                           ;main.c: 58: sprintf(zzzz, "Baud rate changed (-> %lu)", zz);
  3493  000220  0E80               	movlw	low loop@zzzz
  3494  000222  6E4A               	movwf	sprintf@sp^0,c
  3495  000224  0E01               	movlw	high loop@zzzz
  3496  000226  6E4B               	movwf	(sprintf@sp+1)^0,c
  3497  000228  0E6F               	movlw	low STR_3
  3498  00022A  6E4C               	movwf	sprintf@f^0,c
  3499  00022C  0E5E               	movlw	high STR_3
  3500  00022E  6E4D               	movwf	(sprintf@f+1)^0,c
  3501  000230  C1A8  F04E         	movff	loop@zz,?_sprintf+4
  3502  000234  C1A9  F04F         	movff	loop@zz+1,?_sprintf+5
  3503  000238  C1AA  F050         	movff	loop@zz+2,?_sprintf+6
  3504  00023C  C1AB  F051         	movff	loop@zz+3,?_sprintf+7
  3505  000240  EC4F  F003         	call	_sprintf	;wreg free
  3506  000244                     
  3507                           ;main.c: 59: printLine(((zz == 0) ? "Error changing baud rate" : zzzz), 0xF81F);
  3508  000244  0101               	movlb	1	; () banked
  3509  000246  51A8               	movf	loop@zz& (0+255),w,b
  3510  000248  11A9               	iorwf	(loop@zz+1)& (0+255),w,b
  3511  00024A  11AA               	iorwf	(loop@zz+2)& (0+255),w,b
  3512  00024C  11AB               	iorwf	(loop@zz+3)& (0+255),w,b
  3513  00024E  B4D8               	btfsc	status,2,c
  3514  000250  EF2C  F001         	goto	u3511
  3515  000254  EF2E  F001         	goto	u3510
  3516  000258                     u3511:
  3517  000258  EF34  F001         	goto	l4316
  3518  00025C                     u3510:
  3519  00025C                     
  3520                           ; BSR set to: 1
  3521  00025C  0E80               	movlw	low loop@zzzz
  3522  00025E  6FA0               	movwf	_loop$151& (0+255),b
  3523  000260  0E01               	movlw	high loop@zzzz
  3524  000262  6FA1               	movwf	(_loop$151+1)& (0+255),b
  3525  000264  EF38  F001         	goto	l4318
  3526  000268                     l4316:
  3527                           
  3528                           ; BSR set to: 1
  3529  000268  0EA5               	movlw	low STR_4
  3530  00026A  6FA0               	movwf	_loop$151& (0+255),b
  3531  00026C  0E5E               	movlw	high STR_4
  3532  00026E  6FA1               	movwf	(_loop$151+1)& (0+255),b
  3533  000270                     l4318:
  3534                           
  3535                           ; BSR set to: 1
  3536  000270  C1A0  F04A         	movff	_loop$151,printLine@str
  3537  000274  C1A1  F04B         	movff	_loop$151+1,printLine@str+1
  3538  000278  0EF8               	movlw	248
  3539  00027A  6E4D               	movwf	(printLine@color+1)^0,c
  3540  00027C  0E1F               	movlw	31
  3541  00027E  6E4C               	movwf	printLine@color^0,c
  3542  000280  ECBE  F00F         	call	_printLine	;wreg free
  3543  000284                     
  3544                           ;main.c: 61: if(A6_IsAlive() == 0) {
  3545  000284  EC5E  F013         	call	_A6_IsAlive	;wreg free
  3546  000288  0900               	iorlw	0
  3547  00028A  A4D8               	btfss	status,2,c
  3548  00028C  EF4A  F001         	goto	u3521
  3549  000290  EF4C  F001         	goto	u3520
  3550  000294                     u3521:
  3551  000294  EF78  F001         	goto	l4334
  3552  000298                     u3520:
  3553  000298                     
  3554                           ;main.c: 62: printLine("Comm is dead. Retry...", 0x001F);
  3555  000298  0E04               	movlw	low STR_5
  3556  00029A  6E4A               	movwf	printLine@str^0,c
  3557  00029C  0E5F               	movlw	high STR_5
  3558  00029E  6E4B               	movwf	(printLine@str+1)^0,c
  3559  0002A0  0E00               	movlw	0
  3560  0002A2  6E4D               	movwf	(printLine@color+1)^0,c
  3561  0002A4  0E1F               	movlw	31
  3562  0002A6  6E4C               	movwf	printLine@color^0,c
  3563  0002A8  ECBE  F00F         	call	_printLine	;wreg free
  3564  0002AC                     
  3565                           ;main.c: 63: A6_BaudRateAutoDetect();
  3566  0002AC  ECA0  F00C         	call	_A6_BaudRateAutoDetect	;wreg free
  3567  0002B0                     
  3568                           ;main.c: 64: printLine(((A6_IsAlive() == 0) ? "Still dead" : "Resurrected!"), 0x001F);
  3569  0002B0  EC5E  F013         	call	_A6_IsAlive	;wreg free
  3570  0002B4  0900               	iorlw	0
  3571  0002B6  B4D8               	btfsc	status,2,c
  3572  0002B8  EF60  F001         	goto	u3531
  3573  0002BC  EF62  F001         	goto	u3530
  3574  0002C0                     u3531:
  3575  0002C0  EF69  F001         	goto	l4330
  3576  0002C4                     u3530:
  3577  0002C4  0E2B               	movlw	low STR_7
  3578  0002C6  0101               	movlb	1	; () banked
  3579  0002C8  6FA2               	movwf	_loop$156& (0+255),b
  3580  0002CA  0E5F               	movlw	high STR_7
  3581  0002CC  6FA3               	movwf	(_loop$156+1)& (0+255),b
  3582  0002CE  EF6E  F001         	goto	l4332
  3583  0002D2                     l4330:
  3584  0002D2  0E72               	movlw	low STR_6
  3585  0002D4  0101               	movlb	1	; () banked
  3586  0002D6  6FA2               	movwf	_loop$156& (0+255),b
  3587  0002D8  0E5F               	movlw	high STR_6
  3588  0002DA  6FA3               	movwf	(_loop$156+1)& (0+255),b
  3589  0002DC                     l4332:
  3590                           
  3591                           ; BSR set to: 1
  3592  0002DC  C1A2  F04A         	movff	_loop$156,printLine@str
  3593  0002E0  C1A3  F04B         	movff	_loop$156+1,printLine@str+1
  3594  0002E4  0E00               	movlw	0
  3595  0002E6  6E4D               	movwf	(printLine@color+1)^0,c
  3596  0002E8  0E1F               	movlw	31
  3597  0002EA  6E4C               	movwf	printLine@color^0,c
  3598  0002EC  ECBE  F00F         	call	_printLine	;wreg free
  3599  0002F0                     l4334:
  3600                           
  3601                           ;main.c: 65: };main.c: 66: };main.c: 68: if((MILLISECONDS > 2500) && (tmp1 < (MILLISECON
      +                          DS - 2500))) {
  3602  0002F0  0101               	movlb	1	; () banked
  3603  0002F2  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3604  0002F4  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3605  0002F6  E10B               	bnz	u3540
  3606  0002F8  0EC5               	movlw	197
  3607  0002FA  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3608  0002FC  0E09               	movlw	9
  3609  0002FE  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3610  000300  A0D8               	btfss	status,0,c
  3611  000302  EF85  F001         	goto	u3541
  3612  000306  EF87  F001         	goto	u3540
  3613  00030A                     u3541:
  3614  00030A  EFDC  F001         	goto	l4346
  3615  00030E                     u3540:
  3616  00030E                     
  3617                           ; BSR set to: 1
  3618  00030E  0E3C               	movlw	60
  3619  000310  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3620  000312  0100               	movlb	0	; () banked
  3621  000314  6FAC               	movwf	??_loop& (0+255),b
  3622  000316  0EF6               	movlw	246
  3623  000318  0101               	movlb	1	; () banked
  3624  00031A  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3625  00031C  0100               	movlb	0	; () banked
  3626  00031E  6FAD               	movwf	(??_loop+1)& (0+255),b
  3627  000320  0EFF               	movlw	255
  3628  000322  0101               	movlb	1	; () banked
  3629  000324  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3630  000326  0100               	movlb	0	; () banked
  3631  000328  6FAE               	movwf	(??_loop+2)& (0+255),b
  3632  00032A  0EFF               	movlw	255
  3633  00032C  0101               	movlb	1	; () banked
  3634  00032E  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3635  000330  0100               	movlb	0	; () banked
  3636  000332  6FAF               	movwf	(??_loop+3)& (0+255),b
  3637  000334  51AC               	movf	??_loop& (0+255),w,b
  3638  000336  0101               	movlb	1	; () banked
  3639  000338  5DBD               	subwf	_tmp1& (0+255),w,b
  3640  00033A  0100               	movlb	0	; () banked
  3641  00033C  51AD               	movf	(??_loop+1)& (0+255),w,b
  3642  00033E  0101               	movlb	1	; () banked
  3643  000340  59BE               	subwfb	(_tmp1+1)& (0+255),w,b
  3644  000342  0100               	movlb	0	; () banked
  3645  000344  51AE               	movf	(??_loop+2)& (0+255),w,b
  3646  000346  0101               	movlb	1	; () banked
  3647  000348  59BF               	subwfb	(_tmp1+2)& (0+255),w,b
  3648  00034A  0100               	movlb	0	; () banked
  3649  00034C  51AF               	movf	(??_loop+3)& (0+255),w,b
  3650  00034E  0101               	movlb	1	; () banked
  3651  000350  59C0               	subwfb	(_tmp1+3)& (0+255),w,b
  3652  000352  B0D8               	btfsc	status,0,c
  3653  000354  EFAE  F001         	goto	u3551
  3654  000358  EFB0  F001         	goto	u3550
  3655  00035C                     u3551:
  3656  00035C  EFDC  F001         	goto	l4346
  3657  000360                     u3550:
  3658  000360                     
  3659                           ; BSR set to: 1
  3660                           ;main.c: 69: tmp1 = MILLISECONDS;
  3661  000360  C1C1  F1BD         	movff	_MILLISECONDS,_tmp1
  3662  000364  C1C2  F1BE         	movff	_MILLISECONDS+1,_tmp1+1
  3663  000368  C1C3  F1BF         	movff	_MILLISECONDS+2,_tmp1+2
  3664  00036C  C1C4  F1C0         	movff	_MILLISECONDS+3,_tmp1+3
  3665  000370                     
  3666                           ; BSR set to: 1
  3667                           ;main.c: 71: printLine("Check time", 0xFFE0);
  3668  000370  0E88               	movlw	low STR_8
  3669  000372  6E4A               	movwf	printLine@str^0,c
  3670  000374  0E5F               	movlw	high STR_8
  3671  000376  6E4B               	movwf	(printLine@str+1)^0,c
  3672  000378  0EFF               	movlw	255
  3673  00037A  6E4D               	movwf	(printLine@color+1)^0,c
  3674  00037C  0EE0               	movlw	224
  3675  00037E  6E4C               	movwf	printLine@color^0,c
  3676  000380  ECBE  F00F         	call	_printLine	;wreg free
  3677  000384                     
  3678                           ;main.c: 72: char response[32];;main.c: 73: A6_Command("AT+CCLK?\r", 0, response, 32);
  3679  000384  0E9D               	movlw	low STR_9
  3680  000386  6E18               	movwf	A6_Command@command^0,c
  3681  000388  0E5F               	movlw	high STR_9
  3682  00038A  6E19               	movwf	(A6_Command@command+1)^0,c
  3683  00038C  0E00               	movlw	0
  3684  00038E  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3685  000390  0E00               	movlw	0
  3686  000392  6E1A               	movwf	A6_Command@timeout^0,c
  3687  000394  0E00               	movlw	low loop@response
  3688  000396  6E1C               	movwf	A6_Command@response^0,c
  3689  000398  0E01               	movlw	high loop@response
  3690  00039A  6E1D               	movwf	(A6_Command@response+1)^0,c
  3691  00039C  0E20               	movlw	32
  3692  00039E  6E1E               	movwf	A6_Command@responseLen^0,c
  3693  0003A0  ECDD  F014         	call	_A6_Command	;wreg free
  3694  0003A4                     
  3695                           ;main.c: 74: printLine(response, 0x07E0);
  3696  0003A4  0E00               	movlw	low loop@response
  3697  0003A6  6E4A               	movwf	printLine@str^0,c
  3698  0003A8  0E01               	movlw	high loop@response
  3699  0003AA  6E4B               	movwf	(printLine@str+1)^0,c
  3700  0003AC  0E07               	movlw	7
  3701  0003AE  6E4D               	movwf	(printLine@color+1)^0,c
  3702  0003B0  0EE0               	movlw	224
  3703  0003B2  6E4C               	movwf	printLine@color^0,c
  3704  0003B4  ECBE  F00F         	call	_printLine	;wreg free
  3705  0003B8                     l4346:
  3706                           
  3707                           ;main.c: 75: };main.c: 77: if((MILLISECONDS > 4000) && (tmp2 < (MILLISECONDS - 4000))) {
  3708  0003B8  0101               	movlb	1	; () banked
  3709  0003BA  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3710  0003BC  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3711  0003BE  E10B               	bnz	u3560
  3712  0003C0  0EA1               	movlw	161
  3713  0003C2  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3714  0003C4  0E0F               	movlw	15
  3715  0003C6  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3716  0003C8  A0D8               	btfss	status,0,c
  3717  0003CA  EFE9  F001         	goto	u3561
  3718  0003CE  EFEB  F001         	goto	u3560
  3719  0003D2                     u3561:
  3720  0003D2  EF44  F002         	goto	l4358
  3721  0003D6                     u3560:
  3722  0003D6                     
  3723                           ; BSR set to: 1
  3724  0003D6  0E60               	movlw	96
  3725  0003D8  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3726  0003DA  0100               	movlb	0	; () banked
  3727  0003DC  6FAC               	movwf	??_loop& (0+255),b
  3728  0003DE  0EF0               	movlw	240
  3729  0003E0  0101               	movlb	1	; () banked
  3730  0003E2  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3731  0003E4  0100               	movlb	0	; () banked
  3732  0003E6  6FAD               	movwf	(??_loop+1)& (0+255),b
  3733  0003E8  0EFF               	movlw	255
  3734  0003EA  0101               	movlb	1	; () banked
  3735  0003EC  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3736  0003EE  0100               	movlb	0	; () banked
  3737  0003F0  6FAE               	movwf	(??_loop+2)& (0+255),b
  3738  0003F2  0EFF               	movlw	255
  3739  0003F4  0101               	movlb	1	; () banked
  3740  0003F6  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3741  0003F8  0100               	movlb	0	; () banked
  3742  0003FA  6FAF               	movwf	(??_loop+3)& (0+255),b
  3743  0003FC  51AC               	movf	??_loop& (0+255),w,b
  3744  0003FE  0101               	movlb	1	; () banked
  3745  000400  5DB9               	subwf	_tmp2& (0+255),w,b
  3746  000402  0100               	movlb	0	; () banked
  3747  000404  51AD               	movf	(??_loop+1)& (0+255),w,b
  3748  000406  0101               	movlb	1	; () banked
  3749  000408  59BA               	subwfb	(_tmp2+1)& (0+255),w,b
  3750  00040A  0100               	movlb	0	; () banked
  3751  00040C  51AE               	movf	(??_loop+2)& (0+255),w,b
  3752  00040E  0101               	movlb	1	; () banked
  3753  000410  59BB               	subwfb	(_tmp2+2)& (0+255),w,b
  3754  000412  0100               	movlb	0	; () banked
  3755  000414  51AF               	movf	(??_loop+3)& (0+255),w,b
  3756  000416  0101               	movlb	1	; () banked
  3757  000418  59BC               	subwfb	(_tmp2+3)& (0+255),w,b
  3758  00041A  B0D8               	btfsc	status,0,c
  3759  00041C  EF12  F002         	goto	u3571
  3760  000420  EF14  F002         	goto	u3570
  3761  000424                     u3571:
  3762  000424  EF44  F002         	goto	l4358
  3763  000428                     u3570:
  3764  000428                     
  3765                           ; BSR set to: 1
  3766                           ;main.c: 78: tmp2 = MILLISECONDS;
  3767  000428  C1C1  F1B9         	movff	_MILLISECONDS,_tmp2
  3768  00042C  C1C2  F1BA         	movff	_MILLISECONDS+1,_tmp2+1
  3769  000430  C1C3  F1BB         	movff	_MILLISECONDS+2,_tmp2+2
  3770  000434  C1C4  F1BC         	movff	_MILLISECONDS+3,_tmp2+3
  3771  000438                     
  3772                           ; BSR set to: 1
  3773                           ;main.c: 79: printLine("Check baud rate", 0xFFE0);
  3774  000438  0E1B               	movlw	low STR_10
  3775  00043A  6E4A               	movwf	printLine@str^0,c
  3776  00043C  0E5F               	movlw	high STR_10
  3777  00043E  6E4B               	movwf	(printLine@str+1)^0,c
  3778  000440  0EFF               	movlw	255
  3779  000442  6E4D               	movwf	(printLine@color+1)^0,c
  3780  000444  0EE0               	movlw	224
  3781  000446  6E4C               	movwf	printLine@color^0,c
  3782  000448  ECBE  F00F         	call	_printLine	;wreg free
  3783  00044C                     
  3784                           ;main.c: 80: char zzzz[32];;main.c: 81: sprintf(zzzz, "%lu", A6_BaudRateGet());
  3785  00044C  0E20               	movlw	low loop@zzzz_161
  3786  00044E  6E4A               	movwf	sprintf@sp^0,c
  3787  000450  0E01               	movlw	high loop@zzzz_161
  3788  000452  6E4B               	movwf	(sprintf@sp+1)^0,c
  3789  000454  0EF6               	movlw	low STR_11
  3790  000456  6E4C               	movwf	sprintf@f^0,c
  3791  000458  0E5F               	movlw	high STR_11
  3792  00045A  6E4D               	movwf	(sprintf@f+1)^0,c
  3793  00045C  ECC6  F009         	call	_A6_BaudRateGet	;wreg free
  3794  000460  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3795  000464  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3796  000468  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3797  00046C  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3798  000470  EC4F  F003         	call	_sprintf	;wreg free
  3799  000474                     
  3800                           ;main.c: 82: printLine(zzzz, 0xF800);
  3801  000474  0E20               	movlw	low loop@zzzz_161
  3802  000476  6E4A               	movwf	printLine@str^0,c
  3803  000478  0E01               	movlw	high loop@zzzz_161
  3804  00047A  6E4B               	movwf	(printLine@str+1)^0,c
  3805  00047C  0EF8               	movlw	248
  3806  00047E  6E4D               	movwf	(printLine@color+1)^0,c
  3807  000480  0E00               	movlw	0
  3808  000482  6E4C               	movwf	printLine@color^0,c
  3809  000484  ECBE  F00F         	call	_printLine	;wreg free
  3810  000488                     l4358:
  3811                           
  3812                           ;main.c: 83: };main.c: 85: if((MILLISECONDS > 6500) && (tmp3 < (MILLISECONDS - 6500))) {
  3813  000488  0101               	movlb	1	; () banked
  3814  00048A  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3815  00048C  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3816  00048E  E10B               	bnz	u3580
  3817  000490  0E65               	movlw	101
  3818  000492  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3819  000494  0E19               	movlw	25
  3820  000496  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3821  000498  A0D8               	btfss	status,0,c
  3822  00049A  EF51  F002         	goto	u3581
  3823  00049E  EF53  F002         	goto	u3580
  3824  0004A2                     u3581:
  3825  0004A2  EFC1  F002         	goto	l4372
  3826  0004A6                     u3580:
  3827  0004A6                     
  3828                           ; BSR set to: 1
  3829  0004A6  0E9C               	movlw	156
  3830  0004A8  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3831  0004AA  0100               	movlb	0	; () banked
  3832  0004AC  6FAC               	movwf	??_loop& (0+255),b
  3833  0004AE  0EE6               	movlw	230
  3834  0004B0  0101               	movlb	1	; () banked
  3835  0004B2  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3836  0004B4  0100               	movlb	0	; () banked
  3837  0004B6  6FAD               	movwf	(??_loop+1)& (0+255),b
  3838  0004B8  0EFF               	movlw	255
  3839  0004BA  0101               	movlb	1	; () banked
  3840  0004BC  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3841  0004BE  0100               	movlb	0	; () banked
  3842  0004C0  6FAE               	movwf	(??_loop+2)& (0+255),b
  3843  0004C2  0EFF               	movlw	255
  3844  0004C4  0101               	movlb	1	; () banked
  3845  0004C6  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3846  0004C8  0100               	movlb	0	; () banked
  3847  0004CA  6FAF               	movwf	(??_loop+3)& (0+255),b
  3848  0004CC  51AC               	movf	??_loop& (0+255),w,b
  3849  0004CE  0101               	movlb	1	; () banked
  3850  0004D0  5DB5               	subwf	_tmp3& (0+255),w,b
  3851  0004D2  0100               	movlb	0	; () banked
  3852  0004D4  51AD               	movf	(??_loop+1)& (0+255),w,b
  3853  0004D6  0101               	movlb	1	; () banked
  3854  0004D8  59B6               	subwfb	(_tmp3+1)& (0+255),w,b
  3855  0004DA  0100               	movlb	0	; () banked
  3856  0004DC  51AE               	movf	(??_loop+2)& (0+255),w,b
  3857  0004DE  0101               	movlb	1	; () banked
  3858  0004E0  59B7               	subwfb	(_tmp3+2)& (0+255),w,b
  3859  0004E2  0100               	movlb	0	; () banked
  3860  0004E4  51AF               	movf	(??_loop+3)& (0+255),w,b
  3861  0004E6  0101               	movlb	1	; () banked
  3862  0004E8  59B8               	subwfb	(_tmp3+3)& (0+255),w,b
  3863  0004EA  B0D8               	btfsc	status,0,c
  3864  0004EC  EF7A  F002         	goto	u3591
  3865  0004F0  EF7C  F002         	goto	u3590
  3866  0004F4                     u3591:
  3867  0004F4  EFC1  F002         	goto	l4372
  3868  0004F8                     u3590:
  3869  0004F8                     
  3870                           ; BSR set to: 1
  3871                           ;main.c: 86: tmp3 = MILLISECONDS;
  3872  0004F8  C1C1  F1B5         	movff	_MILLISECONDS,_tmp3
  3873  0004FC  C1C2  F1B6         	movff	_MILLISECONDS+1,_tmp3+1
  3874  000500  C1C3  F1B7         	movff	_MILLISECONDS+2,_tmp3+2
  3875  000504  C1C4  F1B8         	movff	_MILLISECONDS+3,_tmp3+3
  3876  000508                     
  3877                           ; BSR set to: 1
  3878                           ;main.c: 88: printLine("Check RSSI", 0xFFE0);
  3879  000508  0E67               	movlw	low STR_12
  3880  00050A  6E4A               	movwf	printLine@str^0,c
  3881  00050C  0E5F               	movlw	high STR_12
  3882  00050E  6E4B               	movwf	(printLine@str+1)^0,c
  3883  000510  0EFF               	movlw	255
  3884  000512  6E4D               	movwf	(printLine@color+1)^0,c
  3885  000514  0EE0               	movlw	224
  3886  000516  6E4C               	movwf	printLine@color^0,c
  3887  000518  ECBE  F00F         	call	_printLine	;wreg free
  3888  00051C                     
  3889                           ;main.c: 89: char zzzz[32];;main.c: 90: sprintf(zzzz, "RSSI: %u", A6_NetworkGetRSSI());
  3890  00051C  0E60               	movlw	low loop@zzzz_164
  3891  00051E  6E4A               	movwf	sprintf@sp^0,c
  3892  000520  0E01               	movlw	high loop@zzzz_164
  3893  000522  6E4B               	movwf	(sprintf@sp+1)^0,c
  3894  000524  0EBA               	movlw	low STR_13
  3895  000526  6E4C               	movwf	sprintf@f^0,c
  3896  000528  0E5F               	movlw	high STR_13
  3897  00052A  6E4D               	movwf	(sprintf@f+1)^0,c
  3898  00052C  ECDA  F00D         	call	_A6_NetworkGetRSSI	;wreg free
  3899  000530  0100               	movlb	0	; () banked
  3900  000532  6FAC               	movwf	??_loop& (0+255),b
  3901  000534  51AC               	movf	??_loop& (0+255),w,b
  3902  000536  6E4E               	movwf	(?_sprintf+4)^0,c
  3903  000538  6A4F               	clrf	(?_sprintf+5)^0,c
  3904  00053A  EC4F  F003         	call	_sprintf	;wreg free
  3905  00053E                     
  3906                           ;main.c: 91: printLine(zzzz, 0xFFFF);
  3907  00053E  0E60               	movlw	low loop@zzzz_164
  3908  000540  6E4A               	movwf	printLine@str^0,c
  3909  000542  0E01               	movlw	high loop@zzzz_164
  3910  000544  6E4B               	movwf	(printLine@str+1)^0,c
  3911  000546  0EFF               	movlw	255
  3912  000548  6E4D               	movwf	(printLine@color+1)^0,c
  3913  00054A  684C               	setf	printLine@color^0,c
  3914  00054C  ECBE  F00F         	call	_printLine	;wreg free
  3915                           
  3916                           ;main.c: 92: sprintf(zzzz, "Level: %u", A6_NetworkGetRSSILevel());
  3917  000550  0E60               	movlw	low loop@zzzz_164
  3918  000552  6E4A               	movwf	sprintf@sp^0,c
  3919  000554  0E01               	movlw	high loop@zzzz_164
  3920  000556  6E4B               	movwf	(sprintf@sp+1)^0,c
  3921  000558  0EA7               	movlw	low STR_14
  3922  00055A  6E4C               	movwf	sprintf@f^0,c
  3923  00055C  0E5F               	movlw	high STR_14
  3924  00055E  6E4D               	movwf	(sprintf@f+1)^0,c
  3925  000560  ECC9  F010         	call	_A6_NetworkGetRSSILevel	;wreg free
  3926  000564  6E4E               	movwf	(?_sprintf+4)^0,c
  3927  000566  6A4F               	clrf	(?_sprintf+5)^0,c
  3928  000568  BE4E               	btfsc	(?_sprintf+4)^0,7,c
  3929  00056A  064F               	decf	(?_sprintf+5)^0,f,c
  3930  00056C  EC4F  F003         	call	_sprintf	;wreg free
  3931  000570                     
  3932                           ;main.c: 93: printLine(zzzz, 0xFFFF);
  3933  000570  0E60               	movlw	low loop@zzzz_164
  3934  000572  6E4A               	movwf	printLine@str^0,c
  3935  000574  0E01               	movlw	high loop@zzzz_164
  3936  000576  6E4B               	movwf	(printLine@str+1)^0,c
  3937  000578  0EFF               	movlw	255
  3938  00057A  6E4D               	movwf	(printLine@color+1)^0,c
  3939  00057C  684C               	setf	printLine@color^0,c
  3940  00057E  ECBE  F00F         	call	_printLine	;wreg free
  3941  000582                     l4372:
  3942                           
  3943                           ;main.c: 94: };main.c: 96: if((MILLISECONDS > 8500) && (tmp5 < (MILLISECONDS - 8500))) {
  3944  000582  0101               	movlb	1	; () banked
  3945  000584  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3946  000586  11C3               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3947  000588  E10B               	bnz	u3600
  3948  00058A  0E35               	movlw	53
  3949  00058C  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  3950  00058E  0E21               	movlw	33
  3951  000590  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3952  000592  A0D8               	btfss	status,0,c
  3953  000594  EFCE  F002         	goto	u3601
  3954  000598  EFD0  F002         	goto	u3600
  3955  00059C                     u3601:
  3956  00059C  EF4E  F003         	goto	l99
  3957  0005A0                     u3600:
  3958  0005A0                     
  3959                           ; BSR set to: 1
  3960  0005A0  0ECC               	movlw	204
  3961  0005A2  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  3962  0005A4  0100               	movlb	0	; () banked
  3963  0005A6  6FAC               	movwf	??_loop& (0+255),b
  3964  0005A8  0EDE               	movlw	222
  3965  0005AA  0101               	movlb	1	; () banked
  3966  0005AC  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3967  0005AE  0100               	movlb	0	; () banked
  3968  0005B0  6FAD               	movwf	(??_loop+1)& (0+255),b
  3969  0005B2  0EFF               	movlw	255
  3970  0005B4  0101               	movlb	1	; () banked
  3971  0005B6  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3972  0005B8  0100               	movlb	0	; () banked
  3973  0005BA  6FAE               	movwf	(??_loop+2)& (0+255),b
  3974  0005BC  0EFF               	movlw	255
  3975  0005BE  0101               	movlb	1	; () banked
  3976  0005C0  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3977  0005C2  0100               	movlb	0	; () banked
  3978  0005C4  6FAF               	movwf	(??_loop+3)& (0+255),b
  3979  0005C6  51AC               	movf	??_loop& (0+255),w,b
  3980  0005C8  0101               	movlb	1	; () banked
  3981  0005CA  5DAD               	subwf	_tmp5& (0+255),w,b
  3982  0005CC  0100               	movlb	0	; () banked
  3983  0005CE  51AD               	movf	(??_loop+1)& (0+255),w,b
  3984  0005D0  0101               	movlb	1	; () banked
  3985  0005D2  59AE               	subwfb	(_tmp5+1)& (0+255),w,b
  3986  0005D4  0100               	movlb	0	; () banked
  3987  0005D6  51AE               	movf	(??_loop+2)& (0+255),w,b
  3988  0005D8  0101               	movlb	1	; () banked
  3989  0005DA  59AF               	subwfb	(_tmp5+2)& (0+255),w,b
  3990  0005DC  0100               	movlb	0	; () banked
  3991  0005DE  51AF               	movf	(??_loop+3)& (0+255),w,b
  3992  0005E0  0101               	movlb	1	; () banked
  3993  0005E2  59B0               	subwfb	(_tmp5+3)& (0+255),w,b
  3994  0005E4  B0D8               	btfsc	status,0,c
  3995  0005E6  EFF7  F002         	goto	u3611
  3996  0005EA  EFF9  F002         	goto	u3610
  3997  0005EE                     u3611:
  3998  0005EE  EF4E  F003         	goto	l99
  3999  0005F2                     u3610:
  4000  0005F2                     
  4001                           ; BSR set to: 1
  4002                           ;main.c: 97: tmp5 = MILLISECONDS;
  4003  0005F2  C1C1  F1AD         	movff	_MILLISECONDS,_tmp5
  4004  0005F6  C1C2  F1AE         	movff	_MILLISECONDS+1,_tmp5+1
  4005  0005FA  C1C3  F1AF         	movff	_MILLISECONDS+2,_tmp5+2
  4006  0005FE  C1C4  F1B0         	movff	_MILLISECONDS+3,_tmp5+3
  4007  000602                     
  4008                           ; BSR set to: 1
  4009                           ;main.c: 99: printLine("Check network registration", 0xFFE0);
  4010  000602  0E8A               	movlw	low STR_15
  4011  000604  6E4A               	movwf	printLine@str^0,c
  4012  000606  0E5E               	movlw	high STR_15
  4013  000608  6E4B               	movwf	(printLine@str+1)^0,c
  4014  00060A  0EFF               	movlw	255
  4015  00060C  6E4D               	movwf	(printLine@color+1)^0,c
  4016  00060E  0EE0               	movlw	224
  4017  000610  6E4C               	movwf	printLine@color^0,c
  4018  000612  ECBE  F00F         	call	_printLine	;wreg free
  4019  000616                     
  4020                           ;main.c: 100: uint8_t ns = A6_NetworkGetStatus();
  4021  000616  EC55  F00B         	call	_A6_NetworkGetStatus	;wreg free
  4022  00061A  0101               	movlb	1	; () banked
  4023  00061C  6FAC               	movwf	loop@ns& (0+255),b
  4024  00061E                     
  4025                           ; BSR set to: 1
  4026                           ;main.c: 101: char zzzz[32];;main.c: 102: sprintf(zzzz, "Network status: %u (%s)", ns, (
      +                          (ns == 2) ? "Searching..." : ((ns == 1) ? "Registered" : "Other")));
  4027  00061E  0E02               	movlw	2
  4028  000620  19AC               	xorwf	loop@ns& (0+255),w,b
  4029  000622  B4D8               	btfsc	status,2,c
  4030  000624  EF16  F003         	goto	u3621
  4031  000628  EF18  F003         	goto	u3620
  4032  00062C                     u3621:
  4033  00062C  EF30  F003         	goto	l4390
  4034  000630                     u3620:
  4035  000630                     
  4036                           ; BSR set to: 1
  4037  000630  05AC               	decf	loop@ns& (0+255),w,b
  4038  000632  B4D8               	btfsc	status,2,c
  4039  000634  EF1E  F003         	goto	u3631
  4040  000638  EF20  F003         	goto	u3630
  4041  00063C                     u3631:
  4042  00063C  EF26  F003         	goto	l4388
  4043  000640                     u3630:
  4044  000640                     
  4045                           ; BSR set to: 1
  4046  000640  0EE8               	movlw	low STR_19
  4047  000642  6FA6               	movwf	_loop$177& (0+255),b
  4048  000644  0E5F               	movlw	high STR_19
  4049  000646  6FA7               	movwf	(_loop$177+1)& (0+255),b
  4050  000648  EF2A  F003         	goto	l98
  4051  00064C                     l4388:
  4052                           
  4053                           ; BSR set to: 1
  4054  00064C  0E7D               	movlw	low STR_18
  4055  00064E  6FA6               	movwf	_loop$177& (0+255),b
  4056  000650  0E5F               	movlw	high STR_18
  4057  000652  6FA7               	movwf	(_loop$177+1)& (0+255),b
  4058  000654                     l98:
  4059                           
  4060                           ; BSR set to: 1
  4061  000654  C1A6  F1A4         	movff	_loop$177,_loop$176
  4062  000658  C1A7  F1A5         	movff	_loop$177+1,_loop$176+1
  4063  00065C  EF34  F003         	goto	l4392
  4064  000660                     l4390:
  4065                           
  4066                           ; BSR set to: 1
  4067  000660  0E38               	movlw	low STR_17
  4068  000662  6FA4               	movwf	_loop$176& (0+255),b
  4069  000664  0E5F               	movlw	high STR_17
  4070  000666  6FA5               	movwf	(_loop$176+1)& (0+255),b
  4071  000668                     l4392:
  4072                           
  4073                           ; BSR set to: 1
  4074  000668  0E40               	movlw	low loop@zzzz_169
  4075  00066A  6E4A               	movwf	sprintf@sp^0,c
  4076  00066C  0E01               	movlw	high loop@zzzz_169
  4077  00066E  6E4B               	movwf	(sprintf@sp+1)^0,c
  4078  000670  0EBE               	movlw	low STR_16
  4079  000672  6E4C               	movwf	sprintf@f^0,c
  4080  000674  0E5E               	movlw	high STR_16
  4081  000676  6E4D               	movwf	(sprintf@f+1)^0,c
  4082  000678  C1AC  F04E         	movff	loop@ns,?_sprintf+4
  4083  00067C  6A4F               	clrf	(?_sprintf+5)^0,c
  4084  00067E  C1A4  F050         	movff	_loop$176,?_sprintf+6
  4085  000682  C1A5  F051         	movff	_loop$176+1,?_sprintf+7
  4086  000686  EC4F  F003         	call	_sprintf	;wreg free
  4087  00068A                     
  4088                           ;main.c: 103: printLine(zzzz, 0xFFFF);
  4089  00068A  0E40               	movlw	low loop@zzzz_169
  4090  00068C  6E4A               	movwf	printLine@str^0,c
  4091  00068E  0E01               	movlw	high loop@zzzz_169
  4092  000690  6E4B               	movwf	(printLine@str+1)^0,c
  4093  000692  0EFF               	movlw	255
  4094  000694  6E4D               	movwf	(printLine@color+1)^0,c
  4095  000696  684C               	setf	printLine@color^0,c
  4096  000698  ECBE  F00F         	call	_printLine	;wreg free
  4097  00069C                     l99:
  4098  00069C  0012               	return		;funcret
  4099  00069E                     __end_of_loop:
  4100                           	opt callstack 0
  4101                           
  4102 ;; *************** function _A6_Process_Random_Comms *****************
  4103 ;; Defined at:
  4104 ;;		line 121 in file "A6Lib.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  response       32    0[BANK0 ] unsigned char [32]
  4109 ;;  cnt             1   32[BANK0 ] unsigned char 
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0
  4120 ;;      Locals:         0      33       0       0       0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4122 ;;      Totals:         0      33       0       0       0       0       0       0       0
  4123 ;;Total ram usage:       33 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    9
  4126 ;; This function calls:
  4127 ;;		_A6_ReadLine
  4128 ;;		_EUSART_RX_AvailableData
  4129 ;;		_printLine
  4130 ;;		_strcmp
  4131 ;; This function is called by:
  4132 ;;		_loop
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text2
  4137  001E68                     __ptext2:
  4138                           	opt callstack 0
  4139  001E68                     _A6_Process_Random_Comms:
  4140                           	opt callstack 20
  4141  001E68                     
  4142                           ;A6Lib.c: 122: if(EUSART_RX_AvailableData(-1) == 0) return;
  4143  001E68  0EFF               	movlw	255
  4144  001E6A  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
  4145  001E6C  6805               	setf	EUSART_RX_AvailableData@timeout^0,c
  4146  001E6E  EC02  F010         	call	_EUSART_RX_AvailableData	;wreg free
  4147  001E72  0900               	iorlw	0
  4148  001E74  A4D8               	btfss	status,2,c
  4149  001E76  EF3F  F00F         	goto	u3271
  4150  001E7A  EF41  F00F         	goto	u3270
  4151  001E7E                     u3271:
  4152  001E7E  EF43  F00F         	goto	l4082
  4153  001E82                     u3270:
  4154  001E82  EF79  F00F         	goto	l544
  4155  001E86                     l4082:
  4156                           
  4157                           ;A6Lib.c: 124: char response[32];;A6Lib.c: 125: uint8_t cnt = A6_ReadLine(response, 32, 
      +                          0);
  4158  001E86  0E60               	movlw	low A6_Process_Random_Comms@response
  4159  001E88  6E11               	movwf	A6_ReadLine@response^0,c
  4160  001E8A  0E00               	movlw	high A6_Process_Random_Comms@response
  4161  001E8C  6E12               	movwf	(A6_ReadLine@response+1)^0,c
  4162  001E8E  0E20               	movlw	32
  4163  001E90  6E13               	movwf	A6_ReadLine@responseLen^0,c
  4164  001E92  0E00               	movlw	0
  4165  001E94  6E15               	movwf	(A6_ReadLine@timeout+1)^0,c
  4166  001E96  0E00               	movlw	0
  4167  001E98  6E14               	movwf	A6_ReadLine@timeout^0,c
  4168  001E9A  EC0D  F00D         	call	_A6_ReadLine	;wreg free
  4169  001E9E  0100               	movlb	0	; () banked
  4170  001EA0  6F80               	movwf	A6_Process_Random_Comms@cnt& (0+255),b
  4171  001EA2                     
  4172                           ; BSR set to: 0
  4173                           ;A6Lib.c: 126: if(cnt == 0) return;
  4174  001EA2  5180               	movf	A6_Process_Random_Comms@cnt& (0+255),w,b
  4175  001EA4  A4D8               	btfss	status,2,c
  4176  001EA6  EF57  F00F         	goto	u3281
  4177  001EAA  EF59  F00F         	goto	u3280
  4178  001EAE                     u3281:
  4179  001EAE  EF5B  F00F         	goto	l4088
  4180  001EB2                     u3280:
  4181  001EB2  EF79  F00F         	goto	l544
  4182  001EB6                     l4088:
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;A6Lib.c: 127: if(strcmp(response, "OK") == 0) return;
  4186  001EB6  0E60               	movlw	low A6_Process_Random_Comms@response
  4187  001EB8  6E05               	movwf	strcmp@s1^0,c
  4188  001EBA  0E00               	movlw	high A6_Process_Random_Comms@response
  4189  001EBC  6E06               	movwf	(strcmp@s1+1)^0,c
  4190  001EBE  0EFA               	movlw	low STR_24
  4191  001EC0  6E07               	movwf	strcmp@s2^0,c
  4192  001EC2  0E5F               	movlw	high STR_24
  4193  001EC4  6E08               	movwf	(strcmp@s2+1)^0,c
  4194  001EC6  EC2E  F013         	call	_strcmp	;wreg free
  4195  001ECA  5005               	movf	?_strcmp^0,w,c
  4196  001ECC  1006               	iorwf	(?_strcmp+1)^0,w,c
  4197  001ECE  A4D8               	btfss	status,2,c
  4198  001ED0  EF6C  F00F         	goto	u3291
  4199  001ED4  EF6E  F00F         	goto	u3290
  4200  001ED8                     u3291:
  4201  001ED8  EF70  F00F         	goto	l4092
  4202  001EDC                     u3290:
  4203  001EDC  EF79  F00F         	goto	l544
  4204  001EE0                     l4092:
  4205                           
  4206                           ;A6Lib.c: 128: printLine(response, 0x07FF);
  4207  001EE0  0E60               	movlw	low A6_Process_Random_Comms@response
  4208  001EE2  6E4A               	movwf	printLine@str^0,c
  4209  001EE4  0E00               	movlw	high A6_Process_Random_Comms@response
  4210  001EE6  6E4B               	movwf	(printLine@str+1)^0,c
  4211  001EE8  0E07               	movlw	7
  4212  001EEA  6E4D               	movwf	(printLine@color+1)^0,c
  4213  001EEC  684C               	setf	printLine@color^0,c
  4214  001EEE  ECBE  F00F         	call	_printLine	;wreg free
  4215  001EF2                     l544:
  4216  001EF2  0012               	return		;funcret
  4217  001EF4                     __end_of_A6_Process_Random_Comms:
  4218                           	opt callstack 0
  4219                           
  4220 ;; *************** function _A6_NetworkGetStatus *****************
  4221 ;; Defined at:
  4222 ;;		line 131 in file "A6Lib.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  response       32   30[COMRAM] unsigned char [32]
  4227 ;;  networkStatu    2   62[COMRAM] PTR unsigned char 
  4228 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  1    wreg      unsigned char 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4238 ;;      Params:         0       0       0       0       0       0       0       0       0
  4239 ;;      Locals:        34       0       0       0       0       0       0       0       0
  4240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4241 ;;      Totals:        34       0       0       0       0       0       0       0       0
  4242 ;;Total ram usage:       34 bytes
  4243 ;; Hardware stack levels used:    1
  4244 ;; Hardware stack levels required when called:    6
  4245 ;; This function calls:
  4246 ;;		_A6_Command
  4247 ;;		_atoi
  4248 ;;		_strstr
  4249 ;;		_strtok
  4250 ;; This function is called by:
  4251 ;;		_loop
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text3
  4256  0016AA                     __ptext3:
  4257                           	opt callstack 0
  4258  0016AA                     _A6_NetworkGetStatus:
  4259                           	opt callstack 23
  4260  0016AA                     
  4261                           ;A6Lib.c: 132: char *networkStatusToken;;A6Lib.c: 133: char response[32];;A6Lib.c: 135: 
      +                          A6_Command("AT+CREG?\r", 0, response, 32);
  4262  0016AA  0E93               	movlw	low STR_33
  4263  0016AC  6E18               	movwf	A6_Command@command^0,c
  4264  0016AE  0E5F               	movlw	high STR_33
  4265  0016B0  6E19               	movwf	(A6_Command@command+1)^0,c
  4266  0016B2  0E00               	movlw	0
  4267  0016B4  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4268  0016B6  0E00               	movlw	0
  4269  0016B8  6E1A               	movwf	A6_Command@timeout^0,c
  4270  0016BA  0E1F               	movlw	low A6_NetworkGetStatus@response
  4271  0016BC  6E1C               	movwf	A6_Command@response^0,c
  4272  0016BE  0E00               	movlw	high A6_NetworkGetStatus@response
  4273  0016C0  6E1D               	movwf	(A6_Command@response+1)^0,c
  4274  0016C2  0E20               	movlw	32
  4275  0016C4  6E1E               	movwf	A6_Command@responseLen^0,c
  4276  0016C6  ECDD  F014         	call	_A6_Command	;wreg free
  4277  0016CA                     
  4278                           ;A6Lib.c: 136: if(strstr(response, "+CREG: ") != (0)) {
  4279  0016CA  0E1F               	movlw	low A6_NetworkGetStatus@response
  4280  0016CC  6E10               	movwf	strstr@s1^0,c
  4281  0016CE  0E00               	movlw	high A6_NetworkGetStatus@response
  4282  0016D0  6E11               	movwf	(strstr@s1+1)^0,c
  4283  0016D2  0ECB               	movlw	low STR_34
  4284  0016D4  6E12               	movwf	strstr@s2^0,c
  4285  0016D6  0E5F               	movlw	high STR_34
  4286  0016D8  6E13               	movwf	(strstr@s2+1)^0,c
  4287  0016DA  EC3B  F00E         	call	_strstr	;wreg free
  4288  0016DE  5010               	movf	?_strstr^0,w,c
  4289  0016E0  1011               	iorwf	(?_strstr+1)^0,w,c
  4290  0016E2  B4D8               	btfsc	status,2,c
  4291  0016E4  EF76  F00B         	goto	u3401
  4292  0016E8  EF78  F00B         	goto	u3400
  4293  0016EC                     u3401:
  4294  0016EC  EFC2  F00B         	goto	l4196
  4295  0016F0                     u3400:
  4296  0016F0                     
  4297                           ;A6Lib.c: 137: networkStatusToken = strtok(response, " ");
  4298  0016F0  0E1F               	movlw	low A6_NetworkGetStatus@response
  4299  0016F2  6E12               	movwf	strtok@s1^0,c
  4300  0016F4  0E00               	movlw	high A6_NetworkGetStatus@response
  4301  0016F6  6E13               	movwf	(strtok@s1+1)^0,c
  4302  0016F8  0ED1               	movlw	low (STR_34+6)
  4303  0016FA  6E14               	movwf	strtok@s2^0,c
  4304  0016FC  0E5F               	movlw	high (STR_34+6)
  4305  0016FE  6E15               	movwf	(strtok@s2+1)^0,c
  4306  001700  ECE4  F00A         	call	_strtok	;wreg free
  4307  001704  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4308  001708  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4309                           
  4310                           ;A6Lib.c: 138: networkStatusToken = strtok((0), response);
  4311  00170C  0E00               	movlw	0
  4312  00170E  6E12               	movwf	strtok@s1^0,c
  4313  001710  0E00               	movlw	0
  4314  001712  6E13               	movwf	(strtok@s1+1)^0,c
  4315  001714  0E1F               	movlw	low A6_NetworkGetStatus@response
  4316  001716  6E14               	movwf	strtok@s2^0,c
  4317  001718  0E00               	movlw	high A6_NetworkGetStatus@response
  4318  00171A  6E15               	movwf	(strtok@s2+1)^0,c
  4319  00171C  ECE4  F00A         	call	_strtok	;wreg free
  4320  001720  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4321  001724  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4322  001728                     
  4323                           ;A6Lib.c: 139: if(networkStatusToken != (0)) {
  4324  001728  503F               	movf	A6_NetworkGetStatus@networkStatusToken^0,w,c
  4325  00172A  1040               	iorwf	(A6_NetworkGetStatus@networkStatusToken+1)^0,w,c
  4326  00172C  B4D8               	btfsc	status,2,c
  4327  00172E  EF9B  F00B         	goto	u3411
  4328  001732  EF9D  F00B         	goto	u3410
  4329  001736                     u3411:
  4330  001736  EFC2  F00B         	goto	l4196
  4331  00173A                     u3410:
  4332  00173A                     
  4333                           ;A6Lib.c: 140: networkStatusToken = strtok(networkStatusToken, ",");
  4334  00173A  C03F  F012         	movff	A6_NetworkGetStatus@networkStatusToken,strtok@s1
  4335  00173E  C040  F013         	movff	A6_NetworkGetStatus@networkStatusToken+1,strtok@s1+1
  4336  001742  0EFD               	movlw	low STR_36
  4337  001744  6E14               	movwf	strtok@s2^0,c
  4338  001746  0E5F               	movlw	high STR_36
  4339  001748  6E15               	movwf	(strtok@s2+1)^0,c
  4340  00174A  ECE4  F00A         	call	_strtok	;wreg free
  4341  00174E  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4342  001752  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4343                           
  4344                           ;A6Lib.c: 141: networkStatusToken = strtok((0), networkStatusToken);
  4345  001756  0E00               	movlw	0
  4346  001758  6E12               	movwf	strtok@s1^0,c
  4347  00175A  0E00               	movlw	0
  4348  00175C  6E13               	movwf	(strtok@s1+1)^0,c
  4349  00175E  C03F  F014         	movff	A6_NetworkGetStatus@networkStatusToken,strtok@s2
  4350  001762  C040  F015         	movff	A6_NetworkGetStatus@networkStatusToken+1,strtok@s2+1
  4351  001766  ECE4  F00A         	call	_strtok	;wreg free
  4352  00176A  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4353  00176E  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4354  001772                     
  4355                           ;A6Lib.c: 142: return atoi(networkStatusToken);
  4356  001772  C03F  F00B         	movff	A6_NetworkGetStatus@networkStatusToken,atoi@s
  4357  001776  C040  F00C         	movff	A6_NetworkGetStatus@networkStatusToken+1,atoi@s+1
  4358  00177A  EC58  F00A         	call	_atoi	;wreg free
  4359  00177E  500B               	movf	?_atoi^0,w,c
  4360  001780  EFC3  F00B         	goto	l551
  4361  001784                     l4196:
  4362                           
  4363                           ;A6Lib.c: 143: };A6Lib.c: 144: };A6Lib.c: 146: return 4;
  4364  001784  0E04               	movlw	4
  4365  001786                     l551:
  4366  001786  0012               	return		;funcret
  4367  001788                     __end_of_A6_NetworkGetStatus:
  4368                           	opt callstack 0
  4369                           
  4370 ;; *************** function _A6_NetworkGetRSSILevel *****************
  4371 ;; Defined at:
  4372 ;;		line 166 in file "A6Lib.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  RSSI            1   64[COMRAM] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      char 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0
  4387 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4389 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4390 ;;Total ram usage:        1 bytes
  4391 ;; Hardware stack levels used:    1
  4392 ;; Hardware stack levels required when called:    7
  4393 ;; This function calls:
  4394 ;;		_A6_NetworkGetRSSI
  4395 ;; This function is called by:
  4396 ;;		_loop
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text4
  4401  002192                     __ptext4:
  4402                           	opt callstack 0
  4403  002192                     _A6_NetworkGetRSSILevel:
  4404                           	opt callstack 22
  4405  002192                     
  4406                           ;A6Lib.c: 167: uint8_t RSSI = A6_NetworkGetRSSI();
  4407  002192  ECDA  F00D         	call	_A6_NetworkGetRSSI	;wreg free
  4408  002196  6E41               	movwf	A6_NetworkGetRSSILevel@RSSI^0,c
  4409  002198                     
  4410                           ;A6Lib.c: 168: if(RSSI == 99) return -1;
  4411  002198  0E63               	movlw	99
  4412  00219A  1841               	xorwf	A6_NetworkGetRSSILevel@RSSI^0,w,c
  4413  00219C  A4D8               	btfss	status,2,c
  4414  00219E  EFD3  F010         	goto	u3351
  4415  0021A2  EFD5  F010         	goto	u3350
  4416  0021A6                     u3351:
  4417  0021A6  EFD8  F010         	goto	l4154
  4418  0021AA                     u3350:
  4419  0021AA  0EFF               	movlw	255
  4420  0021AC  EF05  F011         	goto	l560
  4421  0021B0                     l4154:
  4422                           
  4423                           ;A6Lib.c: 169: if(RSSI < 3) return 0;
  4424  0021B0  0E03               	movlw	3
  4425  0021B2  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4426  0021B4  EFDE  F010         	goto	u3361
  4427  0021B8  EFE0  F010         	goto	u3360
  4428  0021BC                     u3361:
  4429  0021BC  EFE3  F010         	goto	l4160
  4430  0021C0                     u3360:
  4431  0021C0  0E00               	movlw	0
  4432  0021C2  EF05  F011         	goto	l560
  4433  0021C6                     l4160:
  4434                           
  4435                           ;A6Lib.c: 170: if(RSSI < 10) return 1;
  4436  0021C6  0E0A               	movlw	10
  4437  0021C8  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4438  0021CA  EFE9  F010         	goto	u3371
  4439  0021CE  EFEB  F010         	goto	u3370
  4440  0021D2                     u3371:
  4441  0021D2  EFEE  F010         	goto	l4166
  4442  0021D6                     u3370:
  4443  0021D6  0E01               	movlw	1
  4444  0021D8  EF05  F011         	goto	l560
  4445  0021DC                     l4166:
  4446                           
  4447                           ;A6Lib.c: 171: if(RSSI < 15) return 2;
  4448  0021DC  0E0F               	movlw	15
  4449  0021DE  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4450  0021E0  EFF4  F010         	goto	u3381
  4451  0021E4  EFF6  F010         	goto	u3380
  4452  0021E8                     u3381:
  4453  0021E8  EFF9  F010         	goto	l4172
  4454  0021EC                     u3380:
  4455  0021EC  0E02               	movlw	2
  4456  0021EE  EF05  F011         	goto	l560
  4457  0021F2                     l4172:
  4458                           
  4459                           ;A6Lib.c: 172: if(RSSI < 20) return 3;
  4460  0021F2  0E14               	movlw	20
  4461  0021F4  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4462  0021F6  EFFF  F010         	goto	u3391
  4463  0021FA  EF01  F011         	goto	u3390
  4464  0021FE                     u3391:
  4465  0021FE  EF04  F011         	goto	l4178
  4466  002202                     u3390:
  4467  002202  0E03               	movlw	3
  4468  002204  EF05  F011         	goto	l560
  4469  002208                     l4178:
  4470                           
  4471                           ;A6Lib.c: 173: return 4;
  4472  002208  0E04               	movlw	4
  4473  00220A                     l560:
  4474  00220A  0012               	return		;funcret
  4475  00220C                     __end_of_A6_NetworkGetRSSILevel:
  4476                           	opt callstack 0
  4477                           
  4478 ;; *************** function _A6_NetworkGetRSSI *****************
  4479 ;; Defined at:
  4480 ;;		line 149 in file "A6Lib.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  response       32   30[COMRAM] unsigned char [32]
  4485 ;;  RSSIToken       2   62[COMRAM] PTR unsigned char 
  4486 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;                  1    wreg      unsigned char 
  4489 ;; Registers used:
  4490 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4496 ;;      Params:         0       0       0       0       0       0       0       0       0
  4497 ;;      Locals:        34       0       0       0       0       0       0       0       0
  4498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4499 ;;      Totals:        34       0       0       0       0       0       0       0       0
  4500 ;;Total ram usage:       34 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; Hardware stack levels required when called:    6
  4503 ;; This function calls:
  4504 ;;		_A6_Command
  4505 ;;		_atoi
  4506 ;;		_strstr
  4507 ;;		_strtok
  4508 ;; This function is called by:
  4509 ;;		_loop
  4510 ;;		_A6_NetworkGetRSSILevel
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text5
  4515  001BB4                     __ptext5:
  4516                           	opt callstack 0
  4517  001BB4                     _A6_NetworkGetRSSI:
  4518                           	opt callstack 22
  4519  001BB4                     
  4520                           ;A6Lib.c: 150: char *RSSIToken;;A6Lib.c: 151: char response[32];;A6Lib.c: 153: A6_Comman
      +                          d("AT+CSQ\r", 0, response, 32);
  4521  001BB4  0EC3               	movlw	low STR_37
  4522  001BB6  6E18               	movwf	A6_Command@command^0,c
  4523  001BB8  0E5F               	movlw	high STR_37
  4524  001BBA  6E19               	movwf	(A6_Command@command+1)^0,c
  4525  001BBC  0E00               	movlw	0
  4526  001BBE  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4527  001BC0  0E00               	movlw	0
  4528  001BC2  6E1A               	movwf	A6_Command@timeout^0,c
  4529  001BC4  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4530  001BC6  6E1C               	movwf	A6_Command@response^0,c
  4531  001BC8  0E00               	movlw	high A6_NetworkGetRSSI@response
  4532  001BCA  6E1D               	movwf	(A6_Command@response+1)^0,c
  4533  001BCC  0E20               	movlw	32
  4534  001BCE  6E1E               	movwf	A6_Command@responseLen^0,c
  4535  001BD0  ECDD  F014         	call	_A6_Command	;wreg free
  4536  001BD4                     
  4537                           ;A6Lib.c: 154: if(strstr(response, "+CSQ: ") != (0)) {
  4538  001BD4  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4539  001BD6  6E10               	movwf	strstr@s1^0,c
  4540  001BD8  0E00               	movlw	high A6_NetworkGetRSSI@response
  4541  001BDA  6E11               	movwf	(strstr@s1+1)^0,c
  4542  001BDC  0EDA               	movlw	low STR_38
  4543  001BDE  6E12               	movwf	strstr@s2^0,c
  4544  001BE0  0E5F               	movlw	high STR_38
  4545  001BE2  6E13               	movwf	(strstr@s2+1)^0,c
  4546  001BE4  EC3B  F00E         	call	_strstr	;wreg free
  4547  001BE8  5010               	movf	?_strstr^0,w,c
  4548  001BEA  1011               	iorwf	(?_strstr+1)^0,w,c
  4549  001BEC  B4D8               	btfsc	status,2,c
  4550  001BEE  EFFB  F00D         	goto	u3151
  4551  001BF2  EFFD  F00D         	goto	u3150
  4552  001BF6                     u3151:
  4553  001BF6  EF39  F00E         	goto	l4018
  4554  001BFA                     u3150:
  4555  001BFA                     
  4556                           ;A6Lib.c: 155: RSSIToken = strtok(response, " ");
  4557  001BFA  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4558  001BFC  6E12               	movwf	strtok@s1^0,c
  4559  001BFE  0E00               	movlw	high A6_NetworkGetRSSI@response
  4560  001C00  6E13               	movwf	(strtok@s1+1)^0,c
  4561  001C02  0ED1               	movlw	low (STR_34+6)
  4562  001C04  6E14               	movwf	strtok@s2^0,c
  4563  001C06  0E5F               	movlw	high (STR_34+6)
  4564  001C08  6E15               	movwf	(strtok@s2+1)^0,c
  4565  001C0A  ECE4  F00A         	call	_strtok	;wreg free
  4566  001C0E  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4567  001C12  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4568                           
  4569                           ;A6Lib.c: 156: RSSIToken = strtok((0), response);
  4570  001C16  0E00               	movlw	0
  4571  001C18  6E12               	movwf	strtok@s1^0,c
  4572  001C1A  0E00               	movlw	0
  4573  001C1C  6E13               	movwf	(strtok@s1+1)^0,c
  4574  001C1E  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4575  001C20  6E14               	movwf	strtok@s2^0,c
  4576  001C22  0E00               	movlw	high A6_NetworkGetRSSI@response
  4577  001C24  6E15               	movwf	(strtok@s2+1)^0,c
  4578  001C26  ECE4  F00A         	call	_strtok	;wreg free
  4579  001C2A  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4580  001C2E  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4581  001C32                     
  4582                           ;A6Lib.c: 157: if(RSSIToken != (0)) {
  4583  001C32  503F               	movf	A6_NetworkGetRSSI@RSSIToken^0,w,c
  4584  001C34  1040               	iorwf	(A6_NetworkGetRSSI@RSSIToken+1)^0,w,c
  4585  001C36  B4D8               	btfsc	status,2,c
  4586  001C38  EF20  F00E         	goto	u3161
  4587  001C3C  EF22  F00E         	goto	u3160
  4588  001C40                     u3161:
  4589  001C40  EF39  F00E         	goto	l4018
  4590  001C44                     u3160:
  4591  001C44                     
  4592                           ;A6Lib.c: 158: RSSIToken = strtok(RSSIToken, ",");
  4593  001C44  C03F  F012         	movff	A6_NetworkGetRSSI@RSSIToken,strtok@s1
  4594  001C48  C040  F013         	movff	A6_NetworkGetRSSI@RSSIToken+1,strtok@s1+1
  4595  001C4C  0EFD               	movlw	low STR_36
  4596  001C4E  6E14               	movwf	strtok@s2^0,c
  4597  001C50  0E5F               	movlw	high STR_36
  4598  001C52  6E15               	movwf	(strtok@s2+1)^0,c
  4599  001C54  ECE4  F00A         	call	_strtok	;wreg free
  4600  001C58  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4601  001C5C  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4602  001C60                     
  4603                           ;A6Lib.c: 159: return atoi(RSSIToken);
  4604  001C60  C03F  F00B         	movff	A6_NetworkGetRSSI@RSSIToken,atoi@s
  4605  001C64  C040  F00C         	movff	A6_NetworkGetRSSI@RSSIToken+1,atoi@s+1
  4606  001C68  EC58  F00A         	call	_atoi	;wreg free
  4607  001C6C  500B               	movf	?_atoi^0,w,c
  4608  001C6E  EF3A  F00E         	goto	l556
  4609  001C72                     l4018:
  4610                           
  4611                           ;A6Lib.c: 160: };A6Lib.c: 161: };A6Lib.c: 163: return 0;
  4612  001C72  0E00               	movlw	0
  4613  001C74                     l556:
  4614  001C74  0012               	return		;funcret
  4615  001C76                     __end_of_A6_NetworkGetRSSI:
  4616                           	opt callstack 0
  4617                           
  4618 ;; *************** function _atoi *****************
  4619 ;; Defined at:
  4620 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atoi.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4623 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  a               2   15[COMRAM] int 
  4626 ;;  sign            1   14[COMRAM] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  2   10[COMRAM] int 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4636 ;;      Params:         2       0       0       0       0       0       0       0       0
  4637 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4638 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4639 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4640 ;;Total ram usage:        7 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    3
  4643 ;; This function calls:
  4644 ;;		___wmul
  4645 ;;		_isdigit
  4646 ;; This function is called by:
  4647 ;;		_A6_NetworkGetStatus
  4648 ;;		_A6_NetworkGetRSSI
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text6
  4653  0014B0                     __ptext6:
  4654                           	opt callstack 0
  4655  0014B0                     _atoi:
  4656                           	opt callstack 25
  4657  0014B0  EF5C  F00A         	goto	l3704
  4658  0014B4                     l3702:
  4659  0014B4  4A0B               	infsnz	atoi@s^0,f,c
  4660  0014B6  2A0C               	incf	(atoi@s+1)^0,f,c
  4661  0014B8                     l3704:
  4662  0014B8  C00B  FFD9         	movff	atoi@s,fsr2l
  4663  0014BC  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4664  0014C0  0E20               	movlw	32
  4665  0014C2  18DE               	xorwf	postinc2,w,c
  4666  0014C4  B4D8               	btfsc	status,2,c
  4667  0014C6  EF67  F00A         	goto	u2671
  4668  0014CA  EF69  F00A         	goto	u2670
  4669  0014CE                     u2671:
  4670  0014CE  EF5A  F00A         	goto	l3702
  4671  0014D2                     u2670:
  4672  0014D2  C00B  FFD9         	movff	atoi@s,fsr2l
  4673  0014D6  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4674  0014DA  0E09               	movlw	9
  4675  0014DC  18DE               	xorwf	postinc2,w,c
  4676  0014DE  B4D8               	btfsc	status,2,c
  4677  0014E0  EF74  F00A         	goto	u2681
  4678  0014E4  EF76  F00A         	goto	u2680
  4679  0014E8                     u2681:
  4680  0014E8  EF5A  F00A         	goto	l3702
  4681  0014EC                     u2680:
  4682  0014EC  0E00               	movlw	0
  4683  0014EE  6E11               	movwf	(atoi@a+1)^0,c
  4684  0014F0  0E00               	movlw	0
  4685  0014F2  6E10               	movwf	atoi@a^0,c
  4686  0014F4  0E00               	movlw	0
  4687  0014F6  6E0F               	movwf	atoi@sign^0,c
  4688  0014F8  C00B  FFD9         	movff	atoi@s,fsr2l
  4689  0014FC  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4690  001500  0E2D               	movlw	45
  4691  001502  18DE               	xorwf	postinc2,w,c
  4692  001504  A4D8               	btfss	status,2,c
  4693  001506  EF87  F00A         	goto	u2691
  4694  00150A  EF89  F00A         	goto	u2690
  4695  00150E                     u2691:
  4696  00150E  EF8E  F00A         	goto	l3714
  4697  001512                     u2690:
  4698  001512  2A0F               	incf	atoi@sign^0,f,c
  4699  001514  4A0B               	infsnz	atoi@s^0,f,c
  4700  001516  2A0C               	incf	(atoi@s+1)^0,f,c
  4701  001518  EFBB  F00A         	goto	l3722
  4702  00151C                     l3714:
  4703  00151C  C00B  FFD9         	movff	atoi@s,fsr2l
  4704  001520  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4705  001524  0E2B               	movlw	43
  4706  001526  18DE               	xorwf	postinc2,w,c
  4707  001528  A4D8               	btfss	status,2,c
  4708  00152A  EF99  F00A         	goto	u2701
  4709  00152E  EF9B  F00A         	goto	u2700
  4710  001532                     u2701:
  4711  001532  EFBB  F00A         	goto	l3722
  4712  001536                     u2700:
  4713  001536                     l3716:
  4714  001536  4A0B               	infsnz	atoi@s^0,f,c
  4715  001538  2A0C               	incf	(atoi@s+1)^0,f,c
  4716  00153A  EFBB  F00A         	goto	l3722
  4717  00153E                     l3718:
  4718  00153E  C010  F005         	movff	atoi@a,___wmul@multiplier
  4719  001542  C011  F006         	movff	atoi@a+1,___wmul@multiplier+1
  4720  001546  0E00               	movlw	0
  4721  001548  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4722  00154A  0E0A               	movlw	10
  4723  00154C  6E07               	movwf	___wmul@multiplicand^0,c
  4724  00154E  EC61  F015         	call	___wmul	;wreg free
  4725  001552  C00B  FFD9         	movff	atoi@s,fsr2l
  4726  001556  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4727  00155A  50DF               	movf	indf2,w,c
  4728  00155C  6E0D               	movwf	??_atoi^0,c
  4729  00155E  500D               	movf	??_atoi^0,w,c
  4730  001560  2605               	addwf	?___wmul^0,f,c
  4731  001562  0E00               	movlw	0
  4732  001564  2206               	addwfc	(?___wmul+1)^0,f,c
  4733  001566  0ED0               	movlw	208
  4734  001568  2405               	addwf	?___wmul^0,w,c
  4735  00156A  6E10               	movwf	atoi@a^0,c
  4736  00156C  0EFF               	movlw	255
  4737  00156E  2006               	addwfc	(?___wmul+1)^0,w,c
  4738  001570  6E11               	movwf	(atoi@a+1)^0,c
  4739  001572  EF9B  F00A         	goto	l3716
  4740  001576                     l3722:
  4741  001576  C00B  FFD9         	movff	atoi@s,fsr2l
  4742  00157A  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4743  00157E  50DF               	movf	indf2,w,c
  4744  001580  EC30  F015         	call	_isdigit
  4745  001584  B0D8               	btfsc	status,0,c
  4746  001586  EFC7  F00A         	goto	u2711
  4747  00158A  EFC9  F00A         	goto	u2710
  4748  00158E                     u2711:
  4749  00158E  EF9F  F00A         	goto	l3718
  4750  001592                     u2710:
  4751  001592  500F               	movf	atoi@sign^0,w,c
  4752  001594  B4D8               	btfsc	status,2,c
  4753  001596  EFCF  F00A         	goto	u2721
  4754  00159A  EFD1  F00A         	goto	u2720
  4755  00159E                     u2721:
  4756  00159E  EFDF  F00A         	goto	l1380
  4757  0015A2                     u2720:
  4758  0015A2  C010  F00D         	movff	atoi@a,??_atoi
  4759  0015A6  C011  F00E         	movff	atoi@a+1,??_atoi+1
  4760  0015AA  1E0D               	comf	??_atoi^0,f,c
  4761  0015AC  1E0E               	comf	(??_atoi+1)^0,f,c
  4762  0015AE  4A0D               	infsnz	??_atoi^0,f,c
  4763  0015B0  2A0E               	incf	(??_atoi+1)^0,f,c
  4764  0015B2  C00D  F00B         	movff	??_atoi,?_atoi
  4765  0015B6  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  4766  0015BA  EFE3  F00A         	goto	l1381
  4767  0015BE                     l1380:
  4768  0015BE  C010  F00B         	movff	atoi@a,?_atoi
  4769  0015C2  C011  F00C         	movff	atoi@a+1,?_atoi+1
  4770  0015C6                     l1381:
  4771  0015C6  0012               	return		;funcret
  4772  0015C8                     __end_of_atoi:
  4773                           	opt callstack 0
  4774                           
  4775 ;; *************** function _A6_BaudRateSet *****************
  4776 ;; Defined at:
  4777 ;;		line 48 in file "A6Lib.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  baudRate        4   16[BANK0 ] const unsigned long 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  response       32   20[BANK0 ] unsigned char [32]
  4782 ;;  request        20   52[BANK0 ] unsigned char [20]
  4783 ;;  currentBaudR    4   72[BANK0 ] unsigned long 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  4   16[BANK0 ] unsigned long 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4793 ;;      Params:         0       4       0       0       0       0       0       0       0
  4794 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4796 ;;      Totals:         0      60       0       0       0       0       0       0       0
  4797 ;;Total ram usage:       60 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    7
  4800 ;; This function calls:
  4801 ;;		_A6_BaudRateGet
  4802 ;;		_A6_Command
  4803 ;;		_A6_IsAlive
  4804 ;;		_EUSART_BaudRateSet
  4805 ;;		_sleepMS
  4806 ;;		_sprintf
  4807 ;;		_strcmp
  4808 ;; This function is called by:
  4809 ;;		_loop
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text7
  4814  001262                     __ptext7:
  4815                           	opt callstack 0
  4816  001262                     _A6_BaudRateSet:
  4817                           	opt callstack 22
  4818  001262                     
  4819                           ;A6Lib.c: 49: char request[20];;A6Lib.c: 50: char response[32];;A6Lib.c: 51: uint32_t cu
      +                          rrentBaudRate = A6_BaudRateGet();
  4820  001262  ECC6  F009         	call	_A6_BaudRateGet	;wreg free
  4821  001266  C01F  F0A8         	movff	?_A6_BaudRateGet,A6_BaudRateSet@currentBaudRate
  4822  00126A  C020  F0A9         	movff	?_A6_BaudRateGet+1,A6_BaudRateSet@currentBaudRate+1
  4823  00126E  C021  F0AA         	movff	?_A6_BaudRateGet+2,A6_BaudRateSet@currentBaudRate+2
  4824  001272  C022  F0AB         	movff	?_A6_BaudRateGet+3,A6_BaudRateSet@currentBaudRate+3
  4825  001276                     
  4826                           ;A6Lib.c: 54: if(currentBaudRate == 0) return 0;
  4827  001276  0100               	movlb	0	; () banked
  4828  001278  51A8               	movf	A6_BaudRateSet@currentBaudRate& (0+255),w,b
  4829  00127A  11A9               	iorwf	(A6_BaudRateSet@currentBaudRate+1)& (0+255),w,b
  4830  00127C  11AA               	iorwf	(A6_BaudRateSet@currentBaudRate+2)& (0+255),w,b
  4831  00127E  11AB               	iorwf	(A6_BaudRateSet@currentBaudRate+3)& (0+255),w,b
  4832  001280  A4D8               	btfss	status,2,c
  4833  001282  EF45  F009         	goto	u3301
  4834  001286  EF47  F009         	goto	u3300
  4835  00128A                     u3301:
  4836  00128A  EF52  F009         	goto	l4102
  4837  00128E                     u3300:
  4838  00128E                     l4098:
  4839  00128E  0E00               	movlw	0
  4840  001290  0100               	movlb	0	; () banked
  4841  001292  6F70               	movwf	?_A6_BaudRateSet& (0+255),b
  4842  001294  0E00               	movlw	0
  4843  001296  6F71               	movwf	(?_A6_BaudRateSet+1)& (0+255),b
  4844  001298  0E00               	movlw	0
  4845  00129A  6F72               	movwf	(?_A6_BaudRateSet+2)& (0+255),b
  4846  00129C  0E00               	movlw	0
  4847  00129E  6F73               	movwf	(?_A6_BaudRateSet+3)& (0+255),b
  4848  0012A0  EFC5  F009         	goto	l515
  4849  0012A4                     l4102:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;A6Lib.c: 57: sprintf(request, "AT+IPR=%lu\r", baudRate);
  4853  0012A4  0E94               	movlw	low A6_BaudRateSet@request
  4854  0012A6  6E4A               	movwf	sprintf@sp^0,c
  4855  0012A8  0E00               	movlw	high A6_BaudRateSet@request
  4856  0012AA  6E4B               	movwf	(sprintf@sp+1)^0,c
  4857  0012AC  0E45               	movlw	low STR_28
  4858  0012AE  6E4C               	movwf	sprintf@f^0,c
  4859  0012B0  0E5F               	movlw	high STR_28
  4860  0012B2  6E4D               	movwf	(sprintf@f+1)^0,c
  4861  0012B4  C070  F04E         	movff	A6_BaudRateSet@baudRate,?_sprintf+4
  4862  0012B8  C071  F04F         	movff	A6_BaudRateSet@baudRate+1,?_sprintf+5
  4863  0012BC  C072  F050         	movff	A6_BaudRateSet@baudRate+2,?_sprintf+6
  4864  0012C0  C073  F051         	movff	A6_BaudRateSet@baudRate+3,?_sprintf+7
  4865  0012C4  EC4F  F003         	call	_sprintf	;wreg free
  4866  0012C8                     
  4867                           ;A6Lib.c: 58: A6_Command(request, 0, response, 32);
  4868  0012C8  0E94               	movlw	low A6_BaudRateSet@request
  4869  0012CA  6E18               	movwf	A6_Command@command^0,c
  4870  0012CC  0E00               	movlw	high A6_BaudRateSet@request
  4871  0012CE  6E19               	movwf	(A6_Command@command+1)^0,c
  4872  0012D0  0E00               	movlw	0
  4873  0012D2  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4874  0012D4  0E00               	movlw	0
  4875  0012D6  6E1A               	movwf	A6_Command@timeout^0,c
  4876  0012D8  0E74               	movlw	low A6_BaudRateSet@response
  4877  0012DA  6E1C               	movwf	A6_Command@response^0,c
  4878  0012DC  0E00               	movlw	high A6_BaudRateSet@response
  4879  0012DE  6E1D               	movwf	(A6_Command@response+1)^0,c
  4880  0012E0  0E20               	movlw	32
  4881  0012E2  6E1E               	movwf	A6_Command@responseLen^0,c
  4882  0012E4  ECDD  F014         	call	_A6_Command	;wreg free
  4883  0012E8                     
  4884                           ;A6Lib.c: 59: sleepMS(250);
  4885  0012E8  0EFA               	movlw	250
  4886  0012EA  6E05               	movwf	sleepMS@ms^0,c
  4887  0012EC  0E00               	movlw	0
  4888  0012EE  6E06               	movwf	(sleepMS@ms+1)^0,c
  4889  0012F0  0E00               	movlw	0
  4890  0012F2  6E07               	movwf	(sleepMS@ms+2)^0,c
  4891  0012F4  0E00               	movlw	0
  4892  0012F6  6E08               	movwf	(sleepMS@ms+3)^0,c
  4893  0012F8  ECC0  F014         	call	_sleepMS	;wreg free
  4894  0012FC                     
  4895                           ;A6Lib.c: 60: if(strcmp(response, "OK") == 0) {
  4896  0012FC  0E74               	movlw	low A6_BaudRateSet@response
  4897  0012FE  6E05               	movwf	strcmp@s1^0,c
  4898  001300  0E00               	movlw	high A6_BaudRateSet@response
  4899  001302  6E06               	movwf	(strcmp@s1+1)^0,c
  4900  001304  0EFA               	movlw	low STR_24
  4901  001306  6E07               	movwf	strcmp@s2^0,c
  4902  001308  0E5F               	movlw	high STR_24
  4903  00130A  6E08               	movwf	(strcmp@s2+1)^0,c
  4904  00130C  EC2E  F013         	call	_strcmp	;wreg free
  4905  001310  5005               	movf	?_strcmp^0,w,c
  4906  001312  1006               	iorwf	(?_strcmp+1)^0,w,c
  4907  001314  A4D8               	btfss	status,2,c
  4908  001316  EF8F  F009         	goto	u3311
  4909  00131A  EF91  F009         	goto	u3310
  4910  00131E                     u3311:
  4911  00131E  EFB9  F009         	goto	l4116
  4912  001322                     u3310:
  4913  001322                     
  4914                           ;A6Lib.c: 62: EUSART_BaudRateSet(baudRate);
  4915  001322  C070  F012         	movff	A6_BaudRateSet@baudRate,EUSART_BaudRateSet@baudRate
  4916  001326  C071  F013         	movff	A6_BaudRateSet@baudRate+1,EUSART_BaudRateSet@baudRate+1
  4917  00132A  C072  F014         	movff	A6_BaudRateSet@baudRate+2,EUSART_BaudRateSet@baudRate+2
  4918  00132E  C073  F015         	movff	A6_BaudRateSet@baudRate+3,EUSART_BaudRateSet@baudRate+3
  4919  001332  EC46  F010         	call	_EUSART_BaudRateSet	;wreg free
  4920                           
  4921                           ;A6Lib.c: 63: sleepMS(150);
  4922  001336  0E96               	movlw	150
  4923  001338  6E05               	movwf	sleepMS@ms^0,c
  4924  00133A  0E00               	movlw	0
  4925  00133C  6E06               	movwf	(sleepMS@ms+1)^0,c
  4926  00133E  0E00               	movlw	0
  4927  001340  6E07               	movwf	(sleepMS@ms+2)^0,c
  4928  001342  0E00               	movlw	0
  4929  001344  6E08               	movwf	(sleepMS@ms+3)^0,c
  4930  001346  ECC0  F014         	call	_sleepMS	;wreg free
  4931  00134A                     
  4932                           ;A6Lib.c: 64: if(A6_IsAlive() == 1) {
  4933  00134A  EC5E  F013         	call	_A6_IsAlive	;wreg free
  4934  00134E  06E8               	decf	wreg,f,c
  4935  001350  A4D8               	btfss	status,2,c
  4936  001352  EFAD  F009         	goto	u3321
  4937  001356  EFAF  F009         	goto	u3320
  4938  00135A                     u3321:
  4939  00135A  EFB9  F009         	goto	l4116
  4940  00135E                     u3320:
  4941  00135E                     
  4942                           ;A6Lib.c: 65: return baudRate;
  4943  00135E  C070  F070         	movff	A6_BaudRateSet@baudRate,?_A6_BaudRateSet
  4944  001362  C071  F071         	movff	A6_BaudRateSet@baudRate+1,?_A6_BaudRateSet+1
  4945  001366  C072  F072         	movff	A6_BaudRateSet@baudRate+2,?_A6_BaudRateSet+2
  4946  00136A  C073  F073         	movff	A6_BaudRateSet@baudRate+3,?_A6_BaudRateSet+3
  4947  00136E  EFC5  F009         	goto	l515
  4948  001372                     l4116:
  4949                           
  4950                           ;A6Lib.c: 66: };A6Lib.c: 67: };A6Lib.c: 70: EUSART_BaudRateSet(currentBaudRate);
  4951  001372  C0A8  F012         	movff	A6_BaudRateSet@currentBaudRate,EUSART_BaudRateSet@baudRate
  4952  001376  C0A9  F013         	movff	A6_BaudRateSet@currentBaudRate+1,EUSART_BaudRateSet@baudRate+1
  4953  00137A  C0AA  F014         	movff	A6_BaudRateSet@currentBaudRate+2,EUSART_BaudRateSet@baudRate+2
  4954  00137E  C0AB  F015         	movff	A6_BaudRateSet@currentBaudRate+3,EUSART_BaudRateSet@baudRate+3
  4955  001382  EC46  F010         	call	_EUSART_BaudRateSet	;wreg free
  4956  001386  EF47  F009         	goto	l4098
  4957  00138A                     l515:
  4958  00138A  0012               	return		;funcret
  4959  00138C                     __end_of_A6_BaudRateSet:
  4960                           	opt callstack 0
  4961                           
  4962 ;; *************** function _A6_BaudRateGet *****************
  4963 ;; Defined at:
  4964 ;;		line 26 in file "A6Lib.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  j               1   72[COMRAM] unsigned char 
  4969 ;;  response       32   34[COMRAM] unsigned char [32]
  4970 ;;  baudRate        4   66[COMRAM] unsigned long 
  4971 ;;  baudRateToke    2   70[COMRAM] PTR unsigned char 
  4972 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  4   30[COMRAM] unsigned long 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4982 ;;      Params:         4       0       0       0       0       0       0       0       0
  4983 ;;      Locals:        39       0       0       0       0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4985 ;;      Totals:        43       0       0       0       0       0       0       0       0
  4986 ;;Total ram usage:       43 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    6
  4989 ;; This function calls:
  4990 ;;		_A6_Command
  4991 ;;		_atol
  4992 ;;		_strstr
  4993 ;;		_strtok
  4994 ;; This function is called by:
  4995 ;;		_loop
  4996 ;;		_A6_BaudRateSet
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text8
  5001  00138C                     __ptext8:
  5002                           	opt callstack 0
  5003  00138C                     _A6_BaudRateGet:
  5004                           	opt callstack 22
  5005  00138C                     
  5006                           ;A6Lib.c: 27: uint32_t baudRate;;A6Lib.c: 28: char *baudRateToken;;A6Lib.c: 29: char res
      +                          ponse[32];;A6Lib.c: 31: A6_Command("AT+IPR?\r", 0, response, 32);
  5007  00138C  0EB1               	movlw	low STR_25
  5008  00138E  6E18               	movwf	A6_Command@command^0,c
  5009  001390  0E5F               	movlw	high STR_25
  5010  001392  6E19               	movwf	(A6_Command@command+1)^0,c
  5011  001394  0E00               	movlw	0
  5012  001396  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  5013  001398  0E00               	movlw	0
  5014  00139A  6E1A               	movwf	A6_Command@timeout^0,c
  5015  00139C  0E23               	movlw	low A6_BaudRateGet@response
  5016  00139E  6E1C               	movwf	A6_Command@response^0,c
  5017  0013A0  0E00               	movlw	high A6_BaudRateGet@response
  5018  0013A2  6E1D               	movwf	(A6_Command@response+1)^0,c
  5019  0013A4  0E20               	movlw	32
  5020  0013A6  6E1E               	movwf	A6_Command@responseLen^0,c
  5021  0013A8  ECDD  F014         	call	_A6_Command	;wreg free
  5022  0013AC                     
  5023                           ;A6Lib.c: 32: if(strstr(response, "+IPR: ") != (0)) {
  5024  0013AC  0E23               	movlw	low A6_BaudRateGet@response
  5025  0013AE  6E10               	movwf	strstr@s1^0,c
  5026  0013B0  0E00               	movlw	high A6_BaudRateGet@response
  5027  0013B2  6E11               	movwf	(strstr@s1+1)^0,c
  5028  0013B4  0EE1               	movlw	low STR_26
  5029  0013B6  6E12               	movwf	strstr@s2^0,c
  5030  0013B8  0E5F               	movlw	high STR_26
  5031  0013BA  6E13               	movwf	(strstr@s2+1)^0,c
  5032  0013BC  EC3B  F00E         	call	_strstr	;wreg free
  5033  0013C0  5010               	movf	?_strstr^0,w,c
  5034  0013C2  1011               	iorwf	(?_strstr+1)^0,w,c
  5035  0013C4  B4D8               	btfsc	status,2,c
  5036  0013C6  EFE7  F009         	goto	u2851
  5037  0013CA  EFE9  F009         	goto	u2850
  5038  0013CE                     u2851:
  5039  0013CE  EF4F  F00A         	goto	l3834
  5040  0013D2                     u2850:
  5041  0013D2                     
  5042                           ;A6Lib.c: 33: baudRateToken = strtok(response, " ");
  5043  0013D2  0E23               	movlw	low A6_BaudRateGet@response
  5044  0013D4  6E12               	movwf	strtok@s1^0,c
  5045  0013D6  0E00               	movlw	high A6_BaudRateGet@response
  5046  0013D8  6E13               	movwf	(strtok@s1+1)^0,c
  5047  0013DA  0ED1               	movlw	low (STR_34+6)
  5048  0013DC  6E14               	movwf	strtok@s2^0,c
  5049  0013DE  0E5F               	movlw	high (STR_34+6)
  5050  0013E0  6E15               	movwf	(strtok@s2+1)^0,c
  5051  0013E2  ECE4  F00A         	call	_strtok	;wreg free
  5052  0013E6  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  5053  0013EA  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  5054                           
  5055                           ;A6Lib.c: 34: baudRateToken = strtok((0), response);
  5056  0013EE  0E00               	movlw	0
  5057  0013F0  6E12               	movwf	strtok@s1^0,c
  5058  0013F2  0E00               	movlw	0
  5059  0013F4  6E13               	movwf	(strtok@s1+1)^0,c
  5060  0013F6  0E23               	movlw	low A6_BaudRateGet@response
  5061  0013F8  6E14               	movwf	strtok@s2^0,c
  5062  0013FA  0E00               	movlw	high A6_BaudRateGet@response
  5063  0013FC  6E15               	movwf	(strtok@s2+1)^0,c
  5064  0013FE  ECE4  F00A         	call	_strtok	;wreg free
  5065  001402  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  5066  001406  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  5067  00140A                     
  5068                           ;A6Lib.c: 35: if(baudRateToken != (0)) {
  5069  00140A  5047               	movf	A6_BaudRateGet@baudRateToken^0,w,c
  5070  00140C  1048               	iorwf	(A6_BaudRateGet@baudRateToken+1)^0,w,c
  5071  00140E  B4D8               	btfsc	status,2,c
  5072  001410  EF0C  F00A         	goto	u2861
  5073  001414  EF0E  F00A         	goto	u2860
  5074  001418                     u2861:
  5075  001418  EF4F  F00A         	goto	l3834
  5076  00141C                     u2860:
  5077  00141C                     
  5078                           ;A6Lib.c: 36: baudRate = atol(baudRateToken);
  5079  00141C  C047  F011         	movff	A6_BaudRateGet@baudRateToken,atol@s
  5080  001420  C048  F012         	movff	A6_BaudRateGet@baudRateToken+1,atol@s+1
  5081  001424  EC94  F008         	call	_atol	;wreg free
  5082  001428  C011  F043         	movff	?_atol,A6_BaudRateGet@baudRate
  5083  00142C  C012  F044         	movff	?_atol+1,A6_BaudRateGet@baudRate+1
  5084  001430  C013  F045         	movff	?_atol+2,A6_BaudRateGet@baudRate+2
  5085  001434  C014  F046         	movff	?_atol+3,A6_BaudRateGet@baudRate+3
  5086  001438                     
  5087                           ;A6Lib.c: 37: for(uint8_t j=0; j<3; j++) {
  5088  001438  0E00               	movlw	0
  5089  00143A  6E49               	movwf	A6_BaudRateGet@j^0,c
  5090  00143C                     l3826:
  5091                           
  5092                           ;A6Lib.c: 38: if(baudRate == A6_BAUDRATES[j]) {
  5093  00143C  5049               	movf	A6_BaudRateGet@j^0,w,c
  5094  00143E  0D04               	mullw	4
  5095  001440  0EE9               	movlw	low _A6_BAUDRATES
  5096  001442  24F3               	addwf	243,w,c
  5097  001444  6EF6               	movwf	tblptrl,c
  5098  001446  0E5D               	movlw	high _A6_BAUDRATES
  5099  001448  20F4               	addwfc	244,w,c
  5100  00144A  6EF7               	movwf	tblptrh,c
  5101  00144C                     	if	0	;There are less than 3 active tblptr bytes
  5102  00144C                     	endif
  5103  00144C  5043               	movf	A6_BaudRateGet@baudRate^0,w,c
  5104  00144E  0009               	tblrd		*+
  5105  001450  18F5               	xorwf	tablat,w,c
  5106  001452  E110               	bnz	u2871
  5107  001454  5044               	movf	(A6_BaudRateGet@baudRate+1)^0,w,c
  5108  001456  0009               	tblrd		*+
  5109  001458  18F5               	xorwf	tablat,w,c
  5110  00145A  E10C               	bnz	u2871
  5111  00145C  5045               	movf	(A6_BaudRateGet@baudRate+2)^0,w,c
  5112  00145E  0009               	tblrd		*+
  5113  001460  18F5               	xorwf	tablat,w,c
  5114  001462  E108               	bnz	u2871
  5115  001464  5046               	movf	(A6_BaudRateGet@baudRate+3)^0,w,c
  5116  001466  0009               	tblrd		*+
  5117  001468  18F5               	xorwf	tablat,w,c
  5118  00146A  A4D8               	btfss	status,2,c
  5119  00146C  EF3A  F00A         	goto	u2871
  5120  001470  EF3C  F00A         	goto	u2870
  5121  001474                     u2871:
  5122  001474  EF46  F00A         	goto	l3830
  5123  001478                     u2870:
  5124  001478                     
  5125                           ;A6Lib.c: 39: return baudRate;
  5126  001478  C043  F01F         	movff	A6_BaudRateGet@baudRate,?_A6_BaudRateGet
  5127  00147C  C044  F020         	movff	A6_BaudRateGet@baudRate+1,?_A6_BaudRateGet+1
  5128  001480  C045  F021         	movff	A6_BaudRateGet@baudRate+2,?_A6_BaudRateGet+2
  5129  001484  C046  F022         	movff	A6_BaudRateGet@baudRate+3,?_A6_BaudRateGet+3
  5130  001488  EF57  F00A         	goto	l511
  5131  00148C                     l3830:
  5132  00148C  2A49               	incf	A6_BaudRateGet@j^0,f,c
  5133  00148E  0E02               	movlw	2
  5134  001490  6449               	cpfsgt	A6_BaudRateGet@j^0,c
  5135  001492  EF4D  F00A         	goto	u2881
  5136  001496  EF4F  F00A         	goto	u2880
  5137  00149A                     u2881:
  5138  00149A  EF1E  F00A         	goto	l3826
  5139  00149E                     u2880:
  5140  00149E                     l3834:
  5141                           
  5142                           ;A6Lib.c: 40: };A6Lib.c: 41: };A6Lib.c: 42: };A6Lib.c: 43: };A6Lib.c: 45: return 0;
  5143  00149E  0E00               	movlw	0
  5144  0014A0  6E1F               	movwf	?_A6_BaudRateGet^0,c
  5145  0014A2  0E00               	movlw	0
  5146  0014A4  6E20               	movwf	(?_A6_BaudRateGet+1)^0,c
  5147  0014A6  0E00               	movlw	0
  5148  0014A8  6E21               	movwf	(?_A6_BaudRateGet+2)^0,c
  5149  0014AA  0E00               	movlw	0
  5150  0014AC  6E22               	movwf	(?_A6_BaudRateGet+3)^0,c
  5151  0014AE                     l511:
  5152  0014AE  0012               	return		;funcret
  5153  0014B0                     __end_of_A6_BaudRateGet:
  5154                           	opt callstack 0
  5155                           
  5156 ;; *************** function _strtok *****************
  5157 ;; Defined at:
  5158 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strtok.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  s1              2   17[COMRAM] PTR unsigned char 
  5161 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5162 ;;  s2              2   19[COMRAM] PTR const unsigned char 
  5163 ;;		 -> STR_40(2), STR_39(2), A6_NetworkGetRSSI@response(32), STR_36(2), 
  5164 ;;		 -> STR_35(2), A6_NetworkGetStatus@response(32), STR_27(2), NULL(0), 
  5165 ;;		 -> A6_BaudRateGet@response(32), 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;		None
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  2   17[COMRAM] PTR unsigned char 
  5170 ;; Registers used:
  5171 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5177 ;;      Params:         4       0       0       0       0       0       0       0       0
  5178 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5180 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5181 ;;Total ram usage:        4 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    4
  5184 ;; This function calls:
  5185 ;;		_strcspn
  5186 ;;		_strspn
  5187 ;; This function is called by:
  5188 ;;		_A6_BaudRateGet
  5189 ;;		_A6_NetworkGetStatus
  5190 ;;		_A6_NetworkGetRSSI
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text9
  5195  0015C8                     __ptext9:
  5196                           	opt callstack 0
  5197  0015C8                     _strtok:
  5198                           	opt callstack 24
  5199  0015C8  5012               	movf	strtok@s1^0,w,c
  5200  0015CA  1013               	iorwf	(strtok@s1+1)^0,w,c
  5201  0015CC  A4D8               	btfss	status,2,c
  5202  0015CE  EFEB  F00A         	goto	u2571
  5203  0015D2  EFED  F00A         	goto	u2570
  5204  0015D6                     u2571:
  5205  0015D6  EFF1  F00A         	goto	l1444
  5206  0015DA                     u2570:
  5207  0015DA  C0C6  F012         	movff	strtok@sp,strtok@s1
  5208  0015DE  C0C7  F013         	movff	strtok@sp+1,strtok@s1+1
  5209  0015E2                     l1444:
  5210  0015E2  5012               	movf	strtok@s1^0,w,c
  5211  0015E4  1013               	iorwf	(strtok@s1+1)^0,w,c
  5212  0015E6  A4D8               	btfss	status,2,c
  5213  0015E8  EFF8  F00A         	goto	u2581
  5214  0015EC  EFFA  F00A         	goto	u2580
  5215  0015F0                     u2581:
  5216  0015F0  EF00  F00B         	goto	l3642
  5217  0015F4                     u2580:
  5218  0015F4  0E00               	movlw	0
  5219  0015F6  6E12               	movwf	?_strtok^0,c
  5220  0015F8  0E00               	movlw	0
  5221  0015FA  6E13               	movwf	(?_strtok+1)^0,c
  5222  0015FC  EF54  F00B         	goto	l1446
  5223  001600                     l3642:
  5224  001600  C012  F00B         	movff	strtok@s1,strspn@s1
  5225  001604  C013  F00C         	movff	strtok@s1+1,strspn@s1+1
  5226  001608  C014  F00D         	movff	strtok@s2,strspn@s2
  5227  00160C  C015  F00E         	movff	strtok@s2+1,strspn@s2+1
  5228  001610  EC96  F012         	call	_strspn	;wreg free
  5229  001614  500B               	movf	?_strspn^0,w,c
  5230  001616  2612               	addwf	strtok@s1^0,f,c
  5231  001618  500C               	movf	(?_strspn+1)^0,w,c
  5232  00161A  2213               	addwfc	(strtok@s1+1)^0,f,c
  5233  00161C  C012  FFD9         	movff	strtok@s1,fsr2l
  5234  001620  C013  FFDA         	movff	strtok@s1+1,fsr2h
  5235  001624  50DF               	movf	indf2,w,c
  5236  001626  A4D8               	btfss	status,2,c
  5237  001628  EF18  F00B         	goto	u2591
  5238  00162C  EF1A  F00B         	goto	u2590
  5239  001630                     u2591:
  5240  001630  EF25  F00B         	goto	l3650
  5241  001634                     u2590:
  5242  001634  0E00               	movlw	0
  5243  001636  0100               	movlb	0	; () banked
  5244  001638  6FC6               	movwf	strtok@sp& (0+255),b
  5245  00163A  0E00               	movlw	0
  5246  00163C  6FC7               	movwf	(strtok@sp+1)& (0+255),b
  5247  00163E  C0C6  F012         	movff	strtok@sp,?_strtok
  5248  001642  C0C7  F013         	movff	strtok@sp+1,?_strtok+1
  5249  001646  EF54  F00B         	goto	l1446
  5250  00164A                     l3650:
  5251  00164A  C012  F00B         	movff	strtok@s1,strcspn@s1
  5252  00164E  C013  F00C         	movff	strtok@s1+1,strcspn@s1+1
  5253  001652  C014  F00D         	movff	strtok@s2,strcspn@s2
  5254  001656  C015  F00E         	movff	strtok@s2+1,strcspn@s2+1
  5255  00165A  ECC9  F012         	call	_strcspn	;wreg free
  5256  00165E  500B               	movf	?_strcspn^0,w,c
  5257  001660  2412               	addwf	strtok@s1^0,w,c
  5258  001662  0100               	movlb	0	; () banked
  5259  001664  6FC6               	movwf	strtok@sp& (0+255),b
  5260  001666  500C               	movf	(?_strcspn+1)^0,w,c
  5261  001668  2013               	addwfc	(strtok@s1+1)^0,w,c
  5262  00166A  6FC7               	movwf	(strtok@sp+1)& (0+255),b
  5263  00166C                     
  5264                           ; BSR set to: 0
  5265  00166C  C0C6  FFD9         	movff	strtok@sp,fsr2l
  5266  001670  C0C7  FFDA         	movff	strtok@sp+1,fsr2h
  5267  001674  50DF               	movf	indf2,w,c
  5268  001676  B4D8               	btfsc	status,2,c
  5269  001678  EF40  F00B         	goto	u2601
  5270  00167C  EF42  F00B         	goto	u2600
  5271  001680                     u2601:
  5272  001680  EF4C  F00B         	goto	l3658
  5273  001684                     u2600:
  5274  001684                     
  5275                           ; BSR set to: 0
  5276  001684  C0C6  FFD9         	movff	strtok@sp,fsr2l
  5277  001688  C0C7  FFDA         	movff	strtok@sp+1,fsr2h
  5278  00168C  0E00               	movlw	0
  5279  00168E  6EDF               	movwf	indf2,c
  5280  001690                     
  5281                           ; BSR set to: 0
  5282  001690  4BC6               	infsnz	strtok@sp& (0+255),f,b
  5283  001692  2BC7               	incf	(strtok@sp+1)& (0+255),f,b
  5284  001694  EF50  F00B         	goto	l1449
  5285  001698                     l3658:
  5286                           
  5287                           ; BSR set to: 0
  5288  001698  0E00               	movlw	0
  5289  00169A  6FC6               	movwf	strtok@sp& (0+255),b
  5290  00169C  0E00               	movlw	0
  5291  00169E  6FC7               	movwf	(strtok@sp+1)& (0+255),b
  5292  0016A0                     l1449:
  5293                           
  5294                           ; BSR set to: 0
  5295  0016A0  C012  F012         	movff	strtok@s1,?_strtok
  5296  0016A4  C013  F013         	movff	strtok@s1+1,?_strtok+1
  5297  0016A8                     l1446:
  5298  0016A8  0012               	return		;funcret
  5299  0016AA                     __end_of_strtok:
  5300                           	opt callstack 0
  5301                           
  5302 ;; *************** function _strspn *****************
  5303 ;; Defined at:
  5304 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strspn.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  5307 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5308 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  5309 ;;		 -> STR_40(2), STR_39(2), A6_NetworkGetRSSI@response(32), STR_36(2), 
  5310 ;;		 -> STR_35(2), A6_NetworkGetStatus@response(32), STR_27(2), NULL(0), 
  5311 ;;		 -> A6_BaudRateGet@response(32), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  i               2   15[COMRAM] unsigned int 
  5314 ;; Return value:  Size  Location     Type
  5315 ;;                  2   10[COMRAM] unsigned int 
  5316 ;; Registers used:
  5317 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5318 ;; Tracked objects:
  5319 ;;		On entry : 0/0
  5320 ;;		On exit  : 0/0
  5321 ;;		Unchanged: 0/0
  5322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5323 ;;      Params:         4       0       0       0       0       0       0       0       0
  5324 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5325 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5326 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5327 ;;Total ram usage:        7 bytes
  5328 ;; Hardware stack levels used:    1
  5329 ;; Hardware stack levels required when called:    3
  5330 ;; This function calls:
  5331 ;;		_strchr
  5332 ;; This function is called by:
  5333 ;;		_strtok
  5334 ;; This function uses a non-reentrant model
  5335 ;;
  5336                           
  5337                           	psect	text10
  5338  00252C                     __ptext10:
  5339                           	opt callstack 0
  5340  00252C                     _strspn:
  5341                           	opt callstack 24
  5342  00252C  0E00               	movlw	0
  5343  00252E  6E11               	movwf	(strspn@i+1)^0,c
  5344  002530  0E00               	movlw	0
  5345  002532  6E10               	movwf	strspn@i^0,c
  5346  002534  EFA0  F012         	goto	l3570
  5347  002538                     l3568:
  5348  002538  4A0B               	infsnz	strspn@s1^0,f,c
  5349  00253A  2A0C               	incf	(strspn@s1+1)^0,f,c
  5350  00253C  4A10               	infsnz	strspn@i^0,f,c
  5351  00253E  2A11               	incf	(strspn@i+1)^0,f,c
  5352  002540                     l3570:
  5353  002540  C00B  FFD9         	movff	strspn@s1,fsr2l
  5354  002544  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  5355  002548  50DF               	movf	indf2,w,c
  5356  00254A  B4D8               	btfsc	status,2,c
  5357  00254C  EFAA  F012         	goto	u2431
  5358  002550  EFAC  F012         	goto	u2430
  5359  002554                     u2431:
  5360  002554  EFC4  F012         	goto	l1483
  5361  002558                     u2430:
  5362  002558  C00D  F005         	movff	strspn@s2,strchr@ptr
  5363  00255C  C00E  F006         	movff	strspn@s2+1,strchr@ptr+1
  5364  002560  C00B  FFD9         	movff	strspn@s1,fsr2l
  5365  002564  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  5366  002568  50DF               	movf	indf2,w,c
  5367  00256A  6E0F               	movwf	??_strspn^0,c
  5368  00256C  500F               	movf	??_strspn^0,w,c
  5369  00256E  6E07               	movwf	strchr@chr^0,c
  5370  002570  6A08               	clrf	(strchr@chr+1)^0,c
  5371  002572  EC88  F010         	call	_strchr	;wreg free
  5372  002576  5005               	movf	?_strchr^0,w,c
  5373  002578  1006               	iorwf	(?_strchr+1)^0,w,c
  5374  00257A  A4D8               	btfss	status,2,c
  5375  00257C  EFC2  F012         	goto	u2441
  5376  002580  EFC4  F012         	goto	u2440
  5377  002584                     u2441:
  5378  002584  EF9C  F012         	goto	l3568
  5379  002588                     u2440:
  5380  002588                     l1483:
  5381  002588  C010  F00B         	movff	strspn@i,?_strspn
  5382  00258C  C011  F00C         	movff	strspn@i+1,?_strspn+1
  5383  002590  0012               	return		;funcret
  5384  002592                     __end_of_strspn:
  5385                           	opt callstack 0
  5386                           
  5387 ;; *************** function _strcspn *****************
  5388 ;; Defined at:
  5389 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcspn.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  5392 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5393 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  5394 ;;		 -> STR_40(2), STR_39(2), A6_NetworkGetRSSI@response(32), STR_36(2), 
  5395 ;;		 -> STR_35(2), A6_NetworkGetStatus@response(32), STR_27(2), NULL(0), 
  5396 ;;		 -> A6_BaudRateGet@response(32), 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  i               2   15[COMRAM] unsigned int 
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  2   10[COMRAM] unsigned int 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5408 ;;      Params:         4       0       0       0       0       0       0       0       0
  5409 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5410 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5411 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5412 ;;Total ram usage:        7 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    3
  5415 ;; This function calls:
  5416 ;;		_strchr
  5417 ;; This function is called by:
  5418 ;;		_strtok
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text11
  5423  002592                     __ptext11:
  5424                           	opt callstack 0
  5425  002592                     _strcspn:
  5426                           	opt callstack 24
  5427  002592  0E00               	movlw	0
  5428  002594  6E11               	movwf	(strcspn@i+1)^0,c
  5429  002596  0E00               	movlw	0
  5430  002598  6E10               	movwf	strcspn@i^0,c
  5431  00259A  EFD3  F012         	goto	l3578
  5432  00259E                     l3576:
  5433  00259E  4A0B               	infsnz	strcspn@s1^0,f,c
  5434  0025A0  2A0C               	incf	(strcspn@s1+1)^0,f,c
  5435  0025A2  4A10               	infsnz	strcspn@i^0,f,c
  5436  0025A4  2A11               	incf	(strcspn@i+1)^0,f,c
  5437  0025A6                     l3578:
  5438  0025A6  C00B  FFD9         	movff	strcspn@s1,fsr2l
  5439  0025AA  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  5440  0025AE  50DF               	movf	indf2,w,c
  5441  0025B0  B4D8               	btfsc	status,2,c
  5442  0025B2  EFDD  F012         	goto	u2451
  5443  0025B6  EFDF  F012         	goto	u2450
  5444  0025BA                     u2451:
  5445  0025BA  EFF7  F012         	goto	l1464
  5446  0025BE                     u2450:
  5447  0025BE  C00D  F005         	movff	strcspn@s2,strchr@ptr
  5448  0025C2  C00E  F006         	movff	strcspn@s2+1,strchr@ptr+1
  5449  0025C6  C00B  FFD9         	movff	strcspn@s1,fsr2l
  5450  0025CA  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  5451  0025CE  50DF               	movf	indf2,w,c
  5452  0025D0  6E0F               	movwf	??_strcspn^0,c
  5453  0025D2  500F               	movf	??_strcspn^0,w,c
  5454  0025D4  6E07               	movwf	strchr@chr^0,c
  5455  0025D6  6A08               	clrf	(strchr@chr+1)^0,c
  5456  0025D8  EC88  F010         	call	_strchr	;wreg free
  5457  0025DC  5005               	movf	?_strchr^0,w,c
  5458  0025DE  1006               	iorwf	(?_strchr+1)^0,w,c
  5459  0025E0  B4D8               	btfsc	status,2,c
  5460  0025E2  EFF5  F012         	goto	u2461
  5461  0025E6  EFF7  F012         	goto	u2460
  5462  0025EA                     u2461:
  5463  0025EA  EFCF  F012         	goto	l3576
  5464  0025EE                     u2460:
  5465  0025EE                     l1464:
  5466  0025EE  C010  F00B         	movff	strcspn@i,?_strcspn
  5467  0025F2  C011  F00C         	movff	strcspn@i+1,?_strcspn+1
  5468  0025F6  0012               	return		;funcret
  5469  0025F8                     __end_of_strcspn:
  5470                           	opt callstack 0
  5471                           
  5472 ;; *************** function _strstr *****************
  5473 ;; Defined at:
  5474 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strstr.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  5477 ;;		 -> STR_40(2), STR_39(2), A6_NetworkGetRSSI@response(32), STR_36(2), 
  5478 ;;		 -> STR_35(2), A6_NetworkGetStatus@response(32), STR_27(2), NULL(0), 
  5479 ;;		 -> A6_BaudRateGet@response(32), 
  5480 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  5481 ;;		 -> STR_38(7), STR_34(8), STR_26(7), 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;		None
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  2   15[COMRAM] PTR unsigned char 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5493 ;;      Params:         4       0       0       0       0       0       0       0       0
  5494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5496 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5497 ;;Total ram usage:        4 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    3
  5500 ;; This function calls:
  5501 ;;		_strchr
  5502 ;;		_strlen
  5503 ;;		_strncmp
  5504 ;; This function is called by:
  5505 ;;		_A6_BaudRateGet
  5506 ;;		_A6_NetworkGetStatus
  5507 ;;		_A6_NetworkGetRSSI
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text12
  5512  001C76                     __ptext12:
  5513                           	opt callstack 0
  5514  001C76                     _strstr:
  5515                           	opt callstack 25
  5516  001C76  EF74  F00E         	goto	l3626
  5517  001C7A                     l3618:
  5518  001C7A  C010  F009         	movff	strstr@s1,strncmp@s1
  5519  001C7E  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
  5520  001C82  C012  F00B         	movff	strstr@s2,strncmp@s2
  5521  001C86  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
  5522  001C8A  C012  F005         	movff	strstr@s2,strlen@s
  5523  001C8E  C013  F006         	movff	strstr@s2+1,strlen@s+1
  5524  001C92  ECAD  F013         	call	_strlen	;wreg free
  5525  001C96  C005  F00D         	movff	?_strlen,strncmp@len
  5526  001C9A  C006  F00E         	movff	?_strlen+1,strncmp@len+1
  5527  001C9E  EC33  F00C         	call	_strncmp	;wreg free
  5528  001CA2  5009               	movf	?_strncmp^0,w,c
  5529  001CA4  100A               	iorwf	(?_strncmp+1)^0,w,c
  5530  001CA6  A4D8               	btfss	status,2,c
  5531  001CA8  EF58  F00E         	goto	u2531
  5532  001CAC  EF5A  F00E         	goto	u2530
  5533  001CB0                     u2531:
  5534  001CB0  EF60  F00E         	goto	l3624
  5535  001CB4                     u2530:
  5536  001CB4  C010  F010         	movff	strstr@s1,?_strstr
  5537  001CB8  C011  F011         	movff	strstr@s1+1,?_strstr+1
  5538  001CBC  EF99  F00E         	goto	l1432
  5539  001CC0                     l3624:
  5540  001CC0  0E01               	movlw	1
  5541  001CC2  2410               	addwf	strstr@s1^0,w,c
  5542  001CC4  6E05               	movwf	strchr@ptr^0,c
  5543  001CC6  0E00               	movlw	0
  5544  001CC8  2011               	addwfc	(strstr@s1+1)^0,w,c
  5545  001CCA  6E06               	movwf	(strchr@ptr+1)^0,c
  5546  001CCC  C012  FFF6         	movff	strstr@s2,tblptrl
  5547  001CD0  C013  FFF7         	movff	strstr@s2+1,tblptrh
  5548  001CD4                     	if	0	;tblptru may be non-zero
  5549  001CD4                     	endif
  5550  001CD4                     	if	0	;tblptru may be non-zero
  5551  001CD4                     	endif
  5552  001CD4  0008               	tblrd		*
  5553  001CD6  50F5               	movf	tablat,w,c
  5554  001CD8  6E07               	movwf	strchr@chr^0,c
  5555  001CDA  6A08               	clrf	(strchr@chr+1)^0,c
  5556  001CDC  EC88  F010         	call	_strchr	;wreg free
  5557  001CE0  C005  F010         	movff	?_strchr,strstr@s1
  5558  001CE4  C006  F011         	movff	?_strchr+1,strstr@s1+1
  5559  001CE8                     l3626:
  5560  001CE8  5010               	movf	strstr@s1^0,w,c
  5561  001CEA  1011               	iorwf	(strstr@s1+1)^0,w,c
  5562  001CEC  B4D8               	btfsc	status,2,c
  5563  001CEE  EF7B  F00E         	goto	u2541
  5564  001CF2  EF7D  F00E         	goto	u2540
  5565  001CF6                     u2541:
  5566  001CF6  EF95  F00E         	goto	l3630
  5567  001CFA                     u2540:
  5568  001CFA  C010  FFF6         	movff	strstr@s1,tblptrl
  5569  001CFE  C011  FFF7         	movff	strstr@s1+1,tblptrh
  5570  001D02  6AF8               	clrf	tblptru,c
  5571  001D04  0E07               	movlw	(high __ramtop+-1)
  5572  001D06  64F7               	cpfsgt	tblptrh,c
  5573  001D08  D003               	bra	u2557
  5574  001D0A  0008               	tblrd		*
  5575  001D0C  50F5               	movf	tablat,w,c
  5576  001D0E  D005               	bra	u2550
  5577  001D10                     u2557:
  5578  001D10  CFF6 FFE9          	movff	tblptrl,fsr0l
  5579  001D14  CFF7 FFEA          	movff	tblptrh,fsr0h
  5580  001D18  50EF               	movf	indf0,w,c
  5581  001D1A                     u2550:
  5582  001D1A  0900               	iorlw	0
  5583  001D1C  A4D8               	btfss	status,2,c
  5584  001D1E  EF93  F00E         	goto	u2561
  5585  001D22  EF95  F00E         	goto	u2560
  5586  001D26                     u2561:
  5587  001D26  EF3D  F00E         	goto	l3618
  5588  001D2A                     u2560:
  5589  001D2A                     l3630:
  5590  001D2A  0E00               	movlw	0
  5591  001D2C  6E10               	movwf	?_strstr^0,c
  5592  001D2E  0E00               	movlw	0
  5593  001D30  6E11               	movwf	(?_strstr+1)^0,c
  5594  001D32                     l1432:
  5595  001D32  0012               	return		;funcret
  5596  001D34                     __end_of_strstr:
  5597                           	opt callstack 0
  5598                           
  5599 ;; *************** function _strncmp *****************
  5600 ;; Defined at:
  5601 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strncmp.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  s1              2    8[COMRAM] PTR const unsigned char 
  5604 ;;		 -> STR_40(2), STR_39(2), A6_NetworkGetRSSI@response(32), STR_36(2), 
  5605 ;;		 -> STR_35(2), A6_NetworkGetStatus@response(32), STR_27(2), NULL(0), 
  5606 ;;		 -> A6_BaudRateGet@response(32), 
  5607 ;;  s2              2   10[COMRAM] PTR const unsigned char 
  5608 ;;		 -> STR_38(7), STR_34(8), STR_26(7), 
  5609 ;;  len             2   12[COMRAM] unsigned int 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;		None
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  2    8[COMRAM] int 
  5614 ;; Registers used:
  5615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5621 ;;      Params:         6       0       0       0       0       0       0       0       0
  5622 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5623 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5624 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5625 ;;Total ram usage:        7 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    2
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_strstr
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text13
  5636  001866                     __ptext13:
  5637                           	opt callstack 0
  5638  001866                     _strncmp:
  5639                           	opt callstack 25
  5640  001866  EF8E  F00C         	goto	l3560
  5641  00186A                     l3550:
  5642  00186A  C009  FFF6         	movff	strncmp@s1,tblptrl
  5643  00186E  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5644  001872  6AF8               	clrf	tblptru,c
  5645  001874  0E07               	movlw	(high __ramtop+-1)
  5646  001876  64F7               	cpfsgt	tblptrh,c
  5647  001878  D003               	bra	u2387
  5648  00187A  0008               	tblrd		*
  5649  00187C  50F5               	movf	tablat,w,c
  5650  00187E  D005               	bra	u2380
  5651  001880                     u2387:
  5652  001880  CFF6 FFE9          	movff	tblptrl,fsr0l
  5653  001884  CFF7 FFEA          	movff	tblptrh,fsr0h
  5654  001888  50EF               	movf	indf0,w,c
  5655  00188A                     u2380:
  5656  00188A  0900               	iorlw	0
  5657  00188C  B4D8               	btfsc	status,2,c
  5658  00188E  EF4B  F00C         	goto	u2391
  5659  001892  EF4D  F00C         	goto	u2390
  5660  001896                     u2391:
  5661  001896  EF6C  F00C         	goto	l3554
  5662  00189A                     u2390:
  5663  00189A  C00B  FFF6         	movff	strncmp@s2,tblptrl
  5664  00189E  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  5665  0018A2                     	if	0	;tblptru may be non-zero
  5666  0018A2                     	endif
  5667  0018A2                     	if	0	;tblptru may be non-zero
  5668  0018A2                     	endif
  5669  0018A2  0008               	tblrd		*
  5670  0018A4  CFF5 F00F          	movff	tablat,??_strncmp
  5671  0018A8  C009  FFF6         	movff	strncmp@s1,tblptrl
  5672  0018AC  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5673  0018B0  6AF8               	clrf	tblptru,c
  5674  0018B2  0E07               	movlw	(high __ramtop+-1)
  5675  0018B4  64F7               	cpfsgt	tblptrh,c
  5676  0018B6  D003               	bra	u2407
  5677  0018B8  0008               	tblrd		*
  5678  0018BA  50F5               	movf	tablat,w,c
  5679  0018BC  D005               	bra	u2405
  5680  0018BE                     u2407:
  5681  0018BE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5682  0018C2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5683  0018C6  50EF               	movf	indf0,w,c
  5684  0018C8                     u2405:
  5685  0018C8  180F               	xorwf	??_strncmp^0,w,c
  5686  0018CA  B4D8               	btfsc	status,2,c
  5687  0018CC  EF6A  F00C         	goto	u2401
  5688  0018D0  EF6C  F00C         	goto	u2400
  5689  0018D4                     u2401:
  5690  0018D4  EF8A  F00C         	goto	l3558
  5691  0018D8                     u2400:
  5692  0018D8                     l3554:
  5693  0018D8  C009  FFF6         	movff	strncmp@s1,tblptrl
  5694  0018DC  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5695  0018E0  6AF8               	clrf	tblptru,c
  5696  0018E2  0E07               	movlw	(high __ramtop+-1)
  5697  0018E4  64F7               	cpfsgt	tblptrh,c
  5698  0018E6  D003               	bra	u2417
  5699  0018E8  0008               	tblrd		*
  5700  0018EA  50F5               	movf	tablat,w,c
  5701  0018EC  D005               	bra	u2410
  5702  0018EE                     u2417:
  5703  0018EE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5704  0018F2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5705  0018F6  50EF               	movf	indf0,w,c
  5706  0018F8                     u2410:
  5707  0018F8  6E0F               	movwf	??_strncmp^0,c
  5708  0018FA  C00B  FFF6         	movff	strncmp@s2,tblptrl
  5709  0018FE  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  5710  001902                     	if	0	;tblptru may be non-zero
  5711  001902                     	endif
  5712  001902                     	if	0	;tblptru may be non-zero
  5713  001902                     	endif
  5714  001902  0008               	tblrd		*
  5715  001904  50F5               	movf	tablat,w,c
  5716  001906  5C0F               	subwf	??_strncmp^0,w,c
  5717  001908  6E09               	movwf	?_strncmp^0,c
  5718  00190A  6A0A               	clrf	(?_strncmp+1)^0,c
  5719  00190C  A0D8               	btfss	status,0,c
  5720  00190E  060A               	decf	(?_strncmp+1)^0,f,c
  5721  001910  EF9F  F00C         	goto	l1473
  5722  001914                     l3558:
  5723  001914  4A09               	infsnz	strncmp@s1^0,f,c
  5724  001916  2A0A               	incf	(strncmp@s1+1)^0,f,c
  5725  001918  4A0B               	infsnz	strncmp@s2^0,f,c
  5726  00191A  2A0C               	incf	(strncmp@s2+1)^0,f,c
  5727  00191C                     l3560:
  5728  00191C  060D               	decf	strncmp@len^0,f,c
  5729  00191E  A0D8               	btfss	status,0,c
  5730  001920  060E               	decf	(strncmp@len+1)^0,f,c
  5731  001922  280D               	incf	strncmp@len^0,w,c
  5732  001924  E106               	bnz	u2421
  5733  001926  280E               	incf	(strncmp@len+1)^0,w,c
  5734  001928  A4D8               	btfss	status,2,c
  5735  00192A  EF99  F00C         	goto	u2421
  5736  00192E  EF9B  F00C         	goto	u2420
  5737  001932                     u2421:
  5738  001932  EF35  F00C         	goto	l3550
  5739  001936                     u2420:
  5740  001936  0E00               	movlw	0
  5741  001938  6E0A               	movwf	(?_strncmp+1)^0,c
  5742  00193A  0E00               	movlw	0
  5743  00193C  6E09               	movwf	?_strncmp^0,c
  5744  00193E                     l1473:
  5745  00193E  0012               	return		;funcret
  5746  001940                     __end_of_strncmp:
  5747                           	opt callstack 0
  5748                           
  5749 ;; *************** function _strchr *****************
  5750 ;; Defined at:
  5751 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strchr.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  5754 ;;		 -> STR_40(2), STR_39(2), A6_NetworkGetRSSI@response(32), STR_36(2), 
  5755 ;;		 -> STR_35(2), A6_NetworkGetStatus@response(32), STR_27(2), NULL(0), 
  5756 ;;		 -> A6_BaudRateGet@response(32), 
  5757 ;;  chr             2    6[COMRAM] int 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  2    4[COMRAM] PTR unsigned char 
  5762 ;; Registers used:
  5763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5769 ;;      Params:         4       0       0       0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5771 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5772 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5773 ;;Total ram usage:        6 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; Hardware stack levels required when called:    2
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_strstr
  5780 ;;		_strcspn
  5781 ;;		_strspn
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text14
  5786  002110                     __ptext14:
  5787                           	opt callstack 0
  5788  002110                     _strchr:
  5789                           	opt callstack 24
  5790  002110                     l1452:
  5791  002110  C005  FFF6         	movff	strchr@ptr,tblptrl
  5792  002114  C006  FFF7         	movff	strchr@ptr+1,tblptrh
  5793  002118  6AF8               	clrf	tblptru,c
  5794  00211A  0E07               	movlw	(high __ramtop+-1)
  5795  00211C  64F7               	cpfsgt	tblptrh,c
  5796  00211E  D003               	bra	u2137
  5797  002120  0008               	tblrd		*
  5798  002122  50F5               	movf	tablat,w,c
  5799  002124  D005               	bra	u2130
  5800  002126                     u2137:
  5801  002126  CFF6 FFE9          	movff	tblptrl,fsr0l
  5802  00212A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5803  00212E  50EF               	movf	indf0,w,c
  5804  002130                     u2130:
  5805  002130  1807               	xorwf	strchr@chr^0,w,c
  5806  002132  A4D8               	btfss	status,2,c
  5807  002134  EF9E  F010         	goto	u2141
  5808  002138  EFA0  F010         	goto	u2140
  5809  00213C                     u2141:
  5810  00213C  EFA6  F010         	goto	l3428
  5811  002140                     u2140:
  5812  002140  C005  F005         	movff	strchr@ptr,?_strchr
  5813  002144  C006  F006         	movff	strchr@ptr+1,?_strchr+1
  5814  002148  EFC8  F010         	goto	l1454
  5815  00214C                     l3428:
  5816  00214C  5005               	movf	strchr@ptr^0,w,c
  5817  00214E  6E09               	movwf	??_strchr^0,c
  5818  002150  5006               	movf	(strchr@ptr+1)^0,w,c
  5819  002152  6E0A               	movwf	(??_strchr+1)^0,c
  5820  002154  4A05               	infsnz	strchr@ptr^0,f,c
  5821  002156  2A06               	incf	(strchr@ptr+1)^0,f,c
  5822  002158  C009  FFF6         	movff	??_strchr,tblptrl
  5823  00215C  C00A  FFF7         	movff	??_strchr+1,tblptrh
  5824  002160  6AF8               	clrf	tblptru,c
  5825  002162  0E07               	movlw	(high __ramtop+-1)
  5826  002164  64F7               	cpfsgt	tblptrh,c
  5827  002166  D003               	bra	u2157
  5828  002168  0008               	tblrd		*
  5829  00216A  50F5               	movf	tablat,w,c
  5830  00216C  D005               	bra	u2150
  5831  00216E                     u2157:
  5832  00216E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5833  002172  CFF7 FFEA          	movff	tblptrh,fsr0h
  5834  002176  50EF               	movf	indf0,w,c
  5835  002178                     u2150:
  5836  002178  0900               	iorlw	0
  5837  00217A  A4D8               	btfss	status,2,c
  5838  00217C  EFC2  F010         	goto	u2161
  5839  002180  EFC4  F010         	goto	u2160
  5840  002184                     u2161:
  5841  002184  EF88  F010         	goto	l1452
  5842  002188                     u2160:
  5843  002188  0E00               	movlw	0
  5844  00218A  6E05               	movwf	?_strchr^0,c
  5845  00218C  0E00               	movlw	0
  5846  00218E  6E06               	movwf	(?_strchr+1)^0,c
  5847  002190                     l1454:
  5848  002190  0012               	return		;funcret
  5849  002192                     __end_of_strchr:
  5850                           	opt callstack 0
  5851                           
  5852 ;; *************** function _atol *****************
  5853 ;; Defined at:
  5854 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atol.c"
  5855 ;; Parameters:    Size  Location     Type
  5856 ;;  s               2   16[COMRAM] PTR const unsigned char 
  5857 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  a               4   25[COMRAM] long 
  5860 ;;  c               1   29[COMRAM] unsigned char 
  5861 ;;  sign            1   24[COMRAM] unsigned char 
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  4   16[COMRAM] long 
  5864 ;; Registers used:
  5865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5871 ;;      Params:         4       0       0       0       0       0       0       0       0
  5872 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5873 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5874 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5875 ;;Total ram usage:       14 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    3
  5878 ;; This function calls:
  5879 ;;		___lmul
  5880 ;;		_isdigit
  5881 ;; This function is called by:
  5882 ;;		_A6_BaudRateGet
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           	psect	text15
  5887  001128                     __ptext15:
  5888                           	opt callstack 0
  5889  001128                     _atol:
  5890                           	opt callstack 24
  5891  001128                     l1386:
  5892  001128  C011  FFD9         	movff	atol@s,fsr2l
  5893  00112C  C012  FFDA         	movff	atol@s+1,fsr2h
  5894  001130  50DF               	movf	indf2,w,c
  5895  001132  6E1E               	movwf	atol@c^0,c
  5896  001134  4A11               	infsnz	atol@s^0,f,c
  5897  001136  2A12               	incf	(atol@s+1)^0,f,c
  5898  001138  0E20               	movlw	32
  5899  00113A  181E               	xorwf	atol@c^0,w,c
  5900  00113C  B4D8               	btfsc	status,2,c
  5901  00113E  EFA3  F008         	goto	u2611
  5902  001142  EFA5  F008         	goto	u2610
  5903  001146                     u2611:
  5904  001146  EF94  F008         	goto	l1386
  5905  00114A                     u2610:
  5906  00114A  0E09               	movlw	9
  5907  00114C  181E               	xorwf	atol@c^0,w,c
  5908  00114E  B4D8               	btfsc	status,2,c
  5909  001150  EFAC  F008         	goto	u2621
  5910  001154  EFAE  F008         	goto	u2620
  5911  001158                     u2621:
  5912  001158  EF94  F008         	goto	l1386
  5913  00115C                     u2620:
  5914  00115C  0E00               	movlw	0
  5915  00115E  6E1A               	movwf	atol@a^0,c
  5916  001160  0E00               	movlw	0
  5917  001162  6E1B               	movwf	(atol@a+1)^0,c
  5918  001164  0E00               	movlw	0
  5919  001166  6E1C               	movwf	(atol@a+2)^0,c
  5920  001168  0E00               	movlw	0
  5921  00116A  6E1D               	movwf	(atol@a+3)^0,c
  5922  00116C  0E00               	movlw	0
  5923  00116E  6E19               	movwf	atol@sign^0,c
  5924  001170  0E2D               	movlw	45
  5925  001172  181E               	xorwf	atol@c^0,w,c
  5926  001174  A4D8               	btfss	status,2,c
  5927  001176  EFBF  F008         	goto	u2631
  5928  00117A  EFC1  F008         	goto	u2630
  5929  00117E                     u2631:
  5930  00117E  EFCC  F008         	goto	l3680
  5931  001182                     u2630:
  5932  001182  2A19               	incf	atol@sign^0,f,c
  5933  001184                     l3676:
  5934  001184  C011  FFD9         	movff	atol@s,fsr2l
  5935  001188  C012  FFDA         	movff	atol@s+1,fsr2h
  5936  00118C  50DF               	movf	indf2,w,c
  5937  00118E  6E1E               	movwf	atol@c^0,c
  5938  001190  4A11               	infsnz	atol@s^0,f,c
  5939  001192  2A12               	incf	(atol@s+1)^0,f,c
  5940  001194  EFFB  F008         	goto	l3692
  5941  001198                     l3680:
  5942  001198  0E2B               	movlw	43
  5943  00119A  181E               	xorwf	atol@c^0,w,c
  5944  00119C  A4D8               	btfss	status,2,c
  5945  00119E  EFD3  F008         	goto	u2641
  5946  0011A2  EFD5  F008         	goto	u2640
  5947  0011A6                     u2641:
  5948  0011A6  EFFB  F008         	goto	l3692
  5949  0011AA                     u2640:
  5950  0011AA  EFC2  F008         	goto	l3676
  5951  0011AE                     l3686:
  5952  0011AE  C01A  F005         	movff	atol@a,___lmul@multiplier
  5953  0011B2  C01B  F006         	movff	atol@a+1,___lmul@multiplier+1
  5954  0011B6  C01C  F007         	movff	atol@a+2,___lmul@multiplier+2
  5955  0011BA  C01D  F008         	movff	atol@a+3,___lmul@multiplier+3
  5956  0011BE  0E0A               	movlw	10
  5957  0011C0  6E09               	movwf	___lmul@multiplicand^0,c
  5958  0011C2  0E00               	movlw	0
  5959  0011C4  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  5960  0011C6  0E00               	movlw	0
  5961  0011C8  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  5962  0011CA  0E00               	movlw	0
  5963  0011CC  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  5964  0011CE  EC61  F012         	call	___lmul	;wreg free
  5965  0011D2  C01E  F015         	movff	atol@c,??_atol
  5966  0011D6  0ED0               	movlw	208
  5967  0011D8  2615               	addwf	??_atol^0,f,c
  5968  0011DA  5015               	movf	??_atol^0,w,c
  5969  0011DC  2405               	addwf	?___lmul^0,w,c
  5970  0011DE  6E1A               	movwf	atol@a^0,c
  5971  0011E0  0E00               	movlw	0
  5972  0011E2  2006               	addwfc	(?___lmul+1)^0,w,c
  5973  0011E4  6E1B               	movwf	(atol@a+1)^0,c
  5974  0011E6  0E00               	movlw	0
  5975  0011E8  2007               	addwfc	(?___lmul+2)^0,w,c
  5976  0011EA  6E1C               	movwf	(atol@a+2)^0,c
  5977  0011EC  0E00               	movlw	0
  5978  0011EE  2008               	addwfc	(?___lmul+3)^0,w,c
  5979  0011F0  6E1D               	movwf	(atol@a+3)^0,c
  5980  0011F2  EFC2  F008         	goto	l3676
  5981  0011F6                     l3692:
  5982  0011F6  501E               	movf	atol@c^0,w,c
  5983  0011F8  EC30  F015         	call	_isdigit
  5984  0011FC  B0D8               	btfsc	status,0,c
  5985  0011FE  EF03  F009         	goto	u2651
  5986  001202  EF05  F009         	goto	u2650
  5987  001206                     u2651:
  5988  001206  EFD7  F008         	goto	l3686
  5989  00120A                     u2650:
  5990  00120A  5019               	movf	atol@sign^0,w,c
  5991  00120C  B4D8               	btfsc	status,2,c
  5992  00120E  EF0B  F009         	goto	u2661
  5993  001212  EF0D  F009         	goto	u2660
  5994  001216                     u2661:
  5995  001216  EF28  F009         	goto	l1394
  5996  00121A                     u2660:
  5997  00121A  C01A  F015         	movff	atol@a,??_atol
  5998  00121E  C01B  F016         	movff	atol@a+1,??_atol+1
  5999  001222  C01C  F017         	movff	atol@a+2,??_atol+2
  6000  001226  C01D  F018         	movff	atol@a+3,??_atol+3
  6001  00122A  1E15               	comf	??_atol^0,f,c
  6002  00122C  1E16               	comf	(??_atol+1)^0,f,c
  6003  00122E  1E17               	comf	(??_atol+2)^0,f,c
  6004  001230  1E18               	comf	(??_atol+3)^0,f,c
  6005  001232  2A15               	incf	??_atol^0,f,c
  6006  001234  0E00               	movlw	0
  6007  001236  2216               	addwfc	(??_atol+1)^0,f,c
  6008  001238  2217               	addwfc	(??_atol+2)^0,f,c
  6009  00123A  2218               	addwfc	(??_atol+3)^0,f,c
  6010  00123C  C015  F011         	movff	??_atol,?_atol
  6011  001240  C016  F012         	movff	??_atol+1,?_atol+1
  6012  001244  C017  F013         	movff	??_atol+2,?_atol+2
  6013  001248  C018  F014         	movff	??_atol+3,?_atol+3
  6014  00124C  EF30  F009         	goto	l1395
  6015  001250                     l1394:
  6016  001250  C01A  F011         	movff	atol@a,?_atol
  6017  001254  C01B  F012         	movff	atol@a+1,?_atol+1
  6018  001258  C01C  F013         	movff	atol@a+2,?_atol+2
  6019  00125C  C01D  F014         	movff	atol@a+3,?_atol+3
  6020  001260                     l1395:
  6021  001260  0012               	return		;funcret
  6022  001262                     __end_of_atol:
  6023                           	opt callstack 0
  6024                           
  6025 ;; *************** function ___lmul *****************
  6026 ;; Defined at:
  6027 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  multiplier      4    4[COMRAM] unsigned long 
  6030 ;;  multiplicand    4    8[COMRAM] unsigned long 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  product         4   12[COMRAM] unsigned long 
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  4    4[COMRAM] unsigned long 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6042 ;;      Params:         8       0       0       0       0       0       0       0       0
  6043 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6045 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6046 ;;Total ram usage:       12 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    2
  6049 ;; This function calls:
  6050 ;;		Nothing
  6051 ;; This function is called by:
  6052 ;;		_atol
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           	psect	text16
  6057  0024C2                     __ptext16:
  6058                           	opt callstack 0
  6059  0024C2                     ___lmul:
  6060                           	opt callstack 24
  6061  0024C2  0E00               	movlw	0
  6062  0024C4  6E0D               	movwf	___lmul@product^0,c
  6063  0024C6  0E00               	movlw	0
  6064  0024C8  6E0E               	movwf	(___lmul@product+1)^0,c
  6065  0024CA  0E00               	movlw	0
  6066  0024CC  6E0F               	movwf	(___lmul@product+2)^0,c
  6067  0024CE  0E00               	movlw	0
  6068  0024D0  6E10               	movwf	(___lmul@product+3)^0,c
  6069  0024D2                     l3540:
  6070  0024D2  A005               	btfss	___lmul@multiplier^0,0,c
  6071  0024D4  EF6E  F012         	goto	u2361
  6072  0024D8  EF70  F012         	goto	u2360
  6073  0024DC                     u2361:
  6074  0024DC  EF78  F012         	goto	l3544
  6075  0024E0                     u2360:
  6076  0024E0  5009               	movf	___lmul@multiplicand^0,w,c
  6077  0024E2  260D               	addwf	___lmul@product^0,f,c
  6078  0024E4  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  6079  0024E6  220E               	addwfc	(___lmul@product+1)^0,f,c
  6080  0024E8  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  6081  0024EA  220F               	addwfc	(___lmul@product+2)^0,f,c
  6082  0024EC  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  6083  0024EE  2210               	addwfc	(___lmul@product+3)^0,f,c
  6084  0024F0                     l3544:
  6085  0024F0  90D8               	bcf	status,0,c
  6086  0024F2  3609               	rlcf	___lmul@multiplicand^0,f,c
  6087  0024F4  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6088  0024F6  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6089  0024F8  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6090  0024FA  90D8               	bcf	status,0,c
  6091  0024FC  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  6092  0024FE  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  6093  002500  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  6094  002502  3205               	rrcf	___lmul@multiplier^0,f,c
  6095  002504  5005               	movf	___lmul@multiplier^0,w,c
  6096  002506  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  6097  002508  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  6098  00250A  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  6099  00250C  A4D8               	btfss	status,2,c
  6100  00250E  EF8B  F012         	goto	u2371
  6101  002512  EF8D  F012         	goto	u2370
  6102  002516                     u2371:
  6103  002516  EF69  F012         	goto	l3540
  6104  00251A                     u2370:
  6105  00251A  C00D  F005         	movff	___lmul@product,?___lmul
  6106  00251E  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  6107  002522  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  6108  002526  C010  F008         	movff	___lmul@product+3,?___lmul+3
  6109  00252A  0012               	return		;funcret
  6110  00252C                     __end_of___lmul:
  6111                           	opt callstack 0
  6112                           
  6113 ;; *************** function _init *****************
  6114 ;; Defined at:
  6115 ;;		line 15 in file "init.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6131 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6132 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6133 ;;Total ram usage:        2 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    2
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_main
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text17
  6144  002374                     __ptext17:
  6145                           	opt callstack 0
  6146  002374                     _init:
  6147                           	opt callstack 28
  6148  002374                     
  6149                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  6150  002374  9ED3               	bcf	211,7,c	;volatile
  6151  002376                     
  6152                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  6153  002376  0E70               	movlw	112
  6154  002378  12D3               	iorwf	211,f,c	;volatile
  6155                           
  6156                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  6157  00237A  0EFC               	movlw	-4
  6158  00237C  16D3               	andwf	211,f,c	;volatile
  6159  00237E                     
  6160                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  6161  00237E  8E9B               	bsf	155,7,c	;volatile
  6162                           
  6163                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  6164  002380  0EE0               	movlw	-32
  6165  002382  169B               	andwf	155,f,c	;volatile
  6166  002384                     
  6167                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  6168  002384  0E07               	movlw	7
  6169  002386  6E06               	movwf	(??_init+1)^0,c
  6170  002388  0E17               	movlw	23
  6171  00238A  6E05               	movwf	??_init^0,c
  6172  00238C  0E6A               	movlw	106
  6173  00238E                     u4017:
  6174  00238E  2EE8               	decfsz	wreg,f,c
  6175  002390  D7FE               	bra	u4017
  6176  002392  2E05               	decfsz	??_init^0,f,c
  6177  002394  D7FC               	bra	u4017
  6178  002396  2E06               	decfsz	(??_init+1)^0,f,c
  6179  002398  D7FA               	bra	u4017
  6180  00239A  D000               	nop2	
  6181  00239C                     
  6182                           ;init.c: 27: UCONbits.USBEN = 0;
  6183  00239C  966D               	bcf	109,3,c	;volatile
  6184  00239E                     
  6185                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  6186  00239E  866F               	bsf	111,3,c	;volatile
  6187  0023A0                     
  6188                           ;init.c: 41: TRISA = 0b00001011;
  6189  0023A0  0E0B               	movlw	11
  6190  0023A2  6E92               	movwf	146,c	;volatile
  6191  0023A4                     
  6192                           ;init.c: 42: LATA = 0x00;
  6193  0023A4  0E00               	movlw	0
  6194  0023A6  6E89               	movwf	137,c	;volatile
  6195  0023A8                     
  6196                           ;init.c: 48: RBPU = 1;
  6197  0023A8  8EF1               	bsf	4081,7,c	;volatile
  6198  0023AA                     
  6199                           ;init.c: 49: TRISB = 0x00;
  6200  0023AA  0E00               	movlw	0
  6201  0023AC  6E93               	movwf	147,c	;volatile
  6202  0023AE                     
  6203                           ;init.c: 50: LATB = 0x00;
  6204  0023AE  0E00               	movlw	0
  6205  0023B0  6E8A               	movwf	138,c	;volatile
  6206  0023B2                     
  6207                           ;init.c: 63: TRISC = 0b11110000;
  6208  0023B2  0EF0               	movlw	240
  6209  0023B4  6E94               	movwf	148,c	;volatile
  6210  0023B6                     
  6211                           ;init.c: 64: LATC = 0x00;
  6212  0023B6  0E00               	movlw	0
  6213  0023B8  6E8B               	movwf	139,c	;volatile
  6214  0023BA                     
  6215                           ;init.c: 67: ADCON0bits.ADON = 0;
  6216  0023BA  90C2               	bcf	194,0,c	;volatile
  6217  0023BC                     
  6218                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  6219  0023BC  0ECF               	movlw	-49
  6220  0023BE  16C1               	andwf	193,f,c	;volatile
  6221  0023C0                     
  6222                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  6223  0023C0  50C1               	movf	193,w,c	;volatile
  6224  0023C2  0BF0               	andlw	-16
  6225  0023C4  090E               	iorlw	14
  6226  0023C6  6EC1               	movwf	193,c	;volatile
  6227  0023C8                     
  6228                           ;init.c: 70: ADCON2bits.ADFM = 1;
  6229  0023C8  8EC0               	bsf	192,7,c	;volatile
  6230  0023CA                     
  6231                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  6232  0023CA  0EC7               	movlw	-57
  6233  0023CC  16C0               	andwf	192,f,c	;volatile
  6234  0023CE                     
  6235                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  6236  0023CE  50C0               	movf	192,w,c	;volatile
  6237  0023D0  0BF8               	andlw	-8
  6238  0023D2  0902               	iorlw	2
  6239  0023D4  6EC0               	movwf	192,c	;volatile
  6240  0023D6                     
  6241                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  6242  0023D6  0ECF               	movlw	-49
  6243  0023D8  16B1               	andwf	177,f,c	;volatile
  6244  0023DA                     
  6245                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  6246  0023DA  92B1               	bcf	177,1,c	;volatile
  6247  0023DC                     
  6248                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  6249  0023DC  80B1               	bsf	177,0,c	;volatile
  6250  0023DE                     
  6251                           ;init.c: 78: TMR3IE = 1;
  6252  0023DE  82A0               	bsf	4000,1,c	;volatile
  6253  0023E0                     
  6254                           ;init.c: 81: PEIE = 1;
  6255  0023E0  8CF2               	bsf	4082,6,c	;volatile
  6256  0023E2                     
  6257                           ;init.c: 82: GIE = 1;
  6258  0023E2  8EF2               	bsf	4082,7,c	;volatile
  6259  0023E4  0012               	return		;funcret
  6260  0023E6                     __end_of_init:
  6261                           	opt callstack 0
  6262                           
  6263 ;; *************** function _TFT_Init *****************
  6264 ;; Defined at:
  6265 ;;		line 72 in file "TFT.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  i               2   37[COMRAM] unsigned int 
  6270 ;;  cmd             2   35[COMRAM] unsigned int 
  6271 ;;  initSequence    2   33[COMRAM] unsigned int 
  6272 ;;  data            2   31[COMRAM] unsigned int 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      void 
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6282 ;;      Params:         0       0       0       0       0       0       0       0       0
  6283 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6284 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6285 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6286 ;;Total ram usage:       10 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    5
  6289 ;; This function calls:
  6290 ;;		_TFT_FillScreen
  6291 ;;		_TFT_FullScreen
  6292 ;;		_TFT_Reset
  6293 ;;		_TFT_WriteRegister
  6294 ;; This function is called by:
  6295 ;;		_main
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text18
  6300  001788                     __ptext18:
  6301                           	opt callstack 0
  6302  001788                     _TFT_Init:
  6303                           	opt callstack 25
  6304  001788                     
  6305                           ;TFT.c: 73: TFT_Reset();
  6306  001788  ECA7  F015         	call	_TFT_Reset	;wreg free
  6307  00178C                     
  6308                           ;TFT.c: 74: _delay((unsigned long)((200)*(48000000/4000.0)));
  6309  00178C  0E0D               	movlw	13
  6310  00178E  6E1F               	movwf	(??_TFT_Init+1)^0,c
  6311  001790  0E2D               	movlw	45
  6312  001792  6E1E               	movwf	??_TFT_Init^0,c
  6313  001794  0ED8               	movlw	216
  6314  001796                     u4027:
  6315  001796  2EE8               	decfsz	wreg,f,c
  6316  001798  D7FE               	bra	u4027
  6317  00179A  2E1E               	decfsz	??_TFT_Init^0,f,c
  6318  00179C  D7FC               	bra	u4027
  6319  00179E  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  6320  0017A0  D7FA               	bra	u4027
  6321  0017A2                     
  6322                           ;TFT.c: 77: uint16_t i=0, cmd, data;
  6323  0017A2  0E00               	movlw	0
  6324  0017A4  6E27               	movwf	(TFT_Init@i+1)^0,c
  6325  0017A6  0E00               	movlw	0
  6326  0017A8  6E26               	movwf	TFT_Init@i^0,c
  6327  0017AA                     
  6328                           ;TFT.c: 78: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  6329  0017AA  0E00               	movlw	0
  6330  0017AC  6E23               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  6331  0017AE  0E66               	movlw	102
  6332  0017B0  6E22               	movwf	TFT_Init@initSequenceSize^0,c
  6333                           
  6334                           ;TFT.c: 79: while(i != initSequenceSize) {
  6335  0017B2  EF1E  F00C         	goto	l4250
  6336  0017B6                     l4238:
  6337                           
  6338                           ;TFT.c: 80: cmd = TFT_Init_Sequence[i++];
  6339  0017B6  90D8               	bcf	status,0,c
  6340  0017B8  3426               	rlcf	TFT_Init@i^0,w,c
  6341  0017BA  6EF6               	movwf	tblptrl,c
  6342  0017BC  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  6343  0017BE  6EF7               	movwf	tblptrh,c
  6344  0017C0  0EF5               	movlw	low _TFT_Init_Sequence
  6345  0017C2  26F6               	addwf	tblptrl,f,c
  6346  0017C4  0E5C               	movlw	high _TFT_Init_Sequence
  6347  0017C6  22F7               	addwfc	tblptrh,f,c
  6348  0017C8                     	if	0	;There are less than 3 active tblptr bytes
  6349  0017C8                     	endif
  6350  0017C8  0009               	tblrd		*+
  6351  0017CA  CFF5 F024          	movff	tablat,TFT_Init@cmd
  6352  0017CE  000A               	tblrd		*-
  6353  0017D0  CFF5 F025          	movff	tablat,TFT_Init@cmd+1
  6354  0017D4  4A26               	infsnz	TFT_Init@i^0,f,c
  6355  0017D6  2A27               	incf	(TFT_Init@i+1)^0,f,c
  6356  0017D8                     
  6357                           ;TFT.c: 81: data = TFT_Init_Sequence[i++];
  6358  0017D8  90D8               	bcf	status,0,c
  6359  0017DA  3426               	rlcf	TFT_Init@i^0,w,c
  6360  0017DC  6EF6               	movwf	tblptrl,c
  6361  0017DE  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  6362  0017E0  6EF7               	movwf	tblptrh,c
  6363  0017E2  0EF5               	movlw	low _TFT_Init_Sequence
  6364  0017E4  26F6               	addwf	tblptrl,f,c
  6365  0017E6  0E5C               	movlw	high _TFT_Init_Sequence
  6366  0017E8  22F7               	addwfc	tblptrh,f,c
  6367  0017EA                     	if	0	;There are less than 3 active tblptr bytes
  6368  0017EA                     	endif
  6369  0017EA  0009               	tblrd		*+
  6370  0017EC  CFF5 F020          	movff	tablat,TFT_Init@data
  6371  0017F0  000A               	tblrd		*-
  6372  0017F2  CFF5 F021          	movff	tablat,TFT_Init@data+1
  6373  0017F6  4A26               	infsnz	TFT_Init@i^0,f,c
  6374  0017F8  2A27               	incf	(TFT_Init@i+1)^0,f,c
  6375  0017FA                     
  6376                           ;TFT.c: 82: if(cmd == 0xFFFF) {
  6377  0017FA  2824               	incf	TFT_Init@cmd^0,w,c
  6378  0017FC  E106               	bnz	u3461
  6379  0017FE  2825               	incf	(TFT_Init@cmd+1)^0,w,c
  6380  001800  A4D8               	btfss	status,2,c
  6381  001802  EF05  F00C         	goto	u3461
  6382  001806  EF07  F00C         	goto	u3460
  6383  00180A                     u3461:
  6384  00180A  EF14  F00C         	goto	l4248
  6385  00180E                     u3460:
  6386  00180E                     
  6387                           ;TFT.c: 83: _delay((unsigned long)((200)*(48000000/4000.0)));
  6388  00180E  0E0D               	movlw	13
  6389  001810  6E1F               	movwf	(??_TFT_Init+1)^0,c
  6390  001812  0E2D               	movlw	45
  6391  001814  6E1E               	movwf	??_TFT_Init^0,c
  6392  001816  0ED8               	movlw	216
  6393  001818                     u4037:
  6394  001818  2EE8               	decfsz	wreg,f,c
  6395  00181A  D7FE               	bra	u4037
  6396  00181C  2E1E               	decfsz	??_TFT_Init^0,f,c
  6397  00181E  D7FC               	bra	u4037
  6398  001820  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  6399  001822  D7FA               	bra	u4037
  6400                           
  6401                           ;TFT.c: 84: } else {
  6402  001824  EF1E  F00C         	goto	l4250
  6403  001828                     l4248:
  6404                           
  6405                           ;TFT.c: 85: TFT_WriteRegister(cmd, data);
  6406  001828  C024  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  6407  00182C  C025  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  6408  001830  C020  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  6409  001834  C021  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  6410  001838  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  6411  00183C                     l4250:
  6412  00183C  5022               	movf	TFT_Init@initSequenceSize^0,w,c
  6413  00183E  1826               	xorwf	TFT_Init@i^0,w,c
  6414  001840  E107               	bnz	u3471
  6415  001842  5023               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  6416  001844  1827               	xorwf	(TFT_Init@i+1)^0,w,c
  6417  001846  A4D8               	btfss	status,2,c
  6418  001848  EF28  F00C         	goto	u3471
  6419  00184C  EF2A  F00C         	goto	u3470
  6420  001850                     u3471:
  6421  001850  EFDB  F00B         	goto	l4238
  6422  001854                     u3470:
  6423  001854                     
  6424                           ;TFT.c: 86: };TFT.c: 87: };TFT.c: 90: TFT_FullScreen();
  6425  001854  EC74  F015         	call	_TFT_FullScreen	;wreg free
  6426  001858                     
  6427                           ;TFT.c: 91: TFT_FillScreen(0x0000);
  6428  001858  0E00               	movlw	0
  6429  00185A  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  6430  00185C  0E00               	movlw	0
  6431  00185E  6E1C               	movwf	TFT_FillScreen@color^0,c
  6432  001860  EC1E  F014         	call	_TFT_FillScreen	;wreg free
  6433  001864  0012               	return		;funcret
  6434  001866                     __end_of_TFT_Init:
  6435                           	opt callstack 0
  6436                           
  6437 ;; *************** function _TFT_Reset *****************
  6438 ;; Defined at:
  6439 ;;		line 46 in file "TFT.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;		None
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;		None
  6444 ;; Return value:  Size  Location     Type
  6445 ;;                  1    wreg      void 
  6446 ;; Registers used:
  6447 ;;		wreg, status,2
  6448 ;; Tracked objects:
  6449 ;;		On entry : 0/0
  6450 ;;		On exit  : 0/0
  6451 ;;		Unchanged: 0/0
  6452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6453 ;;      Params:         0       0       0       0       0       0       0       0       0
  6454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6455 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6456 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6457 ;;Total ram usage:        1 bytes
  6458 ;; Hardware stack levels used:    1
  6459 ;; Hardware stack levels required when called:    2
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_TFT_Init
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text19
  6468  002B4E                     __ptext19:
  6469                           	opt callstack 0
  6470  002B4E                     _TFT_Reset:
  6471                           	opt callstack 27
  6472  002B4E                     
  6473                           ;TFT.c: 47: TRISB = 0x00;;
  6474  002B4E  0E00               	movlw	0
  6475  002B50  6E93               	movwf	147,c	;volatile
  6476  002B52                     
  6477                           ;TFT.c: 48: PORTCbits.RC0 = 1;;
  6478  002B52  8082               	bsf	130,0,c	;volatile
  6479  002B54                     
  6480                           ;TFT.c: 49: PORTAbits.RA5 = 1;;
  6481  002B54  8A80               	bsf	128,5,c	;volatile
  6482  002B56                     
  6483                           ;TFT.c: 50: PORTAbits.RA4 = 1;;
  6484  002B56  8880               	bsf	128,4,c	;volatile
  6485  002B58                     
  6486                           ;TFT.c: 51: PORTCbits.RC2 = 0;;
  6487  002B58  9482               	bcf	130,2,c	;volatile
  6488  002B5A                     
  6489                           ;TFT.c: 52: _delay((unsigned long)((2)*(48000000/4000.0)));
  6490  002B5A  0E20               	movlw	32
  6491  002B5C  6E05               	movwf	??_TFT_Reset^0,c
  6492  002B5E  0E2A               	movlw	42
  6493  002B60                     u4047:
  6494  002B60  2EE8               	decfsz	wreg,f,c
  6495  002B62  D7FE               	bra	u4047
  6496  002B64  2E05               	decfsz	??_TFT_Reset^0,f,c
  6497  002B66  D7FC               	bra	u4047
  6498  002B68                     
  6499                           ;TFT.c: 53: PORTCbits.RC2 = 1;;
  6500  002B68  8482               	bsf	130,2,c	;volatile
  6501  002B6A  0012               	return		;funcret
  6502  002B6C                     __end_of_TFT_Reset:
  6503                           	opt callstack 0
  6504                           
  6505 ;; *************** function _Ecg_Init *****************
  6506 ;; Defined at:
  6507 ;;		line 12 in file "ecg.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6521 ;;      Params:         0       0       0       0       0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    9
  6528 ;; This function calls:
  6529 ;;		_Ecg_Background_Leads_Failure
  6530 ;;		_Ecg_Background_Leads_Ok
  6531 ;;		_Ecg_CheckLeads
  6532 ;; This function is called by:
  6533 ;;		_main
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text20
  6538  002A92                     __ptext20:
  6539                           	opt callstack 0
  6540  002A92                     _Ecg_Init:
  6541                           	opt callstack 21
  6542  002A92                     
  6543                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  6544  002A92  EC86  F013         	call	_Ecg_CheckLeads	;wreg free
  6545  002A96  5005               	movf	?_Ecg_CheckLeads^0,w,c
  6546  002A98  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  6547  002A9A  A4D8               	btfss	status,2,c
  6548  002A9C  EF52  F015         	goto	u3481
  6549  002AA0  EF54  F015         	goto	u3480
  6550  002AA4                     u3481:
  6551  002AA4  EF58  F015         	goto	l4268
  6552  002AA8                     u3480:
  6553  002AA8                     
  6554                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  6555  002AA8  EC43  F011         	call	_Ecg_Background_Leads_Ok	;wreg free
  6556                           
  6557                           ;ecg.c: 15: } else {
  6558  002AAC  EF5A  F015         	goto	l4270
  6559  002AB0                     l4268:
  6560                           
  6561                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  6562  002AB0  ECA2  F014         	call	_Ecg_Background_Leads_Failure	;wreg free
  6563  002AB4                     l4270:
  6564                           
  6565                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  6566  002AB4  0E00               	movlw	0
  6567  002AB6  0100               	movlb	0	; () banked
  6568  002AB8  6FBC               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  6569  002ABA                     
  6570                           ; BSR set to: 0
  6571                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  6572  002ABA  0E00               	movlw	0
  6573  002ABC  6FC1               	movwf	(_ECG_BUFFER+4)& (0+255),b
  6574  002ABE                     
  6575                           ; BSR set to: 0
  6576                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  6577  002ABE  8DC2               	bsf	_ECG_HEARTRATE& (0+255),6,b
  6578  002AC0                     
  6579                           ; BSR set to: 0
  6580  002AC0  0012               	return		;funcret
  6581  002AC2                     __end_of_Ecg_Init:
  6582                           	opt callstack 0
  6583                           
  6584 ;; *************** function _Ecg_CheckLeads *****************
  6585 ;; Defined at:
  6586 ;;		line 141 in file "ecg.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;		None
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  6591 ;; Return value:  Size  Location     Type
  6592 ;;                  2    4[COMRAM] unsigned int 
  6593 ;; Registers used:
  6594 ;;		wreg, status,2, status,0
  6595 ;; Tracked objects:
  6596 ;;		On entry : 0/0
  6597 ;;		On exit  : 0/0
  6598 ;;		Unchanged: 0/0
  6599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6600 ;;      Params:         2       0       0       0       0       0       0       0       0
  6601 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6602 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6603 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6604 ;;Total ram usage:        4 bytes
  6605 ;; Hardware stack levels used:    1
  6606 ;; Hardware stack levels required when called:    2
  6607 ;; This function calls:
  6608 ;;		Nothing
  6609 ;; This function is called by:
  6610 ;;		_Ecg_Init
  6611 ;;		_Ecg_ProcessEcg
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text21
  6616  00270C                     __ptext21:
  6617                           	opt callstack 0
  6618  00270C                     _Ecg_CheckLeads:
  6619                           	opt callstack 27
  6620  00270C                     
  6621                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  6622  00270C  0E00               	movlw	0
  6623  00270E  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  6624  002710                     
  6625                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  6626  002710  AA82               	btfss	130,5,c	;volatile
  6627  002712  EF8D  F013         	goto	u3421
  6628  002716  EF8F  F013         	goto	u3420
  6629  00271A                     u3421:
  6630  00271A  EF90  F013         	goto	l4206
  6631  00271E                     u3420:
  6632  00271E  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  6633  002720                     l4206:
  6634                           
  6635                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  6636  002720  A882               	btfss	130,4,c	;volatile
  6637  002722  EF95  F013         	goto	u3431
  6638  002726  EF97  F013         	goto	u3430
  6639  00272A                     u3431:
  6640  00272A  EF98  F013         	goto	l4210
  6641  00272E                     u3430:
  6642  00272E  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  6643  002730                     l4210:
  6644                           
  6645                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  6646  002730  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  6647  002732  B4D8               	btfsc	status,2,c
  6648  002734  EF9E  F013         	goto	u3441
  6649  002738  EFA2  F013         	goto	u3440
  6650  00273C                     u3441:
  6651  00273C  6A07               	clrf	??_Ecg_CheckLeads^0,c
  6652  00273E  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  6653  002740  EFA3  F013         	goto	u3458
  6654  002744                     u3440:
  6655  002744  6A07               	clrf	??_Ecg_CheckLeads^0,c
  6656  002746                     u3458:
  6657  002746  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  6658  002748  5056               	movf	_ECG_FLAGS^0,w,c
  6659  00274A  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  6660  00274C  0BFD               	andlw	-3
  6661  00274E  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  6662  002750  6E56               	movwf	_ECG_FLAGS^0,c
  6663  002752                     
  6664                           ;ecg.c: 146: return leadsStatus;
  6665  002752  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  6666  002756  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  6667  002758  0012               	return		;funcret
  6668  00275A                     __end_of_Ecg_CheckLeads:
  6669                           	opt callstack 0
  6670                           
  6671 ;; *************** function _Ecg_Background_Leads_Ok *****************
  6672 ;; Defined at:
  6673 ;;		line 180 in file "ecg.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;		None
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  1    wreg      void 
  6680 ;; Registers used:
  6681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6687 ;;      Params:         0       0       0       0       0       0       0       0       0
  6688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6690 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6691 ;;Total ram usage:        0 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    8
  6694 ;; This function calls:
  6695 ;;		_TFT_DrawLine
  6696 ;;		_TFT_DrawString
  6697 ;;		_TFT_FillScreen
  6698 ;; This function is called by:
  6699 ;;		_Ecg_Init
  6700 ;;		_Ecg_ProcessEcg
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text22
  6705  002286                     __ptext22:
  6706                           	opt callstack 0
  6707  002286                     _Ecg_Background_Leads_Ok:
  6708                           	opt callstack 21
  6709  002286                     
  6710                           ;ecg.c: 181: TFT_FillScreen(0x0000);
  6711  002286  0E00               	movlw	0
  6712  002288  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  6713  00228A  0E00               	movlw	0
  6714  00228C  6E1C               	movwf	TFT_FillScreen@color^0,c
  6715  00228E  EC1E  F014         	call	_TFT_FillScreen	;wreg free
  6716  002292                     
  6717                           ;ecg.c: 182: TFT_DrawString(8, (400 - 10), "Frequenza:", 0xFFFF, 0x0000, 2);
  6718  002292  0E00               	movlw	0
  6719  002294  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  6720  002296  0E08               	movlw	8
  6721  002298  6E3F               	movwf	TFT_DrawString@x^0,c
  6722  00229A  0E01               	movlw	1
  6723  00229C  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  6724  00229E  0E86               	movlw	134
  6725  0022A0  6E41               	movwf	TFT_DrawString@y^0,c
  6726  0022A2  0E5C               	movlw	low STR_21
  6727  0022A4  6E43               	movwf	TFT_DrawString@str^0,c
  6728  0022A6  0E5F               	movlw	high STR_21
  6729  0022A8  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  6730  0022AA  0EFF               	movlw	255
  6731  0022AC  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  6732  0022AE  6845               	setf	TFT_DrawString@color^0,c
  6733  0022B0  0E00               	movlw	0
  6734  0022B2  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  6735  0022B4  0E00               	movlw	0
  6736  0022B6  6E47               	movwf	TFT_DrawString@bg^0,c
  6737  0022B8  0E02               	movlw	2
  6738  0022BA  6E49               	movwf	TFT_DrawString@size^0,c
  6739  0022BC  ECEC  F00E         	call	_TFT_DrawString	;wreg free
  6740  0022C0                     
  6741                           ;ecg.c: 183: TFT_DrawLine((33 - 1), 0, (33 - 1), 400, 0xFFFF);
  6742  0022C0  0E00               	movlw	0
  6743  0022C2  6E14               	movwf	(TFT_DrawLine@x0+1)^0,c
  6744  0022C4  0E20               	movlw	32
  6745  0022C6  6E13               	movwf	TFT_DrawLine@x0^0,c
  6746  0022C8  0E00               	movlw	0
  6747  0022CA  6E16               	movwf	(TFT_DrawLine@y0+1)^0,c
  6748  0022CC  0E00               	movlw	0
  6749  0022CE  6E15               	movwf	TFT_DrawLine@y0^0,c
  6750  0022D0  0E00               	movlw	0
  6751  0022D2  6E18               	movwf	(TFT_DrawLine@x1+1)^0,c
  6752  0022D4  0E20               	movlw	32
  6753  0022D6  6E17               	movwf	TFT_DrawLine@x1^0,c
  6754  0022D8  0E01               	movlw	1
  6755  0022DA  6E1A               	movwf	(TFT_DrawLine@y1+1)^0,c
  6756  0022DC  0E90               	movlw	144
  6757  0022DE  6E19               	movwf	TFT_DrawLine@y1^0,c
  6758  0022E0  0EFF               	movlw	255
  6759  0022E2  6E1C               	movwf	(TFT_DrawLine@color+1)^0,c
  6760  0022E4  681B               	setf	TFT_DrawLine@color^0,c
  6761  0022E6  ECDF  F006         	call	_TFT_DrawLine	;wreg free
  6762  0022EA                     
  6763                           ;ecg.c: 184: Ecg_Y = 400 - 1;
  6764  0022EA  0E01               	movlw	1
  6765  0022EC  6E59               	movwf	(_Ecg_Y+1)^0,c
  6766  0022EE  0E8F               	movlw	143
  6767  0022F0  6E58               	movwf	_Ecg_Y^0,c
  6768  0022F2                     
  6769                           ;ecg.c: 185: Ecg_Yold = 400 - 1;
  6770  0022F2  0E01               	movlw	1
  6771  0022F4  0100               	movlb	0	; () banked
  6772  0022F6  6FCB               	movwf	(_Ecg_Yold+1)& (0+255),b
  6773  0022F8  0E8F               	movlw	143
  6774  0022FA  6FCA               	movwf	_Ecg_Yold& (0+255),b
  6775  0022FC                     
  6776                           ; BSR set to: 0
  6777  0022FC  0012               	return		;funcret
  6778  0022FE                     __end_of_Ecg_Background_Leads_Ok:
  6779                           	opt callstack 0
  6780                           
  6781 ;; *************** function _TFT_DrawLine *****************
  6782 ;; Defined at:
  6783 ;;		line 100 in file "TFT.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;  x0              2   18[COMRAM] int 
  6786 ;;  y0              2   20[COMRAM] int 
  6787 ;;  x1              2   22[COMRAM] int 
  6788 ;;  y1              2   24[COMRAM] int 
  6789 ;;  color           2   26[COMRAM] unsigned int 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;  t               2   37[COMRAM] int 
  6792 ;;  t               2   35[COMRAM] int 
  6793 ;;  t               2   33[COMRAM] int 
  6794 ;;  t               2   31[COMRAM] int 
  6795 ;;  dx              2   47[COMRAM] int 
  6796 ;;  steep           2   45[COMRAM] int 
  6797 ;;  err             2   43[COMRAM] int 
  6798 ;;  ystep           2   41[COMRAM] int 
  6799 ;;  dy              2   39[COMRAM] int 
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, status,2, status,0, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6809 ;;      Params:        10       0       0       0       0       0       0       0       0
  6810 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6811 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6812 ;;      Totals:        31       0       0       0       0       0       0       0       0
  6813 ;;Total ram usage:       31 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    4
  6816 ;; This function calls:
  6817 ;;		_TFT_DrawPixel
  6818 ;;		___awdiv
  6819 ;;		_abs
  6820 ;; This function is called by:
  6821 ;;		_Ecg_Background_Leads_Ok
  6822 ;;		_Ecg_Draw
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text23
  6827  000DBE                     __ptext23:
  6828                           	opt callstack 0
  6829  000DBE                     _TFT_DrawLine:
  6830                           	opt callstack 24
  6831  000DBE                     
  6832                           ;TFT.c: 101: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  6833  000DBE  5013               	movf	TFT_DrawLine@x0^0,w,c
  6834  000DC0  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6835  000DC2  6E05               	movwf	abs@a^0,c
  6836  000DC4  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6837  000DC6  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6838  000DC8  6E06               	movwf	(abs@a+1)^0,c
  6839  000DCA  EC16  F015         	call	_abs	;wreg free
  6840  000DCE  C005  F01D         	movff	?_abs,??_TFT_DrawLine
  6841  000DD2  C006  F01E         	movff	?_abs+1,??_TFT_DrawLine+1
  6842  000DD6  5015               	movf	TFT_DrawLine@y0^0,w,c
  6843  000DD8  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  6844  000DDA  6E05               	movwf	abs@a^0,c
  6845  000DDC  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6846  000DDE  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6847  000DE0  6E06               	movwf	(abs@a+1)^0,c
  6848  000DE2  EC16  F015         	call	_abs	;wreg free
  6849  000DE6  5005               	movf	?_abs^0,w,c
  6850  000DE8  5C1D               	subwf	??_TFT_DrawLine^0,w,c
  6851  000DEA  501E               	movf	(??_TFT_DrawLine+1)^0,w,c
  6852  000DEC  0A80               	xorlw	128
  6853  000DEE  6E1F               	movwf	(??_TFT_DrawLine+2)^0,c
  6854  000DF0  5006               	movf	(?_abs+1)^0,w,c
  6855  000DF2  0A80               	xorlw	128
  6856  000DF4  581F               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  6857  000DF6  A0D8               	btfss	status,0,c
  6858  000DF8  EF00  F007         	goto	u3181
  6859  000DFC  EF03  F007         	goto	u3180
  6860  000E00                     u3181:
  6861  000E00  0E01               	movlw	1
  6862  000E02  EF04  F007         	goto	u3190
  6863  000E06                     u3180:
  6864  000E06  0E00               	movlw	0
  6865  000E08                     u3190:
  6866  000E08  6E2E               	movwf	TFT_DrawLine@steep^0,c
  6867  000E0A  6A2F               	clrf	(TFT_DrawLine@steep+1)^0,c
  6868  000E0C                     
  6869                           ;TFT.c: 102: if(steep) {
  6870  000E0C  502E               	movf	TFT_DrawLine@steep^0,w,c
  6871  000E0E  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6872  000E10  B4D8               	btfsc	status,2,c
  6873  000E12  EF0D  F007         	goto	u3201
  6874  000E16  EF0F  F007         	goto	u3200
  6875  000E1A                     u3201:
  6876  000E1A  EF27  F007         	goto	l4036
  6877  000E1E                     u3200:
  6878  000E1E                     
  6879                           ;TFT.c: 103: { int16_t t = x0; x0 = y0; y0 = t; };
  6880  000E1E  C013  F020         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  6881  000E22  C014  F021         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  6882  000E26  C015  F013         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  6883  000E2A  C016  F014         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  6884  000E2E  C020  F015         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  6885  000E32  C021  F016         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  6886                           
  6887                           ;TFT.c: 104: { int16_t t = x1; x1 = y1; y1 = t; };
  6888  000E36  C017  F022         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_790
  6889  000E3A  C018  F023         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_790+1
  6890  000E3E  C019  F017         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  6891  000E42  C01A  F018         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  6892  000E46  C022  F019         	movff	TFT_DrawLine@t_790,TFT_DrawLine@y1
  6893  000E4A  C023  F01A         	movff	TFT_DrawLine@t_790+1,TFT_DrawLine@y1+1
  6894  000E4E                     l4036:
  6895                           
  6896                           ;TFT.c: 105: };TFT.c: 106: if(x0 > x1) {
  6897  000E4E  5013               	movf	TFT_DrawLine@x0^0,w,c
  6898  000E50  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6899  000E52  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6900  000E54  0A80               	xorlw	128
  6901  000E56  6E1D               	movwf	??_TFT_DrawLine^0,c
  6902  000E58  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6903  000E5A  0A80               	xorlw	128
  6904  000E5C  581D               	subwfb	??_TFT_DrawLine^0,w,c
  6905  000E5E  B0D8               	btfsc	status,0,c
  6906  000E60  EF34  F007         	goto	u3211
  6907  000E64  EF36  F007         	goto	u3210
  6908  000E68                     u3211:
  6909  000E68  EF4E  F007         	goto	l4040
  6910  000E6C                     u3210:
  6911  000E6C                     
  6912                           ;TFT.c: 107: { int16_t t = x0; x0 = x1; x1 = t; };
  6913  000E6C  C013  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_791
  6914  000E70  C014  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_791+1
  6915  000E74  C017  F013         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  6916  000E78  C018  F014         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  6917  000E7C  C024  F017         	movff	TFT_DrawLine@t_791,TFT_DrawLine@x1
  6918  000E80  C025  F018         	movff	TFT_DrawLine@t_791+1,TFT_DrawLine@x1+1
  6919                           
  6920                           ;TFT.c: 108: { int16_t t = y0; y0 = y1; y1 = t; };
  6921  000E84  C015  F026         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_792
  6922  000E88  C016  F027         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_792+1
  6923  000E8C  C019  F015         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  6924  000E90  C01A  F016         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  6925  000E94  C026  F019         	movff	TFT_DrawLine@t_792,TFT_DrawLine@y1
  6926  000E98  C027  F01A         	movff	TFT_DrawLine@t_792+1,TFT_DrawLine@y1+1
  6927  000E9C                     l4040:
  6928                           
  6929                           ;TFT.c: 109: };TFT.c: 111: int16_t dx, dy;;TFT.c: 112: dx = x1 - x0;
  6930  000E9C  5013               	movf	TFT_DrawLine@x0^0,w,c
  6931  000E9E  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  6932  000EA0  6E30               	movwf	TFT_DrawLine@dx^0,c
  6933  000EA2  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6934  000EA4  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6935  000EA6  6E31               	movwf	(TFT_DrawLine@dx+1)^0,c
  6936  000EA8                     
  6937                           ;TFT.c: 113: dy = abs(y1 - y0);
  6938  000EA8  5015               	movf	TFT_DrawLine@y0^0,w,c
  6939  000EAA  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  6940  000EAC  6E05               	movwf	abs@a^0,c
  6941  000EAE  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6942  000EB0  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6943  000EB2  6E06               	movwf	(abs@a+1)^0,c
  6944  000EB4  EC16  F015         	call	_abs	;wreg free
  6945  000EB8  C005  F028         	movff	?_abs,TFT_DrawLine@dy
  6946  000EBC  C006  F029         	movff	?_abs+1,TFT_DrawLine@dy+1
  6947  000EC0                     
  6948                           ;TFT.c: 115: int16_t err = dx / 2;
  6949  000EC0  C030  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  6950  000EC4  C031  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  6951  000EC8  0E00               	movlw	0
  6952  000ECA  6E08               	movwf	(___awdiv@divisor+1)^0,c
  6953  000ECC  0E02               	movlw	2
  6954  000ECE  6E07               	movwf	___awdiv@divisor^0,c
  6955  000ED0  EC78  F00D         	call	___awdiv	;wreg free
  6956  000ED4  C005  F02C         	movff	?___awdiv,TFT_DrawLine@err
  6957  000ED8  C006  F02D         	movff	?___awdiv+1,TFT_DrawLine@err+1
  6958                           
  6959                           ;TFT.c: 116: int16_t ystep;;TFT.c: 118: if(y0 < y1) {
  6960  000EDC  5019               	movf	TFT_DrawLine@y1^0,w,c
  6961  000EDE  5C15               	subwf	TFT_DrawLine@y0^0,w,c
  6962  000EE0  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6963  000EE2  0A80               	xorlw	128
  6964  000EE4  6E1D               	movwf	??_TFT_DrawLine^0,c
  6965  000EE6  501A               	movf	(TFT_DrawLine@y1+1)^0,w,c
  6966  000EE8  0A80               	xorlw	128
  6967  000EEA  581D               	subwfb	??_TFT_DrawLine^0,w,c
  6968  000EEC  B0D8               	btfsc	status,0,c
  6969  000EEE  EF7B  F007         	goto	u3221
  6970  000EF2  EF7D  F007         	goto	u3220
  6971  000EF6                     u3221:
  6972  000EF6  EF83  F007         	goto	l245
  6973  000EFA                     u3220:
  6974  000EFA                     
  6975                           ;TFT.c: 119: ystep = 1;
  6976  000EFA  0E00               	movlw	0
  6977  000EFC  6E2B               	movwf	(TFT_DrawLine@ystep+1)^0,c
  6978  000EFE  0E01               	movlw	1
  6979  000F00  6E2A               	movwf	TFT_DrawLine@ystep^0,c
  6980                           
  6981                           ;TFT.c: 120: } else {
  6982  000F02  EFC3  F007         	goto	l4062
  6983  000F06                     l245:
  6984                           
  6985                           ;TFT.c: 121: ystep = -1;
  6986  000F06  682A               	setf	TFT_DrawLine@ystep^0,c
  6987  000F08  682B               	setf	(TFT_DrawLine@ystep+1)^0,c
  6988  000F0A  EFC3  F007         	goto	l4062
  6989  000F0E                     l4048:
  6990                           
  6991                           ;TFT.c: 125: if(steep) {
  6992  000F0E  502E               	movf	TFT_DrawLine@steep^0,w,c
  6993  000F10  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6994  000F12  B4D8               	btfsc	status,2,c
  6995  000F14  EF8E  F007         	goto	u3231
  6996  000F18  EF90  F007         	goto	u3230
  6997  000F1C                     u3231:
  6998  000F1C  EFA0  F007         	goto	l4052
  6999  000F20                     u3230:
  7000  000F20                     
  7001                           ;TFT.c: 126: TFT_DrawPixel(y0, x0, color);
  7002  000F20  C015  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  7003  000F24  C016  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  7004  000F28  C013  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  7005  000F2C  C014  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  7006  000F30  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  7007  000F34  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  7008  000F38  EC83  F014         	call	_TFT_DrawPixel	;wreg free
  7009                           
  7010                           ;TFT.c: 127: } else {
  7011  000F3C  EFAE  F007         	goto	l4054
  7012  000F40                     l4052:
  7013                           
  7014                           ;TFT.c: 128: TFT_DrawPixel(x0, y0, color);
  7015  000F40  C013  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  7016  000F44  C014  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  7017  000F48  C015  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  7018  000F4C  C016  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  7019  000F50  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  7020  000F54  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  7021  000F58  EC83  F014         	call	_TFT_DrawPixel	;wreg free
  7022  000F5C                     l4054:
  7023                           
  7024                           ;TFT.c: 129: };TFT.c: 130: err -= dy;
  7025  000F5C  5028               	movf	TFT_DrawLine@dy^0,w,c
  7026  000F5E  5E2C               	subwf	TFT_DrawLine@err^0,f,c
  7027  000F60  5029               	movf	(TFT_DrawLine@dy+1)^0,w,c
  7028  000F62  5A2D               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  7029  000F64                     
  7030                           ;TFT.c: 131: if(err < 0) {
  7031  000F64  BE2D               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  7032  000F66  EFB9  F007         	goto	u3240
  7033  000F6A  EFB7  F007         	goto	u3241
  7034  000F6E                     u3241:
  7035  000F6E  EFC1  F007         	goto	l4060
  7036  000F72                     u3240:
  7037  000F72                     
  7038                           ;TFT.c: 132: y0 += ystep;
  7039  000F72  502A               	movf	TFT_DrawLine@ystep^0,w,c
  7040  000F74  2615               	addwf	TFT_DrawLine@y0^0,f,c
  7041  000F76  502B               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  7042  000F78  2216               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  7043                           
  7044                           ;TFT.c: 133: err += dx;
  7045  000F7A  5030               	movf	TFT_DrawLine@dx^0,w,c
  7046  000F7C  262C               	addwf	TFT_DrawLine@err^0,f,c
  7047  000F7E  5031               	movf	(TFT_DrawLine@dx+1)^0,w,c
  7048  000F80  222D               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  7049  000F82                     l4060:
  7050  000F82  4A13               	infsnz	TFT_DrawLine@x0^0,f,c
  7051  000F84  2A14               	incf	(TFT_DrawLine@x0+1)^0,f,c
  7052  000F86                     l4062:
  7053  000F86  5013               	movf	TFT_DrawLine@x0^0,w,c
  7054  000F88  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  7055  000F8A  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  7056  000F8C  0A80               	xorlw	128
  7057  000F8E  6E1D               	movwf	??_TFT_DrawLine^0,c
  7058  000F90  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  7059  000F92  0A80               	xorlw	128
  7060  000F94  581D               	subwfb	??_TFT_DrawLine^0,w,c
  7061  000F96  B0D8               	btfsc	status,0,c
  7062  000F98  EFD0  F007         	goto	u3251
  7063  000F9C  EFD2  F007         	goto	u3250
  7064  000FA0                     u3251:
  7065  000FA0  EF87  F007         	goto	l4048
  7066  000FA4                     u3250:
  7067  000FA4  0012               	return		;funcret
  7068  000FA6                     __end_of_TFT_DrawLine:
  7069                           	opt callstack 0
  7070                           
  7071 ;; *************** function _abs *****************
  7072 ;; Defined at:
  7073 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  7074 ;; Parameters:    Size  Location     Type
  7075 ;;  a               2    4[COMRAM] int 
  7076 ;; Auto vars:     Size  Location     Type
  7077 ;;		None
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  2    4[COMRAM] int 
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7087 ;;      Params:         2       0       0       0       0       0       0       0       0
  7088 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7089 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7090 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7091 ;;Total ram usage:        4 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:    2
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_TFT_DrawLine
  7098 ;;		_Ecg_ProcessHeartbeat
  7099 ;; This function uses a non-reentrant model
  7100 ;;
  7101                           
  7102                           	psect	text24
  7103  002A2C                     __ptext24:
  7104                           	opt callstack 0
  7105  002A2C                     _abs:
  7106                           	opt callstack 25
  7107  002A2C  BE06               	btfsc	(abs@a+1)^0,7,c
  7108  002A2E  EF1D  F015         	goto	u2500
  7109  002A32  EF1B  F015         	goto	u2501
  7110  002A36                     u2501:
  7111  002A36  EF2B  F015         	goto	l1365
  7112  002A3A                     u2500:
  7113  002A3A  C005  F007         	movff	abs@a,??_abs
  7114  002A3E  C006  F008         	movff	abs@a+1,??_abs+1
  7115  002A42  1E07               	comf	??_abs^0,f,c
  7116  002A44  1E08               	comf	(??_abs+1)^0,f,c
  7117  002A46  4A07               	infsnz	??_abs^0,f,c
  7118  002A48  2A08               	incf	(??_abs+1)^0,f,c
  7119  002A4A  C007  F005         	movff	??_abs,?_abs
  7120  002A4E  C008  F006         	movff	??_abs+1,?_abs+1
  7121  002A52  EF2F  F015         	goto	l1366
  7122  002A56                     l1365:
  7123  002A56  C005  F005         	movff	abs@a,?_abs
  7124  002A5A  C006  F006         	movff	abs@a+1,?_abs+1
  7125  002A5E                     l1366:
  7126  002A5E  0012               	return		;funcret
  7127  002A60                     __end_of_abs:
  7128                           	opt callstack 0
  7129                           
  7130 ;; *************** function ___awdiv *****************
  7131 ;; Defined at:
  7132 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  dividend        2    4[COMRAM] int 
  7135 ;;  divisor         2    6[COMRAM] int 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  quotient        2   10[COMRAM] int 
  7138 ;;  sign            1    9[COMRAM] unsigned char 
  7139 ;;  counter         1    8[COMRAM] unsigned char 
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  2    4[COMRAM] int 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, status,0
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7149 ;;      Params:         4       0       0       0       0       0       0       0       0
  7150 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7152 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7153 ;;Total ram usage:        8 bytes
  7154 ;; Hardware stack levels used:    1
  7155 ;; Hardware stack levels required when called:    2
  7156 ;; This function calls:
  7157 ;;		Nothing
  7158 ;; This function is called by:
  7159 ;;		_TFT_DrawLine
  7160 ;; This function uses a non-reentrant model
  7161 ;;
  7162                           
  7163                           	psect	text25
  7164  001AF0                     __ptext25:
  7165                           	opt callstack 0
  7166  001AF0                     ___awdiv:
  7167                           	opt callstack 25
  7168  001AF0  0E00               	movlw	0
  7169  001AF2  6E0A               	movwf	___awdiv@sign^0,c
  7170  001AF4  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7171  001AF6  EF81  F00D         	goto	u2760
  7172  001AFA  EF7F  F00D         	goto	u2761
  7173  001AFE                     u2761:
  7174  001AFE  EF87  F00D         	goto	l3758
  7175  001B02                     u2760:
  7176  001B02  6C07               	negf	___awdiv@divisor^0,c
  7177  001B04  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7178  001B06  B0D8               	btfsc	status,0,c
  7179  001B08  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7180  001B0A  0E01               	movlw	1
  7181  001B0C  6E0A               	movwf	___awdiv@sign^0,c
  7182  001B0E                     l3758:
  7183  001B0E  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7184  001B10  EF8E  F00D         	goto	u2770
  7185  001B14  EF8C  F00D         	goto	u2771
  7186  001B18                     u2771:
  7187  001B18  EF94  F00D         	goto	l3764
  7188  001B1C                     u2770:
  7189  001B1C  6C05               	negf	___awdiv@dividend^0,c
  7190  001B1E  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7191  001B20  B0D8               	btfsc	status,0,c
  7192  001B22  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7193  001B24  0E01               	movlw	1
  7194  001B26  1A0A               	xorwf	___awdiv@sign^0,f,c
  7195  001B28                     l3764:
  7196  001B28  0E00               	movlw	0
  7197  001B2A  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7198  001B2C  0E00               	movlw	0
  7199  001B2E  6E0B               	movwf	___awdiv@quotient^0,c
  7200  001B30  5007               	movf	___awdiv@divisor^0,w,c
  7201  001B32  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7202  001B34  B4D8               	btfsc	status,2,c
  7203  001B36  EF9F  F00D         	goto	u2781
  7204  001B3A  EFA1  F00D         	goto	u2780
  7205  001B3E                     u2781:
  7206  001B3E  EFC9  F00D         	goto	l3786
  7207  001B42                     u2780:
  7208  001B42  0E01               	movlw	1
  7209  001B44  6E09               	movwf	___awdiv@counter^0,c
  7210  001B46  EFA9  F00D         	goto	l3772
  7211  001B4A                     l3770:
  7212  001B4A  90D8               	bcf	status,0,c
  7213  001B4C  3607               	rlcf	___awdiv@divisor^0,f,c
  7214  001B4E  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7215  001B50  2A09               	incf	___awdiv@counter^0,f,c
  7216  001B52                     l3772:
  7217  001B52  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7218  001B54  EFAE  F00D         	goto	u2791
  7219  001B58  EFB0  F00D         	goto	u2790
  7220  001B5C                     u2791:
  7221  001B5C  EFA5  F00D         	goto	l3770
  7222  001B60                     u2790:
  7223  001B60                     l3774:
  7224  001B60  90D8               	bcf	status,0,c
  7225  001B62  360B               	rlcf	___awdiv@quotient^0,f,c
  7226  001B64  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7227  001B66  5007               	movf	___awdiv@divisor^0,w,c
  7228  001B68  5C05               	subwf	___awdiv@dividend^0,w,c
  7229  001B6A  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7230  001B6C  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7231  001B6E  A0D8               	btfss	status,0,c
  7232  001B70  EFBC  F00D         	goto	u2801
  7233  001B74  EFBE  F00D         	goto	u2800
  7234  001B78                     u2801:
  7235  001B78  EFC3  F00D         	goto	l3782
  7236  001B7C                     u2800:
  7237  001B7C  5007               	movf	___awdiv@divisor^0,w,c
  7238  001B7E  5E05               	subwf	___awdiv@dividend^0,f,c
  7239  001B80  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7240  001B82  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7241  001B84  800B               	bsf	___awdiv@quotient^0,0,c
  7242  001B86                     l3782:
  7243  001B86  90D8               	bcf	status,0,c
  7244  001B88  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7245  001B8A  3207               	rrcf	___awdiv@divisor^0,f,c
  7246  001B8C  2E09               	decfsz	___awdiv@counter^0,f,c
  7247  001B8E  EFB0  F00D         	goto	l3774
  7248  001B92                     l3786:
  7249  001B92  500A               	movf	___awdiv@sign^0,w,c
  7250  001B94  B4D8               	btfsc	status,2,c
  7251  001B96  EFCF  F00D         	goto	u2811
  7252  001B9A  EFD1  F00D         	goto	u2810
  7253  001B9E                     u2811:
  7254  001B9E  EFD5  F00D         	goto	l3790
  7255  001BA2                     u2810:
  7256  001BA2  6C0B               	negf	___awdiv@quotient^0,c
  7257  001BA4  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7258  001BA6  B0D8               	btfsc	status,0,c
  7259  001BA8  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7260  001BAA                     l3790:
  7261  001BAA  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7262  001BAE  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7263  001BB2  0012               	return		;funcret
  7264  001BB4                     __end_of___awdiv:
  7265                           	opt callstack 0
  7266                           
  7267 ;; *************** function _Ecg_Background_Leads_Failure *****************
  7268 ;; Defined at:
  7269 ;;		line 188 in file "ecg.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;		None
  7272 ;; Auto vars:     Size  Location     Type
  7273 ;;		None
  7274 ;; Return value:  Size  Location     Type
  7275 ;;                  1    wreg      void 
  7276 ;; Registers used:
  7277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7283 ;;      Params:         0       0       0       0       0       0       0       0       0
  7284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7286 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7287 ;;Total ram usage:        0 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:    8
  7290 ;; This function calls:
  7291 ;;		_TFT_DrawString
  7292 ;;		_TFT_FillScreen
  7293 ;; This function is called by:
  7294 ;;		_Ecg_Init
  7295 ;;		_Ecg_ProcessEcg
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text26
  7300  002944                     __ptext26:
  7301                           	opt callstack 0
  7302  002944                     _Ecg_Background_Leads_Failure:
  7303                           	opt callstack 21
  7304  002944                     
  7305                           ;ecg.c: 189: TFT_FillScreen(0x0000);
  7306  002944  0E00               	movlw	0
  7307  002946  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  7308  002948  0E00               	movlw	0
  7309  00294A  6E1C               	movwf	TFT_FillScreen@color^0,c
  7310  00294C  EC1E  F014         	call	_TFT_FillScreen	;wreg free
  7311  002950                     
  7312                           ;ecg.c: 190: TFT_DrawString(70, 362, "*** Collegare elettrodi ***", 0xFFFF, 0x0000, 2);
  7313  002950  0E00               	movlw	0
  7314  002952  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  7315  002954  0E46               	movlw	70
  7316  002956  6E3F               	movwf	TFT_DrawString@x^0,c
  7317  002958  0E01               	movlw	1
  7318  00295A  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  7319  00295C  0E6A               	movlw	106
  7320  00295E  6E41               	movwf	TFT_DrawString@y^0,c
  7321  002960  0E53               	movlw	low STR_22
  7322  002962  6E43               	movwf	TFT_DrawString@str^0,c
  7323  002964  0E5E               	movlw	high STR_22
  7324  002966  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  7325  002968  0EFF               	movlw	255
  7326  00296A  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  7327  00296C  6845               	setf	TFT_DrawString@color^0,c
  7328  00296E  0E00               	movlw	0
  7329  002970  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  7330  002972  0E00               	movlw	0
  7331  002974  6E47               	movwf	TFT_DrawString@bg^0,c
  7332  002976  0E02               	movlw	2
  7333  002978  6E49               	movwf	TFT_DrawString@size^0,c
  7334  00297A  ECEC  F00E         	call	_TFT_DrawString	;wreg free
  7335  00297E  0012               	return		;funcret
  7336  002980                     __end_of_Ecg_Background_Leads_Failure:
  7337                           	opt callstack 0
  7338                           
  7339 ;; *************** function _TFT_FillScreen *****************
  7340 ;; Defined at:
  7341 ;;		line 182 in file "TFT.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  color           2   27[COMRAM] unsigned int 
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      void 
  7348 ;; Registers used:
  7349 ;;		wreg, status,2, status,0, cstack
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7355 ;;      Params:         2       0       0       0       0       0       0       0       0
  7356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7358 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7359 ;;Total ram usage:        2 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    4
  7362 ;; This function calls:
  7363 ;;		_TFT_Flood
  7364 ;;		_TFT_WriteRegister
  7365 ;; This function is called by:
  7366 ;;		_TFT_Init
  7367 ;;		_Ecg_Background_Leads_Ok
  7368 ;;		_Ecg_Background_Leads_Failure
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text27
  7373  00283C                     __ptext27:
  7374                           	opt callstack 0
  7375  00283C                     _TFT_FillScreen:
  7376                           	opt callstack 25
  7377  00283C                     
  7378                           ;TFT.c: 183: TFT_WriteRegister(0x0200, 0);
  7379  00283C  0E02               	movlw	2
  7380  00283E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7381  002840  0E00               	movlw	0
  7382  002842  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7383  002844  0E00               	movlw	0
  7384  002846  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7385  002848  0E00               	movlw	0
  7386  00284A  6E07               	movwf	TFT_WriteRegister@data^0,c
  7387  00284C  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  7388                           
  7389                           ;TFT.c: 184: TFT_WriteRegister(0x0201, 0);
  7390  002850  0E02               	movlw	2
  7391  002852  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7392  002854  0E01               	movlw	1
  7393  002856  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7394  002858  0E00               	movlw	0
  7395  00285A  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7396  00285C  0E00               	movlw	0
  7397  00285E  6E07               	movwf	TFT_WriteRegister@data^0,c
  7398  002860  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  7399  002864                     
  7400                           ;TFT.c: 185: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  7401  002864  C01C  F00D         	movff	TFT_FillScreen@color,TFT_Flood@color
  7402  002868  C01D  F00E         	movff	TFT_FillScreen@color+1,TFT_Flood@color+1
  7403  00286C  0E00               	movlw	0
  7404  00286E  6E0F               	movwf	TFT_Flood@len^0,c
  7405  002870  0E77               	movlw	119
  7406  002872  6E10               	movwf	(TFT_Flood@len+1)^0,c
  7407  002874  0E01               	movlw	1
  7408  002876  6E11               	movwf	(TFT_Flood@len+2)^0,c
  7409  002878  0E00               	movlw	0
  7410  00287A  6E12               	movwf	(TFT_Flood@len+3)^0,c
  7411  00287C  ECD3  F007         	call	_TFT_Flood	;wreg free
  7412  002880  0012               	return		;funcret
  7413  002882                     __end_of_TFT_FillScreen:
  7414                           	opt callstack 0
  7415                           
  7416 ;; *************** function _EUSART_Init *****************
  7417 ;; Defined at:
  7418 ;;		line 12 in file "EUSART.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;		None
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;		None
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      void 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7432 ;;      Params:         0       0       0       0       0       0       0       0       0
  7433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7435 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7436 ;;Total ram usage:        0 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; Hardware stack levels required when called:    3
  7439 ;; This function calls:
  7440 ;;		_memset
  7441 ;; This function is called by:
  7442 ;;		_main
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text28
  7447  0027F4                     __ptext28:
  7448                           	opt callstack 0
  7449  0027F4                     _EUSART_Init:
  7450                           	opt callstack 27
  7451  0027F4                     
  7452                           ;EUSART.c: 14: TXSTAbits.TX9 = 0;
  7453  0027F4  9CAC               	bcf	172,6,c	;volatile
  7454                           
  7455                           ;EUSART.c: 15: TXSTAbits.TXEN = 1;
  7456  0027F6  8AAC               	bsf	172,5,c	;volatile
  7457                           
  7458                           ;EUSART.c: 16: TXSTAbits.SYNC = 0;
  7459  0027F8  98AC               	bcf	172,4,c	;volatile
  7460                           
  7461                           ;EUSART.c: 17: TXSTAbits.SENDB = 0;
  7462  0027FA  96AC               	bcf	172,3,c	;volatile
  7463                           
  7464                           ;EUSART.c: 18: TXSTAbits.BRGH = 1;
  7465  0027FC  84AC               	bsf	172,2,c	;volatile
  7466                           
  7467                           ;EUSART.c: 21: RCSTAbits.SPEN = 1;
  7468  0027FE  8EAB               	bsf	171,7,c	;volatile
  7469                           
  7470                           ;EUSART.c: 22: RCSTAbits.RX9 = 0;
  7471  002800  9CAB               	bcf	171,6,c	;volatile
  7472                           
  7473                           ;EUSART.c: 23: RCSTAbits.CREN = 1;
  7474  002802  88AB               	bsf	171,4,c	;volatile
  7475                           
  7476                           ;EUSART.c: 26: BAUDCONbits.BRG16 = 1;
  7477  002804  86B8               	bsf	184,3,c	;volatile
  7478                           
  7479                           ;EUSART.c: 27: BAUDCONbits.WUE = 0;
  7480  002806  92B8               	bcf	184,1,c	;volatile
  7481                           
  7482                           ;EUSART.c: 28: BAUDCONbits.ABDEN = 0;
  7483  002808  90B8               	bcf	184,0,c	;volatile
  7484  00280A                     
  7485                           ;EUSART.c: 29: SPBRGH = 0x04;
  7486  00280A  0E04               	movlw	4
  7487  00280C  6EB0               	movwf	176,c	;volatile
  7488                           
  7489                           ;EUSART.c: 30: SPBRG = 0xE1;
  7490  00280E  0EE1               	movlw	225
  7491  002810  6EAF               	movwf	175,c	;volatile
  7492  002812                     
  7493                           ;EUSART.c: 33: RCIE = 1;
  7494  002812  8A9D               	bsf	3997,5,c	;volatile
  7495                           
  7496                           ;EUSART.c: 36: EUSART_RX.iRead = 0;
  7497  002814  0E00               	movlw	0
  7498  002816  0102               	movlb	2	; () banked
  7499  002818  6F00               	movwf	_EUSART_RX& (0+255),b
  7500                           
  7501                           ;EUSART.c: 37: EUSART_RX.iWrite = 0;
  7502  00281A  0E00               	movlw	0
  7503  00281C  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
  7504  00281E                     
  7505                           ; BSR set to: 2
  7506                           ;EUSART.c: 38: memset(EUSART_RX.buffer, 0x00, 128);
  7507  00281E  0E02               	movlw	low (_EUSART_RX+2)
  7508  002820  6E05               	movwf	memset@p1^0,c
  7509  002822  0E02               	movlw	high (_EUSART_RX+2)
  7510  002824  6E06               	movwf	(memset@p1+1)^0,c
  7511  002826  0E00               	movlw	0
  7512  002828  6E08               	movwf	(memset@c+1)^0,c
  7513  00282A  0E00               	movlw	0
  7514  00282C  6E07               	movwf	memset@c^0,c
  7515  00282E  0E00               	movlw	0
  7516  002830  6E0A               	movwf	(memset@n+1)^0,c
  7517  002832  0E80               	movlw	128
  7518  002834  6E09               	movwf	memset@n^0,c
  7519  002836  ECFA  F014         	call	_memset	;wreg free
  7520  00283A  0012               	return		;funcret
  7521  00283C                     __end_of_EUSART_Init:
  7522                           	opt callstack 0
  7523                           
  7524 ;; *************** function _A6_Init *****************
  7525 ;; Defined at:
  7526 ;;		line 12 in file "A6Lib.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;		None
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;		None
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      void 
  7533 ;; Registers used:
  7534 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7540 ;;      Params:         0       0       0       0       0       0       0       0       0
  7541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7543 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7544 ;;Total ram usage:        0 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:   10
  7547 ;; This function calls:
  7548 ;;		_A6_BaudRateAutoDetect
  7549 ;;		_sleepMS
  7550 ;; This function is called by:
  7551 ;;		_main
  7552 ;; This function uses a non-reentrant model
  7553 ;;
  7554                           
  7555                           	psect	text29
  7556  002B6C                     __ptext29:
  7557                           	opt callstack 0
  7558  002B6C                     _A6_Init:
  7559                           	opt callstack 20
  7560  002B6C                     
  7561                           ;A6Lib.c: 13: A6_BaudRateAutoDetect();
  7562  002B6C  ECA0  F00C         	call	_A6_BaudRateAutoDetect	;wreg free
  7563  002B70                     
  7564                           ;A6Lib.c: 14: sleepMS(1000);
  7565  002B70  0EE8               	movlw	232
  7566  002B72  6E05               	movwf	sleepMS@ms^0,c
  7567  002B74  0E03               	movlw	3
  7568  002B76  6E06               	movwf	(sleepMS@ms+1)^0,c
  7569  002B78  0E00               	movlw	0
  7570  002B7A  6E07               	movwf	(sleepMS@ms+2)^0,c
  7571  002B7C  0E00               	movlw	0
  7572  002B7E  6E08               	movwf	(sleepMS@ms+3)^0,c
  7573  002B80  ECC0  F014         	call	_sleepMS	;wreg free
  7574  002B84  0012               	return		;funcret
  7575  002B86                     __end_of_A6_Init:
  7576                           	opt callstack 0
  7577                           
  7578 ;; *************** function _A6_BaudRateAutoDetect *****************
  7579 ;; Defined at:
  7580 ;;		line 74 in file "A6Lib.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;		None
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  zzzz           32   16[BANK0 ] unsigned char [32]
  7585 ;;  i               1   48[BANK0 ] unsigned char 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  4   26[None  ] unsigned long 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7595 ;;      Params:         0       0       0       0       0       0       0       0       0
  7596 ;;      Locals:         0      33       0       0       0       0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7598 ;;      Totals:         0      33       0       0       0       0       0       0       0
  7599 ;;Total ram usage:       33 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    9
  7602 ;; This function calls:
  7603 ;;		_A6_IsAlive
  7604 ;;		_EUSART_BaudRateSet
  7605 ;;		_printLine
  7606 ;;		_sleepMS
  7607 ;;		_sprintf
  7608 ;; This function is called by:
  7609 ;;		_loop
  7610 ;;		_A6_Init
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text30
  7615  001940                     __ptext30:
  7616                           	opt callstack 0
  7617  001940                     _A6_BaudRateAutoDetect:
  7618                           	opt callstack 20
  7619  001940                     
  7620                           ;A6Lib.c: 75: printLine("Detecting baud rate...", 0xF81F);
  7621  001940  0ED6               	movlw	low STR_30
  7622  001942  6E4A               	movwf	printLine@str^0,c
  7623  001944  0E5E               	movlw	high STR_30
  7624  001946  6E4B               	movwf	(printLine@str+1)^0,c
  7625  001948  0EF8               	movlw	248
  7626  00194A  6E4D               	movwf	(printLine@color+1)^0,c
  7627  00194C  0E1F               	movlw	31
  7628  00194E  6E4C               	movwf	printLine@color^0,c
  7629  001950  ECBE  F00F         	call	_printLine	;wreg free
  7630  001954                     
  7631                           ;A6Lib.c: 77: for(uint8_t i=0; i<3; i++) {
  7632  001954  0E00               	movlw	0
  7633  001956  0100               	movlb	0	; () banked
  7634  001958  6F90               	movwf	A6_BaudRateAutoDetect@i& (0+255),b
  7635  00195A                     l4130:
  7636                           
  7637                           ; BSR set to: 0
  7638                           ;A6Lib.c: 78: EUSART_BaudRateSet(A6_BAUDRATES[i]);
  7639  00195A  5190               	movf	A6_BaudRateAutoDetect@i& (0+255),w,b
  7640  00195C  0D04               	mullw	4
  7641  00195E  0EE9               	movlw	low _A6_BAUDRATES
  7642  001960  24F3               	addwf	243,w,c
  7643  001962  6EF6               	movwf	tblptrl,c
  7644  001964  0E5D               	movlw	high _A6_BAUDRATES
  7645  001966  20F4               	addwfc	244,w,c
  7646  001968  6EF7               	movwf	tblptrh,c
  7647  00196A                     	if	0	;There are less than 3 active tblptr bytes
  7648  00196A                     	endif
  7649  00196A  0009               	tblrd		*+
  7650  00196C  CFF5 F012          	movff	tablat,EUSART_BaudRateSet@baudRate
  7651  001970  0009               	tblrd		*+
  7652  001972  CFF5 F013          	movff	tablat,EUSART_BaudRateSet@baudRate+1
  7653  001976  0009               	tblrd		*+
  7654  001978  CFF5 F014          	movff	tablat,EUSART_BaudRateSet@baudRate+2
  7655  00197C  000A               	tblrd		*-
  7656  00197E  CFF5 F015          	movff	tablat,EUSART_BaudRateSet@baudRate+3
  7657  001982  EC46  F010         	call	_EUSART_BaudRateSet	;wreg free
  7658  001986                     
  7659                           ;A6Lib.c: 79: if(A6_IsAlive() == 1) {
  7660  001986  EC5E  F013         	call	_A6_IsAlive	;wreg free
  7661  00198A  06E8               	decf	wreg,f,c
  7662  00198C  A4D8               	btfss	status,2,c
  7663  00198E  EFCB  F00C         	goto	u3331
  7664  001992  EFCD  F00C         	goto	u3330
  7665  001996                     u3331:
  7666  001996  EFF8  F00C         	goto	l4140
  7667  00199A                     u3330:
  7668  00199A                     
  7669                           ;A6Lib.c: 80: char zzzz[32];;A6Lib.c: 81: sprintf(zzzz, "%lu FOUND!", A6_BAUDRATES[i]);
  7670  00199A  0E70               	movlw	low A6_BaudRateAutoDetect@zzzz
  7671  00199C  6E4A               	movwf	sprintf@sp^0,c
  7672  00199E  0E00               	movlw	high A6_BaudRateAutoDetect@zzzz
  7673  0019A0  6E4B               	movwf	(sprintf@sp+1)^0,c
  7674  0019A2  0E51               	movlw	low STR_31
  7675  0019A4  6E4C               	movwf	sprintf@f^0,c
  7676  0019A6  0E5F               	movlw	high STR_31
  7677  0019A8  6E4D               	movwf	(sprintf@f+1)^0,c
  7678  0019AA  0100               	movlb	0	; () banked
  7679  0019AC  5190               	movf	A6_BaudRateAutoDetect@i& (0+255),w,b
  7680  0019AE  0D04               	mullw	4
  7681  0019B0  0EE9               	movlw	low _A6_BAUDRATES
  7682  0019B2  24F3               	addwf	243,w,c
  7683  0019B4  6EF6               	movwf	tblptrl,c
  7684  0019B6  0E5D               	movlw	high _A6_BAUDRATES
  7685  0019B8  20F4               	addwfc	244,w,c
  7686  0019BA  6EF7               	movwf	tblptrh,c
  7687  0019BC                     	if	0	;There are less than 3 active tblptr bytes
  7688  0019BC                     	endif
  7689  0019BC  0009               	tblrd		*+
  7690  0019BE  CFF5 F04E          	movff	tablat,?_sprintf+4
  7691  0019C2  0009               	tblrd		*+
  7692  0019C4  CFF5 F04F          	movff	tablat,?_sprintf+5
  7693  0019C8  0009               	tblrd		*+
  7694  0019CA  CFF5 F050          	movff	tablat,?_sprintf+6
  7695  0019CE  000A               	tblrd		*-
  7696  0019D0  CFF5 F051          	movff	tablat,?_sprintf+7
  7697  0019D4  EC4F  F003         	call	_sprintf	;wreg free
  7698  0019D8                     
  7699                           ;A6Lib.c: 82: printLine(zzzz, 0xF800);
  7700  0019D8  0E70               	movlw	low A6_BaudRateAutoDetect@zzzz
  7701  0019DA  6E4A               	movwf	printLine@str^0,c
  7702  0019DC  0E00               	movlw	high A6_BaudRateAutoDetect@zzzz
  7703  0019DE  6E4B               	movwf	(printLine@str+1)^0,c
  7704  0019E0  0EF8               	movlw	248
  7705  0019E2  6E4D               	movwf	(printLine@color+1)^0,c
  7706  0019E4  0E00               	movlw	0
  7707  0019E6  6E4C               	movwf	printLine@color^0,c
  7708  0019E8  ECBE  F00F         	call	_printLine	;wreg free
  7709  0019EC  EF0C  F00D         	goto	l523
  7710  0019F0                     l4140:
  7711                           
  7712                           ;A6Lib.c: 84: };A6Lib.c: 85: sleepMS(100);
  7713  0019F0  0E64               	movlw	100
  7714  0019F2  6E05               	movwf	sleepMS@ms^0,c
  7715  0019F4  0E00               	movlw	0
  7716  0019F6  6E06               	movwf	(sleepMS@ms+1)^0,c
  7717  0019F8  0E00               	movlw	0
  7718  0019FA  6E07               	movwf	(sleepMS@ms+2)^0,c
  7719  0019FC  0E00               	movlw	0
  7720  0019FE  6E08               	movwf	(sleepMS@ms+3)^0,c
  7721  001A00  ECC0  F014         	call	_sleepMS	;wreg free
  7722  001A04  0100               	movlb	0	; () banked
  7723  001A06  2B90               	incf	A6_BaudRateAutoDetect@i& (0+255),f,b
  7724  001A08                     
  7725                           ; BSR set to: 0
  7726  001A08  0E02               	movlw	2
  7727  001A0A  6590               	cpfsgt	A6_BaudRateAutoDetect@i& (0+255),b
  7728  001A0C  EF0A  F00D         	goto	u3341
  7729  001A10  EF0C  F00D         	goto	u3340
  7730  001A14                     u3341:
  7731  001A14  EFAD  F00C         	goto	l4130
  7732  001A18                     u3340:
  7733  001A18                     l523:
  7734  001A18  0012               	return		;funcret
  7735  001A1A                     __end_of_A6_BaudRateAutoDetect:
  7736                           	opt callstack 0
  7737                           
  7738 ;; *************** function _sprintf *****************
  7739 ;; Defined at:
  7740 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  sp              2   73[COMRAM] PTR unsigned char 
  7743 ;;		 -> A6_BaudRateAutoDetect@zzzz(32), A6_BaudRateSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), loop@zzzz_1
      +69(32), 
  7744 ;;		 -> loop@zzzz_164(32), loop@zzzz_161(32), loop@zzzz(32), 
  7745 ;;  f               2   75[COMRAM] PTR const unsigned char 
  7746 ;;		 -> STR_31(11), STR_28(12), STR_20(4), STR_16(24), 
  7747 ;;		 -> STR_14(10), STR_13(9), STR_11(4), STR_3(27), 
  7748 ;;		 -> STR_2(32), STR_1(23), 
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;  val             4    6[BANK0 ] unsigned long 
  7751 ;;  tmpval          4    0        struct .
  7752 ;;  width           2   13[BANK0 ] int 
  7753 ;;  ap              2   11[BANK0 ] PTR void [1]
  7754 ;;		 -> ?_sprintf(2), 
  7755 ;;  len             2    4[BANK0 ] unsigned int 
  7756 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  7757 ;;		 -> STR_41(7), ?_sprintf(2), Ecg_ProcessHeartRate@heartbeatAverage(4), STR_19(6), 
  7758 ;;		 -> STR_18(11), STR_17(13), 
  7759 ;;  prec            2    0[BANK0 ] int 
  7760 ;;  c               1   15[BANK0 ] unsigned char 
  7761 ;;  flag            1   10[BANK0 ] unsigned char 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  2   73[COMRAM] int 
  7764 ;; Registers used:
  7765 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7771 ;;      Params:         8       0       0       0       0       0       0       0       0
  7772 ;;      Locals:         0      16       0       0       0       0       0       0       0
  7773 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7774 ;;      Totals:        12      16       0       0       0       0       0       0       0
  7775 ;;Total ram usage:       28 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:    3
  7778 ;; This function calls:
  7779 ;;		___lldiv
  7780 ;;		___llmod
  7781 ;;		___wmul
  7782 ;;		_isdigit
  7783 ;; This function is called by:
  7784 ;;		_loop
  7785 ;;		_A6_BaudRateSet
  7786 ;;		_A6_BaudRateAutoDetect
  7787 ;;		_Ecg_ProcessHeartRate
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text31
  7792  00069E                     __ptext31:
  7793                           	opt callstack 0
  7794  00069E                     _sprintf:
  7795                           	opt callstack 26
  7796  00069E                     
  7797                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  7798  00069E  0E4E               	movlw	low (?_sprintf+4)
  7799  0006A0  0100               	movlb	0	; () banked
  7800  0006A2  6F6B               	movwf	sprintf@ap& (0+255),b
  7801  0006A4  0E00               	movlw	high (?_sprintf+4)
  7802  0006A6  6F6C               	movwf	(sprintf@ap+1)& (0+255),b
  7803                           
  7804                           ;doprnt.c: 553: while((c = *f++)) {
  7805  0006A8  EFCD  F005         	goto	l3976
  7806  0006AC                     l3840:
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;doprnt.c: 555: if(c != '%')
  7810  0006AC  0E25               	movlw	37
  7811  0006AE  196F               	xorwf	sprintf@c& (0+255),w,b
  7812  0006B0  B4D8               	btfsc	status,2,c
  7813  0006B2  EF5D  F003         	goto	u2891
  7814  0006B6  EF5F  F003         	goto	u2890
  7815  0006BA                     u2891:
  7816  0006BA  EF69  F003         	goto	l3846
  7817  0006BE                     u2890:
  7818  0006BE                     
  7819                           ; BSR set to: 0
  7820                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  7821  0006BE  C04A  FFD9         	movff	sprintf@sp,fsr2l
  7822  0006C2  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  7823  0006C6  C06F  FFDF         	movff	sprintf@c,indf2
  7824  0006CA                     
  7825                           ; BSR set to: 0
  7826  0006CA  4A4A               	infsnz	sprintf@sp^0,f,c
  7827  0006CC  2A4B               	incf	(sprintf@sp+1)^0,f,c
  7828                           
  7829                           ;doprnt.c: 559: continue;
  7830  0006CE  EFCD  F005         	goto	l3976
  7831  0006D2                     l3846:
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  7835  0006D2  0E00               	movlw	0
  7836  0006D4  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  7837  0006D6  0E00               	movlw	0
  7838  0006D8  6F6D               	movwf	sprintf@width& (0+255),b
  7839                           
  7840                           ;doprnt.c: 565: flag = 0;
  7841  0006DA  0E00               	movlw	0
  7842  0006DC  6F6A               	movwf	sprintf@flag& (0+255),b
  7843  0006DE                     
  7844                           ; BSR set to: 0
  7845                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  7846  0006DE  C04C  FFF6         	movff	sprintf@f,tblptrl
  7847  0006E2  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7848  0006E6                     	if	0	;tblptru may be non-zero
  7849  0006E6                     	endif
  7850  0006E6                     	if	0	;tblptru may be non-zero
  7851  0006E6                     	endif
  7852  0006E6  0008               	tblrd		*
  7853  0006E8  50F5               	movf	tablat,w,c
  7854  0006EA  EC30  F015         	call	_isdigit
  7855  0006EE  A0D8               	btfss	status,0,c
  7856  0006F0  EF7C  F003         	goto	u2901
  7857  0006F4  EF7E  F003         	goto	u2900
  7858  0006F8                     u2901:
  7859  0006F8  EF57  F004         	goto	l3900
  7860  0006FC                     u2900:
  7861  0006FC                     
  7862                           ;doprnt.c: 615: width = 0;
  7863  0006FC  0E00               	movlw	0
  7864  0006FE  0100               	movlb	0	; () banked
  7865  000700  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  7866  000702  0E00               	movlw	0
  7867  000704  6F6D               	movwf	sprintf@width& (0+255),b
  7868  000706                     l3852:
  7869                           
  7870                           ;doprnt.c: 617: width *= 10;
  7871  000706  C06D  F005         	movff	sprintf@width,___wmul@multiplier
  7872  00070A  C06E  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  7873  00070E  0E00               	movlw	0
  7874  000710  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7875  000712  0E0A               	movlw	10
  7876  000714  6E07               	movwf	___wmul@multiplicand^0,c
  7877  000716  EC61  F015         	call	___wmul	;wreg free
  7878  00071A  C005  F06D         	movff	?___wmul,sprintf@width
  7879  00071E  C006  F06E         	movff	?___wmul+1,sprintf@width+1
  7880  000722                     
  7881                           ;doprnt.c: 618: width += *f++ - '0';
  7882  000722  0ED0               	movlw	208
  7883  000724  6E52               	movwf	??_sprintf^0,c
  7884  000726  0EFF               	movlw	255
  7885  000728  6E53               	movwf	(??_sprintf+1)^0,c
  7886  00072A  C04C  FFF6         	movff	sprintf@f,tblptrl
  7887  00072E  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7888  000732                     	if	0	;tblptru may be non-zero
  7889  000732                     	endif
  7890  000732                     	if	0	;tblptru may be non-zero
  7891  000732                     	endif
  7892  000732  0008               	tblrd		*
  7893  000734  50F5               	movf	tablat,w,c
  7894  000736  6E54               	movwf	(??_sprintf+2)^0,c
  7895  000738  6A55               	clrf	(??_sprintf+3)^0,c
  7896  00073A  5052               	movf	??_sprintf^0,w,c
  7897  00073C  2654               	addwf	(??_sprintf+2)^0,f,c
  7898  00073E  5053               	movf	(??_sprintf+1)^0,w,c
  7899  000740  2255               	addwfc	(??_sprintf+3)^0,f,c
  7900  000742  5054               	movf	(??_sprintf+2)^0,w,c
  7901  000744  0100               	movlb	0	; () banked
  7902  000746  276D               	addwf	sprintf@width& (0+255),f,b
  7903  000748  5055               	movf	(??_sprintf+3)^0,w,c
  7904  00074A  236E               	addwfc	(sprintf@width+1)& (0+255),f,b
  7905  00074C                     
  7906                           ; BSR set to: 0
  7907  00074C  4A4C               	infsnz	sprintf@f^0,f,c
  7908  00074E  2A4D               	incf	(sprintf@f+1)^0,f,c
  7909  000750                     
  7910                           ; BSR set to: 0
  7911                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  7912  000750  C04C  FFF6         	movff	sprintf@f,tblptrl
  7913  000754  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7914  000758                     	if	0	;tblptru may be non-zero
  7915  000758                     	endif
  7916  000758                     	if	0	;tblptru may be non-zero
  7917  000758                     	endif
  7918  000758  0008               	tblrd		*
  7919  00075A  50F5               	movf	tablat,w,c
  7920  00075C  EC30  F015         	call	_isdigit
  7921  000760  B0D8               	btfsc	status,0,c
  7922  000762  EFB5  F003         	goto	u2911
  7923  000766  EFB7  F003         	goto	u2910
  7924  00076A                     u2911:
  7925  00076A  EF83  F003         	goto	l3852
  7926  00076E                     u2910:
  7927  00076E  EF57  F004         	goto	l3900
  7928  000772                     l3860:
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;doprnt.c: 669: flag |= 0x10;
  7932  000772  896A               	bsf	sprintf@flag& (0+255),4,b
  7933                           
  7934                           ;doprnt.c: 670: goto loop;
  7935  000774  EF57  F004         	goto	l3900
  7936  000778                     l3862:
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  7940  000778  C06B  FFD9         	movff	sprintf@ap,fsr2l
  7941  00077C  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  7942  000780  CFDE F062          	movff	postinc2,sprintf@cp
  7943  000784  CFDD F063          	movff	postdec2,sprintf@cp+1
  7944  000788                     
  7945                           ; BSR set to: 0
  7946  000788  0E02               	movlw	2
  7947  00078A  276B               	addwf	sprintf@ap& (0+255),f,b
  7948  00078C  0E00               	movlw	0
  7949  00078E  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7950  000790                     
  7951                           ; BSR set to: 0
  7952                           ;doprnt.c: 766: if(!cp)
  7953  000790  5162               	movf	sprintf@cp& (0+255),w,b
  7954  000792  1163               	iorwf	(sprintf@cp+1)& (0+255),w,b
  7955  000794  A4D8               	btfss	status,2,c
  7956  000796  EFCF  F003         	goto	u2921
  7957  00079A  EFD1  F003         	goto	u2920
  7958  00079E                     u2921:
  7959  00079E  EFD5  F003         	goto	l3870
  7960  0007A2                     u2920:
  7961  0007A2                     
  7962                           ; BSR set to: 0
  7963                           ;doprnt.c: 767: cp = "(null)";
  7964  0007A2  0ED3               	movlw	low STR_41
  7965  0007A4  6F62               	movwf	sprintf@cp& (0+255),b
  7966  0007A6  0E5F               	movlw	high STR_41
  7967  0007A8  6F63               	movwf	(sprintf@cp+1)& (0+255),b
  7968  0007AA                     l3870:
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;doprnt.c: 771: len = 0;
  7972  0007AA  0E00               	movlw	0
  7973  0007AC  6F65               	movwf	(sprintf@len+1)& (0+255),b
  7974  0007AE  0E00               	movlw	0
  7975  0007B0  6F64               	movwf	sprintf@len& (0+255),b
  7976                           
  7977                           ;doprnt.c: 772: while(cp[len])
  7978  0007B2  EFDE  F003         	goto	l3874
  7979  0007B6                     l3872:
  7980                           
  7981                           ;doprnt.c: 773: len++;
  7982  0007B6  0100               	movlb	0	; () banked
  7983  0007B8  4B64               	infsnz	sprintf@len& (0+255),f,b
  7984  0007BA  2B65               	incf	(sprintf@len+1)& (0+255),f,b
  7985  0007BC                     l3874:
  7986                           
  7987                           ; BSR set to: 0
  7988  0007BC  5164               	movf	sprintf@len& (0+255),w,b
  7989  0007BE  2562               	addwf	sprintf@cp& (0+255),w,b
  7990  0007C0  6E52               	movwf	??_sprintf^0,c
  7991  0007C2  5165               	movf	(sprintf@len+1)& (0+255),w,b
  7992  0007C4  2163               	addwfc	(sprintf@cp+1)& (0+255),w,b
  7993  0007C6  6E53               	movwf	(??_sprintf+1)^0,c
  7994  0007C8  C052  FFF6         	movff	??_sprintf,tblptrl
  7995  0007CC  C053  FFF7         	movff	??_sprintf+1,tblptrh
  7996  0007D0  6AF8               	clrf	tblptru,c
  7997  0007D2  0E07               	movlw	(high __ramtop+-1)
  7998  0007D4  64F7               	cpfsgt	tblptrh,c
  7999  0007D6  D003               	bra	u2937
  8000  0007D8  0008               	tblrd		*
  8001  0007DA  50F5               	movf	tablat,w,c
  8002  0007DC  D005               	bra	u2930
  8003  0007DE                     u2937:
  8004  0007DE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8005  0007E2  CFF7 FFEA          	movff	tblptrh,fsr0h
  8006  0007E6  50EF               	movf	indf0,w,c
  8007  0007E8                     u2930:
  8008  0007E8  0900               	iorlw	0
  8009  0007EA  A4D8               	btfss	status,2,c
  8010  0007EC  EFFA  F003         	goto	u2941
  8011  0007F0  EFFC  F003         	goto	u2940
  8012  0007F4                     u2941:
  8013  0007F4  EFDB  F003         	goto	l3872
  8014  0007F8                     u2940:
  8015  0007F8                     
  8016                           ;doprnt.c: 783: if(((unsigned)width) > len)
  8017  0007F8  0100               	movlb	0	; () banked
  8018  0007FA  516D               	movf	sprintf@width& (0+255),w,b
  8019  0007FC  5D64               	subwf	sprintf@len& (0+255),w,b
  8020  0007FE  516E               	movf	(sprintf@width+1)& (0+255),w,b
  8021  000800  5965               	subwfb	(sprintf@len+1)& (0+255),w,b
  8022  000802  B0D8               	btfsc	status,0,c
  8023  000804  EF06  F004         	goto	u2951
  8024  000808  EF08  F004         	goto	u2950
  8025  00080C                     u2951:
  8026  00080C  EF0E  F004         	goto	l3880
  8027  000810                     u2950:
  8028  000810                     
  8029                           ; BSR set to: 0
  8030                           ;doprnt.c: 784: width -= len;
  8031  000810  5164               	movf	sprintf@len& (0+255),w,b
  8032  000812  5F6D               	subwf	sprintf@width& (0+255),f,b
  8033  000814  5165               	movf	(sprintf@len+1)& (0+255),w,b
  8034  000816  5B6E               	subwfb	(sprintf@width+1)& (0+255),f,b
  8035  000818  EF1C  F004         	goto	l3886
  8036  00081C                     l3880:
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  8040  00081C  0E00               	movlw	0
  8041  00081E  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  8042  000820  0E00               	movlw	0
  8043  000822  6F6D               	movwf	sprintf@width& (0+255),b
  8044  000824  EF1C  F004         	goto	l3886
  8045  000828                     l3882:
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;doprnt.c: 791: ((*sp++ = (' ')));
  8049  000828  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8050  00082C  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8051  000830  0E20               	movlw	32
  8052  000832  6EDF               	movwf	indf2,c
  8053  000834                     
  8054                           ; BSR set to: 0
  8055  000834  4A4A               	infsnz	sprintf@sp^0,f,c
  8056  000836  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8057  000838                     l3886:
  8058                           
  8059                           ; BSR set to: 0
  8060  000838  076D               	decf	sprintf@width& (0+255),f,b
  8061  00083A  A0D8               	btfss	status,0,c
  8062  00083C  076E               	decf	(sprintf@width+1)& (0+255),f,b
  8063  00083E  296D               	incf	sprintf@width& (0+255),w,b
  8064  000840  E106               	bnz	u2961
  8065  000842  296E               	incf	(sprintf@width+1)& (0+255),w,b
  8066  000844  A4D8               	btfss	status,2,c
  8067  000846  EF27  F004         	goto	u2961
  8068  00084A  EF29  F004         	goto	u2960
  8069  00084E                     u2961:
  8070  00084E  EF14  F004         	goto	l3882
  8071  000852                     u2960:
  8072  000852  EF45  F004         	goto	l3894
  8073  000856                     l3888:
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  8077  000856  C062  FFF6         	movff	sprintf@cp,tblptrl
  8078  00085A  C063  FFF7         	movff	sprintf@cp+1,tblptrh
  8079  00085E  6AF8               	clrf	tblptru,c
  8080  000860  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8081  000864  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8082  000868  0E07               	movlw	(high __ramtop+-1)
  8083  00086A  64F7               	cpfsgt	tblptrh,c
  8084  00086C  D003               	bra	u2977
  8085  00086E  0008               	tblrd		*
  8086  000870  50F5               	movf	tablat,w,c
  8087  000872  D005               	bra	u2970
  8088  000874                     u2977:
  8089  000874  CFF6 FFE9          	movff	tblptrl,fsr0l
  8090  000878  CFF7 FFEA          	movff	tblptrh,fsr0h
  8091  00087C  50EF               	movf	indf0,w,c
  8092  00087E                     u2970:
  8093  00087E  6EDF               	movwf	indf2,c
  8094  000880  0100               	movlb	0	; () banked
  8095  000882  4B62               	infsnz	sprintf@cp& (0+255),f,b
  8096  000884  2B63               	incf	(sprintf@cp+1)& (0+255),f,b
  8097  000886                     
  8098                           ; BSR set to: 0
  8099  000886  4A4A               	infsnz	sprintf@sp^0,f,c
  8100  000888  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8101  00088A                     l3894:
  8102                           
  8103                           ; BSR set to: 0
  8104  00088A  0764               	decf	sprintf@len& (0+255),f,b
  8105  00088C  A0D8               	btfss	status,0,c
  8106  00088E  0765               	decf	(sprintf@len+1)& (0+255),f,b
  8107  000890  2964               	incf	sprintf@len& (0+255),w,b
  8108  000892  E106               	bnz	u2981
  8109  000894  2965               	incf	(sprintf@len+1)& (0+255),w,b
  8110  000896  A4D8               	btfss	status,2,c
  8111  000898  EF50  F004         	goto	u2981
  8112  00089C  EF52  F004         	goto	u2980
  8113  0008A0                     u2981:
  8114  0008A0  EF2B  F004         	goto	l3888
  8115  0008A4                     u2980:
  8116  0008A4  EFCD  F005         	goto	l3976
  8117  0008A8                     l3896:
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;doprnt.c: 844: flag |= 0x40;
  8121  0008A8  8D6A               	bsf	sprintf@flag& (0+255),6,b
  8122                           
  8123                           ;doprnt.c: 845: break;
  8124  0008AA  EF7C  F004         	goto	l663
  8125  0008AE                     l3900:
  8126  0008AE  C04C  FFF6         	movff	sprintf@f,tblptrl
  8127  0008B2  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  8128  0008B6  4A4C               	infsnz	sprintf@f^0,f,c
  8129  0008B8  2A4D               	incf	(sprintf@f+1)^0,f,c
  8130  0008BA                     	if	0	;tblptru may be non-zero
  8131  0008BA                     	endif
  8132  0008BA                     	if	0	;tblptru may be non-zero
  8133  0008BA                     	endif
  8134  0008BA  0008               	tblrd		*
  8135  0008BC  CFF5 F06F          	movff	tablat,sprintf@c
  8136  0008C0  0100               	movlb	0	; () banked
  8137  0008C2  516F               	movf	sprintf@c& (0+255),w,b
  8138                           
  8139                           ; Switch size 1, requested type "simple"
  8140                           ; Number of cases is 6, Range of values is 0 to 117
  8141                           ; switch strategies available:
  8142                           ; Name         Instructions Cycles
  8143                           ; simple_byte           19    10 (average)
  8144                           ;	Chosen strategy is simple_byte
  8145  0008C4  0A00               	xorlw	0	; case 0
  8146  0008C6  B4D8               	btfsc	status,2,c
  8147  0008C8  EFDE  F005         	goto	l3978
  8148  0008CC  0A64               	xorlw	100	; case 100
  8149  0008CE  B4D8               	btfsc	status,2,c
  8150  0008D0  EF7C  F004         	goto	l663
  8151  0008D4  0A0D               	xorlw	13	; case 105
  8152  0008D6  B4D8               	btfsc	status,2,c
  8153  0008D8  EF7C  F004         	goto	l663
  8154  0008DC  0A05               	xorlw	5	; case 108
  8155  0008DE  B4D8               	btfsc	status,2,c
  8156  0008E0  EFB9  F003         	goto	l3860
  8157  0008E4  0A1F               	xorlw	31	; case 115
  8158  0008E6  B4D8               	btfsc	status,2,c
  8159  0008E8  EFBC  F003         	goto	l3862
  8160  0008EC  0A06               	xorlw	6	; case 117
  8161  0008EE  B4D8               	btfsc	status,2,c
  8162  0008F0  EF54  F004         	goto	l3896
  8163  0008F4  EFCD  F005         	goto	l3976
  8164  0008F8                     l663:
  8165                           
  8166                           ; BSR set to: 0
  8167                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  8168  0008F8  BD6A               	btfsc	sprintf@flag& (0+255),6,b
  8169  0008FA  EF81  F004         	goto	u2991
  8170  0008FE  EF83  F004         	goto	u2990
  8171  000902                     u2991:
  8172  000902  EFC0  F004         	goto	l679
  8173  000906                     u2990:
  8174  000906                     
  8175                           ; BSR set to: 0
  8176                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  8177  000906  A96A               	btfss	sprintf@flag& (0+255),4,b
  8178  000908  EF88  F004         	goto	u3001
  8179  00090C  EF8A  F004         	goto	u3000
  8180  000910                     u3001:
  8181  000910  EF9C  F004         	goto	l3908
  8182  000914                     u3000:
  8183  000914                     
  8184                           ; BSR set to: 0
  8185                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  8186  000914  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8187  000918  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8188  00091C  CFDE F066          	movff	postinc2,sprintf@val
  8189  000920  CFDE F067          	movff	postinc2,sprintf@val+1
  8190  000924  CFDE F068          	movff	postinc2,sprintf@val+2
  8191  000928  CFDE F069          	movff	postinc2,sprintf@val+3
  8192  00092C                     
  8193                           ; BSR set to: 0
  8194  00092C  0E04               	movlw	4
  8195  00092E  276B               	addwf	sprintf@ap& (0+255),f,b
  8196  000930  0E00               	movlw	0
  8197  000932  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8198  000934  EFAD  F004         	goto	l3912
  8199  000938                     l3908:
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  8203  000938  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8204  00093C  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8205  000940  CFDE F066          	movff	postinc2,sprintf@val
  8206  000944  CFDD F067          	movff	postdec2,sprintf@val+1
  8207  000948  0E00               	movlw	0
  8208  00094A  BF67               	btfsc	(sprintf@val+1)& (0+255),7,b
  8209  00094C  0EFF               	movlw	-1
  8210  00094E  6F68               	movwf	(sprintf@val+2)& (0+255),b
  8211  000950  6F69               	movwf	(sprintf@val+3)& (0+255),b
  8212  000952                     
  8213                           ; BSR set to: 0
  8214  000952  0E02               	movlw	2
  8215  000954  276B               	addwf	sprintf@ap& (0+255),f,b
  8216  000956  0E00               	movlw	0
  8217  000958  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8218  00095A                     l3912:
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;doprnt.c: 1287: if((long)val < 0) {
  8222  00095A  BF69               	btfsc	(sprintf@val+3)& (0+255),7,b
  8223  00095C  EFB4  F004         	goto	u3010
  8224  000960  EFB2  F004         	goto	u3011
  8225  000964                     u3011:
  8226  000964  EFEB  F004         	goto	l3926
  8227  000968                     u3010:
  8228  000968                     
  8229                           ; BSR set to: 0
  8230                           ;doprnt.c: 1288: flag |= 0x03;
  8231  000968  0E03               	movlw	3
  8232  00096A  136A               	iorwf	sprintf@flag& (0+255),f,b
  8233  00096C                     
  8234                           ; BSR set to: 0
  8235                           ;doprnt.c: 1289: val = -val;
  8236  00096C  1F69               	comf	(sprintf@val+3)& (0+255),f,b
  8237  00096E  1F68               	comf	(sprintf@val+2)& (0+255),f,b
  8238  000970  1F67               	comf	(sprintf@val+1)& (0+255),f,b
  8239  000972  6D66               	negf	sprintf@val& (0+255),b
  8240  000974  0E00               	movlw	0
  8241  000976  2367               	addwfc	(sprintf@val+1)& (0+255),f,b
  8242  000978  2368               	addwfc	(sprintf@val+2)& (0+255),f,b
  8243  00097A  2369               	addwfc	(sprintf@val+3)& (0+255),f,b
  8244  00097C  EFEB  F004         	goto	l3926
  8245  000980                     l679:
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  8249  000980  A96A               	btfss	sprintf@flag& (0+255),4,b
  8250  000982  EFC5  F004         	goto	u3021
  8251  000986  EFC7  F004         	goto	u3020
  8252  00098A                     u3021:
  8253  00098A  EFD9  F004         	goto	l3922
  8254  00098E                     u3020:
  8255  00098E                     
  8256                           ; BSR set to: 0
  8257                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  8258  00098E  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8259  000992  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8260  000996  CFDE F066          	movff	postinc2,sprintf@val
  8261  00099A  CFDE F067          	movff	postinc2,sprintf@val+1
  8262  00099E  CFDE F068          	movff	postinc2,sprintf@val+2
  8263  0009A2  CFDE F069          	movff	postinc2,sprintf@val+3
  8264  0009A6                     
  8265                           ; BSR set to: 0
  8266  0009A6  0E04               	movlw	4
  8267  0009A8  276B               	addwf	sprintf@ap& (0+255),f,b
  8268  0009AA  0E00               	movlw	0
  8269  0009AC  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8270  0009AE  EFEB  F004         	goto	l3926
  8271  0009B2                     l3922:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  8275  0009B2  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8276  0009B6  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8277  0009BA  CFDE F052          	movff	postinc2,??_sprintf
  8278  0009BE  CFDD F053          	movff	postdec2,??_sprintf+1
  8279  0009C2  C052  F066         	movff	??_sprintf,sprintf@val
  8280  0009C6  C053  F067         	movff	??_sprintf+1,sprintf@val+1
  8281  0009CA  6B68               	clrf	(sprintf@val+2)& (0+255),b
  8282  0009CC  6B69               	clrf	(sprintf@val+3)& (0+255),b
  8283  0009CE                     
  8284                           ; BSR set to: 0
  8285  0009CE  0E02               	movlw	2
  8286  0009D0  276B               	addwf	sprintf@ap& (0+255),f,b
  8287  0009D2  0E00               	movlw	0
  8288  0009D4  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8289  0009D6                     l3926:
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  8293  0009D6  0E01               	movlw	1
  8294  0009D8  6F6F               	movwf	sprintf@c& (0+255),b
  8295  0009DA                     l3932:
  8296                           
  8297                           ; BSR set to: 0
  8298                           ;doprnt.c: 1332: if(val < dpowers[c])
  8299  0009DA  516F               	movf	sprintf@c& (0+255),w,b
  8300  0009DC  0D04               	mullw	4
  8301  0009DE  0EC1               	movlw	low _dpowers
  8302  0009E0  24F3               	addwf	243,w,c
  8303  0009E2  6EF6               	movwf	tblptrl,c
  8304  0009E4  0E5D               	movlw	high _dpowers
  8305  0009E6  20F4               	addwfc	244,w,c
  8306  0009E8  6EF7               	movwf	tblptrh,c
  8307  0009EA                     	if	0	;There are less than 3 active tblptr bytes
  8308  0009EA                     	endif
  8309  0009EA  0009               	tblrd		*+
  8310  0009EC  50F5               	movf	tablat,w,c
  8311  0009EE  5D66               	subwf	sprintf@val& (0+255),w,b
  8312  0009F0  0009               	tblrd		*+
  8313  0009F2  50F5               	movf	tablat,w,c
  8314  0009F4  5967               	subwfb	(sprintf@val+1)& (0+255),w,b
  8315  0009F6  0009               	tblrd		*+
  8316  0009F8  50F5               	movf	tablat,w,c
  8317  0009FA  5968               	subwfb	(sprintf@val+2)& (0+255),w,b
  8318  0009FC  0009               	tblrd		*+
  8319  0009FE  50F5               	movf	tablat,w,c
  8320  000A00  5969               	subwfb	(sprintf@val+3)& (0+255),w,b
  8321  000A02  B0D8               	btfsc	status,0,c
  8322  000A04  EF06  F005         	goto	u3031
  8323  000A08  EF08  F005         	goto	u3030
  8324  000A0C                     u3031:
  8325  000A0C  EF0A  F005         	goto	l3936
  8326  000A10                     u3030:
  8327  000A10  EF14  F005         	goto	l3940
  8328  000A14                     l3936:
  8329                           
  8330                           ; BSR set to: 0
  8331  000A14  2B6F               	incf	sprintf@c& (0+255),f,b
  8332  000A16                     
  8333                           ; BSR set to: 0
  8334  000A16  0E0A               	movlw	10
  8335  000A18  196F               	xorwf	sprintf@c& (0+255),w,b
  8336  000A1A  A4D8               	btfss	status,2,c
  8337  000A1C  EF12  F005         	goto	u3041
  8338  000A20  EF14  F005         	goto	u3040
  8339  000A24                     u3041:
  8340  000A24  EFED  F004         	goto	l3932
  8341  000A28                     u3040:
  8342  000A28                     l3940:
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;doprnt.c: 1371: if(width && flag & 0x03)
  8346  000A28  516D               	movf	sprintf@width& (0+255),w,b
  8347  000A2A  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8348  000A2C  B4D8               	btfsc	status,2,c
  8349  000A2E  EF1B  F005         	goto	u3051
  8350  000A32  EF1D  F005         	goto	u3050
  8351  000A36                     u3051:
  8352  000A36  EF2B  F005         	goto	l3946
  8353  000A3A                     u3050:
  8354  000A3A                     
  8355                           ; BSR set to: 0
  8356  000A3A  C06A  F052         	movff	sprintf@flag,??_sprintf
  8357  000A3E  0E03               	movlw	3
  8358  000A40  1652               	andwf	??_sprintf^0,f,c
  8359  000A42  B4D8               	btfsc	status,2,c
  8360  000A44  EF26  F005         	goto	u3061
  8361  000A48  EF28  F005         	goto	u3060
  8362  000A4C                     u3061:
  8363  000A4C  EF2B  F005         	goto	l3946
  8364  000A50                     u3060:
  8365  000A50                     
  8366                           ; BSR set to: 0
  8367                           ;doprnt.c: 1372: width--;
  8368  000A50  076D               	decf	sprintf@width& (0+255),f,b
  8369  000A52  A0D8               	btfss	status,0,c
  8370  000A54  076E               	decf	(sprintf@width+1)& (0+255),f,b
  8371  000A56                     l3946:
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;doprnt.c: 1407: if(width > c)
  8375  000A56  516F               	movf	sprintf@c& (0+255),w,b
  8376  000A58  6E52               	movwf	??_sprintf^0,c
  8377  000A5A  6A53               	clrf	(??_sprintf+1)^0,c
  8378  000A5C  516D               	movf	sprintf@width& (0+255),w,b
  8379  000A5E  5C52               	subwf	??_sprintf^0,w,c
  8380  000A60  5053               	movf	(??_sprintf+1)^0,w,c
  8381  000A62  0A80               	xorlw	128
  8382  000A64  6E54               	movwf	(??_sprintf+2)^0,c
  8383  000A66  516E               	movf	(sprintf@width+1)& (0+255),w,b
  8384  000A68  0A80               	xorlw	128
  8385  000A6A  5854               	subwfb	(??_sprintf+2)^0,w,c
  8386  000A6C  B0D8               	btfsc	status,0,c
  8387  000A6E  EF3B  F005         	goto	u3071
  8388  000A72  EF3D  F005         	goto	u3070
  8389  000A76                     u3071:
  8390  000A76  EF43  F005         	goto	l3950
  8391  000A7A                     u3070:
  8392  000A7A                     
  8393                           ; BSR set to: 0
  8394                           ;doprnt.c: 1408: width -= c;
  8395  000A7A  516F               	movf	sprintf@c& (0+255),w,b
  8396  000A7C  5F6D               	subwf	sprintf@width& (0+255),f,b
  8397  000A7E  0E00               	movlw	0
  8398  000A80  5B6E               	subwfb	(sprintf@width+1)& (0+255),f,b
  8399  000A82  EF47  F005         	goto	l3952
  8400  000A86                     l3950:
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  8404  000A86  0E00               	movlw	0
  8405  000A88  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  8406  000A8A  0E00               	movlw	0
  8407  000A8C  6F6D               	movwf	sprintf@width& (0+255),b
  8408  000A8E                     l3952:
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  8412  000A8E  516D               	movf	sprintf@width& (0+255),w,b
  8413  000A90  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8414  000A92  B4D8               	btfsc	status,2,c
  8415  000A94  EF4E  F005         	goto	u3081
  8416  000A98  EF50  F005         	goto	u3080
  8417  000A9C                     u3081:
  8418  000A9C  EF64  F005         	goto	l3960
  8419  000AA0                     u3080:
  8420  000AA0                     l3954:
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  8424  000AA0  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8425  000AA4  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8426  000AA8  0E20               	movlw	32
  8427  000AAA  6EDF               	movwf	indf2,c
  8428  000AAC                     
  8429                           ; BSR set to: 0
  8430  000AAC  4A4A               	infsnz	sprintf@sp^0,f,c
  8431  000AAE  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8432  000AB0                     
  8433                           ; BSR set to: 0
  8434                           ;doprnt.c: 1457: while(--width);
  8435  000AB0  076D               	decf	sprintf@width& (0+255),f,b
  8436  000AB2  A0D8               	btfss	status,0,c
  8437  000AB4  076E               	decf	(sprintf@width+1)& (0+255),f,b
  8438  000AB6  516D               	movf	sprintf@width& (0+255),w,b
  8439  000AB8  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8440  000ABA  A4D8               	btfss	status,2,c
  8441  000ABC  EF62  F005         	goto	u3091
  8442  000AC0  EF64  F005         	goto	u3090
  8443  000AC4                     u3091:
  8444  000AC4  EF50  F005         	goto	l3954
  8445  000AC8                     u3090:
  8446  000AC8                     l3960:
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;doprnt.c: 1464: if(flag & 0x03)
  8450  000AC8  C06A  F052         	movff	sprintf@flag,??_sprintf
  8451  000ACC  0E03               	movlw	3
  8452  000ACE  1652               	andwf	??_sprintf^0,f,c
  8453  000AD0  B4D8               	btfsc	status,2,c
  8454  000AD2  EF6D  F005         	goto	u3101
  8455  000AD6  EF6F  F005         	goto	u3100
  8456  000ADA                     u3101:
  8457  000ADA  EF77  F005         	goto	l3966
  8458  000ADE                     u3100:
  8459  000ADE                     
  8460                           ; BSR set to: 0
  8461                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  8462  000ADE  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8463  000AE2  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8464  000AE6  0E2D               	movlw	45
  8465  000AE8  6EDF               	movwf	indf2,c
  8466  000AEA                     
  8467                           ; BSR set to: 0
  8468  000AEA  4A4A               	infsnz	sprintf@sp^0,f,c
  8469  000AEC  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8470  000AEE                     l3966:
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  8474  000AEE  C06F  F060         	movff	sprintf@c,sprintf@prec
  8475  000AF2  6B61               	clrf	(sprintf@prec+1)& (0+255),b
  8476                           
  8477                           ;doprnt.c: 1500: while(prec--) {
  8478  000AF4  EFC0  F005         	goto	l3974
  8479  000AF8                     l3968:
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  8483  000AF8  C060  F052         	movff	sprintf@prec,??_sprintf
  8484  000AFC  C061  F053         	movff	sprintf@prec+1,??_sprintf+1
  8485  000B00  90D8               	bcf	status,0,c
  8486  000B02  3652               	rlcf	??_sprintf^0,f,c
  8487  000B04  3653               	rlcf	(??_sprintf+1)^0,f,c
  8488  000B06  90D8               	bcf	status,0,c
  8489  000B08  3652               	rlcf	??_sprintf^0,f,c
  8490  000B0A  3653               	rlcf	(??_sprintf+1)^0,f,c
  8491  000B0C  0EC1               	movlw	low _dpowers
  8492  000B0E  2452               	addwf	??_sprintf^0,w,c
  8493  000B10  6EF6               	movwf	tblptrl,c
  8494  000B12  0E5D               	movlw	high _dpowers
  8495  000B14  2053               	addwfc	(??_sprintf+1)^0,w,c
  8496  000B16  6EF7               	movwf	tblptrh,c
  8497  000B18                     	if	0	;There are less than 3 active tblptr bytes
  8498  000B18                     	endif
  8499  000B18  0009               	tblrd		*+
  8500  000B1A  CFF5 F009          	movff	tablat,___lldiv@divisor
  8501  000B1E  0009               	tblrd		*+
  8502  000B20  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  8503  000B24  0009               	tblrd		*+
  8504  000B26  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  8505  000B2A  000A               	tblrd		*-
  8506  000B2C  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  8507  000B30  C066  F005         	movff	sprintf@val,___lldiv@dividend
  8508  000B34  C067  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  8509  000B38  C068  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  8510  000B3C  C069  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  8511  000B40  EC9A  F00E         	call	___lldiv	;wreg free
  8512  000B44  C005  F012         	movff	?___lldiv,___llmod@dividend
  8513  000B48  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  8514  000B4C  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  8515  000B50  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  8516  000B54  0E0A               	movlw	10
  8517  000B56  6E16               	movwf	___llmod@divisor^0,c
  8518  000B58  0E00               	movlw	0
  8519  000B5A  6E17               	movwf	(___llmod@divisor+1)^0,c
  8520  000B5C  0E00               	movlw	0
  8521  000B5E  6E18               	movwf	(___llmod@divisor+2)^0,c
  8522  000B60  0E00               	movlw	0
  8523  000B62  6E19               	movwf	(___llmod@divisor+3)^0,c
  8524  000B64  EC7A  F00F         	call	___llmod	;wreg free
  8525  000B68  5012               	movf	?___llmod^0,w,c
  8526  000B6A  0F30               	addlw	48
  8527  000B6C  0100               	movlb	0	; () banked
  8528  000B6E  6F6F               	movwf	sprintf@c& (0+255),b
  8529  000B70                     
  8530                           ; BSR set to: 0
  8531                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  8532  000B70  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8533  000B74  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8534  000B78  C06F  FFDF         	movff	sprintf@c,indf2
  8535  000B7C                     
  8536                           ; BSR set to: 0
  8537  000B7C  4A4A               	infsnz	sprintf@sp^0,f,c
  8538  000B7E  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8539  000B80                     l3974:
  8540                           
  8541                           ; BSR set to: 0
  8542  000B80  0760               	decf	sprintf@prec& (0+255),f,b
  8543  000B82  A0D8               	btfss	status,0,c
  8544  000B84  0761               	decf	(sprintf@prec+1)& (0+255),f,b
  8545  000B86  2960               	incf	sprintf@prec& (0+255),w,b
  8546  000B88  E106               	bnz	u3111
  8547  000B8A  2961               	incf	(sprintf@prec+1)& (0+255),w,b
  8548  000B8C  A4D8               	btfss	status,2,c
  8549  000B8E  EFCB  F005         	goto	u3111
  8550  000B92  EFCD  F005         	goto	u3110
  8551  000B96                     u3111:
  8552  000B96  EF7C  F005         	goto	l3968
  8553  000B9A                     u3110:
  8554  000B9A                     l3976:
  8555                           
  8556                           ; BSR set to: 0
  8557  000B9A  C04C  FFF6         	movff	sprintf@f,tblptrl
  8558  000B9E  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  8559  000BA2  4A4C               	infsnz	sprintf@f^0,f,c
  8560  000BA4  2A4D               	incf	(sprintf@f+1)^0,f,c
  8561  000BA6                     	if	0	;tblptru may be non-zero
  8562  000BA6                     	endif
  8563  000BA6                     	if	0	;tblptru may be non-zero
  8564  000BA6                     	endif
  8565  000BA6  0008               	tblrd		*
  8566  000BA8  CFF5 F06F          	movff	tablat,sprintf@c
  8567  000BAC  516F               	movf	sprintf@c& (0+255),w,b
  8568  000BAE  A4D8               	btfss	status,2,c
  8569  000BB0  EFDC  F005         	goto	u3121
  8570  000BB4  EFDE  F005         	goto	u3120
  8571  000BB8                     u3121:
  8572  000BB8  EF56  F003         	goto	l3840
  8573  000BBC                     u3120:
  8574  000BBC                     l3978:
  8575                           
  8576                           ; BSR set to: 0
  8577                           ;doprnt.c: 1564: *sp = 0;
  8578  000BBC  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8579  000BC0  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8580  000BC4  0E00               	movlw	0
  8581  000BC6  6EDF               	movwf	indf2,c
  8582  000BC8                     
  8583                           ; BSR set to: 0
  8584  000BC8  0012               	return		;funcret
  8585  000BCA                     __end_of_sprintf:
  8586                           	opt callstack 0
  8587                           
  8588 ;; *************** function _isdigit *****************
  8589 ;; Defined at:
  8590 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;  c               1    wreg     unsigned char 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;  c               1    6[COMRAM] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;		None               void
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8604 ;;      Params:         0       0       0       0       0       0       0       0       0
  8605 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8606 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8607 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8608 ;;Total ram usage:        3 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    2
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_sprintf
  8615 ;;		_atoi
  8616 ;;		_atol
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           	psect	text32
  8621  002A60                     __ptext32:
  8622                           	opt callstack 0
  8623  002A60                     _isdigit:
  8624                           	opt callstack 26
  8625                           
  8626                           ; BSR set to: 0
  8627                           ;incstack = 0
  8628                           ;isdigit@c stored from wreg
  8629  002A60  6E07               	movwf	isdigit@c^0,c
  8630  002A62  0E00               	movlw	0
  8631  002A64  6E06               	movwf	_isdigit$1927^0,c
  8632  002A66  0E3A               	movlw	58
  8633  002A68  6007               	cpfslt	isdigit@c^0,c
  8634  002A6A  EF39  F015         	goto	u2341
  8635  002A6E  EF3B  F015         	goto	u2340
  8636  002A72                     u2341:
  8637  002A72  EF45  F015         	goto	l3534
  8638  002A76                     u2340:
  8639  002A76  0E2F               	movlw	47
  8640  002A78  6407               	cpfsgt	isdigit@c^0,c
  8641  002A7A  EF41  F015         	goto	u2351
  8642  002A7E  EF43  F015         	goto	u2350
  8643  002A82                     u2351:
  8644  002A82  EF45  F015         	goto	l3534
  8645  002A86                     u2350:
  8646  002A86  0E01               	movlw	1
  8647  002A88  6E06               	movwf	_isdigit$1927^0,c
  8648  002A8A                     l3534:
  8649  002A8A  C006  F005         	movff	_isdigit$1927,??_isdigit
  8650  002A8E  3005               	rrcf	??_isdigit^0,w,c
  8651  002A90  0012               	return		;funcret
  8652  002A92                     __end_of_isdigit:
  8653                           	opt callstack 0
  8654                           
  8655 ;; *************** function ___llmod *****************
  8656 ;; Defined at:
  8657 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  dividend        4   17[COMRAM] unsigned long 
  8660 ;;  divisor         4   21[COMRAM] unsigned long 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  counter         1   25[COMRAM] unsigned char 
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  4   17[COMRAM] unsigned long 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8672 ;;      Params:         8       0       0       0       0       0       0       0       0
  8673 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8675 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8676 ;;Total ram usage:        9 bytes
  8677 ;; Hardware stack levels used:    1
  8678 ;; Hardware stack levels required when called:    2
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_sprintf
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text33
  8687  001EF4                     __ptext33:
  8688                           	opt callstack 0
  8689  001EF4                     ___llmod:
  8690                           	opt callstack 26
  8691  001EF4  5016               	movf	___llmod@divisor^0,w,c
  8692  001EF6  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  8693  001EF8  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  8694  001EFA  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  8695  001EFC  B4D8               	btfsc	status,2,c
  8696  001EFE  EF83  F00F         	goto	u2821
  8697  001F02  EF85  F00F         	goto	u2820
  8698  001F06                     u2821:
  8699  001F06  EFB5  F00F         	goto	l1111
  8700  001F0A                     u2820:
  8701  001F0A  0E01               	movlw	1
  8702  001F0C  6E1A               	movwf	___llmod@counter^0,c
  8703  001F0E  EF8F  F00F         	goto	l3800
  8704  001F12                     l3798:
  8705  001F12  90D8               	bcf	status,0,c
  8706  001F14  3616               	rlcf	___llmod@divisor^0,f,c
  8707  001F16  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  8708  001F18  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  8709  001F1A  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  8710  001F1C  2A1A               	incf	___llmod@counter^0,f,c
  8711  001F1E                     l3800:
  8712  001F1E  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  8713  001F20  EF94  F00F         	goto	u2831
  8714  001F24  EF96  F00F         	goto	u2830
  8715  001F28                     u2831:
  8716  001F28  EF89  F00F         	goto	l3798
  8717  001F2C                     u2830:
  8718  001F2C                     l3802:
  8719  001F2C  5016               	movf	___llmod@divisor^0,w,c
  8720  001F2E  5C12               	subwf	___llmod@dividend^0,w,c
  8721  001F30  5017               	movf	(___llmod@divisor+1)^0,w,c
  8722  001F32  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  8723  001F34  5018               	movf	(___llmod@divisor+2)^0,w,c
  8724  001F36  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  8725  001F38  5019               	movf	(___llmod@divisor+3)^0,w,c
  8726  001F3A  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  8727  001F3C  A0D8               	btfss	status,0,c
  8728  001F3E  EFA3  F00F         	goto	u2841
  8729  001F42  EFA5  F00F         	goto	u2840
  8730  001F46                     u2841:
  8731  001F46  EFAD  F00F         	goto	l3806
  8732  001F4A                     u2840:
  8733  001F4A  5016               	movf	___llmod@divisor^0,w,c
  8734  001F4C  5E12               	subwf	___llmod@dividend^0,f,c
  8735  001F4E  5017               	movf	(___llmod@divisor+1)^0,w,c
  8736  001F50  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  8737  001F52  5018               	movf	(___llmod@divisor+2)^0,w,c
  8738  001F54  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  8739  001F56  5019               	movf	(___llmod@divisor+3)^0,w,c
  8740  001F58  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  8741  001F5A                     l3806:
  8742  001F5A  90D8               	bcf	status,0,c
  8743  001F5C  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  8744  001F5E  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  8745  001F60  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  8746  001F62  3216               	rrcf	___llmod@divisor^0,f,c
  8747  001F64  2E1A               	decfsz	___llmod@counter^0,f,c
  8748  001F66  EF96  F00F         	goto	l3802
  8749  001F6A                     l1111:
  8750  001F6A  C012  F012         	movff	___llmod@dividend,?___llmod
  8751  001F6E  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  8752  001F72  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  8753  001F76  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  8754  001F7A  0012               	return		;funcret
  8755  001F7C                     __end_of___llmod:
  8756                           	opt callstack 0
  8757                           
  8758 ;; *************** function _sleepMS *****************
  8759 ;; Defined at:
  8760 ;;		line 107 in file "main.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  ms              4    4[COMRAM] unsigned long 
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;  t               4    8[COMRAM] unsigned long 
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		wreg, status,2, status,0
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8774 ;;      Params:         4       0       0       0       0       0       0       0       0
  8775 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8777 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8778 ;;Total ram usage:        8 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; Hardware stack levels required when called:    2
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_A6_Init
  8785 ;;		_A6_BaudRateSet
  8786 ;;		_A6_BaudRateAutoDetect
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           	psect	text34
  8791  002980                     __ptext34:
  8792                           	opt callstack 0
  8793  002980                     _sleepMS:
  8794                           	opt callstack 26
  8795  002980                     
  8796                           ;main.c: 108: uint32_t t = MILLISECONDS + ms;
  8797  002980  5005               	movf	sleepMS@ms^0,w,c
  8798  002982  0101               	movlb	1	; () banked
  8799  002984  25C1               	addwf	_MILLISECONDS& (0+255),w,b
  8800  002986  6E09               	movwf	sleepMS@t^0,c
  8801  002988  5006               	movf	(sleepMS@ms+1)^0,w,c
  8802  00298A  21C2               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  8803  00298C  6E0A               	movwf	(sleepMS@t+1)^0,c
  8804  00298E  5007               	movf	(sleepMS@ms+2)^0,w,c
  8805  002990  21C3               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  8806  002992  6E0B               	movwf	(sleepMS@t+2)^0,c
  8807  002994  5008               	movf	(sleepMS@ms+3)^0,w,c
  8808  002996  21C4               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  8809  002998  6E0C               	movwf	(sleepMS@t+3)^0,c
  8810  00299A                     l4024:
  8811                           
  8812                           ; BSR set to: 1
  8813  00299A  5009               	movf	sleepMS@t^0,w,c
  8814  00299C  5DC1               	subwf	_MILLISECONDS& (0+255),w,b
  8815  00299E  500A               	movf	(sleepMS@t+1)^0,w,c
  8816  0029A0  59C2               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  8817  0029A2  500B               	movf	(sleepMS@t+2)^0,w,c
  8818  0029A4  59C3               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
  8819  0029A6  500C               	movf	(sleepMS@t+3)^0,w,c
  8820  0029A8  59C4               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
  8821  0029AA  A0D8               	btfss	status,0,c
  8822  0029AC  EFDA  F014         	goto	u3171
  8823  0029B0  EFDC  F014         	goto	u3170
  8824  0029B4                     u3171:
  8825  0029B4  EFCD  F014         	goto	l4024
  8826  0029B8                     u3170:
  8827  0029B8                     
  8828                           ; BSR set to: 1
  8829  0029B8  0012               	return		;funcret
  8830  0029BA                     __end_of_sleepMS:
  8831                           	opt callstack 0
  8832                           
  8833 ;; *************** function _printLine *****************
  8834 ;; Defined at:
  8835 ;;		line 112 in file "main.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  str             2   73[COMRAM] PTR const unsigned char 
  8838 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateAutoDetect@zzzz(32), STR_30(23), loop@zzzz_169(32), 
  8839 ;;		 -> STR_15(27), loop@zzzz_164(32), STR_12(11), loop@zzzz_161(32), 
  8840 ;;		 -> STR_10(16), loop@response(32), STR_8(11), STR_7(13), 
  8841 ;;		 -> STR_6(11), STR_5(23), STR_4(25), loop@zzzz(32), 
  8842 ;;  color           2   75[COMRAM] unsigned int 
  8843 ;; Auto vars:     Size  Location     Type
  8844 ;;		None
  8845 ;; Return value:  Size  Location     Type
  8846 ;;                  1    wreg      void 
  8847 ;; Registers used:
  8848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8849 ;; Tracked objects:
  8850 ;;		On entry : 0/0
  8851 ;;		On exit  : 0/0
  8852 ;;		Unchanged: 0/0
  8853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8854 ;;      Params:         4       0       0       0       0       0       0       0       0
  8855 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8857 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8858 ;;Total ram usage:        4 bytes
  8859 ;; Hardware stack levels used:    1
  8860 ;; Hardware stack levels required when called:    8
  8861 ;; This function calls:
  8862 ;;		_TFT_DrawFillRect
  8863 ;;		_TFT_DrawString
  8864 ;; This function is called by:
  8865 ;;		_loop
  8866 ;;		_A6_BaudRateAutoDetect
  8867 ;;		_A6_Process_Random_Comms
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text35
  8872  001F7C                     __ptext35:
  8873                           	opt callstack 0
  8874  001F7C                     _printLine:
  8875                           	opt callstack 21
  8876  001F7C                     
  8877                           ;main.c: 113: consoleX += 10;
  8878  001F7C  0E0A               	movlw	10
  8879  001F7E  0100               	movlb	0	; () banked
  8880  001F80  27C8               	addwf	_consoleX& (0+255),f,b
  8881  001F82  0E00               	movlw	0
  8882  001F84  23C9               	addwfc	(_consoleX+1)& (0+255),f,b
  8883  001F86                     
  8884                           ; BSR set to: 0
  8885                           ;main.c: 114: TFT_DrawFillRect(consoleX, 0, 40, 400, 0x0000);
  8886  001F86  C0C8  F01C         	movff	_consoleX,TFT_DrawFillRect@x
  8887  001F8A  C0C9  F01D         	movff	_consoleX+1,TFT_DrawFillRect@x+1
  8888  001F8E  0E00               	movlw	0
  8889  001F90  6E1F               	movwf	(TFT_DrawFillRect@y+1)^0,c
  8890  001F92  0E00               	movlw	0
  8891  001F94  6E1E               	movwf	TFT_DrawFillRect@y^0,c
  8892  001F96  0E00               	movlw	0
  8893  001F98  6E21               	movwf	(TFT_DrawFillRect@w+1)^0,c
  8894  001F9A  0E28               	movlw	40
  8895  001F9C  6E20               	movwf	TFT_DrawFillRect@w^0,c
  8896  001F9E  0E01               	movlw	1
  8897  001FA0  6E23               	movwf	(TFT_DrawFillRect@h+1)^0,c
  8898  001FA2  0E90               	movlw	144
  8899  001FA4  6E22               	movwf	TFT_DrawFillRect@h^0,c
  8900  001FA6  0E00               	movlw	0
  8901  001FA8  6E25               	movwf	(TFT_DrawFillRect@color+1)^0,c
  8902  001FAA  0E00               	movlw	0
  8903  001FAC  6E24               	movwf	TFT_DrawFillRect@color^0,c
  8904  001FAE  EC7F  F011         	call	_TFT_DrawFillRect	;wreg free
  8905  001FB2                     
  8906                           ;main.c: 115: TFT_DrawString(consoleX, (400 - 1), str, color, 0x0000, 1);
  8907  001FB2  C0C8  F03F         	movff	_consoleX,TFT_DrawString@x
  8908  001FB6  C0C9  F040         	movff	_consoleX+1,TFT_DrawString@x+1
  8909  001FBA  0E01               	movlw	1
  8910  001FBC  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  8911  001FBE  0E8F               	movlw	143
  8912  001FC0  6E41               	movwf	TFT_DrawString@y^0,c
  8913  001FC2  C04A  F043         	movff	printLine@str,TFT_DrawString@str
  8914  001FC6  C04B  F044         	movff	printLine@str+1,TFT_DrawString@str+1
  8915  001FCA  C04C  F045         	movff	printLine@color,TFT_DrawString@color
  8916  001FCE  C04D  F046         	movff	printLine@color+1,TFT_DrawString@color+1
  8917  001FD2  0E00               	movlw	0
  8918  001FD4  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  8919  001FD6  0E00               	movlw	0
  8920  001FD8  6E47               	movwf	TFT_DrawString@bg^0,c
  8921  001FDA  0E01               	movlw	1
  8922  001FDC  6E49               	movwf	TFT_DrawString@size^0,c
  8923  001FDE  ECEC  F00E         	call	_TFT_DrawString	;wreg free
  8924  001FE2                     
  8925                           ;main.c: 116: if(consoleX > (240 - 35)) consoleX = 0;
  8926  001FE2  0100               	movlb	0	; () banked
  8927  001FE4  51C9               	movf	(_consoleX+1)& (0+255),w,b
  8928  001FE6  E109               	bnz	u3130
  8929  001FE8  0ECE               	movlw	206
  8930  001FEA  5DC8               	subwf	_consoleX& (0+255),w,b
  8931  001FEC  A0D8               	btfss	status,0,c
  8932  001FEE  EFFB  F00F         	goto	u3131
  8933  001FF2  EFFD  F00F         	goto	u3130
  8934  001FF6                     u3131:
  8935  001FF6  EF01  F010         	goto	l109
  8936  001FFA                     u3130:
  8937  001FFA                     
  8938                           ; BSR set to: 0
  8939  001FFA  0E00               	movlw	0
  8940  001FFC  6FC9               	movwf	(_consoleX+1)& (0+255),b
  8941  001FFE  0E00               	movlw	0
  8942  002000  6FC8               	movwf	_consoleX& (0+255),b
  8943  002002                     l109:
  8944                           
  8945                           ; BSR set to: 0
  8946  002002  0012               	return		;funcret
  8947  002004                     __end_of_printLine:
  8948                           	opt callstack 0
  8949                           
  8950 ;; *************** function _TFT_DrawString *****************
  8951 ;; Defined at:
  8952 ;;		line 213 in file "TFT.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  x               2   62[COMRAM] unsigned int 
  8955 ;;  y               2   64[COMRAM] unsigned int 
  8956 ;;  str             2   66[COMRAM] PTR const unsigned char 
  8957 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateAutoDetect@zzzz(32), STR_30(23), STR_22(28), 
  8958 ;;		 -> STR_21(11), Ecg_ProcessHeartRate@heartrateString(5), loop@zzzz_169(32), STR_15(27), 
  8959 ;;		 -> loop@zzzz_164(32), STR_12(11), loop@zzzz_161(32), STR_10(16), 
  8960 ;;		 -> loop@response(32), STR_8(11), STR_7(13), STR_6(11), 
  8961 ;;		 -> STR_5(23), STR_4(25), loop@zzzz(32), 
  8962 ;;  color           2   68[COMRAM] unsigned int 
  8963 ;;  bg              2   70[COMRAM] unsigned int 
  8964 ;;  size            1   72[COMRAM] unsigned char 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      void 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8976 ;;      Params:        11       0       0       0       0       0       0       0       0
  8977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8979 ;;      Totals:        11       0       0       0       0       0       0       0       0
  8980 ;;Total ram usage:       11 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    7
  8983 ;; This function calls:
  8984 ;;		_TFT_DrawChar
  8985 ;; This function is called by:
  8986 ;;		_printLine
  8987 ;;		_Ecg_Background_Leads_Ok
  8988 ;;		_Ecg_Background_Leads_Failure
  8989 ;;		_Ecg_ProcessHeartRate
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           	psect	text36
  8994  001DD8                     __ptext36:
  8995                           	opt callstack 0
  8996  001DD8                     _TFT_DrawString:
  8997                           	opt callstack 21
  8998  001DD8                     
  8999                           ;TFT.c: 214: while(*str) {
  9000  001DD8  EF1B  F00F         	goto	l3598
  9001  001DDC                     l3592:
  9002                           
  9003                           ;TFT.c: 215: TFT_DrawChar(x, y, *str, color, bg, size);
  9004  001DDC  C03F  F02A         	movff	TFT_DrawString@x,TFT_DrawChar@x
  9005  001DE0  C040  F02B         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  9006  001DE4  C041  F02C         	movff	TFT_DrawString@y,TFT_DrawChar@y
  9007  001DE8  C042  F02D         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  9008  001DEC  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  9009  001DF0  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  9010  001DF4  6AF8               	clrf	tblptru,c
  9011  001DF6  0E07               	movlw	(high __ramtop+-1)
  9012  001DF8  64F7               	cpfsgt	tblptrh,c
  9013  001DFA  D003               	bra	u2477
  9014  001DFC  0008               	tblrd		*
  9015  001DFE  50F5               	movf	tablat,w,c
  9016  001E00  D005               	bra	u2470
  9017  001E02                     u2477:
  9018  001E02  CFF6 FFE9          	movff	tblptrl,fsr0l
  9019  001E06  CFF7 FFEA          	movff	tblptrh,fsr0h
  9020  001E0A  50EF               	movf	indf0,w,c
  9021  001E0C                     u2470:
  9022  001E0C  6E2E               	movwf	TFT_DrawChar@c^0,c
  9023  001E0E  C045  F02F         	movff	TFT_DrawString@color,TFT_DrawChar@color
  9024  001E12  C046  F030         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  9025  001E16  C047  F031         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  9026  001E1A  C048  F032         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  9027  001E1E  C049  F033         	movff	TFT_DrawString@size,TFT_DrawChar@size
  9028  001E22  ECE5  F005         	call	_TFT_DrawChar	;wreg free
  9029  001E26                     
  9030                           ;TFT.c: 216: y -= (6 * size);
  9031  001E26  5049               	movf	TFT_DrawString@size^0,w,c
  9032  001E28  0D06               	mullw	6
  9033  001E2A  50F3               	movf	243,w,c
  9034  001E2C  5E41               	subwf	TFT_DrawString@y^0,f,c
  9035  001E2E  50F4               	movf	244,w,c
  9036  001E30  5A42               	subwfb	(TFT_DrawString@y+1)^0,f,c
  9037  001E32                     
  9038                           ;TFT.c: 217: str++;
  9039  001E32  4A43               	infsnz	TFT_DrawString@str^0,f,c
  9040  001E34  2A44               	incf	(TFT_DrawString@str+1)^0,f,c
  9041  001E36                     l3598:
  9042  001E36  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  9043  001E3A  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  9044  001E3E  6AF8               	clrf	tblptru,c
  9045  001E40  0E07               	movlw	(high __ramtop+-1)
  9046  001E42  64F7               	cpfsgt	tblptrh,c
  9047  001E44  D003               	bra	u2487
  9048  001E46  0008               	tblrd		*
  9049  001E48  50F5               	movf	tablat,w,c
  9050  001E4A  D005               	bra	u2480
  9051  001E4C                     u2487:
  9052  001E4C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9053  001E50  CFF7 FFEA          	movff	tblptrh,fsr0h
  9054  001E54  50EF               	movf	indf0,w,c
  9055  001E56                     u2480:
  9056  001E56  0900               	iorlw	0
  9057  001E58  A4D8               	btfss	status,2,c
  9058  001E5A  EF31  F00F         	goto	u2491
  9059  001E5E  EF33  F00F         	goto	u2490
  9060  001E62                     u2491:
  9061  001E62  EFEE  F00E         	goto	l3592
  9062  001E66                     u2490:
  9063  001E66  0012               	return		;funcret
  9064  001E68                     __end_of_TFT_DrawString:
  9065                           	opt callstack 0
  9066                           
  9067 ;; *************** function _TFT_DrawChar *****************
  9068 ;; Defined at:
  9069 ;;		line 192 in file "TFT.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  x               2   41[COMRAM] unsigned int 
  9072 ;;  y               2   43[COMRAM] unsigned int 
  9073 ;;  c               1   45[COMRAM] unsigned char 
  9074 ;;  color           2   46[COMRAM] unsigned int 
  9075 ;;  bg              2   48[COMRAM] unsigned int 
  9076 ;;  size            1   50[COMRAM] unsigned char 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;  j               1   60[COMRAM] char 
  9079 ;;  line            1   55[COMRAM] unsigned char 
  9080 ;;  i               1   61[COMRAM] char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9090 ;;      Params:        10       0       0       0       0       0       0       0       0
  9091 ;;      Locals:         7       0       0       0       0       0       0       0       0
  9092 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9093 ;;      Totals:        21       0       0       0       0       0       0       0       0
  9094 ;;Total ram usage:       21 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    6
  9097 ;; This function calls:
  9098 ;;		_TFT_DrawFillRect
  9099 ;;		_TFT_DrawPixel
  9100 ;;		___wmul
  9101 ;; This function is called by:
  9102 ;;		_TFT_DrawString
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           	psect	text37
  9107  000BCA                     __ptext37:
  9108                           	opt callstack 0
  9109  000BCA                     _TFT_DrawChar:
  9110                           	opt callstack 21
  9111  000BCA                     
  9112                           ;TFT.c: 193: for(int8_t i=0; i<5; i++ ) {
  9113  000BCA  0E00               	movlw	0
  9114  000BCC  6E3E               	movwf	TFT_DrawChar@i^0,c
  9115  000BCE                     l3440:
  9116                           
  9117                           ;TFT.c: 194: uint8_t line = TFT_Font[c * 5 + i];
  9118  000BCE  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  9119  000BD2  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  9120  000BD4  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  9121  000BD6  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  9122  000BD8  502E               	movf	TFT_DrawChar@c^0,w,c
  9123  000BDA  0D05               	mullw	5
  9124  000BDC  0EF5               	movlw	low _TFT_Font
  9125  000BDE  6E36               	movwf	(??_TFT_DrawChar+2)^0,c
  9126  000BE0  0E57               	movlw	high _TFT_Font
  9127  000BE2  6E37               	movwf	(??_TFT_DrawChar+3)^0,c
  9128  000BE4  50F3               	movf	243,w,c
  9129  000BE6  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  9130  000BE8  50F4               	movf	244,w,c
  9131  000BEA  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  9132  000BEC  5034               	movf	??_TFT_DrawChar^0,w,c
  9133  000BEE  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  9134  000BF0  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  9135  000BF2  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  9136  000BF4  C036  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  9137  000BF8  C037  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  9138  000BFC                     	if	0	;tblptru may be non-zero
  9139  000BFC                     	endif
  9140  000BFC                     	if	0	;tblptru may be non-zero
  9141  000BFC                     	endif
  9142  000BFC  0008               	tblrd		*
  9143  000BFE  CFF5 F038          	movff	tablat,TFT_DrawChar@line
  9144  000C02                     
  9145                           ;TFT.c: 195: for(int8_t j=0; j<8; j++, line >>= 1) {
  9146  000C02  0E00               	movlw	0
  9147  000C04  6E3D               	movwf	TFT_DrawChar@j^0,c
  9148  000C06                     l284:
  9149                           
  9150                           ;TFT.c: 196: if(line & 1) {
  9151  000C06  A038               	btfss	TFT_DrawChar@line^0,0,c
  9152  000C08  EF08  F006         	goto	u2171
  9153  000C0C  EF0A  F006         	goto	u2170
  9154  000C10                     u2171:
  9155  000C10  EF63  F006         	goto	l3454
  9156  000C14                     u2170:
  9157  000C14                     
  9158                           ;TFT.c: 197: if(size == 1) {
  9159  000C14  0433               	decf	TFT_DrawChar@size^0,w,c
  9160  000C16  A4D8               	btfss	status,2,c
  9161  000C18  EF10  F006         	goto	u2181
  9162  000C1C  EF12  F006         	goto	u2180
  9163  000C20                     u2181:
  9164  000C20  EF2D  F006         	goto	l3452
  9165  000C24                     u2180:
  9166  000C24                     
  9167                           ;TFT.c: 198: TFT_DrawPixel((x + j), (y - i), color);
  9168  000C24  502A               	movf	TFT_DrawChar@x^0,w,c
  9169  000C26  243D               	addwf	TFT_DrawChar@j^0,w,c
  9170  000C28  6E0D               	movwf	TFT_DrawPixel@x^0,c
  9171  000C2A  0E00               	movlw	0
  9172  000C2C  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  9173  000C2E  0EFF               	movlw	255
  9174  000C30  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  9175  000C32  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  9176  000C34  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  9177  000C38  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  9178  000C3A  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  9179  000C3C  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  9180  000C3E  5034               	movf	??_TFT_DrawChar^0,w,c
  9181  000C40  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  9182  000C42  6E0F               	movwf	TFT_DrawPixel@y^0,c
  9183  000C44  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  9184  000C46  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  9185  000C48  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  9186  000C4A  C02F  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  9187  000C4E  C030  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  9188  000C52  EC83  F014         	call	_TFT_DrawPixel	;wreg free
  9189                           
  9190                           ;TFT.c: 199: } else {
  9191  000C56  EFC6  F006         	goto	l3462
  9192  000C5A                     l3452:
  9193                           
  9194                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  9195  000C5A  503D               	movf	TFT_DrawChar@j^0,w,c
  9196  000C5C  6E05               	movwf	___wmul@multiplier^0,c
  9197  000C5E  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9198  000C60  BE05               	btfsc	___wmul@multiplier^0,7,c
  9199  000C62  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9200  000C64  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9201  000C68  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9202  000C6A  EC61  F015         	call	___wmul	;wreg free
  9203  000C6E  502A               	movf	TFT_DrawChar@x^0,w,c
  9204  000C70  2405               	addwf	?___wmul^0,w,c
  9205  000C72  6E39               	movwf	_TFT_DrawChar$2198^0,c
  9206  000C74  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  9207  000C76  2006               	addwfc	(?___wmul+1)^0,w,c
  9208  000C78  6E3A               	movwf	(_TFT_DrawChar$2198+1)^0,c
  9209                           
  9210                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  9211  000C7A  503E               	movf	TFT_DrawChar@i^0,w,c
  9212  000C7C  6E05               	movwf	___wmul@multiplier^0,c
  9213  000C7E  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9214  000C80  BE05               	btfsc	___wmul@multiplier^0,7,c
  9215  000C82  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9216  000C84  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9217  000C88  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9218  000C8A  EC61  F015         	call	___wmul	;wreg free
  9219  000C8E  5005               	movf	?___wmul^0,w,c
  9220  000C90  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  9221  000C92  6E3B               	movwf	_TFT_DrawChar$2199^0,c
  9222  000C94  5006               	movf	(?___wmul+1)^0,w,c
  9223  000C96  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  9224  000C98  6E3C               	movwf	(_TFT_DrawChar$2199+1)^0,c
  9225                           
  9226                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  9227  000C9A  C039  F01C         	movff	_TFT_DrawChar$2198,TFT_DrawFillRect@x
  9228  000C9E  C03A  F01D         	movff	_TFT_DrawChar$2198+1,TFT_DrawFillRect@x+1
  9229  000CA2  C03B  F01E         	movff	_TFT_DrawChar$2199,TFT_DrawFillRect@y
  9230  000CA6  C03C  F01F         	movff	_TFT_DrawChar$2199+1,TFT_DrawFillRect@y+1
  9231  000CAA  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  9232  000CAE  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  9233  000CB0  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  9234  000CB4  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  9235  000CB6  C02F  F024         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  9236  000CBA  C030  F025         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  9237  000CBE  EC7F  F011         	call	_TFT_DrawFillRect	;wreg free
  9238  000CC2  EFC6  F006         	goto	l3462
  9239  000CC6                     l3454:
  9240  000CC6  502F               	movf	TFT_DrawChar@color^0,w,c
  9241  000CC8  1831               	xorwf	TFT_DrawChar@bg^0,w,c
  9242  000CCA  E109               	bnz	u2190
  9243  000CCC  5030               	movf	(TFT_DrawChar@color+1)^0,w,c
  9244  000CCE  1832               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  9245  000CD0  B4D8               	btfsc	status,2,c
  9246  000CD2  EF6D  F006         	goto	u2191
  9247  000CD6  EF6F  F006         	goto	u2190
  9248  000CDA                     u2191:
  9249  000CDA  EFC6  F006         	goto	l3462
  9250  000CDE                     u2190:
  9251  000CDE                     
  9252                           ;TFT.c: 203: if(size == 1) {
  9253  000CDE  0433               	decf	TFT_DrawChar@size^0,w,c
  9254  000CE0  A4D8               	btfss	status,2,c
  9255  000CE2  EF75  F006         	goto	u2201
  9256  000CE6  EF77  F006         	goto	u2200
  9257  000CEA                     u2201:
  9258  000CEA  EF92  F006         	goto	l3460
  9259  000CEE                     u2200:
  9260  000CEE                     
  9261                           ;TFT.c: 204: TFT_DrawPixel((x + j), (y - i), bg);
  9262  000CEE  502A               	movf	TFT_DrawChar@x^0,w,c
  9263  000CF0  243D               	addwf	TFT_DrawChar@j^0,w,c
  9264  000CF2  6E0D               	movwf	TFT_DrawPixel@x^0,c
  9265  000CF4  0E00               	movlw	0
  9266  000CF6  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  9267  000CF8  0EFF               	movlw	255
  9268  000CFA  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  9269  000CFC  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  9270  000CFE  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  9271  000D02  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  9272  000D04  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  9273  000D06  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  9274  000D08  5034               	movf	??_TFT_DrawChar^0,w,c
  9275  000D0A  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  9276  000D0C  6E0F               	movwf	TFT_DrawPixel@y^0,c
  9277  000D0E  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  9278  000D10  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  9279  000D12  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  9280  000D14  C031  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  9281  000D18  C032  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  9282  000D1C  EC83  F014         	call	_TFT_DrawPixel	;wreg free
  9283                           
  9284                           ;TFT.c: 205: } else {
  9285  000D20  EFC6  F006         	goto	l3462
  9286  000D24                     l3460:
  9287                           
  9288                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  9289  000D24  503D               	movf	TFT_DrawChar@j^0,w,c
  9290  000D26  6E05               	movwf	___wmul@multiplier^0,c
  9291  000D28  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9292  000D2A  BE05               	btfsc	___wmul@multiplier^0,7,c
  9293  000D2C  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9294  000D2E  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9295  000D32  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9296  000D34  EC61  F015         	call	___wmul	;wreg free
  9297  000D38  502A               	movf	TFT_DrawChar@x^0,w,c
  9298  000D3A  2405               	addwf	?___wmul^0,w,c
  9299  000D3C  6E39               	movwf	_TFT_DrawChar$2198^0,c
  9300  000D3E  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  9301  000D40  2006               	addwfc	(?___wmul+1)^0,w,c
  9302  000D42  6E3A               	movwf	(_TFT_DrawChar$2198+1)^0,c
  9303                           
  9304                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  9305  000D44  503E               	movf	TFT_DrawChar@i^0,w,c
  9306  000D46  6E05               	movwf	___wmul@multiplier^0,c
  9307  000D48  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9308  000D4A  BE05               	btfsc	___wmul@multiplier^0,7,c
  9309  000D4C  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9310  000D4E  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9311  000D52  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9312  000D54  EC61  F015         	call	___wmul	;wreg free
  9313  000D58  5005               	movf	?___wmul^0,w,c
  9314  000D5A  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  9315  000D5C  6E3B               	movwf	_TFT_DrawChar$2199^0,c
  9316  000D5E  5006               	movf	(?___wmul+1)^0,w,c
  9317  000D60  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  9318  000D62  6E3C               	movwf	(_TFT_DrawChar$2199+1)^0,c
  9319                           
  9320                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  9321  000D64  C039  F01C         	movff	_TFT_DrawChar$2198,TFT_DrawFillRect@x
  9322  000D68  C03A  F01D         	movff	_TFT_DrawChar$2198+1,TFT_DrawFillRect@x+1
  9323  000D6C  C03B  F01E         	movff	_TFT_DrawChar$2199,TFT_DrawFillRect@y
  9324  000D70  C03C  F01F         	movff	_TFT_DrawChar$2199+1,TFT_DrawFillRect@y+1
  9325  000D74  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  9326  000D78  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  9327  000D7A  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  9328  000D7E  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  9329  000D80  C031  F024         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  9330  000D84  C032  F025         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  9331  000D88  EC7F  F011         	call	_TFT_DrawFillRect	;wreg free
  9332  000D8C                     l3462:
  9333  000D8C  2A3D               	incf	TFT_DrawChar@j^0,f,c
  9334  000D8E  90D8               	bcf	status,0,c
  9335  000D90  3238               	rrcf	TFT_DrawChar@line^0,f,c
  9336  000D92  503D               	movf	TFT_DrawChar@j^0,w,c
  9337  000D94  0A80               	xorlw	128
  9338  000D96  0F78               	addlw	-136
  9339  000D98  A0D8               	btfss	status,0,c
  9340  000D9A  EFD1  F006         	goto	u2211
  9341  000D9E  EFD3  F006         	goto	u2210
  9342  000DA2                     u2211:
  9343  000DA2  EF03  F006         	goto	l284
  9344  000DA6                     u2210:
  9345  000DA6  2A3E               	incf	TFT_DrawChar@i^0,f,c
  9346  000DA8  503E               	movf	TFT_DrawChar@i^0,w,c
  9347  000DAA  0A80               	xorlw	128
  9348  000DAC  0F7B               	addlw	-133
  9349  000DAE  A0D8               	btfss	status,0,c
  9350  000DB0  EFDC  F006         	goto	u2221
  9351  000DB4  EFDE  F006         	goto	u2220
  9352  000DB8                     u2221:
  9353  000DB8  EFE7  F005         	goto	l3440
  9354  000DBC                     u2220:
  9355  000DBC  0012               	return		;funcret
  9356  000DBE                     __end_of_TFT_DrawChar:
  9357                           	opt callstack 0
  9358                           
  9359 ;; *************** function _TFT_DrawPixel *****************
  9360 ;; Defined at:
  9361 ;;		line 94 in file "TFT.c"
  9362 ;; Parameters:    Size  Location     Type
  9363 ;;  x               2   12[COMRAM] unsigned int 
  9364 ;;  y               2   14[COMRAM] unsigned int 
  9365 ;;  color           2   16[COMRAM] unsigned int 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;		None
  9368 ;; Return value:  Size  Location     Type
  9369 ;;                  1    wreg      void 
  9370 ;; Registers used:
  9371 ;;		wreg, status,2, cstack
  9372 ;; Tracked objects:
  9373 ;;		On entry : 0/0
  9374 ;;		On exit  : 0/0
  9375 ;;		Unchanged: 0/0
  9376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9377 ;;      Params:         6       0       0       0       0       0       0       0       0
  9378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9380 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9381 ;;Total ram usage:        6 bytes
  9382 ;; Hardware stack levels used:    1
  9383 ;; Hardware stack levels required when called:    3
  9384 ;; This function calls:
  9385 ;;		_TFT_WriteRegister
  9386 ;; This function is called by:
  9387 ;;		_TFT_DrawLine
  9388 ;;		_TFT_DrawChar
  9389 ;;		_TFT_DrawBitmap
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           	psect	text38
  9394  002906                     __ptext38:
  9395                           	opt callstack 0
  9396  002906                     _TFT_DrawPixel:
  9397                           	opt callstack 23
  9398  002906                     
  9399                           ;TFT.c: 95: TFT_WriteRegister(0x0200, x);
  9400  002906  0E02               	movlw	2
  9401  002908  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9402  00290A  0E00               	movlw	0
  9403  00290C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9404  00290E  C00D  F007         	movff	TFT_DrawPixel@x,TFT_WriteRegister@data
  9405  002912  C00E  F008         	movff	TFT_DrawPixel@x+1,TFT_WriteRegister@data+1
  9406  002916  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9407                           
  9408                           ;TFT.c: 96: TFT_WriteRegister(0x0201, y);
  9409  00291A  0E02               	movlw	2
  9410  00291C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9411  00291E  0E01               	movlw	1
  9412  002920  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9413  002922  C00F  F007         	movff	TFT_DrawPixel@y,TFT_WriteRegister@data
  9414  002926  C010  F008         	movff	TFT_DrawPixel@y+1,TFT_WriteRegister@data+1
  9415  00292A  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9416                           
  9417                           ;TFT.c: 97: TFT_WriteRegister(0x0202, color);
  9418  00292E  0E02               	movlw	2
  9419  002930  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9420  002932  0E02               	movlw	2
  9421  002934  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9422  002936  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  9423  00293A  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  9424  00293E  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9425  002942  0012               	return		;funcret
  9426  002944                     __end_of_TFT_DrawPixel:
  9427                           	opt callstack 0
  9428                           
  9429 ;; *************** function _TFT_DrawFillRect *****************
  9430 ;; Defined at:
  9431 ;;		line 138 in file "TFT.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  x               2   27[COMRAM] unsigned int 
  9434 ;;  y               2   29[COMRAM] unsigned int 
  9435 ;;  w               2   31[COMRAM] unsigned int 
  9436 ;;  h               2   33[COMRAM] unsigned int 
  9437 ;;  color           2   35[COMRAM] unsigned int 
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;		None
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  1    wreg      void 
  9442 ;; Registers used:
  9443 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9449 ;;      Params:        10       0       0       0       0       0       0       0       0
  9450 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9451 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9452 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9453 ;;Total ram usage:       14 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; Hardware stack levels required when called:    5
  9456 ;; This function calls:
  9457 ;;		_TFT_Flood
  9458 ;;		_TFT_FullScreen
  9459 ;;		_TFT_SetAddrWindow
  9460 ;;		___wmul
  9461 ;; This function is called by:
  9462 ;;		_printLine
  9463 ;;		_TFT_DrawChar
  9464 ;;		_Ecg_ProcessHeartbeat
  9465 ;;		_Ecg_Draw
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           	psect	text39
  9470  0022FE                     __ptext39:
  9471                           	opt callstack 0
  9472  0022FE                     _TFT_DrawFillRect:
  9473                           	opt callstack 21
  9474  0022FE                     
  9475                           ;TFT.c: 139: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h -1));
  9476  0022FE  C01C  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  9477  002302  C01D  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  9478  002306  C01E  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  9479  00230A  C01F  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  9480  00230E  5020               	movf	TFT_DrawFillRect@w^0,w,c
  9481  002310  241C               	addwf	TFT_DrawFillRect@x^0,w,c
  9482  002312  6E26               	movwf	??_TFT_DrawFillRect^0,c
  9483  002314  5021               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  9484  002316  201D               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  9485  002318  6E27               	movwf	(??_TFT_DrawFillRect+1)^0,c
  9486  00231A  0EFF               	movlw	255
  9487  00231C  2426               	addwf	??_TFT_DrawFillRect^0,w,c
  9488  00231E  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  9489  002320  0EFF               	movlw	255
  9490  002322  2027               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  9491  002324  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  9492  002326  5022               	movf	TFT_DrawFillRect@h^0,w,c
  9493  002328  241E               	addwf	TFT_DrawFillRect@y^0,w,c
  9494  00232A  6E28               	movwf	(??_TFT_DrawFillRect+2)^0,c
  9495  00232C  5023               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  9496  00232E  201F               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  9497  002330  6E29               	movwf	(??_TFT_DrawFillRect+3)^0,c
  9498  002332  0EFF               	movlw	255
  9499  002334  2428               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  9500  002336  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  9501  002338  0EFF               	movlw	255
  9502  00233A  2029               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  9503  00233C  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  9504  00233E  EC06  F011         	call	_TFT_SetAddrWindow	;wreg free
  9505  002342                     
  9506                           ;TFT.c: 140: TFT_Flood(color, (w * h));
  9507  002342  C024  F00D         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  9508  002346  C025  F00E         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  9509  00234A  C020  F005         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  9510  00234E  C021  F006         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  9511  002352  C022  F007         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  9512  002356  C023  F008         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  9513  00235A  EC61  F015         	call	___wmul	;wreg free
  9514  00235E  C005  F00F         	movff	?___wmul,TFT_Flood@len
  9515  002362  C006  F010         	movff	?___wmul+1,TFT_Flood@len+1
  9516  002366  6A11               	clrf	(TFT_Flood@len+2)^0,c
  9517  002368  6A12               	clrf	(TFT_Flood@len+3)^0,c
  9518  00236A  ECD3  F007         	call	_TFT_Flood	;wreg free
  9519  00236E                     
  9520                           ;TFT.c: 141: TFT_FullScreen();
  9521  00236E  EC74  F015         	call	_TFT_FullScreen	;wreg free
  9522  002372  0012               	return		;funcret
  9523  002374                     __end_of_TFT_DrawFillRect:
  9524                           	opt callstack 0
  9525                           
  9526 ;; *************** function ___wmul *****************
  9527 ;; Defined at:
  9528 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  9529 ;; Parameters:    Size  Location     Type
  9530 ;;  multiplier      2    4[COMRAM] unsigned int 
  9531 ;;  multiplicand    2    6[COMRAM] unsigned int 
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;  product         2    8[COMRAM] unsigned int 
  9534 ;; Return value:  Size  Location     Type
  9535 ;;                  2    4[COMRAM] unsigned int 
  9536 ;; Registers used:
  9537 ;;		wreg, status,2, status,0, prodl, prodh
  9538 ;; Tracked objects:
  9539 ;;		On entry : 0/0
  9540 ;;		On exit  : 0/0
  9541 ;;		Unchanged: 0/0
  9542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9543 ;;      Params:         4       0       0       0       0       0       0       0       0
  9544 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9546 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9547 ;;Total ram usage:        6 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    2
  9550 ;; This function calls:
  9551 ;;		Nothing
  9552 ;; This function is called by:
  9553 ;;		_TFT_DrawFillRect
  9554 ;;		_TFT_DrawChar
  9555 ;;		_sprintf
  9556 ;;		_atoi
  9557 ;; This function uses a non-reentrant model
  9558 ;;
  9559                           
  9560                           	psect	text40
  9561  002AC2                     __ptext40:
  9562                           	opt callstack 0
  9563  002AC2                     ___wmul:
  9564                           	opt callstack 26
  9565  002AC2  5005               	movf	___wmul@multiplier^0,w,c
  9566  002AC4  0207               	mulwf	___wmul@multiplicand^0,c
  9567  002AC6  CFF3 F009          	movff	prodl,___wmul@product
  9568  002ACA  CFF4 F00A          	movff	prodh,___wmul@product+1
  9569  002ACE  5005               	movf	___wmul@multiplier^0,w,c
  9570  002AD0  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  9571  002AD2  50F3               	movf	243,w,c
  9572  002AD4  260A               	addwf	(___wmul@product+1)^0,f,c
  9573  002AD6  5006               	movf	(___wmul@multiplier+1)^0,w,c
  9574  002AD8  0207               	mulwf	___wmul@multiplicand^0,c
  9575  002ADA  50F3               	movf	243,w,c
  9576  002ADC  260A               	addwf	(___wmul@product+1)^0,f,c
  9577  002ADE  C009  F005         	movff	___wmul@product,?___wmul
  9578  002AE2  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  9579  002AE6  0012               	return		;funcret
  9580  002AE8                     __end_of___wmul:
  9581                           	opt callstack 0
  9582                           
  9583 ;; *************** function _TFT_FullScreen *****************
  9584 ;; Defined at:
  9585 ;;		line 68 in file "TFT.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, status,2, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9599 ;;      Params:         0       0       0       0       0       0       0       0       0
  9600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9602 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9603 ;;Total ram usage:        0 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:    4
  9606 ;; This function calls:
  9607 ;;		_TFT_SetAddrWindow
  9608 ;; This function is called by:
  9609 ;;		_TFT_Init
  9610 ;;		_TFT_DrawFillRect
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           	psect	text41
  9615  002AE8                     __ptext41:
  9616                           	opt callstack 0
  9617  002AE8                     _TFT_FullScreen:
  9618                           	opt callstack 21
  9619  002AE8                     
  9620                           ;TFT.c: 69: TFT_SetAddrWindow(0, 0, 240 - 1, 400 - 1);
  9621  002AE8  0E00               	movlw	0
  9622  002AEA  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  9623  002AEC  0E00               	movlw	0
  9624  002AEE  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  9625  002AF0  0E00               	movlw	0
  9626  002AF2  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  9627  002AF4  0E00               	movlw	0
  9628  002AF6  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  9629  002AF8  0E00               	movlw	0
  9630  002AFA  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  9631  002AFC  0EEF               	movlw	239
  9632  002AFE  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  9633  002B00  0E01               	movlw	1
  9634  002B02  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  9635  002B04  0E8F               	movlw	143
  9636  002B06  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  9637  002B08  EC06  F011         	call	_TFT_SetAddrWindow	;wreg free
  9638  002B0C  0012               	return		;funcret
  9639  002B0E                     __end_of_TFT_FullScreen:
  9640                           	opt callstack 0
  9641                           
  9642 ;; *************** function _TFT_SetAddrWindow *****************
  9643 ;; Defined at:
  9644 ;;		line 56 in file "TFT.c"
  9645 ;; Parameters:    Size  Location     Type
  9646 ;;  x1              2   12[COMRAM] unsigned int 
  9647 ;;  y1              2   14[COMRAM] unsigned int 
  9648 ;;  x2              2   16[COMRAM] unsigned int 
  9649 ;;  y2              2   18[COMRAM] unsigned int 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9661 ;;      Params:         8       0       0       0       0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9664 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9665 ;;Total ram usage:        8 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:    3
  9668 ;; This function calls:
  9669 ;;		_TFT_WriteRegister
  9670 ;; This function is called by:
  9671 ;;		_TFT_FullScreen
  9672 ;;		_TFT_DrawFillRect
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           	psect	text42
  9677  00220C                     __ptext42:
  9678                           	opt callstack 0
  9679  00220C                     _TFT_SetAddrWindow:
  9680                           	opt callstack 22
  9681  00220C                     
  9682                           ;TFT.c: 58: TFT_WriteRegister(0x0210, x1);
  9683  00220C  0E02               	movlw	2
  9684  00220E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9685  002210  0E10               	movlw	16
  9686  002212  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9687  002214  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  9688  002218  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  9689  00221C  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9690                           
  9691                           ;TFT.c: 59: TFT_WriteRegister(0x0211, x2);
  9692  002220  0E02               	movlw	2
  9693  002222  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9694  002224  0E11               	movlw	17
  9695  002226  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9696  002228  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  9697  00222C  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  9698  002230  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9699                           
  9700                           ;TFT.c: 60: TFT_WriteRegister(0x0212, y1);
  9701  002234  0E02               	movlw	2
  9702  002236  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9703  002238  0E12               	movlw	18
  9704  00223A  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9705  00223C  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  9706  002240  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  9707  002244  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9708                           
  9709                           ;TFT.c: 61: TFT_WriteRegister(0x0213, y2);
  9710  002248  0E02               	movlw	2
  9711  00224A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9712  00224C  0E13               	movlw	19
  9713  00224E  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9714  002250  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  9715  002254  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  9716  002258  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9717                           
  9718                           ;TFT.c: 64: TFT_WriteRegister(0x0200, x1);
  9719  00225C  0E02               	movlw	2
  9720  00225E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9721  002260  0E00               	movlw	0
  9722  002262  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9723  002264  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  9724  002268  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  9725  00226C  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9726                           
  9727                           ;TFT.c: 65: TFT_WriteRegister(0x0201, y2);
  9728  002270  0E02               	movlw	2
  9729  002272  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9730  002274  0E01               	movlw	1
  9731  002276  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9732  002278  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  9733  00227C  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  9734  002280  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9735  002284  0012               	return		;funcret
  9736  002286                     __end_of_TFT_SetAddrWindow:
  9737                           	opt callstack 0
  9738                           
  9739 ;; *************** function _TFT_Flood *****************
  9740 ;; Defined at:
  9741 ;;		line 144 in file "TFT.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  color           2   12[COMRAM] unsigned int 
  9744 ;;  len             4   14[COMRAM] unsigned long 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  blocks          2   22[COMRAM] unsigned int 
  9747 ;;  color_lo        1   26[COMRAM] unsigned char 
  9748 ;;  color_hi        1   25[COMRAM] unsigned char 
  9749 ;;  i               1   24[COMRAM] unsigned char 
  9750 ;; Return value:  Size  Location     Type
  9751 ;;                  1    wreg      void 
  9752 ;; Registers used:
  9753 ;;		wreg, status,2, status,0, cstack
  9754 ;; Tracked objects:
  9755 ;;		On entry : 0/0
  9756 ;;		On exit  : 0/0
  9757 ;;		Unchanged: 0/0
  9758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9759 ;;      Params:         6       0       0       0       0       0       0       0       0
  9760 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9761 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9762 ;;      Totals:        15       0       0       0       0       0       0       0       0
  9763 ;;Total ram usage:       15 bytes
  9764 ;; Hardware stack levels used:    1
  9765 ;; Hardware stack levels required when called:    3
  9766 ;; This function calls:
  9767 ;;		_TFT_WriteRegister
  9768 ;; This function is called by:
  9769 ;;		_TFT_DrawFillRect
  9770 ;;		_TFT_FillScreen
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           	psect	text43
  9775  000FA6                     __ptext43:
  9776                           	opt callstack 0
  9777  000FA6                     _TFT_Flood:
  9778                           	opt callstack 22
  9779  000FA6                     
  9780                           ;TFT.c: 145: uint16_t blocks;;TFT.c: 146: uint8_t i;;TFT.c: 147: uint8_t color_hi = colo
      +                          r >> 8;
  9781  000FA6  500E               	movf	(TFT_Flood@color+1)^0,w,c
  9782  000FA8  6E1A               	movwf	TFT_Flood@color_hi^0,c
  9783  000FAA                     
  9784                           ;TFT.c: 148: uint8_t color_lo = color;
  9785  000FAA  C00D  F01B         	movff	TFT_Flood@color,TFT_Flood@color_lo
  9786  000FAE                     
  9787                           ;TFT.c: 151: TFT_WriteRegister(0x0202, color);
  9788  000FAE  0E02               	movlw	2
  9789  000FB0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9790  000FB2  0E02               	movlw	2
  9791  000FB4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9792  000FB6  C00D  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  9793  000FBA  C00E  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  9794  000FBE  EC41  F014         	call	_TFT_WriteRegister	;wreg free
  9795  000FC2                     
  9796                           ;TFT.c: 152: len--;
  9797  000FC2  060F               	decf	TFT_Flood@len^0,f,c
  9798  000FC4  0E00               	movlw	0
  9799  000FC6  5A10               	subwfb	(TFT_Flood@len+1)^0,f,c
  9800  000FC8  5A11               	subwfb	(TFT_Flood@len+2)^0,f,c
  9801  000FCA  5A12               	subwfb	(TFT_Flood@len+3)^0,f,c
  9802  000FCC                     
  9803                           ;TFT.c: 156: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  9804  000FCC  9082               	bcf	130,0,c	;volatile
  9805  000FCE  F000               	nop		;# 
  9806  000FD0                     
  9807                           ;TFT.c: 157: blocks = (uint16_t)(len / 4);
  9808  000FD0  C00F  F013         	movff	TFT_Flood@len,??_TFT_Flood
  9809  000FD4  C010  F014         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  9810  000FD8  C011  F015         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  9811  000FDC  C012  F016         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  9812  000FE0  0E03               	movlw	3
  9813  000FE2  EFF8  F007         	goto	u2000
  9814  000FE6                     u2005:
  9815  000FE6  90D8               	bcf	status,0,c
  9816  000FE8  3216               	rrcf	(??_TFT_Flood+3)^0,f,c
  9817  000FEA  3215               	rrcf	(??_TFT_Flood+2)^0,f,c
  9818  000FEC  3214               	rrcf	(??_TFT_Flood+1)^0,f,c
  9819  000FEE  3213               	rrcf	??_TFT_Flood^0,f,c
  9820  000FF0                     u2000:
  9821  000FF0  2EE8               	decfsz	wreg,f,c
  9822  000FF2  EFF3  F007         	goto	u2005
  9823  000FF6  C013  F017         	movff	??_TFT_Flood,TFT_Flood@blocks
  9824  000FFA  C014  F018         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  9825  000FFE                     
  9826                           ;TFT.c: 158: if(color_hi == color_lo) {
  9827  000FFE  501B               	movf	TFT_Flood@color_lo^0,w,c
  9828  001000  181A               	xorwf	TFT_Flood@color_hi^0,w,c
  9829  001002  A4D8               	btfss	status,2,c
  9830  001004  EF06  F008         	goto	u2011
  9831  001008  EF08  F008         	goto	u2010
  9832  00100C                     u2011:
  9833  00100C  EF6D  F008         	goto	l3356
  9834  001010                     u2010:
  9835  001010  EF22  F008         	goto	l3350
  9836  001014                     l261:
  9837                           
  9838                           ;TFT.c: 160: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9839  001014  9A80               	bcf	128,5,c	;volatile
  9840  001016  F000               	nop		;# 
  9841  001018  8A80               	bsf	128,5,c	;volatile
  9842  00101A  9A80               	bcf	128,5,c	;volatile
  9843  00101C  F000               	nop		;# 
  9844  00101E  8A80               	bsf	128,5,c	;volatile
  9845                           
  9846                           ;TFT.c: 161: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9847  001020  9A80               	bcf	128,5,c	;volatile
  9848  001022  F000               	nop		;# 
  9849  001024  8A80               	bsf	128,5,c	;volatile
  9850  001026  9A80               	bcf	128,5,c	;volatile
  9851  001028  F000               	nop		;# 
  9852  00102A  8A80               	bsf	128,5,c	;volatile
  9853                           
  9854                           ;TFT.c: 162: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9855  00102C  9A80               	bcf	128,5,c	;volatile
  9856  00102E  F000               	nop		;# 
  9857  001030  8A80               	bsf	128,5,c	;volatile
  9858  001032  9A80               	bcf	128,5,c	;volatile
  9859  001034  F000               	nop		;# 
  9860  001036  8A80               	bsf	128,5,c	;volatile
  9861                           
  9862                           ;TFT.c: 163: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9863  001038  9A80               	bcf	128,5,c	;volatile
  9864  00103A  F000               	nop		;# 
  9865  00103C  8A80               	bsf	128,5,c	;volatile
  9866  00103E  9A80               	bcf	128,5,c	;volatile
  9867  001040  F000               	nop		;# 
  9868  001042  8A80               	bsf	128,5,c	;volatile
  9869  001044                     l3350:
  9870  001044  0617               	decf	TFT_Flood@blocks^0,f,c
  9871  001046  A0D8               	btfss	status,0,c
  9872  001048  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  9873  00104A  2817               	incf	TFT_Flood@blocks^0,w,c
  9874  00104C  E106               	bnz	u2021
  9875  00104E  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  9876  001050  A4D8               	btfss	status,2,c
  9877  001052  EF2D  F008         	goto	u2021
  9878  001056  EF2F  F008         	goto	u2020
  9879  00105A                     u2021:
  9880  00105A  EF0A  F008         	goto	l261
  9881  00105E                     u2020:
  9882  00105E                     
  9883                           ;TFT.c: 164: };TFT.c: 165: for(i = (uint8_t)len & 3; i--; ) {
  9884  00105E  500F               	movf	TFT_Flood@len^0,w,c
  9885  001060  0B03               	andlw	3
  9886  001062  6E19               	movwf	TFT_Flood@i^0,c
  9887  001064  EF3A  F008         	goto	l3354
  9888  001068                     l264:
  9889                           
  9890                           ;TFT.c: 166: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  9891  001068  9A80               	bcf	128,5,c	;volatile
  9892  00106A  F000               	nop		;# 
  9893  00106C  8A80               	bsf	128,5,c	;volatile
  9894  00106E  9A80               	bcf	128,5,c	;volatile
  9895  001070  F000               	nop		;# 
  9896  001072  8A80               	bsf	128,5,c	;volatile
  9897  001074                     l3354:
  9898  001074  0619               	decf	TFT_Flood@i^0,f,c
  9899  001076  2819               	incf	TFT_Flood@i^0,w,c
  9900  001078  A4D8               	btfss	status,2,c
  9901  00107A  EF41  F008         	goto	u2031
  9902  00107E  EF43  F008         	goto	u2030
  9903  001082                     u2031:
  9904  001082  EF34  F008         	goto	l264
  9905  001086                     u2030:
  9906  001086  EF92  F008         	goto	l266
  9907  00108A                     l268:
  9908                           
  9909                           ;TFT.c: 170: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9910  00108A  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9911  00108E  9A80               	bcf	128,5,c	;volatile
  9912  001090  F000               	nop		;# 
  9913  001092  8A80               	bsf	128,5,c	;volatile
  9914  001094  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9915  001098  9A80               	bcf	128,5,c	;volatile
  9916  00109A  F000               	nop		;# 
  9917  00109C  8A80               	bsf	128,5,c	;volatile
  9918                           
  9919                           ;TFT.c: 171: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9920  00109E  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9921  0010A2  9A80               	bcf	128,5,c	;volatile
  9922  0010A4  F000               	nop		;# 
  9923  0010A6  8A80               	bsf	128,5,c	;volatile
  9924  0010A8  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9925  0010AC  9A80               	bcf	128,5,c	;volatile
  9926  0010AE  F000               	nop		;# 
  9927  0010B0  8A80               	bsf	128,5,c	;volatile
  9928                           
  9929                           ;TFT.c: 172: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9930  0010B2  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9931  0010B6  9A80               	bcf	128,5,c	;volatile
  9932  0010B8  F000               	nop		;# 
  9933  0010BA  8A80               	bsf	128,5,c	;volatile
  9934  0010BC  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9935  0010C0  9A80               	bcf	128,5,c	;volatile
  9936  0010C2  F000               	nop		;# 
  9937  0010C4  8A80               	bsf	128,5,c	;volatile
  9938                           
  9939                           ;TFT.c: 173: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9940  0010C6  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9941  0010CA  9A80               	bcf	128,5,c	;volatile
  9942  0010CC  F000               	nop		;# 
  9943  0010CE  8A80               	bsf	128,5,c	;volatile
  9944  0010D0  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9945  0010D4  9A80               	bcf	128,5,c	;volatile
  9946  0010D6  F000               	nop		;# 
  9947  0010D8  8A80               	bsf	128,5,c	;volatile
  9948  0010DA                     l3356:
  9949  0010DA  0617               	decf	TFT_Flood@blocks^0,f,c
  9950  0010DC  A0D8               	btfss	status,0,c
  9951  0010DE  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  9952  0010E0  2817               	incf	TFT_Flood@blocks^0,w,c
  9953  0010E2  E106               	bnz	u2041
  9954  0010E4  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  9955  0010E6  A4D8               	btfss	status,2,c
  9956  0010E8  EF78  F008         	goto	u2041
  9957  0010EC  EF7A  F008         	goto	u2040
  9958  0010F0                     u2041:
  9959  0010F0  EF45  F008         	goto	l268
  9960  0010F4                     u2040:
  9961  0010F4                     
  9962                           ;TFT.c: 174: };TFT.c: 175: for(i = (uint8_t)len & 3; i--; ) {
  9963  0010F4  500F               	movf	TFT_Flood@len^0,w,c
  9964  0010F6  0B03               	andlw	3
  9965  0010F8  6E19               	movwf	TFT_Flood@i^0,c
  9966  0010FA  EF89  F008         	goto	l3360
  9967  0010FE                     l271:
  9968                           
  9969                           ;TFT.c: 176: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  9970  0010FE  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  9971  001102  9A80               	bcf	128,5,c	;volatile
  9972  001104  F000               	nop		;# 
  9973  001106  8A80               	bsf	128,5,c	;volatile
  9974  001108  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  9975  00110C  9A80               	bcf	128,5,c	;volatile
  9976  00110E  F000               	nop		;# 
  9977  001110  8A80               	bsf	128,5,c	;volatile
  9978  001112                     l3360:
  9979  001112  0619               	decf	TFT_Flood@i^0,f,c
  9980  001114  2819               	incf	TFT_Flood@i^0,w,c
  9981  001116  A4D8               	btfss	status,2,c
  9982  001118  EF90  F008         	goto	u2051
  9983  00111C  EF92  F008         	goto	u2050
  9984  001120                     u2051:
  9985  001120  EF7F  F008         	goto	l271
  9986  001124                     u2050:
  9987  001124                     l266:
  9988                           
  9989                           ;TFT.c: 177: };TFT.c: 178: };TFT.c: 179: PORTCbits.RC0 = 1;;
  9990  001124  8082               	bsf	130,0,c	;volatile
  9991  001126  0012               	return		;funcret
  9992  001128                     __end_of_TFT_Flood:
  9993                           	opt callstack 0
  9994                           
  9995 ;; *************** function _TFT_WriteRegister *****************
  9996 ;; Defined at:
  9997 ;;		line 12 in file "TFT.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;  reg             2    4[COMRAM] unsigned int 
 10000 ;;  data            2    6[COMRAM] unsigned int 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  l               1   11[COMRAM] unsigned char 
 10003 ;;  h               1   10[COMRAM] unsigned char 
 10004 ;;  l               1    9[COMRAM] unsigned char 
 10005 ;;  h               1    8[COMRAM] unsigned char 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      void 
 10008 ;; Registers used:
 10009 ;;		wreg, status,2
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10015 ;;      Params:         4       0       0       0       0       0       0       0       0
 10016 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10017 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10018 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10019 ;;Total ram usage:        8 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:    2
 10022 ;; This function calls:
 10023 ;;		Nothing
 10024 ;; This function is called by:
 10025 ;;		_TFT_SetAddrWindow
 10026 ;;		_TFT_Init
 10027 ;;		_TFT_DrawPixel
 10028 ;;		_TFT_Flood
 10029 ;;		_TFT_FillScreen
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           	psect	text44
 10034  002882                     __ptext44:
 10035                           	opt callstack 0
 10036  002882                     _TFT_WriteRegister:
 10037                           	opt callstack 23
 10038  002882                     
 10039                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
 10040  002882  9082               	bcf	130,0,c	;volatile
 10041  002884  F000               	nop		;# 
 10042                           
 10043                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
 10044  002886  9282               	bcf	130,1,c	;volatile
 10045  002888  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
 10046  00288A  6E09               	movwf	TFT_WriteRegister@h^0,c
 10047  00288C  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
 10048  002890  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
 10049  002894  9A80               	bcf	128,5,c	;volatile
 10050  002896  F000               	nop		;# 
 10051  002898  8A80               	bsf	128,5,c	;volatile
 10052  00289A  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
 10053  00289E  9A80               	bcf	128,5,c	;volatile
 10054  0028A0  F000               	nop		;# 
 10055  0028A2  8A80               	bsf	128,5,c	;volatile
 10056  0028A4                     
 10057                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
 10058  0028A4  8282               	bsf	130,1,c	;volatile
 10059  0028A6  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
 10060  0028A8  6E0B               	movwf	TFT_WriteRegister@h_745^0,c
 10061  0028AA  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_746
 10062  0028AE  C00B  FF81         	movff	TFT_WriteRegister@h_745,3969	;volatile
 10063  0028B2  9A80               	bcf	128,5,c	;volatile
 10064  0028B4  F000               	nop		;# 
 10065  0028B6  8A80               	bsf	128,5,c	;volatile
 10066  0028B8  C00C  FF81         	movff	TFT_WriteRegister@l_746,3969	;volatile
 10067  0028BC  9A80               	bcf	128,5,c	;volatile
 10068  0028BE  F000               	nop		;# 
 10069  0028C0  8A80               	bsf	128,5,c	;volatile
 10070  0028C2                     
 10071                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
 10072  0028C2  8082               	bsf	130,0,c	;volatile
 10073  0028C4  0012               	return		;funcret
 10074  0028C6                     __end_of_TFT_WriteRegister:
 10075                           	opt callstack 0
 10076                           
 10077 ;; *************** function _EUSART_BaudRateSet *****************
 10078 ;; Defined at:
 10079 ;;		line 41 in file "EUSART.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;  baudRate        4   17[COMRAM] const unsigned long 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  tmp             4   25[COMRAM] unsigned long 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      void 
 10086 ;; Registers used:
 10087 ;;		wreg, status,2, status,0, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10093 ;;      Params:         4       0       0       0       0       0       0       0       0
 10094 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10095 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10096 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10097 ;;Total ram usage:       12 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:    3
 10100 ;; This function calls:
 10101 ;;		___lldiv
 10102 ;; This function is called by:
 10103 ;;		_A6_BaudRateSet
 10104 ;;		_A6_BaudRateAutoDetect
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           	psect	text45
 10109  00208C                     __ptext45:
 10110                           	opt callstack 0
 10111  00208C                     _EUSART_BaudRateSet:
 10112                           	opt callstack 25
 10113  00208C                     
 10114                           ;EUSART.c: 42: TXSTAbits.SYNC = 0;
 10115  00208C  98AC               	bcf	172,4,c	;volatile
 10116                           
 10117                           ;EUSART.c: 43: TXSTAbits.BRGH = 1;
 10118  00208E  84AC               	bsf	172,2,c	;volatile
 10119                           
 10120                           ;EUSART.c: 44: BAUDCONbits.BRG16 = 1;
 10121  002090  86B8               	bsf	184,3,c	;volatile
 10122  002092                     
 10123                           ;EUSART.c: 46: uint32_t tmp = (48000000 / baudRate);
 10124  002092  0E00               	movlw	0
 10125  002094  6E05               	movwf	___lldiv@dividend^0,c
 10126  002096  0E6C               	movlw	108
 10127  002098  6E06               	movwf	(___lldiv@dividend+1)^0,c
 10128  00209A  0EDC               	movlw	220
 10129  00209C  6E07               	movwf	(___lldiv@dividend+2)^0,c
 10130  00209E  0E02               	movlw	2
 10131  0020A0  6E08               	movwf	(___lldiv@dividend+3)^0,c
 10132  0020A2  C012  F009         	movff	EUSART_BaudRateSet@baudRate,___lldiv@divisor
 10133  0020A6  C013  F00A         	movff	EUSART_BaudRateSet@baudRate+1,___lldiv@divisor+1
 10134  0020AA  C014  F00B         	movff	EUSART_BaudRateSet@baudRate+2,___lldiv@divisor+2
 10135  0020AE  C015  F00C         	movff	EUSART_BaudRateSet@baudRate+3,___lldiv@divisor+3
 10136  0020B2  EC9A  F00E         	call	___lldiv	;wreg free
 10137  0020B6  C005  F01A         	movff	?___lldiv,EUSART_BaudRateSet@tmp
 10138  0020BA  C006  F01B         	movff	?___lldiv+1,EUSART_BaudRateSet@tmp+1
 10139  0020BE  C007  F01C         	movff	?___lldiv+2,EUSART_BaudRateSet@tmp+2
 10140  0020C2  C008  F01D         	movff	?___lldiv+3,EUSART_BaudRateSet@tmp+3
 10141  0020C6                     
 10142                           ;EUSART.c: 47: tmp = tmp / 4;
 10143  0020C6  C01A  F016         	movff	EUSART_BaudRateSet@tmp,??_EUSART_BaudRateSet
 10144  0020CA  C01B  F017         	movff	EUSART_BaudRateSet@tmp+1,??_EUSART_BaudRateSet+1
 10145  0020CE  C01C  F018         	movff	EUSART_BaudRateSet@tmp+2,??_EUSART_BaudRateSet+2
 10146  0020D2  C01D  F019         	movff	EUSART_BaudRateSet@tmp+3,??_EUSART_BaudRateSet+3
 10147  0020D6  0E03               	movlw	3
 10148  0020D8  EF73  F010         	goto	u3260
 10149  0020DC                     u3265:
 10150  0020DC  90D8               	bcf	status,0,c
 10151  0020DE  3219               	rrcf	(??_EUSART_BaudRateSet+3)^0,f,c
 10152  0020E0  3218               	rrcf	(??_EUSART_BaudRateSet+2)^0,f,c
 10153  0020E2  3217               	rrcf	(??_EUSART_BaudRateSet+1)^0,f,c
 10154  0020E4  3216               	rrcf	??_EUSART_BaudRateSet^0,f,c
 10155  0020E6                     u3260:
 10156  0020E6  2EE8               	decfsz	wreg,f,c
 10157  0020E8  EF6E  F010         	goto	u3265
 10158  0020EC  C016  F01A         	movff	??_EUSART_BaudRateSet,EUSART_BaudRateSet@tmp
 10159  0020F0  C017  F01B         	movff	??_EUSART_BaudRateSet+1,EUSART_BaudRateSet@tmp+1
 10160  0020F4  C018  F01C         	movff	??_EUSART_BaudRateSet+2,EUSART_BaudRateSet@tmp+2
 10161  0020F8  C019  F01D         	movff	??_EUSART_BaudRateSet+3,EUSART_BaudRateSet@tmp+3
 10162  0020FC                     
 10163                           ;EUSART.c: 48: tmp--;
 10164  0020FC  061A               	decf	EUSART_BaudRateSet@tmp^0,f,c
 10165  0020FE  0E00               	movlw	0
 10166  002100  5A1B               	subwfb	(EUSART_BaudRateSet@tmp+1)^0,f,c
 10167  002102  5A1C               	subwfb	(EUSART_BaudRateSet@tmp+2)^0,f,c
 10168  002104  5A1D               	subwfb	(EUSART_BaudRateSet@tmp+3)^0,f,c
 10169  002106                     
 10170                           ;EUSART.c: 50: SPBRG = (uint8_t) tmp;
 10171  002106  C01A  FFAF         	movff	EUSART_BaudRateSet@tmp,4015	;volatile
 10172  00210A                     
 10173                           ;EUSART.c: 51: SPBRGH = (uint8_t) (tmp >> 8);
 10174  00210A  C01B  FFB0         	movff	EUSART_BaudRateSet@tmp+1,4016	;volatile
 10175  00210E  0012               	return		;funcret
 10176  002110                     __end_of_EUSART_BaudRateSet:
 10177                           	opt callstack 0
 10178                           
 10179 ;; *************** function ___lldiv *****************
 10180 ;; Defined at:
 10181 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;  dividend        4    4[COMRAM] unsigned long 
 10184 ;;  divisor         4    8[COMRAM] unsigned long 
 10185 ;; Auto vars:     Size  Location     Type
 10186 ;;  quotient        4   12[COMRAM] unsigned long 
 10187 ;;  counter         1   16[COMRAM] unsigned char 
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  4    4[COMRAM] unsigned long 
 10190 ;; Registers used:
 10191 ;;		wreg, status,2, status,0
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10197 ;;      Params:         8       0       0       0       0       0       0       0       0
 10198 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10199 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10200 ;;      Totals:        13       0       0       0       0       0       0       0       0
 10201 ;;Total ram usage:       13 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; Hardware stack levels required when called:    2
 10204 ;; This function calls:
 10205 ;;		Nothing
 10206 ;; This function is called by:
 10207 ;;		_EUSART_BaudRateSet
 10208 ;;		_sprintf
 10209 ;;		_Ecg_ProcessHeartRate
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           	psect	text46
 10214  001D34                     __ptext46:
 10215                           	opt callstack 0
 10216  001D34                     ___lldiv:
 10217                           	opt callstack 26
 10218  001D34  0E00               	movlw	0
 10219  001D36  6E0D               	movwf	___lldiv@quotient^0,c
 10220  001D38  0E00               	movlw	0
 10221  001D3A  6E0E               	movwf	(___lldiv@quotient+1)^0,c
 10222  001D3C  0E00               	movlw	0
 10223  001D3E  6E0F               	movwf	(___lldiv@quotient+2)^0,c
 10224  001D40  0E00               	movlw	0
 10225  001D42  6E10               	movwf	(___lldiv@quotient+3)^0,c
 10226  001D44  5009               	movf	___lldiv@divisor^0,w,c
 10227  001D46  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
 10228  001D48  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
 10229  001D4A  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
 10230  001D4C  B4D8               	btfsc	status,2,c
 10231  001D4E  EFAB  F00E         	goto	u2731
 10232  001D52  EFAD  F00E         	goto	u2730
 10233  001D56                     u2731:
 10234  001D56  EFE3  F00E         	goto	l730
 10235  001D5A                     u2730:
 10236  001D5A  0E01               	movlw	1
 10237  001D5C  6E11               	movwf	___lldiv@counter^0,c
 10238  001D5E  EFB7  F00E         	goto	l3736
 10239  001D62                     l3734:
 10240  001D62  90D8               	bcf	status,0,c
 10241  001D64  3609               	rlcf	___lldiv@divisor^0,f,c
 10242  001D66  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
 10243  001D68  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
 10244  001D6A  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
 10245  001D6C  2A11               	incf	___lldiv@counter^0,f,c
 10246  001D6E                     l3736:
 10247  001D6E  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
 10248  001D70  EFBC  F00E         	goto	u2741
 10249  001D74  EFBE  F00E         	goto	u2740
 10250  001D78                     u2741:
 10251  001D78  EFB1  F00E         	goto	l3734
 10252  001D7C                     u2740:
 10253  001D7C                     l3738:
 10254  001D7C  90D8               	bcf	status,0,c
 10255  001D7E  360D               	rlcf	___lldiv@quotient^0,f,c
 10256  001D80  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
 10257  001D82  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
 10258  001D84  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
 10259  001D86  5009               	movf	___lldiv@divisor^0,w,c
 10260  001D88  5C05               	subwf	___lldiv@dividend^0,w,c
 10261  001D8A  500A               	movf	(___lldiv@divisor+1)^0,w,c
 10262  001D8C  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
 10263  001D8E  500B               	movf	(___lldiv@divisor+2)^0,w,c
 10264  001D90  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
 10265  001D92  500C               	movf	(___lldiv@divisor+3)^0,w,c
 10266  001D94  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
 10267  001D96  A0D8               	btfss	status,0,c
 10268  001D98  EFD0  F00E         	goto	u2751
 10269  001D9C  EFD2  F00E         	goto	u2750
 10270  001DA0                     u2751:
 10271  001DA0  EFDB  F00E         	goto	l3746
 10272  001DA4                     u2750:
 10273  001DA4  5009               	movf	___lldiv@divisor^0,w,c
 10274  001DA6  5E05               	subwf	___lldiv@dividend^0,f,c
 10275  001DA8  500A               	movf	(___lldiv@divisor+1)^0,w,c
 10276  001DAA  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
 10277  001DAC  500B               	movf	(___lldiv@divisor+2)^0,w,c
 10278  001DAE  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
 10279  001DB0  500C               	movf	(___lldiv@divisor+3)^0,w,c
 10280  001DB2  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
 10281  001DB4  800D               	bsf	___lldiv@quotient^0,0,c
 10282  001DB6                     l3746:
 10283  001DB6  90D8               	bcf	status,0,c
 10284  001DB8  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
 10285  001DBA  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
 10286  001DBC  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
 10287  001DBE  3209               	rrcf	___lldiv@divisor^0,f,c
 10288  001DC0  2E11               	decfsz	___lldiv@counter^0,f,c
 10289  001DC2  EFBE  F00E         	goto	l3738
 10290  001DC6                     l730:
 10291  001DC6  C00D  F005         	movff	___lldiv@quotient,?___lldiv
 10292  001DCA  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
 10293  001DCE  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
 10294  001DD2  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
 10295  001DD6  0012               	return		;funcret
 10296  001DD8                     __end_of___lldiv:
 10297                           	opt callstack 0
 10298                           
 10299 ;; *************** function _A6_IsAlive *****************
 10300 ;; Defined at:
 10301 ;;		line 17 in file "A6Lib.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;		None
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;  response       32   30[COMRAM] unsigned char [32]
 10306 ;; Return value:  Size  Location     Type
 10307 ;;                  1    wreg      unsigned char 
 10308 ;; Registers used:
 10309 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10310 ;; Tracked objects:
 10311 ;;		On entry : 0/0
 10312 ;;		On exit  : 0/0
 10313 ;;		Unchanged: 0/0
 10314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10315 ;;      Params:         0       0       0       0       0       0       0       0       0
 10316 ;;      Locals:        32       0       0       0       0       0       0       0       0
 10317 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10318 ;;      Totals:        32       0       0       0       0       0       0       0       0
 10319 ;;Total ram usage:       32 bytes
 10320 ;; Hardware stack levels used:    1
 10321 ;; Hardware stack levels required when called:    6
 10322 ;; This function calls:
 10323 ;;		_A6_Command
 10324 ;;		_strcmp
 10325 ;; This function is called by:
 10326 ;;		_loop
 10327 ;;		_A6_BaudRateSet
 10328 ;;		_A6_BaudRateAutoDetect
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text47
 10333  0026BC                     __ptext47:
 10334                           	opt callstack 0
 10335  0026BC                     _A6_IsAlive:
 10336                           	opt callstack 23
 10337  0026BC                     
 10338                           ;A6Lib.c: 18: char response[32];;A6Lib.c: 19: A6_Command("AT\r", 0, response, 32);
 10339  0026BC  0EEE               	movlw	low STR_23
 10340  0026BE  6E18               	movwf	A6_Command@command^0,c
 10341  0026C0  0E5F               	movlw	high STR_23
 10342  0026C2  6E19               	movwf	(A6_Command@command+1)^0,c
 10343  0026C4  0E00               	movlw	0
 10344  0026C6  6E1B               	movwf	(A6_Command@timeout+1)^0,c
 10345  0026C8  0E00               	movlw	0
 10346  0026CA  6E1A               	movwf	A6_Command@timeout^0,c
 10347  0026CC  0E1F               	movlw	low A6_IsAlive@response
 10348  0026CE  6E1C               	movwf	A6_Command@response^0,c
 10349  0026D0  0E00               	movlw	high A6_IsAlive@response
 10350  0026D2  6E1D               	movwf	(A6_Command@response+1)^0,c
 10351  0026D4  0E20               	movlw	32
 10352  0026D6  6E1E               	movwf	A6_Command@responseLen^0,c
 10353  0026D8  ECDD  F014         	call	_A6_Command	;wreg free
 10354  0026DC                     
 10355                           ;A6Lib.c: 20: if(strcmp(response, "OK") == 0) {
 10356  0026DC  0E1F               	movlw	low A6_IsAlive@response
 10357  0026DE  6E05               	movwf	strcmp@s1^0,c
 10358  0026E0  0E00               	movlw	high A6_IsAlive@response
 10359  0026E2  6E06               	movwf	(strcmp@s1+1)^0,c
 10360  0026E4  0EFA               	movlw	low STR_24
 10361  0026E6  6E07               	movwf	strcmp@s2^0,c
 10362  0026E8  0E5F               	movlw	high STR_24
 10363  0026EA  6E08               	movwf	(strcmp@s2+1)^0,c
 10364  0026EC  EC2E  F013         	call	_strcmp	;wreg free
 10365  0026F0  5005               	movf	?_strcmp^0,w,c
 10366  0026F2  1006               	iorwf	(?_strcmp+1)^0,w,c
 10367  0026F4  A4D8               	btfss	status,2,c
 10368  0026F6  EF7F  F013         	goto	u3141
 10369  0026FA  EF81  F013         	goto	u3140
 10370  0026FE                     u3141:
 10371  0026FE  EF84  F013         	goto	l4000
 10372  002702                     u3140:
 10373  002702                     
 10374                           ;A6Lib.c: 21: return 1;
 10375  002702  0E01               	movlw	1
 10376  002704  EF85  F013         	goto	l503
 10377  002708                     l4000:
 10378                           
 10379                           ;A6Lib.c: 22: };A6Lib.c: 23: return 0;
 10380  002708  0E00               	movlw	0
 10381  00270A                     l503:
 10382  00270A  0012               	return		;funcret
 10383  00270C                     __end_of_A6_IsAlive:
 10384                           	opt callstack 0
 10385                           
 10386 ;; *************** function _strcmp *****************
 10387 ;; Defined at:
 10388 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;  s1              2    4[COMRAM] PTR const unsigned char 
 10391 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_IsAlive@response(32), 
 10392 ;;  s2              2    6[COMRAM] PTR const unsigned char 
 10393 ;;		 -> STR_32(3), STR_29(3), STR_24(3), 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;  r               1   10[COMRAM] char 
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  2    4[COMRAM] int 
 10398 ;; Registers used:
 10399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10400 ;; Tracked objects:
 10401 ;;		On entry : 0/0
 10402 ;;		On exit  : 0/0
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10405 ;;      Params:         4       0       0       0       0       0       0       0       0
 10406 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10407 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10408 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10409 ;;Total ram usage:        7 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    2
 10412 ;; This function calls:
 10413 ;;		Nothing
 10414 ;; This function is called by:
 10415 ;;		_A6_IsAlive
 10416 ;;		_A6_BaudRateSet
 10417 ;;		_A6_Process_Random_Comms
 10418 ;; This function uses a non-reentrant model
 10419 ;;
 10420                           
 10421                           	psect	text48
 10422  00265C                     __ptext48:
 10423                           	opt callstack 0
 10424  00265C                     _strcmp:
 10425                           	opt callstack 26
 10426  00265C  EF34  F013         	goto	l3608
 10427  002660                     l3606:
 10428  002660  4A05               	infsnz	strcmp@s1^0,f,c
 10429  002662  2A06               	incf	(strcmp@s1+1)^0,f,c
 10430  002664  4A07               	infsnz	strcmp@s2^0,f,c
 10431  002666  2A08               	incf	(strcmp@s2+1)^0,f,c
 10432  002668                     l3608:
 10433  002668  C007  FFF6         	movff	strcmp@s2,tblptrl
 10434  00266C  C008  FFF7         	movff	strcmp@s2+1,tblptrh
 10435  002670                     	if	0	;tblptru may be non-zero
 10436  002670                     	endif
 10437  002670                     	if	0	;tblptru may be non-zero
 10438  002670                     	endif
 10439  002670  0008               	tblrd		*
 10440  002672  CFF5 F009          	movff	tablat,??_strcmp
 10441  002676  C005  FFD9         	movff	strcmp@s1,fsr2l
 10442  00267A  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 10443  00267E  50DF               	movf	indf2,w,c
 10444  002680  6E0A               	movwf	(??_strcmp+1)^0,c
 10445  002682  5009               	movf	??_strcmp^0,w,c
 10446  002684  5C0A               	subwf	(??_strcmp+1)^0,w,c
 10447  002686  6E0B               	movwf	strcmp@r^0,c
 10448  002688  500B               	movf	strcmp@r^0,w,c
 10449  00268A  A4D8               	btfss	status,2,c
 10450  00268C  EF4A  F013         	goto	u2511
 10451  002690  EF4C  F013         	goto	u2510
 10452  002694                     u2511:
 10453  002694  EF58  F013         	goto	l3612
 10454  002698                     u2510:
 10455  002698  C005  FFD9         	movff	strcmp@s1,fsr2l
 10456  00269C  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 10457  0026A0  50DF               	movf	indf2,w,c
 10458  0026A2  A4D8               	btfss	status,2,c
 10459  0026A4  EF56  F013         	goto	u2521
 10460  0026A8  EF58  F013         	goto	u2520
 10461  0026AC                     u2521:
 10462  0026AC  EF30  F013         	goto	l3606
 10463  0026B0                     u2520:
 10464  0026B0                     l3612:
 10465  0026B0  500B               	movf	strcmp@r^0,w,c
 10466  0026B2  6E05               	movwf	?_strcmp^0,c
 10467  0026B4  6A06               	clrf	(?_strcmp+1)^0,c
 10468  0026B6  BE05               	btfsc	?_strcmp^0,7,c
 10469  0026B8  0606               	decf	(?_strcmp+1)^0,f,c
 10470  0026BA  0012               	return		;funcret
 10471  0026BC                     __end_of_strcmp:
 10472                           	opt callstack 0
 10473                           
 10474 ;; *************** function _A6_Command *****************
 10475 ;; Defined at:
 10476 ;;		line 91 in file "A6Lib.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  command         2   23[COMRAM] PTR const unsigned char 
 10479 ;;		 -> STR_37(8), STR_33(10), A6_BaudRateSet@request(20), STR_25(9), 
 10480 ;;		 -> STR_23(4), STR_9(10), 
 10481 ;;  timeout         2   25[COMRAM] int 
 10482 ;;  response        2   27[COMRAM] PTR unsigned char 
 10483 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@re
      +sponse(32), 
 10484 ;;		 -> A6_IsAlive@response(32), loop@response(32), 
 10485 ;;  responseLen     1   29[COMRAM] unsigned char 
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1    wreg      void 
 10490 ;; Registers used:
 10491 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10497 ;;      Params:         7       0       0       0       0       0       0       0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10499 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10500 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10501 ;;Total ram usage:        7 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:    5
 10504 ;; This function calls:
 10505 ;;		_A6_ReadLine
 10506 ;;		_EUSART_RX_Flush
 10507 ;;		_EUSART_TX_String
 10508 ;;		_strlen
 10509 ;; This function is called by:
 10510 ;;		_loop
 10511 ;;		_A6_IsAlive
 10512 ;;		_A6_BaudRateGet
 10513 ;;		_A6_BaudRateSet
 10514 ;;		_A6_NetworkGetStatus
 10515 ;;		_A6_NetworkGetRSSI
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           	psect	text49
 10520  0029BA                     __ptext49:
 10521                           	opt callstack 0
 10522  0029BA                     _A6_Command:
 10523                           	opt callstack 23
 10524  0029BA                     
 10525                           ;A6Lib.c: 92: EUSART_RX_Flush();
 10526  0029BA  ECD2  F015         	call	_EUSART_RX_Flush	;wreg free
 10527  0029BE                     
 10528                           ;A6Lib.c: 93: EUSART_TX_String(command, strlen(command));
 10529  0029BE  C018  F009         	movff	A6_Command@command,EUSART_TX_String@str
 10530  0029C2  C019  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
 10531  0029C6  C018  F005         	movff	A6_Command@command,strlen@s
 10532  0029CA  C019  F006         	movff	A6_Command@command+1,strlen@s+1
 10533  0029CE  ECAD  F013         	call	_strlen	;wreg free
 10534  0029D2  5005               	movf	?_strlen^0,w,c
 10535  0029D4  6E0B               	movwf	EUSART_TX_String@len^0,c
 10536  0029D6  EC63  F014         	call	_EUSART_TX_String	;wreg free
 10537  0029DA                     
 10538                           ;A6Lib.c: 94: A6_ReadLine(response, responseLen, timeout);
 10539  0029DA  C01C  F011         	movff	A6_Command@response,A6_ReadLine@response
 10540  0029DE  C01D  F012         	movff	A6_Command@response+1,A6_ReadLine@response+1
 10541  0029E2  C01E  F013         	movff	A6_Command@responseLen,A6_ReadLine@responseLen
 10542  0029E6  C01A  F014         	movff	A6_Command@timeout,A6_ReadLine@timeout
 10543  0029EA  C01B  F015         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
 10544  0029EE  EC0D  F00D         	call	_A6_ReadLine	;wreg free
 10545  0029F2  0012               	return		;funcret
 10546  0029F4                     __end_of_A6_Command:
 10547                           	opt callstack 0
 10548                           
 10549 ;; *************** function _strlen *****************
 10550 ;; Defined at:
 10551 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;  s               2    4[COMRAM] PTR const unsigned char 
 10554 ;;		 -> STR_38(7), STR_37(8), STR_34(8), STR_33(10), 
 10555 ;;		 -> A6_BaudRateSet@request(20), STR_26(7), STR_25(9), STR_23(4), 
 10556 ;;		 -> STR_9(10), 
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;  cp              2    6[COMRAM] PTR const unsigned char 
 10559 ;;		 -> STR_38(7), STR_37(8), STR_34(8), STR_33(10), 
 10560 ;;		 -> A6_BaudRateSet@request(20), STR_26(7), STR_25(9), STR_23(4), 
 10561 ;;		 -> STR_9(10), 
 10562 ;; Return value:  Size  Location     Type
 10563 ;;                  2    4[COMRAM] unsigned int 
 10564 ;; Registers used:
 10565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10566 ;; Tracked objects:
 10567 ;;		On entry : 0/0
 10568 ;;		On exit  : 0/0
 10569 ;;		Unchanged: 0/0
 10570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10571 ;;      Params:         2       0       0       0       0       0       0       0       0
 10572 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10574 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10575 ;;Total ram usage:        4 bytes
 10576 ;; Hardware stack levels used:    1
 10577 ;; Hardware stack levels required when called:    2
 10578 ;; This function calls:
 10579 ;;		Nothing
 10580 ;; This function is called by:
 10581 ;;		_A6_Command
 10582 ;;		_strstr
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text50
 10587  00275A                     __ptext50:
 10588                           	opt callstack 0
 10589  00275A                     _strlen:
 10590                           	opt callstack 25
 10591  00275A  C005  F007         	movff	strlen@s,strlen@cp
 10592  00275E  C006  F008         	movff	strlen@s+1,strlen@cp+1
 10593  002762  EFB5  F013         	goto	l3478
 10594  002766                     l3476:
 10595  002766  4A07               	infsnz	strlen@cp^0,f,c
 10596  002768  2A08               	incf	(strlen@cp+1)^0,f,c
 10597  00276A                     l3478:
 10598  00276A  C007  FFF6         	movff	strlen@cp,tblptrl
 10599  00276E  C008  FFF7         	movff	strlen@cp+1,tblptrh
 10600  002772  6AF8               	clrf	tblptru,c
 10601  002774  0E07               	movlw	(high __ramtop+-1)
 10602  002776  64F7               	cpfsgt	tblptrh,c
 10603  002778  D003               	bra	u2237
 10604  00277A  0008               	tblrd		*
 10605  00277C  50F5               	movf	tablat,w,c
 10606  00277E  D005               	bra	u2230
 10607  002780                     u2237:
 10608  002780  CFF6 FFE9          	movff	tblptrl,fsr0l
 10609  002784  CFF7 FFEA          	movff	tblptrh,fsr0h
 10610  002788  50EF               	movf	indf0,w,c
 10611  00278A                     u2230:
 10612  00278A  0900               	iorlw	0
 10613  00278C  A4D8               	btfss	status,2,c
 10614  00278E  EFCB  F013         	goto	u2241
 10615  002792  EFCD  F013         	goto	u2240
 10616  002796                     u2241:
 10617  002796  EFB3  F013         	goto	l3476
 10618  00279A                     u2240:
 10619  00279A  5005               	movf	strlen@s^0,w,c
 10620  00279C  5C07               	subwf	strlen@cp^0,w,c
 10621  00279E  6E05               	movwf	?_strlen^0,c
 10622  0027A0  5006               	movf	(strlen@s+1)^0,w,c
 10623  0027A2  5808               	subwfb	(strlen@cp+1)^0,w,c
 10624  0027A4  6E06               	movwf	(?_strlen+1)^0,c
 10625  0027A6  0012               	return		;funcret
 10626  0027A8                     __end_of_strlen:
 10627                           	opt callstack 0
 10628                           
 10629 ;; *************** function _EUSART_TX_String *****************
 10630 ;; Defined at:
 10631 ;;		line 62 in file "EUSART.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  str             2    8[COMRAM] PTR const unsigned char 
 10634 ;;		 -> STR_37(8), STR_33(10), A6_BaudRateSet@request(20), STR_25(9), 
 10635 ;;		 -> STR_23(4), STR_9(10), 
 10636 ;;  len             1   10[COMRAM] unsigned char 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;		None
 10639 ;; Return value:  Size  Location     Type
 10640 ;;                  1    wreg      void 
 10641 ;; Registers used:
 10642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10643 ;; Tracked objects:
 10644 ;;		On entry : 0/0
 10645 ;;		On exit  : 0/0
 10646 ;;		Unchanged: 0/0
 10647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10648 ;;      Params:         3       0       0       0       0       0       0       0       0
 10649 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10650 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10651 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10652 ;;Total ram usage:        3 bytes
 10653 ;; Hardware stack levels used:    1
 10654 ;; Hardware stack levels required when called:    3
 10655 ;; This function calls:
 10656 ;;		_EUSART_TX_Char
 10657 ;; This function is called by:
 10658 ;;		_A6_Command
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text51
 10663  0028C6                     __ptext51:
 10664                           	opt callstack 0
 10665  0028C6                     _EUSART_TX_String:
 10666                           	opt callstack 24
 10667  0028C6                     
 10668                           ;EUSART.c: 63: while(len--) {
 10669  0028C6  EF79  F014         	goto	l3490
 10670  0028CA                     l3486:
 10671                           
 10672                           ;EUSART.c: 64: EUSART_TX_Char(*str++);
 10673  0028CA  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
 10674  0028CE  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
 10675  0028D2  6AF8               	clrf	tblptru,c
 10676  0028D4  0E07               	movlw	(high __ramtop+-1)
 10677  0028D6  64F7               	cpfsgt	tblptrh,c
 10678  0028D8  D003               	bra	u2257
 10679  0028DA  0008               	tblrd		*
 10680  0028DC  50F5               	movf	tablat,w,c
 10681  0028DE  D005               	bra	u2250
 10682  0028E0                     u2257:
 10683  0028E0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10684  0028E4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10685  0028E8  50EF               	movf	indf0,w,c
 10686  0028EA                     u2250:
 10687  0028EA  ECC3  F015         	call	_EUSART_TX_Char
 10688  0028EE  4A09               	infsnz	EUSART_TX_String@str^0,f,c
 10689  0028F0  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
 10690  0028F2                     l3490:
 10691  0028F2  060B               	decf	EUSART_TX_String@len^0,f,c
 10692  0028F4  280B               	incf	EUSART_TX_String@len^0,w,c
 10693  0028F6  A4D8               	btfss	status,2,c
 10694  0028F8  EF80  F014         	goto	u2261
 10695  0028FC  EF82  F014         	goto	u2260
 10696  002900                     u2261:
 10697  002900  EF65  F014         	goto	l3486
 10698  002904                     u2260:
 10699  002904  0012               	return		;funcret
 10700  002906                     __end_of_EUSART_TX_String:
 10701                           	opt callstack 0
 10702                           
 10703 ;; *************** function _EUSART_TX_Char *****************
 10704 ;; Defined at:
 10705 ;;		line 56 in file "EUSART.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  c               1    wreg     unsigned char 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  c               1    4[COMRAM] unsigned char 
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      void 
 10712 ;; Registers used:
 10713 ;;		wreg
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10719 ;;      Params:         0       0       0       0       0       0       0       0       0
 10720 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10721 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10722 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10723 ;;Total ram usage:        1 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; Hardware stack levels required when called:    2
 10726 ;; This function calls:
 10727 ;;		Nothing
 10728 ;; This function is called by:
 10729 ;;		_EUSART_TX_String
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text52
 10734  002B86                     __ptext52:
 10735                           	opt callstack 0
 10736  002B86                     _EUSART_TX_Char:
 10737                           	opt callstack 24
 10738                           
 10739                           ;incstack = 0
 10740                           ;EUSART_TX_Char@c stored from wreg
 10741  002B86  6E05               	movwf	EUSART_TX_Char@c^0,c
 10742  002B88                     l609:
 10743  002B88  A89E               	btfss	3998,4,c	;volatile
 10744  002B8A  EFC9  F015         	goto	u2121
 10745  002B8E  EFCB  F015         	goto	u2120
 10746  002B92                     u2121:
 10747  002B92  EFC4  F015         	goto	l609
 10748  002B96                     u2120:
 10749  002B96                     
 10750                           ;EUSART.c: 58: TXREG = c;
 10751  002B96  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
 10752  002B9A  F000               	nop		;# 
 10753  002B9C  0012               	return		;funcret
 10754  002B9E                     __end_of_EUSART_TX_Char:
 10755                           	opt callstack 0
 10756                           
 10757 ;; *************** function _EUSART_RX_Flush *****************
 10758 ;; Defined at:
 10759 ;;		line 82 in file "EUSART.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;		None
 10762 ;; Auto vars:     Size  Location     Type
 10763 ;;		None
 10764 ;; Return value:  Size  Location     Type
 10765 ;;                  1    wreg      void 
 10766 ;; Registers used:
 10767 ;;		None
 10768 ;; Tracked objects:
 10769 ;;		On entry : 0/0
 10770 ;;		On exit  : 0/0
 10771 ;;		Unchanged: 0/0
 10772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10773 ;;      Params:         0       0       0       0       0       0       0       0       0
 10774 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10775 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10776 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10777 ;;Total ram usage:        0 bytes
 10778 ;; Hardware stack levels used:    1
 10779 ;; Hardware stack levels required when called:    2
 10780 ;; This function calls:
 10781 ;;		Nothing
 10782 ;; This function is called by:
 10783 ;;		_A6_Command
 10784 ;; This function uses a non-reentrant model
 10785 ;;
 10786                           
 10787                           	psect	text53
 10788  002BA4                     __ptext53:
 10789                           	opt callstack 0
 10790  002BA4                     _EUSART_RX_Flush:
 10791                           	opt callstack 25
 10792  002BA4                     
 10793                           ;EUSART.c: 83: EUSART_RX.iRead = EUSART_RX.iWrite;
 10794  002BA4  C201  F200         	movff	_EUSART_RX+1,_EUSART_RX
 10795  002BA8  0012               	return		;funcret
 10796  002BAA                     __end_of_EUSART_RX_Flush:
 10797                           	opt callstack 0
 10798                           
 10799 ;; *************** function _A6_ReadLine *****************
 10800 ;; Defined at:
 10801 ;;		line 98 in file "A6Lib.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;  response        2   16[COMRAM] PTR unsigned char 
 10804 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@response(32), A6_BaudR
      +ateSet@response(32), 
 10805 ;;		 -> A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 10806 ;;  responseLen     1   18[COMRAM] unsigned char 
 10807 ;;  timeout         2   19[COMRAM] int 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;  c               1   22[COMRAM] unsigned char 
 10810 ;;  iResponse       1   21[COMRAM] unsigned char 
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      unsigned char 
 10813 ;; Registers used:
 10814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10820 ;;      Params:         5       0       0       0       0       0       0       0       0
 10821 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10823 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10824 ;;Total ram usage:        7 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:    4
 10827 ;; This function calls:
 10828 ;;		_EUSART_BufferGetChar
 10829 ;;		_memset
 10830 ;; This function is called by:
 10831 ;;		_A6_Command
 10832 ;;		_A6_Process_Random_Comms
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           	psect	text54
 10837  001A1A                     __ptext54:
 10838                           	opt callstack 0
 10839  001A1A                     _A6_ReadLine:
 10840                           	opt callstack 24
 10841  001A1A                     
 10842                           ;A6Lib.c: 99: char c;;A6Lib.c: 100: memset(response, 0x00, responseLen);
 10843  001A1A  C011  F005         	movff	A6_ReadLine@response,memset@p1
 10844  001A1E  C012  F006         	movff	A6_ReadLine@response+1,memset@p1+1
 10845  001A22  0E00               	movlw	0
 10846  001A24  6E08               	movwf	(memset@c+1)^0,c
 10847  001A26  0E00               	movlw	0
 10848  001A28  6E07               	movwf	memset@c^0,c
 10849  001A2A  C013  F009         	movff	A6_ReadLine@responseLen,memset@n
 10850  001A2E  6A0A               	clrf	(memset@n+1)^0,c
 10851  001A30  ECFA  F014         	call	_memset	;wreg free
 10852  001A34                     l529:
 10853                           
 10854                           ;A6Lib.c: 104: c = EUSART_BufferGetChar(timeout);
 10855  001A34  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 10856  001A38  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 10857  001A3C  ECD4  F013         	call	_EUSART_BufferGetChar	;wreg free
 10858  001A40  6E17               	movwf	A6_ReadLine@c^0,c
 10859  001A42                     
 10860                           ;A6Lib.c: 105: if(c == (0)) return 0;
 10861  001A42  5017               	movf	A6_ReadLine@c^0,w,c
 10862  001A44  A4D8               	btfss	status,2,c
 10863  001A46  EF27  F00D         	goto	u2271
 10864  001A4A  EF29  F00D         	goto	u2270
 10865  001A4E                     u2271:
 10866  001A4E  EF2C  F00D         	goto	l3500
 10867  001A52                     u2270:
 10868  001A52  0E00               	movlw	0
 10869  001A54  EF77  F00D         	goto	l531
 10870  001A58                     l3500:
 10871                           
 10872                           ;A6Lib.c: 106: if((c != '\r') && (c != '\n')) break;
 10873  001A58  0E0D               	movlw	13
 10874  001A5A  1817               	xorwf	A6_ReadLine@c^0,w,c
 10875  001A5C  B4D8               	btfsc	status,2,c
 10876  001A5E  EF33  F00D         	goto	u2281
 10877  001A62  EF35  F00D         	goto	u2280
 10878  001A66                     u2281:
 10879  001A66  EF1A  F00D         	goto	l529
 10880  001A6A                     u2280:
 10881  001A6A  0E0A               	movlw	10
 10882  001A6C  1817               	xorwf	A6_ReadLine@c^0,w,c
 10883  001A6E  B4D8               	btfsc	status,2,c
 10884  001A70  EF3C  F00D         	goto	u2291
 10885  001A74  EF3E  F00D         	goto	u2290
 10886  001A78                     u2291:
 10887  001A78  EF1A  F00D         	goto	l529
 10888  001A7C                     u2290:
 10889  001A7C                     
 10890                           ;A6Lib.c: 107: };A6Lib.c: 110: uint8_t iResponse = 0;
 10891  001A7C  0E00               	movlw	0
 10892  001A7E  6E16               	movwf	A6_ReadLine@iResponse^0,c
 10893  001A80                     l3508:
 10894                           
 10895                           ;A6Lib.c: 112: if((c == '\r') || (c == (0))) break;
 10896  001A80  0E0D               	movlw	13
 10897  001A82  1817               	xorwf	A6_ReadLine@c^0,w,c
 10898  001A84  B4D8               	btfsc	status,2,c
 10899  001A86  EF47  F00D         	goto	u2301
 10900  001A8A  EF49  F00D         	goto	u2300
 10901  001A8E                     u2301:
 10902  001A8E  EF76  F00D         	goto	l3522
 10903  001A92                     u2300:
 10904  001A92  5017               	movf	A6_ReadLine@c^0,w,c
 10905  001A94  A4D8               	btfss	status,2,c
 10906  001A96  EF4F  F00D         	goto	u2311
 10907  001A9A  EF51  F00D         	goto	u2310
 10908  001A9E                     u2311:
 10909  001A9E  EF53  F00D         	goto	l3512
 10910  001AA2                     u2310:
 10911  001AA2  EF76  F00D         	goto	l3522
 10912  001AA6                     l3512:
 10913                           
 10914                           ;A6Lib.c: 113: response[iResponse] = c;
 10915  001AA6  5016               	movf	A6_ReadLine@iResponse^0,w,c
 10916  001AA8  2411               	addwf	A6_ReadLine@response^0,w,c
 10917  001AAA  6ED9               	movwf	fsr2l,c
 10918  001AAC  0E00               	movlw	0
 10919  001AAE  2012               	addwfc	(A6_ReadLine@response+1)^0,w,c
 10920  001AB0  6EDA               	movwf	fsr2h,c
 10921  001AB2  C017  FFDF         	movff	A6_ReadLine@c,indf2
 10922  001AB6                     
 10923                           ;A6Lib.c: 114: iResponse++;
 10924  001AB6  2A16               	incf	A6_ReadLine@iResponse^0,f,c
 10925  001AB8                     
 10926                           ;A6Lib.c: 115: if(iResponse == responseLen) break;
 10927  001AB8  5013               	movf	A6_ReadLine@responseLen^0,w,c
 10928  001ABA  1816               	xorwf	A6_ReadLine@iResponse^0,w,c
 10929  001ABC  A4D8               	btfss	status,2,c
 10930  001ABE  EF63  F00D         	goto	u2321
 10931  001AC2  EF65  F00D         	goto	u2320
 10932  001AC6                     u2321:
 10933  001AC6  EF67  F00D         	goto	l3520
 10934  001ACA                     u2320:
 10935  001ACA  EF76  F00D         	goto	l3522
 10936  001ACE                     l3520:
 10937                           
 10938                           ;A6Lib.c: 116: } while(c = EUSART_BufferGetChar(timeout));
 10939  001ACE  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 10940  001AD2  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 10941  001AD6  ECD4  F013         	call	_EUSART_BufferGetChar	;wreg free
 10942  001ADA  6E17               	movwf	A6_ReadLine@c^0,c
 10943  001ADC  5017               	movf	A6_ReadLine@c^0,w,c
 10944  001ADE  A4D8               	btfss	status,2,c
 10945  001AE0  EF74  F00D         	goto	u2331
 10946  001AE4  EF76  F00D         	goto	u2330
 10947  001AE8                     u2331:
 10948  001AE8  EF40  F00D         	goto	l3508
 10949  001AEC                     u2330:
 10950  001AEC                     l3522:
 10951                           
 10952                           ;A6Lib.c: 118: return iResponse;
 10953  001AEC  5016               	movf	A6_ReadLine@iResponse^0,w,c
 10954  001AEE                     l531:
 10955  001AEE  0012               	return		;funcret
 10956  001AF0                     __end_of_A6_ReadLine:
 10957                           	opt callstack 0
 10958                           
 10959 ;; *************** function _memset *****************
 10960 ;; Defined at:
 10961 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  p1              2    4[COMRAM] PTR void 
 10964 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 10965 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 10966 ;;  c               2    6[COMRAM] int 
 10967 ;;  n               2    8[COMRAM] unsigned int 
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;  p               2   10[COMRAM] PTR unsigned char 
 10970 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 10971 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  2    4[COMRAM] PTR void 
 10974 ;; Registers used:
 10975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10981 ;;      Params:         6       0       0       0       0       0       0       0       0
 10982 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10983 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10984 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10985 ;;Total ram usage:        8 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; Hardware stack levels required when called:    2
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		_A6_ReadLine
 10992 ;;		_EUSART_Init
 10993 ;; This function uses a non-reentrant model
 10994 ;;
 10995                           
 10996                           	psect	text55
 10997  0029F4                     __ptext55:
 10998                           	opt callstack 0
 10999  0029F4                     _memset:
 11000                           	opt callstack 25
 11001  0029F4  C005  F00B         	movff	memset@p1,memset@p
 11002  0029F8  C006  F00C         	movff	memset@p1+1,memset@p+1
 11003  0029FC  EF08  F015         	goto	l3400
 11004  002A00                     l3396:
 11005  002A00  C00B  FFD9         	movff	memset@p,fsr2l
 11006  002A04  C00C  FFDA         	movff	memset@p+1,fsr2h
 11007  002A08  C007  FFDF         	movff	memset@c,indf2
 11008  002A0C  4A0B               	infsnz	memset@p^0,f,c
 11009  002A0E  2A0C               	incf	(memset@p+1)^0,f,c
 11010  002A10                     l3400:
 11011  002A10  0609               	decf	memset@n^0,f,c
 11012  002A12  A0D8               	btfss	status,0,c
 11013  002A14  060A               	decf	(memset@n+1)^0,f,c
 11014  002A16  2809               	incf	memset@n^0,w,c
 11015  002A18  E106               	bnz	u2091
 11016  002A1A  280A               	incf	(memset@n+1)^0,w,c
 11017  002A1C  A4D8               	btfss	status,2,c
 11018  002A1E  EF13  F015         	goto	u2091
 11019  002A22  EF15  F015         	goto	u2090
 11020  002A26                     u2091:
 11021  002A26  EF00  F015         	goto	l3396
 11022  002A2A                     u2090:
 11023  002A2A  0012               	return		;funcret
 11024  002A2C                     __end_of_memset:
 11025                           	opt callstack 0
 11026                           
 11027 ;; *************** function _EUSART_BufferGetChar *****************
 11028 ;; Defined at:
 11029 ;;		line 95 in file "EUSART.c"
 11030 ;; Parameters:    Size  Location     Type
 11031 ;;  timeout         2   14[COMRAM] int 
 11032 ;; Auto vars:     Size  Location     Type
 11033 ;;		None
 11034 ;; Return value:  Size  Location     Type
 11035 ;;                  1    wreg      unsigned char 
 11036 ;; Registers used:
 11037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11043 ;;      Params:         2       0       0       0       0       0       0       0       0
 11044 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11045 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11046 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11047 ;;Total ram usage:        2 bytes
 11048 ;; Hardware stack levels used:    1
 11049 ;; Hardware stack levels required when called:    3
 11050 ;; This function calls:
 11051 ;;		_EUSART_RX_AvailableData
 11052 ;; This function is called by:
 11053 ;;		_A6_ReadLine
 11054 ;; This function uses a non-reentrant model
 11055 ;;
 11056                           
 11057                           	psect	text56
 11058  0027A8                     __ptext56:
 11059                           	opt callstack 0
 11060  0027A8                     _EUSART_BufferGetChar:
 11061                           	opt callstack 24
 11062  0027A8                     
 11063                           ;EUSART.c: 96: if(EUSART_RX_AvailableData(timeout) == 0) return (0);
 11064  0027A8  C00F  F005         	movff	EUSART_BufferGetChar@timeout,EUSART_RX_AvailableData@timeout
 11065  0027AC  C010  F006         	movff	EUSART_BufferGetChar@timeout+1,EUSART_RX_AvailableData@timeout+1
 11066  0027B0  EC02  F010         	call	_EUSART_RX_AvailableData	;wreg free
 11067  0027B4  0900               	iorlw	0
 11068  0027B6  A4D8               	btfss	status,2,c
 11069  0027B8  EFE0  F013         	goto	u2101
 11070  0027BC  EFE2  F013         	goto	u2100
 11071  0027C0                     u2101:
 11072  0027C0  EFE5  F013         	goto	l3408
 11073  0027C4                     u2100:
 11074  0027C4  0E00               	movlw	0
 11075  0027C6  EFF9  F013         	goto	l638
 11076  0027CA                     l3408:
 11077                           
 11078                           ;EUSART.c: 97: EUSART_RX.iRead++;
 11079  0027CA  0102               	movlb	2	; () banked
 11080  0027CC  2B00               	incf	_EUSART_RX& (0+255),f,b
 11081  0027CE                     
 11082                           ; BSR set to: 2
 11083                           ;EUSART.c: 98: if(EUSART_RX.iRead == 128) EUSART_RX.iRead = 0;
 11084  0027CE  0E80               	movlw	128
 11085  0027D0  1900               	xorwf	_EUSART_RX& (0+255),w,b
 11086  0027D2  A4D8               	btfss	status,2,c
 11087  0027D4  EFEE  F013         	goto	u2111
 11088  0027D8  EFF0  F013         	goto	u2110
 11089  0027DC                     u2111:
 11090  0027DC  EFF2  F013         	goto	l3414
 11091  0027E0                     u2110:
 11092  0027E0                     
 11093                           ; BSR set to: 2
 11094  0027E0  0E00               	movlw	0
 11095  0027E2  6F00               	movwf	_EUSART_RX& (0+255),b
 11096  0027E4                     l3414:
 11097                           
 11098                           ; BSR set to: 2
 11099                           ;EUSART.c: 99: return EUSART_RX.buffer[EUSART_RX.iRead];
 11100  0027E4  0E02               	movlw	low (_EUSART_RX+2)
 11101  0027E6  2500               	addwf	_EUSART_RX& (0+255),w,b
 11102  0027E8  6ED9               	movwf	fsr2l,c
 11103  0027EA  6ADA               	clrf	fsr2h,c
 11104  0027EC  0E02               	movlw	high (_EUSART_RX+2)
 11105  0027EE  22DA               	addwfc	fsr2h,f,c
 11106  0027F0  50DF               	movf	indf2,w,c
 11107  0027F2                     l638:
 11108  0027F2  0012               	return		;funcret
 11109  0027F4                     __end_of_EUSART_BufferGetChar:
 11110                           	opt callstack 0
 11111                           
 11112 ;; *************** function _EUSART_RX_AvailableData *****************
 11113 ;; Defined at:
 11114 ;;		line 86 in file "EUSART.c"
 11115 ;; Parameters:    Size  Location     Type
 11116 ;;  timeout         2    4[COMRAM] int 
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;  t               4   10[COMRAM] unsigned long 
 11119 ;; Return value:  Size  Location     Type
 11120 ;;                  1    wreg      unsigned char 
 11121 ;; Registers used:
 11122 ;;		wreg, status,2, status,0
 11123 ;; Tracked objects:
 11124 ;;		On entry : 0/0
 11125 ;;		On exit  : 0/0
 11126 ;;		Unchanged: 0/0
 11127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11128 ;;      Params:         2       0       0       0       0       0       0       0       0
 11129 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11130 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11131 ;;      Totals:        10       0       0       0       0       0       0       0       0
 11132 ;;Total ram usage:       10 bytes
 11133 ;; Hardware stack levels used:    1
 11134 ;; Hardware stack levels required when called:    2
 11135 ;; This function calls:
 11136 ;;		Nothing
 11137 ;; This function is called by:
 11138 ;;		_A6_Process_Random_Comms
 11139 ;;		_EUSART_BufferGetChar
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           
 11143                           	psect	text57
 11144  002004                     __ptext57:
 11145                           	opt callstack 0
 11146  002004                     _EUSART_RX_AvailableData:
 11147                           	opt callstack 26
 11148  002004                     
 11149                           ;EUSART.c: 87: if(timeout == 0) timeout = 1000;
 11150  002004  5005               	movf	EUSART_RX_AvailableData@timeout^0,w,c
 11151  002006  1006               	iorwf	(EUSART_RX_AvailableData@timeout+1)^0,w,c
 11152  002008  A4D8               	btfss	status,2,c
 11153  00200A  EF09  F010         	goto	u2061
 11154  00200E  EF0B  F010         	goto	u2060
 11155  002012                     u2061:
 11156  002012  EF0F  F010         	goto	l3366
 11157  002016                     u2060:
 11158  002016  0E03               	movlw	3
 11159  002018  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
 11160  00201A  0EE8               	movlw	232
 11161  00201C  6E05               	movwf	EUSART_RX_AvailableData@timeout^0,c
 11162  00201E                     l3366:
 11163                           
 11164                           ;EUSART.c: 88: uint32_t t = MILLISECONDS + timeout;
 11165  00201E  C005  F007         	movff	EUSART_RX_AvailableData@timeout,??_EUSART_RX_AvailableData
 11166  002022  C006  F008         	movff	EUSART_RX_AvailableData@timeout+1,??_EUSART_RX_AvailableData+1
 11167  002026  0E00               	movlw	0
 11168  002028  BE08               	btfsc	(??_EUSART_RX_AvailableData+1)^0,7,c
 11169  00202A  0EFF               	movlw	255
 11170  00202C  6E09               	movwf	(??_EUSART_RX_AvailableData+2)^0,c
 11171  00202E  6E0A               	movwf	(??_EUSART_RX_AvailableData+3)^0,c
 11172  002030  0101               	movlb	1	; () banked
 11173  002032  51C1               	movf	_MILLISECONDS& (0+255),w,b
 11174  002034  2407               	addwf	??_EUSART_RX_AvailableData^0,w,c
 11175  002036  6E0B               	movwf	EUSART_RX_AvailableData@t^0,c
 11176  002038  51C2               	movf	(_MILLISECONDS+1)& (0+255),w,b
 11177  00203A  2008               	addwfc	(??_EUSART_RX_AvailableData+1)^0,w,c
 11178  00203C  6E0C               	movwf	(EUSART_RX_AvailableData@t+1)^0,c
 11179  00203E  51C3               	movf	(_MILLISECONDS+2)& (0+255),w,b
 11180  002040  2009               	addwfc	(??_EUSART_RX_AvailableData+2)^0,w,c
 11181  002042  6E0D               	movwf	(EUSART_RX_AvailableData@t+2)^0,c
 11182  002044  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
 11183  002046  200A               	addwfc	(??_EUSART_RX_AvailableData+3)^0,w,c
 11184  002048  6E0E               	movwf	(EUSART_RX_AvailableData@t+3)^0,c
 11185                           
 11186                           ;EUSART.c: 89: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
 11187  00204A  EF3A  F010         	goto	l3374
 11188  00204E                     l3368:
 11189                           
 11190                           ; BSR set to: 2
 11191                           ;EUSART.c: 90: if(t < MILLISECONDS) return 0;
 11192  00204E  0101               	movlb	1	; () banked
 11193  002050  51C1               	movf	_MILLISECONDS& (0+255),w,b
 11194  002052  5C0B               	subwf	EUSART_RX_AvailableData@t^0,w,c
 11195  002054  51C2               	movf	(_MILLISECONDS+1)& (0+255),w,b
 11196  002056  580C               	subwfb	(EUSART_RX_AvailableData@t+1)^0,w,c
 11197  002058  51C3               	movf	(_MILLISECONDS+2)& (0+255),w,b
 11198  00205A  580D               	subwfb	(EUSART_RX_AvailableData@t+2)^0,w,c
 11199  00205C  51C4               	movf	(_MILLISECONDS+3)& (0+255),w,b
 11200  00205E  580E               	subwfb	(EUSART_RX_AvailableData@t+3)^0,w,c
 11201  002060  B0D8               	btfsc	status,0,c
 11202  002062  EF35  F010         	goto	u2071
 11203  002066  EF37  F010         	goto	u2070
 11204  00206A                     u2071:
 11205  00206A  EF3A  F010         	goto	l3374
 11206  00206E                     u2070:
 11207  00206E                     
 11208                           ; BSR set to: 1
 11209  00206E  0E00               	movlw	0
 11210  002070  EF45  F010         	goto	l633
 11211  002074                     l3374:
 11212                           
 11213                           ; BSR set to: 1
 11214  002074  0102               	movlb	2	; () banked
 11215  002076  5100               	movf	_EUSART_RX& (0+255),w,b
 11216  002078  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 11217  00207A  B4D8               	btfsc	status,2,c
 11218  00207C  EF42  F010         	goto	u2081
 11219  002080  EF44  F010         	goto	u2080
 11220  002084                     u2081:
 11221  002084  EF27  F010         	goto	l3368
 11222  002088                     u2080:
 11223  002088                     
 11224                           ; BSR set to: 2
 11225                           ;EUSART.c: 91: };EUSART.c: 92: return 1;
 11226  002088  0E01               	movlw	1
 11227  00208A                     l633:
 11228  00208A  0012               	return		;funcret
 11229  00208C                     __end_of_EUSART_RX_AvailableData:
 11230                           	opt callstack 0
 11231                           
 11232 ;; *************** function _isr *****************
 11233 ;; Defined at:
 11234 ;;		line 90 in file "init.c"
 11235 ;; Parameters:    Size  Location     Type
 11236 ;;		None
 11237 ;; Auto vars:     Size  Location     Type
 11238 ;;		None
 11239 ;; Return value:  Size  Location     Type
 11240 ;;                  1    wreg      void 
 11241 ;; Registers used:
 11242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11243 ;; Tracked objects:
 11244 ;;		On entry : 0/0
 11245 ;;		On exit  : 0/0
 11246 ;;		Unchanged: 0/0
 11247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11248 ;;      Params:         0       0       0       0       0       0       0       0       0
 11249 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11250 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11251 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11252 ;;Total ram usage:        2 bytes
 11253 ;; Hardware stack levels used:    1
 11254 ;; Hardware stack levels required when called:    1
 11255 ;; This function calls:
 11256 ;;		_EUSART_RX_Interrupt
 11257 ;;		_Ecg_Interrupt
 11258 ;; This function is called by:
 11259 ;;		Interrupt level 2
 11260 ;; This function uses a non-reentrant model
 11261 ;;
 11262                           
 11263                           	psect	intcode
 11264  000008                     __pintcode:
 11265                           	opt callstack 0
 11266  000008                     _isr:
 11267                           	opt callstack 20
 11268                           
 11269                           ;incstack = 0
 11270  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11271  00000A  ED2A  F012         	call	int_func,f	;refresh shadow registers
 11272                           
 11273                           	psect	intcode_body
 11274  002454                     __pintcode_body:
 11275                           	opt callstack 20
 11276  002454                     int_func:
 11277                           	opt callstack 20
 11278  002454  0006               	pop		; remove dummy address from shadow register refresh
 11279  002456  CFD9 F003          	movff	fsr2l,??_isr
 11280  00245A  CFDA F004          	movff	fsr2h,??_isr+1
 11281  00245E                     
 11282                           ;init.c: 92: if(TMR3IE && TMR3IF) {
 11283  00245E  A2A0               	btfss	4000,1,c	;volatile
 11284  002460  EF34  F012         	goto	i2u374_41
 11285  002464  EF36  F012         	goto	i2u374_40
 11286  002468                     i2u374_41:
 11287  002468  EF4B  F012         	goto	i2l4538
 11288  00246C                     i2u374_40:
 11289  00246C  A2A1               	btfss	4001,1,c	;volatile
 11290  00246E  EF3B  F012         	goto	i2u375_41
 11291  002472  EF3D  F012         	goto	i2u375_40
 11292  002476                     i2u375_41:
 11293  002476  EF4B  F012         	goto	i2l4538
 11294  00247A                     i2u375_40:
 11295  00247A                     
 11296                           ;init.c: 93: MILLISECONDS += 5;
 11297  00247A  0E05               	movlw	5
 11298  00247C  0101               	movlb	1	; () banked
 11299  00247E  27C1               	addwf	_MILLISECONDS& (0+255),f,b
 11300  002480  0E00               	movlw	0
 11301  002482  23C2               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
 11302  002484  23C3               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
 11303  002486  23C4               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
 11304  002488                     
 11305                           ; BSR set to: 1
 11306                           ;init.c: 94: Ecg_Interrupt();
 11307  002488  EC97  F015         	call	_Ecg_Interrupt	;wreg free
 11308  00248C                     
 11309                           ;init.c: 97: TMR3H = 0x16;
 11310  00248C  0E16               	movlw	22
 11311  00248E  6EB3               	movwf	179,c	;volatile
 11312  002490                     
 11313                           ;init.c: 98: TMR3L = 0x00;
 11314  002490  0E00               	movlw	0
 11315  002492  6EB2               	movwf	178,c	;volatile
 11316  002494                     
 11317                           ;init.c: 99: TMR3IF = 0;
 11318  002494  92A1               	bcf	4001,1,c	;volatile
 11319  002496                     i2l4538:
 11320                           
 11321                           ;init.c: 100: };init.c: 103: if(RCIE && RCIF) {
 11322  002496  AA9D               	btfss	3997,5,c	;volatile
 11323  002498  EF50  F012         	goto	i2u376_41
 11324  00249C  EF52  F012         	goto	i2u376_40
 11325  0024A0                     i2u376_41:
 11326  0024A0  EF5B  F012         	goto	i2l181
 11327  0024A4                     i2u376_40:
 11328  0024A4  AA9E               	btfss	3998,5,c	;volatile
 11329  0024A6  EF57  F012         	goto	i2u377_41
 11330  0024AA  EF59  F012         	goto	i2u377_40
 11331  0024AE                     i2u377_41:
 11332  0024AE  EF5B  F012         	goto	i2l181
 11333  0024B2                     i2u377_40:
 11334  0024B2                     
 11335                           ;init.c: 104: EUSART_RX_Interrupt();
 11336  0024B2  ECFC  F012         	call	_EUSART_RX_Interrupt	;wreg free
 11337  0024B6                     i2l181:
 11338  0024B6  C004  FFDA         	movff	??_isr+1,fsr2h
 11339  0024BA  C003  FFD9         	movff	??_isr,fsr2l
 11340  0024BE  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11341  0024C0  0011               	retfie		f
 11342  0024C2                     __end_of_isr:
 11343                           	opt callstack 0
 11344                           
 11345 ;; *************** function _Ecg_Interrupt *****************
 11346 ;; Defined at:
 11347 ;;		line 135 in file "ecg.c"
 11348 ;; Parameters:    Size  Location     Type
 11349 ;;		None
 11350 ;; Auto vars:     Size  Location     Type
 11351 ;;		None
 11352 ;; Return value:  Size  Location     Type
 11353 ;;                  1    wreg      void 
 11354 ;; Registers used:
 11355 ;;		wreg, status,2, status,0
 11356 ;; Tracked objects:
 11357 ;;		On entry : 0/0
 11358 ;;		On exit  : 0/0
 11359 ;;		Unchanged: 0/0
 11360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11361 ;;      Params:         0       0       0       0       0       0       0       0       0
 11362 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11363 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11364 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11365 ;;Total ram usage:        2 bytes
 11366 ;; Hardware stack levels used:    1
 11367 ;; This function calls:
 11368 ;;		Nothing
 11369 ;; This function is called by:
 11370 ;;		_isr
 11371 ;; This function uses a non-reentrant model
 11372 ;;
 11373                           
 11374                           	psect	text59
 11375  002B2E                     __ptext59:
 11376                           	opt callstack 0
 11377  002B2E                     _Ecg_Interrupt:
 11378                           	opt callstack 20
 11379  002B2E                     
 11380                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
 11381  002B2E  0E01               	movlw	1
 11382  002B30  6E01               	movwf	??_Ecg_Interrupt^0,c
 11383  002B32  5057               	movf	(_ECG_FLAGS+1)^0,w,c
 11384  002B34  0B07               	andlw	7
 11385  002B36  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
 11386  002B38  5001               	movf	??_Ecg_Interrupt^0,w,c
 11387  002B3A  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
 11388  002B3C  5057               	movf	(_ECG_FLAGS+1)^0,w,c
 11389  002B3E  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 11390  002B40  0BF8               	andlw	-8
 11391  002B42  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 11392  002B44  6E57               	movwf	(_ECG_FLAGS+1)^0,c
 11393  002B46                     
 11394                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
 11395  002B46  0100               	movlb	0	; () banked
 11396  002B48  2BC5               	incf	(_ECG_HEARTRATE+3)& (0+255),f,b
 11397  002B4A                     
 11398                           ; BSR set to: 0
 11399                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
 11400  002B4A  8856               	bsf	_ECG_FLAGS^0,4,c
 11401  002B4C                     
 11402                           ; BSR set to: 0
 11403  002B4C  0012               	return		;funcret
 11404  002B4E                     __end_of_Ecg_Interrupt:
 11405                           	opt callstack 0
 11406                           
 11407 ;; *************** function _EUSART_RX_Interrupt *****************
 11408 ;; Defined at:
 11409 ;;		line 68 in file "EUSART.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;		None
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;  c               1    1[COMRAM] unsigned char 
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      void 
 11416 ;; Registers used:
 11417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11423 ;;      Params:         0       0       0       0       0       0       0       0       0
 11424 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11425 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11426 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11427 ;;Total ram usage:        2 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_isr
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           	psect	text60
 11437  0025F8                     __ptext60:
 11438                           	opt callstack 0
 11439  0025F8                     _EUSART_RX_Interrupt:
 11440                           	opt callstack 20
 11441  0025F8                     
 11442                           ;EUSART.c: 69: uint8_t c = RCREG;
 11443  0025F8  CFAE F002          	movff	4014,EUSART_RX_Interrupt@c	;volatile
 11444                           
 11445                           ;EUSART.c: 70: if(OERR == 1) {
 11446  0025FC  A2AB               	btfss	4011,1,c	;volatile
 11447  0025FE  EF03  F013         	goto	i2u364_41
 11448  002602  EF05  F013         	goto	i2u364_40
 11449  002606                     i2u364_41:
 11450  002606  EF18  F013         	goto	i2l4444
 11451  00260A                     i2u364_40:
 11452  00260A                     
 11453                           ;EUSART.c: 71: CREN = 0;
 11454  00260A  98AB               	bcf	4011,4,c	;volatile
 11455                           
 11456                           ;EUSART.c: 72: CREN = 1;
 11457  00260C  88AB               	bsf	4011,4,c	;volatile
 11458  00260E                     
 11459                           ;EUSART.c: 73: PORTAbits.RA2 = !PORTAbits.RA2;
 11460  00260E  A480               	btfss	128,2,c	;volatile
 11461  002610  EF0C  F013         	goto	i2u365_41
 11462  002614  EF10  F013         	goto	i2u365_40
 11463  002618                     i2u365_41:
 11464  002618  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 11465  00261A  2A01               	incf	??_EUSART_RX_Interrupt^0,f,c
 11466  00261C  EF11  F013         	goto	i2u366_48
 11467  002620                     i2u365_40:
 11468  002620  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 11469  002622                     i2u366_48:
 11470  002622  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 11471  002624  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 11472  002626  5080               	movf	128,w,c	;volatile
 11473  002628  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 11474  00262A  0BFB               	andlw	-5
 11475  00262C  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 11476  00262E  6E80               	movwf	128,c	;volatile
 11477  002630                     i2l4444:
 11478                           
 11479                           ;EUSART.c: 74: };EUSART.c: 76: EUSART_RX.iWrite++;
 11480  002630  0102               	movlb	2	; () banked
 11481  002632  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
 11482  002634                     
 11483                           ; BSR set to: 2
 11484                           ;EUSART.c: 77: if(EUSART_RX.iWrite == 128) EUSART_RX.iWrite = 0;
 11485  002634  0E80               	movlw	128
 11486  002636  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 11487  002638  A4D8               	btfss	status,2,c
 11488  00263A  EF21  F013         	goto	i2u367_41
 11489  00263E  EF23  F013         	goto	i2u367_40
 11490  002642                     i2u367_41:
 11491  002642  EF25  F013         	goto	i2l4450
 11492  002646                     i2u367_40:
 11493  002646                     
 11494                           ; BSR set to: 2
 11495  002646  0E00               	movlw	0
 11496  002648  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
 11497  00264A                     i2l4450:
 11498                           
 11499                           ; BSR set to: 2
 11500                           ;EUSART.c: 78: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
 11501  00264A  0E02               	movlw	low (_EUSART_RX+2)
 11502  00264C  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
 11503  00264E  6ED9               	movwf	fsr2l,c
 11504  002650  6ADA               	clrf	fsr2h,c
 11505  002652  0E02               	movlw	high (_EUSART_RX+2)
 11506  002654  22DA               	addwfc	fsr2h,f,c
 11507  002656  C002  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
 11508  00265A                     
 11509                           ; BSR set to: 2
 11510  00265A  0012               	return		;funcret
 11511  00265C                     __end_of_EUSART_RX_Interrupt:
 11512                           	opt callstack 0
 11513                           
 11514                           	psect	rparam
 11515  0000                     
 11516                           	psect	temp
 11517  00005A                     btemp:
 11518                           	opt callstack 0
 11519  00005A                     	ds	1
 11520  0000                     int$flags	set	btemp
 11521  0000                     wtemp8	set	btemp+1
 11522  0000                     ttemp5	set	btemp+1
 11523  0000                     ttemp6	set	btemp+4
 11524  0000                     ttemp7	set	btemp+8
 11525                           tosu	equ	0xFFF
 11526                           tosh	equ	0xFFE
 11527                           tosl	equ	0xFFD
 11528                           stkptr	equ	0xFFC
 11529                           pclatu	equ	0xFFB
 11530                           pclath	equ	0xFFA
 11531                           pcl	equ	0xFF9
 11532                           tblptru	equ	0xFF8
 11533                           tblptrh	equ	0xFF7
 11534                           tblptrl	equ	0xFF6
 11535                           tablat	equ	0xFF5
 11536                           prodh	equ	0xFF4
 11537                           prodl	equ	0xFF3
 11538                           indf0	equ	0xFEF
 11539                           postinc0	equ	0xFEE
 11540                           postdec0	equ	0xFED
 11541                           preinc0	equ	0xFEC
 11542                           plusw0	equ	0xFEB
 11543                           fsr0h	equ	0xFEA
 11544                           fsr0l	equ	0xFE9
 11545                           wreg	equ	0xFE8
 11546                           indf1	equ	0xFE7
 11547                           postinc1	equ	0xFE6
 11548                           postdec1	equ	0xFE5
 11549                           preinc1	equ	0xFE4
 11550                           plusw1	equ	0xFE3
 11551                           fsr1h	equ	0xFE2
 11552                           fsr1l	equ	0xFE1
 11553                           bsr	equ	0xFE0
 11554                           indf2	equ	0xFDF
 11555                           postinc2	equ	0xFDE
 11556                           postdec2	equ	0xFDD
 11557                           preinc2	equ	0xFDC
 11558                           plusw2	equ	0xFDB
 11559                           fsr2h	equ	0xFDA
 11560                           fsr2l	equ	0xFD9
 11561                           status	equ	0xFD8


Data Sizes:
    Strings     460
    Constant    1598
    Data        8
    BSS         182
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      89
    BANK0           160     80     112
    BANK1           256    173     197
    BANK2           256      0     130
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_40(CODE[2]), STR_39(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_27(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_38(CODE[7]), STR_34(CODE[8]), STR_26(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_40(CODE[2]), STR_39(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_27(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_40(CODE[2]), STR_39(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_27(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_40(CODE[2]), STR_39(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_27(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_40(CODE[2]), STR_39(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_27(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_40(CODE[2]), STR_39(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_27(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_38(CODE[7]), STR_34(CODE[8]), STR_26(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_40(CODE[2]), STR_39(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_27(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_38(CODE[7]), STR_37(CODE[8]), STR_34(CODE[8]), STR_33(CODE[10]), 
		 -> A6_BaudRateSet@request(BANK0[20]), STR_26(CODE[7]), STR_25(CODE[9]), STR_23(CODE[4]), 
		 -> STR_9(CODE[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_38(CODE[7]), STR_37(CODE[8]), STR_34(CODE[8]), STR_33(CODE[10]), 
		 -> A6_BaudRateSet@request(BANK0[20]), STR_26(CODE[7]), STR_25(CODE[9]), STR_23(CODE[4]), 
		 -> STR_9(CODE[10]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_32(CODE[3]), STR_29(CODE[3]), STR_24(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_41(CODE[7]), ?_sprintf(COMRAM[2]), Ecg_ProcessHeartRate@heartbeatAverage(COMRAM[4]), STR_19(CODE[6]), 
		 -> STR_18(CODE[11]), STR_17(CODE[13]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_31(CODE[11]), STR_28(CODE[12]), STR_20(CODE[4]), STR_16(CODE[24]), 
		 -> STR_14(CODE[10]), STR_13(CODE[9]), STR_11(CODE[4]), STR_3(CODE[27]), 
		 -> STR_2(CODE[32]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_BaudRateAutoDetect@zzzz(BANK0[32]), A6_BaudRateSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@zzzz_169(BANK1[32]), 
		 -> loop@zzzz_164(BANK1[32]), loop@zzzz_161(BANK1[32]), loop@zzzz(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[8]), STR_33(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_25(CODE[9]), 
		 -> STR_23(CODE[4]), STR_9(CODE[10]), 

    A6_NetworkGetRSSI@RSSIToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    A6_NetworkGetStatus@networkStatusToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__memset	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_ReadLine@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[8]), STR_33(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_25(CODE[9]), 
		 -> STR_23(CODE[4]), STR_9(CODE[10]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    A6_BaudRateGet@baudRateToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_40(CODE[2]), STR_39(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_27(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateAutoDetect@zzzz(BANK0[32]), STR_30(CODE[23]), STR_22(CODE[28]), 
		 -> STR_21(CODE[11]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@zzzz_169(BANK1[32]), STR_15(CODE[27]), 
		 -> loop@zzzz_164(BANK1[32]), STR_12(CODE[11]), loop@zzzz_161(BANK1[32]), STR_10(CODE[16]), 
		 -> loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), STR_6(CODE[11]), 
		 -> STR_5(CODE[23]), STR_4(CODE[25]), loop@zzzz(BANK1[32]), 

    printLine@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateAutoDetect@zzzz(BANK0[32]), STR_30(CODE[23]), loop@zzzz_169(BANK1[32]), 
		 -> STR_15(CODE[27]), loop@zzzz_164(BANK1[32]), STR_12(CODE[11]), loop@zzzz_161(BANK1[32]), 
		 -> STR_10(CODE[16]), loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), 
		 -> STR_6(CODE[11]), STR_5(CODE[23]), STR_4(CODE[25]), loop@zzzz(BANK1[32]), 

    loop$177	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_19(CODE[6]), STR_18(CODE[11]), 

    loop$176	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_19(CODE[6]), STR_18(CODE[11]), STR_17(CODE[13]), 

    loop$156	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_7(CODE[13]), STR_6(CODE[11]), 

    loop$151	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_4(CODE[25]), loop@zzzz(BANK1[32]), 


Critical Paths under _main in COMRAM

    _loop->_sprintf
    _A6_Process_Random_Comms->_printLine
    _A6_NetworkGetStatus->_A6_Command
    _A6_NetworkGetRSSILevel->_A6_NetworkGetRSSI
    _A6_NetworkGetRSSI->_A6_Command
    _atoi->___wmul
    _A6_BaudRateSet->_sprintf
    _A6_BaudRateGet->_A6_Command
    _A6_BaudRateGet->_atol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _atol->___lmul
    _TFT_Init->_TFT_FillScreen
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _TFT_DrawLine->_TFT_DrawPixel
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _TFT_FillScreen->_TFT_Flood
    _EUSART_Init->_memset
    _A6_BaudRateAutoDetect->_sprintf
    _sprintf->_A6_BaudRateGet
    ___llmod->___lldiv
    _printLine->_TFT_DrawString
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawFillRect
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_Flood
    _TFT_FullScreen->_TFT_SetAddrWindow
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister
    _EUSART_BaudRateSet->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen
    _A6_ReadLine->_EUSART_BufferGetChar
    _EUSART_BufferGetChar->_EUSART_RX_AvailableData

Critical Paths under _isr in COMRAM

    _isr->_EUSART_RX_Interrupt
    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_A6_BaudRateSet
    _A6_BaudRateSet->_sprintf
    _A6_Init->_A6_BaudRateAutoDetect
    _A6_BaudRateAutoDetect->_sprintf

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  315567
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               177   177      0  201564
                                             76 BANK0      4     4      0
                                              0 BANK1    173   173      0
              _A6_BaudRateAutoDetect
                     _A6_BaudRateGet
                     _A6_BaudRateSet
                         _A6_Command
                         _A6_IsAlive
                  _A6_NetworkGetRSSI
             _A6_NetworkGetRSSILevel
                _A6_NetworkGetStatus
            _A6_Process_Random_Comms
                          _printLine
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _A6_Process_Random_Comms                             33    33      0   37353
                                              0 BANK0     33    33      0
                        _A6_ReadLine
            _EUSART_RX_AvailableData
                          _printLine
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _A6_NetworkGetStatus                                 34    34      0   10933
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _A6_NetworkGetRSSILevel                               1     1      0   11021
                                             64 COMRAM     1     1      0
                  _A6_NetworkGetRSSI
 ---------------------------------------------------------------------------------
 (3) _A6_NetworkGetRSSI                                   34    34      0   10910
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1671
                                             10 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateSet                                      60    56      4   26208
                                             16 BANK0     60    56      4
                     _A6_BaudRateGet
                         _A6_Command
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _A6_BaudRateGet                                      43    39      4   10163
                                             30 COMRAM    43    39      4
                         _A6_Command
                               _atol
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    3142
                                             17 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1781
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              7     1      6     362
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _strchr                                               6     2      4     544
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4     834
                                             16 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            10    10      0   10568
                                             29 COMRAM    10    10      0
                     _TFT_FillScreen
                     _TFT_FullScreen
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0   56707
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (2) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Ok                              0     0      0   31242
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawLine                                        31    21     10    5824
                                             18 COMRAM    31    21     10
                      _TFT_DrawPixel
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     370
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Failure                         0     0      0   25418
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (2) _TFT_FillScreen                                       2     0      2    5356
                                             27 COMRAM     2     0      2
                          _TFT_Flood
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0     552
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              0     0      0   46176
              _A6_BaudRateAutoDetect
                            _sleepMS
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateAutoDetect                               33    33      0   45827
                                             16 BANK0     33    33      0
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                          _printLine
                            _sleepMS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    24      8    4904
                                             73 COMRAM    12     4      8
                                              0 BANK0     16    16      0
                     _A6_BaudRateGet (ARG)
                  _A6_NetworkGetRSSI (ARG)
             _A6_NetworkGetRSSILevel (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     349
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _printLine                                            4     0      4   34753
                                             73 COMRAM     4     0      4
                   _TFT_DrawFillRect
                     _TFT_DrawString
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawString                                      11     0     11   20062
                                             62 COMRAM    11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawChar                                        21    11     10   18060
                                             41 COMRAM    21    11     10
                   _TFT_DrawFillRect
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawPixel                                        6     0      6    3362
                                             12 COMRAM     6     0      6
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawFillRect                                    14     4     10   12063
                                             27 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1223
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _TFT_FullScreen                                       0     0      0    2896
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (6) _TFT_SetAddrWindow                                    8     0      8    2896
                                             12 COMRAM     8     0      8
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (6) _TFT_Flood                                           15     9      6    2950
                                             12 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TFT_WriteRegister                                    8     4      4    2156
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateSet                                  12     8      4     937
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _A6_IsAlive                                          32    32      0    4728
                                             30 COMRAM    32    32      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     547
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _A6_Command                                           7     0      7    4131
                                             23 COMRAM     7     0      7
                        _A6_ReadLine
                    _EUSART_RX_Flush
                   _EUSART_TX_String
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_TX_String                                     3     0      3     219
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_Char                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_RX_Flush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _A6_ReadLine                                          7     2      5    1736
                                             16 COMRAM     7     2      5
               _EUSART_BufferGetChar
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     552
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _EUSART_BufferGetChar                                 2     0      2     394
                                             14 COMRAM     2     0      2
            _EUSART_RX_AvailableData
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_AvailableData                             10     8      2     220
                                              4 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (11) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_Interrupt                                 2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _sleepMS
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_WriteRegister
         ___awdiv
         _abs
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_FillScreen
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_WriteRegister
     _TFT_FullScreen
       _TFT_SetAddrWindow
         _TFT_WriteRegister
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _A6_BaudRateGet
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atol
         ___lmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_BaudRateSet
       _A6_BaudRateGet
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
       _strcmp
     _A6_Command
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_Flush
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _strlen
     _A6_IsAlive
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _strcmp
     _A6_NetworkGetRSSI
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atoi
         ___wmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_NetworkGetRSSILevel
       _A6_NetworkGetRSSI
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atoi
           ___wmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
     _A6_NetworkGetStatus
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atoi
         ___wmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_Process_Random_Comms
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_AvailableData
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _strcmp
     _printLine
       _TFT_DrawFillRect
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_FullScreen
           _TFT_SetAddrWindow
             _TFT_WriteRegister
         _TFT_SetAddrWindow
           _TFT_WriteRegister
         ___wmul
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
     _sprintf
       _A6_BaudRateGet (ARG)
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_NetworkGetRSSI (ARG)
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atoi
           ___wmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_NetworkGetRSSILevel (ARG)
         _A6_NetworkGetRSSI
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      82       9       50.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AD      C5       7       77.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      70       5       70.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     210      20        0.0%
DATA                 0      0     210       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 26 20:20:04 2019

             ?_A6_Process_Random_Comms 0001                 A6_BaudRateAutoDetect@i 0090  
                  __size_of_A6_IsAlive 0050                                     l98 0654  
                                   l99 069C                    __size_of_A6_Command 003A  
                         ___awdiv@sign 000A                    ___wmul@multiplicand 0007  
                          __CFG_BORV$0 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                                  l105 29B8                                    l109 2002  
                                  l223 2B6A                                    l208 28C4  
                                  l240 2942                                    l226 2284  
                                  l261 1014                                    l229 2B0C  
                                  l253 0FA4                                    l245 0F06  
                                  l237 1864                                    l174 23E4  
                                  l503 270A                                    l271 10FE  
                                  l511 14AE                                    l264 1068  
                                  l256 2372                                    l273 1126  
                                  l266 1124                                    l531 1AEE  
                                  l523 1A18                                    l603 283A  
                                  l435 2758                                    l515 138A  
                                  l612 2B9C                                    l268 108A  
                                  l284 0C06                                    l700 0BC8  
                                  l276 2880                                    l452 297E  
                                  l293 0DBC                                    l526 29F2  
                                  l606 210E                                    l703 2AE6  
                                  l551 1786                                    l384 2AC0  
                                  l560 220A                                    l544 1EF2  
                                  l633 208A                                    l529 1A34  
                                  l609 2B88                                    l449 22FC  
                                  l626 2BA8                                    l618 2904  
                                  l730 1DC6                                    l714 251A  
                                  l299 1E66                                    l715 252A  
                                  l556 1C74                                    l638 27F2  
                                  l663 08F8                                    l737 1DD6  
                                  l499 2B84        __end_of_Ecg_Background_Leads_Ok 22FE  
                                  l934 1BB2                                    l679 0980  
                                  _GIE 007F97                           __CFG_CPB$OFF 000000  
                         printLine@str 004A                           __CFG_CPD$OFF 000000  
                         __CFG_BOR$OFF 000000                                    _abs 2A2C  
                                  _isr 0008                        __end_of_A6_Init 2B86  
                                  wreg 000FE8                   __size_of_A6_ReadLine 00D6  
                         TFT_Flood@len 000F                  EUSART_BaudRateSet@tmp 001A  
                         ?_EUSART_Init 0001                           __CFG_LVP$OFF 000000  
                         TFT_Init@data 0020                           __CFG_WDT$OFF 000000  
                                 l1111 1F6A                                   ?_abs 0005  
                                 l1118 1F7A                                   l1400 2A90  
                                 l1420 27A6                                   l1406 2A2A  
                                 l1414 26BA                                   l4000 2708  
                                 l1432 1D32                                   l4010 1C32  
                                 l3300 2890                                   l1452 2110  
                                 l1444 15E2                                   l1380 15BE  
                                 l4012 1C44                                   l4004 1BB4  
                                 l1365 2A56                                   l1381 15C6  
                                 l3310 28A2                                   l3302 2894  
                                 l4022 2980                                   l1366 2A5E  
                                 l4030 0DBE                                   l1454 2190  
                                 l1446 16A8                                   l4110 1322  
                                 l4102 12A4                                   l4014 1C60  
                                 l4006 1BD4                                   l3400 2A10  
                                 l3320 28B6                                   l3312 28A4  
                                 l3304 2898                                   l4024 299A  
                                 l4040 0E9C                                   l4032 0E0C  
                                 l4200 270C                                   l2520 2384  
                                 l1464 25EE                                   l4112 134A  
                                 l4104 12C8                                   l4008 1BFA  
                                 l1473 193E                                   l1465 25F6  
                                 l1449 16A0                                   l3410 27CE  
                                 l3402 27A8                                   l3322 28B8  
                                 l3314 28AA                                   l3306 289A  
                                 l3330 220C                                   l4130 195A  
                                 l4122 1940                                   l4026 283C  
                                 l4050 0F20                                   l4042 0EA8  
                                 l4034 0E1E                                   l4210 2730  
                                 l4202 2710                                   l2530 23A8  
                                 l2522 239C                                   l2514 2374  
                                 l1394 1250                                   l1386 1128  
                                 l4114 135E                                   l4106 12E8  
                                 l4018 1C72                                   l1395 1260  
                                 l1483 2588                                   l3412 27E0  
                                 l3404 27C4                                   l3500 1A58  
                                 l3420 2B96                                   l3324 28BC  
                                 l3316 28AE                                   l3308 289E  
                                 l3340 0FC2                                   l3332 2AE8  
                                 l4140 19F0                                   l4132 1986  
                                 l4124 1954                                   l4028 2864  
                                 l4060 0F82                                   l4052 0F40  
                                 l4044 0EC0                                   l4036 0E4E  
                                 l4220 22C0                                   l4212 2752  
                                 l4204 271E                                   l2540 23BA  
                                 l2532 23AA                                   l2524 239E  
                                 l2516 2376                                   l1484 2590  
                                 l4116 1372                                   l4108 12FC  
                                 l4300 0166                                   l3414 27E4  
                                 l3510 1A92                                   l3502 1A6A  
                                 l4070 20FC                                   l3326 28C0  
                                 l3318 28B2                                   l3350 1044  
                                 l3342 0FCC                                   l3334 0FA6  
                                 l4142 1A04                                   l4134 199A  
                                 l4054 0F5C                                   l4062 0F86  
                                 l4046 0EFA                                   l4038 0E6C  
                                 l4222 22EA                                   l4206 2720  
                                 l2470 2B4E                                   l4230 1788  
                                 l2550 23CE                                   l2542 23BC  
                                 l2534 23AE                                   l2526 23A0  
                                 l2518 237E                                   l3430 2188  
                                 l3422 2110                                   l4150 21AA  
                                 l4302 018E                                   l4310 0220  
                                 l3408 27CA                                   l3520 1ACE  
                                 l3512 1AA6                                   l4072 2106  
                                 l4064 208C                                   l3328 28C2  
                                 l3360 1112                                   l3352 105E  
                                 l3344 0FD0                                   l3336 0FAA  
                                 l3440 0BCE                                   l4144 1A08  
                                 l4136 19D8                                   l3600 2A2C  
                                 l4056 0F64                                   l4048 0F0E  
                                 l4224 22F2                                   l4216 2286  
                                 l4208 272E                                   l2480 2B5A  
                                 l2472 2B52                                   l4240 17D4  
                                 l4232 178C                                   l2560 23E0  
                                 l2552 23D6                                   l2544 23C0  
                                 l2536 23B2                                   l2528 23A4  
                                 l3424 2140                                   l4160 21C6  
                                 l4320 0284                                   l4312 0244  
                                 l4304 01A2                                   l3370 206E  
                                 l3362 2004                                   l3514 1AB6  
                                 l3522 1AEC                                   l3506 1A7C  
                                 l3418 2B88                                   l3610 2698  
                                 l4074 210A                                   l4066 2092  
                                 l3354 1074                                   l3346 0FFE  
                                 l3338 0FAE                                   l3450 0C24  
                                 l3442 0C02                                   l3434 0BCA  
                                 l3530 2A76                                   l4226 2944  
                                 l3602 2A3A                                   l4058 0F72  
                                 l4218 2292                                   l2482 2B68  
                                 l2474 2B54                                   l4242 17D8  
                                 l4250 183C                                   l4234 17A2  
                                 l2562 23E2                                   l2554 23DA  
                                 l2546 23C8                                   l2538 23B6  
                                 l4162 21D6                                   l4154 21B0  
                                 l4146 2192                                   l4082 1E86  
                                 l4330 02D2                                   l4322 0298  
                                 l4314 025C                                   l3364 2016  
                                 l3516 1AB8                                   l3508 1A80  
                                 l3612 26B0                                   l3604 265C  
                                 l4068 20C6                                   l3356 10DA  
                                 l3380 2AC2                                   l3460 0D24  
                                 l3452 0C5A                                   l3532 2A86  
                                 l4260 2812                                   l4228 2950  
                                 l2476 2B56                                   l4252 1854  
                                 l4244 17FA                                   l4236 17AA  
                                 l2556 23DC                                   l2548 23CA  
                                 l3540 24D2                                   l3428 214C  
                                 l3620 1CB4                                   l3700 14B0  
                                 l4172 21F2                                   l4156 21C0  
                                 l4148 2198                                   l4092 1EE0  
                                 l4084 1EA2                                   l4340 0370  
                                 l4332 02DC                                   l4324 02AC  
                                 l4316 0268                                   l4308 01AA  
                                 l3374 2074                                   l3366 201E  
                                 l3606 2660                                   l3294 2882  
                                 l3358 10F4                                   l3382 2ADE  
                                 l3390 236E                                   l3470 0DA8  
                                 l3462 0D8C                                   l3454 0CC6  
                                 l3534 2A8A                                   l3526 2A62  
                                 l4262 281E                                   l4270 2AB4  
                                 l2478 2B58                                   l4254 1858  
                                 l4246 180E                                   l4238 17B6  
                                 l2558 23DE                                   l3542 24E0  
                                 l3550 186A                                   l3630 1D2A  
                                 l4094 1262                                   l3710 14F8  
                                 l3702 14B4                                   l4174 2202  
                                 l4166 21DC                                   l4190 173A  
                                 l4182 16AA                                   l4078 1E68  
                                 l4350 0428                                   l4342 0384  
                                 l4326 02B0                                   l4318 0270  
                                 l4334 02F0                                   l3376 2088  
                                 l3368 204E                                   l3472 2BA4  
                                 l3480 279A                                   l3608 2668  
                                 l3296 2888                                   l3392 2906  
                                 l3464 0D8E                                   l3456 0CDE  
                                 l3448 0C14                                   l3800 1F1E  
                                 l3528 2A66                                   l4256 27F4  
                                 l4272 2ABA                                   l4264 2A92  
                                 l4248 1828                                   l3544 24F0  
                                 l3552 189A                                   l3560 191C  
                                 l3624 1CC0                                   l3616 1C76  
                                 l4096 1276                                   l3712 1512  
                                 l3704 14B8                                   l4168 21EC  
                                 l4192 1772                                   l4184 16CA  
                                 l4088 1EB6                                   l4360 04A6  
                                 l4352 0438                                   l4344 03A4  
                                 l4336 030E                                   l4328 02C4  
                                 l4280 0012                                   l4520 2B1E  
                                 l4512 2B0E                                   l3394 29F4  
                                 l3490 28F2                                   l3474 275A  
                                 l3730 1D44                                   l3298 288C  
                                 l3386 22FE                                   l3466 0D92  
                                 l3458 0CEE                                   l3802 1F2C  
                                 l4258 280A                                   l4274 2ABE  
                                 l4266 2AA8                                   l3546 24FA  
                                 l3538 24C2                                   l3562 1936  
                                 l3554 18D8                                   l3618 1C7A  
                                 l3626 1CE8                                   l3570 2540  
                                 l3650 164A                                   l3642 1600  
                                 l3634 15C8                                   l3810 138C  
                                 l4098 128E                                   l3722 1576  
                                 l3714 151C                                   l3706 14D2  
                                 l4178 2208                                   l4186 16F0  
                                 l4370 0570                                   l4362 04F8  
                                 l4354 044C                                   l4338 0360  
                                 l4346 03B8                                   l4290 00BE  
                                 l4282 0016                                   l4522 2B22  
                                 l4514 2B12                                   l3396 2A00  
                                 l3492 1A1A                                   l3484 28C6  
                                 l3476 2766                                   l3740 1D86  
                                 l3732 1D5A                                   l3388 2342  
                                 l3468 0DA6                                   l3804 1F4A  
                                 l3900 08AE                                   l4276 2B6C  
                                 l4268 2AB0                                   l3548 1866  
                                 l3628 1CFA                                   l3580 25BE  
                                 l3572 2558                                   l3652 166C  
                                 l3644 161C                                   l3636 15DA  
                                 l3820 1438                                   l3812 13AC  
                                 l3724 1592                                   l3716 1536  
                                 l3708 14EC                                   l4188 1728  
                                 l4196 1784                                   l4380 0616  
                                 l4364 0508                                   l4372 0582  
                                 l4356 0474                                   l4348 03D6  
                                 l4292 00D2                                   l4284 0034  
                                 l4516 2B16                                   l3398 2A0C  
                                 l3494 1A42                                   l3486 28CA  
                                 l3478 276A                                   l3582 29BA  
                                 l3742 1DA4                                   l3734 1D62  
                                 l3590 1DD8                                   l3806 1F5A  
                                 l3910 0952                                   l3902 0906  
                                 l4278 2B70                                   l3750 1AF0  
                                 l3670 115C                                   l3662 1128  
                                 l3558 1914                                   l3574 2592  
                                 l3566 252C                                   l3654 1684  
                                 l3646 1634                                   l3638 15F4  
                                 l3830 148C                                   l3814 13D2  
                                 l3726 15A2                                   l3718 153E  
                                 l4390 0660                                   l4382 061E  
                                 l4374 05A0                                   l4366 051C  
                                 l4358 0488                                   l4294 00E8  
                                 l4286 0086                                   l4518 2B1A  
                                 l3496 1A52                                   l3488 28EE  
                                 l3584 29BE                                   l3744 1DB4  
                                 l3736 1D6E                                   l3728 1D34  
                                 l3592 1DDC                                   l3808 1F64  
                                 l3920 09A6                                   l3912 095A  
                                 l3904 0914                                   l3840 06AC  
                                 l3760 1B1C                                   l3752 1AF4  
                                 l3680 1198                                   l3672 1170  
                                 l3664 1134                                   l3576 259E  
                                 l3568 2538                                   l3656 1690  
                                 l3832 148E                                   l3816 140A  
                                 l4392 0668                                   l4384 0630  
                                 l4376 05F2                                   l4368 053E  
                                 l4296 0112                                   l4288 0096  
                                 l3586 29DA                                   l3746 1DB6  
                                 l3738 1D7C                                   l3594 1E26  
                                 l3922 09B2                                   l3914 0968  
                                 l3906 092C                                   l3850 06FC  
                                 l3842 06BE                                   l3770 1B4A  
                                 l3762 1B24                                   l3754 1B02  
                                 l3674 1182                                   l3666 1138  
                                 l3578 25A6                                   l3658 1698  
                                 l3826 143C                                   l3818 141C  
                                 l3834 149E                                   l4394 068A  
                                 l4386 0640                                   l4378 0602  
                                 l4298 013C                                   l3748 1DC0  
                                 l3596 1E32                                   l3940 0A28  
                                 l3932 09DA                                   l3924 09CE  
                                 l3916 096C                                   l3908 0938  
                                 l3860 0772                                   l3852 0706  
                                 l3844 06CA                                   l3780 1B84  
                                 l3772 1B52                                   l3764 1B28  
                                 l3756 1B0A                                   l3692 11F6  
                                 l3676 1184                                   l3668 114A  
                                 l3828 1478                                   l4388 064C  
                                 l3598 1E36                                   l3950 0A86  
                                 l3942 0A3A                                   l3918 098E  
                                 l3926 09D6                                   l3870 07AA  
                                 l3862 0778                                   l3854 0722  
                                 l3846 06D2                                   l3838 069E  
                                 l3790 1BAA                                   l3782 1B86  
                                 l3774 1B60                                   l3766 1B30  
                                 l3758 1B0E                                   l3694 120A  
                                 l3686 11AE                                   l3678 1190  
                                 l4910 01E0                                   l4902 01BC  
                                 l3960 0AC8                                   l3952 0A8E  
                                 l3944 0A50                                   l3936 0A14  
                                 l3880 081C                                   l3872 07B6  
                                 l3864 0788                                   l3856 074C  
                                 l3848 06DE                                   l3784 1B8C  
                                 l3776 1B66                                   l3768 1B42  
                                 l3696 121A                                   l4912 01FC  
                                 l4904 01EE                                   l3794 1EF4  
                                 l3970 0B70                                   l3962 0ADE  
                                 l3954 0AA0                                   l3946 0A56  
                                 l3938 0A16                                   l3890 0880  
                                 l3882 0828                                   l3874 07BC  
                                 l3866 0790                                   l3858 0750  
                                 l3778 1B7C                                   l3786 1B92  
                                 l4906 020A                                   l3796 1F0A  
                                 l3972 0B7C                                   l3964 0AEA  
                                 l3956 0AAC                                   l3948 0A7A  
                                 l3892 0886                                   l3884 0834  
                                 l3876 07F8                                   l3868 07A2  
                                 l3788 1BA2                                   l4908 01D2  
                                 l3990 1FFA                                   l3982 1F7C  
                                 l3798 1F12                                   l3974 0B80  
                                 l3966 0AEE                                   l3958 0AB0  
                                 l3894 088A                                   l3886 0838  
                                 l3878 0810                                   l3992 26BC  
                                 l3984 1F86                                   l3968 0AF8  
                                 l3896 08A8                                   l3888 0856  
                                 l3976 0B9A                                   l3994 26DC  
                                 l3986 1FB2                                   l3978 0BBC  
                                 l3996 2702                                   l3988 1FE2  
                                 ?_isr 0001                                   STR_1 5EED  
                                 STR_2 5E33                                   STR_3 5E6F  
                                 STR_4 5EA5                                   STR_5 5F04  
                                 STR_6 5F72                                   STR_7 5F2B  
                                 STR_8 5F88                                   STR_9 5F9D  
                                 _CREN 007D5C                                   u2000 0FF0  
                                 u2010 1010                                   u2011 100C  
                                 u2100 27C4                                   u2020 105E  
                                 u2101 27C0                                   u2021 105A  
                                 u2005 0FE6                          TFT_DrawChar@c 002E  
                                 u2110 27E0                                   u2030 1086  
                                 u2111 27DC                                   u2031 1082  
                                 u2120 2B96                                   u2040 10F4  
                                 u2200 0CEE                                   u3000 0914  
                                 u2121 2B92                                   u2041 10F0  
                                 u2201 0CEA                                   u3001 0910  
                                 u2050 1124                                   u2210 0DA6  
                                 u3010 0968                                   u2130 2130  
                                 u2051 1120                                   u2211 0DA2  
                                 u3011 0964                          TFT_DrawChar@i 003E  
                                 u2060 2016                                   u2300 1A92  
                                 u2220 0DBC                                   u3100 0ADE  
                                 u3020 098E                                   u2140 2140  
                        TFT_DrawChar@j 003D                                   u2061 2012  
                                 u2301 1A8E                                   u2221 0DB8  
                                 u3101 0ADA                                   u3021 098A  
                                 u2141 213C                                   _LATA 000F89  
                                 u2070 206E                                   u2310 1AA2  
                                 u2230 278A                                   u3110 0B9A  
                                 u3030 0A10                                   u2150 2178  
                                 _LATB 000F8A                                   u2071 206A  
                                 u2311 1A9E                                   u3111 0B96  
                                 u3031 0A0C                                   _LATC 000F8B  
                                 u2080 2088                                   u2320 1ACA  
                                 u2240 279A                                   u3120 0BBC  
                                 u3040 0A28                                   u3200 0E1E  
                                 u2160 2188                                   u2400 18D8  
                                 u2081 2084                                   u2321 1AC6  
                                 u2241 2796                                   u3121 0BB8  
                                 u3041 0A24                                   u3201 0E1A  
                                 u2161 2184                                   u2137 2126  
                                 u2401 18D4                                   u2090 2A2A  
                                 u2330 1AEC                                   u2250 28EA  
                                 u2170 0C14                                   u3130 1FFA  
                                 u3050 0A3A                                   u3210 0E6C  
                                 u2410 18F8                                   u2091 2A26  
                                 u2331 1AE8                                   u2171 0C10  
                                 u3131 1FF6                                   u3051 0A36  
                                 u3211 0E68                                   u2260 2904  
                                 u3140 2702                                   u2180 0C24  
                                 u2340 2A76                                   u3060 0A50  
                                 u2500 2A3A                                   u3220 0EFA  
                                 u2420 1936                                   u3300 128E  
                                 u2261 2900                                   u2237 2780  
                                 u3141 26FE                                   u2181 0C20  
                                 u2341 2A72                                   u3061 0A4C  
                                 u2501 2A36                                   u3221 0EF6  
                                 u2157 216E                                   u2421 1932  
                                 u2405 18C8                                   u3301 128A  
                                 u2270 1A52                                   u2510 2698  
                                 u2190 0CDE                                   u2350 2A86  
                                 u3070 0A7A                                   u3230 0F20  
                                 u2430 2558                                   u3310 1322  
                                 u3150 1BFA                                   u2271 1A4E  
                                 u2511 2694                                   u2191 0CDA  
                                 u2351 2A82                                   u3071 0A76  
                                 u3231 0F1C                                   u2407 18BE  
                                 u2431 2554                                   u3311 131E  
                                 u3151 1BF6                                   u2280 1A6A  
                                 u2520 26B0                                   u3080 0AA0  
                                 u3240 0F72                                   u2360 24E0  
                                 u2440 2588                                   u2600 1684  
                                 u3320 135E                                   u3160 1C44  
                                 u3400 16F0                                   u2281 1A66  
                                 u2257 28E0                                   u2521 26AC  
                                 u3081 0A9C                                   u3241 0F6E  
                                 u4017 238E                                   u2361 24DC  
                                 u2417 18EE                                   u2441 2584  
                                 u2601 1680                                   u3321 135A  
                                 u3161 1C40                                   u3401 16EC  
                                 u2290 1A7C                                   u3170 29B8  
                                 u3090 0AC8                                   u3330 199A  
                                 u3250 0FA4                                   u2370 251A  
                                 u2610 114A                                   u2530 1CB4  
                                 u2450 25BE                                   u3410 173A  
                        TFT_DrawChar@x 002A                                   u2291 1A78  
                                 u3171 29B4                                   u3091 0AC4  
                                 u3331 1996                                   u3251 0FA0  
                                 u4027 1796                                   u2371 2516  
                                 u2611 1146                                   u2531 1CB0  
                                 u2451 25BA                                   u3411 1736  
                        TFT_DrawChar@y 002C                                   u3260 20E6  
                                 u3340 1A18                                   u3180 0E06  
                                 u3420 271E                                   u2620 115C  
                                 u2380 188A                                   u2540 1CFA  
                                 u2460 25EE                                   u2700 1536  
                                 u3500 0086                                   u3341 1A14  
                                 u3181 0E00                                   u3421 271A  
                                 u4037 1818                                   u2621 1158  
                                 u2541 1CF6                                   u2461 25EA  
                                 u2701 1532                                   u3501 0082  
                                 u2470 1E0C                                   u3190 0E08  
                                 u3430 272E                                   u2630 1182  
                                 u2390 189A                                   u2550 1D1A  
                                 u2710 1592                                   u3350 21AA  
                                 u3270 1E82                                   u3510 025C  
                                 u3431 272A                                   u4047 2B60  
                                 u2631 117E                                   u2391 1896  
                                 u2711 158E                                   u3351 21A6  
                                 u3271 1E7E                                   u3511 0258  
                                 u2480 1E56                                   u2800 1B7C  
                                 u3440 2744                                   u2640 11AA  
                                 u2560 1D2A                                   u2720 15A2  
                                 u3360 21C0                                   u3280 1EB2  
                                 u3600 05A0                                   u3520 0298  
                                 u3265 20DC                                   u2801 1B78  
                                 u3441 273C                                   u2641 11A6  
                                 u2561 1D26                                   u2721 159E  
                                 u3361 21BC                                   u3281 1EAE  
                                 u3601 059C                                   u3521 0294  
                                 u2730 1D5A                                   u2490 1E66  
                                 u2810 1BA2                                   u2650 120A  
                                 u2570 15DA                                   u3370 21D6  
                                 u3290 1EDC                                   u3610 05F2  
                                 u3530 02C4                                   u2731 1D56  
                                 u2491 1E62                                   u2811 1B9E  
                                 u2651 1206                                   u2387 1880  
                                 u2571 15D6                                   u3371 21D2  
                                 u3291 1ED8                                   u3611 05EE  
                                 u3531 02C0                                   u2740 1D7C  
                                 u2820 1F0A                                   u2900 06FC  
                                 u3460 180E                                   u2660 121A  
                                 u2580 15F4                                   u3380 21EC  
                                 u3620 0630                                   u3540 030E  
                                 u2741 1D78                                   u2477 1E02  
                                 u2821 1F06                                   u2901 06F8  
                                 u3461 180A                                   u2661 1216  
                                 u2557 1D10                                   u2581 15F0  
                                 u3381 21E8                                   u3621 062C  
                                 u3541 030A                                   u2750 1DA4  
                                 u2830 1F2C                                   u2910 076E  
                                 u3470 1854                                   u2590 1634  
                                 u2670 14D2                                   u3390 2202  
                                 u3630 0640                                   u3550 0360  
                                 u2751 1DA0                                   u2487 1E4C  
                                 u2831 1F28                                   u2911 076A  
                                 u3471 1850                                   u2591 1630  
                                 u2671 14CE                                   u3391 21FE  
                                 u3631 063C                                   u3551 035C  
                                 u2840 1F4A                                   u2920 07A2  
                                 u2760 1B02                                   u3480 2AA8  
                                 u2680 14EC                                   u3560 03D6  
                                 u2841 1F46                                   u2921 079E  
                                 u2761 1AFE                                   u3481 2AA4  
                                 u2681 14E8                                   u3561 03D2  
                                 u2930 07E8                                   u2770 1B1C  
                                 u3458 2746                                   u2850 13D2  
                                 u2690 1512                                   u3570 0428  
                                 u3490 0034                                   u2771 1B18  
                                 u2851 13CE                                   u2691 150E  
                                 u3571 0424                                   u3491 0030  
                                 _PEIE 007F96                                   u2940 07F8  
                                 u2780 1B42                                   u2860 141C  
                                 u3580 04A6                                   u2941 07F4  
                                 u2781 1B3E                                   u2861 1418  
                                 u3581 04A2                                   u2950 0810  
                                 u2790 1B60                                   u2870 1478  
                                 u3590 04F8                                   u2951 080C  
                                 u2791 1B5C                                   u2871 1474  
                                 u3591 04F4                                   u2960 0852  
                                 u2880 149E                                   u2961 084E  
                                 u2937 07DE                                   u2881 149A  
                                 u2970 087E                                   u2890 06BE  
                                 u2891 06BA                                   _RCIE 007CED  
                                 u2980 08A4                                   _RCIF 007CF5  
                                 u2981 08A0                                   u2990 0906  
                                 u2991 0902                                   u2977 0874  
                                 _OERR 007D59                                   _RBPU 007F8F  
              __size_of_A6_BaudRateGet 0124                __size_of_A6_BaudRateSet 012A  
                                 _TXIF 007CF4                          TFT_DrawLine@t 0020  
                                 abs@a 0005                                   _atoi 14B0  
                                 _atol 1128                                   _main 2B0E  
                      A6_BaudRateGet@j 0049                                   _init 2374  
                                 _tmp1 01BD                                   _tmp2 01B9  
                                 _tmp3 01B5                                   _tmp4 01B1  
                                 _tmp5 01AD                                   _loop 0012  
                                 fsr0h 000FEA                                   indf0 000FEF  
                                 fsr2h 000FDA                                   fsr0l 000FE9  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 005A  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                      TFT_Flood@color_hi 001A  
                    TFT_Flood@color_lo 001B                          __CFG_IESO$OFF 000000  
          __size_of_EUSART_BaudRateSet 0084        __size_of_A6_NetworkGetRSSILevel 007A  
         __end_of_EUSART_BufferGetChar 27F4                           ___param_bank 000000  
        ?_Ecg_Background_Leads_Failure 0001          A6_BaudRateSet@currentBaudRate 00A8  
          __end_of_A6_NetworkGetStatus 1788                                  ??_abs 0007  
                                ??_isr 0003                          __CFG_PLLDIV$1 000000  
                      ??_TFT_DrawPixel 0013                         __CFG_CCP2MX$ON 000000  
                       printLine@color 004C                                  ?_atoi 000B  
                                ?_atol 0011                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 1BB4  
                                ?_loop 0001                                  STR_10 5F1B  
                                STR_11 5FF6                                  STR_20 5FF2  
                                STR_12 5F67                                  STR_13 5FBA  
                                STR_21 5F5C                                  STR_14 5FA7  
                                STR_30 5ED6                                  STR_22 5E53  
                                STR_23 5FEE                                  STR_31 5F51  
                                STR_15 5E8A                                  STR_40 5FFD  
                                STR_32 5FFA                                  STR_24 5FFA  
                                STR_16 5EBE                                  STR_41 5FD3  
                                STR_25 5FB1                                  STR_33 5F93  
                                STR_17 5F38                                  STR_26 5FE1  
                                STR_34 5FCB                                  STR_18 5F7D  
                                STR_35 5FD1                                  STR_27 5FD1  
                                STR_19 5FE8                                  STR_36 5FFD  
                                STR_28 5F45                                  STR_29 5FFA  
                                STR_37 5FC3                                  STR_38 5FDA  
                                STR_39 5FD1                        __end_of___lldiv 1DD8  
                      ___awdiv@divisor 0007                        __end_of___llmod 1F7C  
                       TFT_DrawChar@bg 0031                                  i2l181 24B6  
                                i2l430 2B4C                                  i2l623 265A  
                      ___awdiv@counter 0009                                  _RCREG 000FAE  
                                _TMR3H 000FB3                                  _TMR3L 000FB2  
                                _SPBRG 000FAF                                  _PORTB 000F81  
                        __CFG_USBDIV$2 000000                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TXREG 000FAD                                  _Ecg_X 00CE  
                                _Ecg_Y 0058                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                    ___lmul@multiplicand 0009  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                    ??_EUSART_RX_Flush 0005                         TFT_DrawLine@x0 0013  
                       TFT_DrawLine@x1 0017                         TFT_DrawLine@y0 0015  
                       TFT_DrawLine@y1 0019                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                         TFT_DrawLine@dx 0030  
                       TFT_DrawLine@dy 0028                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                __size_of_Ecg_CheckLeads 004E  
                      __end_of_dpowers 5DE9                        __end_of_isdigit 2A92  
                     __end_of_TFT_Font 5CF5                       __end_of_TFT_Init 1866  
                                atoi@a 0010                                  atol@a 001A  
                                atol@c 001E                                  atoi@s 000B  
                                atol@s 0011                         TFT_DrawPixel@x 000D  
                       TFT_DrawPixel@y 000F                     __size_of_TFT_Flood 0182  
                      __end_of_sleepMS 29BA                       _TFT_DrawFillRect 22FE  
                                tablat 000FF5                     __size_of_TFT_Reset 001E  
               __size_of_Ecg_Interrupt 0020                       __end_of_Ecg_Init 2AC2  
      A6_Process_Random_Comms@response 0060                                  ttemp5 005B  
                                ttemp6 005E                                  ttemp7 0062  
                                status 000FD8                                  wtemp8 005B  
                      __end_of_sprintf 0BCA            EUSART_BufferGetChar@timeout 000F  
                      __end_of_strcspn 25F8                        __end_of_strncmp 1940  
      __end_of_A6_Process_Random_Comms 1EF4                         __CFG_MCLRE$OFF 000000  
                       TFT_Flood@color 000D                        __initialization 23E6  
A6_NetworkGetStatus@networkStatusToken 003F                           __end_of_atoi 15C8  
                         __end_of_atol 1262                           __end_of_main 2B2E  
                         __end_of_init 23E6                           __end_of_loop 069E  
                            ??_A6_Init 0056                                 ??_atoi 000D  
                               ??_atol 0015                                 ??_main 0056  
                     ??_TFT_FillScreen 001E                                 ??_init 0005  
                               ??_loop 00AC                          __activetblptr 000002  
               _A6_NetworkGetRSSILevel 2192                       ??_TFT_DrawString 004A  
                         ??_A6_IsAlive 001F                           ??_A6_Command 001F  
                       _EUSART_TX_Char 2B86                       ___llmod@dividend 0012  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                     ___awdiv@dividend 0005                      _TFT_DrawChar$2198 0039  
                    _TFT_DrawChar$2199 003B                                 i2l4440 260A  
                               i2l4432 2B2E                                 i2l4450 264A  
                               i2l4442 260E                                 i2l4434 2B46  
                               i2l4530 2488                                 i2l4444 2630  
                               i2l4436 2B4A                                 i2l4540 24A4  
                               i2l4532 248C                                 i2l4524 245E  
                               i2l4446 2634                                 i2l4438 25F8  
                               i2l4542 24B2                                 i2l4534 2490  
                               i2l4526 246C                                 i2l4448 2646  
                               i2l4536 2494                                 i2l4528 247A  
                               i2l4538 2496                  _A6_BaudRateAutoDetect 1940  
                               _TMR3IE 007D01                                 _TMR3IF 007D09  
                               _SPBRGH 000FB0       __size_of_Ecg_Background_Leads_Ok 0078  
                       __CFG_XINST$OFF 000000                        TFT_DrawLine@err 002C  
                     ??_TFT_FullScreen 0015                                 ___lmul 24C2  
                               ___wmul 2AC2                 A6_BaudRateSet@baudRate 0070  
                            ??___awdiv 0009                              ??___lldiv 000D  
                            ??___llmod 001A                      ?_EUSART_TX_String 0009  
                   __end_of_A6_IsAlive 270C                                 _memset 29F4  
                        _Ecg_Interrupt 2B2E                      __end_of_TFT_Flood 1128  
                               clear_0 2424                                 clear_1 2430  
                               clear_2 243C                     __end_of_A6_Command 29F4  
                     ___awdiv@quotient 000B                      __end_of_TFT_Reset 2B6C  
                   ??_EUSART_TX_String 000C                                 _strchr 2110  
                               _strcmp 265C                                 _strlen 275A  
                               _strtok 15C8                                 _strspn 252C  
                               _strstr 1C76                           __pdataCOMRAM 0058  
                            ??_isdigit 0005                                 loop@ns 01AC  
                               loop@zz 01A8                           __mediumconst 57F4  
               __end_of_EUSART_TX_Char 2B9E                              ??_sleepMS 0009  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                   _EUSART_BufferGetChar 27A8  
                      TFT_DrawString@x 003F                        TFT_DrawString@y 0041  
                            ??_sprintf 0052                              ??_strcspn 000F  
                            ??_strncmp 000F                         _A6_BaudRateGet 138C  
                       _A6_BaudRateSet 1262                   __size_of_EUSART_Init 0048  
                           __accesstop 0060                __end_of__initialization 2446  
               A6_BaudRateSet@response 0074                        __CFG_PBADEN$OFF 000000  
                        ___rparam_used 000001                        TFT_Flood@blocks 0017  
                       __pcstackCOMRAM 0001                           __pidataBANK0 2B9E  
                       ?_Ecg_Interrupt 0001                              ?_TFT_Init 0001  
                            ?_Ecg_Init 0001           __size_of_EUSART_RX_Interrupt 0064  
                      ?_EUSART_TX_Char 0001                  ?_EUSART_BufferGetChar 000F  
                       _Ecg_CheckLeads 270C                 __end_of_A6_BaudRateGet 14B0  
     __size_of_A6_Process_Random_Comms 008C                 __end_of_A6_BaudRateSet 138C  
                         sprintf@width 006D                 ?_A6_BaudRateAutoDetect 0001  
                           __pbssBANK0 00B0                             __pbssBANK1 01AD  
                           __pbssBANK2 0200                   A6_ReadLine@iResponse 0016  
                              ?___lmul 0005                                ?___wmul 0005  
           EUSART_BaudRateSet@baudRate 0012                        _EUSART_RX_Flush 2BA4  
                           ??_TFT_Init 001E                                ?_memset 0005  
                              _A6_Init 2B6C                         ___lmul@product 000D  
             __end_of_TFT_DrawFillRect 2374                                ?_strchr 0005  
                              ?_strcmp 0005                                ?_strlen 0005  
                        ??_A6_ReadLine 0016                                ?_strtok 0012  
                              ?_strspn 000B                                ?_strstr 0010  
                           ??_Ecg_Init 004A                     A6_ReadLine@timeout 0014  
               TFT_WriteRegister@h_745 000B                 TFT_WriteRegister@l_746 000C  
               __end_of_Ecg_CheckLeads 275A                       TFT_DrawChar@line 0038  
                     TFT_DrawChar@size 0033                     __size_of_printLine 0088  
                         A6_ReadLine@c 0017               ?_EUSART_RX_AvailableData 0005  
                      ?_A6_BaudRateGet 001F                        ?_A6_BaudRateSet 0070  
                            TFT_Init@i 0026                        __CFG_VREGEN$OFF 000000  
                TFT_DrawFillRect@color 0024             __end_of_EUSART_BaudRateSet 2110  
              _Ecg_Background_Leads_Ok 2286                                __Hparam 0000  
                              __Lparam 0000                      A6_Command@command 0018  
                            _ECG_FLAGS 0056                        ??_Ecg_Interrupt 0001  
            A6_NetworkGetRSSI@response 001F                                ___awdiv 1AF0  
                      __size_of___lmul 006A                                ___lldiv 1D34  
                      __size_of___wmul 0026                                ___llmod 1EF4  
                    _A6_NetworkGetRSSI 1BB4                        __CFG_STVREN$OFF 000000  
                    A6_Command@timeout 001A                          _ECG_HEARTBEAT 00B0  
                              __pcinit 23E6                        __size_of_memset 0038  
                              __ramtop 0800                          _ECG_HEARTRATE 00C2  
              ?_A6_NetworkGetRSSILevel 0001                                __ptext0 2B0E  
                              __ptext1 0012                                __ptext2 1E68  
                              __ptext3 16AA                                __ptext4 2192  
                              __ptext5 1BB4                                __ptext6 14B0  
                              __ptext7 1262                                __ptext8 138C  
                              __ptext9 15C8                     ?_A6_NetworkGetRSSI 0001  
                __end_of_TFT_DrawPixel 2944                        __size_of_strchr 0082  
                      __size_of_strcmp 0060                        __size_of_strlen 004E  
                      __size_of_strtok 00E2                        __size_of_strspn 0066  
                      __size_of_strstr 00BE                                _dpowers 5DC1  
                         __size_of_abs 0034                                _isdigit 2A60  
                         __size_of_isr 24BA           __size_of_A6_NetworkGetStatus 00DE  
                      ?_Ecg_CheckLeads 0005                              _T3CONbits 000FB1  
               ??_EUSART_BufferGetChar 0011                                _sleepMS 2980  
                  ??_A6_NetworkGetRSSI 001F                    __end_of_A6_ReadLine 1AF0  
                              _sprintf 069E                                _strcspn 2592  
                              _strncmp 1866                         __pintcode_body 2454  
                            _EUSART_RX 0200                   end_of_initialization 2446  
                              memset@c 0007                                memset@n 0009  
                              memset@p 000B                          __Lmediumconst 57F4  
                              int_func 2454                     TFT_WriteRegister@h 0009  
                   TFT_WriteRegister@l 000A                        ___lldiv@divisor 0009  
              __end_of_EUSART_RX_Flush 2BAA                        ___lldiv@counter 0011  
                    __end_of_printLine 2004              Ecg_CheckLeads@leadsStatus 0008  
                            _RCSTAbits 000FAB              __end_of_A6_NetworkGetRSSI 1C76  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                     TFT_DrawString@bg 0047                          ?_TFT_DrawChar 002A  
                        ?_TFT_DrawLine 0013         __end_of_A6_NetworkGetRSSILevel 220C  
                              strcmp@r 000B                                strlen@s 0005  
                              strspn@i 0010                              _PORTAbits 000F80  
      __end_of_EUSART_RX_AvailableData 208C                              _PORTCbits 000F82  
                            _TFT_Flood 0FA6                              _TFT_Reset 2B4E  
              _A6_Process_Random_Comms 1E68            A6_NetworkGetStatus@response 001F  
            __size_of_EUSART_TX_String 0040              ??_Ecg_Background_Leads_Ok 004A  
                          TFT_Init@cmd 0024                              _TXSTAbits 000FAC  
                  _EUSART_RX_Interrupt 25F8                         ??_TFT_DrawChar 0034  
                       ??_TFT_DrawLine 001D               EUSART_RX_AvailableData@t 000B  
                       __end_of___lmul 252C                         __end_of___wmul 2AE8  
                          _BAUDCONbits 000FB8                     A6_IsAlive@response 001F  
                        __pidataCOMRAM 2BAA                       ??_EUSART_TX_Char 0005  
                       __end_of_memset 2A2C                      __size_of_TFT_Init 00DE  
                         _MILLISECONDS 01C1                            _A6_ReadLine 1A1A  
                           ?_TFT_Flood 000D                         __end_of_strchr 2192  
                       __end_of_strcmp 26BC                         __end_of_strlen 27A8  
                       __end_of_strtok 16AA                         __end_of_strspn 2592  
                       __end_of_strstr 1D34                             ?_TFT_Reset 0001  
                  start_initialization 23E6                   ?_EUSART_RX_Interrupt 0001  
              ??_A6_BaudRateAutoDetect 0056                      __size_of_Ecg_Init 0030  
                          __end_of_abs 2A60                            __end_of_isr 24C2  
                        ??_EUSART_Init 000D                    TFT_SetAddrWindow@x1 000D  
                  TFT_SetAddrWindow@x2 0011                    TFT_SetAddrWindow@y1 000F  
                  TFT_SetAddrWindow@y2 0013             A6_NetworkGetRSSI@RSSIToken 003F  
              __size_of_TFT_FillScreen 0046                    EUSART_TX_String@len 000B  
                  EUSART_TX_String@str 0009                        ___llmod@divisor 0016  
                      ___llmod@counter 001A                __size_of_TFT_DrawString 0090  
                     ?_EUSART_RX_Flush 0001             __size_of_A6_NetworkGetRSSI 00C2  
                    _TFT_Init_Sequence 5CF5                               ??___lmul 000D  
                             ??___wmul 0009                  A6_Command@responseLen 001E  
                          __pdataBANK0 00CA                       __CFG_LPT1OSC$OFF 000000  
                             ??_memset 000B                               ?_A6_Init 0001  
                    ?_TFT_DrawFillRect 001C         EUSART_RX_AvailableData@timeout 0005  
            ??_A6_Process_Random_Comms 004E                               ??_strchr 0009  
                             ??_strcmp 0009                               ??_strlen 0007  
                     ??_A6_BaudRateGet 0023                               ??_strtok 0016  
                             ??_strspn 000F                               ??_strstr 0014  
                     ??_A6_BaudRateSet 0056                  A6_BaudRateSet@request 0094  
                   ??_TFT_DrawFillRect 0026                  ??_EUSART_RX_Interrupt 0001  
       ??_Ecg_Background_Leads_Failure 004A                __size_of_TFT_FullScreen 0026  
                          __pbssCOMRAM 0056             A6_Process_Random_Comms@cnt 0080  
                        __pcstackBANK0 0060                          __pcstackBANK1 0100  
                         loop@response 0100                           _isdigit$1927 0006  
                          sprintf@flag 006A                            sprintf@prec 0060  
                  __end_of_EUSART_Init 283C       __size_of_EUSART_RX_AvailableData 0088  
                  _A6_NetworkGetStatus 16AA              __end_of_TFT_Init_Sequence 5DC1  
            A6_BaudRateAutoDetect@zzzz 0070                              __pintcode 0008  
                        __pmediumconst 57F4                           loop@zzzz_161 0120  
                         loop@zzzz_164 0160                           loop@zzzz_169 0140  
                             ?___awdiv 0005                               ?___lldiv 0005  
                             ?___llmod 0012                       ??_Ecg_CheckLeads 0007  
                   _EUSART_BaudRateSet 208C                  TFT_WriteRegister@data 0007  
               A6_ReadLine@responseLen 0013                   ?_A6_NetworkGetStatus 0001  
                          ??_TFT_Flood 0013                               ?_isdigit 0001  
                 EUSART_RX_Interrupt@c 0002                            ??_TFT_Reset 0005  
                  ?_EUSART_BaudRateSet 0012                               ?_sleepMS 0005  
                 __end_of_A6_BAUDRATES 5DF5                      _TFT_WriteRegister 2882  
                     _EUSART_TX_String 28C6                               ?_sprintf 004A  
                 __end_of_TFT_DrawChar 0DBE                               ?_strcspn 000B  
                             ?_strncmp 0009                   __end_of_TFT_DrawLine 0FA6  
                  A6_ReadLine@response 0011                     ?_TFT_WriteRegister 0005  
                       ___wmul@product 0009                      TFT_DrawChar@color 002F  
                  ??_TFT_WriteRegister 0009                   ??_EUSART_BaudRateSet 0016  
                             i2u364_40 260A                               i2u364_41 2606  
                             i2u365_40 2620                               i2u365_41 2618  
                             i2u374_40 246C                               i2u374_41 2468  
                             i2u367_40 2646                               i2u366_48 2622  
                             i2u375_40 247A                               i2u367_41 2642  
                             i2u375_41 2476                               i2u376_40 24A4  
                             i2u376_41 24A0                               i2u377_40 24B2  
                             i2u377_41 24AE                               _GO_nDONE 007E11  
                             _UCFGbits 000F6F                       __CFG_WDTPS$32768 000000  
                             _UCONbits 000F6D                              _printLine 1F7C  
                __end_of_Ecg_Interrupt 2B4E                               _TFT_Font 57F5  
                             _TFT_Init 1788                       __size_of_A6_Init 001A  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0                      ___wmul@multiplier 0005  
                             _Ecg_Init 2A92                  ??_A6_NetworkGetStatus 001F  
                           TFT_Flood@i 0019                               _Ecg_Xold 00CC  
                             _Ecg_Yold 00CA              __end_of_TFT_WriteRegister 28C6  
                   TFT_DrawPixel@color 0011          __size_of_EUSART_BufferGetChar 004C  
                           _A6_IsAlive 26BC                        EUSART_TX_Char@c 0005  
                          _EUSART_Init 27F4                      TFT_DrawFillRect@h 0022  
                           _A6_Command 29BA                      TFT_DrawFillRect@w 0020  
                    TFT_DrawFillRect@x 001C                      TFT_DrawFillRect@y 001E  
                    ___lmul@multiplier 0005                         _TFT_FillScreen 283C  
                            copy_data0 23FA                      _TFT_SetAddrWindow 220C  
                       _TFT_DrawString 1DD8                 __size_of_TFT_DrawPixel 003E  
                   ?_TFT_SetAddrWindow 000D                               __Hrparam 0000  
               A6_BaudRateGet@baudRate 0043                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0022                             _ECG_BUFFER 00BD  
                  TFT_DrawString@color 0045                             ?_printLine 004A  
                  ??_TFT_SetAddrWindow 0015                      TFT_DrawLine@t_790 0022  
                    TFT_DrawLine@t_791 0024                      TFT_DrawLine@t_792 0026  
                     __size_of___awdiv 00C4                       __size_of___lldiv 00A4  
                     __size_of___llmod 0088                      TFT_DrawLine@color 001B  
                    TFT_DrawLine@steep 002E                      TFT_DrawLine@ystep 002A  
                         ?_A6_ReadLine 0011                         _TFT_FullScreen 2AE8  
                   A6_Command@response 001C                             sprintf@len 0064  
                           sprintf@val 0066                       __size_of_isdigit 0032  
               __end_of_TFT_FillScreen 2882                               __ptext10 252C  
                             __ptext11 2592                               __ptext20 2A92  
                             __ptext12 1C76                               __ptext21 270C  
                             __ptext13 1866                               __ptext30 1940  
                             __ptext22 2286                               __ptext14 2110  
                             __ptext31 069E                               __ptext23 0DBE  
                             __ptext15 1128                               __ptext40 2AC2  
                             __ptext32 2A60                               __ptext24 2A2C  
                             __ptext16 24C2                               __ptext41 2AE8  
                             __ptext33 1EF4                               __ptext25 1AF0  
                             __ptext17 2374                               __ptext50 275A  
                             __ptext42 220C                               __ptext34 2980  
                             __ptext26 2944                               __ptext18 1788  
                             __ptext51 28C6                               __ptext43 0FA6  
                             __ptext35 1F7C                               __ptext27 283C  
                             __ptext19 2B4E                               __ptext60 25F8  
                             __ptext52 2B86                               __ptext44 2882  
                             __ptext36 1DD8                               __ptext28 27F4  
                             __ptext53 2BA4                               __ptext45 208C  
                             __ptext37 0BCA                               __ptext29 2B6C  
                             __ptext54 1A1A                               __ptext46 1D34  
                             __ptext38 2906                               __ptext55 29F4  
                             __ptext47 26BC                               __ptext39 22FE  
                             __ptext56 27A8                               __ptext48 265C  
                             __ptext57 2004                               __ptext49 29BA  
                             __ptext59 2B2E                       __size_of_sleepMS 003A  
       __size_of_A6_BaudRateAutoDetect 00DA          __end_of_A6_BaudRateAutoDetect 1A1A  
                 TFT_WriteRegister@reg 0005              __end_of_TFT_SetAddrWindow 2286  
               A6_BaudRateGet@response 0023                       __size_of_sprintf 052C  
                             _consoleX 00C8                       __size_of_strcspn 0066  
                     __size_of_strncmp 00DA                 __end_of_TFT_DrawString 1E68  
                             _loop$151 01A0                               _loop$156 01A2  
                             _loop$176 01A4                               _loop$177 01A6  
                            sleepMS@ms 0005                          __size_of_atoi 0118  
                        __size_of_atol 013A                          __size_of_main 0020  
                        __size_of_init 0072                          __size_of_loop 068C  
              _EUSART_RX_AvailableData 2004             A6_NetworkGetRSSILevel@RSSI 0041  
                           strncmp@len 000D                         _ECG_ICON_HEART 5DF5  
                             int$flags 005A                               atoi@sign 000F  
                             atol@sign 0019                    TFT_FillScreen@color 001C  
               __end_of_TFT_FullScreen 2B0E                  __CFG_CPUDIV$OSC1_PLL2 000000  
                        _TFT_DrawPixel 2906                            _OSCTUNEbits 000F9B  
                __size_of_TFT_DrawChar 01F4                  __size_of_TFT_DrawLine 01E8  
           __size_of_TFT_WriteRegister 0044                        ?_TFT_FillScreen 001C  
             ?_Ecg_Background_Leads_Ok 0001                               isdigit@c 0007  
                             memset@p1 0005                            ?_A6_IsAlive 0001  
                   TFT_DrawString@size 0049                            ?_A6_Command 0018  
                             intlevel2 0000                              sprintf@ap 006B  
                            sprintf@cp 0062                              sprintf@sp 004A  
            __size_of_TFT_DrawFillRect 0076                        ?_TFT_DrawString 003F  
                            strchr@chr 0007                               loop@zzzz 0180  
                            strchr@ptr 0005                       ___lldiv@dividend 0005  
               __end_of_ECG_ICON_HEART 5E33                              strcspn@s1 000B  
                            strcspn@s2 000D                               sleepMS@t 0009  
                            strncmp@s1 0009                              strncmp@s2 000B  
             ??_A6_NetworkGetRSSILevel 0041                             _OSCCONbits 000FD3  
                         _A6_BAUDRATES 5DE9               __end_of_EUSART_TX_String 2906  
                          ??_printLine 004E                           _TFT_DrawChar 0BCA  
                         _TFT_DrawLine 0DBE            __end_of_EUSART_RX_Interrupt 265C  
             __size_of_EUSART_RX_Flush 0006                        ?_TFT_FullScreen 0001  
                    TFT_DrawString@str 0043                         ?_TFT_DrawPixel 000D  
                             sprintf@c 006F                               sprintf@f 004C  
                             strcmp@s1 0005                               strcmp@s2 0007  
                     ___lldiv@quotient 000D                               strlen@cp 0007  
                             strcspn@i 0010            A6_BaudRateGet@baudRateToken 0047  
                             strtok@s1 0012                               strtok@s2 0014  
                             strspn@s1 000B                               strspn@s2 000D  
                             strtok@sp 00C6                               strstr@s1 0010  
                             strstr@s2 0012                __size_of_EUSART_TX_Char 0018  
           __size_of_TFT_SetAddrWindow 007A              ??_EUSART_RX_AvailableData 0007  
                   __CFG_FOSC$HSPLL_HS 000000   __end_of_Ecg_Background_Leads_Failure 2980  
__size_of_Ecg_Background_Leads_Failure 003C           _Ecg_Background_Leads_Failure 2944  
