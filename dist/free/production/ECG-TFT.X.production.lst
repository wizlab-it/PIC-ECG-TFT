

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec 27 15:47:26 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87  0000                     
    88                           ; Version 2.10
    89                           ; Generated 31/07/2019 GMT
    90                           ; 
    91                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F2455 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataCOMRAM
   124  003100                     __pidataCOMRAM:
   125                           	opt callstack 0
   126                           
   127                           ;initializer for _Ecg_Y
   128  003100  018F               	dw	399
   129                           
   130                           	psect	idataBANK0
   131  0030F0                     __pidataBANK0:
   132                           	opt callstack 0
   133                           
   134                           ;initializer for _Ecg_Yold
   135  0030F0  018F               	dw	399
   136                           
   137                           ;initializer for _Ecg_Xold
   138  0030F2  00EF               	dw	239
   139                           
   140                           ;initializer for _Ecg_X
   141  0030F4  00EF               	dw	239
   142                           
   143                           	psect	mediumconst
   144  0057F0                     __pmediumconst:
   145                           	opt callstack 0
   146  0057F0  00                 	db	0
   147  0057F1                     _TFT_Font:
   148                           	opt callstack 0
   149  0057F1  00                 	db	0
   150  0057F2  00                 	db	0
   151  0057F3  00                 	db	0
   152  0057F4  00                 	db	0
   153  0057F5  00                 	db	0
   154  0057F6  3E                 	db	62
   155  0057F7  5B                 	db	91
   156  0057F8  4F                 	db	79
   157  0057F9  5B                 	db	91
   158  0057FA  3E                 	db	62
   159  0057FB  3E                 	db	62
   160  0057FC  6B                 	db	107
   161  0057FD  4F                 	db	79
   162  0057FE  6B                 	db	107
   163  0057FF  3E                 	db	62
   164  005800  1C                 	db	28
   165  005801  3E                 	db	62
   166  005802  7C                 	db	124
   167  005803  3E                 	db	62
   168  005804  1C                 	db	28
   169  005805  18                 	db	24
   170  005806  3C                 	db	60
   171  005807  7E                 	db	126
   172  005808  3C                 	db	60
   173  005809  18                 	db	24
   174  00580A  1C                 	db	28
   175  00580B  57                 	db	87
   176  00580C  7D                 	db	125
   177  00580D  57                 	db	87
   178  00580E  1C                 	db	28
   179  00580F  1C                 	db	28
   180  005810  5E                 	db	94
   181  005811  7F                 	db	127
   182  005812  5E                 	db	94
   183  005813  1C                 	db	28
   184  005814  00                 	db	0
   185  005815  18                 	db	24
   186  005816  3C                 	db	60
   187  005817  18                 	db	24
   188  005818  00                 	db	0
   189  005819  FF                 	db	255
   190  00581A  E7                 	db	231
   191  00581B  C3                 	db	195
   192  00581C  E7                 	db	231
   193  00581D  FF                 	db	255
   194  00581E  00                 	db	0
   195  00581F  18                 	db	24
   196  005820  24                 	db	36
   197  005821  18                 	db	24
   198  005822  00                 	db	0
   199  005823  FF                 	db	255
   200  005824  E7                 	db	231
   201  005825  DB                 	db	219
   202  005826  E7                 	db	231
   203  005827  FF                 	db	255
   204  005828  30                 	db	48
   205  005829  48                 	db	72
   206  00582A  3A                 	db	58
   207  00582B  06                 	db	6
   208  00582C  0E                 	db	14
   209  00582D  26                 	db	38
   210  00582E  29                 	db	41
   211  00582F  79                 	db	121
   212  005830  29                 	db	41
   213  005831  26                 	db	38
   214  005832  40                 	db	64
   215  005833  7F                 	db	127
   216  005834  05                 	db	5
   217  005835  05                 	db	5
   218  005836  07                 	db	7
   219  005837  40                 	db	64
   220  005838  7F                 	db	127
   221  005839  05                 	db	5
   222  00583A  25                 	db	37
   223  00583B  3F                 	db	63
   224  00583C  5A                 	db	90
   225  00583D  3C                 	db	60
   226  00583E  E7                 	db	231
   227  00583F  3C                 	db	60
   228  005840  5A                 	db	90
   229  005841  7F                 	db	127
   230  005842  3E                 	db	62
   231  005843  1C                 	db	28
   232  005844  1C                 	db	28
   233  005845  08                 	db	8
   234  005846  08                 	db	8
   235  005847  1C                 	db	28
   236  005848  1C                 	db	28
   237  005849  3E                 	db	62
   238  00584A  7F                 	db	127
   239  00584B  14                 	db	20
   240  00584C  22                 	db	34
   241  00584D  7F                 	db	127
   242  00584E  22                 	db	34
   243  00584F  14                 	db	20
   244  005850  5F                 	db	95
   245  005851  5F                 	db	95
   246  005852  00                 	db	0
   247  005853  5F                 	db	95
   248  005854  5F                 	db	95
   249  005855  06                 	db	6
   250  005856  09                 	db	9
   251  005857  7F                 	db	127
   252  005858  01                 	db	1
   253  005859  7F                 	db	127
   254  00585A  00                 	db	0
   255  00585B  66                 	db	102
   256  00585C  89                 	db	137
   257  00585D  95                 	db	149
   258  00585E  6A                 	db	106
   259  00585F  60                 	db	96
   260  005860  60                 	db	96
   261  005861  60                 	db	96
   262  005862  60                 	db	96
   263  005863  60                 	db	96
   264  005864  94                 	db	148
   265  005865  A2                 	db	162
   266  005866  FF                 	db	255
   267  005867  A2                 	db	162
   268  005868  94                 	db	148
   269  005869  08                 	db	8
   270  00586A  04                 	db	4
   271  00586B  7E                 	db	126
   272  00586C  04                 	db	4
   273  00586D  08                 	db	8
   274  00586E  10                 	db	16
   275  00586F  20                 	db	32
   276  005870  7E                 	db	126
   277  005871  20                 	db	32
   278  005872  10                 	db	16
   279  005873  08                 	db	8
   280  005874  08                 	db	8
   281  005875  2A                 	db	42
   282  005876  1C                 	db	28
   283  005877  08                 	db	8
   284  005878  08                 	db	8
   285  005879  1C                 	db	28
   286  00587A  2A                 	db	42
   287  00587B  08                 	db	8
   288  00587C  08                 	db	8
   289  00587D  1E                 	db	30
   290  00587E  10                 	db	16
   291  00587F  10                 	db	16
   292  005880  10                 	db	16
   293  005881  10                 	db	16
   294  005882  0C                 	db	12
   295  005883  1E                 	db	30
   296  005884  0C                 	db	12
   297  005885  1E                 	db	30
   298  005886  0C                 	db	12
   299  005887  30                 	db	48
   300  005888  38                 	db	56
   301  005889  3E                 	db	62
   302  00588A  38                 	db	56
   303  00588B  30                 	db	48
   304  00588C  06                 	db	6
   305  00588D  0E                 	db	14
   306  00588E  3E                 	db	62
   307  00588F  0E                 	db	14
   308  005890  06                 	db	6
   309  005891  00                 	db	0
   310  005892  00                 	db	0
   311  005893  00                 	db	0
   312  005894  00                 	db	0
   313  005895  00                 	db	0
   314  005896  00                 	db	0
   315  005897  00                 	db	0
   316  005898  5F                 	db	95
   317  005899  00                 	db	0
   318  00589A  00                 	db	0
   319  00589B  00                 	db	0
   320  00589C  07                 	db	7
   321  00589D  00                 	db	0
   322  00589E  07                 	db	7
   323  00589F  00                 	db	0
   324  0058A0  14                 	db	20
   325  0058A1  7F                 	db	127
   326  0058A2  14                 	db	20
   327  0058A3  7F                 	db	127
   328  0058A4  14                 	db	20
   329  0058A5  24                 	db	36
   330  0058A6  2A                 	db	42
   331  0058A7  7F                 	db	127
   332  0058A8  2A                 	db	42
   333  0058A9  12                 	db	18
   334  0058AA  23                 	db	35
   335  0058AB  13                 	db	19
   336  0058AC  08                 	db	8
   337  0058AD  64                 	db	100
   338  0058AE  62                 	db	98
   339  0058AF  36                 	db	54
   340  0058B0  49                 	db	73
   341  0058B1  56                 	db	86
   342  0058B2  20                 	db	32
   343  0058B3  50                 	db	80
   344  0058B4  00                 	db	0
   345  0058B5  08                 	db	8
   346  0058B6  07                 	db	7
   347  0058B7  03                 	db	3
   348  0058B8  00                 	db	0
   349  0058B9  00                 	db	0
   350  0058BA  1C                 	db	28
   351  0058BB  22                 	db	34
   352  0058BC  41                 	db	65
   353  0058BD  00                 	db	0
   354  0058BE  00                 	db	0
   355  0058BF  41                 	db	65
   356  0058C0  22                 	db	34
   357  0058C1  1C                 	db	28
   358  0058C2  00                 	db	0
   359  0058C3  2A                 	db	42
   360  0058C4  1C                 	db	28
   361  0058C5  7F                 	db	127
   362  0058C6  1C                 	db	28
   363  0058C7  2A                 	db	42
   364  0058C8  08                 	db	8
   365  0058C9  08                 	db	8
   366  0058CA  3E                 	db	62
   367  0058CB  08                 	db	8
   368  0058CC  08                 	db	8
   369  0058CD  00                 	db	0
   370  0058CE  80                 	db	128
   371  0058CF  70                 	db	112
   372  0058D0  30                 	db	48
   373  0058D1  00                 	db	0
   374  0058D2  08                 	db	8
   375  0058D3  08                 	db	8
   376  0058D4  08                 	db	8
   377  0058D5  08                 	db	8
   378  0058D6  08                 	db	8
   379  0058D7  00                 	db	0
   380  0058D8  00                 	db	0
   381  0058D9  60                 	db	96
   382  0058DA  60                 	db	96
   383  0058DB  00                 	db	0
   384  0058DC  20                 	db	32
   385  0058DD  10                 	db	16
   386  0058DE  08                 	db	8
   387  0058DF  04                 	db	4
   388  0058E0  02                 	db	2
   389  0058E1  3E                 	db	62
   390  0058E2  51                 	db	81
   391  0058E3  49                 	db	73
   392  0058E4  45                 	db	69
   393  0058E5  3E                 	db	62
   394  0058E6  00                 	db	0
   395  0058E7  42                 	db	66
   396  0058E8  7F                 	db	127
   397  0058E9  40                 	db	64
   398  0058EA  00                 	db	0
   399  0058EB  72                 	db	114
   400  0058EC  49                 	db	73
   401  0058ED  49                 	db	73
   402  0058EE  49                 	db	73
   403  0058EF  46                 	db	70
   404  0058F0  21                 	db	33
   405  0058F1  41                 	db	65
   406  0058F2  49                 	db	73
   407  0058F3  4D                 	db	77
   408  0058F4  33                 	db	51
   409  0058F5  18                 	db	24
   410  0058F6  14                 	db	20
   411  0058F7  12                 	db	18
   412  0058F8  7F                 	db	127
   413  0058F9  10                 	db	16
   414  0058FA  27                 	db	39
   415  0058FB  45                 	db	69
   416  0058FC  45                 	db	69
   417  0058FD  45                 	db	69
   418  0058FE  39                 	db	57
   419  0058FF  3C                 	db	60
   420  005900  4A                 	db	74
   421  005901  49                 	db	73
   422  005902  49                 	db	73
   423  005903  31                 	db	49
   424  005904  41                 	db	65
   425  005905  21                 	db	33
   426  005906  11                 	db	17
   427  005907  09                 	db	9
   428  005908  07                 	db	7
   429  005909  36                 	db	54
   430  00590A  49                 	db	73
   431  00590B  49                 	db	73
   432  00590C  49                 	db	73
   433  00590D  36                 	db	54
   434  00590E  46                 	db	70
   435  00590F  49                 	db	73
   436  005910  49                 	db	73
   437  005911  29                 	db	41
   438  005912  1E                 	db	30
   439  005913  00                 	db	0
   440  005914  00                 	db	0
   441  005915  14                 	db	20
   442  005916  00                 	db	0
   443  005917  00                 	db	0
   444  005918  00                 	db	0
   445  005919  40                 	db	64
   446  00591A  34                 	db	52
   447  00591B  00                 	db	0
   448  00591C  00                 	db	0
   449  00591D  00                 	db	0
   450  00591E  08                 	db	8
   451  00591F  14                 	db	20
   452  005920  22                 	db	34
   453  005921  41                 	db	65
   454  005922  14                 	db	20
   455  005923  14                 	db	20
   456  005924  14                 	db	20
   457  005925  14                 	db	20
   458  005926  14                 	db	20
   459  005927  00                 	db	0
   460  005928  41                 	db	65
   461  005929  22                 	db	34
   462  00592A  14                 	db	20
   463  00592B  08                 	db	8
   464  00592C  02                 	db	2
   465  00592D  01                 	db	1
   466  00592E  59                 	db	89
   467  00592F  09                 	db	9
   468  005930  06                 	db	6
   469  005931  3E                 	db	62
   470  005932  41                 	db	65
   471  005933  5D                 	db	93
   472  005934  59                 	db	89
   473  005935  4E                 	db	78
   474  005936  7C                 	db	124
   475  005937  12                 	db	18
   476  005938  11                 	db	17
   477  005939  12                 	db	18
   478  00593A  7C                 	db	124
   479  00593B  7F                 	db	127
   480  00593C  49                 	db	73
   481  00593D  49                 	db	73
   482  00593E  49                 	db	73
   483  00593F  36                 	db	54
   484  005940  3E                 	db	62
   485  005941  41                 	db	65
   486  005942  41                 	db	65
   487  005943  41                 	db	65
   488  005944  22                 	db	34
   489  005945  7F                 	db	127
   490  005946  41                 	db	65
   491  005947  41                 	db	65
   492  005948  41                 	db	65
   493  005949  3E                 	db	62
   494  00594A  7F                 	db	127
   495  00594B  49                 	db	73
   496  00594C  49                 	db	73
   497  00594D  49                 	db	73
   498  00594E  41                 	db	65
   499  00594F  7F                 	db	127
   500  005950  09                 	db	9
   501  005951  09                 	db	9
   502  005952  09                 	db	9
   503  005953  01                 	db	1
   504  005954  3E                 	db	62
   505  005955  41                 	db	65
   506  005956  41                 	db	65
   507  005957  51                 	db	81
   508  005958  73                 	db	115
   509  005959  7F                 	db	127
   510  00595A  08                 	db	8
   511  00595B  08                 	db	8
   512  00595C  08                 	db	8
   513  00595D  7F                 	db	127
   514  00595E  00                 	db	0
   515  00595F  41                 	db	65
   516  005960  7F                 	db	127
   517  005961  41                 	db	65
   518  005962  00                 	db	0
   519  005963  20                 	db	32
   520  005964  40                 	db	64
   521  005965  41                 	db	65
   522  005966  3F                 	db	63
   523  005967  01                 	db	1
   524  005968  7F                 	db	127
   525  005969  08                 	db	8
   526  00596A  14                 	db	20
   527  00596B  22                 	db	34
   528  00596C  41                 	db	65
   529  00596D  7F                 	db	127
   530  00596E  40                 	db	64
   531  00596F  40                 	db	64
   532  005970  40                 	db	64
   533  005971  40                 	db	64
   534  005972  7F                 	db	127
   535  005973  02                 	db	2
   536  005974  1C                 	db	28
   537  005975  02                 	db	2
   538  005976  7F                 	db	127
   539  005977  7F                 	db	127
   540  005978  04                 	db	4
   541  005979  08                 	db	8
   542  00597A  10                 	db	16
   543  00597B  7F                 	db	127
   544  00597C  3E                 	db	62
   545  00597D  41                 	db	65
   546  00597E  41                 	db	65
   547  00597F  41                 	db	65
   548  005980  3E                 	db	62
   549  005981  7F                 	db	127
   550  005982  09                 	db	9
   551  005983  09                 	db	9
   552  005984  09                 	db	9
   553  005985  06                 	db	6
   554  005986  3E                 	db	62
   555  005987  41                 	db	65
   556  005988  51                 	db	81
   557  005989  21                 	db	33
   558  00598A  5E                 	db	94
   559  00598B  7F                 	db	127
   560  00598C  09                 	db	9
   561  00598D  19                 	db	25
   562  00598E  29                 	db	41
   563  00598F  46                 	db	70
   564  005990  26                 	db	38
   565  005991  49                 	db	73
   566  005992  49                 	db	73
   567  005993  49                 	db	73
   568  005994  32                 	db	50
   569  005995  03                 	db	3
   570  005996  01                 	db	1
   571  005997  7F                 	db	127
   572  005998  01                 	db	1
   573  005999  03                 	db	3
   574  00599A  3F                 	db	63
   575  00599B  40                 	db	64
   576  00599C  40                 	db	64
   577  00599D  40                 	db	64
   578  00599E  3F                 	db	63
   579  00599F  1F                 	db	31
   580  0059A0  20                 	db	32
   581  0059A1  40                 	db	64
   582  0059A2  20                 	db	32
   583  0059A3  1F                 	db	31
   584  0059A4  3F                 	db	63
   585  0059A5  40                 	db	64
   586  0059A6  38                 	db	56
   587  0059A7  40                 	db	64
   588  0059A8  3F                 	db	63
   589  0059A9  63                 	db	99
   590  0059AA  14                 	db	20
   591  0059AB  08                 	db	8
   592  0059AC  14                 	db	20
   593  0059AD  63                 	db	99
   594  0059AE  03                 	db	3
   595  0059AF  04                 	db	4
   596  0059B0  78                 	db	120
   597  0059B1  04                 	db	4
   598  0059B2  03                 	db	3
   599  0059B3  61                 	db	97
   600  0059B4  59                 	db	89
   601  0059B5  49                 	db	73
   602  0059B6  4D                 	db	77
   603  0059B7  43                 	db	67
   604  0059B8  00                 	db	0
   605  0059B9  7F                 	db	127
   606  0059BA  41                 	db	65
   607  0059BB  41                 	db	65
   608  0059BC  41                 	db	65
   609  0059BD  02                 	db	2
   610  0059BE  04                 	db	4
   611  0059BF  08                 	db	8
   612  0059C0  10                 	db	16
   613  0059C1  20                 	db	32
   614  0059C2  00                 	db	0
   615  0059C3  41                 	db	65
   616  0059C4  41                 	db	65
   617  0059C5  41                 	db	65
   618  0059C6  7F                 	db	127
   619  0059C7  04                 	db	4
   620  0059C8  02                 	db	2
   621  0059C9  01                 	db	1
   622  0059CA  02                 	db	2
   623  0059CB  04                 	db	4
   624  0059CC  40                 	db	64
   625  0059CD  40                 	db	64
   626  0059CE  40                 	db	64
   627  0059CF  40                 	db	64
   628  0059D0  40                 	db	64
   629  0059D1  00                 	db	0
   630  0059D2  03                 	db	3
   631  0059D3  07                 	db	7
   632  0059D4  08                 	db	8
   633  0059D5  00                 	db	0
   634  0059D6  20                 	db	32
   635  0059D7  54                 	db	84
   636  0059D8  54                 	db	84
   637  0059D9  78                 	db	120
   638  0059DA  40                 	db	64
   639  0059DB  7F                 	db	127
   640  0059DC  28                 	db	40
   641  0059DD  44                 	db	68
   642  0059DE  44                 	db	68
   643  0059DF  38                 	db	56
   644  0059E0  38                 	db	56
   645  0059E1  44                 	db	68
   646  0059E2  44                 	db	68
   647  0059E3  44                 	db	68
   648  0059E4  28                 	db	40
   649  0059E5  38                 	db	56
   650  0059E6  44                 	db	68
   651  0059E7  44                 	db	68
   652  0059E8  28                 	db	40
   653  0059E9  7F                 	db	127
   654  0059EA  38                 	db	56
   655  0059EB  54                 	db	84
   656  0059EC  54                 	db	84
   657  0059ED  54                 	db	84
   658  0059EE  18                 	db	24
   659  0059EF  00                 	db	0
   660  0059F0  08                 	db	8
   661  0059F1  7E                 	db	126
   662  0059F2  09                 	db	9
   663  0059F3  02                 	db	2
   664  0059F4  18                 	db	24
   665  0059F5  A4                 	db	164
   666  0059F6  A4                 	db	164
   667  0059F7  9C                 	db	156
   668  0059F8  78                 	db	120
   669  0059F9  7F                 	db	127
   670  0059FA  08                 	db	8
   671  0059FB  04                 	db	4
   672  0059FC  04                 	db	4
   673  0059FD  78                 	db	120
   674  0059FE  00                 	db	0
   675  0059FF  44                 	db	68
   676  005A00  7D                 	db	125
   677  005A01  40                 	db	64
   678  005A02  00                 	db	0
   679  005A03  20                 	db	32
   680  005A04  40                 	db	64
   681  005A05  40                 	db	64
   682  005A06  3D                 	db	61
   683  005A07  00                 	db	0
   684  005A08  7F                 	db	127
   685  005A09  10                 	db	16
   686  005A0A  28                 	db	40
   687  005A0B  44                 	db	68
   688  005A0C  00                 	db	0
   689  005A0D  00                 	db	0
   690  005A0E  41                 	db	65
   691  005A0F  7F                 	db	127
   692  005A10  40                 	db	64
   693  005A11  00                 	db	0
   694  005A12  7C                 	db	124
   695  005A13  04                 	db	4
   696  005A14  78                 	db	120
   697  005A15  04                 	db	4
   698  005A16  78                 	db	120
   699  005A17  7C                 	db	124
   700  005A18  08                 	db	8
   701  005A19  04                 	db	4
   702  005A1A  04                 	db	4
   703  005A1B  78                 	db	120
   704  005A1C  38                 	db	56
   705  005A1D  44                 	db	68
   706  005A1E  44                 	db	68
   707  005A1F  44                 	db	68
   708  005A20  38                 	db	56
   709  005A21  FC                 	db	252
   710  005A22  18                 	db	24
   711  005A23  24                 	db	36
   712  005A24  24                 	db	36
   713  005A25  18                 	db	24
   714  005A26  18                 	db	24
   715  005A27  24                 	db	36
   716  005A28  24                 	db	36
   717  005A29  18                 	db	24
   718  005A2A  FC                 	db	252
   719  005A2B  7C                 	db	124
   720  005A2C  08                 	db	8
   721  005A2D  04                 	db	4
   722  005A2E  04                 	db	4
   723  005A2F  08                 	db	8
   724  005A30  48                 	db	72
   725  005A31  54                 	db	84
   726  005A32  54                 	db	84
   727  005A33  54                 	db	84
   728  005A34  24                 	db	36
   729  005A35  04                 	db	4
   730  005A36  04                 	db	4
   731  005A37  3F                 	db	63
   732  005A38  44                 	db	68
   733  005A39  24                 	db	36
   734  005A3A  3C                 	db	60
   735  005A3B  40                 	db	64
   736  005A3C  40                 	db	64
   737  005A3D  20                 	db	32
   738  005A3E  7C                 	db	124
   739  005A3F  1C                 	db	28
   740  005A40  20                 	db	32
   741  005A41  40                 	db	64
   742  005A42  20                 	db	32
   743  005A43  1C                 	db	28
   744  005A44  3C                 	db	60
   745  005A45  40                 	db	64
   746  005A46  30                 	db	48
   747  005A47  40                 	db	64
   748  005A48  3C                 	db	60
   749  005A49  44                 	db	68
   750  005A4A  28                 	db	40
   751  005A4B  10                 	db	16
   752  005A4C  28                 	db	40
   753  005A4D  44                 	db	68
   754  005A4E  4C                 	db	76
   755  005A4F  90                 	db	144
   756  005A50  90                 	db	144
   757  005A51  90                 	db	144
   758  005A52  7C                 	db	124
   759  005A53  44                 	db	68
   760  005A54  64                 	db	100
   761  005A55  54                 	db	84
   762  005A56  4C                 	db	76
   763  005A57  44                 	db	68
   764  005A58  00                 	db	0
   765  005A59  08                 	db	8
   766  005A5A  36                 	db	54
   767  005A5B  41                 	db	65
   768  005A5C  00                 	db	0
   769  005A5D  00                 	db	0
   770  005A5E  00                 	db	0
   771  005A5F  77                 	db	119
   772  005A60  00                 	db	0
   773  005A61  00                 	db	0
   774  005A62  00                 	db	0
   775  005A63  41                 	db	65
   776  005A64  36                 	db	54
   777  005A65  08                 	db	8
   778  005A66  00                 	db	0
   779  005A67  02                 	db	2
   780  005A68  01                 	db	1
   781  005A69  02                 	db	2
   782  005A6A  04                 	db	4
   783  005A6B  02                 	db	2
   784  005A6C  3C                 	db	60
   785  005A6D  26                 	db	38
   786  005A6E  23                 	db	35
   787  005A6F  26                 	db	38
   788  005A70  3C                 	db	60
   789  005A71  1E                 	db	30
   790  005A72  A1                 	db	161
   791  005A73  A1                 	db	161
   792  005A74  61                 	db	97
   793  005A75  12                 	db	18
   794  005A76  3A                 	db	58
   795  005A77  40                 	db	64
   796  005A78  40                 	db	64
   797  005A79  20                 	db	32
   798  005A7A  7A                 	db	122
   799  005A7B  38                 	db	56
   800  005A7C  54                 	db	84
   801  005A7D  54                 	db	84
   802  005A7E  55                 	db	85
   803  005A7F  59                 	db	89
   804  005A80  21                 	db	33
   805  005A81  55                 	db	85
   806  005A82  55                 	db	85
   807  005A83  79                 	db	121
   808  005A84  41                 	db	65
   809  005A85  22                 	db	34
   810  005A86  54                 	db	84
   811  005A87  54                 	db	84
   812  005A88  78                 	db	120
   813  005A89  42                 	db	66
   814  005A8A  21                 	db	33
   815  005A8B  55                 	db	85
   816  005A8C  54                 	db	84
   817  005A8D  78                 	db	120
   818  005A8E  40                 	db	64
   819  005A8F  20                 	db	32
   820  005A90  54                 	db	84
   821  005A91  55                 	db	85
   822  005A92  79                 	db	121
   823  005A93  40                 	db	64
   824  005A94  0C                 	db	12
   825  005A95  1E                 	db	30
   826  005A96  52                 	db	82
   827  005A97  72                 	db	114
   828  005A98  12                 	db	18
   829  005A99  39                 	db	57
   830  005A9A  55                 	db	85
   831  005A9B  55                 	db	85
   832  005A9C  55                 	db	85
   833  005A9D  59                 	db	89
   834  005A9E  39                 	db	57
   835  005A9F  54                 	db	84
   836  005AA0  54                 	db	84
   837  005AA1  54                 	db	84
   838  005AA2  59                 	db	89
   839  005AA3  39                 	db	57
   840  005AA4  55                 	db	85
   841  005AA5  54                 	db	84
   842  005AA6  54                 	db	84
   843  005AA7  58                 	db	88
   844  005AA8  00                 	db	0
   845  005AA9  00                 	db	0
   846  005AAA  45                 	db	69
   847  005AAB  7C                 	db	124
   848  005AAC  41                 	db	65
   849  005AAD  00                 	db	0
   850  005AAE  02                 	db	2
   851  005AAF  45                 	db	69
   852  005AB0  7D                 	db	125
   853  005AB1  42                 	db	66
   854  005AB2  00                 	db	0
   855  005AB3  01                 	db	1
   856  005AB4  45                 	db	69
   857  005AB5  7C                 	db	124
   858  005AB6  40                 	db	64
   859  005AB7  7D                 	db	125
   860  005AB8  12                 	db	18
   861  005AB9  11                 	db	17
   862  005ABA  12                 	db	18
   863  005ABB  7D                 	db	125
   864  005ABC  F0                 	db	240
   865  005ABD  28                 	db	40
   866  005ABE  25                 	db	37
   867  005ABF  28                 	db	40
   868  005AC0  F0                 	db	240
   869  005AC1  7C                 	db	124
   870  005AC2  54                 	db	84
   871  005AC3  55                 	db	85
   872  005AC4  45                 	db	69
   873  005AC5  00                 	db	0
   874  005AC6  20                 	db	32
   875  005AC7  54                 	db	84
   876  005AC8  54                 	db	84
   877  005AC9  7C                 	db	124
   878  005ACA  54                 	db	84
   879  005ACB  7C                 	db	124
   880  005ACC  0A                 	db	10
   881  005ACD  09                 	db	9
   882  005ACE  7F                 	db	127
   883  005ACF  49                 	db	73
   884  005AD0  32                 	db	50
   885  005AD1  49                 	db	73
   886  005AD2  49                 	db	73
   887  005AD3  49                 	db	73
   888  005AD4  32                 	db	50
   889  005AD5  3A                 	db	58
   890  005AD6  44                 	db	68
   891  005AD7  44                 	db	68
   892  005AD8  44                 	db	68
   893  005AD9  3A                 	db	58
   894  005ADA  32                 	db	50
   895  005ADB  4A                 	db	74
   896  005ADC  48                 	db	72
   897  005ADD  48                 	db	72
   898  005ADE  30                 	db	48
   899  005ADF  3A                 	db	58
   900  005AE0  41                 	db	65
   901  005AE1  41                 	db	65
   902  005AE2  21                 	db	33
   903  005AE3  7A                 	db	122
   904  005AE4  3A                 	db	58
   905  005AE5  42                 	db	66
   906  005AE6  40                 	db	64
   907  005AE7  20                 	db	32
   908  005AE8  78                 	db	120
   909  005AE9  00                 	db	0
   910  005AEA  9D                 	db	157
   911  005AEB  A0                 	db	160
   912  005AEC  A0                 	db	160
   913  005AED  7D                 	db	125
   914  005AEE  3D                 	db	61
   915  005AEF  42                 	db	66
   916  005AF0  42                 	db	66
   917  005AF1  42                 	db	66
   918  005AF2  3D                 	db	61
   919  005AF3  3D                 	db	61
   920  005AF4  40                 	db	64
   921  005AF5  40                 	db	64
   922  005AF6  40                 	db	64
   923  005AF7  3D                 	db	61
   924  005AF8  3C                 	db	60
   925  005AF9  24                 	db	36
   926  005AFA  FF                 	db	255
   927  005AFB  24                 	db	36
   928  005AFC  24                 	db	36
   929  005AFD  48                 	db	72
   930  005AFE  7E                 	db	126
   931  005AFF  49                 	db	73
   932  005B00  43                 	db	67
   933  005B01  66                 	db	102
   934  005B02  2B                 	db	43
   935  005B03  2F                 	db	47
   936  005B04  FC                 	db	252
   937  005B05  2F                 	db	47
   938  005B06  2B                 	db	43
   939  005B07  FF                 	db	255
   940  005B08  09                 	db	9
   941  005B09  29                 	db	41
   942  005B0A  F6                 	db	246
   943  005B0B  20                 	db	32
   944  005B0C  C0                 	db	192
   945  005B0D  88                 	db	136
   946  005B0E  7E                 	db	126
   947  005B0F  09                 	db	9
   948  005B10  03                 	db	3
   949  005B11  20                 	db	32
   950  005B12  54                 	db	84
   951  005B13  54                 	db	84
   952  005B14  79                 	db	121
   953  005B15  41                 	db	65
   954  005B16  00                 	db	0
   955  005B17  00                 	db	0
   956  005B18  44                 	db	68
   957  005B19  7D                 	db	125
   958  005B1A  41                 	db	65
   959  005B1B  30                 	db	48
   960  005B1C  48                 	db	72
   961  005B1D  48                 	db	72
   962  005B1E  4A                 	db	74
   963  005B1F  32                 	db	50
   964  005B20  38                 	db	56
   965  005B21  40                 	db	64
   966  005B22  40                 	db	64
   967  005B23  22                 	db	34
   968  005B24  7A                 	db	122
   969  005B25  00                 	db	0
   970  005B26  7A                 	db	122
   971  005B27  0A                 	db	10
   972  005B28  0A                 	db	10
   973  005B29  72                 	db	114
   974  005B2A  7D                 	db	125
   975  005B2B  0D                 	db	13
   976  005B2C  19                 	db	25
   977  005B2D  31                 	db	49
   978  005B2E  7D                 	db	125
   979  005B2F  26                 	db	38
   980  005B30  29                 	db	41
   981  005B31  29                 	db	41
   982  005B32  2F                 	db	47
   983  005B33  28                 	db	40
   984  005B34  26                 	db	38
   985  005B35  29                 	db	41
   986  005B36  29                 	db	41
   987  005B37  29                 	db	41
   988  005B38  26                 	db	38
   989  005B39  30                 	db	48
   990  005B3A  48                 	db	72
   991  005B3B  4D                 	db	77
   992  005B3C  40                 	db	64
   993  005B3D  20                 	db	32
   994  005B3E  38                 	db	56
   995  005B3F  08                 	db	8
   996  005B40  08                 	db	8
   997  005B41  08                 	db	8
   998  005B42  08                 	db	8
   999  005B43  08                 	db	8
  1000  005B44  08                 	db	8
  1001  005B45  08                 	db	8
  1002  005B46  08                 	db	8
  1003  005B47  38                 	db	56
  1004  005B48  2F                 	db	47
  1005  005B49  10                 	db	16
  1006  005B4A  C8                 	db	200
  1007  005B4B  AC                 	db	172
  1008  005B4C  BA                 	db	186
  1009  005B4D  2F                 	db	47
  1010  005B4E  10                 	db	16
  1011  005B4F  28                 	db	40
  1012  005B50  34                 	db	52
  1013  005B51  FA                 	db	250
  1014  005B52  00                 	db	0
  1015  005B53  00                 	db	0
  1016  005B54  7B                 	db	123
  1017  005B55  00                 	db	0
  1018  005B56  00                 	db	0
  1019  005B57  08                 	db	8
  1020  005B58  14                 	db	20
  1021  005B59  2A                 	db	42
  1022  005B5A  14                 	db	20
  1023  005B5B  22                 	db	34
  1024  005B5C  22                 	db	34
  1025  005B5D  14                 	db	20
  1026  005B5E  2A                 	db	42
  1027  005B5F  14                 	db	20
  1028  005B60  08                 	db	8
  1029  005B61  55                 	db	85
  1030  005B62  00                 	db	0
  1031  005B63  55                 	db	85
  1032  005B64  00                 	db	0
  1033  005B65  55                 	db	85
  1034  005B66  AA                 	db	170
  1035  005B67  55                 	db	85
  1036  005B68  AA                 	db	170
  1037  005B69  55                 	db	85
  1038  005B6A  AA                 	db	170
  1039  005B6B  FF                 	db	255
  1040  005B6C  55                 	db	85
  1041  005B6D  FF                 	db	255
  1042  005B6E  55                 	db	85
  1043  005B6F  FF                 	db	255
  1044  005B70  00                 	db	0
  1045  005B71  00                 	db	0
  1046  005B72  00                 	db	0
  1047  005B73  FF                 	db	255
  1048  005B74  00                 	db	0
  1049  005B75  10                 	db	16
  1050  005B76  10                 	db	16
  1051  005B77  10                 	db	16
  1052  005B78  FF                 	db	255
  1053  005B79  00                 	db	0
  1054  005B7A  14                 	db	20
  1055  005B7B  14                 	db	20
  1056  005B7C  14                 	db	20
  1057  005B7D  FF                 	db	255
  1058  005B7E  00                 	db	0
  1059  005B7F  10                 	db	16
  1060  005B80  10                 	db	16
  1061  005B81  FF                 	db	255
  1062  005B82  00                 	db	0
  1063  005B83  FF                 	db	255
  1064  005B84  10                 	db	16
  1065  005B85  10                 	db	16
  1066  005B86  F0                 	db	240
  1067  005B87  10                 	db	16
  1068  005B88  F0                 	db	240
  1069  005B89  14                 	db	20
  1070  005B8A  14                 	db	20
  1071  005B8B  14                 	db	20
  1072  005B8C  FC                 	db	252
  1073  005B8D  00                 	db	0
  1074  005B8E  14                 	db	20
  1075  005B8F  14                 	db	20
  1076  005B90  F7                 	db	247
  1077  005B91  00                 	db	0
  1078  005B92  FF                 	db	255
  1079  005B93  00                 	db	0
  1080  005B94  00                 	db	0
  1081  005B95  FF                 	db	255
  1082  005B96  00                 	db	0
  1083  005B97  FF                 	db	255
  1084  005B98  14                 	db	20
  1085  005B99  14                 	db	20
  1086  005B9A  F4                 	db	244
  1087  005B9B  04                 	db	4
  1088  005B9C  FC                 	db	252
  1089  005B9D  14                 	db	20
  1090  005B9E  14                 	db	20
  1091  005B9F  17                 	db	23
  1092  005BA0  10                 	db	16
  1093  005BA1  1F                 	db	31
  1094  005BA2  10                 	db	16
  1095  005BA3  10                 	db	16
  1096  005BA4  1F                 	db	31
  1097  005BA5  10                 	db	16
  1098  005BA6  1F                 	db	31
  1099  005BA7  14                 	db	20
  1100  005BA8  14                 	db	20
  1101  005BA9  14                 	db	20
  1102  005BAA  1F                 	db	31
  1103  005BAB  00                 	db	0
  1104  005BAC  10                 	db	16
  1105  005BAD  10                 	db	16
  1106  005BAE  10                 	db	16
  1107  005BAF  F0                 	db	240
  1108  005BB0  00                 	db	0
  1109  005BB1  00                 	db	0
  1110  005BB2  00                 	db	0
  1111  005BB3  00                 	db	0
  1112  005BB4  1F                 	db	31
  1113  005BB5  10                 	db	16
  1114  005BB6  10                 	db	16
  1115  005BB7  10                 	db	16
  1116  005BB8  10                 	db	16
  1117  005BB9  1F                 	db	31
  1118  005BBA  10                 	db	16
  1119  005BBB  10                 	db	16
  1120  005BBC  10                 	db	16
  1121  005BBD  10                 	db	16
  1122  005BBE  F0                 	db	240
  1123  005BBF  10                 	db	16
  1124  005BC0  00                 	db	0
  1125  005BC1  00                 	db	0
  1126  005BC2  00                 	db	0
  1127  005BC3  FF                 	db	255
  1128  005BC4  10                 	db	16
  1129  005BC5  10                 	db	16
  1130  005BC6  10                 	db	16
  1131  005BC7  10                 	db	16
  1132  005BC8  10                 	db	16
  1133  005BC9  10                 	db	16
  1134  005BCA  10                 	db	16
  1135  005BCB  10                 	db	16
  1136  005BCC  10                 	db	16
  1137  005BCD  FF                 	db	255
  1138  005BCE  10                 	db	16
  1139  005BCF  00                 	db	0
  1140  005BD0  00                 	db	0
  1141  005BD1  00                 	db	0
  1142  005BD2  FF                 	db	255
  1143  005BD3  14                 	db	20
  1144  005BD4  00                 	db	0
  1145  005BD5  00                 	db	0
  1146  005BD6  FF                 	db	255
  1147  005BD7  00                 	db	0
  1148  005BD8  FF                 	db	255
  1149  005BD9  00                 	db	0
  1150  005BDA  00                 	db	0
  1151  005BDB  1F                 	db	31
  1152  005BDC  10                 	db	16
  1153  005BDD  17                 	db	23
  1154  005BDE  00                 	db	0
  1155  005BDF  00                 	db	0
  1156  005BE0  FC                 	db	252
  1157  005BE1  04                 	db	4
  1158  005BE2  F4                 	db	244
  1159  005BE3  14                 	db	20
  1160  005BE4  14                 	db	20
  1161  005BE5  17                 	db	23
  1162  005BE6  10                 	db	16
  1163  005BE7  17                 	db	23
  1164  005BE8  14                 	db	20
  1165  005BE9  14                 	db	20
  1166  005BEA  F4                 	db	244
  1167  005BEB  04                 	db	4
  1168  005BEC  F4                 	db	244
  1169  005BED  00                 	db	0
  1170  005BEE  00                 	db	0
  1171  005BEF  FF                 	db	255
  1172  005BF0  00                 	db	0
  1173  005BF1  F7                 	db	247
  1174  005BF2  14                 	db	20
  1175  005BF3  14                 	db	20
  1176  005BF4  14                 	db	20
  1177  005BF5  14                 	db	20
  1178  005BF6  14                 	db	20
  1179  005BF7  14                 	db	20
  1180  005BF8  14                 	db	20
  1181  005BF9  F7                 	db	247
  1182  005BFA  00                 	db	0
  1183  005BFB  F7                 	db	247
  1184  005BFC  14                 	db	20
  1185  005BFD  14                 	db	20
  1186  005BFE  14                 	db	20
  1187  005BFF  17                 	db	23
  1188  005C00  14                 	db	20
  1189  005C01  10                 	db	16
  1190  005C02  10                 	db	16
  1191  005C03  1F                 	db	31
  1192  005C04  10                 	db	16
  1193  005C05  1F                 	db	31
  1194  005C06  14                 	db	20
  1195  005C07  14                 	db	20
  1196  005C08  14                 	db	20
  1197  005C09  F4                 	db	244
  1198  005C0A  14                 	db	20
  1199  005C0B  10                 	db	16
  1200  005C0C  10                 	db	16
  1201  005C0D  F0                 	db	240
  1202  005C0E  10                 	db	16
  1203  005C0F  F0                 	db	240
  1204  005C10  00                 	db	0
  1205  005C11  00                 	db	0
  1206  005C12  1F                 	db	31
  1207  005C13  10                 	db	16
  1208  005C14  1F                 	db	31
  1209  005C15  00                 	db	0
  1210  005C16  00                 	db	0
  1211  005C17  00                 	db	0
  1212  005C18  1F                 	db	31
  1213  005C19  14                 	db	20
  1214  005C1A  00                 	db	0
  1215  005C1B  00                 	db	0
  1216  005C1C  00                 	db	0
  1217  005C1D  FC                 	db	252
  1218  005C1E  14                 	db	20
  1219  005C1F  00                 	db	0
  1220  005C20  00                 	db	0
  1221  005C21  F0                 	db	240
  1222  005C22  10                 	db	16
  1223  005C23  F0                 	db	240
  1224  005C24  10                 	db	16
  1225  005C25  10                 	db	16
  1226  005C26  FF                 	db	255
  1227  005C27  10                 	db	16
  1228  005C28  FF                 	db	255
  1229  005C29  14                 	db	20
  1230  005C2A  14                 	db	20
  1231  005C2B  14                 	db	20
  1232  005C2C  FF                 	db	255
  1233  005C2D  14                 	db	20
  1234  005C2E  10                 	db	16
  1235  005C2F  10                 	db	16
  1236  005C30  10                 	db	16
  1237  005C31  1F                 	db	31
  1238  005C32  00                 	db	0
  1239  005C33  00                 	db	0
  1240  005C34  00                 	db	0
  1241  005C35  00                 	db	0
  1242  005C36  F0                 	db	240
  1243  005C37  10                 	db	16
  1244  005C38  FF                 	db	255
  1245  005C39  FF                 	db	255
  1246  005C3A  FF                 	db	255
  1247  005C3B  FF                 	db	255
  1248  005C3C  FF                 	db	255
  1249  005C3D  F0                 	db	240
  1250  005C3E  F0                 	db	240
  1251  005C3F  F0                 	db	240
  1252  005C40  F0                 	db	240
  1253  005C41  F0                 	db	240
  1254  005C42  FF                 	db	255
  1255  005C43  FF                 	db	255
  1256  005C44  FF                 	db	255
  1257  005C45  00                 	db	0
  1258  005C46  00                 	db	0
  1259  005C47  00                 	db	0
  1260  005C48  00                 	db	0
  1261  005C49  00                 	db	0
  1262  005C4A  FF                 	db	255
  1263  005C4B  FF                 	db	255
  1264  005C4C  0F                 	db	15
  1265  005C4D  0F                 	db	15
  1266  005C4E  0F                 	db	15
  1267  005C4F  0F                 	db	15
  1268  005C50  0F                 	db	15
  1269  005C51  38                 	db	56
  1270  005C52  44                 	db	68
  1271  005C53  44                 	db	68
  1272  005C54  38                 	db	56
  1273  005C55  44                 	db	68
  1274  005C56  FC                 	db	252
  1275  005C57  4A                 	db	74
  1276  005C58  4A                 	db	74
  1277  005C59  4A                 	db	74
  1278  005C5A  34                 	db	52
  1279  005C5B  7E                 	db	126
  1280  005C5C  02                 	db	2
  1281  005C5D  02                 	db	2
  1282  005C5E  06                 	db	6
  1283  005C5F  06                 	db	6
  1284  005C60  02                 	db	2
  1285  005C61  7E                 	db	126
  1286  005C62  02                 	db	2
  1287  005C63  7E                 	db	126
  1288  005C64  02                 	db	2
  1289  005C65  63                 	db	99
  1290  005C66  55                 	db	85
  1291  005C67  49                 	db	73
  1292  005C68  41                 	db	65
  1293  005C69  63                 	db	99
  1294  005C6A  38                 	db	56
  1295  005C6B  44                 	db	68
  1296  005C6C  44                 	db	68
  1297  005C6D  3C                 	db	60
  1298  005C6E  04                 	db	4
  1299  005C6F  40                 	db	64
  1300  005C70  7E                 	db	126
  1301  005C71  20                 	db	32
  1302  005C72  1E                 	db	30
  1303  005C73  20                 	db	32
  1304  005C74  06                 	db	6
  1305  005C75  02                 	db	2
  1306  005C76  7E                 	db	126
  1307  005C77  02                 	db	2
  1308  005C78  02                 	db	2
  1309  005C79  99                 	db	153
  1310  005C7A  A5                 	db	165
  1311  005C7B  E7                 	db	231
  1312  005C7C  A5                 	db	165
  1313  005C7D  99                 	db	153
  1314  005C7E  1C                 	db	28
  1315  005C7F  2A                 	db	42
  1316  005C80  49                 	db	73
  1317  005C81  2A                 	db	42
  1318  005C82  1C                 	db	28
  1319  005C83  4C                 	db	76
  1320  005C84  72                 	db	114
  1321  005C85  01                 	db	1
  1322  005C86  72                 	db	114
  1323  005C87  4C                 	db	76
  1324  005C88  30                 	db	48
  1325  005C89  4A                 	db	74
  1326  005C8A  4D                 	db	77
  1327  005C8B  4D                 	db	77
  1328  005C8C  30                 	db	48
  1329  005C8D  30                 	db	48
  1330  005C8E  48                 	db	72
  1331  005C8F  78                 	db	120
  1332  005C90  48                 	db	72
  1333  005C91  30                 	db	48
  1334  005C92  BC                 	db	188
  1335  005C93  62                 	db	98
  1336  005C94  5A                 	db	90
  1337  005C95  46                 	db	70
  1338  005C96  3D                 	db	61
  1339  005C97  3E                 	db	62
  1340  005C98  49                 	db	73
  1341  005C99  49                 	db	73
  1342  005C9A  49                 	db	73
  1343  005C9B  00                 	db	0
  1344  005C9C  7E                 	db	126
  1345  005C9D  01                 	db	1
  1346  005C9E  01                 	db	1
  1347  005C9F  01                 	db	1
  1348  005CA0  7E                 	db	126
  1349  005CA1  2A                 	db	42
  1350  005CA2  2A                 	db	42
  1351  005CA3  2A                 	db	42
  1352  005CA4  2A                 	db	42
  1353  005CA5  2A                 	db	42
  1354  005CA6  44                 	db	68
  1355  005CA7  44                 	db	68
  1356  005CA8  5F                 	db	95
  1357  005CA9  44                 	db	68
  1358  005CAA  44                 	db	68
  1359  005CAB  40                 	db	64
  1360  005CAC  51                 	db	81
  1361  005CAD  4A                 	db	74
  1362  005CAE  44                 	db	68
  1363  005CAF  40                 	db	64
  1364  005CB0  40                 	db	64
  1365  005CB1  44                 	db	68
  1366  005CB2  4A                 	db	74
  1367  005CB3  51                 	db	81
  1368  005CB4  40                 	db	64
  1369  005CB5  00                 	db	0
  1370  005CB6  00                 	db	0
  1371  005CB7  FF                 	db	255
  1372  005CB8  01                 	db	1
  1373  005CB9  03                 	db	3
  1374  005CBA  E0                 	db	224
  1375  005CBB  80                 	db	128
  1376  005CBC  FF                 	db	255
  1377  005CBD  00                 	db	0
  1378  005CBE  00                 	db	0
  1379  005CBF  08                 	db	8
  1380  005CC0  08                 	db	8
  1381  005CC1  6B                 	db	107
  1382  005CC2  6B                 	db	107
  1383  005CC3  08                 	db	8
  1384  005CC4  36                 	db	54
  1385  005CC5  12                 	db	18
  1386  005CC6  36                 	db	54
  1387  005CC7  24                 	db	36
  1388  005CC8  36                 	db	54
  1389  005CC9  06                 	db	6
  1390  005CCA  0F                 	db	15
  1391  005CCB  09                 	db	9
  1392  005CCC  0F                 	db	15
  1393  005CCD  06                 	db	6
  1394  005CCE  00                 	db	0
  1395  005CCF  00                 	db	0
  1396  005CD0  18                 	db	24
  1397  005CD1  18                 	db	24
  1398  005CD2  00                 	db	0
  1399  005CD3  00                 	db	0
  1400  005CD4  00                 	db	0
  1401  005CD5  10                 	db	16
  1402  005CD6  10                 	db	16
  1403  005CD7  00                 	db	0
  1404  005CD8  30                 	db	48
  1405  005CD9  40                 	db	64
  1406  005CDA  FF                 	db	255
  1407  005CDB  01                 	db	1
  1408  005CDC  01                 	db	1
  1409  005CDD  00                 	db	0
  1410  005CDE  1F                 	db	31
  1411  005CDF  01                 	db	1
  1412  005CE0  01                 	db	1
  1413  005CE1  1E                 	db	30
  1414  005CE2  00                 	db	0
  1415  005CE3  19                 	db	25
  1416  005CE4  1D                 	db	29
  1417  005CE5  17                 	db	23
  1418  005CE6  12                 	db	18
  1419  005CE7  00                 	db	0
  1420  005CE8  3C                 	db	60
  1421  005CE9  3C                 	db	60
  1422  005CEA  3C                 	db	60
  1423  005CEB  3C                 	db	60
  1424  005CEC  00                 	db	0
  1425  005CED  00                 	db	0
  1426  005CEE  00                 	db	0
  1427  005CEF  00                 	db	0
  1428  005CF0  00                 	db	0
  1429  005CF1                     __end_of_TFT_Font:
  1430                           	opt callstack 0
  1431  005CF1                     _TFT_Init_Sequence:
  1432                           	opt callstack 0
  1433  005CF1  0702               	dw	1794
  1434  005CF3  3008               	dw	12296
  1435  005CF5  0705               	dw	1797
  1436  005CF7  0036               	dw	54
  1437  005CF9  070B               	dw	1803
  1438  005CFB  1213               	dw	4627
  1439  005CFD  0001               	dw	1
  1440  005CFF  0100               	dw	256
  1441  005D01  0002               	dw	2
  1442  005D03  0100               	dw	256
  1443  005D05  0003               	dw	3
  1444  005D07  1030               	dw	4144
  1445  005D09  0008               	dw	8
  1446  005D0B  0202               	dw	514
  1447  005D0D  0009               	dw	9
  1448  005D0F  0000               	dw	0
  1449  005D11  000C               	dw	12
  1450  005D13  0000               	dw	0
  1451  005D15  000F               	dw	15
  1452  005D17  0000               	dw	0
  1453  005D19  0100               	dw	256
  1454  005D1B  0000               	dw	0
  1455  005D1D  0102               	dw	258
  1456  005D1F  0000               	dw	0
  1457  005D21  0103               	dw	259
  1458  005D23  0000               	dw	0
  1459  005D25  FFFF               	dw	65535
  1460  005D27  0001               	dw	1
  1461  005D29  0100               	dw	256
  1462  005D2B  1190               	dw	4496
  1463  005D2D  0101               	dw	257
  1464  005D2F  0227               	dw	551
  1465  005D31  FFFF               	dw	65535
  1466  005D33  0001               	dw	1
  1467  005D35  0102               	dw	258
  1468  005D37  01BD               	dw	445
  1469  005D39  FFFF               	dw	65535
  1470  005D3B  0001               	dw	1
  1471  005D3D  0103               	dw	259
  1472  005D3F  2D00               	dw	11520
  1473  005D41  0281               	dw	641
  1474  005D43  000E               	dw	14
  1475  005D45  FFFF               	dw	65535
  1476  005D47  0001               	dw	1
  1477  005D49  0200               	dw	512
  1478  005D4B  0000               	dw	0
  1479  005D4D  0201               	dw	513
  1480  005D4F  0000               	dw	0
  1481  005D51  0300               	dw	768
  1482  005D53  0000               	dw	0
  1483  005D55  0301               	dw	769
  1484  005D57  0707               	dw	1799
  1485  005D59  0302               	dw	770
  1486  005D5B  0606               	dw	1542
  1487  005D5D  0305               	dw	773
  1488  005D5F  0000               	dw	0
  1489  005D61  0306               	dw	774
  1490  005D63  0D00               	dw	3328
  1491  005D65  0307               	dw	775
  1492  005D67  0706               	dw	1798
  1493  005D69  0308               	dw	776
  1494  005D6B  0005               	dw	5
  1495  005D6D  0309               	dw	777
  1496  005D6F  0007               	dw	7
  1497  005D71  030C               	dw	780
  1498  005D73  0000               	dw	0
  1499  005D75  030D               	dw	781
  1500  005D77  000A               	dw	10
  1501  005D79  0210               	dw	528
  1502  005D7B  0000               	dw	0
  1503  005D7D  0211               	dw	529
  1504  005D7F  00EF               	dw	239
  1505  005D81  0212               	dw	530
  1506  005D83  0000               	dw	0
  1507  005D85  0213               	dw	531
  1508  005D87  018F               	dw	399
  1509  005D89  0400               	dw	1024
  1510  005D8B  3100               	dw	12544
  1511  005D8D  0401               	dw	1025
  1512  005D8F  0001               	dw	1
  1513  005D91  0404               	dw	1028
  1514  005D93  0000               	dw	0
  1515  005D95  0500               	dw	1280
  1516  005D97  0000               	dw	0
  1517  005D99  0501               	dw	1281
  1518  005D9B  0000               	dw	0
  1519  005D9D  0502               	dw	1282
  1520  005D9F  0000               	dw	0
  1521  005DA1  0503               	dw	1283
  1522  005DA3  0000               	dw	0
  1523  005DA5  0504               	dw	1284
  1524  005DA7  0000               	dw	0
  1525  005DA9  0505               	dw	1285
  1526  005DAB  0000               	dw	0
  1527  005DAD  0010               	dw	16
  1528  005DAF  0010               	dw	16
  1529  005DB1  0011               	dw	17
  1530  005DB3  0600               	dw	1536
  1531  005DB5  0020               	dw	32
  1532  005DB7  0002               	dw	2
  1533  005DB9  0007               	dw	7
  1534  005DBB  0173               	dw	371
  1535  005DBD                     __end_of_TFT_Init_Sequence:
  1536                           	opt callstack 0
  1537  005DBD                     _dpowers:
  1538                           	opt callstack 0
  1539  005DBD  0001               	dw	1
  1540  005DBF  0000               	dw	0
  1541  005DC1  000A               	dw	10
  1542  005DC3  0000               	dw	0
  1543  005DC5  0064               	dw	100
  1544  005DC7  0000               	dw	0
  1545  005DC9  03E8               	dw	1000
  1546  005DCB  0000               	dw	0
  1547  005DCD  2710               	dw	10000
  1548  005DCF  0000               	dw	0
  1549  005DD1  86A0               	dw	34464
  1550  005DD3  0001               	dw	1
  1551  005DD5  4240               	dw	16960
  1552  005DD7  000F               	dw	15
  1553  005DD9  9680               	dw	38528
  1554  005DDB  0098               	dw	152
  1555  005DDD  E100               	dw	57600
  1556  005DDF  05F5               	dw	1525
  1557  005DE1  CA00               	dw	51712
  1558  005DE3  3B9A               	dw	15258
  1559  005DE5                     __end_of_dpowers:
  1560                           	opt callstack 0
  1561  005DE5                     _A6_BAUDRATES:
  1562                           	opt callstack 0
  1563  005DE5  2580               	dw	9600
  1564  005DE7  0000               	dw	0
  1565  005DE9  E100               	dw	57600
  1566  005DEB  0000               	dw	0
  1567  005DED  C200               	dw	49664
  1568  005DEF  0001               	dw	1
  1569  005DF1                     __end_of_A6_BAUDRATES:
  1570                           	opt callstack 0
  1571  005DF1                     _ECG_ICON_HEART:
  1572                           	opt callstack 0
  1573  005DF1  14                 	db	20
  1574  005DF2  14                 	db	20
  1575  005DF3  00                 	db	0
  1576  005DF4  00                 	db	0
  1577  005DF5  00                 	db	0
  1578  005DF6  00                 	db	0
  1579  005DF7  00                 	db	0
  1580  005DF8  00                 	db	0
  1581  005DF9  F8                 	db	248
  1582  005DFA  F0                 	db	240
  1583  005DFB  01                 	db	1
  1584  005DFC  FC                 	db	252
  1585  005DFD  F9                 	db	249
  1586  005DFE  03                 	db	3
  1587  005DFF  FC                 	db	252
  1588  005E00  FF                 	db	255
  1589  005E01  03                 	db	3
  1590  005E02  FE                 	db	254
  1591  005E03  FF                 	db	255
  1592  005E04  07                 	db	7
  1593  005E05  FE                 	db	254
  1594  005E06  FF                 	db	255
  1595  005E07  07                 	db	7
  1596  005E08  FE                 	db	254
  1597  005E09  FF                 	db	255
  1598  005E0A  07                 	db	7
  1599  005E0B  FE                 	db	254
  1600  005E0C  FF                 	db	255
  1601  005E0D  07                 	db	7
  1602  005E0E  FC                 	db	252
  1603  005E0F  FF                 	db	255
  1604  005E10  03                 	db	3
  1605  005E11  FC                 	db	252
  1606  005E12  FF                 	db	255
  1607  005E13  03                 	db	3
  1608  005E14  F8                 	db	248
  1609  005E15  FF                 	db	255
  1610  005E16  01                 	db	1
  1611  005E17  F0                 	db	240
  1612  005E18  FF                 	db	255
  1613  005E19  00                 	db	0
  1614  005E1A  E0                 	db	224
  1615  005E1B  7F                 	db	127
  1616  005E1C  00                 	db	0
  1617  005E1D  C0                 	db	192
  1618  005E1E  3F                 	db	63
  1619  005E1F  00                 	db	0
  1620  005E20  80                 	db	128
  1621  005E21  1F                 	db	31
  1622  005E22  00                 	db	0
  1623  005E23  00                 	db	0
  1624  005E24  0F                 	db	15
  1625  005E25  00                 	db	0
  1626  005E26  00                 	db	0
  1627  005E27  06                 	db	6
  1628  005E28  00                 	db	0
  1629  005E29  00                 	db	0
  1630  005E2A  00                 	db	0
  1631  005E2B  00                 	db	0
  1632  005E2C  00                 	db	0
  1633  005E2D  00                 	db	0
  1634  005E2E  00                 	db	0
  1635  005E2F                     __end_of_ECG_ICON_HEART:
  1636                           	opt callstack 0
  1637  0000                     _RCREG	set	4014
  1638  0000                     _TXREG	set	4013
  1639  0000                     _SPBRG	set	4015
  1640  0000                     _SPBRGH	set	4016
  1641  0000                     _BAUDCONbits	set	4024
  1642  0000                     _RCSTAbits	set	4011
  1643  0000                     _TXSTAbits	set	4012
  1644  0000                     _ADRESL	set	4035
  1645  0000                     _ADRESH	set	4036
  1646  0000                     _PORTAbits	set	3968
  1647  0000                     _PORTB	set	3969
  1648  0000                     _PORTCbits	set	3970
  1649  0000                     _TMR3L	set	4018
  1650  0000                     _TMR3H	set	4019
  1651  0000                     _T3CONbits	set	4017
  1652  0000                     _ADCON2bits	set	4032
  1653  0000                     _ADCON1bits	set	4033
  1654  0000                     _ADCON0bits	set	4034
  1655  0000                     _LATC	set	3979
  1656  0000                     _TRISC	set	3988
  1657  0000                     _LATB	set	3978
  1658  0000                     _TRISB	set	3987
  1659  0000                     _LATA	set	3977
  1660  0000                     _TRISA	set	3986
  1661  0000                     _UCFGbits	set	3951
  1662  0000                     _UCONbits	set	3949
  1663  0000                     _OSCTUNEbits	set	3995
  1664  0000                     _OSCCONbits	set	4051
  1665  0000                     _CREN	set	32092
  1666  0000                     _OERR	set	32089
  1667  0000                     _TXIF	set	31988
  1668  0000                     _GO_nDONE	set	32273
  1669  0000                     _RCIF	set	31989
  1670  0000                     _RCIE	set	31981
  1671  0000                     _TMR3IF	set	32009
  1672  0000                     _GIE	set	32663
  1673  0000                     _PEIE	set	32662
  1674  0000                     _TMR3IE	set	32001
  1675  0000                     _RBPU	set	32655
  1676  005E2F                     STR_2:
  1677                           
  1678                           ; BSR set to: 2
  1679  005E2F  49                 	db	73	;'I'
  1680  005E30  6E                 	db	110	;'n'
  1681  005E31  76                 	db	118	;'v'
  1682  005E32  61                 	db	97	;'a'
  1683  005E33  6C                 	db	108	;'l'
  1684  005E34  69                 	db	105	;'i'
  1685  005E35  64                 	db	100	;'d'
  1686  005E36  20                 	db	32
  1687  005E37  63                 	db	99	;'c'
  1688  005E38  75                 	db	117	;'u'
  1689  005E39  72                 	db	114	;'r'
  1690  005E3A  72                 	db	114	;'r'
  1691  005E3B  65                 	db	101	;'e'
  1692  005E3C  6E                 	db	110	;'n'
  1693  005E3D  74                 	db	116	;'t'
  1694  005E3E  20                 	db	32
  1695  005E3F  62                 	db	98	;'b'
  1696  005E40  61                 	db	97	;'a'
  1697  005E41  75                 	db	117	;'u'
  1698  005E42  64                 	db	100	;'d'
  1699  005E43  20                 	db	32
  1700  005E44  72                 	db	114	;'r'
  1701  005E45  61                 	db	97	;'a'
  1702  005E46  74                 	db	116	;'t'
  1703  005E47  65                 	db	101	;'e'
  1704  005E48  20                 	db	32
  1705  005E49  28                 	db	40
  1706  005E4A  25                 	db	37
  1707  005E4B  6C                 	db	108	;'l'
  1708  005E4C  75                 	db	117	;'u'
  1709  005E4D  29                 	db	41
  1710  005E4E  00                 	db	0
  1711  005E4F                     STR_21:
  1712                           
  1713                           ; BSR set to: 2
  1714  005E4F  2A                 	db	42
  1715  005E50  2A                 	db	42
  1716  005E51  2A                 	db	42
  1717  005E52  20                 	db	32
  1718  005E53  43                 	db	67	;'C'
  1719  005E54  6F                 	db	111	;'o'
  1720  005E55  6C                 	db	108	;'l'
  1721  005E56  6C                 	db	108	;'l'
  1722  005E57  65                 	db	101	;'e'
  1723  005E58  67                 	db	103	;'g'
  1724  005E59  61                 	db	97	;'a'
  1725  005E5A  72                 	db	114	;'r'
  1726  005E5B  65                 	db	101	;'e'
  1727  005E5C  20                 	db	32
  1728  005E5D  65                 	db	101	;'e'
  1729  005E5E  6C                 	db	108	;'l'
  1730  005E5F  65                 	db	101	;'e'
  1731  005E60  74                 	db	116	;'t'
  1732  005E61  74                 	db	116	;'t'
  1733  005E62  72                 	db	114	;'r'
  1734  005E63  6F                 	db	111	;'o'
  1735  005E64  64                 	db	100	;'d'
  1736  005E65  69                 	db	105	;'i'
  1737  005E66  20                 	db	32
  1738  005E67  2A                 	db	42
  1739  005E68  2A                 	db	42
  1740  005E69  2A                 	db	42
  1741  005E6A  00                 	db	0
  1742  005E6B                     STR_3:
  1743                           
  1744                           ; BSR set to: 2
  1745  005E6B  42                 	db	66	;'B'
  1746  005E6C  61                 	db	97	;'a'
  1747  005E6D  75                 	db	117	;'u'
  1748  005E6E  64                 	db	100	;'d'
  1749  005E6F  20                 	db	32
  1750  005E70  72                 	db	114	;'r'
  1751  005E71  61                 	db	97	;'a'
  1752  005E72  74                 	db	116	;'t'
  1753  005E73  65                 	db	101	;'e'
  1754  005E74  20                 	db	32
  1755  005E75  63                 	db	99	;'c'
  1756  005E76  68                 	db	104	;'h'
  1757  005E77  61                 	db	97	;'a'
  1758  005E78  6E                 	db	110	;'n'
  1759  005E79  67                 	db	103	;'g'
  1760  005E7A  65                 	db	101	;'e'
  1761  005E7B  64                 	db	100	;'d'
  1762  005E7C  20                 	db	32
  1763  005E7D  28                 	db	40
  1764  005E7E  2D                 	db	45
  1765  005E7F  3E                 	db	62	;'>'
  1766  005E80  20                 	db	32
  1767  005E81  25                 	db	37
  1768  005E82  6C                 	db	108	;'l'
  1769  005E83  75                 	db	117	;'u'
  1770  005E84  29                 	db	41
  1771  005E85  00                 	db	0
  1772  005E86                     STR_14:
  1773                           
  1774                           ; BSR set to: 2
  1775  005E86  43                 	db	67	;'C'
  1776  005E87  68                 	db	104	;'h'
  1777  005E88  65                 	db	101	;'e'
  1778  005E89  63                 	db	99	;'c'
  1779  005E8A  6B                 	db	107	;'k'
  1780  005E8B  20                 	db	32
  1781  005E8C  6E                 	db	110	;'n'
  1782  005E8D  65                 	db	101	;'e'
  1783  005E8E  74                 	db	116	;'t'
  1784  005E8F  77                 	db	119	;'w'
  1785  005E90  6F                 	db	111	;'o'
  1786  005E91  72                 	db	114	;'r'
  1787  005E92  6B                 	db	107	;'k'
  1788  005E93  20                 	db	32
  1789  005E94  72                 	db	114	;'r'
  1790  005E95  65                 	db	101	;'e'
  1791  005E96  67                 	db	103	;'g'
  1792  005E97  69                 	db	105	;'i'
  1793  005E98  73                 	db	115	;'s'
  1794  005E99  74                 	db	116	;'t'
  1795  005E9A  72                 	db	114	;'r'
  1796  005E9B  61                 	db	97	;'a'
  1797  005E9C  74                 	db	116	;'t'
  1798  005E9D  69                 	db	105	;'i'
  1799  005E9E  6F                 	db	111	;'o'
  1800  005E9F  6E                 	db	110	;'n'
  1801  005EA0  00                 	db	0
  1802  005EA1                     STR_4:
  1803                           
  1804                           ; BSR set to: 2
  1805  005EA1  45                 	db	69	;'E'
  1806  005EA2  72                 	db	114	;'r'
  1807  005EA3  72                 	db	114	;'r'
  1808  005EA4  6F                 	db	111	;'o'
  1809  005EA5  72                 	db	114	;'r'
  1810  005EA6  20                 	db	32
  1811  005EA7  63                 	db	99	;'c'
  1812  005EA8  68                 	db	104	;'h'
  1813  005EA9  61                 	db	97	;'a'
  1814  005EAA  6E                 	db	110	;'n'
  1815  005EAB  67                 	db	103	;'g'
  1816  005EAC  69                 	db	105	;'i'
  1817  005EAD  6E                 	db	110	;'n'
  1818  005EAE  67                 	db	103	;'g'
  1819  005EAF  20                 	db	32
  1820  005EB0  62                 	db	98	;'b'
  1821  005EB1  61                 	db	97	;'a'
  1822  005EB2  75                 	db	117	;'u'
  1823  005EB3  64                 	db	100	;'d'
  1824  005EB4  20                 	db	32
  1825  005EB5  72                 	db	114	;'r'
  1826  005EB6  61                 	db	97	;'a'
  1827  005EB7  74                 	db	116	;'t'
  1828  005EB8  65                 	db	101	;'e'
  1829  005EB9  00                 	db	0
  1830  005EBA                     STR_15:
  1831                           
  1832                           ; BSR set to: 2
  1833  005EBA  4E                 	db	78	;'N'
  1834  005EBB  65                 	db	101	;'e'
  1835  005EBC  74                 	db	116	;'t'
  1836  005EBD  77                 	db	119	;'w'
  1837  005EBE  6F                 	db	111	;'o'
  1838  005EBF  72                 	db	114	;'r'
  1839  005EC0  6B                 	db	107	;'k'
  1840  005EC1  20                 	db	32
  1841  005EC2  73                 	db	115	;'s'
  1842  005EC3  74                 	db	116	;'t'
  1843  005EC4  61                 	db	97	;'a'
  1844  005EC5  74                 	db	116	;'t'
  1845  005EC6  75                 	db	117	;'u'
  1846  005EC7  73                 	db	115	;'s'
  1847  005EC8  3A                 	db	58	;':'
  1848  005EC9  20                 	db	32
  1849  005ECA  25                 	db	37
  1850  005ECB  75                 	db	117	;'u'
  1851  005ECC  20                 	db	32
  1852  005ECD  28                 	db	40
  1853  005ECE  25                 	db	37
  1854  005ECF  73                 	db	115	;'s'
  1855  005ED0  29                 	db	41
  1856  005ED1  00                 	db	0
  1857  005ED2                     STR_29:
  1858                           
  1859                           ; BSR set to: 2
  1860  005ED2  44                 	db	68	;'D'
  1861  005ED3  65                 	db	101	;'e'
  1862  005ED4  74                 	db	116	;'t'
  1863  005ED5  65                 	db	101	;'e'
  1864  005ED6  63                 	db	99	;'c'
  1865  005ED7  74                 	db	116	;'t'
  1866  005ED8  69                 	db	105	;'i'
  1867  005ED9  6E                 	db	110	;'n'
  1868  005EDA  67                 	db	103	;'g'
  1869  005EDB  20                 	db	32
  1870  005EDC  62                 	db	98	;'b'
  1871  005EDD  61                 	db	97	;'a'
  1872  005EDE  75                 	db	117	;'u'
  1873  005EDF  64                 	db	100	;'d'
  1874  005EE0  20                 	db	32
  1875  005EE1  72                 	db	114	;'r'
  1876  005EE2  61                 	db	97	;'a'
  1877  005EE3  74                 	db	116	;'t'
  1878  005EE4  65                 	db	101	;'e'
  1879  005EE5  2E                 	db	46
  1880  005EE6  2E                 	db	46
  1881  005EE7  2E                 	db	46
  1882  005EE8  00                 	db	0
  1883  005EE9                     STR_1:
  1884                           
  1885                           ; BSR set to: 2
  1886  005EE9  43                 	db	67	;'C'
  1887  005EEA  68                 	db	104	;'h'
  1888  005EEB  61                 	db	97	;'a'
  1889  005EEC  6E                 	db	110	;'n'
  1890  005EED  67                 	db	103	;'g'
  1891  005EEE  65                 	db	101	;'e'
  1892  005EEF  20                 	db	32
  1893  005EF0  62                 	db	98	;'b'
  1894  005EF1  61                 	db	97	;'a'
  1895  005EF2  75                 	db	117	;'u'
  1896  005EF3  64                 	db	100	;'d'
  1897  005EF4  20                 	db	32
  1898  005EF5  72                 	db	114	;'r'
  1899  005EF6  61                 	db	97	;'a'
  1900  005EF7  74                 	db	116	;'t'
  1901  005EF8  65                 	db	101	;'e'
  1902  005EF9  20                 	db	32
  1903  005EFA  28                 	db	40
  1904  005EFB  25                 	db	37
  1905  005EFC  6C                 	db	108	;'l'
  1906  005EFD  75                 	db	117	;'u'
  1907  005EFE  29                 	db	41
  1908  005EFF  00                 	db	0
  1909  005F00                     STR_5:
  1910                           
  1911                           ; BSR set to: 2
  1912  005F00  43                 	db	67	;'C'
  1913  005F01  6F                 	db	111	;'o'
  1914  005F02  6D                 	db	109	;'m'
  1915  005F03  6D                 	db	109	;'m'
  1916  005F04  20                 	db	32
  1917  005F05  69                 	db	105	;'i'
  1918  005F06  73                 	db	115	;'s'
  1919  005F07  20                 	db	32
  1920  005F08  64                 	db	100	;'d'
  1921  005F09  65                 	db	101	;'e'
  1922  005F0A  61                 	db	97	;'a'
  1923  005F0B  64                 	db	100	;'d'
  1924  005F0C  2E                 	db	46
  1925  005F0D  20                 	db	32
  1926  005F0E  52                 	db	82	;'R'
  1927  005F0F  65                 	db	101	;'e'
  1928  005F10  74                 	db	116	;'t'
  1929  005F11  72                 	db	114	;'r'
  1930  005F12  79                 	db	121	;'y'
  1931  005F13  2E                 	db	46
  1932  005F14  2E                 	db	46
  1933  005F15  2E                 	db	46
  1934  005F16  00                 	db	0
  1935  005F17                     STR_13:
  1936                           
  1937                           ; BSR set to: 2
  1938  005F17  51                 	db	81	;'Q'
  1939  005F18  75                 	db	117	;'u'
  1940  005F19  61                 	db	97	;'a'
  1941  005F1A  6C                 	db	108	;'l'
  1942  005F1B  69                 	db	105	;'i'
  1943  005F1C  74                 	db	116	;'t'
  1944  005F1D  79                 	db	121	;'y'
  1945  005F1E  3A                 	db	58	;':'
  1946  005F1F  20                 	db	32
  1947  005F20  25                 	db	37
  1948  005F21  75                 	db	117	;'u'
  1949  005F22  3B                 	db	59	;';'
  1950  005F23  20                 	db	32
  1951  005F24  4C                 	db	76	;'L'
  1952  005F25  65                 	db	101	;'e'
  1953  005F26  76                 	db	118	;'v'
  1954  005F27  65                 	db	101	;'e'
  1955  005F28  6C                 	db	108	;'l'
  1956  005F29  3A                 	db	58	;':'
  1957  005F2A  20                 	db	32
  1958  005F2B  25                 	db	37
  1959  005F2C  64                 	db	100	;'d'
  1960  005F2D  00                 	db	0
  1961  005F2E                     STR_10:
  1962                           
  1963                           ; BSR set to: 2
  1964  005F2E  43                 	db	67	;'C'
  1965  005F2F  68                 	db	104	;'h'
  1966  005F30  65                 	db	101	;'e'
  1967  005F31  63                 	db	99	;'c'
  1968  005F32  6B                 	db	107	;'k'
  1969  005F33  20                 	db	32
  1970  005F34  62                 	db	98	;'b'
  1971  005F35  61                 	db	97	;'a'
  1972  005F36  75                 	db	117	;'u'
  1973  005F37  64                 	db	100	;'d'
  1974  005F38  20                 	db	32
  1975  005F39  72                 	db	114	;'r'
  1976  005F3A  61                 	db	97	;'a'
  1977  005F3B  74                 	db	116	;'t'
  1978  005F3C  65                 	db	101	;'e'
  1979  005F3D  00                 	db	0
  1980  005F3E                     STR_7:
  1981                           
  1982                           ; BSR set to: 2
  1983  005F3E  52                 	db	82	;'R'
  1984  005F3F  65                 	db	101	;'e'
  1985  005F40  73                 	db	115	;'s'
  1986  005F41  75                 	db	117	;'u'
  1987  005F42  72                 	db	114	;'r'
  1988  005F43  72                 	db	114	;'r'
  1989  005F44  65                 	db	101	;'e'
  1990  005F45  63                 	db	99	;'c'
  1991  005F46  74                 	db	116	;'t'
  1992  005F47  65                 	db	101	;'e'
  1993  005F48  64                 	db	100	;'d'
  1994  005F49  21                 	db	33
  1995  005F4A  00                 	db	0
  1996  005F4B                     STR_16:
  1997                           
  1998                           ; BSR set to: 2
  1999  005F4B  53                 	db	83	;'S'
  2000  005F4C  65                 	db	101	;'e'
  2001  005F4D  61                 	db	97	;'a'
  2002  005F4E  72                 	db	114	;'r'
  2003  005F4F  63                 	db	99	;'c'
  2004  005F50  68                 	db	104	;'h'
  2005  005F51  69                 	db	105	;'i'
  2006  005F52  6E                 	db	110	;'n'
  2007  005F53  67                 	db	103	;'g'
  2008  005F54  2E                 	db	46
  2009  005F55  2E                 	db	46
  2010  005F56  2E                 	db	46
  2011  005F57  00                 	db	0
  2012  005F58                     STR_27:
  2013                           
  2014                           ; BSR set to: 2
  2015  005F58  41                 	db	65	;'A'
  2016  005F59  54                 	db	84	;'T'
  2017  005F5A  2B                 	db	43
  2018  005F5B  49                 	db	73	;'I'
  2019  005F5C  50                 	db	80	;'P'
  2020  005F5D  52                 	db	82	;'R'
  2021  005F5E  3D                 	db	61	;'='
  2022  005F5F  25                 	db	37
  2023  005F60  6C                 	db	108	;'l'
  2024  005F61  75                 	db	117	;'u'
  2025  005F62  0D                 	db	13
  2026  005F63  00                 	db	0
  2027  005F64                     STR_30:
  2028                           
  2029                           ; BSR set to: 2
  2030  005F64  25                 	db	37
  2031  005F65  6C                 	db	108	;'l'
  2032  005F66  75                 	db	117	;'u'
  2033  005F67  20                 	db	32
  2034  005F68  46                 	db	70	;'F'
  2035  005F69  4F                 	db	79	;'O'
  2036  005F6A  55                 	db	85	;'U'
  2037  005F6B  4E                 	db	78	;'N'
  2038  005F6C  44                 	db	68	;'D'
  2039  005F6D  21                 	db	33
  2040  005F6E  00                 	db	0
  2041  005F6F                     STR_20:
  2042                           
  2043                           ; BSR set to: 2
  2044  005F6F  46                 	db	70	;'F'
  2045  005F70  72                 	db	114	;'r'
  2046  005F71  65                 	db	101	;'e'
  2047  005F72  71                 	db	113	;'q'
  2048  005F73  75                 	db	117	;'u'
  2049  005F74  65                 	db	101	;'e'
  2050  005F75  6E                 	db	110	;'n'
  2051  005F76  7A                 	db	122	;'z'
  2052  005F77  61                 	db	97	;'a'
  2053  005F78  3A                 	db	58	;':'
  2054  005F79  00                 	db	0
  2055  005F7A                     STR_12:
  2056                           
  2057                           ; BSR set to: 2
  2058  005F7A  43                 	db	67	;'C'
  2059  005F7B  68                 	db	104	;'h'
  2060  005F7C  65                 	db	101	;'e'
  2061  005F7D  63                 	db	99	;'c'
  2062  005F7E  6B                 	db	107	;'k'
  2063  005F7F  20                 	db	32
  2064  005F80  52                 	db	82	;'R'
  2065  005F81  53                 	db	83	;'S'
  2066  005F82  53                 	db	83	;'S'
  2067  005F83  49                 	db	73	;'I'
  2068  005F84  00                 	db	0
  2069  005F85                     STR_6:
  2070                           
  2071                           ; BSR set to: 2
  2072  005F85  53                 	db	83	;'S'
  2073  005F86  74                 	db	116	;'t'
  2074  005F87  69                 	db	105	;'i'
  2075  005F88  6C                 	db	108	;'l'
  2076  005F89  6C                 	db	108	;'l'
  2077  005F8A  20                 	db	32
  2078  005F8B  64                 	db	100	;'d'
  2079  005F8C  65                 	db	101	;'e'
  2080  005F8D  61                 	db	97	;'a'
  2081  005F8E  64                 	db	100	;'d'
  2082  005F8F  00                 	db	0
  2083  005F90                     STR_17:
  2084                           
  2085                           ; BSR set to: 2
  2086  005F90  52                 	db	82	;'R'
  2087  005F91  65                 	db	101	;'e'
  2088  005F92  67                 	db	103	;'g'
  2089  005F93  69                 	db	105	;'i'
  2090  005F94  73                 	db	115	;'s'
  2091  005F95  74                 	db	116	;'t'
  2092  005F96  65                 	db	101	;'e'
  2093  005F97  72                 	db	114	;'r'
  2094  005F98  65                 	db	101	;'e'
  2095  005F99  64                 	db	100	;'d'
  2096  005F9A  00                 	db	0
  2097  005F9B                     STR_8:
  2098                           
  2099                           ; BSR set to: 2
  2100  005F9B  43                 	db	67	;'C'
  2101  005F9C  68                 	db	104	;'h'
  2102  005F9D  65                 	db	101	;'e'
  2103  005F9E  63                 	db	99	;'c'
  2104  005F9F  6B                 	db	107	;'k'
  2105  005FA0  20                 	db	32
  2106  005FA1  74                 	db	116	;'t'
  2107  005FA2  69                 	db	105	;'i'
  2108  005FA3  6D                 	db	109	;'m'
  2109  005FA4  65                 	db	101	;'e'
  2110  005FA5  00                 	db	0
  2111  005FA6                     STR_32:
  2112                           
  2113                           ; BSR set to: 2
  2114  005FA6  41                 	db	65	;'A'
  2115  005FA7  54                 	db	84	;'T'
  2116  005FA8  2B                 	db	43
  2117  005FA9  43                 	db	67	;'C'
  2118  005FAA  52                 	db	82	;'R'
  2119  005FAB  45                 	db	69	;'E'
  2120  005FAC  47                 	db	71	;'G'
  2121  005FAD  3F                 	db	63	;'?'
  2122  005FAE  0D                 	db	13
  2123  005FAF  00                 	db	0
  2124  005FB0                     STR_9:
  2125                           
  2126                           ; BSR set to: 2
  2127  005FB0  41                 	db	65	;'A'
  2128  005FB1  54                 	db	84	;'T'
  2129  005FB2  2B                 	db	43
  2130  005FB3  43                 	db	67	;'C'
  2131  005FB4  43                 	db	67	;'C'
  2132  005FB5  4C                 	db	76	;'L'
  2133  005FB6  4B                 	db	75	;'K'
  2134  005FB7  3F                 	db	63	;'?'
  2135  005FB8  0D                 	db	13
  2136  005FB9  00                 	db	0
  2137  005FBA                     STR_24:
  2138                           
  2139                           ; BSR set to: 2
  2140  005FBA  41                 	db	65	;'A'
  2141  005FBB  54                 	db	84	;'T'
  2142  005FBC  2B                 	db	43
  2143  005FBD  49                 	db	73	;'I'
  2144  005FBE  50                 	db	80	;'P'
  2145  005FBF  52                 	db	82	;'R'
  2146  005FC0  3F                 	db	63	;'?'
  2147  005FC1  0D                 	db	13
  2148  005FC2  00                 	db	0
  2149  005FC3                     STR_36:
  2150                           
  2151                           ; BSR set to: 2
  2152  005FC3  41                 	db	65	;'A'
  2153  005FC4  54                 	db	84	;'T'
  2154  005FC5  2B                 	db	43
  2155  005FC6  43                 	db	67	;'C'
  2156  005FC7  53                 	db	83	;'S'
  2157  005FC8  51                 	db	81	;'Q'
  2158  005FC9  0D                 	db	13
  2159  005FCA  00                 	db	0
  2160  005FCB                     STR_33:
  2161                           
  2162                           ; BSR set to: 2
  2163  005FCB  2B                 	db	43
  2164  005FCC  43                 	db	67	;'C'
  2165  005FCD  52                 	db	82	;'R'
  2166  005FCE  45                 	db	69	;'E'
  2167  005FCF  47                 	db	71	;'G'
  2168  005FD0  3A                 	db	58	;':'
  2169  005FD1  20                 	db	32
  2170  005FD2  00                 	db	0
  2171  005FD3                     STR_40:
  2172                           
  2173                           ; BSR set to: 2
  2174  005FD3  28                 	db	40
  2175  005FD4  6E                 	db	110	;'n'
  2176  005FD5  75                 	db	117	;'u'
  2177  005FD6  6C                 	db	108	;'l'
  2178  005FD7  6C                 	db	108	;'l'
  2179  005FD8  29                 	db	41
  2180  005FD9  00                 	db	0
  2181  005FDA                     STR_37:
  2182                           
  2183                           ; BSR set to: 2
  2184  005FDA  2B                 	db	43
  2185  005FDB  43                 	db	67	;'C'
  2186  005FDC  53                 	db	83	;'S'
  2187  005FDD  51                 	db	81	;'Q'
  2188  005FDE  3A                 	db	58	;':'
  2189  005FDF  20                 	db	32
  2190  005FE0  00                 	db	0
  2191  005FE1                     STR_25:
  2192                           
  2193                           ; BSR set to: 2
  2194  005FE1  2B                 	db	43
  2195  005FE2  49                 	db	73	;'I'
  2196  005FE3  50                 	db	80	;'P'
  2197  005FE4  52                 	db	82	;'R'
  2198  005FE5  3A                 	db	58	;':'
  2199  005FE6  20                 	db	32
  2200  005FE7  00                 	db	0
  2201  005FE8                     STR_18:
  2202                           
  2203                           ; BSR set to: 2
  2204  005FE8  4F                 	db	79	;'O'
  2205  005FE9  74                 	db	116	;'t'
  2206  005FEA  68                 	db	104	;'h'
  2207  005FEB  65                 	db	101	;'e'
  2208  005FEC  72                 	db	114	;'r'
  2209  005FED  00                 	db	0
  2210  005FEE                     STR_22:
  2211                           
  2212                           ; BSR set to: 2
  2213  005FEE  41                 	db	65	;'A'
  2214  005FEF  54                 	db	84	;'T'
  2215  005FF0  0D                 	db	13
  2216  005FF1  00                 	db	0
  2217  005FF2                     
  2218                           ; BSR set to: 2
  2219  005FF2  25                 	db	37
  2220  005FF3  33                 	db	51	;'3'
  2221  005FF4  64                 	db	100	;'d'
  2222  005FF5  00                 	db	0
  2223  005FF6                     STR_11:
  2224                           
  2225                           ; BSR set to: 2
  2226  005FF6  25                 	db	37
  2227  005FF7  6C                 	db	108	;'l'
  2228  005FF8  75                 	db	117	;'u'
  2229  005FF9  00                 	db	0
  2230  005FFA                     STR_23:
  2231                           
  2232                           ; BSR set to: 2
  2233  005FFA  4F                 	db	79	;'O'
  2234  005FFB  4B                 	db	75	;'K'
  2235  005FFC  00                 	db	0
  2236  005FFD                     STR_35:
  2237                           
  2238                           ; BSR set to: 2
  2239  005FFD  2C                 	db	44
  2240  005FFE  00                 	db	0
  2241  0000                     
  2242                           ; #config settings
  2243  005FFF  00                 	db	0	; dummy byte at the end
  2244  0000                     
  2245                           	psect	cinit
  2246  0028CC                     __pcinit:
  2247                           	opt callstack 0
  2248  0028CC                     start_initialization:
  2249                           	opt callstack 0
  2250  0028CC                     __initialization:
  2251                           	opt callstack 0
  2252                           
  2253                           ; Initialize objects allocated to BANK0 (6 bytes)
  2254                           ; load TBLPTR registers with __pidataBANK0
  2255  0028CC  0EF0               	movlw	low __pidataBANK0
  2256  0028CE  6EF6               	movwf	tblptrl,c
  2257  0028D0  0E30               	movlw	high __pidataBANK0
  2258  0028D2  6EF7               	movwf	tblptrh,c
  2259  0028D4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2260  0028D6  6EF8               	movwf	tblptru,c
  2261  0028D8  EE00  F0CE         	lfsr	0,__pdataBANK0
  2262  0028DC  EE10 F006          	lfsr	1,6
  2263  0028E0                     copy_data0:
  2264  0028E0  0009               	tblrd		*+
  2265  0028E2  CFF5 FFEE          	movff	tablat,postinc0
  2266  0028E6  50E5               	movf	postdec1,w,c
  2267  0028E8  50E1               	movf	fsr1l,w,c
  2268  0028EA  E1FA               	bnz	copy_data0
  2269                           
  2270                           ; Initialize objects allocated to COMRAM (2 bytes)
  2271                           ; load TBLPTR registers with __pidataCOMRAM
  2272  0028EC  0E00               	movlw	low __pidataCOMRAM
  2273  0028EE  6EF6               	movwf	tblptrl,c
  2274  0028F0  0E31               	movlw	high __pidataCOMRAM
  2275  0028F2  6EF7               	movwf	tblptrh,c
  2276  0028F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2277  0028F6  6EF8               	movwf	tblptru,c
  2278  0028F8  0009               	tblrd		*+	;fetch initializer
  2279  0028FA  CFF5 F059          	movff	tablat,__pdataCOMRAM
  2280  0028FE  0009               	tblrd		*+	;fetch initializer
  2281  002900  CFF5 F05A          	movff	tablat,__pdataCOMRAM+1
  2282                           
  2283                           ; Clear objects allocated to BANK2 (130 bytes)
  2284  002904  EE02  F000         	lfsr	0,__pbssBANK2
  2285  002908  0E82               	movlw	130
  2286  00290A                     clear_0:
  2287  00290A  6AEE               	clrf	postinc0,c
  2288  00290C  06E8               	decf	wreg,f,c
  2289  00290E  E1FD               	bnz	clear_0
  2290                           
  2291                           ; Clear objects allocated to BANK1 (32 bytes)
  2292  002910  EE01  F0AD         	lfsr	0,__pbssBANK1
  2293  002914  0E20               	movlw	32
  2294  002916                     clear_1:
  2295  002916  6AEE               	clrf	postinc0,c
  2296  002918  06E8               	decf	wreg,f,c
  2297  00291A  E1FD               	bnz	clear_1
  2298                           
  2299                           ; Clear objects allocated to BANK0 (30 bytes)
  2300  00291C  EE00  F0B0         	lfsr	0,__pbssBANK0
  2301  002920  0E1E               	movlw	30
  2302  002922                     clear_2:
  2303  002922  6AEE               	clrf	postinc0,c
  2304  002924  06E8               	decf	wreg,f,c
  2305  002926  E1FD               	bnz	clear_2
  2306                           
  2307                           ; Clear objects allocated to COMRAM (3 bytes)
  2308  002928  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2309  00292A  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2310  00292C  6A56               	clrf	__pbssCOMRAM& (0+255),c
  2311  00292E                     end_of_initialization:
  2312                           	opt callstack 0
  2313  00292E                     __end_of__initialization:
  2314                           	opt callstack 0
  2315  00292E  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2316  002930  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2317  002932  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2318  002934  6EF8               	movwf	tblptru,c
  2319  002936  0100               	movlb	0
  2320  002938  EFDB  F017         	goto	_main	;jump to C main() function
  2321                           
  2322                           	psect	bssCOMRAM
  2323  000056                     __pbssCOMRAM:
  2324                           	opt callstack 0
  2325  000056                     _ECG_FLAGS:
  2326                           	opt callstack 0
  2327  000056                     	ds	2
  2328  000058                     _TFT_Orientation:
  2329                           	opt callstack 0
  2330  000058                     	ds	1
  2331                           
  2332                           	psect	dataCOMRAM
  2333  000059                     __pdataCOMRAM:
  2334                           	opt callstack 0
  2335  000059                     _Ecg_Y:
  2336                           	opt callstack 0
  2337  000059                     	ds	2
  2338                           
  2339                           	psect	bssBANK0
  2340  0000B0                     __pbssBANK0:
  2341                           	opt callstack 0
  2342  0000B0                     _ECG_HEARTBEAT:
  2343                           	opt callstack 0
  2344  0000B0                     	ds	13
  2345  0000BD                     _ECG_BUFFER:
  2346                           	opt callstack 0
  2347  0000BD                     	ds	5
  2348  0000C2                     _ECG_HEARTRATE:
  2349                           	opt callstack 0
  2350  0000C2                     	ds	4
  2351  0000C6                     _A6_LAST_COMMAND_MILLISECONDS:
  2352                           	opt callstack 0
  2353  0000C6                     	ds	4
  2354  0000CA                     strtok@sp:
  2355                           	opt callstack 0
  2356  0000CA                     	ds	2
  2357  0000CC                     _TFT_ConsoleRow:
  2358                           	opt callstack 0
  2359  0000CC                     	ds	2
  2360                           
  2361                           	psect	dataBANK0
  2362  0000CE                     __pdataBANK0:
  2363                           	opt callstack 0
  2364  0000CE                     _Ecg_Yold:
  2365                           	opt callstack 0
  2366  0000CE                     	ds	2
  2367  0000D0                     _Ecg_Xold:
  2368                           	opt callstack 0
  2369  0000D0                     	ds	2
  2370  0000D2                     _Ecg_X:
  2371                           	opt callstack 0
  2372  0000D2                     	ds	2
  2373                           
  2374                           	psect	bssBANK1
  2375  0001AD                     __pbssBANK1:
  2376                           	opt callstack 0
  2377  0001AD                     _tmp7:
  2378                           	opt callstack 0
  2379  0001AD                     	ds	4
  2380  0001B1                     _tmp6:
  2381                           	opt callstack 0
  2382  0001B1                     	ds	4
  2383  0001B5                     _tmp5:
  2384                           	opt callstack 0
  2385  0001B5                     	ds	4
  2386  0001B9                     _tmp4:
  2387                           	opt callstack 0
  2388  0001B9                     	ds	4
  2389  0001BD                     _tmp3:
  2390                           	opt callstack 0
  2391  0001BD                     	ds	4
  2392  0001C1                     _tmp2:
  2393                           	opt callstack 0
  2394  0001C1                     	ds	4
  2395  0001C5                     _tmp1:
  2396                           	opt callstack 0
  2397  0001C5                     	ds	4
  2398  0001C9                     _MILLISECONDS:
  2399                           	opt callstack 0
  2400  0001C9                     	ds	4
  2401                           
  2402                           	psect	bssBANK2
  2403  000200                     __pbssBANK2:
  2404                           	opt callstack 0
  2405  000200                     _EUSART_RX:
  2406                           	opt callstack 0
  2407  000200                     	ds	130
  2408                           
  2409                           	psect	cstackBANK1
  2410  000100                     __pcstackBANK1:
  2411                           	opt callstack 0
  2412  000100                     loop@response:
  2413                           	opt callstack 0
  2414                           
  2415                           ; 32 bytes @ 0x0
  2416  000100                     	ds	32
  2417  000120                     loop@zzzz_153:
  2418                           	opt callstack 0
  2419                           
  2420                           ; 32 bytes @ 0x20
  2421  000120                     	ds	32
  2422  000140                     loop@zzzz_156:
  2423                           	opt callstack 0
  2424                           
  2425                           ; 32 bytes @ 0x40
  2426  000140                     	ds	32
  2427  000160                     loop@zzzz_160:
  2428                           	opt callstack 0
  2429                           
  2430                           ; 32 bytes @ 0x60
  2431  000160                     	ds	32
  2432  000180                     loop@zzzz:
  2433                           	opt callstack 0
  2434                           
  2435                           ; 32 bytes @ 0x80
  2436  000180                     	ds	32
  2437  0001A0                     _loop$143:
  2438                           	opt callstack 0
  2439                           
  2440                           ; 2 bytes @ 0xA0
  2441  0001A0                     	ds	2
  2442  0001A2                     _loop$148:
  2443                           	opt callstack 0
  2444                           
  2445                           ; 2 bytes @ 0xA2
  2446  0001A2                     	ds	2
  2447  0001A4                     _loop$167:
  2448                           	opt callstack 0
  2449                           
  2450                           ; 2 bytes @ 0xA4
  2451  0001A4                     	ds	2
  2452  0001A6                     _loop$168:
  2453                           	opt callstack 0
  2454                           
  2455                           ; 2 bytes @ 0xA6
  2456  0001A6                     	ds	2
  2457  0001A8                     loop@zz:
  2458                           	opt callstack 0
  2459                           
  2460                           ; 4 bytes @ 0xA8
  2461  0001A8                     	ds	4
  2462  0001AC                     loop@ns:
  2463                           	opt callstack 0
  2464                           
  2465                           ; 1 bytes @ 0xAC
  2466  0001AC                     	ds	1
  2467                           
  2468                           	psect	cstackBANK0
  2469  000060                     __pcstackBANK0:
  2470                           	opt callstack 0
  2471  000060                     TFT_DrawString@x:
  2472                           	opt callstack 0
  2473  000060                     sprintf@prec:
  2474                           	opt callstack 0
  2475                           
  2476                           ; 2 bytes @ 0x0
  2477  000060                     	ds	2
  2478  000062                     TFT_DrawString@y:
  2479                           	opt callstack 0
  2480  000062                     sprintf@cp:
  2481                           	opt callstack 0
  2482                           
  2483                           ; 2 bytes @ 0x2
  2484  000062                     	ds	2
  2485  000064                     TFT_DrawString@str:
  2486                           	opt callstack 0
  2487  000064                     sprintf@len:
  2488                           	opt callstack 0
  2489                           
  2490                           ; 2 bytes @ 0x4
  2491  000064                     	ds	2
  2492  000066                     TFT_DrawString@color:
  2493                           	opt callstack 0
  2494  000066                     sprintf@val:
  2495                           	opt callstack 0
  2496                           
  2497                           ; 4 bytes @ 0x6
  2498  000066                     	ds	2
  2499  000068                     TFT_DrawString@bg:
  2500                           	opt callstack 0
  2501                           
  2502                           ; 2 bytes @ 0x8
  2503  000068                     	ds	2
  2504  00006A                     TFT_DrawString@size:
  2505                           	opt callstack 0
  2506  00006A                     sprintf@flag:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 1 bytes @ 0xA
  2510  00006A                     	ds	1
  2511  00006B                     TFT_ConsolePrintLine@str:
  2512                           	opt callstack 0
  2513  00006B                     sprintf@ap:
  2514                           	opt callstack 0
  2515                           
  2516                           ; 2 bytes @ 0xB
  2517  00006B                     	ds	2
  2518  00006D                     TFT_ConsolePrintLine@color:
  2519                           	opt callstack 0
  2520  00006D                     sprintf@width:
  2521                           	opt callstack 0
  2522                           
  2523                           ; 2 bytes @ 0xD
  2524  00006D                     	ds	2
  2525  00006F                     sprintf@c:
  2526                           	opt callstack 0
  2527  00006F                     A6_Process_Random_Comms@response:
  2528                           	opt callstack 0
  2529                           
  2530                           ; 32 bytes @ 0xF
  2531  00006F                     	ds	1
  2532  000070                     ?_A6_BaudRateSet:
  2533                           	opt callstack 0
  2534  000070                     A6_BaudRateSet@baudRate:
  2535                           	opt callstack 0
  2536  000070                     A6_BaudRateAutoDetect@zzzz:
  2537                           	opt callstack 0
  2538                           
  2539                           ; 32 bytes @ 0x10
  2540  000070                     	ds	4
  2541  000074                     A6_BaudRateSet@response:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 32 bytes @ 0x14
  2545  000074                     	ds	27
  2546  00008F                     A6_Process_Random_Comms@cnt:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 1 bytes @ 0x2F
  2550  00008F                     	ds	1
  2551  000090                     A6_BaudRateAutoDetect@i:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 1 bytes @ 0x30
  2555  000090                     	ds	4
  2556  000094                     A6_BaudRateSet@request:
  2557                           	opt callstack 0
  2558                           
  2559                           ; 20 bytes @ 0x34
  2560  000094                     	ds	20
  2561  0000A8                     A6_BaudRateSet@currentBaudRate:
  2562                           	opt callstack 0
  2563                           
  2564                           ; 4 bytes @ 0x48
  2565  0000A8                     	ds	4
  2566  0000AC                     ??_loop:
  2567                           
  2568                           ; 1 bytes @ 0x4C
  2569  0000AC                     	ds	4
  2570                           
  2571                           	psect	cstackCOMRAM
  2572  000001                     __pcstackCOMRAM:
  2573                           	opt callstack 0
  2574  000001                     ??_Ecg_Interrupt:
  2575  000001                     ??_EUSART_RX_Interrupt:
  2576  000001                     
  2577                           ; 4 bytes @ 0x0
  2578  000001                     	ds	1
  2579  000002                     EUSART_RX_Interrupt@c:
  2580                           	opt callstack 0
  2581                           
  2582                           ; 1 bytes @ 0x1
  2583  000002                     	ds	1
  2584  000003                     ??_isr:
  2585                           
  2586                           ; 1 bytes @ 0x2
  2587  000003                     	ds	2
  2588  000005                     ??_init:
  2589  000005                     ??_TFT_Reset:
  2590  000005                     ??_isdigit:
  2591  000005                     ?_abs:
  2592                           	opt callstack 0
  2593  000005                     ?_Ecg_CheckLeads:
  2594                           	opt callstack 0
  2595  000005                     ?_strcmp:
  2596                           	opt callstack 0
  2597  000005                     ?_strlen:
  2598                           	opt callstack 0
  2599  000005                     ?_strchr:
  2600                           	opt callstack 0
  2601  000005                     ?_TFT_GetWidth:
  2602                           	opt callstack 0
  2603  000005                     ?_TFT_GetHeight:
  2604                           	opt callstack 0
  2605  000005                     ?___wmul:
  2606                           	opt callstack 0
  2607  000005                     ?___awdiv:
  2608                           	opt callstack 0
  2609  000005                     ?___lmul:
  2610                           	opt callstack 0
  2611  000005                     ?___lldiv:
  2612                           	opt callstack 0
  2613  000005                     EUSART_TX_Char@c:
  2614                           	opt callstack 0
  2615  000005                     TFT_WriteRegister@reg:
  2616                           	opt callstack 0
  2617  000005                     EUSART_RX_AvailableData@timeout:
  2618                           	opt callstack 0
  2619  000005                     ___wmul@multiplier:
  2620                           	opt callstack 0
  2621  000005                     ___awdiv@dividend:
  2622                           	opt callstack 0
  2623  000005                     abs@a:
  2624                           	opt callstack 0
  2625  000005                     memset@p1:
  2626                           	opt callstack 0
  2627  000005                     strcmp@s1:
  2628                           	opt callstack 0
  2629  000005                     strlen@s:
  2630                           	opt callstack 0
  2631  000005                     strchr@ptr:
  2632                           	opt callstack 0
  2633  000005                     sleepMS@ms:
  2634                           	opt callstack 0
  2635  000005                     ___lmul@multiplier:
  2636                           	opt callstack 0
  2637  000005                     ___lldiv@dividend:
  2638                           	opt callstack 0
  2639                           
  2640                           ; 4 bytes @ 0x4
  2641  000005                     	ds	1
  2642  000006                     _isdigit$1963:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 1 bytes @ 0x5
  2646  000006                     	ds	1
  2647  000007                     ??_abs:
  2648  000007                     ??_Ecg_CheckLeads:
  2649  000007                     ??_EUSART_RX_AvailableData:
  2650  000007                     isdigit@c:
  2651                           	opt callstack 0
  2652  000007                     TFT_WriteRegister@data:
  2653                           	opt callstack 0
  2654  000007                     ___wmul@multiplicand:
  2655                           	opt callstack 0
  2656  000007                     ___awdiv@divisor:
  2657                           	opt callstack 0
  2658  000007                     memset@c:
  2659                           	opt callstack 0
  2660  000007                     strcmp@s2:
  2661                           	opt callstack 0
  2662  000007                     strlen@cp:
  2663                           	opt callstack 0
  2664  000007                     strchr@chr:
  2665                           	opt callstack 0
  2666                           
  2667                           ; 2 bytes @ 0x6
  2668  000007                     	ds	1
  2669  000008                     Ecg_CheckLeads@leadsStatus:
  2670                           	opt callstack 0
  2671                           
  2672                           ; 1 bytes @ 0x7
  2673  000008                     	ds	1
  2674  000009                     ??_strcmp:
  2675  000009                     ??_strchr:
  2676  000009                     ?_strncmp:
  2677                           	opt callstack 0
  2678  000009                     TFT_WriteRegister@h:
  2679                           	opt callstack 0
  2680  000009                     ___awdiv@counter:
  2681                           	opt callstack 0
  2682  000009                     EUSART_TX_String@str:
  2683                           	opt callstack 0
  2684  000009                     ___wmul@product:
  2685                           	opt callstack 0
  2686  000009                     memset@n:
  2687                           	opt callstack 0
  2688  000009                     strncmp@s1:
  2689                           	opt callstack 0
  2690  000009                     sleepMS@t:
  2691                           	opt callstack 0
  2692  000009                     ___lmul@multiplicand:
  2693                           	opt callstack 0
  2694  000009                     ___lldiv@divisor:
  2695                           	opt callstack 0
  2696                           
  2697                           ; 4 bytes @ 0x8
  2698  000009                     	ds	1
  2699  00000A                     TFT_WriteRegister@l:
  2700                           	opt callstack 0
  2701  00000A                     ___awdiv@sign:
  2702                           	opt callstack 0
  2703                           
  2704                           ; 1 bytes @ 0x9
  2705  00000A                     	ds	1
  2706  00000B                     ?_atoi:
  2707                           	opt callstack 0
  2708  00000B                     ?_strspn:
  2709                           	opt callstack 0
  2710  00000B                     ?_strcspn:
  2711                           	opt callstack 0
  2712  00000B                     TFT_WriteRegister@h_753:
  2713                           	opt callstack 0
  2714  00000B                     EUSART_TX_String@len:
  2715                           	opt callstack 0
  2716  00000B                     strcmp@r:
  2717                           	opt callstack 0
  2718  00000B                     ___awdiv@quotient:
  2719                           	opt callstack 0
  2720  00000B                     atoi@s:
  2721                           	opt callstack 0
  2722  00000B                     memset@p:
  2723                           	opt callstack 0
  2724  00000B                     strcspn@s1:
  2725                           	opt callstack 0
  2726  00000B                     strncmp@s2:
  2727                           	opt callstack 0
  2728  00000B                     strspn@s1:
  2729                           	opt callstack 0
  2730  00000B                     EUSART_RX_AvailableData@t:
  2731                           	opt callstack 0
  2732                           
  2733                           ; 4 bytes @ 0xA
  2734  00000B                     	ds	1
  2735  00000C                     TFT_WriteRegister@l_754:
  2736                           	opt callstack 0
  2737                           
  2738                           ; 1 bytes @ 0xB
  2739  00000C                     	ds	1
  2740  00000D                     ??_atoi:
  2741  00000D                     TFT_SetAddrWindow@x1:
  2742                           	opt callstack 0
  2743  00000D                     TFT_DrawPixel@x:
  2744                           	opt callstack 0
  2745  00000D                     TFT_Flood@color:
  2746                           	opt callstack 0
  2747  00000D                     strcspn@s2:
  2748                           	opt callstack 0
  2749  00000D                     strncmp@len:
  2750                           	opt callstack 0
  2751  00000D                     strspn@s2:
  2752                           	opt callstack 0
  2753  00000D                     ___lmul@product:
  2754                           	opt callstack 0
  2755  00000D                     ___lldiv@quotient:
  2756                           	opt callstack 0
  2757                           
  2758                           ; 4 bytes @ 0xC
  2759  00000D                     	ds	2
  2760  00000F                     ??_strncmp:
  2761  00000F                     ??_strspn:
  2762  00000F                     ??_strcspn:
  2763  00000F                     atoi@sign:
  2764                           	opt callstack 0
  2765  00000F                     TFT_SetAddrWindow@y1:
  2766                           	opt callstack 0
  2767  00000F                     TFT_DrawPixel@y:
  2768                           	opt callstack 0
  2769  00000F                     EUSART_BufferGetChar@timeout:
  2770                           	opt callstack 0
  2771  00000F                     TFT_Flood@len:
  2772                           	opt callstack 0
  2773                           
  2774                           ; 4 bytes @ 0xE
  2775  00000F                     	ds	1
  2776  000010                     ?_strstr:
  2777                           	opt callstack 0
  2778  000010                     atoi@a:
  2779                           	opt callstack 0
  2780  000010                     strstr@s1:
  2781                           	opt callstack 0
  2782  000010                     strcspn@i:
  2783                           	opt callstack 0
  2784  000010                     strspn@i:
  2785                           	opt callstack 0
  2786                           
  2787                           ; 2 bytes @ 0xF
  2788  000010                     	ds	1
  2789  000011                     ?_atol:
  2790                           	opt callstack 0
  2791  000011                     ___lldiv@counter:
  2792                           	opt callstack 0
  2793  000011                     TFT_SetAddrWindow@x2:
  2794                           	opt callstack 0
  2795  000011                     TFT_DrawPixel@color:
  2796                           	opt callstack 0
  2797  000011                     A6_ReadLine@response:
  2798                           	opt callstack 0
  2799  000011                     atol@s:
  2800                           	opt callstack 0
  2801                           
  2802                           ; 2 bytes @ 0x10
  2803  000011                     	ds	1
  2804  000012                     ?_strtok:
  2805                           	opt callstack 0
  2806  000012                     ?___llmod:
  2807                           	opt callstack 0
  2808  000012                     strstr@s2:
  2809                           	opt callstack 0
  2810  000012                     strtok@s1:
  2811                           	opt callstack 0
  2812  000012                     EUSART_BaudRateSet@baudRate:
  2813                           	opt callstack 0
  2814  000012                     ___llmod@dividend:
  2815                           	opt callstack 0
  2816                           
  2817                           ; 4 bytes @ 0x11
  2818  000012                     	ds	1
  2819  000013                     ??_TFT_Flood:
  2820  000013                     A6_ReadLine@responseLen:
  2821                           	opt callstack 0
  2822  000013                     TFT_SetAddrWindow@y2:
  2823                           	opt callstack 0
  2824  000013                     TFT_DrawPixel@h:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x12
  2828  000013                     	ds	1
  2829  000014                     A6_ReadLine@timeout:
  2830                           	opt callstack 0
  2831  000014                     strtok@s2:
  2832                           	opt callstack 0
  2833                           
  2834                           ; 2 bytes @ 0x13
  2835  000014                     	ds	1
  2836  000015                     ??_atol:
  2837  000015                     TFT_DrawPixel@v:
  2838                           	opt callstack 0
  2839                           
  2840                           ; 2 bytes @ 0x14
  2841  000015                     	ds	1
  2842  000016                     ??_EUSART_BaudRateSet:
  2843  000016                     A6_ReadLine@iResponse:
  2844                           	opt callstack 0
  2845  000016                     ___llmod@divisor:
  2846                           	opt callstack 0
  2847                           
  2848                           ; 4 bytes @ 0x15
  2849  000016                     	ds	1
  2850  000017                     A6_ReadLine@c:
  2851                           	opt callstack 0
  2852  000017                     TFT_DrawLine@x0:
  2853                           	opt callstack 0
  2854  000017                     TFT_Flood@blocks:
  2855                           	opt callstack 0
  2856                           
  2857                           ; 2 bytes @ 0x16
  2858  000017                     	ds	1
  2859  000018                     A6_Command@command:
  2860                           	opt callstack 0
  2861                           
  2862                           ; 2 bytes @ 0x17
  2863  000018                     	ds	1
  2864  000019                     TFT_Flood@i:
  2865                           	opt callstack 0
  2866  000019                     atol@sign:
  2867                           	opt callstack 0
  2868  000019                     TFT_DrawLine@y0:
  2869                           	opt callstack 0
  2870                           
  2871                           ; 2 bytes @ 0x18
  2872  000019                     	ds	1
  2873  00001A                     TFT_Flood@color_hi:
  2874                           	opt callstack 0
  2875  00001A                     ___llmod@counter:
  2876                           	opt callstack 0
  2877  00001A                     A6_Command@timeout:
  2878                           	opt callstack 0
  2879  00001A                     EUSART_BaudRateSet@tmp:
  2880                           	opt callstack 0
  2881  00001A                     atol@a:
  2882                           	opt callstack 0
  2883                           
  2884                           ; 4 bytes @ 0x19
  2885  00001A                     	ds	1
  2886  00001B                     TFT_Flood@color_lo:
  2887                           	opt callstack 0
  2888  00001B                     TFT_DrawLine@x1:
  2889                           	opt callstack 0
  2890                           
  2891                           ; 2 bytes @ 0x1A
  2892  00001B                     	ds	1
  2893  00001C                     TFT_FullScreen@color:
  2894                           	opt callstack 0
  2895  00001C                     A6_Command@response:
  2896                           	opt callstack 0
  2897                           
  2898                           ; 2 bytes @ 0x1B
  2899  00001C                     	ds	1
  2900  00001D                     TFT_DrawLine@y1:
  2901                           	opt callstack 0
  2902                           
  2903                           ; 2 bytes @ 0x1C
  2904  00001D                     	ds	1
  2905  00001E                     A6_Command@responseLen:
  2906                           	opt callstack 0
  2907  00001E                     atol@c:
  2908                           	opt callstack 0
  2909  00001E                     TFT_OrientationSet@color:
  2910                           	opt callstack 0
  2911  00001E                     TFT_DrawFillRect@x:
  2912                           	opt callstack 0
  2913                           
  2914                           ; 2 bytes @ 0x1D
  2915  00001E                     	ds	1
  2916  00001F                     ?_A6_BaudRateGet:
  2917                           	opt callstack 0
  2918  00001F                     TFT_DrawLine@color:
  2919                           	opt callstack 0
  2920  00001F                     A6_IsAlive@response:
  2921                           	opt callstack 0
  2922  00001F                     A6_NetworkGetStatus@response:
  2923                           	opt callstack 0
  2924  00001F                     A6_NetworkGetRSSI@response:
  2925                           	opt callstack 0
  2926                           
  2927                           ; 32 bytes @ 0x1E
  2928  00001F                     	ds	1
  2929  000020                     TFT_OrientationSet@orientation:
  2930                           	opt callstack 0
  2931  000020                     TFT_DrawFillRect@y:
  2932                           	opt callstack 0
  2933                           
  2934                           ; 2 bytes @ 0x1F
  2935  000020                     	ds	1
  2936  000021                     ??_TFT_DrawLine:
  2937  000021                     TFT_ConsoleInit@orientation:
  2938                           	opt callstack 0
  2939  000021                     TFT_Init@color:
  2940                           	opt callstack 0
  2941                           
  2942                           ; 2 bytes @ 0x20
  2943  000021                     	ds	1
  2944  000022                     TFT_DrawFillRect@w:
  2945                           	opt callstack 0
  2946                           
  2947                           ; 2 bytes @ 0x21
  2948  000022                     	ds	1
  2949  000023                     ??_TFT_Init:
  2950  000023                     A6_BaudRateGet@response:
  2951                           	opt callstack 0
  2952                           
  2953                           ; 32 bytes @ 0x22
  2954  000023                     	ds	1
  2955  000024                     TFT_DrawLine@t:
  2956                           	opt callstack 0
  2957  000024                     TFT_DrawFillRect@h:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 2 bytes @ 0x23
  2961  000024                     	ds	1
  2962  000025                     TFT_Init@orientation:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 1 bytes @ 0x24
  2966  000025                     	ds	1
  2967  000026                     TFT_Init@data:
  2968                           	opt callstack 0
  2969  000026                     TFT_DrawLine@t_814:
  2970                           	opt callstack 0
  2971  000026                     TFT_DrawFillRect@color:
  2972                           	opt callstack 0
  2973                           
  2974                           ; 2 bytes @ 0x25
  2975  000026                     	ds	2
  2976  000028                     ??_TFT_DrawFillRect:
  2977  000028                     TFT_Init@initSequenceSize:
  2978                           	opt callstack 0
  2979  000028                     TFT_DrawLine@t_815:
  2980                           	opt callstack 0
  2981                           
  2982                           ; 2 bytes @ 0x27
  2983  000028                     	ds	2
  2984  00002A                     TFT_Init@cmd:
  2985                           	opt callstack 0
  2986  00002A                     TFT_DrawLine@t_816:
  2987                           	opt callstack 0
  2988                           
  2989                           ; 2 bytes @ 0x29
  2990  00002A                     	ds	2
  2991  00002C                     TFT_Init@i:
  2992                           	opt callstack 0
  2993  00002C                     TFT_DrawLine@dy:
  2994                           	opt callstack 0
  2995                           
  2996                           ; 2 bytes @ 0x2B
  2997  00002C                     	ds	2
  2998  00002E                     TFT_DrawLine@ystep:
  2999                           	opt callstack 0
  3000                           
  3001                           ; 2 bytes @ 0x2D
  3002  00002E                     	ds	2
  3003  000030                     TFT_DrawLine@err:
  3004                           	opt callstack 0
  3005                           
  3006                           ; 2 bytes @ 0x2F
  3007  000030                     	ds	2
  3008  000032                     TFT_DrawLine@steep:
  3009                           	opt callstack 0
  3010                           
  3011                           ; 2 bytes @ 0x31
  3012  000032                     	ds	2
  3013  000034                     TFT_DrawLine@dx:
  3014                           	opt callstack 0
  3015                           
  3016                           ; 2 bytes @ 0x33
  3017  000034                     	ds	2
  3018  000036                     TFT_DrawChar@x:
  3019                           	opt callstack 0
  3020                           
  3021                           ; 2 bytes @ 0x35
  3022  000036                     	ds	2
  3023  000038                     TFT_DrawChar@y:
  3024                           	opt callstack 0
  3025                           
  3026                           ; 2 bytes @ 0x37
  3027  000038                     	ds	2
  3028  00003A                     TFT_DrawChar@c:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 1 bytes @ 0x39
  3032  00003A                     	ds	1
  3033  00003B                     TFT_DrawChar@color:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 2 bytes @ 0x3A
  3037  00003B                     	ds	2
  3038  00003D                     TFT_DrawChar@bg:
  3039                           	opt callstack 0
  3040                           
  3041                           ; 2 bytes @ 0x3C
  3042  00003D                     	ds	2
  3043  00003F                     TFT_DrawChar@size:
  3044                           	opt callstack 0
  3045  00003F                     A6_NetworkGetStatus@networkStatusToken:
  3046                           	opt callstack 0
  3047  00003F                     A6_NetworkGetRSSI@RSSIToken:
  3048                           	opt callstack 0
  3049                           
  3050                           ; 2 bytes @ 0x3E
  3051  00003F                     	ds	1
  3052  000040                     ??_TFT_DrawChar:
  3053                           
  3054                           ; 1 bytes @ 0x3F
  3055  000040                     	ds	1
  3056  000041                     A6_NetworkGetRSSILevel@RSSI:
  3057                           	opt callstack 0
  3058                           
  3059                           ; 1 bytes @ 0x40
  3060  000041                     	ds	2
  3061  000043                     A6_BaudRateGet@baudRate:
  3062                           	opt callstack 0
  3063                           
  3064                           ; 4 bytes @ 0x42
  3065  000043                     	ds	1
  3066  000044                     TFT_DrawChar@line:
  3067                           	opt callstack 0
  3068                           
  3069                           ; 1 bytes @ 0x43
  3070  000044                     	ds	1
  3071  000045                     TFT_DrawChar@xl:
  3072                           	opt callstack 0
  3073                           
  3074                           ; 2 bytes @ 0x44
  3075  000045                     	ds	2
  3076  000047                     A6_BaudRateGet@baudRateToken:
  3077                           	opt callstack 0
  3078  000047                     _TFT_DrawChar$2238:
  3079                           	opt callstack 0
  3080                           
  3081                           ; 2 bytes @ 0x46
  3082  000047                     	ds	2
  3083  000049                     A6_BaudRateGet@j:
  3084                           	opt callstack 0
  3085  000049                     _TFT_DrawChar$2239:
  3086                           	opt callstack 0
  3087                           
  3088                           ; 2 bytes @ 0x48
  3089  000049                     	ds	1
  3090  00004A                     ?_sprintf:
  3091                           	opt callstack 0
  3092  00004A                     sprintf@sp:
  3093                           	opt callstack 0
  3094                           
  3095                           ; 2 bytes @ 0x49
  3096  00004A                     	ds	1
  3097  00004B                     TFT_DrawChar@j:
  3098                           	opt callstack 0
  3099                           
  3100                           ; 1 bytes @ 0x4A
  3101  00004B                     	ds	1
  3102  00004C                     TFT_DrawChar@i:
  3103                           	opt callstack 0
  3104  00004C                     sprintf@f:
  3105                           	opt callstack 0
  3106                           
  3107                           ; 2 bytes @ 0x4B
  3108  00004C                     	ds	1
  3109  00004D                     ??_TFT_ConsolePrintLine:
  3110  00004D                     
  3111                           ; 1 bytes @ 0x4C
  3112  00004D                     	ds	2
  3113  00004F                     _TFT_ConsolePrintLine$2240:
  3114                           	opt callstack 0
  3115                           
  3116                           ; 2 bytes @ 0x4E
  3117  00004F                     	ds	2
  3118  000051                     
  3119                           ; 1 bytes @ 0x50
  3120  000051                     	ds	1
  3121  000052                     ??_sprintf:
  3122                           
  3123                           ; 1 bytes @ 0x51
  3124  000052                     	ds	4
  3125  000056                     
  3126                           ; 1 bytes @ 0x55
  3127 ;;
  3128 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3129 ;;
  3130 ;; *************** function _main *****************
  3131 ;; Defined at:
  3132 ;;		line 12 in file "main.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0
  3147 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3149 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3150 ;;Total ram usage:        0 bytes
  3151 ;; Hardware stack levels required when called:   11
  3152 ;; This function calls:
  3153 ;;		_A6_Init
  3154 ;;		_EUSART_Init
  3155 ;;		_Ecg_Init
  3156 ;;		_TFT_ConsoleInit
  3157 ;;		_TFT_Init
  3158 ;;		_init
  3159 ;;		_loop
  3160 ;; This function is called by:
  3161 ;;		Startup code after reset
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text0
  3166  002FB6                     __ptext0:
  3167                           	opt callstack 0
  3168  002FB6                     _main:
  3169                           	opt callstack 20
  3170  002FB6                     
  3171                           ;main.c: 14: init();
  3172  002FB6  EC2D  F014         	call	_init	;wreg free
  3173  002FBA                     
  3174                           ;main.c: 15: TFT_Init(0, 0x0821);
  3175  002FBA  0E08               	movlw	8
  3176  002FBC  6E22               	movwf	(TFT_Init@color+1)^0,c
  3177  002FBE  0E21               	movlw	33
  3178  002FC0  6E21               	movwf	TFT_Init@color^0,c
  3179  002FC2  0E00               	movlw	0
  3180  002FC4  ECA8  F00D         	call	_TFT_Init
  3181  002FC8                     
  3182                           ;main.c: 16: EUSART_Init();
  3183  002FC8  ECEA  F016         	call	_EUSART_Init	;wreg free
  3184  002FCC                     
  3185                           ;main.c: 17: Ecg_Init();
  3186  002FCC  ECF3  F017         	call	_Ecg_Init	;wreg free
  3187  002FD0                     
  3188                           ;main.c: 18: TFT_ConsoleInit(0);
  3189  002FD0  0E00               	movlw	0
  3190  002FD2  EC51  F018         	call	_TFT_ConsoleInit
  3191  002FD6                     
  3192                           ;main.c: 19: A6_Init();
  3193  002FD6  EC5F  F018         	call	_A6_Init	;wreg free
  3194  002FDA                     l6124:
  3195  002FDA  EC09  F000         	call	_loop	;wreg free
  3196  002FDE  EFED  F017         	goto	l6124
  3197  002FE2  EF07  F000         	goto	start
  3198  002FE6                     __end_of_main:
  3199                           	opt callstack 0
  3200                           
  3201 ;; *************** function _loop *****************
  3202 ;; Defined at:
  3203 ;;		line 29 in file "main.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  zzzz           32   96[BANK1 ] unsigned char [32]
  3208 ;;  ns              1  172[BANK1 ] unsigned char 
  3209 ;;  zzzz           32   64[BANK1 ] unsigned char [32]
  3210 ;;  zzzz           32   32[BANK1 ] unsigned char [32]
  3211 ;;  response       32    0[BANK1 ] unsigned char [32]
  3212 ;;  zzzz           32  128[BANK1 ] unsigned char [32]
  3213 ;;  zz              4  168[BANK1 ] unsigned long 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      void 
  3216 ;; Registers used:
  3217 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3223 ;;      Params:         0       0       0       0       0       0       0       0       0
  3224 ;;      Locals:         0       0     173       0       0       0       0       0       0
  3225 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3226 ;;      Totals:         0       4     173       0       0       0       0       0       0
  3227 ;;Total ram usage:      177 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:   10
  3230 ;; This function calls:
  3231 ;;		_A6_BaudRateAutoDetect
  3232 ;;		_A6_BaudRateGet
  3233 ;;		_A6_BaudRateSet
  3234 ;;		_A6_Command
  3235 ;;		_A6_IsAlive
  3236 ;;		_A6_NetworkGetRSSI
  3237 ;;		_A6_NetworkGetRSSILevel
  3238 ;;		_A6_NetworkGetStatus
  3239 ;;		_A6_Process_Random_Comms
  3240 ;;		_TFT_ConsoleInit
  3241 ;;		_TFT_ConsolePrintLine
  3242 ;;		_sprintf
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text1
  3249  000012                     __ptext1:
  3250                           	opt callstack 0
  3251  000012                     _loop:
  3252                           	opt callstack 20
  3253  000012                     
  3254                           ;main.c: 33: A6_Process_Random_Comms();
  3255  000012  ECDF  F011         	call	_A6_Process_Random_Comms	;wreg free
  3256  000016                     
  3257                           ;main.c: 35: if((MILLISECONDS > 20000) && (tmp4 < (MILLISECONDS - 20000))) {
  3258  000016  0101               	movlb	1	; () banked
  3259  000018  51CC               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3260  00001A  11CB               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3261  00001C  E10B               	bnz	u5020
  3262  00001E  0E21               	movlw	33
  3263  000020  5DC9               	subwf	_MILLISECONDS& (0+255),w,b
  3264  000022  0E4E               	movlw	78
  3265  000024  59CA               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3266  000026  A0D8               	btfss	status,0,c
  3267  000028  EF18  F000         	goto	u5021
  3268  00002C  EF1A  F000         	goto	u5020
  3269  000030                     u5021:
  3270  000030  EF7D  F001         	goto	l5972
  3271  000034                     u5020:
  3272  000034                     
  3273                           ; BSR set to: 1
  3274  000034  0EE0               	movlw	224
  3275  000036  25C9               	addwf	_MILLISECONDS& (0+255),w,b
  3276  000038  0100               	movlb	0	; () banked
  3277  00003A  6FAC               	movwf	??_loop& (0+255),b
  3278  00003C  0EB1               	movlw	177
  3279  00003E  0101               	movlb	1	; () banked
  3280  000040  21CA               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3281  000042  0100               	movlb	0	; () banked
  3282  000044  6FAD               	movwf	(??_loop+1)& (0+255),b
  3283  000046  0EFF               	movlw	255
  3284  000048  0101               	movlb	1	; () banked
  3285  00004A  21CB               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3286  00004C  0100               	movlb	0	; () banked
  3287  00004E  6FAE               	movwf	(??_loop+2)& (0+255),b
  3288  000050  0EFF               	movlw	255
  3289  000052  0101               	movlb	1	; () banked
  3290  000054  21CC               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3291  000056  0100               	movlb	0	; () banked
  3292  000058  6FAF               	movwf	(??_loop+3)& (0+255),b
  3293  00005A  51AC               	movf	??_loop& (0+255),w,b
  3294  00005C  0101               	movlb	1	; () banked
  3295  00005E  5DB9               	subwf	_tmp4& (0+255),w,b
  3296  000060  0100               	movlb	0	; () banked
  3297  000062  51AD               	movf	(??_loop+1)& (0+255),w,b
  3298  000064  0101               	movlb	1	; () banked
  3299  000066  59BA               	subwfb	(_tmp4+1)& (0+255),w,b
  3300  000068  0100               	movlb	0	; () banked
  3301  00006A  51AE               	movf	(??_loop+2)& (0+255),w,b
  3302  00006C  0101               	movlb	1	; () banked
  3303  00006E  59BB               	subwfb	(_tmp4+2)& (0+255),w,b
  3304  000070  0100               	movlb	0	; () banked
  3305  000072  51AF               	movf	(??_loop+3)& (0+255),w,b
  3306  000074  0101               	movlb	1	; () banked
  3307  000076  59BC               	subwfb	(_tmp4+3)& (0+255),w,b
  3308  000078  B0D8               	btfsc	status,0,c
  3309  00007A  EF41  F000         	goto	u5031
  3310  00007E  EF43  F000         	goto	u5030
  3311  000082                     u5031:
  3312  000082  EF7D  F001         	goto	l5972
  3313  000086                     u5030:
  3314  000086                     
  3315                           ; BSR set to: 1
  3316                           ;main.c: 36: tmp4 = MILLISECONDS;
  3317  000086  C1C9  F1B9         	movff	_MILLISECONDS,_tmp4
  3318  00008A  C1CA  F1BA         	movff	_MILLISECONDS+1,_tmp4+1
  3319  00008E  C1CB  F1BB         	movff	_MILLISECONDS+2,_tmp4+2
  3320  000092  C1CC  F1BC         	movff	_MILLISECONDS+3,_tmp4+3
  3321  000096                     
  3322                           ; BSR set to: 1
  3323                           ;main.c: 38: char zzzz[32];;main.c: 39: sprintf(zzzz, "Change baud rate (%lu)", A6_BaudR
      +                          ateGet());
  3324  000096  0E80               	movlw	low loop@zzzz
  3325  000098  6E4A               	movwf	sprintf@sp^0,c
  3326  00009A  0E01               	movlw	high loop@zzzz
  3327  00009C  6E4B               	movwf	(sprintf@sp+1)^0,c
  3328  00009E  0EE9               	movlw	low STR_1
  3329  0000A0  6E4C               	movwf	sprintf@f^0,c
  3330  0000A2  0E5E               	movlw	high STR_1
  3331  0000A4  6E4D               	movwf	(sprintf@f+1)^0,c
  3332  0000A6  ECAA  F00B         	call	_A6_BaudRateGet	;wreg free
  3333  0000AA  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3334  0000AE  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3335  0000B2  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3336  0000B6  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3337  0000BA  ECA7  F003         	call	_sprintf	;wreg free
  3338  0000BE                     
  3339                           ;main.c: 40: TFT_ConsolePrintLine(zzzz, 0xFFE0);
  3340  0000BE  0E80               	movlw	low loop@zzzz
  3341  0000C0  0100               	movlb	0	; () banked
  3342  0000C2  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3343  0000C4  0E01               	movlw	high loop@zzzz
  3344  0000C6  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3345  0000C8  0EFF               	movlw	255
  3346  0000CA  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3347  0000CC  0EE0               	movlw	224
  3348  0000CE  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3349  0000D0  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3350  0000D4                     
  3351                           ;main.c: 42: uint32_t zz = 0;
  3352  0000D4  0E00               	movlw	0
  3353  0000D6  0101               	movlb	1	; () banked
  3354  0000D8  6FA8               	movwf	loop@zz& (0+255),b
  3355  0000DA  0E00               	movlw	0
  3356  0000DC  6FA9               	movwf	(loop@zz+1)& (0+255),b
  3357  0000DE  0E00               	movlw	0
  3358  0000E0  6FAA               	movwf	(loop@zz+2)& (0+255),b
  3359  0000E2  0E00               	movlw	0
  3360  0000E4  6FAB               	movwf	(loop@zz+3)& (0+255),b
  3361                           
  3362                           ;main.c: 43: switch(A6_BaudRateGet()) {
  3363  0000E6  EFD7  F000         	goto	l5946
  3364  0000EA                     l5932:
  3365                           
  3366                           ;main.c: 45: zz = A6_BaudRateSet(115200);
  3367  0000EA  0E00               	movlw	0
  3368  0000EC  0100               	movlb	0	; () banked
  3369  0000EE  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3370  0000F0  0EC2               	movlw	194
  3371  0000F2  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3372  0000F4  0E01               	movlw	1
  3373  0000F6  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3374  0000F8  0E00               	movlw	0
  3375  0000FA  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3376  0000FC  EC15  F00B         	call	_A6_BaudRateSet	;wreg free
  3377  000100  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3378  000104  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3379  000108  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3380  00010C  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3381                           
  3382                           ;main.c: 46: break;
  3383  000110  EF12  F001         	goto	l5948
  3384  000114                     l5934:
  3385                           
  3386                           ;main.c: 48: zz = A6_BaudRateSet(9600);
  3387  000114  0E80               	movlw	128
  3388  000116  0100               	movlb	0	; () banked
  3389  000118  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3390  00011A  0E25               	movlw	37
  3391  00011C  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3392  00011E  0E00               	movlw	0
  3393  000120  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3394  000122  0E00               	movlw	0
  3395  000124  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3396  000126  EC15  F00B         	call	_A6_BaudRateSet	;wreg free
  3397  00012A  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3398  00012E  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3399  000132  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3400  000136  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3401                           
  3402                           ;main.c: 49: break;
  3403  00013A  EF12  F001         	goto	l5948
  3404  00013E                     l5936:
  3405                           
  3406                           ;main.c: 51: zz = A6_BaudRateSet(57600);
  3407  00013E  0E00               	movlw	0
  3408  000140  0100               	movlb	0	; () banked
  3409  000142  6F70               	movwf	A6_BaudRateSet@baudRate& (0+255),b
  3410  000144  0EE1               	movlw	225
  3411  000146  6F71               	movwf	(A6_BaudRateSet@baudRate+1)& (0+255),b
  3412  000148  0E00               	movlw	0
  3413  00014A  6F72               	movwf	(A6_BaudRateSet@baudRate+2)& (0+255),b
  3414  00014C  0E00               	movlw	0
  3415  00014E  6F73               	movwf	(A6_BaudRateSet@baudRate+3)& (0+255),b
  3416  000150  EC15  F00B         	call	_A6_BaudRateSet	;wreg free
  3417  000154  C070  F1A8         	movff	?_A6_BaudRateSet,loop@zz
  3418  000158  C071  F1A9         	movff	?_A6_BaudRateSet+1,loop@zz+1
  3419  00015C  C072  F1AA         	movff	?_A6_BaudRateSet+2,loop@zz+2
  3420  000160  C073  F1AB         	movff	?_A6_BaudRateSet+3,loop@zz+3
  3421                           
  3422                           ;main.c: 52: break;
  3423  000164  EF12  F001         	goto	l5948
  3424  000168                     l5938:
  3425                           
  3426                           ;main.c: 54: sprintf(zzzz, "Invalid current baud rate (%lu)", A6_BaudRateGet());
  3427  000168  0E80               	movlw	low loop@zzzz
  3428  00016A  6E4A               	movwf	sprintf@sp^0,c
  3429  00016C  0E01               	movlw	high loop@zzzz
  3430  00016E  6E4B               	movwf	(sprintf@sp+1)^0,c
  3431  000170  0E2F               	movlw	low STR_2
  3432  000172  6E4C               	movwf	sprintf@f^0,c
  3433  000174  0E5E               	movlw	high STR_2
  3434  000176  6E4D               	movwf	(sprintf@f+1)^0,c
  3435  000178  ECAA  F00B         	call	_A6_BaudRateGet	;wreg free
  3436  00017C  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3437  000180  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3438  000184  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3439  000188  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3440  00018C  ECA7  F003         	call	_sprintf	;wreg free
  3441  000190                     
  3442                           ;main.c: 55: TFT_ConsolePrintLine(zzzz, 0xFFE0);
  3443  000190  0E80               	movlw	low loop@zzzz
  3444  000192  0100               	movlb	0	; () banked
  3445  000194  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3446  000196  0E01               	movlw	high loop@zzzz
  3447  000198  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3448  00019A  0EFF               	movlw	255
  3449  00019C  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3450  00019E  0EE0               	movlw	224
  3451  0001A0  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3452  0001A2  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3453  0001A6                     
  3454                           ;main.c: 56: A6_BaudRateAutoDetect();
  3455  0001A6  EC17  F00E         	call	_A6_BaudRateAutoDetect	;wreg free
  3456                           
  3457                           ;main.c: 57: break;
  3458  0001AA  EF12  F001         	goto	l5948
  3459  0001AE                     l5946:
  3460                           
  3461                           ; BSR set to: 1
  3462  0001AE  ECAA  F00B         	call	_A6_BaudRateGet	;wreg free
  3463                           
  3464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3465                           ; Switch size 1, requested type "simple"
  3466                           ; Number of cases is 1, Range of values is 0 to 0
  3467                           ; switch strategies available:
  3468                           ; Name         Instructions Cycles
  3469                           ; simple_byte            4     3 (average)
  3470                           ;	Chosen strategy is simple_byte
  3471  0001B2  5022               	movf	(?_A6_BaudRateGet+3)^0,w,c
  3472  0001B4  0A00               	xorlw	0	; case 0
  3473  0001B6  B4D8               	btfsc	status,2,c
  3474  0001B8  EF07  F001         	goto	l6452
  3475  0001BC  EFB4  F000         	goto	l5938
  3476  0001C0                     l6448:
  3477                           
  3478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  3479                           ; Switch size 1, requested type "simple"
  3480                           ; Number of cases is 2, Range of values is 37 to 225
  3481                           ; switch strategies available:
  3482                           ; Name         Instructions Cycles
  3483                           ; simple_byte            7     4 (average)
  3484                           ;	Chosen strategy is simple_byte
  3485  0001C0  5020               	movf	(?_A6_BaudRateGet+1)^0,w,c
  3486  0001C2  0A25               	xorlw	37	; case 37
  3487  0001C4  B4D8               	btfsc	status,2,c
  3488  0001C6  EFEB  F000         	goto	l6454
  3489  0001CA  0AC4               	xorlw	196	; case 225
  3490  0001CC  B4D8               	btfsc	status,2,c
  3491  0001CE  EFF2  F000         	goto	l6456
  3492  0001D2  EFB4  F000         	goto	l5938
  3493  0001D6                     l6454:
  3494                           
  3495                           ; Switch size 1, requested type "simple"
  3496                           ; Number of cases is 1, Range of values is 128 to 128
  3497                           ; switch strategies available:
  3498                           ; Name         Instructions Cycles
  3499                           ; simple_byte            4     3 (average)
  3500                           ;	Chosen strategy is simple_byte
  3501  0001D6  501F               	movf	?_A6_BaudRateGet^0,w,c
  3502  0001D8  0A80               	xorlw	128	; case 128
  3503  0001DA  B4D8               	btfsc	status,2,c
  3504  0001DC  EF9F  F000         	goto	l5936
  3505  0001E0  EFB4  F000         	goto	l5938
  3506  0001E4                     l6456:
  3507                           
  3508                           ; Switch size 1, requested type "simple"
  3509                           ; Number of cases is 1, Range of values is 0 to 0
  3510                           ; switch strategies available:
  3511                           ; Name         Instructions Cycles
  3512                           ; simple_byte            4     3 (average)
  3513                           ;	Chosen strategy is simple_byte
  3514  0001E4  501F               	movf	?_A6_BaudRateGet^0,w,c
  3515  0001E6  0A00               	xorlw	0	; case 0
  3516  0001E8  B4D8               	btfsc	status,2,c
  3517  0001EA  EF75  F000         	goto	l5932
  3518  0001EE  EFB4  F000         	goto	l5938
  3519  0001F2                     l6450:
  3520                           
  3521                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3522                           ; Switch size 1, requested type "simple"
  3523                           ; Number of cases is 1, Range of values is 194 to 194
  3524                           ; switch strategies available:
  3525                           ; Name         Instructions Cycles
  3526                           ; simple_byte            4     3 (average)
  3527                           ;	Chosen strategy is simple_byte
  3528  0001F2  5020               	movf	(?_A6_BaudRateGet+1)^0,w,c
  3529  0001F4  0AC2               	xorlw	194	; case 194
  3530  0001F6  B4D8               	btfsc	status,2,c
  3531  0001F8  EF00  F001         	goto	l6458
  3532  0001FC  EFB4  F000         	goto	l5938
  3533  000200                     l6458:
  3534                           
  3535                           ; Switch size 1, requested type "simple"
  3536                           ; Number of cases is 1, Range of values is 0 to 0
  3537                           ; switch strategies available:
  3538                           ; Name         Instructions Cycles
  3539                           ; simple_byte            4     3 (average)
  3540                           ;	Chosen strategy is simple_byte
  3541  000200  501F               	movf	?_A6_BaudRateGet^0,w,c
  3542  000202  0A00               	xorlw	0	; case 0
  3543  000204  B4D8               	btfsc	status,2,c
  3544  000206  EF8A  F000         	goto	l5934
  3545  00020A  EFB4  F000         	goto	l5938
  3546  00020E                     l6452:
  3547                           
  3548                           ; Switch size 1, requested type "simple"
  3549                           ; Number of cases is 2, Range of values is 0 to 1
  3550                           ; switch strategies available:
  3551                           ; Name         Instructions Cycles
  3552                           ; simple_byte            7     4 (average)
  3553                           ;	Chosen strategy is simple_byte
  3554  00020E  5021               	movf	(?_A6_BaudRateGet+2)^0,w,c
  3555  000210  0A00               	xorlw	0	; case 0
  3556  000212  B4D8               	btfsc	status,2,c
  3557  000214  EFE0  F000         	goto	l6448
  3558  000218  0A01               	xorlw	1	; case 1
  3559  00021A  B4D8               	btfsc	status,2,c
  3560  00021C  EFF9  F000         	goto	l6450
  3561  000220  EFB4  F000         	goto	l5938
  3562  000224                     l5948:
  3563                           
  3564                           ;main.c: 60: sprintf(zzzz, "Baud rate changed (-> %lu)", zz);
  3565  000224  0E80               	movlw	low loop@zzzz
  3566  000226  6E4A               	movwf	sprintf@sp^0,c
  3567  000228  0E01               	movlw	high loop@zzzz
  3568  00022A  6E4B               	movwf	(sprintf@sp+1)^0,c
  3569  00022C  0E6B               	movlw	low STR_3
  3570  00022E  6E4C               	movwf	sprintf@f^0,c
  3571  000230  0E5E               	movlw	high STR_3
  3572  000232  6E4D               	movwf	(sprintf@f+1)^0,c
  3573  000234  C1A8  F04E         	movff	loop@zz,?_sprintf+4
  3574  000238  C1A9  F04F         	movff	loop@zz+1,?_sprintf+5
  3575  00023C  C1AA  F050         	movff	loop@zz+2,?_sprintf+6
  3576  000240  C1AB  F051         	movff	loop@zz+3,?_sprintf+7
  3577  000244  ECA7  F003         	call	_sprintf	;wreg free
  3578  000248                     
  3579                           ;main.c: 61: TFT_ConsolePrintLine(((zz == 0) ? "Error changing baud rate" : zzzz), 0xF81
      +                          F);
  3580  000248  0101               	movlb	1	; () banked
  3581  00024A  51A8               	movf	loop@zz& (0+255),w,b
  3582  00024C  11A9               	iorwf	(loop@zz+1)& (0+255),w,b
  3583  00024E  11AA               	iorwf	(loop@zz+2)& (0+255),w,b
  3584  000250  11AB               	iorwf	(loop@zz+3)& (0+255),w,b
  3585  000252  B4D8               	btfsc	status,2,c
  3586  000254  EF2E  F001         	goto	u5041
  3587  000258  EF30  F001         	goto	u5040
  3588  00025C                     u5041:
  3589  00025C  EF36  F001         	goto	l5954
  3590  000260                     u5040:
  3591  000260                     
  3592                           ; BSR set to: 1
  3593  000260  0E80               	movlw	low loop@zzzz
  3594  000262  6FA0               	movwf	_loop$143& (0+255),b
  3595  000264  0E01               	movlw	high loop@zzzz
  3596  000266  6FA1               	movwf	(_loop$143+1)& (0+255),b
  3597  000268  EF3A  F001         	goto	l5956
  3598  00026C                     l5954:
  3599                           
  3600                           ; BSR set to: 1
  3601  00026C  0EA1               	movlw	low STR_4
  3602  00026E  6FA0               	movwf	_loop$143& (0+255),b
  3603  000270  0E5E               	movlw	high STR_4
  3604  000272  6FA1               	movwf	(_loop$143+1)& (0+255),b
  3605  000274                     l5956:
  3606                           
  3607                           ; BSR set to: 1
  3608  000274  C1A0  F06B         	movff	_loop$143,TFT_ConsolePrintLine@str
  3609  000278  C1A1  F06C         	movff	_loop$143+1,TFT_ConsolePrintLine@str+1
  3610  00027C  0EF8               	movlw	248
  3611  00027E  0100               	movlb	0	; () banked
  3612  000280  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3613  000282  0E1F               	movlw	31
  3614  000284  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3615  000286  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3616  00028A                     
  3617                           ;main.c: 63: if(A6_IsAlive() == 0) {
  3618  00028A  EC00  F016         	call	_A6_IsAlive	;wreg free
  3619  00028E  0900               	iorlw	0
  3620  000290  A4D8               	btfss	status,2,c
  3621  000292  EF4D  F001         	goto	u5051
  3622  000296  EF4F  F001         	goto	u5050
  3623  00029A                     u5051:
  3624  00029A  EF7D  F001         	goto	l5972
  3625  00029E                     u5050:
  3626  00029E                     
  3627                           ;main.c: 64: TFT_ConsolePrintLine("Comm is dead. Retry...", 0x001F);
  3628  00029E  0E00               	movlw	low STR_5
  3629  0002A0  0100               	movlb	0	; () banked
  3630  0002A2  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3631  0002A4  0E5F               	movlw	high STR_5
  3632  0002A6  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3633  0002A8  0E00               	movlw	0
  3634  0002AA  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3635  0002AC  0E1F               	movlw	31
  3636  0002AE  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3637  0002B0  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3638  0002B4                     
  3639                           ;main.c: 65: A6_BaudRateAutoDetect();
  3640  0002B4  EC17  F00E         	call	_A6_BaudRateAutoDetect	;wreg free
  3641  0002B8                     
  3642                           ;main.c: 66: TFT_ConsolePrintLine(((A6_IsAlive() == 0) ? "Still dead" : "Resurrected!"),
      +                           0x001F);
  3643  0002B8  EC00  F016         	call	_A6_IsAlive	;wreg free
  3644  0002BC  0900               	iorlw	0
  3645  0002BE  B4D8               	btfsc	status,2,c
  3646  0002C0  EF64  F001         	goto	u5061
  3647  0002C4  EF66  F001         	goto	u5060
  3648  0002C8                     u5061:
  3649  0002C8  EF6D  F001         	goto	l5968
  3650  0002CC                     u5060:
  3651  0002CC  0E3E               	movlw	low STR_7
  3652  0002CE  0101               	movlb	1	; () banked
  3653  0002D0  6FA2               	movwf	_loop$148& (0+255),b
  3654  0002D2  0E5F               	movlw	high STR_7
  3655  0002D4  6FA3               	movwf	(_loop$148+1)& (0+255),b
  3656  0002D6  EF72  F001         	goto	l5970
  3657  0002DA                     l5968:
  3658  0002DA  0E85               	movlw	low STR_6
  3659  0002DC  0101               	movlb	1	; () banked
  3660  0002DE  6FA2               	movwf	_loop$148& (0+255),b
  3661  0002E0  0E5F               	movlw	high STR_6
  3662  0002E2  6FA3               	movwf	(_loop$148+1)& (0+255),b
  3663  0002E4                     l5970:
  3664                           
  3665                           ; BSR set to: 1
  3666  0002E4  C1A2  F06B         	movff	_loop$148,TFT_ConsolePrintLine@str
  3667  0002E8  C1A3  F06C         	movff	_loop$148+1,TFT_ConsolePrintLine@str+1
  3668  0002EC  0E00               	movlw	0
  3669  0002EE  0100               	movlb	0	; () banked
  3670  0002F0  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3671  0002F2  0E1F               	movlw	31
  3672  0002F4  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3673  0002F6  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3674  0002FA                     l5972:
  3675                           
  3676                           ;main.c: 67: };main.c: 68: };main.c: 70: if((MILLISECONDS > 2500) && (tmp1 < (MILLISECON
      +                          DS - 2500))) {
  3677  0002FA  0101               	movlb	1	; () banked
  3678  0002FC  51CC               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3679  0002FE  11CB               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3680  000300  E10B               	bnz	u5070
  3681  000302  0EC5               	movlw	197
  3682  000304  5DC9               	subwf	_MILLISECONDS& (0+255),w,b
  3683  000306  0E09               	movlw	9
  3684  000308  59CA               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3685  00030A  A0D8               	btfss	status,0,c
  3686  00030C  EF8A  F001         	goto	u5071
  3687  000310  EF8C  F001         	goto	u5070
  3688  000314                     u5071:
  3689  000314  EFE3  F001         	goto	l5984
  3690  000318                     u5070:
  3691  000318                     
  3692                           ; BSR set to: 1
  3693  000318  0E3C               	movlw	60
  3694  00031A  25C9               	addwf	_MILLISECONDS& (0+255),w,b
  3695  00031C  0100               	movlb	0	; () banked
  3696  00031E  6FAC               	movwf	??_loop& (0+255),b
  3697  000320  0EF6               	movlw	246
  3698  000322  0101               	movlb	1	; () banked
  3699  000324  21CA               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3700  000326  0100               	movlb	0	; () banked
  3701  000328  6FAD               	movwf	(??_loop+1)& (0+255),b
  3702  00032A  0EFF               	movlw	255
  3703  00032C  0101               	movlb	1	; () banked
  3704  00032E  21CB               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3705  000330  0100               	movlb	0	; () banked
  3706  000332  6FAE               	movwf	(??_loop+2)& (0+255),b
  3707  000334  0EFF               	movlw	255
  3708  000336  0101               	movlb	1	; () banked
  3709  000338  21CC               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3710  00033A  0100               	movlb	0	; () banked
  3711  00033C  6FAF               	movwf	(??_loop+3)& (0+255),b
  3712  00033E  51AC               	movf	??_loop& (0+255),w,b
  3713  000340  0101               	movlb	1	; () banked
  3714  000342  5DC5               	subwf	_tmp1& (0+255),w,b
  3715  000344  0100               	movlb	0	; () banked
  3716  000346  51AD               	movf	(??_loop+1)& (0+255),w,b
  3717  000348  0101               	movlb	1	; () banked
  3718  00034A  59C6               	subwfb	(_tmp1+1)& (0+255),w,b
  3719  00034C  0100               	movlb	0	; () banked
  3720  00034E  51AE               	movf	(??_loop+2)& (0+255),w,b
  3721  000350  0101               	movlb	1	; () banked
  3722  000352  59C7               	subwfb	(_tmp1+2)& (0+255),w,b
  3723  000354  0100               	movlb	0	; () banked
  3724  000356  51AF               	movf	(??_loop+3)& (0+255),w,b
  3725  000358  0101               	movlb	1	; () banked
  3726  00035A  59C8               	subwfb	(_tmp1+3)& (0+255),w,b
  3727  00035C  B0D8               	btfsc	status,0,c
  3728  00035E  EFB3  F001         	goto	u5081
  3729  000362  EFB5  F001         	goto	u5080
  3730  000366                     u5081:
  3731  000366  EFE3  F001         	goto	l5984
  3732  00036A                     u5080:
  3733  00036A                     
  3734                           ; BSR set to: 1
  3735                           ;main.c: 71: tmp1 = MILLISECONDS;
  3736  00036A  C1C9  F1C5         	movff	_MILLISECONDS,_tmp1
  3737  00036E  C1CA  F1C6         	movff	_MILLISECONDS+1,_tmp1+1
  3738  000372  C1CB  F1C7         	movff	_MILLISECONDS+2,_tmp1+2
  3739  000376  C1CC  F1C8         	movff	_MILLISECONDS+3,_tmp1+3
  3740  00037A                     
  3741                           ; BSR set to: 1
  3742                           ;main.c: 73: TFT_ConsolePrintLine("Check time", 0xFFE0);
  3743  00037A  0E9B               	movlw	low STR_8
  3744  00037C  0100               	movlb	0	; () banked
  3745  00037E  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3746  000380  0E5F               	movlw	high STR_8
  3747  000382  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3748  000384  0EFF               	movlw	255
  3749  000386  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3750  000388  0EE0               	movlw	224
  3751  00038A  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3752  00038C  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3753  000390                     
  3754                           ;main.c: 74: char response[32];;main.c: 75: A6_Command("AT+CCLK?\r", 0, response, 32);
  3755  000390  0EB0               	movlw	low STR_9
  3756  000392  6E18               	movwf	A6_Command@command^0,c
  3757  000394  0E5F               	movlw	high STR_9
  3758  000396  6E19               	movwf	(A6_Command@command+1)^0,c
  3759  000398  0E00               	movlw	0
  3760  00039A  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3761  00039C  0E00               	movlw	0
  3762  00039E  6E1A               	movwf	A6_Command@timeout^0,c
  3763  0003A0  0E00               	movlw	low loop@response
  3764  0003A2  6E1C               	movwf	A6_Command@response^0,c
  3765  0003A4  0E01               	movlw	high loop@response
  3766  0003A6  6E1D               	movwf	(A6_Command@response+1)^0,c
  3767  0003A8  0E20               	movlw	32
  3768  0003AA  6E1E               	movwf	A6_Command@responseLen^0,c
  3769  0003AC  ECAE  F012         	call	_A6_Command	;wreg free
  3770  0003B0                     
  3771                           ;main.c: 76: TFT_ConsolePrintLine(response, 0x07E0);
  3772  0003B0  0E00               	movlw	low loop@response
  3773  0003B2  0100               	movlb	0	; () banked
  3774  0003B4  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3775  0003B6  0E01               	movlw	high loop@response
  3776  0003B8  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3777  0003BA  0E07               	movlw	7
  3778  0003BC  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3779  0003BE  0EE0               	movlw	224
  3780  0003C0  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3781  0003C2  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3782  0003C6                     l5984:
  3783                           
  3784                           ;main.c: 77: };main.c: 79: if((MILLISECONDS > 4000) && (tmp2 < (MILLISECONDS - 4000))) {
  3785  0003C6  0101               	movlb	1	; () banked
  3786  0003C8  51CC               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3787  0003CA  11CB               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3788  0003CC  E10B               	bnz	u5090
  3789  0003CE  0EA1               	movlw	161
  3790  0003D0  5DC9               	subwf	_MILLISECONDS& (0+255),w,b
  3791  0003D2  0E0F               	movlw	15
  3792  0003D4  59CA               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3793  0003D6  A0D8               	btfss	status,0,c
  3794  0003D8  EFF0  F001         	goto	u5091
  3795  0003DC  EFF2  F001         	goto	u5090
  3796  0003E0                     u5091:
  3797  0003E0  EF4D  F002         	goto	l5996
  3798  0003E4                     u5090:
  3799  0003E4                     
  3800                           ; BSR set to: 1
  3801  0003E4  0E60               	movlw	96
  3802  0003E6  25C9               	addwf	_MILLISECONDS& (0+255),w,b
  3803  0003E8  0100               	movlb	0	; () banked
  3804  0003EA  6FAC               	movwf	??_loop& (0+255),b
  3805  0003EC  0EF0               	movlw	240
  3806  0003EE  0101               	movlb	1	; () banked
  3807  0003F0  21CA               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3808  0003F2  0100               	movlb	0	; () banked
  3809  0003F4  6FAD               	movwf	(??_loop+1)& (0+255),b
  3810  0003F6  0EFF               	movlw	255
  3811  0003F8  0101               	movlb	1	; () banked
  3812  0003FA  21CB               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3813  0003FC  0100               	movlb	0	; () banked
  3814  0003FE  6FAE               	movwf	(??_loop+2)& (0+255),b
  3815  000400  0EFF               	movlw	255
  3816  000402  0101               	movlb	1	; () banked
  3817  000404  21CC               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3818  000406  0100               	movlb	0	; () banked
  3819  000408  6FAF               	movwf	(??_loop+3)& (0+255),b
  3820  00040A  51AC               	movf	??_loop& (0+255),w,b
  3821  00040C  0101               	movlb	1	; () banked
  3822  00040E  5DC1               	subwf	_tmp2& (0+255),w,b
  3823  000410  0100               	movlb	0	; () banked
  3824  000412  51AD               	movf	(??_loop+1)& (0+255),w,b
  3825  000414  0101               	movlb	1	; () banked
  3826  000416  59C2               	subwfb	(_tmp2+1)& (0+255),w,b
  3827  000418  0100               	movlb	0	; () banked
  3828  00041A  51AE               	movf	(??_loop+2)& (0+255),w,b
  3829  00041C  0101               	movlb	1	; () banked
  3830  00041E  59C3               	subwfb	(_tmp2+2)& (0+255),w,b
  3831  000420  0100               	movlb	0	; () banked
  3832  000422  51AF               	movf	(??_loop+3)& (0+255),w,b
  3833  000424  0101               	movlb	1	; () banked
  3834  000426  59C4               	subwfb	(_tmp2+3)& (0+255),w,b
  3835  000428  B0D8               	btfsc	status,0,c
  3836  00042A  EF19  F002         	goto	u5101
  3837  00042E  EF1B  F002         	goto	u5100
  3838  000432                     u5101:
  3839  000432  EF4D  F002         	goto	l5996
  3840  000436                     u5100:
  3841  000436                     
  3842                           ; BSR set to: 1
  3843                           ;main.c: 80: tmp2 = MILLISECONDS;
  3844  000436  C1C9  F1C1         	movff	_MILLISECONDS,_tmp2
  3845  00043A  C1CA  F1C2         	movff	_MILLISECONDS+1,_tmp2+1
  3846  00043E  C1CB  F1C3         	movff	_MILLISECONDS+2,_tmp2+2
  3847  000442  C1CC  F1C4         	movff	_MILLISECONDS+3,_tmp2+3
  3848  000446                     
  3849                           ; BSR set to: 1
  3850                           ;main.c: 81: TFT_ConsolePrintLine("Check baud rate", 0xFFE0);
  3851  000446  0E2E               	movlw	low STR_10
  3852  000448  0100               	movlb	0	; () banked
  3853  00044A  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3854  00044C  0E5F               	movlw	high STR_10
  3855  00044E  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3856  000450  0EFF               	movlw	255
  3857  000452  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3858  000454  0EE0               	movlw	224
  3859  000456  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3860  000458  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3861  00045C                     
  3862                           ;main.c: 82: char zzzz[32];;main.c: 83: sprintf(zzzz, "%lu", A6_BaudRateGet());
  3863  00045C  0E20               	movlw	low loop@zzzz_153
  3864  00045E  6E4A               	movwf	sprintf@sp^0,c
  3865  000460  0E01               	movlw	high loop@zzzz_153
  3866  000462  6E4B               	movwf	(sprintf@sp+1)^0,c
  3867  000464  0EF6               	movlw	low STR_11
  3868  000466  6E4C               	movwf	sprintf@f^0,c
  3869  000468  0E5F               	movlw	high STR_11
  3870  00046A  6E4D               	movwf	(sprintf@f+1)^0,c
  3871  00046C  ECAA  F00B         	call	_A6_BaudRateGet	;wreg free
  3872  000470  C01F  F04E         	movff	?_A6_BaudRateGet,?_sprintf+4
  3873  000474  C020  F04F         	movff	?_A6_BaudRateGet+1,?_sprintf+5
  3874  000478  C021  F050         	movff	?_A6_BaudRateGet+2,?_sprintf+6
  3875  00047C  C022  F051         	movff	?_A6_BaudRateGet+3,?_sprintf+7
  3876  000480  ECA7  F003         	call	_sprintf	;wreg free
  3877  000484                     
  3878                           ;main.c: 84: TFT_ConsolePrintLine(zzzz, 0xF800);
  3879  000484  0E20               	movlw	low loop@zzzz_153
  3880  000486  0100               	movlb	0	; () banked
  3881  000488  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3882  00048A  0E01               	movlw	high loop@zzzz_153
  3883  00048C  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3884  00048E  0EF8               	movlw	248
  3885  000490  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3886  000492  0E00               	movlw	0
  3887  000494  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3888  000496  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3889  00049A                     l5996:
  3890                           
  3891                           ;main.c: 85: };main.c: 87: if((MILLISECONDS > 6500) && (tmp3 < (MILLISECONDS - 6500))) {
  3892  00049A  0101               	movlb	1	; () banked
  3893  00049C  51CC               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3894  00049E  11CB               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3895  0004A0  E10B               	bnz	u5110
  3896  0004A2  0E65               	movlw	101
  3897  0004A4  5DC9               	subwf	_MILLISECONDS& (0+255),w,b
  3898  0004A6  0E19               	movlw	25
  3899  0004A8  59CA               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3900  0004AA  A0D8               	btfss	status,0,c
  3901  0004AC  EF5A  F002         	goto	u5111
  3902  0004B0  EF5C  F002         	goto	u5110
  3903  0004B4                     u5111:
  3904  0004B4  EFB9  F002         	goto	l6008
  3905  0004B8                     u5110:
  3906  0004B8                     
  3907                           ; BSR set to: 1
  3908  0004B8  0E9C               	movlw	156
  3909  0004BA  25C9               	addwf	_MILLISECONDS& (0+255),w,b
  3910  0004BC  0100               	movlb	0	; () banked
  3911  0004BE  6FAC               	movwf	??_loop& (0+255),b
  3912  0004C0  0EE6               	movlw	230
  3913  0004C2  0101               	movlb	1	; () banked
  3914  0004C4  21CA               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3915  0004C6  0100               	movlb	0	; () banked
  3916  0004C8  6FAD               	movwf	(??_loop+1)& (0+255),b
  3917  0004CA  0EFF               	movlw	255
  3918  0004CC  0101               	movlb	1	; () banked
  3919  0004CE  21CB               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3920  0004D0  0100               	movlb	0	; () banked
  3921  0004D2  6FAE               	movwf	(??_loop+2)& (0+255),b
  3922  0004D4  0EFF               	movlw	255
  3923  0004D6  0101               	movlb	1	; () banked
  3924  0004D8  21CC               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3925  0004DA  0100               	movlb	0	; () banked
  3926  0004DC  6FAF               	movwf	(??_loop+3)& (0+255),b
  3927  0004DE  51AC               	movf	??_loop& (0+255),w,b
  3928  0004E0  0101               	movlb	1	; () banked
  3929  0004E2  5DBD               	subwf	_tmp3& (0+255),w,b
  3930  0004E4  0100               	movlb	0	; () banked
  3931  0004E6  51AD               	movf	(??_loop+1)& (0+255),w,b
  3932  0004E8  0101               	movlb	1	; () banked
  3933  0004EA  59BE               	subwfb	(_tmp3+1)& (0+255),w,b
  3934  0004EC  0100               	movlb	0	; () banked
  3935  0004EE  51AE               	movf	(??_loop+2)& (0+255),w,b
  3936  0004F0  0101               	movlb	1	; () banked
  3937  0004F2  59BF               	subwfb	(_tmp3+2)& (0+255),w,b
  3938  0004F4  0100               	movlb	0	; () banked
  3939  0004F6  51AF               	movf	(??_loop+3)& (0+255),w,b
  3940  0004F8  0101               	movlb	1	; () banked
  3941  0004FA  59C0               	subwfb	(_tmp3+3)& (0+255),w,b
  3942  0004FC  B0D8               	btfsc	status,0,c
  3943  0004FE  EF83  F002         	goto	u5121
  3944  000502  EF85  F002         	goto	u5120
  3945  000506                     u5121:
  3946  000506  EFB9  F002         	goto	l6008
  3947  00050A                     u5120:
  3948  00050A                     
  3949                           ; BSR set to: 1
  3950                           ;main.c: 88: tmp3 = MILLISECONDS;
  3951  00050A  C1C9  F1BD         	movff	_MILLISECONDS,_tmp3
  3952  00050E  C1CA  F1BE         	movff	_MILLISECONDS+1,_tmp3+1
  3953  000512  C1CB  F1BF         	movff	_MILLISECONDS+2,_tmp3+2
  3954  000516  C1CC  F1C0         	movff	_MILLISECONDS+3,_tmp3+3
  3955  00051A                     
  3956                           ; BSR set to: 1
  3957                           ;main.c: 90: TFT_ConsolePrintLine("Check RSSI", 0xFFE0);
  3958  00051A  0E7A               	movlw	low STR_12
  3959  00051C  0100               	movlb	0	; () banked
  3960  00051E  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3961  000520  0E5F               	movlw	high STR_12
  3962  000522  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3963  000524  0EFF               	movlw	255
  3964  000526  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3965  000528  0EE0               	movlw	224
  3966  00052A  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  3967  00052C  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  3968  000530                     
  3969                           ;main.c: 91: char zzzz[32];;main.c: 92: sprintf(zzzz, "Quality: %u; Level: %d", A6_Netwo
      +                          rkGetRSSI(), A6_NetworkGetRSSILevel());
  3970  000530  0E40               	movlw	low loop@zzzz_156
  3971  000532  6E4A               	movwf	sprintf@sp^0,c
  3972  000534  0E01               	movlw	high loop@zzzz_156
  3973  000536  6E4B               	movwf	(sprintf@sp+1)^0,c
  3974  000538  0E17               	movlw	low STR_13
  3975  00053A  6E4C               	movwf	sprintf@f^0,c
  3976  00053C  0E5F               	movlw	high STR_13
  3977  00053E  6E4D               	movwf	(sprintf@f+1)^0,c
  3978  000540  EC2D  F010         	call	_A6_NetworkGetRSSI	;wreg free
  3979  000544  0100               	movlb	0	; () banked
  3980  000546  6FAC               	movwf	??_loop& (0+255),b
  3981  000548  51AC               	movf	??_loop& (0+255),w,b
  3982  00054A  6E4E               	movwf	(?_sprintf+4)^0,c
  3983  00054C  6A4F               	clrf	(?_sprintf+5)^0,c
  3984  00054E  ECB3  F013         	call	_A6_NetworkGetRSSILevel	;wreg free
  3985  000552  6E50               	movwf	(?_sprintf+6)^0,c
  3986  000554  6A51               	clrf	(?_sprintf+7)^0,c
  3987  000556  BE50               	btfsc	(?_sprintf+6)^0,7,c
  3988  000558  0651               	decf	(?_sprintf+7)^0,f,c
  3989  00055A  ECA7  F003         	call	_sprintf	;wreg free
  3990  00055E                     
  3991                           ;main.c: 93: TFT_ConsolePrintLine(zzzz, 0xFFFF);
  3992  00055E  0E40               	movlw	low loop@zzzz_156
  3993  000560  0100               	movlb	0	; () banked
  3994  000562  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  3995  000564  0E01               	movlw	high loop@zzzz_156
  3996  000566  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  3997  000568  0EFF               	movlw	255
  3998  00056A  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  3999  00056C  696D               	setf	TFT_ConsolePrintLine@color& (0+255),b
  4000  00056E  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  4001  000572                     l6008:
  4002                           
  4003                           ;main.c: 94: };main.c: 96: if((MILLISECONDS > 8500) && (tmp5 < (MILLISECONDS - 8500))) {
  4004  000572  0101               	movlb	1	; () banked
  4005  000574  51CC               	movf	(_MILLISECONDS+3)& (0+255),w,b
  4006  000576  11CB               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  4007  000578  E10B               	bnz	u5130
  4008  00057A  0E35               	movlw	53
  4009  00057C  5DC9               	subwf	_MILLISECONDS& (0+255),w,b
  4010  00057E  0E21               	movlw	33
  4011  000580  59CA               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  4012  000582  A0D8               	btfss	status,0,c
  4013  000584  EFC6  F002         	goto	u5131
  4014  000588  EFC8  F002         	goto	u5130
  4015  00058C                     u5131:
  4016  00058C  EF48  F003         	goto	l6032
  4017  000590                     u5130:
  4018  000590                     
  4019                           ; BSR set to: 1
  4020  000590  0ECC               	movlw	204
  4021  000592  25C9               	addwf	_MILLISECONDS& (0+255),w,b
  4022  000594  0100               	movlb	0	; () banked
  4023  000596  6FAC               	movwf	??_loop& (0+255),b
  4024  000598  0EDE               	movlw	222
  4025  00059A  0101               	movlb	1	; () banked
  4026  00059C  21CA               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  4027  00059E  0100               	movlb	0	; () banked
  4028  0005A0  6FAD               	movwf	(??_loop+1)& (0+255),b
  4029  0005A2  0EFF               	movlw	255
  4030  0005A4  0101               	movlb	1	; () banked
  4031  0005A6  21CB               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  4032  0005A8  0100               	movlb	0	; () banked
  4033  0005AA  6FAE               	movwf	(??_loop+2)& (0+255),b
  4034  0005AC  0EFF               	movlw	255
  4035  0005AE  0101               	movlb	1	; () banked
  4036  0005B0  21CC               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  4037  0005B2  0100               	movlb	0	; () banked
  4038  0005B4  6FAF               	movwf	(??_loop+3)& (0+255),b
  4039  0005B6  51AC               	movf	??_loop& (0+255),w,b
  4040  0005B8  0101               	movlb	1	; () banked
  4041  0005BA  5DB5               	subwf	_tmp5& (0+255),w,b
  4042  0005BC  0100               	movlb	0	; () banked
  4043  0005BE  51AD               	movf	(??_loop+1)& (0+255),w,b
  4044  0005C0  0101               	movlb	1	; () banked
  4045  0005C2  59B6               	subwfb	(_tmp5+1)& (0+255),w,b
  4046  0005C4  0100               	movlb	0	; () banked
  4047  0005C6  51AE               	movf	(??_loop+2)& (0+255),w,b
  4048  0005C8  0101               	movlb	1	; () banked
  4049  0005CA  59B7               	subwfb	(_tmp5+2)& (0+255),w,b
  4050  0005CC  0100               	movlb	0	; () banked
  4051  0005CE  51AF               	movf	(??_loop+3)& (0+255),w,b
  4052  0005D0  0101               	movlb	1	; () banked
  4053  0005D2  59B8               	subwfb	(_tmp5+3)& (0+255),w,b
  4054  0005D4  B0D8               	btfsc	status,0,c
  4055  0005D6  EFEF  F002         	goto	u5141
  4056  0005DA  EFF1  F002         	goto	u5140
  4057  0005DE                     u5141:
  4058  0005DE  EF48  F003         	goto	l6032
  4059  0005E2                     u5140:
  4060  0005E2                     
  4061                           ; BSR set to: 1
  4062                           ;main.c: 97: tmp5 = MILLISECONDS;
  4063  0005E2  C1C9  F1B5         	movff	_MILLISECONDS,_tmp5
  4064  0005E6  C1CA  F1B6         	movff	_MILLISECONDS+1,_tmp5+1
  4065  0005EA  C1CB  F1B7         	movff	_MILLISECONDS+2,_tmp5+2
  4066  0005EE  C1CC  F1B8         	movff	_MILLISECONDS+3,_tmp5+3
  4067  0005F2                     
  4068                           ; BSR set to: 1
  4069                           ;main.c: 99: TFT_ConsolePrintLine("Check network registration", 0xFFE0);
  4070  0005F2  0E86               	movlw	low STR_14
  4071  0005F4  0100               	movlb	0	; () banked
  4072  0005F6  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  4073  0005F8  0E5E               	movlw	high STR_14
  4074  0005FA  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  4075  0005FC  0EFF               	movlw	255
  4076  0005FE  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  4077  000600  0EE0               	movlw	224
  4078  000602  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  4079  000604  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  4080  000608                     
  4081                           ;main.c: 100: uint8_t ns = A6_NetworkGetStatus();
  4082  000608  EC39  F00D         	call	_A6_NetworkGetStatus	;wreg free
  4083  00060C  0101               	movlb	1	; () banked
  4084  00060E  6FAC               	movwf	loop@ns& (0+255),b
  4085  000610                     
  4086                           ; BSR set to: 1
  4087                           ;main.c: 101: char zzzz[32];;main.c: 102: sprintf(zzzz, "Network status: %u (%s)", ns, (
      +                          (ns == 2) ? "Searching..." : ((ns == 1) ? "Registered" : "Other")));
  4088  000610  0E02               	movlw	2
  4089  000612  19AC               	xorwf	loop@ns& (0+255),w,b
  4090  000614  B4D8               	btfsc	status,2,c
  4091  000616  EF0F  F003         	goto	u5151
  4092  00061A  EF11  F003         	goto	u5150
  4093  00061E                     u5151:
  4094  00061E  EF29  F003         	goto	l6026
  4095  000622                     u5150:
  4096  000622                     
  4097                           ; BSR set to: 1
  4098  000622  05AC               	decf	loop@ns& (0+255),w,b
  4099  000624  B4D8               	btfsc	status,2,c
  4100  000626  EF17  F003         	goto	u5161
  4101  00062A  EF19  F003         	goto	u5160
  4102  00062E                     u5161:
  4103  00062E  EF1F  F003         	goto	l6024
  4104  000632                     u5160:
  4105  000632                     
  4106                           ; BSR set to: 1
  4107  000632  0EE8               	movlw	low STR_18
  4108  000634  6FA6               	movwf	_loop$168& (0+255),b
  4109  000636  0E5F               	movlw	high STR_18
  4110  000638  6FA7               	movwf	(_loop$168+1)& (0+255),b
  4111  00063A  EF23  F003         	goto	l104
  4112  00063E                     l6024:
  4113                           
  4114                           ; BSR set to: 1
  4115  00063E  0E90               	movlw	low STR_17
  4116  000640  6FA6               	movwf	_loop$168& (0+255),b
  4117  000642  0E5F               	movlw	high STR_17
  4118  000644  6FA7               	movwf	(_loop$168+1)& (0+255),b
  4119  000646                     l104:
  4120                           
  4121                           ; BSR set to: 1
  4122  000646  C1A6  F1A4         	movff	_loop$168,_loop$167
  4123  00064A  C1A7  F1A5         	movff	_loop$168+1,_loop$167+1
  4124  00064E  EF2D  F003         	goto	l6028
  4125  000652                     l6026:
  4126                           
  4127                           ; BSR set to: 1
  4128  000652  0E4B               	movlw	low STR_16
  4129  000654  6FA4               	movwf	_loop$167& (0+255),b
  4130  000656  0E5F               	movlw	high STR_16
  4131  000658  6FA5               	movwf	(_loop$167+1)& (0+255),b
  4132  00065A                     l6028:
  4133                           
  4134                           ; BSR set to: 1
  4135  00065A  0E60               	movlw	low loop@zzzz_160
  4136  00065C  6E4A               	movwf	sprintf@sp^0,c
  4137  00065E  0E01               	movlw	high loop@zzzz_160
  4138  000660  6E4B               	movwf	(sprintf@sp+1)^0,c
  4139  000662  0EBA               	movlw	low STR_15
  4140  000664  6E4C               	movwf	sprintf@f^0,c
  4141  000666  0E5E               	movlw	high STR_15
  4142  000668  6E4D               	movwf	(sprintf@f+1)^0,c
  4143  00066A  C1AC  F04E         	movff	loop@ns,?_sprintf+4
  4144  00066E  6A4F               	clrf	(?_sprintf+5)^0,c
  4145  000670  C1A4  F050         	movff	_loop$167,?_sprintf+6
  4146  000674  C1A5  F051         	movff	_loop$167+1,?_sprintf+7
  4147  000678  ECA7  F003         	call	_sprintf	;wreg free
  4148  00067C                     
  4149                           ;main.c: 103: TFT_ConsolePrintLine(zzzz, 0xFFFF);
  4150  00067C  0E60               	movlw	low loop@zzzz_160
  4151  00067E  0100               	movlb	0	; () banked
  4152  000680  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  4153  000682  0E01               	movlw	high loop@zzzz_160
  4154  000684  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  4155  000686  0EFF               	movlw	255
  4156  000688  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  4157  00068A  696D               	setf	TFT_ConsolePrintLine@color& (0+255),b
  4158  00068C  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  4159  000690                     l6032:
  4160                           
  4161                           ;main.c: 104: };main.c: 106: if((MILLISECONDS > 28000) && (tmp6 < (MILLISECONDS - 28000)
      +                          )) {
  4162  000690  0101               	movlb	1	; () banked
  4163  000692  51CC               	movf	(_MILLISECONDS+3)& (0+255),w,b
  4164  000694  11CB               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  4165  000696  E10B               	bnz	u5170
  4166  000698  0E61               	movlw	97
  4167  00069A  5DC9               	subwf	_MILLISECONDS& (0+255),w,b
  4168  00069C  0E6D               	movlw	109
  4169  00069E  59CA               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  4170  0006A0  A0D8               	btfss	status,0,c
  4171  0006A2  EF55  F003         	goto	u5171
  4172  0006A6  EF57  F003         	goto	u5170
  4173  0006AA                     u5171:
  4174  0006AA  EFA6  F003         	goto	l107
  4175  0006AE                     u5170:
  4176  0006AE                     
  4177                           ; BSR set to: 1
  4178  0006AE  0EA0               	movlw	160
  4179  0006B0  25C9               	addwf	_MILLISECONDS& (0+255),w,b
  4180  0006B2  0100               	movlb	0	; () banked
  4181  0006B4  6FAC               	movwf	??_loop& (0+255),b
  4182  0006B6  0E92               	movlw	146
  4183  0006B8  0101               	movlb	1	; () banked
  4184  0006BA  21CA               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  4185  0006BC  0100               	movlb	0	; () banked
  4186  0006BE  6FAD               	movwf	(??_loop+1)& (0+255),b
  4187  0006C0  0EFF               	movlw	255
  4188  0006C2  0101               	movlb	1	; () banked
  4189  0006C4  21CB               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  4190  0006C6  0100               	movlb	0	; () banked
  4191  0006C8  6FAE               	movwf	(??_loop+2)& (0+255),b
  4192  0006CA  0EFF               	movlw	255
  4193  0006CC  0101               	movlb	1	; () banked
  4194  0006CE  21CC               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  4195  0006D0  0100               	movlb	0	; () banked
  4196  0006D2  6FAF               	movwf	(??_loop+3)& (0+255),b
  4197  0006D4  51AC               	movf	??_loop& (0+255),w,b
  4198  0006D6  0101               	movlb	1	; () banked
  4199  0006D8  5DB1               	subwf	_tmp6& (0+255),w,b
  4200  0006DA  0100               	movlb	0	; () banked
  4201  0006DC  51AD               	movf	(??_loop+1)& (0+255),w,b
  4202  0006DE  0101               	movlb	1	; () banked
  4203  0006E0  59B2               	subwfb	(_tmp6+1)& (0+255),w,b
  4204  0006E2  0100               	movlb	0	; () banked
  4205  0006E4  51AE               	movf	(??_loop+2)& (0+255),w,b
  4206  0006E6  0101               	movlb	1	; () banked
  4207  0006E8  59B3               	subwfb	(_tmp6+2)& (0+255),w,b
  4208  0006EA  0100               	movlb	0	; () banked
  4209  0006EC  51AF               	movf	(??_loop+3)& (0+255),w,b
  4210  0006EE  0101               	movlb	1	; () banked
  4211  0006F0  59B4               	subwfb	(_tmp6+3)& (0+255),w,b
  4212  0006F2  B0D8               	btfsc	status,0,c
  4213  0006F4  EF7E  F003         	goto	u5181
  4214  0006F8  EF80  F003         	goto	u5180
  4215  0006FC                     u5181:
  4216  0006FC  EFA6  F003         	goto	l107
  4217  000700                     u5180:
  4218  000700                     
  4219                           ; BSR set to: 1
  4220                           ;main.c: 107: tmp6 = MILLISECONDS;
  4221  000700  C1C9  F1B1         	movff	_MILLISECONDS,_tmp6
  4222  000704  C1CA  F1B2         	movff	_MILLISECONDS+1,_tmp6+1
  4223  000708  C1CB  F1B3         	movff	_MILLISECONDS+2,_tmp6+2
  4224  00070C  C1CC  F1B4         	movff	_MILLISECONDS+3,_tmp6+3
  4225  000710                     
  4226                           ; BSR set to: 1
  4227                           ;main.c: 108: TFT_ConsoleInit(++tmp7);
  4228  000710  0E01               	movlw	1
  4229  000712  27AD               	addwf	_tmp7& (0+255),f,b
  4230  000714  0E00               	movlw	0
  4231  000716  23AE               	addwfc	(_tmp7+1)& (0+255),f,b
  4232  000718  23AF               	addwfc	(_tmp7+2)& (0+255),f,b
  4233  00071A  23B0               	addwfc	(_tmp7+3)& (0+255),f,b
  4234  00071C  51AD               	movf	_tmp7& (0+255),w,b
  4235  00071E  EC51  F018         	call	_TFT_ConsoleInit
  4236  000722                     
  4237                           ;main.c: 109: if(tmp7 == 3) tmp7 = 0;
  4238  000722  0E03               	movlw	3
  4239  000724  0101               	movlb	1	; () banked
  4240  000726  19AD               	xorwf	_tmp7& (0+255),w,b
  4241  000728  11AE               	iorwf	(_tmp7+1)& (0+255),w,b
  4242  00072A  11AF               	iorwf	(_tmp7+2)& (0+255),w,b
  4243  00072C  11B0               	iorwf	(_tmp7+3)& (0+255),w,b
  4244  00072E  A4D8               	btfss	status,2,c
  4245  000730  EF9C  F003         	goto	u5191
  4246  000734  EF9E  F003         	goto	u5190
  4247  000738                     u5191:
  4248  000738  EFA6  F003         	goto	l107
  4249  00073C                     u5190:
  4250  00073C                     
  4251                           ; BSR set to: 1
  4252  00073C  0E00               	movlw	0
  4253  00073E  6FAD               	movwf	_tmp7& (0+255),b
  4254  000740  0E00               	movlw	0
  4255  000742  6FAE               	movwf	(_tmp7+1)& (0+255),b
  4256  000744  0E00               	movlw	0
  4257  000746  6FAF               	movwf	(_tmp7+2)& (0+255),b
  4258  000748  0E00               	movlw	0
  4259  00074A  6FB0               	movwf	(_tmp7+3)& (0+255),b
  4260  00074C                     l107:
  4261                           
  4262                           ; BSR set to: 1
  4263  00074C  0012               	return		;funcret
  4264  00074E                     __end_of_loop:
  4265                           	opt callstack 0
  4266                           
  4267 ;; *************** function _TFT_ConsoleInit *****************
  4268 ;; Defined at:
  4269 ;;		line 329 in file "TFT.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  orientation     1    wreg     unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  orientation     1   32[COMRAM] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;                  1    wreg      void 
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 0/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4283 ;;      Params:         0       0       0       0       0       0       0       0       0
  4284 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4286 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4287 ;;Total ram usage:        1 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    6
  4290 ;; This function calls:
  4291 ;;		_TFT_OrientationSet
  4292 ;; This function is called by:
  4293 ;;		_main
  4294 ;;		_loop
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text2
  4299  0030A2                     __ptext2:
  4300                           	opt callstack 0
  4301  0030A2                     _TFT_ConsoleInit:
  4302                           	opt callstack 23
  4303                           
  4304                           ; BSR set to: 1
  4305                           ;incstack = 0
  4306                           ;TFT_ConsoleInit@orientation stored from wreg
  4307  0030A2  6E21               	movwf	TFT_ConsoleInit@orientation^0,c
  4308  0030A4                     
  4309                           ;TFT.c: 330: TFT_ConsoleRow = 0;
  4310  0030A4  0E00               	movlw	0
  4311  0030A6  0100               	movlb	0	; () banked
  4312  0030A8  6FCD               	movwf	(_TFT_ConsoleRow+1)& (0+255),b
  4313  0030AA  0E00               	movlw	0
  4314  0030AC  6FCC               	movwf	_TFT_ConsoleRow& (0+255),b
  4315  0030AE                     
  4316                           ; BSR set to: 0
  4317                           ;TFT.c: 331: TFT_OrientationSet(orientation, 0x0821);
  4318  0030AE  0E08               	movlw	8
  4319  0030B0  6E1F               	movwf	(TFT_OrientationSet@color+1)^0,c
  4320  0030B2  0E21               	movlw	33
  4321  0030B4  6E1E               	movwf	TFT_OrientationSet@color^0,c
  4322  0030B6  5021               	movf	TFT_ConsoleInit@orientation^0,w,c
  4323  0030B8  EC0B  F018         	call	_TFT_OrientationSet
  4324  0030BC  0012               	return		;funcret
  4325  0030BE                     __end_of_TFT_ConsoleInit:
  4326                           	opt callstack 0
  4327                           
  4328 ;; *************** function _A6_Process_Random_Comms *****************
  4329 ;; Defined at:
  4330 ;;		line 125 in file "A6Lib.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;  response       32   15[BANK0 ] unsigned char [32]
  4335 ;;  cnt             1   47[BANK0 ] unsigned char 
  4336 ;; Return value:  Size  Location     Type
  4337 ;;                  1    wreg      void 
  4338 ;; Registers used:
  4339 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4340 ;; Tracked objects:
  4341 ;;		On entry : 0/0
  4342 ;;		On exit  : 0/0
  4343 ;;		Unchanged: 0/0
  4344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4345 ;;      Params:         0       0       0       0       0       0       0       0       0
  4346 ;;      Locals:         0      33       0       0       0       0       0       0       0
  4347 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4348 ;;      Totals:         0      33       0       0       0       0       0       0       0
  4349 ;;Total ram usage:       33 bytes
  4350 ;; Hardware stack levels used:    1
  4351 ;; Hardware stack levels required when called:    9
  4352 ;; This function calls:
  4353 ;;		_A6_ReadLine
  4354 ;;		_EUSART_RX_AvailableData
  4355 ;;		_TFT_ConsolePrintLine
  4356 ;;		_strcmp
  4357 ;; This function is called by:
  4358 ;;		_loop
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           	psect	text3
  4363  0023BE                     __ptext3:
  4364                           	opt callstack 0
  4365  0023BE                     _A6_Process_Random_Comms:
  4366                           	opt callstack 20
  4367  0023BE                     
  4368                           ;A6Lib.c: 126: if(EUSART_RX_AvailableData(-1) == 0) return;
  4369  0023BE  0EFF               	movlw	255
  4370  0023C0  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
  4371  0023C2  6805               	setf	EUSART_RX_AvailableData@timeout^0,c
  4372  0023C4  EC6A  F012         	call	_EUSART_RX_AvailableData	;wreg free
  4373  0023C8  0900               	iorlw	0
  4374  0023CA  A4D8               	btfss	status,2,c
  4375  0023CC  EFEA  F011         	goto	u4841
  4376  0023D0  EFEC  F011         	goto	u4840
  4377  0023D4                     u4841:
  4378  0023D4  EFEE  F011         	goto	l5746
  4379  0023D8                     u4840:
  4380  0023D8  EF25  F012         	goto	l628
  4381  0023DC                     l5746:
  4382                           
  4383                           ;A6Lib.c: 128: char response[32];;A6Lib.c: 129: uint8_t cnt = A6_ReadLine(response, 32, 
      +                          0);
  4384  0023DC  0E6F               	movlw	low A6_Process_Random_Comms@response
  4385  0023DE  6E11               	movwf	A6_ReadLine@response^0,c
  4386  0023E0  0E00               	movlw	high A6_Process_Random_Comms@response
  4387  0023E2  6E12               	movwf	(A6_ReadLine@response+1)^0,c
  4388  0023E4  0E20               	movlw	32
  4389  0023E6  6E13               	movwf	A6_ReadLine@responseLen^0,c
  4390  0023E8  0E00               	movlw	0
  4391  0023EA  6E15               	movwf	(A6_ReadLine@timeout+1)^0,c
  4392  0023EC  0E00               	movlw	0
  4393  0023EE  6E14               	movwf	A6_ReadLine@timeout^0,c
  4394  0023F0  EC60  F00F         	call	_A6_ReadLine	;wreg free
  4395  0023F4  0100               	movlb	0	; () banked
  4396  0023F6  6F8F               	movwf	A6_Process_Random_Comms@cnt& (0+255),b
  4397  0023F8                     
  4398                           ; BSR set to: 0
  4399                           ;A6Lib.c: 130: if(cnt == 0) return;
  4400  0023F8  518F               	movf	A6_Process_Random_Comms@cnt& (0+255),w,b
  4401  0023FA  A4D8               	btfss	status,2,c
  4402  0023FC  EF02  F012         	goto	u4851
  4403  002400  EF04  F012         	goto	u4850
  4404  002404                     u4851:
  4405  002404  EF06  F012         	goto	l5752
  4406  002408                     u4850:
  4407  002408  EF25  F012         	goto	l628
  4408  00240C                     l5752:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;A6Lib.c: 131: if(strcmp(response, "OK") == 0) return;
  4412  00240C  0E6F               	movlw	low A6_Process_Random_Comms@response
  4413  00240E  6E05               	movwf	strcmp@s1^0,c
  4414  002410  0E00               	movlw	high A6_Process_Random_Comms@response
  4415  002412  6E06               	movwf	(strcmp@s1+1)^0,c
  4416  002414  0EFA               	movlw	low STR_23
  4417  002416  6E07               	movwf	strcmp@s2^0,c
  4418  002418  0E5F               	movlw	high STR_23
  4419  00241A  6E08               	movwf	(strcmp@s2+1)^0,c
  4420  00241C  ECA2  F015         	call	_strcmp	;wreg free
  4421  002420  5005               	movf	?_strcmp^0,w,c
  4422  002422  1006               	iorwf	(?_strcmp+1)^0,w,c
  4423  002424  A4D8               	btfss	status,2,c
  4424  002426  EF17  F012         	goto	u4861
  4425  00242A  EF19  F012         	goto	u4860
  4426  00242E                     u4861:
  4427  00242E  EF1B  F012         	goto	l5756
  4428  002432                     u4860:
  4429  002432  EF25  F012         	goto	l628
  4430  002436                     l5756:
  4431                           
  4432                           ;A6Lib.c: 132: TFT_ConsolePrintLine(response, 0x07FF);
  4433  002436  0E6F               	movlw	low A6_Process_Random_Comms@response
  4434  002438  0100               	movlb	0	; () banked
  4435  00243A  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  4436  00243C  0E00               	movlw	high A6_Process_Random_Comms@response
  4437  00243E  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  4438  002440  0E07               	movlw	7
  4439  002442  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  4440  002444  696D               	setf	TFT_ConsolePrintLine@color& (0+255),b
  4441  002446  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  4442  00244A                     l628:
  4443  00244A  0012               	return		;funcret
  4444  00244C                     __end_of_A6_Process_Random_Comms:
  4445                           	opt callstack 0
  4446                           
  4447 ;; *************** function _A6_NetworkGetStatus *****************
  4448 ;; Defined at:
  4449 ;;		line 135 in file "A6Lib.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  response       32   30[COMRAM] unsigned char [32]
  4454 ;;  networkStatu    2   62[COMRAM] PTR unsigned char 
  4455 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      unsigned char 
  4458 ;; Registers used:
  4459 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0
  4466 ;;      Locals:        34       0       0       0       0       0       0       0       0
  4467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4468 ;;      Totals:        34       0       0       0       0       0       0       0       0
  4469 ;;Total ram usage:       34 bytes
  4470 ;; Hardware stack levels used:    1
  4471 ;; Hardware stack levels required when called:    6
  4472 ;; This function calls:
  4473 ;;		_A6_Command
  4474 ;;		_atoi
  4475 ;;		_strstr
  4476 ;;		_strtok
  4477 ;; This function is called by:
  4478 ;;		_loop
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text4
  4483  001A72                     __ptext4:
  4484                           	opt callstack 0
  4485  001A72                     _A6_NetworkGetStatus:
  4486                           	opt callstack 23
  4487  001A72                     
  4488                           ;A6Lib.c: 136: char *networkStatusToken;;A6Lib.c: 137: char response[32];;A6Lib.c: 139: 
      +                          A6_Command("AT+CREG?\r", 0, response, 32);
  4489  001A72  0EA6               	movlw	low STR_32
  4490  001A74  6E18               	movwf	A6_Command@command^0,c
  4491  001A76  0E5F               	movlw	high STR_32
  4492  001A78  6E19               	movwf	(A6_Command@command+1)^0,c
  4493  001A7A  0E00               	movlw	0
  4494  001A7C  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4495  001A7E  0E00               	movlw	0
  4496  001A80  6E1A               	movwf	A6_Command@timeout^0,c
  4497  001A82  0E1F               	movlw	low A6_NetworkGetStatus@response
  4498  001A84  6E1C               	movwf	A6_Command@response^0,c
  4499  001A86  0E00               	movlw	high A6_NetworkGetStatus@response
  4500  001A88  6E1D               	movwf	(A6_Command@response+1)^0,c
  4501  001A8A  0E20               	movlw	32
  4502  001A8C  6E1E               	movwf	A6_Command@responseLen^0,c
  4503  001A8E  ECAE  F012         	call	_A6_Command	;wreg free
  4504  001A92                     
  4505                           ;A6Lib.c: 140: if(strstr(response, "+CREG: ") != (0)) {
  4506  001A92  0E1F               	movlw	low A6_NetworkGetStatus@response
  4507  001A94  6E10               	movwf	strstr@s1^0,c
  4508  001A96  0E00               	movlw	high A6_NetworkGetStatus@response
  4509  001A98  6E11               	movwf	(strstr@s1+1)^0,c
  4510  001A9A  0ECB               	movlw	low STR_33
  4511  001A9C  6E12               	movwf	strstr@s2^0,c
  4512  001A9E  0E5F               	movlw	high STR_33
  4513  001AA0  6E13               	movwf	(strstr@s2+1)^0,c
  4514  001AA2  EC8E  F010         	call	_strstr	;wreg free
  4515  001AA6  5010               	movf	?_strstr^0,w,c
  4516  001AA8  1011               	iorwf	(?_strstr+1)^0,w,c
  4517  001AAA  B4D8               	btfsc	status,2,c
  4518  001AAC  EF5A  F00D         	goto	u4971
  4519  001AB0  EF5C  F00D         	goto	u4970
  4520  001AB4                     u4971:
  4521  001AB4  EFA6  F00D         	goto	l5860
  4522  001AB8                     u4970:
  4523  001AB8                     
  4524                           ;A6Lib.c: 141: networkStatusToken = strtok(response, " ");
  4525  001AB8  0E1F               	movlw	low A6_NetworkGetStatus@response
  4526  001ABA  6E12               	movwf	strtok@s1^0,c
  4527  001ABC  0E00               	movlw	high A6_NetworkGetStatus@response
  4528  001ABE  6E13               	movwf	(strtok@s1+1)^0,c
  4529  001AC0  0ED1               	movlw	low (STR_33+6)
  4530  001AC2  6E14               	movwf	strtok@s2^0,c
  4531  001AC4  0E5F               	movlw	high (STR_33+6)
  4532  001AC6  6E15               	movwf	(strtok@s2+1)^0,c
  4533  001AC8  ECC8  F00C         	call	_strtok	;wreg free
  4534  001ACC  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4535  001AD0  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4536                           
  4537                           ;A6Lib.c: 142: networkStatusToken = strtok((0), response);
  4538  001AD4  0E00               	movlw	0
  4539  001AD6  6E12               	movwf	strtok@s1^0,c
  4540  001AD8  0E00               	movlw	0
  4541  001ADA  6E13               	movwf	(strtok@s1+1)^0,c
  4542  001ADC  0E1F               	movlw	low A6_NetworkGetStatus@response
  4543  001ADE  6E14               	movwf	strtok@s2^0,c
  4544  001AE0  0E00               	movlw	high A6_NetworkGetStatus@response
  4545  001AE2  6E15               	movwf	(strtok@s2+1)^0,c
  4546  001AE4  ECC8  F00C         	call	_strtok	;wreg free
  4547  001AE8  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4548  001AEC  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4549  001AF0                     
  4550                           ;A6Lib.c: 143: if(networkStatusToken != (0)) {
  4551  001AF0  503F               	movf	A6_NetworkGetStatus@networkStatusToken^0,w,c
  4552  001AF2  1040               	iorwf	(A6_NetworkGetStatus@networkStatusToken+1)^0,w,c
  4553  001AF4  B4D8               	btfsc	status,2,c
  4554  001AF6  EF7F  F00D         	goto	u4981
  4555  001AFA  EF81  F00D         	goto	u4980
  4556  001AFE                     u4981:
  4557  001AFE  EFA6  F00D         	goto	l5860
  4558  001B02                     u4980:
  4559  001B02                     
  4560                           ;A6Lib.c: 144: networkStatusToken = strtok(networkStatusToken, ",");
  4561  001B02  C03F  F012         	movff	A6_NetworkGetStatus@networkStatusToken,strtok@s1
  4562  001B06  C040  F013         	movff	A6_NetworkGetStatus@networkStatusToken+1,strtok@s1+1
  4563  001B0A  0EFD               	movlw	low STR_35
  4564  001B0C  6E14               	movwf	strtok@s2^0,c
  4565  001B0E  0E5F               	movlw	high STR_35
  4566  001B10  6E15               	movwf	(strtok@s2+1)^0,c
  4567  001B12  ECC8  F00C         	call	_strtok	;wreg free
  4568  001B16  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4569  001B1A  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4570                           
  4571                           ;A6Lib.c: 145: networkStatusToken = strtok((0), response);
  4572  001B1E  0E00               	movlw	0
  4573  001B20  6E12               	movwf	strtok@s1^0,c
  4574  001B22  0E00               	movlw	0
  4575  001B24  6E13               	movwf	(strtok@s1+1)^0,c
  4576  001B26  0E1F               	movlw	low A6_NetworkGetStatus@response
  4577  001B28  6E14               	movwf	strtok@s2^0,c
  4578  001B2A  0E00               	movlw	high A6_NetworkGetStatus@response
  4579  001B2C  6E15               	movwf	(strtok@s2+1)^0,c
  4580  001B2E  ECC8  F00C         	call	_strtok	;wreg free
  4581  001B32  C012  F03F         	movff	?_strtok,A6_NetworkGetStatus@networkStatusToken
  4582  001B36  C013  F040         	movff	?_strtok+1,A6_NetworkGetStatus@networkStatusToken+1
  4583  001B3A                     
  4584                           ;A6Lib.c: 146: return atoi(networkStatusToken);
  4585  001B3A  C03F  F00B         	movff	A6_NetworkGetStatus@networkStatusToken,atoi@s
  4586  001B3E  C040  F00C         	movff	A6_NetworkGetStatus@networkStatusToken+1,atoi@s+1
  4587  001B42  EC3C  F00C         	call	_atoi	;wreg free
  4588  001B46  500B               	movf	?_atoi^0,w,c
  4589  001B48  EFA7  F00D         	goto	l635
  4590  001B4C                     l5860:
  4591                           
  4592                           ;A6Lib.c: 147: };A6Lib.c: 148: };A6Lib.c: 150: return 4;
  4593  001B4C  0E04               	movlw	4
  4594  001B4E                     l635:
  4595  001B4E  0012               	return		;funcret
  4596  001B50                     __end_of_A6_NetworkGetStatus:
  4597                           	opt callstack 0
  4598                           
  4599 ;; *************** function _A6_NetworkGetRSSILevel *****************
  4600 ;; Defined at:
  4601 ;;		line 170 in file "A6Lib.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  RSSI            1   64[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      char 
  4608 ;; Registers used:
  4609 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4618 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:        1 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    7
  4622 ;; This function calls:
  4623 ;;		_A6_NetworkGetRSSI
  4624 ;; This function is called by:
  4625 ;;		_loop
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text5
  4630  002766                     __ptext5:
  4631                           	opt callstack 0
  4632  002766                     _A6_NetworkGetRSSILevel:
  4633                           	opt callstack 22
  4634  002766                     
  4635                           ;A6Lib.c: 171: uint8_t RSSI = A6_NetworkGetRSSI();
  4636  002766  EC2D  F010         	call	_A6_NetworkGetRSSI	;wreg free
  4637  00276A  6E41               	movwf	A6_NetworkGetRSSILevel@RSSI^0,c
  4638  00276C                     
  4639                           ;A6Lib.c: 172: if(RSSI == 99) return -1;
  4640  00276C  0E63               	movlw	99
  4641  00276E  1841               	xorwf	A6_NetworkGetRSSILevel@RSSI^0,w,c
  4642  002770  A4D8               	btfss	status,2,c
  4643  002772  EFBD  F013         	goto	u4921
  4644  002776  EFBF  F013         	goto	u4920
  4645  00277A                     u4921:
  4646  00277A  EFC2  F013         	goto	l5818
  4647  00277E                     u4920:
  4648  00277E  0EFF               	movlw	255
  4649  002780  EFEF  F013         	goto	l644
  4650  002784                     l5818:
  4651                           
  4652                           ;A6Lib.c: 173: if(RSSI < 3) return 0;
  4653  002784  0E03               	movlw	3
  4654  002786  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4655  002788  EFC8  F013         	goto	u4931
  4656  00278C  EFCA  F013         	goto	u4930
  4657  002790                     u4931:
  4658  002790  EFCD  F013         	goto	l5824
  4659  002794                     u4930:
  4660  002794  0E00               	movlw	0
  4661  002796  EFEF  F013         	goto	l644
  4662  00279A                     l5824:
  4663                           
  4664                           ;A6Lib.c: 174: if(RSSI < 10) return 1;
  4665  00279A  0E0A               	movlw	10
  4666  00279C  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4667  00279E  EFD3  F013         	goto	u4941
  4668  0027A2  EFD5  F013         	goto	u4940
  4669  0027A6                     u4941:
  4670  0027A6  EFD8  F013         	goto	l5830
  4671  0027AA                     u4940:
  4672  0027AA  0E01               	movlw	1
  4673  0027AC  EFEF  F013         	goto	l644
  4674  0027B0                     l5830:
  4675                           
  4676                           ;A6Lib.c: 175: if(RSSI < 15) return 2;
  4677  0027B0  0E0F               	movlw	15
  4678  0027B2  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4679  0027B4  EFDE  F013         	goto	u4951
  4680  0027B8  EFE0  F013         	goto	u4950
  4681  0027BC                     u4951:
  4682  0027BC  EFE3  F013         	goto	l5836
  4683  0027C0                     u4950:
  4684  0027C0  0E02               	movlw	2
  4685  0027C2  EFEF  F013         	goto	l644
  4686  0027C6                     l5836:
  4687                           
  4688                           ;A6Lib.c: 176: if(RSSI < 20) return 3;
  4689  0027C6  0E14               	movlw	20
  4690  0027C8  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  4691  0027CA  EFE9  F013         	goto	u4961
  4692  0027CE  EFEB  F013         	goto	u4960
  4693  0027D2                     u4961:
  4694  0027D2  EFEE  F013         	goto	l5842
  4695  0027D6                     u4960:
  4696  0027D6  0E03               	movlw	3
  4697  0027D8  EFEF  F013         	goto	l644
  4698  0027DC                     l5842:
  4699                           
  4700                           ;A6Lib.c: 177: return 4;
  4701  0027DC  0E04               	movlw	4
  4702  0027DE                     l644:
  4703  0027DE  0012               	return		;funcret
  4704  0027E0                     __end_of_A6_NetworkGetRSSILevel:
  4705                           	opt callstack 0
  4706                           
  4707 ;; *************** function _A6_NetworkGetRSSI *****************
  4708 ;; Defined at:
  4709 ;;		line 153 in file "A6Lib.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;		None
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  response       32   30[COMRAM] unsigned char [32]
  4714 ;;  RSSIToken       2   62[COMRAM] PTR unsigned char 
  4715 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      unsigned char 
  4718 ;; Registers used:
  4719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4725 ;;      Params:         0       0       0       0       0       0       0       0       0
  4726 ;;      Locals:        34       0       0       0       0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4728 ;;      Totals:        34       0       0       0       0       0       0       0       0
  4729 ;;Total ram usage:       34 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    6
  4732 ;; This function calls:
  4733 ;;		_A6_Command
  4734 ;;		_atoi
  4735 ;;		_strstr
  4736 ;;		_strtok
  4737 ;; This function is called by:
  4738 ;;		_loop
  4739 ;;		_A6_NetworkGetRSSILevel
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text6
  4744  00205A                     __ptext6:
  4745                           	opt callstack 0
  4746  00205A                     _A6_NetworkGetRSSI:
  4747                           	opt callstack 22
  4748  00205A                     
  4749                           ;A6Lib.c: 154: char *RSSIToken;;A6Lib.c: 155: char response[32];;A6Lib.c: 157: A6_Comman
      +                          d("AT+CSQ\r", 0, response, 32);
  4750  00205A  0EC3               	movlw	low STR_36
  4751  00205C  6E18               	movwf	A6_Command@command^0,c
  4752  00205E  0E5F               	movlw	high STR_36
  4753  002060  6E19               	movwf	(A6_Command@command+1)^0,c
  4754  002062  0E00               	movlw	0
  4755  002064  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  4756  002066  0E00               	movlw	0
  4757  002068  6E1A               	movwf	A6_Command@timeout^0,c
  4758  00206A  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4759  00206C  6E1C               	movwf	A6_Command@response^0,c
  4760  00206E  0E00               	movlw	high A6_NetworkGetRSSI@response
  4761  002070  6E1D               	movwf	(A6_Command@response+1)^0,c
  4762  002072  0E20               	movlw	32
  4763  002074  6E1E               	movwf	A6_Command@responseLen^0,c
  4764  002076  ECAE  F012         	call	_A6_Command	;wreg free
  4765  00207A                     
  4766                           ;A6Lib.c: 158: if(strstr(response, "+CSQ: ") != (0)) {
  4767  00207A  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4768  00207C  6E10               	movwf	strstr@s1^0,c
  4769  00207E  0E00               	movlw	high A6_NetworkGetRSSI@response
  4770  002080  6E11               	movwf	(strstr@s1+1)^0,c
  4771  002082  0EDA               	movlw	low STR_37
  4772  002084  6E12               	movwf	strstr@s2^0,c
  4773  002086  0E5F               	movlw	high STR_37
  4774  002088  6E13               	movwf	(strstr@s2+1)^0,c
  4775  00208A  EC8E  F010         	call	_strstr	;wreg free
  4776  00208E  5010               	movf	?_strstr^0,w,c
  4777  002090  1011               	iorwf	(?_strstr+1)^0,w,c
  4778  002092  B4D8               	btfsc	status,2,c
  4779  002094  EF4E  F010         	goto	u4811
  4780  002098  EF50  F010         	goto	u4810
  4781  00209C                     u4811:
  4782  00209C  EF8C  F010         	goto	l5726
  4783  0020A0                     u4810:
  4784  0020A0                     
  4785                           ;A6Lib.c: 159: RSSIToken = strtok(response, " ");
  4786  0020A0  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4787  0020A2  6E12               	movwf	strtok@s1^0,c
  4788  0020A4  0E00               	movlw	high A6_NetworkGetRSSI@response
  4789  0020A6  6E13               	movwf	(strtok@s1+1)^0,c
  4790  0020A8  0ED1               	movlw	low (STR_33+6)
  4791  0020AA  6E14               	movwf	strtok@s2^0,c
  4792  0020AC  0E5F               	movlw	high (STR_33+6)
  4793  0020AE  6E15               	movwf	(strtok@s2+1)^0,c
  4794  0020B0  ECC8  F00C         	call	_strtok	;wreg free
  4795  0020B4  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4796  0020B8  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4797                           
  4798                           ;A6Lib.c: 160: RSSIToken = strtok((0), response);
  4799  0020BC  0E00               	movlw	0
  4800  0020BE  6E12               	movwf	strtok@s1^0,c
  4801  0020C0  0E00               	movlw	0
  4802  0020C2  6E13               	movwf	(strtok@s1+1)^0,c
  4803  0020C4  0E1F               	movlw	low A6_NetworkGetRSSI@response
  4804  0020C6  6E14               	movwf	strtok@s2^0,c
  4805  0020C8  0E00               	movlw	high A6_NetworkGetRSSI@response
  4806  0020CA  6E15               	movwf	(strtok@s2+1)^0,c
  4807  0020CC  ECC8  F00C         	call	_strtok	;wreg free
  4808  0020D0  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4809  0020D4  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4810  0020D8                     
  4811                           ;A6Lib.c: 161: if(RSSIToken != (0)) {
  4812  0020D8  503F               	movf	A6_NetworkGetRSSI@RSSIToken^0,w,c
  4813  0020DA  1040               	iorwf	(A6_NetworkGetRSSI@RSSIToken+1)^0,w,c
  4814  0020DC  B4D8               	btfsc	status,2,c
  4815  0020DE  EF73  F010         	goto	u4821
  4816  0020E2  EF75  F010         	goto	u4820
  4817  0020E6                     u4821:
  4818  0020E6  EF8C  F010         	goto	l5726
  4819  0020EA                     u4820:
  4820  0020EA                     
  4821                           ;A6Lib.c: 162: RSSIToken = strtok(RSSIToken, ",");
  4822  0020EA  C03F  F012         	movff	A6_NetworkGetRSSI@RSSIToken,strtok@s1
  4823  0020EE  C040  F013         	movff	A6_NetworkGetRSSI@RSSIToken+1,strtok@s1+1
  4824  0020F2  0EFD               	movlw	low STR_35
  4825  0020F4  6E14               	movwf	strtok@s2^0,c
  4826  0020F6  0E5F               	movlw	high STR_35
  4827  0020F8  6E15               	movwf	(strtok@s2+1)^0,c
  4828  0020FA  ECC8  F00C         	call	_strtok	;wreg free
  4829  0020FE  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  4830  002102  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  4831  002106                     
  4832                           ;A6Lib.c: 163: return atoi(RSSIToken);
  4833  002106  C03F  F00B         	movff	A6_NetworkGetRSSI@RSSIToken,atoi@s
  4834  00210A  C040  F00C         	movff	A6_NetworkGetRSSI@RSSIToken+1,atoi@s+1
  4835  00210E  EC3C  F00C         	call	_atoi	;wreg free
  4836  002112  500B               	movf	?_atoi^0,w,c
  4837  002114  EF8D  F010         	goto	l640
  4838  002118                     l5726:
  4839                           
  4840                           ;A6Lib.c: 164: };A6Lib.c: 165: };A6Lib.c: 167: return 0;
  4841  002118  0E00               	movlw	0
  4842  00211A                     l640:
  4843  00211A  0012               	return		;funcret
  4844  00211C                     __end_of_A6_NetworkGetRSSI:
  4845                           	opt callstack 0
  4846                           
  4847 ;; *************** function _atoi *****************
  4848 ;; Defined at:
  4849 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atoi.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4852 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  a               2   15[COMRAM] int 
  4855 ;;  sign            1   14[COMRAM] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  2   10[COMRAM] int 
  4858 ;; Registers used:
  4859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4865 ;;      Params:         2       0       0       0       0       0       0       0       0
  4866 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4867 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4868 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4869 ;;Total ram usage:        7 bytes
  4870 ;; Hardware stack levels used:    1
  4871 ;; Hardware stack levels required when called:    3
  4872 ;; This function calls:
  4873 ;;		___wmul
  4874 ;;		_isdigit
  4875 ;; This function is called by:
  4876 ;;		_A6_NetworkGetStatus
  4877 ;;		_A6_NetworkGetRSSI
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text7
  4882  001878                     __ptext7:
  4883                           	opt callstack 0
  4884  001878                     _atoi:
  4885                           	opt callstack 25
  4886  001878  EF40  F00C         	goto	l5532
  4887  00187C                     l5530:
  4888  00187C  4A0B               	infsnz	atoi@s^0,f,c
  4889  00187E  2A0C               	incf	(atoi@s+1)^0,f,c
  4890  001880                     l5532:
  4891  001880  C00B  FFD9         	movff	atoi@s,fsr2l
  4892  001884  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4893  001888  0E20               	movlw	32
  4894  00188A  18DE               	xorwf	postinc2,w,c
  4895  00188C  B4D8               	btfsc	status,2,c
  4896  00188E  EF4B  F00C         	goto	u4501
  4897  001892  EF4D  F00C         	goto	u4500
  4898  001896                     u4501:
  4899  001896  EF3E  F00C         	goto	l5530
  4900  00189A                     u4500:
  4901  00189A  C00B  FFD9         	movff	atoi@s,fsr2l
  4902  00189E  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4903  0018A2  0E09               	movlw	9
  4904  0018A4  18DE               	xorwf	postinc2,w,c
  4905  0018A6  B4D8               	btfsc	status,2,c
  4906  0018A8  EF58  F00C         	goto	u4511
  4907  0018AC  EF5A  F00C         	goto	u4510
  4908  0018B0                     u4511:
  4909  0018B0  EF3E  F00C         	goto	l5530
  4910  0018B4                     u4510:
  4911  0018B4  0E00               	movlw	0
  4912  0018B6  6E11               	movwf	(atoi@a+1)^0,c
  4913  0018B8  0E00               	movlw	0
  4914  0018BA  6E10               	movwf	atoi@a^0,c
  4915  0018BC  0E00               	movlw	0
  4916  0018BE  6E0F               	movwf	atoi@sign^0,c
  4917  0018C0  C00B  FFD9         	movff	atoi@s,fsr2l
  4918  0018C4  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4919  0018C8  0E2D               	movlw	45
  4920  0018CA  18DE               	xorwf	postinc2,w,c
  4921  0018CC  A4D8               	btfss	status,2,c
  4922  0018CE  EF6B  F00C         	goto	u4521
  4923  0018D2  EF6D  F00C         	goto	u4520
  4924  0018D6                     u4521:
  4925  0018D6  EF72  F00C         	goto	l5542
  4926  0018DA                     u4520:
  4927  0018DA  2A0F               	incf	atoi@sign^0,f,c
  4928  0018DC  4A0B               	infsnz	atoi@s^0,f,c
  4929  0018DE  2A0C               	incf	(atoi@s+1)^0,f,c
  4930  0018E0  EF9F  F00C         	goto	l5550
  4931  0018E4                     l5542:
  4932  0018E4  C00B  FFD9         	movff	atoi@s,fsr2l
  4933  0018E8  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4934  0018EC  0E2B               	movlw	43
  4935  0018EE  18DE               	xorwf	postinc2,w,c
  4936  0018F0  A4D8               	btfss	status,2,c
  4937  0018F2  EF7D  F00C         	goto	u4531
  4938  0018F6  EF7F  F00C         	goto	u4530
  4939  0018FA                     u4531:
  4940  0018FA  EF9F  F00C         	goto	l5550
  4941  0018FE                     u4530:
  4942  0018FE                     l5544:
  4943  0018FE  4A0B               	infsnz	atoi@s^0,f,c
  4944  001900  2A0C               	incf	(atoi@s+1)^0,f,c
  4945  001902  EF9F  F00C         	goto	l5550
  4946  001906                     l5546:
  4947  001906  C010  F005         	movff	atoi@a,___wmul@multiplier
  4948  00190A  C011  F006         	movff	atoi@a+1,___wmul@multiplier+1
  4949  00190E  0E00               	movlw	0
  4950  001910  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  4951  001912  0E0A               	movlw	10
  4952  001914  6E07               	movwf	___wmul@multiplicand^0,c
  4953  001916  EC1F  F018         	call	___wmul	;wreg free
  4954  00191A  C00B  FFD9         	movff	atoi@s,fsr2l
  4955  00191E  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4956  001922  50DF               	movf	indf2,w,c
  4957  001924  6E0D               	movwf	??_atoi^0,c
  4958  001926  500D               	movf	??_atoi^0,w,c
  4959  001928  2605               	addwf	?___wmul^0,f,c
  4960  00192A  0E00               	movlw	0
  4961  00192C  2206               	addwfc	(?___wmul+1)^0,f,c
  4962  00192E  0ED0               	movlw	208
  4963  001930  2405               	addwf	?___wmul^0,w,c
  4964  001932  6E10               	movwf	atoi@a^0,c
  4965  001934  0EFF               	movlw	255
  4966  001936  2006               	addwfc	(?___wmul+1)^0,w,c
  4967  001938  6E11               	movwf	(atoi@a+1)^0,c
  4968  00193A  EF7F  F00C         	goto	l5544
  4969  00193E                     l5550:
  4970  00193E  C00B  FFD9         	movff	atoi@s,fsr2l
  4971  001942  C00C  FFDA         	movff	atoi@s+1,fsr2h
  4972  001946  50DF               	movf	indf2,w,c
  4973  001948  ECC2  F017         	call	_isdigit
  4974  00194C  B0D8               	btfsc	status,0,c
  4975  00194E  EFAB  F00C         	goto	u4541
  4976  001952  EFAD  F00C         	goto	u4540
  4977  001956                     u4541:
  4978  001956  EF83  F00C         	goto	l5546
  4979  00195A                     u4540:
  4980  00195A  500F               	movf	atoi@sign^0,w,c
  4981  00195C  B4D8               	btfsc	status,2,c
  4982  00195E  EFB3  F00C         	goto	u4551
  4983  001962  EFB5  F00C         	goto	u4550
  4984  001966                     u4551:
  4985  001966  EFC3  F00C         	goto	l1470
  4986  00196A                     u4550:
  4987  00196A  C010  F00D         	movff	atoi@a,??_atoi
  4988  00196E  C011  F00E         	movff	atoi@a+1,??_atoi+1
  4989  001972  1E0D               	comf	??_atoi^0,f,c
  4990  001974  1E0E               	comf	(??_atoi+1)^0,f,c
  4991  001976  4A0D               	infsnz	??_atoi^0,f,c
  4992  001978  2A0E               	incf	(??_atoi+1)^0,f,c
  4993  00197A  C00D  F00B         	movff	??_atoi,?_atoi
  4994  00197E  C00E  F00C         	movff	??_atoi+1,?_atoi+1
  4995  001982  EFC7  F00C         	goto	l1471
  4996  001986                     l1470:
  4997  001986  C010  F00B         	movff	atoi@a,?_atoi
  4998  00198A  C011  F00C         	movff	atoi@a+1,?_atoi+1
  4999  00198E                     l1471:
  5000  00198E  0012               	return		;funcret
  5001  001990                     __end_of_atoi:
  5002                           	opt callstack 0
  5003                           
  5004 ;; *************** function _A6_BaudRateSet *****************
  5005 ;; Defined at:
  5006 ;;		line 48 in file "A6Lib.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  baudRate        4   16[BANK0 ] const unsigned long 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  response       32   20[BANK0 ] unsigned char [32]
  5011 ;;  request        20   52[BANK0 ] unsigned char [20]
  5012 ;;  currentBaudR    4   72[BANK0 ] unsigned long 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  4   16[BANK0 ] unsigned long 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5022 ;;      Params:         0       4       0       0       0       0       0       0       0
  5023 ;;      Locals:         0      56       0       0       0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5025 ;;      Totals:         0      60       0       0       0       0       0       0       0
  5026 ;;Total ram usage:       60 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    7
  5029 ;; This function calls:
  5030 ;;		_A6_BaudRateGet
  5031 ;;		_A6_Command
  5032 ;;		_A6_IsAlive
  5033 ;;		_EUSART_BaudRateSet
  5034 ;;		_sleepMS
  5035 ;;		_sprintf
  5036 ;;		_strcmp
  5037 ;; This function is called by:
  5038 ;;		_loop
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text8
  5043  00162A                     __ptext8:
  5044                           	opt callstack 0
  5045  00162A                     _A6_BaudRateSet:
  5046                           	opt callstack 22
  5047  00162A                     
  5048                           ;A6Lib.c: 49: char request[20];;A6Lib.c: 50: char response[32];;A6Lib.c: 51: uint32_t cu
      +                          rrentBaudRate = A6_BaudRateGet();
  5049  00162A  ECAA  F00B         	call	_A6_BaudRateGet	;wreg free
  5050  00162E  C01F  F0A8         	movff	?_A6_BaudRateGet,A6_BaudRateSet@currentBaudRate
  5051  001632  C020  F0A9         	movff	?_A6_BaudRateGet+1,A6_BaudRateSet@currentBaudRate+1
  5052  001636  C021  F0AA         	movff	?_A6_BaudRateGet+2,A6_BaudRateSet@currentBaudRate+2
  5053  00163A  C022  F0AB         	movff	?_A6_BaudRateGet+3,A6_BaudRateSet@currentBaudRate+3
  5054  00163E                     
  5055                           ;A6Lib.c: 54: if(currentBaudRate == 0) return 0;
  5056  00163E  0100               	movlb	0	; () banked
  5057  001640  51A8               	movf	A6_BaudRateSet@currentBaudRate& (0+255),w,b
  5058  001642  11A9               	iorwf	(A6_BaudRateSet@currentBaudRate+1)& (0+255),w,b
  5059  001644  11AA               	iorwf	(A6_BaudRateSet@currentBaudRate+2)& (0+255),w,b
  5060  001646  11AB               	iorwf	(A6_BaudRateSet@currentBaudRate+3)& (0+255),w,b
  5061  001648  A4D8               	btfss	status,2,c
  5062  00164A  EF29  F00B         	goto	u4871
  5063  00164E  EF2B  F00B         	goto	u4870
  5064  001652                     u4871:
  5065  001652  EF36  F00B         	goto	l5766
  5066  001656                     u4870:
  5067  001656                     l5762:
  5068  001656  0E00               	movlw	0
  5069  001658  0100               	movlb	0	; () banked
  5070  00165A  6F70               	movwf	?_A6_BaudRateSet& (0+255),b
  5071  00165C  0E00               	movlw	0
  5072  00165E  6F71               	movwf	(?_A6_BaudRateSet+1)& (0+255),b
  5073  001660  0E00               	movlw	0
  5074  001662  6F72               	movwf	(?_A6_BaudRateSet+2)& (0+255),b
  5075  001664  0E00               	movlw	0
  5076  001666  6F73               	movwf	(?_A6_BaudRateSet+3)& (0+255),b
  5077  001668  EFA9  F00B         	goto	l596
  5078  00166C                     l5766:
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;A6Lib.c: 57: sprintf(request, "AT+IPR=%lu\r", baudRate);
  5082  00166C  0E94               	movlw	low A6_BaudRateSet@request
  5083  00166E  6E4A               	movwf	sprintf@sp^0,c
  5084  001670  0E00               	movlw	high A6_BaudRateSet@request
  5085  001672  6E4B               	movwf	(sprintf@sp+1)^0,c
  5086  001674  0E58               	movlw	low STR_27
  5087  001676  6E4C               	movwf	sprintf@f^0,c
  5088  001678  0E5F               	movlw	high STR_27
  5089  00167A  6E4D               	movwf	(sprintf@f+1)^0,c
  5090  00167C  C070  F04E         	movff	A6_BaudRateSet@baudRate,?_sprintf+4
  5091  001680  C071  F04F         	movff	A6_BaudRateSet@baudRate+1,?_sprintf+5
  5092  001684  C072  F050         	movff	A6_BaudRateSet@baudRate+2,?_sprintf+6
  5093  001688  C073  F051         	movff	A6_BaudRateSet@baudRate+3,?_sprintf+7
  5094  00168C  ECA7  F003         	call	_sprintf	;wreg free
  5095  001690                     
  5096                           ;A6Lib.c: 58: A6_Command(request, 0, response, 32);
  5097  001690  0E94               	movlw	low A6_BaudRateSet@request
  5098  001692  6E18               	movwf	A6_Command@command^0,c
  5099  001694  0E00               	movlw	high A6_BaudRateSet@request
  5100  001696  6E19               	movwf	(A6_Command@command+1)^0,c
  5101  001698  0E00               	movlw	0
  5102  00169A  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  5103  00169C  0E00               	movlw	0
  5104  00169E  6E1A               	movwf	A6_Command@timeout^0,c
  5105  0016A0  0E74               	movlw	low A6_BaudRateSet@response
  5106  0016A2  6E1C               	movwf	A6_Command@response^0,c
  5107  0016A4  0E00               	movlw	high A6_BaudRateSet@response
  5108  0016A6  6E1D               	movwf	(A6_Command@response+1)^0,c
  5109  0016A8  0E20               	movlw	32
  5110  0016AA  6E1E               	movwf	A6_Command@responseLen^0,c
  5111  0016AC  ECAE  F012         	call	_A6_Command	;wreg free
  5112  0016B0                     
  5113                           ;A6Lib.c: 59: sleepMS(250);
  5114  0016B0  0EFA               	movlw	250
  5115  0016B2  6E05               	movwf	sleepMS@ms^0,c
  5116  0016B4  0E00               	movlw	0
  5117  0016B6  6E06               	movwf	(sleepMS@ms+1)^0,c
  5118  0016B8  0E00               	movlw	0
  5119  0016BA  6E07               	movwf	(sleepMS@ms+2)^0,c
  5120  0016BC  0E00               	movlw	0
  5121  0016BE  6E08               	movwf	(sleepMS@ms+3)^0,c
  5122  0016C0  EC6F  F017         	call	_sleepMS	;wreg free
  5123  0016C4                     
  5124                           ;A6Lib.c: 60: if(strcmp(response, "OK") == 0) {
  5125  0016C4  0E74               	movlw	low A6_BaudRateSet@response
  5126  0016C6  6E05               	movwf	strcmp@s1^0,c
  5127  0016C8  0E00               	movlw	high A6_BaudRateSet@response
  5128  0016CA  6E06               	movwf	(strcmp@s1+1)^0,c
  5129  0016CC  0EFA               	movlw	low STR_23
  5130  0016CE  6E07               	movwf	strcmp@s2^0,c
  5131  0016D0  0E5F               	movlw	high STR_23
  5132  0016D2  6E08               	movwf	(strcmp@s2+1)^0,c
  5133  0016D4  ECA2  F015         	call	_strcmp	;wreg free
  5134  0016D8  5005               	movf	?_strcmp^0,w,c
  5135  0016DA  1006               	iorwf	(?_strcmp+1)^0,w,c
  5136  0016DC  A4D8               	btfss	status,2,c
  5137  0016DE  EF73  F00B         	goto	u4881
  5138  0016E2  EF75  F00B         	goto	u4880
  5139  0016E6                     u4881:
  5140  0016E6  EF9D  F00B         	goto	l5780
  5141  0016EA                     u4880:
  5142  0016EA                     
  5143                           ;A6Lib.c: 62: EUSART_BaudRateSet(baudRate);
  5144  0016EA  C070  F012         	movff	A6_BaudRateSet@baudRate,EUSART_BaudRateSet@baudRate
  5145  0016EE  C071  F013         	movff	A6_BaudRateSet@baudRate+1,EUSART_BaudRateSet@baudRate+1
  5146  0016F2  C072  F014         	movff	A6_BaudRateSet@baudRate+2,EUSART_BaudRateSet@baudRate+2
  5147  0016F6  C073  F015         	movff	A6_BaudRateSet@baudRate+3,EUSART_BaudRateSet@baudRate+3
  5148  0016FA  ECF1  F012         	call	_EUSART_BaudRateSet	;wreg free
  5149                           
  5150                           ;A6Lib.c: 63: sleepMS(150);
  5151  0016FE  0E96               	movlw	150
  5152  001700  6E05               	movwf	sleepMS@ms^0,c
  5153  001702  0E00               	movlw	0
  5154  001704  6E06               	movwf	(sleepMS@ms+1)^0,c
  5155  001706  0E00               	movlw	0
  5156  001708  6E07               	movwf	(sleepMS@ms+2)^0,c
  5157  00170A  0E00               	movlw	0
  5158  00170C  6E08               	movwf	(sleepMS@ms+3)^0,c
  5159  00170E  EC6F  F017         	call	_sleepMS	;wreg free
  5160  001712                     
  5161                           ;A6Lib.c: 64: if(A6_IsAlive() == 1) {
  5162  001712  EC00  F016         	call	_A6_IsAlive	;wreg free
  5163  001716  06E8               	decf	wreg,f,c
  5164  001718  A4D8               	btfss	status,2,c
  5165  00171A  EF91  F00B         	goto	u4891
  5166  00171E  EF93  F00B         	goto	u4890
  5167  001722                     u4891:
  5168  001722  EF9D  F00B         	goto	l5780
  5169  001726                     u4890:
  5170  001726                     
  5171                           ;A6Lib.c: 65: return baudRate;
  5172  001726  C070  F070         	movff	A6_BaudRateSet@baudRate,?_A6_BaudRateSet
  5173  00172A  C071  F071         	movff	A6_BaudRateSet@baudRate+1,?_A6_BaudRateSet+1
  5174  00172E  C072  F072         	movff	A6_BaudRateSet@baudRate+2,?_A6_BaudRateSet+2
  5175  001732  C073  F073         	movff	A6_BaudRateSet@baudRate+3,?_A6_BaudRateSet+3
  5176  001736  EFA9  F00B         	goto	l596
  5177  00173A                     l5780:
  5178                           
  5179                           ;A6Lib.c: 66: };A6Lib.c: 67: };A6Lib.c: 70: EUSART_BaudRateSet(currentBaudRate);
  5180  00173A  C0A8  F012         	movff	A6_BaudRateSet@currentBaudRate,EUSART_BaudRateSet@baudRate
  5181  00173E  C0A9  F013         	movff	A6_BaudRateSet@currentBaudRate+1,EUSART_BaudRateSet@baudRate+1
  5182  001742  C0AA  F014         	movff	A6_BaudRateSet@currentBaudRate+2,EUSART_BaudRateSet@baudRate+2
  5183  001746  C0AB  F015         	movff	A6_BaudRateSet@currentBaudRate+3,EUSART_BaudRateSet@baudRate+3
  5184  00174A  ECF1  F012         	call	_EUSART_BaudRateSet	;wreg free
  5185  00174E  EF2B  F00B         	goto	l5762
  5186  001752                     l596:
  5187  001752  0012               	return		;funcret
  5188  001754                     __end_of_A6_BaudRateSet:
  5189                           	opt callstack 0
  5190                           
  5191 ;; *************** function _A6_BaudRateGet *****************
  5192 ;; Defined at:
  5193 ;;		line 26 in file "A6Lib.c"
  5194 ;; Parameters:    Size  Location     Type
  5195 ;;		None
  5196 ;; Auto vars:     Size  Location     Type
  5197 ;;  j               1   72[COMRAM] unsigned char 
  5198 ;;  response       32   34[COMRAM] unsigned char [32]
  5199 ;;  baudRate        4   66[COMRAM] unsigned long 
  5200 ;;  baudRateToke    2   70[COMRAM] PTR unsigned char 
  5201 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  4   30[COMRAM] unsigned long 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5211 ;;      Params:         4       0       0       0       0       0       0       0       0
  5212 ;;      Locals:        39       0       0       0       0       0       0       0       0
  5213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5214 ;;      Totals:        43       0       0       0       0       0       0       0       0
  5215 ;;Total ram usage:       43 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:    6
  5218 ;; This function calls:
  5219 ;;		_A6_Command
  5220 ;;		_atol
  5221 ;;		_strstr
  5222 ;;		_strtok
  5223 ;; This function is called by:
  5224 ;;		_loop
  5225 ;;		_A6_BaudRateSet
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text9
  5230  001754                     __ptext9:
  5231                           	opt callstack 0
  5232  001754                     _A6_BaudRateGet:
  5233                           	opt callstack 22
  5234  001754                     
  5235                           ;A6Lib.c: 27: uint32_t baudRate;;A6Lib.c: 28: char *baudRateToken;;A6Lib.c: 29: char res
      +                          ponse[32];;A6Lib.c: 31: A6_Command("AT+IPR?\r", 0, response, 32);
  5236  001754  0EBA               	movlw	low STR_24
  5237  001756  6E18               	movwf	A6_Command@command^0,c
  5238  001758  0E5F               	movlw	high STR_24
  5239  00175A  6E19               	movwf	(A6_Command@command+1)^0,c
  5240  00175C  0E00               	movlw	0
  5241  00175E  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  5242  001760  0E00               	movlw	0
  5243  001762  6E1A               	movwf	A6_Command@timeout^0,c
  5244  001764  0E23               	movlw	low A6_BaudRateGet@response
  5245  001766  6E1C               	movwf	A6_Command@response^0,c
  5246  001768  0E00               	movlw	high A6_BaudRateGet@response
  5247  00176A  6E1D               	movwf	(A6_Command@response+1)^0,c
  5248  00176C  0E20               	movlw	32
  5249  00176E  6E1E               	movwf	A6_Command@responseLen^0,c
  5250  001770  ECAE  F012         	call	_A6_Command	;wreg free
  5251  001774                     
  5252                           ;A6Lib.c: 32: if(strstr(response, "+IPR: ") != (0)) {
  5253  001774  0E23               	movlw	low A6_BaudRateGet@response
  5254  001776  6E10               	movwf	strstr@s1^0,c
  5255  001778  0E00               	movlw	high A6_BaudRateGet@response
  5256  00177A  6E11               	movwf	(strstr@s1+1)^0,c
  5257  00177C  0EE1               	movlw	low STR_25
  5258  00177E  6E12               	movwf	strstr@s2^0,c
  5259  001780  0E5F               	movlw	high STR_25
  5260  001782  6E13               	movwf	(strstr@s2+1)^0,c
  5261  001784  EC8E  F010         	call	_strstr	;wreg free
  5262  001788  5010               	movf	?_strstr^0,w,c
  5263  00178A  1011               	iorwf	(?_strstr+1)^0,w,c
  5264  00178C  B4D8               	btfsc	status,2,c
  5265  00178E  EFCB  F00B         	goto	u3051
  5266  001792  EFCD  F00B         	goto	u3050
  5267  001796                     u3051:
  5268  001796  EF33  F00C         	goto	l4170
  5269  00179A                     u3050:
  5270  00179A                     
  5271                           ;A6Lib.c: 33: baudRateToken = strtok(response, " ");
  5272  00179A  0E23               	movlw	low A6_BaudRateGet@response
  5273  00179C  6E12               	movwf	strtok@s1^0,c
  5274  00179E  0E00               	movlw	high A6_BaudRateGet@response
  5275  0017A0  6E13               	movwf	(strtok@s1+1)^0,c
  5276  0017A2  0ED1               	movlw	low (STR_33+6)
  5277  0017A4  6E14               	movwf	strtok@s2^0,c
  5278  0017A6  0E5F               	movlw	high (STR_33+6)
  5279  0017A8  6E15               	movwf	(strtok@s2+1)^0,c
  5280  0017AA  ECC8  F00C         	call	_strtok	;wreg free
  5281  0017AE  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  5282  0017B2  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  5283                           
  5284                           ;A6Lib.c: 34: baudRateToken = strtok((0), response);
  5285  0017B6  0E00               	movlw	0
  5286  0017B8  6E12               	movwf	strtok@s1^0,c
  5287  0017BA  0E00               	movlw	0
  5288  0017BC  6E13               	movwf	(strtok@s1+1)^0,c
  5289  0017BE  0E23               	movlw	low A6_BaudRateGet@response
  5290  0017C0  6E14               	movwf	strtok@s2^0,c
  5291  0017C2  0E00               	movlw	high A6_BaudRateGet@response
  5292  0017C4  6E15               	movwf	(strtok@s2+1)^0,c
  5293  0017C6  ECC8  F00C         	call	_strtok	;wreg free
  5294  0017CA  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  5295  0017CE  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  5296  0017D2                     
  5297                           ;A6Lib.c: 35: if(baudRateToken != (0)) {
  5298  0017D2  5047               	movf	A6_BaudRateGet@baudRateToken^0,w,c
  5299  0017D4  1048               	iorwf	(A6_BaudRateGet@baudRateToken+1)^0,w,c
  5300  0017D6  B4D8               	btfsc	status,2,c
  5301  0017D8  EFF0  F00B         	goto	u3061
  5302  0017DC  EFF2  F00B         	goto	u3060
  5303  0017E0                     u3061:
  5304  0017E0  EF33  F00C         	goto	l4170
  5305  0017E4                     u3060:
  5306  0017E4                     
  5307                           ;A6Lib.c: 36: baudRate = atol(baudRateToken);
  5308  0017E4  C047  F011         	movff	A6_BaudRateGet@baudRateToken,atol@s
  5309  0017E8  C048  F012         	movff	A6_BaudRateGet@baudRateToken+1,atol@s+1
  5310  0017EC  EC78  F00A         	call	_atol	;wreg free
  5311  0017F0  C011  F043         	movff	?_atol,A6_BaudRateGet@baudRate
  5312  0017F4  C012  F044         	movff	?_atol+1,A6_BaudRateGet@baudRate+1
  5313  0017F8  C013  F045         	movff	?_atol+2,A6_BaudRateGet@baudRate+2
  5314  0017FC  C014  F046         	movff	?_atol+3,A6_BaudRateGet@baudRate+3
  5315  001800                     
  5316                           ;A6Lib.c: 37: for(uint8_t j=0; j<3; j++) {
  5317  001800  0E00               	movlw	0
  5318  001802  6E49               	movwf	A6_BaudRateGet@j^0,c
  5319  001804                     l4162:
  5320                           
  5321                           ;A6Lib.c: 38: if(baudRate == A6_BAUDRATES[j]) {
  5322  001804  5049               	movf	A6_BaudRateGet@j^0,w,c
  5323  001806  0D04               	mullw	4
  5324  001808  0EE5               	movlw	low _A6_BAUDRATES
  5325  00180A  24F3               	addwf	243,w,c
  5326  00180C  6EF6               	movwf	tblptrl,c
  5327  00180E  0E5D               	movlw	high _A6_BAUDRATES
  5328  001810  20F4               	addwfc	244,w,c
  5329  001812  6EF7               	movwf	tblptrh,c
  5330  001814                     	if	0	;There are less than 3 active tblptr bytes
  5331  001814                     	endif
  5332  001814  5043               	movf	A6_BaudRateGet@baudRate^0,w,c
  5333  001816  0009               	tblrd		*+
  5334  001818  18F5               	xorwf	tablat,w,c
  5335  00181A  E110               	bnz	u3071
  5336  00181C  5044               	movf	(A6_BaudRateGet@baudRate+1)^0,w,c
  5337  00181E  0009               	tblrd		*+
  5338  001820  18F5               	xorwf	tablat,w,c
  5339  001822  E10C               	bnz	u3071
  5340  001824  5045               	movf	(A6_BaudRateGet@baudRate+2)^0,w,c
  5341  001826  0009               	tblrd		*+
  5342  001828  18F5               	xorwf	tablat,w,c
  5343  00182A  E108               	bnz	u3071
  5344  00182C  5046               	movf	(A6_BaudRateGet@baudRate+3)^0,w,c
  5345  00182E  0009               	tblrd		*+
  5346  001830  18F5               	xorwf	tablat,w,c
  5347  001832  A4D8               	btfss	status,2,c
  5348  001834  EF1E  F00C         	goto	u3071
  5349  001838  EF20  F00C         	goto	u3070
  5350  00183C                     u3071:
  5351  00183C  EF2A  F00C         	goto	l4166
  5352  001840                     u3070:
  5353  001840                     
  5354                           ;A6Lib.c: 39: return baudRate;
  5355  001840  C043  F01F         	movff	A6_BaudRateGet@baudRate,?_A6_BaudRateGet
  5356  001844  C044  F020         	movff	A6_BaudRateGet@baudRate+1,?_A6_BaudRateGet+1
  5357  001848  C045  F021         	movff	A6_BaudRateGet@baudRate+2,?_A6_BaudRateGet+2
  5358  00184C  C046  F022         	movff	A6_BaudRateGet@baudRate+3,?_A6_BaudRateGet+3
  5359  001850  EF3B  F00C         	goto	l592
  5360  001854                     l4166:
  5361  001854  2A49               	incf	A6_BaudRateGet@j^0,f,c
  5362  001856  0E02               	movlw	2
  5363  001858  6449               	cpfsgt	A6_BaudRateGet@j^0,c
  5364  00185A  EF31  F00C         	goto	u3081
  5365  00185E  EF33  F00C         	goto	u3080
  5366  001862                     u3081:
  5367  001862  EF02  F00C         	goto	l4162
  5368  001866                     u3080:
  5369  001866                     l4170:
  5370                           
  5371                           ;A6Lib.c: 40: };A6Lib.c: 41: };A6Lib.c: 42: };A6Lib.c: 43: };A6Lib.c: 45: return 0;
  5372  001866  0E00               	movlw	0
  5373  001868  6E1F               	movwf	?_A6_BaudRateGet^0,c
  5374  00186A  0E00               	movlw	0
  5375  00186C  6E20               	movwf	(?_A6_BaudRateGet+1)^0,c
  5376  00186E  0E00               	movlw	0
  5377  001870  6E21               	movwf	(?_A6_BaudRateGet+2)^0,c
  5378  001872  0E00               	movlw	0
  5379  001874  6E22               	movwf	(?_A6_BaudRateGet+3)^0,c
  5380  001876                     l592:
  5381  001876  0012               	return		;funcret
  5382  001878                     __end_of_A6_BaudRateGet:
  5383                           	opt callstack 0
  5384                           
  5385 ;; *************** function _strtok *****************
  5386 ;; Defined at:
  5387 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strtok.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  s1              2   17[COMRAM] PTR unsigned char 
  5390 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5391 ;;  s2              2   19[COMRAM] PTR const unsigned char 
  5392 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5393 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), A6_BaudRateGet@response(32), 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  2   17[COMRAM] PTR unsigned char 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5405 ;;      Params:         4       0       0       0       0       0       0       0       0
  5406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5408 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5409 ;;Total ram usage:        4 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    4
  5412 ;; This function calls:
  5413 ;;		_strcspn
  5414 ;;		_strspn
  5415 ;; This function is called by:
  5416 ;;		_A6_BaudRateGet
  5417 ;;		_A6_NetworkGetStatus
  5418 ;;		_A6_NetworkGetRSSI
  5419 ;; This function uses a non-reentrant model
  5420 ;;
  5421                           
  5422                           	psect	text10
  5423  001990                     __ptext10:
  5424                           	opt callstack 0
  5425  001990                     _strtok:
  5426                           	opt callstack 24
  5427  001990  5012               	movf	strtok@s1^0,w,c
  5428  001992  1013               	iorwf	(strtok@s1+1)^0,w,c
  5429  001994  A4D8               	btfss	status,2,c
  5430  001996  EFCF  F00C         	goto	u2831
  5431  00199A  EFD1  F00C         	goto	u2830
  5432  00199E                     u2831:
  5433  00199E  EFD5  F00C         	goto	l1534
  5434  0019A2                     u2830:
  5435  0019A2  C0CA  F012         	movff	strtok@sp,strtok@s1
  5436  0019A6  C0CB  F013         	movff	strtok@sp+1,strtok@s1+1
  5437  0019AA                     l1534:
  5438  0019AA  5012               	movf	strtok@s1^0,w,c
  5439  0019AC  1013               	iorwf	(strtok@s1+1)^0,w,c
  5440  0019AE  A4D8               	btfss	status,2,c
  5441  0019B0  EFDC  F00C         	goto	u2841
  5442  0019B4  EFDE  F00C         	goto	u2840
  5443  0019B8                     u2841:
  5444  0019B8  EFE4  F00C         	goto	l4022
  5445  0019BC                     u2840:
  5446  0019BC  0E00               	movlw	0
  5447  0019BE  6E12               	movwf	?_strtok^0,c
  5448  0019C0  0E00               	movlw	0
  5449  0019C2  6E13               	movwf	(?_strtok+1)^0,c
  5450  0019C4  EF38  F00D         	goto	l1536
  5451  0019C8                     l4022:
  5452  0019C8  C012  F00B         	movff	strtok@s1,strspn@s1
  5453  0019CC  C013  F00C         	movff	strtok@s1+1,strspn@s1+1
  5454  0019D0  C014  F00D         	movff	strtok@s2,strspn@s2
  5455  0019D4  C015  F00E         	movff	strtok@s2+1,strspn@s2+1
  5456  0019D8  EC0A  F015         	call	_strspn	;wreg free
  5457  0019DC  500B               	movf	?_strspn^0,w,c
  5458  0019DE  2612               	addwf	strtok@s1^0,f,c
  5459  0019E0  500C               	movf	(?_strspn+1)^0,w,c
  5460  0019E2  2213               	addwfc	(strtok@s1+1)^0,f,c
  5461  0019E4  C012  FFD9         	movff	strtok@s1,fsr2l
  5462  0019E8  C013  FFDA         	movff	strtok@s1+1,fsr2h
  5463  0019EC  50DF               	movf	indf2,w,c
  5464  0019EE  A4D8               	btfss	status,2,c
  5465  0019F0  EFFC  F00C         	goto	u2851
  5466  0019F4  EFFE  F00C         	goto	u2850
  5467  0019F8                     u2851:
  5468  0019F8  EF09  F00D         	goto	l4030
  5469  0019FC                     u2850:
  5470  0019FC  0E00               	movlw	0
  5471  0019FE  0100               	movlb	0	; () banked
  5472  001A00  6FCA               	movwf	strtok@sp& (0+255),b
  5473  001A02  0E00               	movlw	0
  5474  001A04  6FCB               	movwf	(strtok@sp+1)& (0+255),b
  5475  001A06  C0CA  F012         	movff	strtok@sp,?_strtok
  5476  001A0A  C0CB  F013         	movff	strtok@sp+1,?_strtok+1
  5477  001A0E  EF38  F00D         	goto	l1536
  5478  001A12                     l4030:
  5479  001A12  C012  F00B         	movff	strtok@s1,strcspn@s1
  5480  001A16  C013  F00C         	movff	strtok@s1+1,strcspn@s1+1
  5481  001A1A  C014  F00D         	movff	strtok@s2,strcspn@s2
  5482  001A1E  C015  F00E         	movff	strtok@s2+1,strcspn@s2+1
  5483  001A22  EC3D  F015         	call	_strcspn	;wreg free
  5484  001A26  500B               	movf	?_strcspn^0,w,c
  5485  001A28  2412               	addwf	strtok@s1^0,w,c
  5486  001A2A  0100               	movlb	0	; () banked
  5487  001A2C  6FCA               	movwf	strtok@sp& (0+255),b
  5488  001A2E  500C               	movf	(?_strcspn+1)^0,w,c
  5489  001A30  2013               	addwfc	(strtok@s1+1)^0,w,c
  5490  001A32  6FCB               	movwf	(strtok@sp+1)& (0+255),b
  5491  001A34                     
  5492                           ; BSR set to: 0
  5493  001A34  C0CA  FFD9         	movff	strtok@sp,fsr2l
  5494  001A38  C0CB  FFDA         	movff	strtok@sp+1,fsr2h
  5495  001A3C  50DF               	movf	indf2,w,c
  5496  001A3E  B4D8               	btfsc	status,2,c
  5497  001A40  EF24  F00D         	goto	u2861
  5498  001A44  EF26  F00D         	goto	u2860
  5499  001A48                     u2861:
  5500  001A48  EF30  F00D         	goto	l4038
  5501  001A4C                     u2860:
  5502  001A4C                     
  5503                           ; BSR set to: 0
  5504  001A4C  C0CA  FFD9         	movff	strtok@sp,fsr2l
  5505  001A50  C0CB  FFDA         	movff	strtok@sp+1,fsr2h
  5506  001A54  0E00               	movlw	0
  5507  001A56  6EDF               	movwf	indf2,c
  5508  001A58                     
  5509                           ; BSR set to: 0
  5510  001A58  4BCA               	infsnz	strtok@sp& (0+255),f,b
  5511  001A5A  2BCB               	incf	(strtok@sp+1)& (0+255),f,b
  5512  001A5C  EF34  F00D         	goto	l1539
  5513  001A60                     l4038:
  5514                           
  5515                           ; BSR set to: 0
  5516  001A60  0E00               	movlw	0
  5517  001A62  6FCA               	movwf	strtok@sp& (0+255),b
  5518  001A64  0E00               	movlw	0
  5519  001A66  6FCB               	movwf	(strtok@sp+1)& (0+255),b
  5520  001A68                     l1539:
  5521                           
  5522                           ; BSR set to: 0
  5523  001A68  C012  F012         	movff	strtok@s1,?_strtok
  5524  001A6C  C013  F013         	movff	strtok@s1+1,?_strtok+1
  5525  001A70                     l1536:
  5526  001A70  0012               	return		;funcret
  5527  001A72                     __end_of_strtok:
  5528                           	opt callstack 0
  5529                           
  5530 ;; *************** function _strspn *****************
  5531 ;; Defined at:
  5532 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strspn.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  5535 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5536 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  5537 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5538 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), A6_BaudRateGet@response(32), 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  i               2   15[COMRAM] unsigned int 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  2   10[COMRAM] unsigned int 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5550 ;;      Params:         4       0       0       0       0       0       0       0       0
  5551 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5552 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5553 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5554 ;;Total ram usage:        7 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:    3
  5557 ;; This function calls:
  5558 ;;		_strchr
  5559 ;; This function is called by:
  5560 ;;		_strtok
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text11
  5565  002A14                     __ptext11:
  5566                           	opt callstack 0
  5567  002A14                     _strspn:
  5568                           	opt callstack 24
  5569  002A14  0E00               	movlw	0
  5570  002A16  6E11               	movwf	(strspn@i+1)^0,c
  5571  002A18  0E00               	movlw	0
  5572  002A1A  6E10               	movwf	strspn@i^0,c
  5573  002A1C  EF14  F015         	goto	l3950
  5574  002A20                     l3948:
  5575  002A20  4A0B               	infsnz	strspn@s1^0,f,c
  5576  002A22  2A0C               	incf	(strspn@s1+1)^0,f,c
  5577  002A24  4A10               	infsnz	strspn@i^0,f,c
  5578  002A26  2A11               	incf	(strspn@i+1)^0,f,c
  5579  002A28                     l3950:
  5580  002A28  C00B  FFD9         	movff	strspn@s1,fsr2l
  5581  002A2C  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  5582  002A30  50DF               	movf	indf2,w,c
  5583  002A32  B4D8               	btfsc	status,2,c
  5584  002A34  EF1E  F015         	goto	u2691
  5585  002A38  EF20  F015         	goto	u2690
  5586  002A3C                     u2691:
  5587  002A3C  EF38  F015         	goto	l1573
  5588  002A40                     u2690:
  5589  002A40  C00D  F005         	movff	strspn@s2,strchr@ptr
  5590  002A44  C00E  F006         	movff	strspn@s2+1,strchr@ptr+1
  5591  002A48  C00B  FFD9         	movff	strspn@s1,fsr2l
  5592  002A4C  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  5593  002A50  50DF               	movf	indf2,w,c
  5594  002A52  6E0F               	movwf	??_strspn^0,c
  5595  002A54  500F               	movf	??_strspn^0,w,c
  5596  002A56  6E07               	movwf	strchr@chr^0,c
  5597  002A58  6A08               	clrf	(strchr@chr+1)^0,c
  5598  002A5A  EC33  F013         	call	_strchr	;wreg free
  5599  002A5E  5005               	movf	?_strchr^0,w,c
  5600  002A60  1006               	iorwf	(?_strchr+1)^0,w,c
  5601  002A62  A4D8               	btfss	status,2,c
  5602  002A64  EF36  F015         	goto	u2701
  5603  002A68  EF38  F015         	goto	u2700
  5604  002A6C                     u2701:
  5605  002A6C  EF10  F015         	goto	l3948
  5606  002A70                     u2700:
  5607  002A70                     l1573:
  5608  002A70  C010  F00B         	movff	strspn@i,?_strspn
  5609  002A74  C011  F00C         	movff	strspn@i+1,?_strspn+1
  5610  002A78  0012               	return		;funcret
  5611  002A7A                     __end_of_strspn:
  5612                           	opt callstack 0
  5613                           
  5614 ;; *************** function _strcspn *****************
  5615 ;; Defined at:
  5616 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcspn.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  5619 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  5620 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  5621 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5622 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), A6_BaudRateGet@response(32), 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  i               2   15[COMRAM] unsigned int 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  2   10[COMRAM] unsigned int 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5634 ;;      Params:         4       0       0       0       0       0       0       0       0
  5635 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5636 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5637 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5638 ;;Total ram usage:        7 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    3
  5641 ;; This function calls:
  5642 ;;		_strchr
  5643 ;; This function is called by:
  5644 ;;		_strtok
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text12
  5649  002A7A                     __ptext12:
  5650                           	opt callstack 0
  5651  002A7A                     _strcspn:
  5652                           	opt callstack 24
  5653  002A7A  0E00               	movlw	0
  5654  002A7C  6E11               	movwf	(strcspn@i+1)^0,c
  5655  002A7E  0E00               	movlw	0
  5656  002A80  6E10               	movwf	strcspn@i^0,c
  5657  002A82  EF47  F015         	goto	l3958
  5658  002A86                     l3956:
  5659  002A86  4A0B               	infsnz	strcspn@s1^0,f,c
  5660  002A88  2A0C               	incf	(strcspn@s1+1)^0,f,c
  5661  002A8A  4A10               	infsnz	strcspn@i^0,f,c
  5662  002A8C  2A11               	incf	(strcspn@i+1)^0,f,c
  5663  002A8E                     l3958:
  5664  002A8E  C00B  FFD9         	movff	strcspn@s1,fsr2l
  5665  002A92  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  5666  002A96  50DF               	movf	indf2,w,c
  5667  002A98  B4D8               	btfsc	status,2,c
  5668  002A9A  EF51  F015         	goto	u2711
  5669  002A9E  EF53  F015         	goto	u2710
  5670  002AA2                     u2711:
  5671  002AA2  EF6B  F015         	goto	l1554
  5672  002AA6                     u2710:
  5673  002AA6  C00D  F005         	movff	strcspn@s2,strchr@ptr
  5674  002AAA  C00E  F006         	movff	strcspn@s2+1,strchr@ptr+1
  5675  002AAE  C00B  FFD9         	movff	strcspn@s1,fsr2l
  5676  002AB2  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  5677  002AB6  50DF               	movf	indf2,w,c
  5678  002AB8  6E0F               	movwf	??_strcspn^0,c
  5679  002ABA  500F               	movf	??_strcspn^0,w,c
  5680  002ABC  6E07               	movwf	strchr@chr^0,c
  5681  002ABE  6A08               	clrf	(strchr@chr+1)^0,c
  5682  002AC0  EC33  F013         	call	_strchr	;wreg free
  5683  002AC4  5005               	movf	?_strchr^0,w,c
  5684  002AC6  1006               	iorwf	(?_strchr+1)^0,w,c
  5685  002AC8  B4D8               	btfsc	status,2,c
  5686  002ACA  EF69  F015         	goto	u2721
  5687  002ACE  EF6B  F015         	goto	u2720
  5688  002AD2                     u2721:
  5689  002AD2  EF43  F015         	goto	l3956
  5690  002AD6                     u2720:
  5691  002AD6                     l1554:
  5692  002AD6  C010  F00B         	movff	strcspn@i,?_strcspn
  5693  002ADA  C011  F00C         	movff	strcspn@i+1,?_strcspn+1
  5694  002ADE  0012               	return		;funcret
  5695  002AE0                     __end_of_strcspn:
  5696                           	opt callstack 0
  5697                           
  5698 ;; *************** function _strstr *****************
  5699 ;; Defined at:
  5700 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strstr.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;  s1              2   15[COMRAM] PTR const unsigned char 
  5703 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5704 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5705 ;;		 -> A6_BaudRateGet@response(32), 
  5706 ;;  s2              2   17[COMRAM] PTR const unsigned char 
  5707 ;;		 -> STR_37(7), STR_33(8), STR_25(7), 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;		None
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  2   15[COMRAM] PTR unsigned char 
  5712 ;; Registers used:
  5713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5719 ;;      Params:         4       0       0       0       0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5722 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5723 ;;Total ram usage:        4 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    3
  5726 ;; This function calls:
  5727 ;;		_strchr
  5728 ;;		_strlen
  5729 ;;		_strncmp
  5730 ;; This function is called by:
  5731 ;;		_A6_BaudRateGet
  5732 ;;		_A6_NetworkGetStatus
  5733 ;;		_A6_NetworkGetRSSI
  5734 ;; This function uses a non-reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text13
  5738  00211C                     __ptext13:
  5739                           	opt callstack 0
  5740  00211C                     _strstr:
  5741                           	opt callstack 25
  5742  00211C  EFC7  F010         	goto	l4006
  5743  002120                     l3998:
  5744  002120  C010  F009         	movff	strstr@s1,strncmp@s1
  5745  002124  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
  5746  002128  C012  F00B         	movff	strstr@s2,strncmp@s2
  5747  00212C  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
  5748  002130  C012  F005         	movff	strstr@s2,strlen@s
  5749  002134  C013  F006         	movff	strstr@s2+1,strlen@s+1
  5750  002138  EC9D  F016         	call	_strlen	;wreg free
  5751  00213C  C005  F00D         	movff	?_strlen,strncmp@len
  5752  002140  C006  F00E         	movff	?_strlen+1,strncmp@len+1
  5753  002144  EC86  F00E         	call	_strncmp	;wreg free
  5754  002148  5009               	movf	?_strncmp^0,w,c
  5755  00214A  100A               	iorwf	(?_strncmp+1)^0,w,c
  5756  00214C  A4D8               	btfss	status,2,c
  5757  00214E  EFAB  F010         	goto	u2791
  5758  002152  EFAD  F010         	goto	u2790
  5759  002156                     u2791:
  5760  002156  EFB3  F010         	goto	l4004
  5761  00215A                     u2790:
  5762  00215A  C010  F010         	movff	strstr@s1,?_strstr
  5763  00215E  C011  F011         	movff	strstr@s1+1,?_strstr+1
  5764  002162  EFEC  F010         	goto	l1522
  5765  002166                     l4004:
  5766  002166  0E01               	movlw	1
  5767  002168  2410               	addwf	strstr@s1^0,w,c
  5768  00216A  6E05               	movwf	strchr@ptr^0,c
  5769  00216C  0E00               	movlw	0
  5770  00216E  2011               	addwfc	(strstr@s1+1)^0,w,c
  5771  002170  6E06               	movwf	(strchr@ptr+1)^0,c
  5772  002172  C012  FFF6         	movff	strstr@s2,tblptrl
  5773  002176  C013  FFF7         	movff	strstr@s2+1,tblptrh
  5774  00217A                     	if	0	;tblptru may be non-zero
  5775  00217A                     	endif
  5776  00217A                     	if	0	;tblptru may be non-zero
  5777  00217A                     	endif
  5778  00217A  0008               	tblrd		*
  5779  00217C  50F5               	movf	tablat,w,c
  5780  00217E  6E07               	movwf	strchr@chr^0,c
  5781  002180  6A08               	clrf	(strchr@chr+1)^0,c
  5782  002182  EC33  F013         	call	_strchr	;wreg free
  5783  002186  C005  F010         	movff	?_strchr,strstr@s1
  5784  00218A  C006  F011         	movff	?_strchr+1,strstr@s1+1
  5785  00218E                     l4006:
  5786  00218E  5010               	movf	strstr@s1^0,w,c
  5787  002190  1011               	iorwf	(strstr@s1+1)^0,w,c
  5788  002192  B4D8               	btfsc	status,2,c
  5789  002194  EFCE  F010         	goto	u2801
  5790  002198  EFD0  F010         	goto	u2800
  5791  00219C                     u2801:
  5792  00219C  EFE8  F010         	goto	l4010
  5793  0021A0                     u2800:
  5794  0021A0  C010  FFF6         	movff	strstr@s1,tblptrl
  5795  0021A4  C011  FFF7         	movff	strstr@s1+1,tblptrh
  5796  0021A8  6AF8               	clrf	tblptru,c
  5797  0021AA  0E07               	movlw	(high __ramtop+-1)
  5798  0021AC  64F7               	cpfsgt	tblptrh,c
  5799  0021AE  D003               	bra	u2817
  5800  0021B0  0008               	tblrd		*
  5801  0021B2  50F5               	movf	tablat,w,c
  5802  0021B4  D005               	bra	u2810
  5803  0021B6                     u2817:
  5804  0021B6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5805  0021BA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5806  0021BE  50EF               	movf	indf0,w,c
  5807  0021C0                     u2810:
  5808  0021C0  0900               	iorlw	0
  5809  0021C2  A4D8               	btfss	status,2,c
  5810  0021C4  EFE6  F010         	goto	u2821
  5811  0021C8  EFE8  F010         	goto	u2820
  5812  0021CC                     u2821:
  5813  0021CC  EF90  F010         	goto	l3998
  5814  0021D0                     u2820:
  5815  0021D0                     l4010:
  5816  0021D0  0E00               	movlw	0
  5817  0021D2  6E10               	movwf	?_strstr^0,c
  5818  0021D4  0E00               	movlw	0
  5819  0021D6  6E11               	movwf	(?_strstr+1)^0,c
  5820  0021D8                     l1522:
  5821  0021D8  0012               	return		;funcret
  5822  0021DA                     __end_of_strstr:
  5823                           	opt callstack 0
  5824                           
  5825 ;; *************** function _strncmp *****************
  5826 ;; Defined at:
  5827 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strncmp.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;  s1              2    8[COMRAM] PTR const unsigned char 
  5830 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5831 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5832 ;;		 -> A6_BaudRateGet@response(32), 
  5833 ;;  s2              2   10[COMRAM] PTR const unsigned char 
  5834 ;;		 -> STR_37(7), STR_33(8), STR_25(7), 
  5835 ;;  len             2   12[COMRAM] unsigned int 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;		None
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  2    8[COMRAM] int 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5847 ;;      Params:         6       0       0       0       0       0       0       0       0
  5848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5849 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5850 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5851 ;;Total ram usage:        7 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    2
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_strstr
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           	psect	text14
  5862  001D0C                     __ptext14:
  5863                           	opt callstack 0
  5864  001D0C                     _strncmp:
  5865                           	opt callstack 25
  5866  001D0C  EFE1  F00E         	goto	l3940
  5867  001D10                     l3930:
  5868  001D10  C009  FFF6         	movff	strncmp@s1,tblptrl
  5869  001D14  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5870  001D18  6AF8               	clrf	tblptru,c
  5871  001D1A  0E07               	movlw	(high __ramtop+-1)
  5872  001D1C  64F7               	cpfsgt	tblptrh,c
  5873  001D1E  D003               	bra	u2647
  5874  001D20  0008               	tblrd		*
  5875  001D22  50F5               	movf	tablat,w,c
  5876  001D24  D005               	bra	u2640
  5877  001D26                     u2647:
  5878  001D26  CFF6 FFE9          	movff	tblptrl,fsr0l
  5879  001D2A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5880  001D2E  50EF               	movf	indf0,w,c
  5881  001D30                     u2640:
  5882  001D30  0900               	iorlw	0
  5883  001D32  B4D8               	btfsc	status,2,c
  5884  001D34  EF9E  F00E         	goto	u2651
  5885  001D38  EFA0  F00E         	goto	u2650
  5886  001D3C                     u2651:
  5887  001D3C  EFBF  F00E         	goto	l3934
  5888  001D40                     u2650:
  5889  001D40  C00B  FFF6         	movff	strncmp@s2,tblptrl
  5890  001D44  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  5891  001D48                     	if	0	;tblptru may be non-zero
  5892  001D48                     	endif
  5893  001D48                     	if	0	;tblptru may be non-zero
  5894  001D48                     	endif
  5895  001D48  0008               	tblrd		*
  5896  001D4A  CFF5 F00F          	movff	tablat,??_strncmp
  5897  001D4E  C009  FFF6         	movff	strncmp@s1,tblptrl
  5898  001D52  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5899  001D56  6AF8               	clrf	tblptru,c
  5900  001D58  0E07               	movlw	(high __ramtop+-1)
  5901  001D5A  64F7               	cpfsgt	tblptrh,c
  5902  001D5C  D003               	bra	u2667
  5903  001D5E  0008               	tblrd		*
  5904  001D60  50F5               	movf	tablat,w,c
  5905  001D62  D005               	bra	u2665
  5906  001D64                     u2667:
  5907  001D64  CFF6 FFE9          	movff	tblptrl,fsr0l
  5908  001D68  CFF7 FFEA          	movff	tblptrh,fsr0h
  5909  001D6C  50EF               	movf	indf0,w,c
  5910  001D6E                     u2665:
  5911  001D6E  180F               	xorwf	??_strncmp^0,w,c
  5912  001D70  B4D8               	btfsc	status,2,c
  5913  001D72  EFBD  F00E         	goto	u2661
  5914  001D76  EFBF  F00E         	goto	u2660
  5915  001D7A                     u2661:
  5916  001D7A  EFDD  F00E         	goto	l3938
  5917  001D7E                     u2660:
  5918  001D7E                     l3934:
  5919  001D7E  C009  FFF6         	movff	strncmp@s1,tblptrl
  5920  001D82  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
  5921  001D86  6AF8               	clrf	tblptru,c
  5922  001D88  0E07               	movlw	(high __ramtop+-1)
  5923  001D8A  64F7               	cpfsgt	tblptrh,c
  5924  001D8C  D003               	bra	u2677
  5925  001D8E  0008               	tblrd		*
  5926  001D90  50F5               	movf	tablat,w,c
  5927  001D92  D005               	bra	u2670
  5928  001D94                     u2677:
  5929  001D94  CFF6 FFE9          	movff	tblptrl,fsr0l
  5930  001D98  CFF7 FFEA          	movff	tblptrh,fsr0h
  5931  001D9C  50EF               	movf	indf0,w,c
  5932  001D9E                     u2670:
  5933  001D9E  6E0F               	movwf	??_strncmp^0,c
  5934  001DA0  C00B  FFF6         	movff	strncmp@s2,tblptrl
  5935  001DA4  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
  5936  001DA8                     	if	0	;tblptru may be non-zero
  5937  001DA8                     	endif
  5938  001DA8                     	if	0	;tblptru may be non-zero
  5939  001DA8                     	endif
  5940  001DA8  0008               	tblrd		*
  5941  001DAA  50F5               	movf	tablat,w,c
  5942  001DAC  5C0F               	subwf	??_strncmp^0,w,c
  5943  001DAE  6E09               	movwf	?_strncmp^0,c
  5944  001DB0  6A0A               	clrf	(?_strncmp+1)^0,c
  5945  001DB2  A0D8               	btfss	status,0,c
  5946  001DB4  060A               	decf	(?_strncmp+1)^0,f,c
  5947  001DB6  EFF2  F00E         	goto	l1563
  5948  001DBA                     l3938:
  5949  001DBA  4A09               	infsnz	strncmp@s1^0,f,c
  5950  001DBC  2A0A               	incf	(strncmp@s1+1)^0,f,c
  5951  001DBE  4A0B               	infsnz	strncmp@s2^0,f,c
  5952  001DC0  2A0C               	incf	(strncmp@s2+1)^0,f,c
  5953  001DC2                     l3940:
  5954  001DC2  060D               	decf	strncmp@len^0,f,c
  5955  001DC4  A0D8               	btfss	status,0,c
  5956  001DC6  060E               	decf	(strncmp@len+1)^0,f,c
  5957  001DC8  280D               	incf	strncmp@len^0,w,c
  5958  001DCA  E106               	bnz	u2681
  5959  001DCC  280E               	incf	(strncmp@len+1)^0,w,c
  5960  001DCE  A4D8               	btfss	status,2,c
  5961  001DD0  EFEC  F00E         	goto	u2681
  5962  001DD4  EFEE  F00E         	goto	u2680
  5963  001DD8                     u2681:
  5964  001DD8  EF88  F00E         	goto	l3930
  5965  001DDC                     u2680:
  5966  001DDC  0E00               	movlw	0
  5967  001DDE  6E0A               	movwf	(?_strncmp+1)^0,c
  5968  001DE0  0E00               	movlw	0
  5969  001DE2  6E09               	movwf	?_strncmp^0,c
  5970  001DE4                     l1563:
  5971  001DE4  0012               	return		;funcret
  5972  001DE6                     __end_of_strncmp:
  5973                           	opt callstack 0
  5974                           
  5975 ;; *************** function _strchr *****************
  5976 ;; Defined at:
  5977 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strchr.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
  5980 ;;		 -> STR_39(2), STR_38(2), A6_NetworkGetRSSI@response(32), STR_35(2), 
  5981 ;;		 -> STR_34(2), A6_NetworkGetStatus@response(32), STR_26(2), NULL(0), 
  5982 ;;		 -> A6_BaudRateGet@response(32), 
  5983 ;;  chr             2    6[COMRAM] int 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  2    4[COMRAM] PTR unsigned char 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5995 ;;      Params:         4       0       0       0       0       0       0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5997 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5998 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5999 ;;Total ram usage:        6 bytes
  6000 ;; Hardware stack levels used:    1
  6001 ;; Hardware stack levels required when called:    2
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_strstr
  6006 ;;		_strcspn
  6007 ;;		_strspn
  6008 ;; This function uses a non-reentrant model
  6009 ;;
  6010                           
  6011                           	psect	text15
  6012  002666                     __ptext15:
  6013                           	opt callstack 0
  6014  002666                     _strchr:
  6015                           	opt callstack 24
  6016  002666                     l1542:
  6017  002666  C005  FFF6         	movff	strchr@ptr,tblptrl
  6018  00266A  C006  FFF7         	movff	strchr@ptr+1,tblptrh
  6019  00266E  6AF8               	clrf	tblptru,c
  6020  002670  0E07               	movlw	(high __ramtop+-1)
  6021  002672  64F7               	cpfsgt	tblptrh,c
  6022  002674  D003               	bra	u2377
  6023  002676  0008               	tblrd		*
  6024  002678  50F5               	movf	tablat,w,c
  6025  00267A  D005               	bra	u2370
  6026  00267C                     u2377:
  6027  00267C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6028  002680  CFF7 FFEA          	movff	tblptrh,fsr0h
  6029  002684  50EF               	movf	indf0,w,c
  6030  002686                     u2370:
  6031  002686  1807               	xorwf	strchr@chr^0,w,c
  6032  002688  A4D8               	btfss	status,2,c
  6033  00268A  EF49  F013         	goto	u2381
  6034  00268E  EF4B  F013         	goto	u2380
  6035  002692                     u2381:
  6036  002692  EF51  F013         	goto	l3798
  6037  002696                     u2380:
  6038  002696  C005  F005         	movff	strchr@ptr,?_strchr
  6039  00269A  C006  F006         	movff	strchr@ptr+1,?_strchr+1
  6040  00269E  EF73  F013         	goto	l1544
  6041  0026A2                     l3798:
  6042  0026A2  5005               	movf	strchr@ptr^0,w,c
  6043  0026A4  6E09               	movwf	??_strchr^0,c
  6044  0026A6  5006               	movf	(strchr@ptr+1)^0,w,c
  6045  0026A8  6E0A               	movwf	(??_strchr+1)^0,c
  6046  0026AA  4A05               	infsnz	strchr@ptr^0,f,c
  6047  0026AC  2A06               	incf	(strchr@ptr+1)^0,f,c
  6048  0026AE  C009  FFF6         	movff	??_strchr,tblptrl
  6049  0026B2  C00A  FFF7         	movff	??_strchr+1,tblptrh
  6050  0026B6  6AF8               	clrf	tblptru,c
  6051  0026B8  0E07               	movlw	(high __ramtop+-1)
  6052  0026BA  64F7               	cpfsgt	tblptrh,c
  6053  0026BC  D003               	bra	u2397
  6054  0026BE  0008               	tblrd		*
  6055  0026C0  50F5               	movf	tablat,w,c
  6056  0026C2  D005               	bra	u2390
  6057  0026C4                     u2397:
  6058  0026C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  6059  0026C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  6060  0026CC  50EF               	movf	indf0,w,c
  6061  0026CE                     u2390:
  6062  0026CE  0900               	iorlw	0
  6063  0026D0  A4D8               	btfss	status,2,c
  6064  0026D2  EF6D  F013         	goto	u2401
  6065  0026D6  EF6F  F013         	goto	u2400
  6066  0026DA                     u2401:
  6067  0026DA  EF33  F013         	goto	l1542
  6068  0026DE                     u2400:
  6069  0026DE  0E00               	movlw	0
  6070  0026E0  6E05               	movwf	?_strchr^0,c
  6071  0026E2  0E00               	movlw	0
  6072  0026E4  6E06               	movwf	(?_strchr+1)^0,c
  6073  0026E6                     l1544:
  6074  0026E6  0012               	return		;funcret
  6075  0026E8                     __end_of_strchr:
  6076                           	opt callstack 0
  6077                           
  6078 ;; *************** function _atol *****************
  6079 ;; Defined at:
  6080 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atol.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  s               2   16[COMRAM] PTR const unsigned char 
  6083 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), NULL(0), A6_BaudRateGet@response(32), 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;  a               4   25[COMRAM] long 
  6086 ;;  c               1   29[COMRAM] unsigned char 
  6087 ;;  sign            1   24[COMRAM] unsigned char 
  6088 ;; Return value:  Size  Location     Type
  6089 ;;                  4   16[COMRAM] long 
  6090 ;; Registers used:
  6091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 0/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6097 ;;      Params:         4       0       0       0       0       0       0       0       0
  6098 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6099 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6100 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6101 ;;Total ram usage:       14 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    3
  6104 ;; This function calls:
  6105 ;;		___lmul
  6106 ;;		_isdigit
  6107 ;; This function is called by:
  6108 ;;		_A6_BaudRateGet
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text16
  6113  0014F0                     __ptext16:
  6114                           	opt callstack 0
  6115  0014F0                     _atol:
  6116                           	opt callstack 24
  6117  0014F0                     l1476:
  6118  0014F0  C011  FFD9         	movff	atol@s,fsr2l
  6119  0014F4  C012  FFDA         	movff	atol@s+1,fsr2h
  6120  0014F8  50DF               	movf	indf2,w,c
  6121  0014FA  6E1E               	movwf	atol@c^0,c
  6122  0014FC  4A11               	infsnz	atol@s^0,f,c
  6123  0014FE  2A12               	incf	(atol@s+1)^0,f,c
  6124  001500  0E20               	movlw	32
  6125  001502  181E               	xorwf	atol@c^0,w,c
  6126  001504  B4D8               	btfsc	status,2,c
  6127  001506  EF87  F00A         	goto	u2871
  6128  00150A  EF89  F00A         	goto	u2870
  6129  00150E                     u2871:
  6130  00150E  EF78  F00A         	goto	l1476
  6131  001512                     u2870:
  6132  001512  0E09               	movlw	9
  6133  001514  181E               	xorwf	atol@c^0,w,c
  6134  001516  B4D8               	btfsc	status,2,c
  6135  001518  EF90  F00A         	goto	u2881
  6136  00151C  EF92  F00A         	goto	u2880
  6137  001520                     u2881:
  6138  001520  EF78  F00A         	goto	l1476
  6139  001524                     u2880:
  6140  001524  0E00               	movlw	0
  6141  001526  6E1A               	movwf	atol@a^0,c
  6142  001528  0E00               	movlw	0
  6143  00152A  6E1B               	movwf	(atol@a+1)^0,c
  6144  00152C  0E00               	movlw	0
  6145  00152E  6E1C               	movwf	(atol@a+2)^0,c
  6146  001530  0E00               	movlw	0
  6147  001532  6E1D               	movwf	(atol@a+3)^0,c
  6148  001534  0E00               	movlw	0
  6149  001536  6E19               	movwf	atol@sign^0,c
  6150  001538  0E2D               	movlw	45
  6151  00153A  181E               	xorwf	atol@c^0,w,c
  6152  00153C  A4D8               	btfss	status,2,c
  6153  00153E  EFA3  F00A         	goto	u2891
  6154  001542  EFA5  F00A         	goto	u2890
  6155  001546                     u2891:
  6156  001546  EFB0  F00A         	goto	l4060
  6157  00154A                     u2890:
  6158  00154A  2A19               	incf	atol@sign^0,f,c
  6159  00154C                     l4056:
  6160  00154C  C011  FFD9         	movff	atol@s,fsr2l
  6161  001550  C012  FFDA         	movff	atol@s+1,fsr2h
  6162  001554  50DF               	movf	indf2,w,c
  6163  001556  6E1E               	movwf	atol@c^0,c
  6164  001558  4A11               	infsnz	atol@s^0,f,c
  6165  00155A  2A12               	incf	(atol@s+1)^0,f,c
  6166  00155C  EFDF  F00A         	goto	l4072
  6167  001560                     l4060:
  6168  001560  0E2B               	movlw	43
  6169  001562  181E               	xorwf	atol@c^0,w,c
  6170  001564  A4D8               	btfss	status,2,c
  6171  001566  EFB7  F00A         	goto	u2901
  6172  00156A  EFB9  F00A         	goto	u2900
  6173  00156E                     u2901:
  6174  00156E  EFDF  F00A         	goto	l4072
  6175  001572                     u2900:
  6176  001572  EFA6  F00A         	goto	l4056
  6177  001576                     l4066:
  6178  001576  C01A  F005         	movff	atol@a,___lmul@multiplier
  6179  00157A  C01B  F006         	movff	atol@a+1,___lmul@multiplier+1
  6180  00157E  C01C  F007         	movff	atol@a+2,___lmul@multiplier+2
  6181  001582  C01D  F008         	movff	atol@a+3,___lmul@multiplier+3
  6182  001586  0E0A               	movlw	10
  6183  001588  6E09               	movwf	___lmul@multiplicand^0,c
  6184  00158A  0E00               	movlw	0
  6185  00158C  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
  6186  00158E  0E00               	movlw	0
  6187  001590  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
  6188  001592  0E00               	movlw	0
  6189  001594  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
  6190  001596  ECD5  F014         	call	___lmul	;wreg free
  6191  00159A  C01E  F015         	movff	atol@c,??_atol
  6192  00159E  0ED0               	movlw	208
  6193  0015A0  2615               	addwf	??_atol^0,f,c
  6194  0015A2  5015               	movf	??_atol^0,w,c
  6195  0015A4  2405               	addwf	?___lmul^0,w,c
  6196  0015A6  6E1A               	movwf	atol@a^0,c
  6197  0015A8  0E00               	movlw	0
  6198  0015AA  2006               	addwfc	(?___lmul+1)^0,w,c
  6199  0015AC  6E1B               	movwf	(atol@a+1)^0,c
  6200  0015AE  0E00               	movlw	0
  6201  0015B0  2007               	addwfc	(?___lmul+2)^0,w,c
  6202  0015B2  6E1C               	movwf	(atol@a+2)^0,c
  6203  0015B4  0E00               	movlw	0
  6204  0015B6  2008               	addwfc	(?___lmul+3)^0,w,c
  6205  0015B8  6E1D               	movwf	(atol@a+3)^0,c
  6206  0015BA  EFA6  F00A         	goto	l4056
  6207  0015BE                     l4072:
  6208  0015BE  501E               	movf	atol@c^0,w,c
  6209  0015C0  ECC2  F017         	call	_isdigit
  6210  0015C4  B0D8               	btfsc	status,0,c
  6211  0015C6  EFE7  F00A         	goto	u2911
  6212  0015CA  EFE9  F00A         	goto	u2910
  6213  0015CE                     u2911:
  6214  0015CE  EFBB  F00A         	goto	l4066
  6215  0015D2                     u2910:
  6216  0015D2  5019               	movf	atol@sign^0,w,c
  6217  0015D4  B4D8               	btfsc	status,2,c
  6218  0015D6  EFEF  F00A         	goto	u2921
  6219  0015DA  EFF1  F00A         	goto	u2920
  6220  0015DE                     u2921:
  6221  0015DE  EF0C  F00B         	goto	l1484
  6222  0015E2                     u2920:
  6223  0015E2  C01A  F015         	movff	atol@a,??_atol
  6224  0015E6  C01B  F016         	movff	atol@a+1,??_atol+1
  6225  0015EA  C01C  F017         	movff	atol@a+2,??_atol+2
  6226  0015EE  C01D  F018         	movff	atol@a+3,??_atol+3
  6227  0015F2  1E15               	comf	??_atol^0,f,c
  6228  0015F4  1E16               	comf	(??_atol+1)^0,f,c
  6229  0015F6  1E17               	comf	(??_atol+2)^0,f,c
  6230  0015F8  1E18               	comf	(??_atol+3)^0,f,c
  6231  0015FA  2A15               	incf	??_atol^0,f,c
  6232  0015FC  0E00               	movlw	0
  6233  0015FE  2216               	addwfc	(??_atol+1)^0,f,c
  6234  001600  2217               	addwfc	(??_atol+2)^0,f,c
  6235  001602  2218               	addwfc	(??_atol+3)^0,f,c
  6236  001604  C015  F011         	movff	??_atol,?_atol
  6237  001608  C016  F012         	movff	??_atol+1,?_atol+1
  6238  00160C  C017  F013         	movff	??_atol+2,?_atol+2
  6239  001610  C018  F014         	movff	??_atol+3,?_atol+3
  6240  001614  EF14  F00B         	goto	l1485
  6241  001618                     l1484:
  6242  001618  C01A  F011         	movff	atol@a,?_atol
  6243  00161C  C01B  F012         	movff	atol@a+1,?_atol+1
  6244  001620  C01C  F013         	movff	atol@a+2,?_atol+2
  6245  001624  C01D  F014         	movff	atol@a+3,?_atol+3
  6246  001628                     l1485:
  6247  001628  0012               	return		;funcret
  6248  00162A                     __end_of_atol:
  6249                           	opt callstack 0
  6250                           
  6251 ;; *************** function ___lmul *****************
  6252 ;; Defined at:
  6253 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  multiplier      4    4[COMRAM] unsigned long 
  6256 ;;  multiplicand    4    8[COMRAM] unsigned long 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  product         4   12[COMRAM] unsigned long 
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  4    4[COMRAM] unsigned long 
  6261 ;; Registers used:
  6262 ;;		wreg, status,2, status,0
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6268 ;;      Params:         8       0       0       0       0       0       0       0       0
  6269 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6271 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6272 ;;Total ram usage:       12 bytes
  6273 ;; Hardware stack levels used:    1
  6274 ;; Hardware stack levels required when called:    2
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_atol
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text17
  6283  0029AA                     __ptext17:
  6284                           	opt callstack 0
  6285  0029AA                     ___lmul:
  6286                           	opt callstack 24
  6287  0029AA  0E00               	movlw	0
  6288  0029AC  6E0D               	movwf	___lmul@product^0,c
  6289  0029AE  0E00               	movlw	0
  6290  0029B0  6E0E               	movwf	(___lmul@product+1)^0,c
  6291  0029B2  0E00               	movlw	0
  6292  0029B4  6E0F               	movwf	(___lmul@product+2)^0,c
  6293  0029B6  0E00               	movlw	0
  6294  0029B8  6E10               	movwf	(___lmul@product+3)^0,c
  6295  0029BA                     l3920:
  6296  0029BA  A005               	btfss	___lmul@multiplier^0,0,c
  6297  0029BC  EFE2  F014         	goto	u2621
  6298  0029C0  EFE4  F014         	goto	u2620
  6299  0029C4                     u2621:
  6300  0029C4  EFEC  F014         	goto	l3924
  6301  0029C8                     u2620:
  6302  0029C8  5009               	movf	___lmul@multiplicand^0,w,c
  6303  0029CA  260D               	addwf	___lmul@product^0,f,c
  6304  0029CC  500A               	movf	(___lmul@multiplicand+1)^0,w,c
  6305  0029CE  220E               	addwfc	(___lmul@product+1)^0,f,c
  6306  0029D0  500B               	movf	(___lmul@multiplicand+2)^0,w,c
  6307  0029D2  220F               	addwfc	(___lmul@product+2)^0,f,c
  6308  0029D4  500C               	movf	(___lmul@multiplicand+3)^0,w,c
  6309  0029D6  2210               	addwfc	(___lmul@product+3)^0,f,c
  6310  0029D8                     l3924:
  6311  0029D8  90D8               	bcf	status,0,c
  6312  0029DA  3609               	rlcf	___lmul@multiplicand^0,f,c
  6313  0029DC  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6314  0029DE  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6315  0029E0  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6316  0029E2  90D8               	bcf	status,0,c
  6317  0029E4  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
  6318  0029E6  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
  6319  0029E8  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
  6320  0029EA  3205               	rrcf	___lmul@multiplier^0,f,c
  6321  0029EC  5005               	movf	___lmul@multiplier^0,w,c
  6322  0029EE  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
  6323  0029F0  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
  6324  0029F2  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
  6325  0029F4  A4D8               	btfss	status,2,c
  6326  0029F6  EFFF  F014         	goto	u2631
  6327  0029FA  EF01  F015         	goto	u2630
  6328  0029FE                     u2631:
  6329  0029FE  EFDD  F014         	goto	l3920
  6330  002A02                     u2630:
  6331  002A02  C00D  F005         	movff	___lmul@product,?___lmul
  6332  002A06  C00E  F006         	movff	___lmul@product+1,?___lmul+1
  6333  002A0A  C00F  F007         	movff	___lmul@product+2,?___lmul+2
  6334  002A0E  C010  F008         	movff	___lmul@product+3,?___lmul+3
  6335  002A12  0012               	return		;funcret
  6336  002A14                     __end_of___lmul:
  6337                           	opt callstack 0
  6338                           
  6339 ;; *************** function _init *****************
  6340 ;; Defined at:
  6341 ;;		line 15 in file "init.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		wreg, status,2
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6355 ;;      Params:         0       0       0       0       0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6357 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6358 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6359 ;;Total ram usage:        2 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    2
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		_main
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text18
  6370  00285A                     __ptext18:
  6371                           	opt callstack 0
  6372  00285A                     _init:
  6373                           	opt callstack 28
  6374  00285A                     
  6375                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  6376  00285A  9ED3               	bcf	211,7,c	;volatile
  6377  00285C                     
  6378                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  6379  00285C  0E70               	movlw	112
  6380  00285E  12D3               	iorwf	211,f,c	;volatile
  6381                           
  6382                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  6383  002860  0EFC               	movlw	-4
  6384  002862  16D3               	andwf	211,f,c	;volatile
  6385  002864                     
  6386                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  6387  002864  8E9B               	bsf	155,7,c	;volatile
  6388                           
  6389                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  6390  002866  0EE0               	movlw	-32
  6391  002868  169B               	andwf	155,f,c	;volatile
  6392  00286A                     
  6393                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  6394  00286A  0E07               	movlw	7
  6395  00286C  6E06               	movwf	(??_init+1)^0,c
  6396  00286E  0E17               	movlw	23
  6397  002870  6E05               	movwf	??_init^0,c
  6398  002872  0E6A               	movlw	106
  6399  002874                     u5427:
  6400  002874  2EE8               	decfsz	wreg,f,c
  6401  002876  D7FE               	bra	u5427
  6402  002878  2E05               	decfsz	??_init^0,f,c
  6403  00287A  D7FC               	bra	u5427
  6404  00287C  2E06               	decfsz	(??_init+1)^0,f,c
  6405  00287E  D7FA               	bra	u5427
  6406  002880  D000               	nop2	
  6407  002882                     
  6408                           ;init.c: 27: UCONbits.USBEN = 0;
  6409  002882  966D               	bcf	109,3,c	;volatile
  6410  002884                     
  6411                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  6412  002884  866F               	bsf	111,3,c	;volatile
  6413  002886                     
  6414                           ;init.c: 41: TRISA = 0b00001011;
  6415  002886  0E0B               	movlw	11
  6416  002888  6E92               	movwf	146,c	;volatile
  6417  00288A                     
  6418                           ;init.c: 42: LATA = 0x00;
  6419  00288A  0E00               	movlw	0
  6420  00288C  6E89               	movwf	137,c	;volatile
  6421  00288E                     
  6422                           ;init.c: 48: RBPU = 1;
  6423  00288E  8EF1               	bsf	4081,7,c	;volatile
  6424  002890                     
  6425                           ;init.c: 49: TRISB = 0x00;
  6426  002890  0E00               	movlw	0
  6427  002892  6E93               	movwf	147,c	;volatile
  6428  002894                     
  6429                           ;init.c: 50: LATB = 0x00;
  6430  002894  0E00               	movlw	0
  6431  002896  6E8A               	movwf	138,c	;volatile
  6432  002898                     
  6433                           ;init.c: 63: TRISC = 0b11110000;
  6434  002898  0EF0               	movlw	240
  6435  00289A  6E94               	movwf	148,c	;volatile
  6436  00289C                     
  6437                           ;init.c: 64: LATC = 0x00;
  6438  00289C  0E00               	movlw	0
  6439  00289E  6E8B               	movwf	139,c	;volatile
  6440  0028A0                     
  6441                           ;init.c: 67: ADCON0bits.ADON = 0;
  6442  0028A0  90C2               	bcf	194,0,c	;volatile
  6443  0028A2                     
  6444                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  6445  0028A2  0ECF               	movlw	-49
  6446  0028A4  16C1               	andwf	193,f,c	;volatile
  6447  0028A6                     
  6448                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  6449  0028A6  50C1               	movf	193,w,c	;volatile
  6450  0028A8  0BF0               	andlw	-16
  6451  0028AA  090E               	iorlw	14
  6452  0028AC  6EC1               	movwf	193,c	;volatile
  6453  0028AE                     
  6454                           ;init.c: 70: ADCON2bits.ADFM = 1;
  6455  0028AE  8EC0               	bsf	192,7,c	;volatile
  6456  0028B0                     
  6457                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  6458  0028B0  0EC7               	movlw	-57
  6459  0028B2  16C0               	andwf	192,f,c	;volatile
  6460  0028B4                     
  6461                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  6462  0028B4  50C0               	movf	192,w,c	;volatile
  6463  0028B6  0BF8               	andlw	-8
  6464  0028B8  0902               	iorlw	2
  6465  0028BA  6EC0               	movwf	192,c	;volatile
  6466  0028BC                     
  6467                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  6468  0028BC  0ECF               	movlw	-49
  6469  0028BE  16B1               	andwf	177,f,c	;volatile
  6470  0028C0                     
  6471                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  6472  0028C0  92B1               	bcf	177,1,c	;volatile
  6473  0028C2                     
  6474                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  6475  0028C2  80B1               	bsf	177,0,c	;volatile
  6476  0028C4                     
  6477                           ;init.c: 78: TMR3IE = 1;
  6478  0028C4  82A0               	bsf	4000,1,c	;volatile
  6479  0028C6                     
  6480                           ;init.c: 81: PEIE = 1;
  6481  0028C6  8CF2               	bsf	4082,6,c	;volatile
  6482  0028C8                     
  6483                           ;init.c: 82: GIE = 1;
  6484  0028C8  8EF2               	bsf	4082,7,c	;volatile
  6485  0028CA  0012               	return		;funcret
  6486  0028CC                     __end_of_init:
  6487                           	opt callstack 0
  6488                           
  6489 ;; *************** function _TFT_Init *****************
  6490 ;; Defined at:
  6491 ;;		line 46 in file "TFT.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  orientation     1    wreg     unsigned char 
  6494 ;;  color           2   32[COMRAM] unsigned int 
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;  orientation     1   36[COMRAM] unsigned char 
  6497 ;;  i               2   43[COMRAM] unsigned int 
  6498 ;;  cmd             2   41[COMRAM] unsigned int 
  6499 ;;  initSequence    2   39[COMRAM] unsigned int 
  6500 ;;  data            2   37[COMRAM] unsigned int 
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1    wreg      void 
  6503 ;; Registers used:
  6504 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6505 ;; Tracked objects:
  6506 ;;		On entry : 0/0
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6510 ;;      Params:         2       0       0       0       0       0       0       0       0
  6511 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6512 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6513 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6514 ;;Total ram usage:       13 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:    6
  6517 ;; This function calls:
  6518 ;;		_TFT_OrientationSet
  6519 ;;		_TFT_Reset
  6520 ;;		_TFT_WriteRegister
  6521 ;; This function is called by:
  6522 ;;		_main
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text19
  6527  001B50                     __ptext19:
  6528                           	opt callstack 0
  6529  001B50                     _TFT_Init:
  6530                           	opt callstack 24
  6531                           
  6532                           ;incstack = 0
  6533                           ;TFT_Init@orientation stored from wreg
  6534  001B50  6E25               	movwf	TFT_Init@orientation^0,c
  6535  001B52                     
  6536                           ;TFT.c: 47: TFT_Reset();
  6537  001B52  EC42  F018         	call	_TFT_Reset	;wreg free
  6538  001B56                     
  6539                           ;TFT.c: 48: _delay((unsigned long)((200)*(48000000/4000.0)));
  6540  001B56  0E0D               	movlw	13
  6541  001B58  6E24               	movwf	(??_TFT_Init+1)^0,c
  6542  001B5A  0E2D               	movlw	45
  6543  001B5C  6E23               	movwf	??_TFT_Init^0,c
  6544  001B5E  0ED8               	movlw	216
  6545  001B60                     u5437:
  6546  001B60  2EE8               	decfsz	wreg,f,c
  6547  001B62  D7FE               	bra	u5437
  6548  001B64  2E23               	decfsz	??_TFT_Init^0,f,c
  6549  001B66  D7FC               	bra	u5437
  6550  001B68  2E24               	decfsz	(??_TFT_Init+1)^0,f,c
  6551  001B6A  D7FA               	bra	u5437
  6552  001B6C                     
  6553                           ;TFT.c: 51: uint16_t i=0, cmd, data;
  6554  001B6C  0E00               	movlw	0
  6555  001B6E  6E2D               	movwf	(TFT_Init@i+1)^0,c
  6556  001B70  0E00               	movlw	0
  6557  001B72  6E2C               	movwf	TFT_Init@i^0,c
  6558  001B74                     
  6559                           ;TFT.c: 52: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  6560  001B74  0E00               	movlw	0
  6561  001B76  6E29               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  6562  001B78  0E66               	movlw	102
  6563  001B7A  6E28               	movwf	TFT_Init@initSequenceSize^0,c
  6564                           
  6565                           ;TFT.c: 53: while(i != initSequenceSize) {
  6566  001B7C  EF03  F00E         	goto	l5898
  6567  001B80                     l5886:
  6568                           
  6569                           ;TFT.c: 54: cmd = TFT_Init_Sequence[i++];
  6570  001B80  90D8               	bcf	status,0,c
  6571  001B82  342C               	rlcf	TFT_Init@i^0,w,c
  6572  001B84  6EF6               	movwf	tblptrl,c
  6573  001B86  342D               	rlcf	(TFT_Init@i+1)^0,w,c
  6574  001B88  6EF7               	movwf	tblptrh,c
  6575  001B8A  0EF1               	movlw	low _TFT_Init_Sequence
  6576  001B8C  26F6               	addwf	tblptrl,f,c
  6577  001B8E  0E5C               	movlw	high _TFT_Init_Sequence
  6578  001B90  22F7               	addwfc	tblptrh,f,c
  6579  001B92                     	if	0	;There are less than 3 active tblptr bytes
  6580  001B92                     	endif
  6581  001B92  0009               	tblrd		*+
  6582  001B94  CFF5 F02A          	movff	tablat,TFT_Init@cmd
  6583  001B98  000A               	tblrd		*-
  6584  001B9A  CFF5 F02B          	movff	tablat,TFT_Init@cmd+1
  6585  001B9E  4A2C               	infsnz	TFT_Init@i^0,f,c
  6586  001BA0  2A2D               	incf	(TFT_Init@i+1)^0,f,c
  6587  001BA2                     
  6588                           ;TFT.c: 55: data = TFT_Init_Sequence[i++];
  6589  001BA2  90D8               	bcf	status,0,c
  6590  001BA4  342C               	rlcf	TFT_Init@i^0,w,c
  6591  001BA6  6EF6               	movwf	tblptrl,c
  6592  001BA8  342D               	rlcf	(TFT_Init@i+1)^0,w,c
  6593  001BAA  6EF7               	movwf	tblptrh,c
  6594  001BAC  0EF1               	movlw	low _TFT_Init_Sequence
  6595  001BAE  26F6               	addwf	tblptrl,f,c
  6596  001BB0  0E5C               	movlw	high _TFT_Init_Sequence
  6597  001BB2  22F7               	addwfc	tblptrh,f,c
  6598  001BB4                     	if	0	;There are less than 3 active tblptr bytes
  6599  001BB4                     	endif
  6600  001BB4  0009               	tblrd		*+
  6601  001BB6  CFF5 F026          	movff	tablat,TFT_Init@data
  6602  001BBA  000A               	tblrd		*-
  6603  001BBC  CFF5 F027          	movff	tablat,TFT_Init@data+1
  6604  001BC0  4A2C               	infsnz	TFT_Init@i^0,f,c
  6605  001BC2  2A2D               	incf	(TFT_Init@i+1)^0,f,c
  6606  001BC4                     
  6607                           ;TFT.c: 56: if(cmd == 0xFFFF) {
  6608  001BC4  282A               	incf	TFT_Init@cmd^0,w,c
  6609  001BC6  E106               	bnz	u4991
  6610  001BC8  282B               	incf	(TFT_Init@cmd+1)^0,w,c
  6611  001BCA  A4D8               	btfss	status,2,c
  6612  001BCC  EFEA  F00D         	goto	u4991
  6613  001BD0  EFEC  F00D         	goto	u4990
  6614  001BD4                     u4991:
  6615  001BD4  EFF9  F00D         	goto	l5896
  6616  001BD8                     u4990:
  6617  001BD8                     
  6618                           ;TFT.c: 57: _delay((unsigned long)((200)*(48000000/4000.0)));
  6619  001BD8  0E0D               	movlw	13
  6620  001BDA  6E24               	movwf	(??_TFT_Init+1)^0,c
  6621  001BDC  0E2D               	movlw	45
  6622  001BDE  6E23               	movwf	??_TFT_Init^0,c
  6623  001BE0  0ED8               	movlw	216
  6624  001BE2                     u5447:
  6625  001BE2  2EE8               	decfsz	wreg,f,c
  6626  001BE4  D7FE               	bra	u5447
  6627  001BE6  2E23               	decfsz	??_TFT_Init^0,f,c
  6628  001BE8  D7FC               	bra	u5447
  6629  001BEA  2E24               	decfsz	(??_TFT_Init+1)^0,f,c
  6630  001BEC  D7FA               	bra	u5447
  6631                           
  6632                           ;TFT.c: 58: } else {
  6633  001BEE  EF03  F00E         	goto	l5898
  6634  001BF2                     l5896:
  6635                           
  6636                           ;TFT.c: 59: TFT_WriteRegister(cmd, data);
  6637  001BF2  C02A  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  6638  001BF6  C02B  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  6639  001BFA  C026  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  6640  001BFE  C027  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  6641  001C02  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
  6642  001C06                     l5898:
  6643  001C06  5028               	movf	TFT_Init@initSequenceSize^0,w,c
  6644  001C08  182C               	xorwf	TFT_Init@i^0,w,c
  6645  001C0A  E107               	bnz	u5001
  6646  001C0C  5029               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  6647  001C0E  182D               	xorwf	(TFT_Init@i+1)^0,w,c
  6648  001C10  A4D8               	btfss	status,2,c
  6649  001C12  EF0D  F00E         	goto	u5001
  6650  001C16  EF0F  F00E         	goto	u5000
  6651  001C1A                     u5001:
  6652  001C1A  EFC0  F00D         	goto	l5886
  6653  001C1E                     u5000:
  6654  001C1E                     
  6655                           ;TFT.c: 60: };TFT.c: 61: };TFT.c: 64: TFT_OrientationSet(orientation, color);
  6656  001C1E  C021  F01E         	movff	TFT_Init@color,TFT_OrientationSet@color
  6657  001C22  C022  F01F         	movff	TFT_Init@color+1,TFT_OrientationSet@color+1
  6658  001C26  5025               	movf	TFT_Init@orientation^0,w,c
  6659  001C28  EC0B  F018         	call	_TFT_OrientationSet
  6660  001C2C  0012               	return		;funcret
  6661  001C2E                     __end_of_TFT_Init:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function _TFT_Reset *****************
  6665 ;; Defined at:
  6666 ;;		line 67 in file "TFT.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;		None
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;		None
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6680 ;;      Params:         0       0       0       0       0       0       0       0       0
  6681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6682 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6683 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6684 ;;Total ram usage:        1 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    2
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_TFT_Init
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694                           	psect	text20
  6695  003084                     __ptext20:
  6696                           	opt callstack 0
  6697  003084                     _TFT_Reset:
  6698                           	opt callstack 27
  6699  003084                     
  6700                           ;TFT.c: 68: TRISB = 0x00;;
  6701  003084  0E00               	movlw	0
  6702  003086  6E93               	movwf	147,c	;volatile
  6703  003088                     
  6704                           ;TFT.c: 69: PORTCbits.RC0 = 1;;
  6705  003088  8082               	bsf	130,0,c	;volatile
  6706  00308A                     
  6707                           ;TFT.c: 70: PORTAbits.RA5 = 1;;
  6708  00308A  8A80               	bsf	128,5,c	;volatile
  6709  00308C                     
  6710                           ;TFT.c: 71: PORTAbits.RA4 = 1;;
  6711  00308C  8880               	bsf	128,4,c	;volatile
  6712  00308E                     
  6713                           ;TFT.c: 72: PORTCbits.RC2 = 0;;
  6714  00308E  9482               	bcf	130,2,c	;volatile
  6715  003090                     
  6716                           ;TFT.c: 73: _delay((unsigned long)((2)*(48000000/4000.0)));
  6717  003090  0E20               	movlw	32
  6718  003092  6E05               	movwf	??_TFT_Reset^0,c
  6719  003094  0E2A               	movlw	42
  6720  003096                     u5457:
  6721  003096  2EE8               	decfsz	wreg,f,c
  6722  003098  D7FE               	bra	u5457
  6723  00309A  2E05               	decfsz	??_TFT_Reset^0,f,c
  6724  00309C  D7FC               	bra	u5457
  6725  00309E                     
  6726                           ;TFT.c: 74: PORTCbits.RC2 = 1;;
  6727  00309E  8482               	bsf	130,2,c	;volatile
  6728  0030A0  0012               	return		;funcret
  6729  0030A2                     __end_of_TFT_Reset:
  6730                           	opt callstack 0
  6731                           
  6732 ;; *************** function _TFT_OrientationSet *****************
  6733 ;; Defined at:
  6734 ;;		line 109 in file "TFT.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  orientation     1    wreg     unsigned char 
  6737 ;;  color           2   29[COMRAM] unsigned int 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  orientation     1   31[COMRAM] unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      void 
  6742 ;; Registers used:
  6743 ;;		wreg, status,2, status,0, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6749 ;;      Params:         2       0       0       0       0       0       0       0       0
  6750 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6752 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6753 ;;Total ram usage:        3 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:    5
  6756 ;; This function calls:
  6757 ;;		_TFT_FullScreen
  6758 ;; This function is called by:
  6759 ;;		_TFT_Init
  6760 ;;		_TFT_ConsoleInit
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text21
  6765  003016                     __ptext21:
  6766                           	opt callstack 0
  6767  003016                     _TFT_OrientationSet:
  6768                           	opt callstack 23
  6769                           
  6770                           ;incstack = 0
  6771                           ;TFT_OrientationSet@orientation stored from wreg
  6772  003016  6E20               	movwf	TFT_OrientationSet@orientation^0,c
  6773  003018                     
  6774                           ;TFT.c: 110: if(orientation > 3) orientation = 0;
  6775  003018  0E03               	movlw	3
  6776  00301A  6420               	cpfsgt	TFT_OrientationSet@orientation^0,c
  6777  00301C  EF12  F018         	goto	u4831
  6778  003020  EF14  F018         	goto	u4830
  6779  003024                     u4831:
  6780  003024  EF16  F018         	goto	l5734
  6781  003028                     u4830:
  6782  003028  0E00               	movlw	0
  6783  00302A  6E20               	movwf	TFT_OrientationSet@orientation^0,c
  6784  00302C                     l5734:
  6785                           
  6786                           ;TFT.c: 111: TFT_Orientation = orientation;
  6787  00302C  C020  F058         	movff	TFT_OrientationSet@orientation,_TFT_Orientation
  6788  003030                     
  6789                           ;TFT.c: 112: TFT_FullScreen(color);
  6790  003030  C01E  F01C         	movff	TFT_OrientationSet@color,TFT_FullScreen@color
  6791  003034  C01F  F01D         	movff	TFT_OrientationSet@color+1,TFT_FullScreen@color+1
  6792  003038  ECD2  F015         	call	_TFT_FullScreen	;wreg free
  6793  00303C  0012               	return		;funcret
  6794  00303E                     __end_of_TFT_OrientationSet:
  6795                           	opt callstack 0
  6796                           
  6797 ;; *************** function _Ecg_Init *****************
  6798 ;; Defined at:
  6799 ;;		line 12 in file "ecg.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;		None
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;		None
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6813 ;;      Params:         0       0       0       0       0       0       0       0       0
  6814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6816 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6817 ;;Total ram usage:        0 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; Hardware stack levels required when called:    9
  6820 ;; This function calls:
  6821 ;;		_Ecg_Background_Leads_Failure
  6822 ;;		_Ecg_Background_Leads_Ok
  6823 ;;		_Ecg_CheckLeads
  6824 ;; This function is called by:
  6825 ;;		_main
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text22
  6830  002FE6                     __ptext22:
  6831                           	opt callstack 0
  6832  002FE6                     _Ecg_Init:
  6833                           	opt callstack 21
  6834  002FE6                     
  6835                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  6836  002FE6  EC28  F016         	call	_Ecg_CheckLeads	;wreg free
  6837  002FEA  5005               	movf	?_Ecg_CheckLeads^0,w,c
  6838  002FEC  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  6839  002FEE  A4D8               	btfss	status,2,c
  6840  002FF0  EFFC  F017         	goto	u5011
  6841  002FF4  EFFE  F017         	goto	u5010
  6842  002FF8                     u5011:
  6843  002FF8  EF02  F018         	goto	l5906
  6844  002FFC                     u5010:
  6845  002FFC                     
  6846                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  6847  002FFC  ECF0  F013         	call	_Ecg_Background_Leads_Ok	;wreg free
  6848                           
  6849                           ;ecg.c: 15: } else {
  6850  003000  EF04  F018         	goto	l5908
  6851  003004                     l5906:
  6852                           
  6853                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  6854  003004  EC50  F017         	call	_Ecg_Background_Leads_Failure	;wreg free
  6855  003008                     l5908:
  6856                           
  6857                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  6858  003008  0E00               	movlw	0
  6859  00300A  0100               	movlb	0	; () banked
  6860  00300C  6FBC               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  6861  00300E                     
  6862                           ; BSR set to: 0
  6863                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  6864  00300E  0E00               	movlw	0
  6865  003010  6FC1               	movwf	(_ECG_BUFFER+4)& (0+255),b
  6866  003012                     
  6867                           ; BSR set to: 0
  6868                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  6869  003012  8DC2               	bsf	_ECG_HEARTRATE& (0+255),6,b
  6870  003014                     
  6871                           ; BSR set to: 0
  6872  003014  0012               	return		;funcret
  6873  003016                     __end_of_Ecg_Init:
  6874                           	opt callstack 0
  6875                           
  6876 ;; *************** function _Ecg_CheckLeads *****************
  6877 ;; Defined at:
  6878 ;;		line 141 in file "ecg.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  2    4[COMRAM] unsigned int 
  6885 ;; Registers used:
  6886 ;;		wreg, status,2, status,0
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6892 ;;      Params:         2       0       0       0       0       0       0       0       0
  6893 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6894 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6895 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6896 ;;Total ram usage:        4 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:    2
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_Ecg_Init
  6903 ;;		_Ecg_ProcessEcg
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text23
  6908  002C50                     __ptext23:
  6909                           	opt callstack 0
  6910  002C50                     _Ecg_CheckLeads:
  6911                           	opt callstack 27
  6912  002C50                     
  6913                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  6914  002C50  0E00               	movlw	0
  6915  002C52  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  6916  002C54                     
  6917                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  6918  002C54  AA82               	btfss	130,5,c	;volatile
  6919  002C56  EF2F  F016         	goto	u3551
  6920  002C5A  EF31  F016         	goto	u3550
  6921  002C5E                     u3551:
  6922  002C5E  EF32  F016         	goto	l4518
  6923  002C62                     u3550:
  6924  002C62  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  6925  002C64                     l4518:
  6926                           
  6927                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  6928  002C64  A882               	btfss	130,4,c	;volatile
  6929  002C66  EF37  F016         	goto	u3561
  6930  002C6A  EF39  F016         	goto	u3560
  6931  002C6E                     u3561:
  6932  002C6E  EF3A  F016         	goto	l4522
  6933  002C72                     u3560:
  6934  002C72  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  6935  002C74                     l4522:
  6936                           
  6937                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  6938  002C74  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  6939  002C76  B4D8               	btfsc	status,2,c
  6940  002C78  EF40  F016         	goto	u3571
  6941  002C7C  EF44  F016         	goto	u3570
  6942  002C80                     u3571:
  6943  002C80  6A07               	clrf	??_Ecg_CheckLeads^0,c
  6944  002C82  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  6945  002C84  EF45  F016         	goto	u3588
  6946  002C88                     u3570:
  6947  002C88  6A07               	clrf	??_Ecg_CheckLeads^0,c
  6948  002C8A                     u3588:
  6949  002C8A  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  6950  002C8C  5056               	movf	_ECG_FLAGS^0,w,c
  6951  002C8E  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  6952  002C90  0BFD               	andlw	-3
  6953  002C92  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  6954  002C94  6E56               	movwf	_ECG_FLAGS^0,c
  6955  002C96                     
  6956                           ;ecg.c: 146: return leadsStatus;
  6957  002C96  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  6958  002C9A  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  6959  002C9C  0012               	return		;funcret
  6960  002C9E                     __end_of_Ecg_CheckLeads:
  6961                           	opt callstack 0
  6962                           
  6963 ;; *************** function _Ecg_Background_Leads_Ok *****************
  6964 ;; Defined at:
  6965 ;;		line 180 in file "ecg.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;		None
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0
  6980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6982 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        0 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    8
  6986 ;; This function calls:
  6987 ;;		_TFT_DrawLine
  6988 ;;		_TFT_DrawString
  6989 ;;		_TFT_FullScreen
  6990 ;; This function is called by:
  6991 ;;		_Ecg_Init
  6992 ;;		_Ecg_ProcessEcg
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text24
  6997  0027E0                     __ptext24:
  6998                           	opt callstack 0
  6999  0027E0                     _Ecg_Background_Leads_Ok:
  7000                           	opt callstack 21
  7001  0027E0                     
  7002                           ;ecg.c: 181: TFT_FullScreen(0x0821);
  7003  0027E0  0E08               	movlw	8
  7004  0027E2  6E1D               	movwf	(TFT_FullScreen@color+1)^0,c
  7005  0027E4  0E21               	movlw	33
  7006  0027E6  6E1C               	movwf	TFT_FullScreen@color^0,c
  7007  0027E8  ECD2  F015         	call	_TFT_FullScreen	;wreg free
  7008  0027EC                     
  7009                           ;ecg.c: 182: TFT_DrawString(8, 390, "Frequenza:", 0xFFFF, 0x0821, 2);
  7010  0027EC  0E00               	movlw	0
  7011  0027EE  0100               	movlb	0	; () banked
  7012  0027F0  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  7013  0027F2  0E08               	movlw	8
  7014  0027F4  6F60               	movwf	TFT_DrawString@x& (0+255),b
  7015  0027F6  0E01               	movlw	1
  7016  0027F8  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  7017  0027FA  0E86               	movlw	134
  7018  0027FC  6F62               	movwf	TFT_DrawString@y& (0+255),b
  7019  0027FE  0E6F               	movlw	low STR_20
  7020  002800  6F64               	movwf	TFT_DrawString@str& (0+255),b
  7021  002802  0E5F               	movlw	high STR_20
  7022  002804  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  7023  002806  0EFF               	movlw	255
  7024  002808  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  7025  00280A  6966               	setf	TFT_DrawString@color& (0+255),b
  7026  00280C  0E08               	movlw	8
  7027  00280E  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  7028  002810  0E21               	movlw	33
  7029  002812  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  7030  002814  0E02               	movlw	2
  7031  002816  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  7032  002818  EC96  F011         	call	_TFT_DrawString	;wreg free
  7033  00281C                     
  7034                           ;ecg.c: 183: TFT_DrawLine((33 - 1), 0, (33 - 1), 400, 0xFFFF);
  7035  00281C  0E00               	movlw	0
  7036  00281E  6E18               	movwf	(TFT_DrawLine@x0+1)^0,c
  7037  002820  0E20               	movlw	32
  7038  002822  6E17               	movwf	TFT_DrawLine@x0^0,c
  7039  002824  0E00               	movlw	0
  7040  002826  6E1A               	movwf	(TFT_DrawLine@y0+1)^0,c
  7041  002828  0E00               	movlw	0
  7042  00282A  6E19               	movwf	TFT_DrawLine@y0^0,c
  7043  00282C  0E00               	movlw	0
  7044  00282E  6E1C               	movwf	(TFT_DrawLine@x1+1)^0,c
  7045  002830  0E20               	movlw	32
  7046  002832  6E1B               	movwf	TFT_DrawLine@x1^0,c
  7047  002834  0E01               	movlw	1
  7048  002836  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  7049  002838  0E90               	movlw	144
  7050  00283A  6E1D               	movwf	TFT_DrawLine@y1^0,c
  7051  00283C  0EFF               	movlw	255
  7052  00283E  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  7053  002840  681F               	setf	TFT_DrawLine@color^0,c
  7054  002842  ECC3  F008         	call	_TFT_DrawLine	;wreg free
  7055  002846                     
  7056                           ;ecg.c: 184: Ecg_Y = 400 - 1;
  7057  002846  0E01               	movlw	1
  7058  002848  6E5A               	movwf	(_Ecg_Y+1)^0,c
  7059  00284A  0E8F               	movlw	143
  7060  00284C  6E59               	movwf	_Ecg_Y^0,c
  7061  00284E                     
  7062                           ;ecg.c: 185: Ecg_Yold = 400 - 1;
  7063  00284E  0E01               	movlw	1
  7064  002850  0100               	movlb	0	; () banked
  7065  002852  6FCF               	movwf	(_Ecg_Yold+1)& (0+255),b
  7066  002854  0E8F               	movlw	143
  7067  002856  6FCE               	movwf	_Ecg_Yold& (0+255),b
  7068  002858                     
  7069                           ; BSR set to: 0
  7070  002858  0012               	return		;funcret
  7071  00285A                     __end_of_Ecg_Background_Leads_Ok:
  7072                           	opt callstack 0
  7073                           
  7074 ;; *************** function _Ecg_Background_Leads_Failure *****************
  7075 ;; Defined at:
  7076 ;;		line 188 in file "ecg.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7090 ;;      Params:         0       0       0       0       0       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7093 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7094 ;;Total ram usage:        0 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    8
  7097 ;; This function calls:
  7098 ;;		_TFT_DrawString
  7099 ;;		_TFT_FullScreen
  7100 ;; This function is called by:
  7101 ;;		_Ecg_Init
  7102 ;;		_Ecg_ProcessEcg
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text25
  7107  002EA0                     __ptext25:
  7108                           	opt callstack 0
  7109  002EA0                     _Ecg_Background_Leads_Failure:
  7110                           	opt callstack 21
  7111  002EA0                     
  7112                           ;ecg.c: 189: TFT_FullScreen(0x0821);
  7113  002EA0  0E08               	movlw	8
  7114  002EA2  6E1D               	movwf	(TFT_FullScreen@color+1)^0,c
  7115  002EA4  0E21               	movlw	33
  7116  002EA6  6E1C               	movwf	TFT_FullScreen@color^0,c
  7117  002EA8  ECD2  F015         	call	_TFT_FullScreen	;wreg free
  7118  002EAC                     
  7119                           ;ecg.c: 190: TFT_DrawString(70, 362, "*** Collegare elettrodi ***", 0xFFFF, 0x0821, 2);
  7120  002EAC  0E00               	movlw	0
  7121  002EAE  0100               	movlb	0	; () banked
  7122  002EB0  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  7123  002EB2  0E46               	movlw	70
  7124  002EB4  6F60               	movwf	TFT_DrawString@x& (0+255),b
  7125  002EB6  0E01               	movlw	1
  7126  002EB8  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  7127  002EBA  0E6A               	movlw	106
  7128  002EBC  6F62               	movwf	TFT_DrawString@y& (0+255),b
  7129  002EBE  0E4F               	movlw	low STR_21
  7130  002EC0  6F64               	movwf	TFT_DrawString@str& (0+255),b
  7131  002EC2  0E5E               	movlw	high STR_21
  7132  002EC4  6F65               	movwf	(TFT_DrawString@str+1)& (0+255),b
  7133  002EC6  0EFF               	movlw	255
  7134  002EC8  6F67               	movwf	(TFT_DrawString@color+1)& (0+255),b
  7135  002ECA  6966               	setf	TFT_DrawString@color& (0+255),b
  7136  002ECC  0E08               	movlw	8
  7137  002ECE  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  7138  002ED0  0E21               	movlw	33
  7139  002ED2  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  7140  002ED4  0E02               	movlw	2
  7141  002ED6  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  7142  002ED8  EC96  F011         	call	_TFT_DrawString	;wreg free
  7143  002EDC  0012               	return		;funcret
  7144  002EDE                     __end_of_Ecg_Background_Leads_Failure:
  7145                           	opt callstack 0
  7146                           
  7147 ;; *************** function _EUSART_Init *****************
  7148 ;; Defined at:
  7149 ;;		line 12 in file "EUSART.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7166 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7167 ;;Total ram usage:        0 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:    3
  7170 ;; This function calls:
  7171 ;;		_memset
  7172 ;; This function is called by:
  7173 ;;		_main
  7174 ;; This function uses a non-reentrant model
  7175 ;;
  7176                           
  7177                           	psect	text26
  7178  002DD4                     __ptext26:
  7179                           	opt callstack 0
  7180  002DD4                     _EUSART_Init:
  7181                           	opt callstack 27
  7182  002DD4                     
  7183                           ;EUSART.c: 14: TXSTAbits.TX9 = 0;
  7184  002DD4  9CAC               	bcf	172,6,c	;volatile
  7185                           
  7186                           ;EUSART.c: 15: TXSTAbits.TXEN = 1;
  7187  002DD6  8AAC               	bsf	172,5,c	;volatile
  7188                           
  7189                           ;EUSART.c: 16: TXSTAbits.SYNC = 0;
  7190  002DD8  98AC               	bcf	172,4,c	;volatile
  7191                           
  7192                           ;EUSART.c: 17: TXSTAbits.SENDB = 0;
  7193  002DDA  96AC               	bcf	172,3,c	;volatile
  7194                           
  7195                           ;EUSART.c: 18: TXSTAbits.BRGH = 1;
  7196  002DDC  84AC               	bsf	172,2,c	;volatile
  7197                           
  7198                           ;EUSART.c: 21: RCSTAbits.SPEN = 1;
  7199  002DDE  8EAB               	bsf	171,7,c	;volatile
  7200                           
  7201                           ;EUSART.c: 22: RCSTAbits.RX9 = 0;
  7202  002DE0  9CAB               	bcf	171,6,c	;volatile
  7203                           
  7204                           ;EUSART.c: 23: RCSTAbits.CREN = 1;
  7205  002DE2  88AB               	bsf	171,4,c	;volatile
  7206                           
  7207                           ;EUSART.c: 26: BAUDCONbits.BRG16 = 1;
  7208  002DE4  86B8               	bsf	184,3,c	;volatile
  7209                           
  7210                           ;EUSART.c: 27: BAUDCONbits.WUE = 0;
  7211  002DE6  92B8               	bcf	184,1,c	;volatile
  7212                           
  7213                           ;EUSART.c: 28: BAUDCONbits.ABDEN = 0;
  7214  002DE8  90B8               	bcf	184,0,c	;volatile
  7215  002DEA                     
  7216                           ;EUSART.c: 29: SPBRGH = 0x04;
  7217  002DEA  0E04               	movlw	4
  7218  002DEC  6EB0               	movwf	176,c	;volatile
  7219                           
  7220                           ;EUSART.c: 30: SPBRG = 0xE1;
  7221  002DEE  0EE1               	movlw	225
  7222  002DF0  6EAF               	movwf	175,c	;volatile
  7223  002DF2                     
  7224                           ;EUSART.c: 33: RCIE = 1;
  7225  002DF2  8A9D               	bsf	3997,5,c	;volatile
  7226                           
  7227                           ;EUSART.c: 36: EUSART_RX.iRead = 0;
  7228  002DF4  0E00               	movlw	0
  7229  002DF6  0102               	movlb	2	; () banked
  7230  002DF8  6F00               	movwf	_EUSART_RX& (0+255),b
  7231                           
  7232                           ;EUSART.c: 37: EUSART_RX.iWrite = 0;
  7233  002DFA  0E00               	movlw	0
  7234  002DFC  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
  7235  002DFE                     
  7236                           ; BSR set to: 2
  7237                           ;EUSART.c: 38: memset(EUSART_RX.buffer, 0x00, 128);
  7238  002DFE  0E02               	movlw	low (_EUSART_RX+2)
  7239  002E00  6E05               	movwf	memset@p1^0,c
  7240  002E02  0E02               	movlw	high (_EUSART_RX+2)
  7241  002E04  6E06               	movwf	(memset@p1+1)^0,c
  7242  002E06  0E00               	movlw	0
  7243  002E08  6E08               	movwf	(memset@c+1)^0,c
  7244  002E0A  0E00               	movlw	0
  7245  002E0C  6E07               	movwf	memset@c^0,c
  7246  002E0E  0E00               	movlw	0
  7247  002E10  6E0A               	movwf	(memset@n+1)^0,c
  7248  002E12  0E80               	movlw	128
  7249  002E14  6E09               	movwf	memset@n^0,c
  7250  002E16  EC8C  F017         	call	_memset	;wreg free
  7251  002E1A  0012               	return		;funcret
  7252  002E1C                     __end_of_EUSART_Init:
  7253                           	opt callstack 0
  7254                           
  7255 ;; *************** function _A6_Init *****************
  7256 ;; Defined at:
  7257 ;;		line 12 in file "A6Lib.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:   10
  7278 ;; This function calls:
  7279 ;;		_A6_BaudRateAutoDetect
  7280 ;;		_sleepMS
  7281 ;; This function is called by:
  7282 ;;		_main
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           	psect	text27
  7287  0030BE                     __ptext27:
  7288                           	opt callstack 0
  7289  0030BE                     _A6_Init:
  7290                           	opt callstack 20
  7291  0030BE                     
  7292                           ;A6Lib.c: 13: sleepMS(5000);
  7293  0030BE  0E88               	movlw	136
  7294  0030C0  6E05               	movwf	sleepMS@ms^0,c
  7295  0030C2  0E13               	movlw	19
  7296  0030C4  6E06               	movwf	(sleepMS@ms+1)^0,c
  7297  0030C6  0E00               	movlw	0
  7298  0030C8  6E07               	movwf	(sleepMS@ms+2)^0,c
  7299  0030CA  0E00               	movlw	0
  7300  0030CC  6E08               	movwf	(sleepMS@ms+3)^0,c
  7301  0030CE  EC6F  F017         	call	_sleepMS	;wreg free
  7302  0030D2                     
  7303                           ;A6Lib.c: 14: A6_BaudRateAutoDetect();
  7304  0030D2  EC17  F00E         	call	_A6_BaudRateAutoDetect	;wreg free
  7305  0030D6  0012               	return		;funcret
  7306  0030D8                     __end_of_A6_Init:
  7307                           	opt callstack 0
  7308                           
  7309 ;; *************** function _A6_BaudRateAutoDetect *****************
  7310 ;; Defined at:
  7311 ;;		line 74 in file "A6Lib.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;		None
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;  zzzz           32   16[BANK0 ] unsigned char [32]
  7316 ;;  i               1   48[BANK0 ] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  4   28[None  ] unsigned long 
  7319 ;; Registers used:
  7320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0
  7327 ;;      Locals:         0      33       0       0       0       0       0       0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7329 ;;      Totals:         0      33       0       0       0       0       0       0       0
  7330 ;;Total ram usage:       33 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    9
  7333 ;; This function calls:
  7334 ;;		_A6_IsAlive
  7335 ;;		_EUSART_BaudRateSet
  7336 ;;		_TFT_ConsolePrintLine
  7337 ;;		_sleepMS
  7338 ;;		_sprintf
  7339 ;; This function is called by:
  7340 ;;		_loop
  7341 ;;		_A6_Init
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text28
  7346  001C2E                     __ptext28:
  7347                           	opt callstack 0
  7348  001C2E                     _A6_BaudRateAutoDetect:
  7349                           	opt callstack 20
  7350  001C2E                     
  7351                           ;A6Lib.c: 75: TFT_ConsolePrintLine("Detecting baud rate...", 0xF81F);
  7352  001C2E  0ED2               	movlw	low STR_29
  7353  001C30  0100               	movlb	0	; () banked
  7354  001C32  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  7355  001C34  0E5E               	movlw	high STR_29
  7356  001C36  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  7357  001C38  0EF8               	movlw	248
  7358  001C3A  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  7359  001C3C  0E1F               	movlw	31
  7360  001C3E  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  7361  001C40  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  7362  001C44                     
  7363                           ;A6Lib.c: 77: for(uint8_t i=0; i<3; i++) {
  7364  001C44  0E00               	movlw	0
  7365  001C46  0100               	movlb	0	; () banked
  7366  001C48  6F90               	movwf	A6_BaudRateAutoDetect@i& (0+255),b
  7367  001C4A                     l5794:
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;A6Lib.c: 78: EUSART_BaudRateSet(A6_BAUDRATES[i]);
  7371  001C4A  5190               	movf	A6_BaudRateAutoDetect@i& (0+255),w,b
  7372  001C4C  0D04               	mullw	4
  7373  001C4E  0EE5               	movlw	low _A6_BAUDRATES
  7374  001C50  24F3               	addwf	243,w,c
  7375  001C52  6EF6               	movwf	tblptrl,c
  7376  001C54  0E5D               	movlw	high _A6_BAUDRATES
  7377  001C56  20F4               	addwfc	244,w,c
  7378  001C58  6EF7               	movwf	tblptrh,c
  7379  001C5A                     	if	0	;There are less than 3 active tblptr bytes
  7380  001C5A                     	endif
  7381  001C5A  0009               	tblrd		*+
  7382  001C5C  CFF5 F012          	movff	tablat,EUSART_BaudRateSet@baudRate
  7383  001C60  0009               	tblrd		*+
  7384  001C62  CFF5 F013          	movff	tablat,EUSART_BaudRateSet@baudRate+1
  7385  001C66  0009               	tblrd		*+
  7386  001C68  CFF5 F014          	movff	tablat,EUSART_BaudRateSet@baudRate+2
  7387  001C6C  000A               	tblrd		*-
  7388  001C6E  CFF5 F015          	movff	tablat,EUSART_BaudRateSet@baudRate+3
  7389  001C72  ECF1  F012         	call	_EUSART_BaudRateSet	;wreg free
  7390  001C76                     
  7391                           ;A6Lib.c: 79: if(A6_IsAlive() == 1) {
  7392  001C76  EC00  F016         	call	_A6_IsAlive	;wreg free
  7393  001C7A  06E8               	decf	wreg,f,c
  7394  001C7C  A4D8               	btfss	status,2,c
  7395  001C7E  EF43  F00E         	goto	u4901
  7396  001C82  EF45  F00E         	goto	u4900
  7397  001C86                     u4901:
  7398  001C86  EF71  F00E         	goto	l5804
  7399  001C8A                     u4900:
  7400  001C8A                     
  7401                           ;A6Lib.c: 80: char zzzz[32];;A6Lib.c: 81: sprintf(zzzz, "%lu FOUND!", A6_BAUDRATES[i]);
  7402  001C8A  0E70               	movlw	low A6_BaudRateAutoDetect@zzzz
  7403  001C8C  6E4A               	movwf	sprintf@sp^0,c
  7404  001C8E  0E00               	movlw	high A6_BaudRateAutoDetect@zzzz
  7405  001C90  6E4B               	movwf	(sprintf@sp+1)^0,c
  7406  001C92  0E64               	movlw	low STR_30
  7407  001C94  6E4C               	movwf	sprintf@f^0,c
  7408  001C96  0E5F               	movlw	high STR_30
  7409  001C98  6E4D               	movwf	(sprintf@f+1)^0,c
  7410  001C9A  0100               	movlb	0	; () banked
  7411  001C9C  5190               	movf	A6_BaudRateAutoDetect@i& (0+255),w,b
  7412  001C9E  0D04               	mullw	4
  7413  001CA0  0EE5               	movlw	low _A6_BAUDRATES
  7414  001CA2  24F3               	addwf	243,w,c
  7415  001CA4  6EF6               	movwf	tblptrl,c
  7416  001CA6  0E5D               	movlw	high _A6_BAUDRATES
  7417  001CA8  20F4               	addwfc	244,w,c
  7418  001CAA  6EF7               	movwf	tblptrh,c
  7419  001CAC                     	if	0	;There are less than 3 active tblptr bytes
  7420  001CAC                     	endif
  7421  001CAC  0009               	tblrd		*+
  7422  001CAE  CFF5 F04E          	movff	tablat,?_sprintf+4
  7423  001CB2  0009               	tblrd		*+
  7424  001CB4  CFF5 F04F          	movff	tablat,?_sprintf+5
  7425  001CB8  0009               	tblrd		*+
  7426  001CBA  CFF5 F050          	movff	tablat,?_sprintf+6
  7427  001CBE  000A               	tblrd		*-
  7428  001CC0  CFF5 F051          	movff	tablat,?_sprintf+7
  7429  001CC4  ECA7  F003         	call	_sprintf	;wreg free
  7430  001CC8                     
  7431                           ;A6Lib.c: 82: TFT_ConsolePrintLine(zzzz, 0xF800);
  7432  001CC8  0E70               	movlw	low A6_BaudRateAutoDetect@zzzz
  7433  001CCA  0100               	movlb	0	; () banked
  7434  001CCC  6F6B               	movwf	TFT_ConsolePrintLine@str& (0+255),b
  7435  001CCE  0E00               	movlw	high A6_BaudRateAutoDetect@zzzz
  7436  001CD0  6F6C               	movwf	(TFT_ConsolePrintLine@str+1)& (0+255),b
  7437  001CD2  0EF8               	movlw	248
  7438  001CD4  6F6E               	movwf	(TFT_ConsolePrintLine@color+1)& (0+255),b
  7439  001CD6  0E00               	movlw	0
  7440  001CD8  6F6D               	movwf	TFT_ConsolePrintLine@color& (0+255),b
  7441  001CDA  ECED  F010         	call	_TFT_ConsolePrintLine	;wreg free
  7442  001CDE  EF85  F00E         	goto	l604
  7443  001CE2                     l5804:
  7444                           
  7445                           ;A6Lib.c: 84: };A6Lib.c: 85: sleepMS(100);
  7446  001CE2  0E64               	movlw	100
  7447  001CE4  6E05               	movwf	sleepMS@ms^0,c
  7448  001CE6  0E00               	movlw	0
  7449  001CE8  6E06               	movwf	(sleepMS@ms+1)^0,c
  7450  001CEA  0E00               	movlw	0
  7451  001CEC  6E07               	movwf	(sleepMS@ms+2)^0,c
  7452  001CEE  0E00               	movlw	0
  7453  001CF0  6E08               	movwf	(sleepMS@ms+3)^0,c
  7454  001CF2  EC6F  F017         	call	_sleepMS	;wreg free
  7455  001CF6  0100               	movlb	0	; () banked
  7456  001CF8  2B90               	incf	A6_BaudRateAutoDetect@i& (0+255),f,b
  7457  001CFA                     
  7458                           ; BSR set to: 0
  7459  001CFA  0E02               	movlw	2
  7460  001CFC  6590               	cpfsgt	A6_BaudRateAutoDetect@i& (0+255),b
  7461  001CFE  EF83  F00E         	goto	u4911
  7462  001D02  EF85  F00E         	goto	u4910
  7463  001D06                     u4911:
  7464  001D06  EF25  F00E         	goto	l5794
  7465  001D0A                     u4910:
  7466  001D0A                     l604:
  7467  001D0A  0012               	return		;funcret
  7468  001D0C                     __end_of_A6_BaudRateAutoDetect:
  7469                           	opt callstack 0
  7470                           
  7471 ;; *************** function _sprintf *****************
  7472 ;; Defined at:
  7473 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  sp              2   73[COMRAM] PTR unsigned char 
  7476 ;;		 -> A6_BaudRateAutoDetect@zzzz(32), A6_BaudRateSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), loop@zzzz_1
      +60(32), 
  7477 ;;		 -> loop@zzzz_156(32), loop@zzzz_153(32), loop@zzzz(32), 
  7478 ;;  f               2   75[COMRAM] PTR const unsigned char 
  7479 ;;		 -> STR_30(11), STR_27(12), STR_19(4), STR_15(24), 
  7480 ;;		 -> STR_13(23), STR_11(4), STR_3(27), STR_2(32), 
  7481 ;;		 -> STR_1(23), 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  val             4    6[BANK0 ] unsigned long 
  7484 ;;  tmpval          4    0        struct .
  7485 ;;  width           2   13[BANK0 ] int 
  7486 ;;  ap              2   11[BANK0 ] PTR void [1]
  7487 ;;		 -> ?_sprintf(2), 
  7488 ;;  len             2    4[BANK0 ] unsigned int 
  7489 ;;  cp              2    2[BANK0 ] PTR const unsigned char 
  7490 ;;		 -> STR_40(7), ?_sprintf(2), Ecg_ProcessHeartRate@heartbeatAverage(4), STR_18(6), 
  7491 ;;		 -> STR_17(11), STR_16(13), 
  7492 ;;  prec            2    0[BANK0 ] int 
  7493 ;;  c               1   15[BANK0 ] unsigned char 
  7494 ;;  flag            1   10[BANK0 ] unsigned char 
  7495 ;; Return value:  Size  Location     Type
  7496 ;;                  2   73[COMRAM] int 
  7497 ;; Registers used:
  7498 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7499 ;; Tracked objects:
  7500 ;;		On entry : 0/0
  7501 ;;		On exit  : 0/0
  7502 ;;		Unchanged: 0/0
  7503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7504 ;;      Params:         8       0       0       0       0       0       0       0       0
  7505 ;;      Locals:         0      16       0       0       0       0       0       0       0
  7506 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7507 ;;      Totals:        12      16       0       0       0       0       0       0       0
  7508 ;;Total ram usage:       28 bytes
  7509 ;; Hardware stack levels used:    1
  7510 ;; Hardware stack levels required when called:    3
  7511 ;; This function calls:
  7512 ;;		___lldiv
  7513 ;;		___llmod
  7514 ;;		___wmul
  7515 ;;		_isdigit
  7516 ;; This function is called by:
  7517 ;;		_loop
  7518 ;;		_A6_BaudRateSet
  7519 ;;		_A6_BaudRateAutoDetect
  7520 ;;		_Ecg_ProcessHeartRate
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text29
  7525  00074E                     __ptext29:
  7526                           	opt callstack 0
  7527  00074E                     _sprintf:
  7528                           	opt callstack 26
  7529  00074E                     
  7530                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  7531  00074E  0E4E               	movlw	low (?_sprintf+4)
  7532  000750  0100               	movlb	0	; () banked
  7533  000752  6F6B               	movwf	sprintf@ap& (0+255),b
  7534  000754  0E00               	movlw	high (?_sprintf+4)
  7535  000756  6F6C               	movwf	(sprintf@ap+1)& (0+255),b
  7536                           
  7537                           ;doprnt.c: 553: while((c = *f++)) {
  7538  000758  EF25  F006         	goto	l5694
  7539  00075C                     l5558:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;doprnt.c: 555: if(c != '%')
  7543  00075C  0E25               	movlw	37
  7544  00075E  196F               	xorwf	sprintf@c& (0+255),w,b
  7545  000760  B4D8               	btfsc	status,2,c
  7546  000762  EFB5  F003         	goto	u4561
  7547  000766  EFB7  F003         	goto	u4560
  7548  00076A                     u4561:
  7549  00076A  EFC1  F003         	goto	l5564
  7550  00076E                     u4560:
  7551  00076E                     
  7552                           ; BSR set to: 0
  7553                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  7554  00076E  C04A  FFD9         	movff	sprintf@sp,fsr2l
  7555  000772  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  7556  000776  C06F  FFDF         	movff	sprintf@c,indf2
  7557  00077A                     
  7558                           ; BSR set to: 0
  7559  00077A  4A4A               	infsnz	sprintf@sp^0,f,c
  7560  00077C  2A4B               	incf	(sprintf@sp+1)^0,f,c
  7561                           
  7562                           ;doprnt.c: 559: continue;
  7563  00077E  EF25  F006         	goto	l5694
  7564  000782                     l5564:
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  7568  000782  0E00               	movlw	0
  7569  000784  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  7570  000786  0E00               	movlw	0
  7571  000788  6F6D               	movwf	sprintf@width& (0+255),b
  7572                           
  7573                           ;doprnt.c: 565: flag = 0;
  7574  00078A  0E00               	movlw	0
  7575  00078C  6F6A               	movwf	sprintf@flag& (0+255),b
  7576  00078E                     
  7577                           ; BSR set to: 0
  7578                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  7579  00078E  C04C  FFF6         	movff	sprintf@f,tblptrl
  7580  000792  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7581  000796                     	if	0	;tblptru may be non-zero
  7582  000796                     	endif
  7583  000796                     	if	0	;tblptru may be non-zero
  7584  000796                     	endif
  7585  000796  0008               	tblrd		*
  7586  000798  50F5               	movf	tablat,w,c
  7587  00079A  ECC2  F017         	call	_isdigit
  7588  00079E  A0D8               	btfss	status,0,c
  7589  0007A0  EFD4  F003         	goto	u4571
  7590  0007A4  EFD6  F003         	goto	u4570
  7591  0007A8                     u4571:
  7592  0007A8  EFAF  F004         	goto	l5618
  7593  0007AC                     u4570:
  7594  0007AC                     
  7595                           ;doprnt.c: 615: width = 0;
  7596  0007AC  0E00               	movlw	0
  7597  0007AE  0100               	movlb	0	; () banked
  7598  0007B0  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  7599  0007B2  0E00               	movlw	0
  7600  0007B4  6F6D               	movwf	sprintf@width& (0+255),b
  7601  0007B6                     l5570:
  7602                           
  7603                           ;doprnt.c: 617: width *= 10;
  7604  0007B6  C06D  F005         	movff	sprintf@width,___wmul@multiplier
  7605  0007BA  C06E  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  7606  0007BE  0E00               	movlw	0
  7607  0007C0  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  7608  0007C2  0E0A               	movlw	10
  7609  0007C4  6E07               	movwf	___wmul@multiplicand^0,c
  7610  0007C6  EC1F  F018         	call	___wmul	;wreg free
  7611  0007CA  C005  F06D         	movff	?___wmul,sprintf@width
  7612  0007CE  C006  F06E         	movff	?___wmul+1,sprintf@width+1
  7613  0007D2                     
  7614                           ;doprnt.c: 618: width += *f++ - '0';
  7615  0007D2  0ED0               	movlw	208
  7616  0007D4  6E52               	movwf	??_sprintf^0,c
  7617  0007D6  0EFF               	movlw	255
  7618  0007D8  6E53               	movwf	(??_sprintf+1)^0,c
  7619  0007DA  C04C  FFF6         	movff	sprintf@f,tblptrl
  7620  0007DE  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7621  0007E2                     	if	0	;tblptru may be non-zero
  7622  0007E2                     	endif
  7623  0007E2                     	if	0	;tblptru may be non-zero
  7624  0007E2                     	endif
  7625  0007E2  0008               	tblrd		*
  7626  0007E4  50F5               	movf	tablat,w,c
  7627  0007E6  6E54               	movwf	(??_sprintf+2)^0,c
  7628  0007E8  6A55               	clrf	(??_sprintf+3)^0,c
  7629  0007EA  5052               	movf	??_sprintf^0,w,c
  7630  0007EC  2654               	addwf	(??_sprintf+2)^0,f,c
  7631  0007EE  5053               	movf	(??_sprintf+1)^0,w,c
  7632  0007F0  2255               	addwfc	(??_sprintf+3)^0,f,c
  7633  0007F2  5054               	movf	(??_sprintf+2)^0,w,c
  7634  0007F4  0100               	movlb	0	; () banked
  7635  0007F6  276D               	addwf	sprintf@width& (0+255),f,b
  7636  0007F8  5055               	movf	(??_sprintf+3)^0,w,c
  7637  0007FA  236E               	addwfc	(sprintf@width+1)& (0+255),f,b
  7638  0007FC                     
  7639                           ; BSR set to: 0
  7640  0007FC  4A4C               	infsnz	sprintf@f^0,f,c
  7641  0007FE  2A4D               	incf	(sprintf@f+1)^0,f,c
  7642  000800                     
  7643                           ; BSR set to: 0
  7644                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  7645  000800  C04C  FFF6         	movff	sprintf@f,tblptrl
  7646  000804  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7647  000808                     	if	0	;tblptru may be non-zero
  7648  000808                     	endif
  7649  000808                     	if	0	;tblptru may be non-zero
  7650  000808                     	endif
  7651  000808  0008               	tblrd		*
  7652  00080A  50F5               	movf	tablat,w,c
  7653  00080C  ECC2  F017         	call	_isdigit
  7654  000810  B0D8               	btfsc	status,0,c
  7655  000812  EF0D  F004         	goto	u4581
  7656  000816  EF0F  F004         	goto	u4580
  7657  00081A                     u4581:
  7658  00081A  EFDB  F003         	goto	l5570
  7659  00081E                     u4580:
  7660  00081E  EFAF  F004         	goto	l5618
  7661  000822                     l5578:
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;doprnt.c: 669: flag |= 0x10;
  7665  000822  896A               	bsf	sprintf@flag& (0+255),4,b
  7666                           
  7667                           ;doprnt.c: 670: goto loop;
  7668  000824  EFAF  F004         	goto	l5618
  7669  000828                     l5580:
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;doprnt.c: 760: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
  7673  000828  C06B  FFD9         	movff	sprintf@ap,fsr2l
  7674  00082C  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  7675  000830  CFDE F062          	movff	postinc2,sprintf@cp
  7676  000834  CFDD F063          	movff	postdec2,sprintf@cp+1
  7677  000838                     
  7678                           ; BSR set to: 0
  7679  000838  0E02               	movlw	2
  7680  00083A  276B               	addwf	sprintf@ap& (0+255),f,b
  7681  00083C  0E00               	movlw	0
  7682  00083E  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7683  000840                     
  7684                           ; BSR set to: 0
  7685                           ;doprnt.c: 766: if(!cp)
  7686  000840  5162               	movf	sprintf@cp& (0+255),w,b
  7687  000842  1163               	iorwf	(sprintf@cp+1)& (0+255),w,b
  7688  000844  A4D8               	btfss	status,2,c
  7689  000846  EF27  F004         	goto	u4591
  7690  00084A  EF29  F004         	goto	u4590
  7691  00084E                     u4591:
  7692  00084E  EF2D  F004         	goto	l5588
  7693  000852                     u4590:
  7694  000852                     
  7695                           ; BSR set to: 0
  7696                           ;doprnt.c: 767: cp = "(null)";
  7697  000852  0ED3               	movlw	low STR_40
  7698  000854  6F62               	movwf	sprintf@cp& (0+255),b
  7699  000856  0E5F               	movlw	high STR_40
  7700  000858  6F63               	movwf	(sprintf@cp+1)& (0+255),b
  7701  00085A                     l5588:
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;doprnt.c: 771: len = 0;
  7705  00085A  0E00               	movlw	0
  7706  00085C  6F65               	movwf	(sprintf@len+1)& (0+255),b
  7707  00085E  0E00               	movlw	0
  7708  000860  6F64               	movwf	sprintf@len& (0+255),b
  7709                           
  7710                           ;doprnt.c: 772: while(cp[len])
  7711  000862  EF36  F004         	goto	l5592
  7712  000866                     l5590:
  7713                           
  7714                           ;doprnt.c: 773: len++;
  7715  000866  0100               	movlb	0	; () banked
  7716  000868  4B64               	infsnz	sprintf@len& (0+255),f,b
  7717  00086A  2B65               	incf	(sprintf@len+1)& (0+255),f,b
  7718  00086C                     l5592:
  7719                           
  7720                           ; BSR set to: 0
  7721  00086C  5164               	movf	sprintf@len& (0+255),w,b
  7722  00086E  2562               	addwf	sprintf@cp& (0+255),w,b
  7723  000870  6E52               	movwf	??_sprintf^0,c
  7724  000872  5165               	movf	(sprintf@len+1)& (0+255),w,b
  7725  000874  2163               	addwfc	(sprintf@cp+1)& (0+255),w,b
  7726  000876  6E53               	movwf	(??_sprintf+1)^0,c
  7727  000878  C052  FFF6         	movff	??_sprintf,tblptrl
  7728  00087C  C053  FFF7         	movff	??_sprintf+1,tblptrh
  7729  000880  6AF8               	clrf	tblptru,c
  7730  000882  0E07               	movlw	(high __ramtop+-1)
  7731  000884  64F7               	cpfsgt	tblptrh,c
  7732  000886  D003               	bra	u4607
  7733  000888  0008               	tblrd		*
  7734  00088A  50F5               	movf	tablat,w,c
  7735  00088C  D005               	bra	u4600
  7736  00088E                     u4607:
  7737  00088E  CFF6 FFE9          	movff	tblptrl,fsr0l
  7738  000892  CFF7 FFEA          	movff	tblptrh,fsr0h
  7739  000896  50EF               	movf	indf0,w,c
  7740  000898                     u4600:
  7741  000898  0900               	iorlw	0
  7742  00089A  A4D8               	btfss	status,2,c
  7743  00089C  EF52  F004         	goto	u4611
  7744  0008A0  EF54  F004         	goto	u4610
  7745  0008A4                     u4611:
  7746  0008A4  EF33  F004         	goto	l5590
  7747  0008A8                     u4610:
  7748  0008A8                     
  7749                           ;doprnt.c: 783: if(((unsigned)width) > len)
  7750  0008A8  0100               	movlb	0	; () banked
  7751  0008AA  516D               	movf	sprintf@width& (0+255),w,b
  7752  0008AC  5D64               	subwf	sprintf@len& (0+255),w,b
  7753  0008AE  516E               	movf	(sprintf@width+1)& (0+255),w,b
  7754  0008B0  5965               	subwfb	(sprintf@len+1)& (0+255),w,b
  7755  0008B2  B0D8               	btfsc	status,0,c
  7756  0008B4  EF5E  F004         	goto	u4621
  7757  0008B8  EF60  F004         	goto	u4620
  7758  0008BC                     u4621:
  7759  0008BC  EF66  F004         	goto	l5598
  7760  0008C0                     u4620:
  7761  0008C0                     
  7762                           ; BSR set to: 0
  7763                           ;doprnt.c: 784: width -= len;
  7764  0008C0  5164               	movf	sprintf@len& (0+255),w,b
  7765  0008C2  5F6D               	subwf	sprintf@width& (0+255),f,b
  7766  0008C4  5165               	movf	(sprintf@len+1)& (0+255),w,b
  7767  0008C6  5B6E               	subwfb	(sprintf@width+1)& (0+255),f,b
  7768  0008C8  EF74  F004         	goto	l5604
  7769  0008CC                     l5598:
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  7773  0008CC  0E00               	movlw	0
  7774  0008CE  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  7775  0008D0  0E00               	movlw	0
  7776  0008D2  6F6D               	movwf	sprintf@width& (0+255),b
  7777  0008D4  EF74  F004         	goto	l5604
  7778  0008D8                     l5600:
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;doprnt.c: 791: ((*sp++ = (' ')));
  7782  0008D8  C04A  FFD9         	movff	sprintf@sp,fsr2l
  7783  0008DC  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  7784  0008E0  0E20               	movlw	32
  7785  0008E2  6EDF               	movwf	indf2,c
  7786  0008E4                     
  7787                           ; BSR set to: 0
  7788  0008E4  4A4A               	infsnz	sprintf@sp^0,f,c
  7789  0008E6  2A4B               	incf	(sprintf@sp+1)^0,f,c
  7790  0008E8                     l5604:
  7791                           
  7792                           ; BSR set to: 0
  7793  0008E8  076D               	decf	sprintf@width& (0+255),f,b
  7794  0008EA  A0D8               	btfss	status,0,c
  7795  0008EC  076E               	decf	(sprintf@width+1)& (0+255),f,b
  7796  0008EE  296D               	incf	sprintf@width& (0+255),w,b
  7797  0008F0  E106               	bnz	u4631
  7798  0008F2  296E               	incf	(sprintf@width+1)& (0+255),w,b
  7799  0008F4  A4D8               	btfss	status,2,c
  7800  0008F6  EF7F  F004         	goto	u4631
  7801  0008FA  EF81  F004         	goto	u4630
  7802  0008FE                     u4631:
  7803  0008FE  EF6C  F004         	goto	l5600
  7804  000902                     u4630:
  7805  000902  EF9D  F004         	goto	l5612
  7806  000906                     l5606:
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  7810  000906  C062  FFF6         	movff	sprintf@cp,tblptrl
  7811  00090A  C063  FFF7         	movff	sprintf@cp+1,tblptrh
  7812  00090E  6AF8               	clrf	tblptru,c
  7813  000910  C04A  FFD9         	movff	sprintf@sp,fsr2l
  7814  000914  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  7815  000918  0E07               	movlw	(high __ramtop+-1)
  7816  00091A  64F7               	cpfsgt	tblptrh,c
  7817  00091C  D003               	bra	u4647
  7818  00091E  0008               	tblrd		*
  7819  000920  50F5               	movf	tablat,w,c
  7820  000922  D005               	bra	u4640
  7821  000924                     u4647:
  7822  000924  CFF6 FFE9          	movff	tblptrl,fsr0l
  7823  000928  CFF7 FFEA          	movff	tblptrh,fsr0h
  7824  00092C  50EF               	movf	indf0,w,c
  7825  00092E                     u4640:
  7826  00092E  6EDF               	movwf	indf2,c
  7827  000930  0100               	movlb	0	; () banked
  7828  000932  4B62               	infsnz	sprintf@cp& (0+255),f,b
  7829  000934  2B63               	incf	(sprintf@cp+1)& (0+255),f,b
  7830  000936                     
  7831                           ; BSR set to: 0
  7832  000936  4A4A               	infsnz	sprintf@sp^0,f,c
  7833  000938  2A4B               	incf	(sprintf@sp+1)^0,f,c
  7834  00093A                     l5612:
  7835                           
  7836                           ; BSR set to: 0
  7837  00093A  0764               	decf	sprintf@len& (0+255),f,b
  7838  00093C  A0D8               	btfss	status,0,c
  7839  00093E  0765               	decf	(sprintf@len+1)& (0+255),f,b
  7840  000940  2964               	incf	sprintf@len& (0+255),w,b
  7841  000942  E106               	bnz	u4651
  7842  000944  2965               	incf	(sprintf@len+1)& (0+255),w,b
  7843  000946  A4D8               	btfss	status,2,c
  7844  000948  EFA8  F004         	goto	u4651
  7845  00094C  EFAA  F004         	goto	u4650
  7846  000950                     u4651:
  7847  000950  EF83  F004         	goto	l5606
  7848  000954                     u4650:
  7849  000954  EF25  F006         	goto	l5694
  7850  000958                     l5614:
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;doprnt.c: 844: flag |= 0x40;
  7854  000958  8D6A               	bsf	sprintf@flag& (0+255),6,b
  7855                           
  7856                           ;doprnt.c: 845: break;
  7857  00095A  EFD4  F004         	goto	l753
  7858  00095E                     l5618:
  7859  00095E  C04C  FFF6         	movff	sprintf@f,tblptrl
  7860  000962  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  7861  000966  4A4C               	infsnz	sprintf@f^0,f,c
  7862  000968  2A4D               	incf	(sprintf@f+1)^0,f,c
  7863  00096A                     	if	0	;tblptru may be non-zero
  7864  00096A                     	endif
  7865  00096A                     	if	0	;tblptru may be non-zero
  7866  00096A                     	endif
  7867  00096A  0008               	tblrd		*
  7868  00096C  CFF5 F06F          	movff	tablat,sprintf@c
  7869  000970  0100               	movlb	0	; () banked
  7870  000972  516F               	movf	sprintf@c& (0+255),w,b
  7871                           
  7872                           ; Switch size 1, requested type "simple"
  7873                           ; Number of cases is 6, Range of values is 0 to 117
  7874                           ; switch strategies available:
  7875                           ; Name         Instructions Cycles
  7876                           ; simple_byte           19    10 (average)
  7877                           ;	Chosen strategy is simple_byte
  7878  000974  0A00               	xorlw	0	; case 0
  7879  000976  B4D8               	btfsc	status,2,c
  7880  000978  EF36  F006         	goto	l5696
  7881  00097C  0A64               	xorlw	100	; case 100
  7882  00097E  B4D8               	btfsc	status,2,c
  7883  000980  EFD4  F004         	goto	l753
  7884  000984  0A0D               	xorlw	13	; case 105
  7885  000986  B4D8               	btfsc	status,2,c
  7886  000988  EFD4  F004         	goto	l753
  7887  00098C  0A05               	xorlw	5	; case 108
  7888  00098E  B4D8               	btfsc	status,2,c
  7889  000990  EF11  F004         	goto	l5578
  7890  000994  0A1F               	xorlw	31	; case 115
  7891  000996  B4D8               	btfsc	status,2,c
  7892  000998  EF14  F004         	goto	l5580
  7893  00099C  0A06               	xorlw	6	; case 117
  7894  00099E  B4D8               	btfsc	status,2,c
  7895  0009A0  EFAC  F004         	goto	l5614
  7896  0009A4  EF25  F006         	goto	l5694
  7897  0009A8                     l753:
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  7901  0009A8  BD6A               	btfsc	sprintf@flag& (0+255),6,b
  7902  0009AA  EFD9  F004         	goto	u4661
  7903  0009AE  EFDB  F004         	goto	u4660
  7904  0009B2                     u4661:
  7905  0009B2  EF18  F005         	goto	l769
  7906  0009B6                     u4660:
  7907  0009B6                     
  7908                           ; BSR set to: 0
  7909                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  7910  0009B6  A96A               	btfss	sprintf@flag& (0+255),4,b
  7911  0009B8  EFE0  F004         	goto	u4671
  7912  0009BC  EFE2  F004         	goto	u4670
  7913  0009C0                     u4671:
  7914  0009C0  EFF4  F004         	goto	l5626
  7915  0009C4                     u4670:
  7916  0009C4                     
  7917                           ; BSR set to: 0
  7918                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  7919  0009C4  C06B  FFD9         	movff	sprintf@ap,fsr2l
  7920  0009C8  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  7921  0009CC  CFDE F066          	movff	postinc2,sprintf@val
  7922  0009D0  CFDE F067          	movff	postinc2,sprintf@val+1
  7923  0009D4  CFDE F068          	movff	postinc2,sprintf@val+2
  7924  0009D8  CFDE F069          	movff	postinc2,sprintf@val+3
  7925  0009DC                     
  7926                           ; BSR set to: 0
  7927  0009DC  0E04               	movlw	4
  7928  0009DE  276B               	addwf	sprintf@ap& (0+255),f,b
  7929  0009E0  0E00               	movlw	0
  7930  0009E2  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7931  0009E4  EF05  F005         	goto	l5630
  7932  0009E8                     l5626:
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  7936  0009E8  C06B  FFD9         	movff	sprintf@ap,fsr2l
  7937  0009EC  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  7938  0009F0  CFDE F066          	movff	postinc2,sprintf@val
  7939  0009F4  CFDD F067          	movff	postdec2,sprintf@val+1
  7940  0009F8  0E00               	movlw	0
  7941  0009FA  BF67               	btfsc	(sprintf@val+1)& (0+255),7,b
  7942  0009FC  0EFF               	movlw	-1
  7943  0009FE  6F68               	movwf	(sprintf@val+2)& (0+255),b
  7944  000A00  6F69               	movwf	(sprintf@val+3)& (0+255),b
  7945  000A02                     
  7946                           ; BSR set to: 0
  7947  000A02  0E02               	movlw	2
  7948  000A04  276B               	addwf	sprintf@ap& (0+255),f,b
  7949  000A06  0E00               	movlw	0
  7950  000A08  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  7951  000A0A                     l5630:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;doprnt.c: 1287: if((long)val < 0) {
  7955  000A0A  BF69               	btfsc	(sprintf@val+3)& (0+255),7,b
  7956  000A0C  EF0C  F005         	goto	u4680
  7957  000A10  EF0A  F005         	goto	u4681
  7958  000A14                     u4681:
  7959  000A14  EF43  F005         	goto	l5644
  7960  000A18                     u4680:
  7961  000A18                     
  7962                           ; BSR set to: 0
  7963                           ;doprnt.c: 1288: flag |= 0x03;
  7964  000A18  0E03               	movlw	3
  7965  000A1A  136A               	iorwf	sprintf@flag& (0+255),f,b
  7966  000A1C                     
  7967                           ; BSR set to: 0
  7968                           ;doprnt.c: 1289: val = -val;
  7969  000A1C  1F69               	comf	(sprintf@val+3)& (0+255),f,b
  7970  000A1E  1F68               	comf	(sprintf@val+2)& (0+255),f,b
  7971  000A20  1F67               	comf	(sprintf@val+1)& (0+255),f,b
  7972  000A22  6D66               	negf	sprintf@val& (0+255),b
  7973  000A24  0E00               	movlw	0
  7974  000A26  2367               	addwfc	(sprintf@val+1)& (0+255),f,b
  7975  000A28  2368               	addwfc	(sprintf@val+2)& (0+255),f,b
  7976  000A2A  2369               	addwfc	(sprintf@val+3)& (0+255),f,b
  7977  000A2C  EF43  F005         	goto	l5644
  7978  000A30                     l769:
  7979                           
  7980                           ; BSR set to: 0
  7981                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  7982  000A30  A96A               	btfss	sprintf@flag& (0+255),4,b
  7983  000A32  EF1D  F005         	goto	u4691
  7984  000A36  EF1F  F005         	goto	u4690
  7985  000A3A                     u4691:
  7986  000A3A  EF31  F005         	goto	l5640
  7987  000A3E                     u4690:
  7988  000A3E                     
  7989                           ; BSR set to: 0
  7990                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  7991  000A3E  C06B  FFD9         	movff	sprintf@ap,fsr2l
  7992  000A42  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  7993  000A46  CFDE F066          	movff	postinc2,sprintf@val
  7994  000A4A  CFDE F067          	movff	postinc2,sprintf@val+1
  7995  000A4E  CFDE F068          	movff	postinc2,sprintf@val+2
  7996  000A52  CFDE F069          	movff	postinc2,sprintf@val+3
  7997  000A56                     
  7998                           ; BSR set to: 0
  7999  000A56  0E04               	movlw	4
  8000  000A58  276B               	addwf	sprintf@ap& (0+255),f,b
  8001  000A5A  0E00               	movlw	0
  8002  000A5C  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8003  000A5E  EF43  F005         	goto	l5644
  8004  000A62                     l5640:
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  8008  000A62  C06B  FFD9         	movff	sprintf@ap,fsr2l
  8009  000A66  C06C  FFDA         	movff	sprintf@ap+1,fsr2h
  8010  000A6A  CFDE F052          	movff	postinc2,??_sprintf
  8011  000A6E  CFDD F053          	movff	postdec2,??_sprintf+1
  8012  000A72  C052  F066         	movff	??_sprintf,sprintf@val
  8013  000A76  C053  F067         	movff	??_sprintf+1,sprintf@val+1
  8014  000A7A  6B68               	clrf	(sprintf@val+2)& (0+255),b
  8015  000A7C  6B69               	clrf	(sprintf@val+3)& (0+255),b
  8016  000A7E                     
  8017                           ; BSR set to: 0
  8018  000A7E  0E02               	movlw	2
  8019  000A80  276B               	addwf	sprintf@ap& (0+255),f,b
  8020  000A82  0E00               	movlw	0
  8021  000A84  236C               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8022  000A86                     l5644:
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  8026  000A86  0E01               	movlw	1
  8027  000A88  6F6F               	movwf	sprintf@c& (0+255),b
  8028  000A8A                     l5650:
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;doprnt.c: 1332: if(val < dpowers[c])
  8032  000A8A  516F               	movf	sprintf@c& (0+255),w,b
  8033  000A8C  0D04               	mullw	4
  8034  000A8E  0EBD               	movlw	low _dpowers
  8035  000A90  24F3               	addwf	243,w,c
  8036  000A92  6EF6               	movwf	tblptrl,c
  8037  000A94  0E5D               	movlw	high _dpowers
  8038  000A96  20F4               	addwfc	244,w,c
  8039  000A98  6EF7               	movwf	tblptrh,c
  8040  000A9A                     	if	0	;There are less than 3 active tblptr bytes
  8041  000A9A                     	endif
  8042  000A9A  0009               	tblrd		*+
  8043  000A9C  50F5               	movf	tablat,w,c
  8044  000A9E  5D66               	subwf	sprintf@val& (0+255),w,b
  8045  000AA0  0009               	tblrd		*+
  8046  000AA2  50F5               	movf	tablat,w,c
  8047  000AA4  5967               	subwfb	(sprintf@val+1)& (0+255),w,b
  8048  000AA6  0009               	tblrd		*+
  8049  000AA8  50F5               	movf	tablat,w,c
  8050  000AAA  5968               	subwfb	(sprintf@val+2)& (0+255),w,b
  8051  000AAC  0009               	tblrd		*+
  8052  000AAE  50F5               	movf	tablat,w,c
  8053  000AB0  5969               	subwfb	(sprintf@val+3)& (0+255),w,b
  8054  000AB2  B0D8               	btfsc	status,0,c
  8055  000AB4  EF5E  F005         	goto	u4701
  8056  000AB8  EF60  F005         	goto	u4700
  8057  000ABC                     u4701:
  8058  000ABC  EF62  F005         	goto	l5654
  8059  000AC0                     u4700:
  8060  000AC0  EF6C  F005         	goto	l5658
  8061  000AC4                     l5654:
  8062                           
  8063                           ; BSR set to: 0
  8064  000AC4  2B6F               	incf	sprintf@c& (0+255),f,b
  8065  000AC6                     
  8066                           ; BSR set to: 0
  8067  000AC6  0E0A               	movlw	10
  8068  000AC8  196F               	xorwf	sprintf@c& (0+255),w,b
  8069  000ACA  A4D8               	btfss	status,2,c
  8070  000ACC  EF6A  F005         	goto	u4711
  8071  000AD0  EF6C  F005         	goto	u4710
  8072  000AD4                     u4711:
  8073  000AD4  EF45  F005         	goto	l5650
  8074  000AD8                     u4710:
  8075  000AD8                     l5658:
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;doprnt.c: 1371: if(width && flag & 0x03)
  8079  000AD8  516D               	movf	sprintf@width& (0+255),w,b
  8080  000ADA  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8081  000ADC  B4D8               	btfsc	status,2,c
  8082  000ADE  EF73  F005         	goto	u4721
  8083  000AE2  EF75  F005         	goto	u4720
  8084  000AE6                     u4721:
  8085  000AE6  EF83  F005         	goto	l5664
  8086  000AEA                     u4720:
  8087  000AEA                     
  8088                           ; BSR set to: 0
  8089  000AEA  C06A  F052         	movff	sprintf@flag,??_sprintf
  8090  000AEE  0E03               	movlw	3
  8091  000AF0  1652               	andwf	??_sprintf^0,f,c
  8092  000AF2  B4D8               	btfsc	status,2,c
  8093  000AF4  EF7E  F005         	goto	u4731
  8094  000AF8  EF80  F005         	goto	u4730
  8095  000AFC                     u4731:
  8096  000AFC  EF83  F005         	goto	l5664
  8097  000B00                     u4730:
  8098  000B00                     
  8099                           ; BSR set to: 0
  8100                           ;doprnt.c: 1372: width--;
  8101  000B00  076D               	decf	sprintf@width& (0+255),f,b
  8102  000B02  A0D8               	btfss	status,0,c
  8103  000B04  076E               	decf	(sprintf@width+1)& (0+255),f,b
  8104  000B06                     l5664:
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;doprnt.c: 1407: if(width > c)
  8108  000B06  516F               	movf	sprintf@c& (0+255),w,b
  8109  000B08  6E52               	movwf	??_sprintf^0,c
  8110  000B0A  6A53               	clrf	(??_sprintf+1)^0,c
  8111  000B0C  516D               	movf	sprintf@width& (0+255),w,b
  8112  000B0E  5C52               	subwf	??_sprintf^0,w,c
  8113  000B10  5053               	movf	(??_sprintf+1)^0,w,c
  8114  000B12  0A80               	xorlw	128
  8115  000B14  6E54               	movwf	(??_sprintf+2)^0,c
  8116  000B16  516E               	movf	(sprintf@width+1)& (0+255),w,b
  8117  000B18  0A80               	xorlw	128
  8118  000B1A  5854               	subwfb	(??_sprintf+2)^0,w,c
  8119  000B1C  B0D8               	btfsc	status,0,c
  8120  000B1E  EF93  F005         	goto	u4741
  8121  000B22  EF95  F005         	goto	u4740
  8122  000B26                     u4741:
  8123  000B26  EF9B  F005         	goto	l5668
  8124  000B2A                     u4740:
  8125  000B2A                     
  8126                           ; BSR set to: 0
  8127                           ;doprnt.c: 1408: width -= c;
  8128  000B2A  516F               	movf	sprintf@c& (0+255),w,b
  8129  000B2C  5F6D               	subwf	sprintf@width& (0+255),f,b
  8130  000B2E  0E00               	movlw	0
  8131  000B30  5B6E               	subwfb	(sprintf@width+1)& (0+255),f,b
  8132  000B32  EF9F  F005         	goto	l5670
  8133  000B36                     l5668:
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  8137  000B36  0E00               	movlw	0
  8138  000B38  6F6E               	movwf	(sprintf@width+1)& (0+255),b
  8139  000B3A  0E00               	movlw	0
  8140  000B3C  6F6D               	movwf	sprintf@width& (0+255),b
  8141  000B3E                     l5670:
  8142                           
  8143                           ; BSR set to: 0
  8144                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  8145  000B3E  516D               	movf	sprintf@width& (0+255),w,b
  8146  000B40  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8147  000B42  B4D8               	btfsc	status,2,c
  8148  000B44  EFA6  F005         	goto	u4751
  8149  000B48  EFA8  F005         	goto	u4750
  8150  000B4C                     u4751:
  8151  000B4C  EFBC  F005         	goto	l5678
  8152  000B50                     u4750:
  8153  000B50                     l5672:
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  8157  000B50  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8158  000B54  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8159  000B58  0E20               	movlw	32
  8160  000B5A  6EDF               	movwf	indf2,c
  8161  000B5C                     
  8162                           ; BSR set to: 0
  8163  000B5C  4A4A               	infsnz	sprintf@sp^0,f,c
  8164  000B5E  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8165  000B60                     
  8166                           ; BSR set to: 0
  8167                           ;doprnt.c: 1457: while(--width);
  8168  000B60  076D               	decf	sprintf@width& (0+255),f,b
  8169  000B62  A0D8               	btfss	status,0,c
  8170  000B64  076E               	decf	(sprintf@width+1)& (0+255),f,b
  8171  000B66  516D               	movf	sprintf@width& (0+255),w,b
  8172  000B68  116E               	iorwf	(sprintf@width+1)& (0+255),w,b
  8173  000B6A  A4D8               	btfss	status,2,c
  8174  000B6C  EFBA  F005         	goto	u4761
  8175  000B70  EFBC  F005         	goto	u4760
  8176  000B74                     u4761:
  8177  000B74  EFA8  F005         	goto	l5672
  8178  000B78                     u4760:
  8179  000B78                     l5678:
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;doprnt.c: 1464: if(flag & 0x03)
  8183  000B78  C06A  F052         	movff	sprintf@flag,??_sprintf
  8184  000B7C  0E03               	movlw	3
  8185  000B7E  1652               	andwf	??_sprintf^0,f,c
  8186  000B80  B4D8               	btfsc	status,2,c
  8187  000B82  EFC5  F005         	goto	u4771
  8188  000B86  EFC7  F005         	goto	u4770
  8189  000B8A                     u4771:
  8190  000B8A  EFCF  F005         	goto	l5684
  8191  000B8E                     u4770:
  8192  000B8E                     
  8193                           ; BSR set to: 0
  8194                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  8195  000B8E  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8196  000B92  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8197  000B96  0E2D               	movlw	45
  8198  000B98  6EDF               	movwf	indf2,c
  8199  000B9A                     
  8200                           ; BSR set to: 0
  8201  000B9A  4A4A               	infsnz	sprintf@sp^0,f,c
  8202  000B9C  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8203  000B9E                     l5684:
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  8207  000B9E  C06F  F060         	movff	sprintf@c,sprintf@prec
  8208  000BA2  6B61               	clrf	(sprintf@prec+1)& (0+255),b
  8209                           
  8210                           ;doprnt.c: 1500: while(prec--) {
  8211  000BA4  EF18  F006         	goto	l5692
  8212  000BA8                     l5686:
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  8216  000BA8  C060  F052         	movff	sprintf@prec,??_sprintf
  8217  000BAC  C061  F053         	movff	sprintf@prec+1,??_sprintf+1
  8218  000BB0  90D8               	bcf	status,0,c
  8219  000BB2  3652               	rlcf	??_sprintf^0,f,c
  8220  000BB4  3653               	rlcf	(??_sprintf+1)^0,f,c
  8221  000BB6  90D8               	bcf	status,0,c
  8222  000BB8  3652               	rlcf	??_sprintf^0,f,c
  8223  000BBA  3653               	rlcf	(??_sprintf+1)^0,f,c
  8224  000BBC  0EBD               	movlw	low _dpowers
  8225  000BBE  2452               	addwf	??_sprintf^0,w,c
  8226  000BC0  6EF6               	movwf	tblptrl,c
  8227  000BC2  0E5D               	movlw	high _dpowers
  8228  000BC4  2053               	addwfc	(??_sprintf+1)^0,w,c
  8229  000BC6  6EF7               	movwf	tblptrh,c
  8230  000BC8                     	if	0	;There are less than 3 active tblptr bytes
  8231  000BC8                     	endif
  8232  000BC8  0009               	tblrd		*+
  8233  000BCA  CFF5 F009          	movff	tablat,___lldiv@divisor
  8234  000BCE  0009               	tblrd		*+
  8235  000BD0  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  8236  000BD4  0009               	tblrd		*+
  8237  000BD6  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  8238  000BDA  000A               	tblrd		*-
  8239  000BDC  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  8240  000BE0  C066  F005         	movff	sprintf@val,___lldiv@dividend
  8241  000BE4  C067  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  8242  000BE8  C068  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  8243  000BEC  C069  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  8244  000BF0  EC44  F011         	call	___lldiv	;wreg free
  8245  000BF4  C005  F012         	movff	?___lldiv,___llmod@dividend
  8246  000BF8  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  8247  000BFC  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  8248  000C00  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  8249  000C04  0E0A               	movlw	10
  8250  000C06  6E16               	movwf	___llmod@divisor^0,c
  8251  000C08  0E00               	movlw	0
  8252  000C0A  6E17               	movwf	(___llmod@divisor+1)^0,c
  8253  000C0C  0E00               	movlw	0
  8254  000C0E  6E18               	movwf	(___llmod@divisor+2)^0,c
  8255  000C10  0E00               	movlw	0
  8256  000C12  6E19               	movwf	(___llmod@divisor+3)^0,c
  8257  000C14  EC26  F012         	call	___llmod	;wreg free
  8258  000C18  5012               	movf	?___llmod^0,w,c
  8259  000C1A  0F30               	addlw	48
  8260  000C1C  0100               	movlb	0	; () banked
  8261  000C1E  6F6F               	movwf	sprintf@c& (0+255),b
  8262  000C20                     
  8263                           ; BSR set to: 0
  8264                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  8265  000C20  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8266  000C24  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8267  000C28  C06F  FFDF         	movff	sprintf@c,indf2
  8268  000C2C                     
  8269                           ; BSR set to: 0
  8270  000C2C  4A4A               	infsnz	sprintf@sp^0,f,c
  8271  000C2E  2A4B               	incf	(sprintf@sp+1)^0,f,c
  8272  000C30                     l5692:
  8273                           
  8274                           ; BSR set to: 0
  8275  000C30  0760               	decf	sprintf@prec& (0+255),f,b
  8276  000C32  A0D8               	btfss	status,0,c
  8277  000C34  0761               	decf	(sprintf@prec+1)& (0+255),f,b
  8278  000C36  2960               	incf	sprintf@prec& (0+255),w,b
  8279  000C38  E106               	bnz	u4781
  8280  000C3A  2961               	incf	(sprintf@prec+1)& (0+255),w,b
  8281  000C3C  A4D8               	btfss	status,2,c
  8282  000C3E  EF23  F006         	goto	u4781
  8283  000C42  EF25  F006         	goto	u4780
  8284  000C46                     u4781:
  8285  000C46  EFD4  F005         	goto	l5686
  8286  000C4A                     u4780:
  8287  000C4A                     l5694:
  8288                           
  8289                           ; BSR set to: 0
  8290  000C4A  C04C  FFF6         	movff	sprintf@f,tblptrl
  8291  000C4E  C04D  FFF7         	movff	sprintf@f+1,tblptrh
  8292  000C52  4A4C               	infsnz	sprintf@f^0,f,c
  8293  000C54  2A4D               	incf	(sprintf@f+1)^0,f,c
  8294  000C56                     	if	0	;tblptru may be non-zero
  8295  000C56                     	endif
  8296  000C56                     	if	0	;tblptru may be non-zero
  8297  000C56                     	endif
  8298  000C56  0008               	tblrd		*
  8299  000C58  CFF5 F06F          	movff	tablat,sprintf@c
  8300  000C5C  516F               	movf	sprintf@c& (0+255),w,b
  8301  000C5E  A4D8               	btfss	status,2,c
  8302  000C60  EF34  F006         	goto	u4791
  8303  000C64  EF36  F006         	goto	u4790
  8304  000C68                     u4791:
  8305  000C68  EFAE  F003         	goto	l5558
  8306  000C6C                     u4790:
  8307  000C6C                     l5696:
  8308                           
  8309                           ; BSR set to: 0
  8310                           ;doprnt.c: 1564: *sp = 0;
  8311  000C6C  C04A  FFD9         	movff	sprintf@sp,fsr2l
  8312  000C70  C04B  FFDA         	movff	sprintf@sp+1,fsr2h
  8313  000C74  0E00               	movlw	0
  8314  000C76  6EDF               	movwf	indf2,c
  8315  000C78                     
  8316                           ; BSR set to: 0
  8317  000C78  0012               	return		;funcret
  8318  000C7A                     __end_of_sprintf:
  8319                           	opt callstack 0
  8320                           
  8321 ;; *************** function _isdigit *****************
  8322 ;; Defined at:
  8323 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  c               1    wreg     unsigned char 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  c               1    6[COMRAM] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;		None               void
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8337 ;;      Params:         0       0       0       0       0       0       0       0       0
  8338 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8339 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8340 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8341 ;;Total ram usage:        3 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    2
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_sprintf
  8348 ;;		_atoi
  8349 ;;		_atol
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           	psect	text30
  8354  002F84                     __ptext30:
  8355                           	opt callstack 0
  8356  002F84                     _isdigit:
  8357                           	opt callstack 26
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;incstack = 0
  8361                           ;isdigit@c stored from wreg
  8362  002F84  6E07               	movwf	isdigit@c^0,c
  8363  002F86  0E00               	movlw	0
  8364  002F88  6E06               	movwf	_isdigit$1963^0,c
  8365  002F8A  0E3A               	movlw	58
  8366  002F8C  6007               	cpfslt	isdigit@c^0,c
  8367  002F8E  EFCB  F017         	goto	u2601
  8368  002F92  EFCD  F017         	goto	u2600
  8369  002F96                     u2601:
  8370  002F96  EFD7  F017         	goto	l3914
  8371  002F9A                     u2600:
  8372  002F9A  0E2F               	movlw	47
  8373  002F9C  6407               	cpfsgt	isdigit@c^0,c
  8374  002F9E  EFD3  F017         	goto	u2611
  8375  002FA2  EFD5  F017         	goto	u2610
  8376  002FA6                     u2611:
  8377  002FA6  EFD7  F017         	goto	l3914
  8378  002FAA                     u2610:
  8379  002FAA  0E01               	movlw	1
  8380  002FAC  6E06               	movwf	_isdigit$1963^0,c
  8381  002FAE                     l3914:
  8382  002FAE  C006  F005         	movff	_isdigit$1963,??_isdigit
  8383  002FB2  3005               	rrcf	??_isdigit^0,w,c
  8384  002FB4  0012               	return		;funcret
  8385  002FB6                     __end_of_isdigit:
  8386                           	opt callstack 0
  8387                           
  8388 ;; *************** function ___llmod *****************
  8389 ;; Defined at:
  8390 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  dividend        4   17[COMRAM] unsigned long 
  8393 ;;  divisor         4   21[COMRAM] unsigned long 
  8394 ;; Auto vars:     Size  Location     Type
  8395 ;;  counter         1   25[COMRAM] unsigned char 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  4   17[COMRAM] unsigned long 
  8398 ;; Registers used:
  8399 ;;		wreg, status,2, status,0
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8405 ;;      Params:         8       0       0       0       0       0       0       0       0
  8406 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8408 ;;      Totals:         9       0       0       0       0       0       0       0       0
  8409 ;;Total ram usage:        9 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; Hardware stack levels required when called:    2
  8412 ;; This function calls:
  8413 ;;		Nothing
  8414 ;; This function is called by:
  8415 ;;		_sprintf
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text31
  8420  00244C                     __ptext31:
  8421                           	opt callstack 0
  8422  00244C                     ___llmod:
  8423                           	opt callstack 26
  8424  00244C  5016               	movf	___llmod@divisor^0,w,c
  8425  00244E  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  8426  002450  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  8427  002452  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  8428  002454  B4D8               	btfsc	status,2,c
  8429  002456  EF2F  F012         	goto	u3021
  8430  00245A  EF31  F012         	goto	u3020
  8431  00245E                     u3021:
  8432  00245E  EF61  F012         	goto	l1201
  8433  002462                     u3020:
  8434  002462  0E01               	movlw	1
  8435  002464  6E1A               	movwf	___llmod@counter^0,c
  8436  002466  EF3B  F012         	goto	l4136
  8437  00246A                     l4134:
  8438  00246A  90D8               	bcf	status,0,c
  8439  00246C  3616               	rlcf	___llmod@divisor^0,f,c
  8440  00246E  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  8441  002470  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  8442  002472  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  8443  002474  2A1A               	incf	___llmod@counter^0,f,c
  8444  002476                     l4136:
  8445  002476  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  8446  002478  EF40  F012         	goto	u3031
  8447  00247C  EF42  F012         	goto	u3030
  8448  002480                     u3031:
  8449  002480  EF35  F012         	goto	l4134
  8450  002484                     u3030:
  8451  002484                     l4138:
  8452  002484  5016               	movf	___llmod@divisor^0,w,c
  8453  002486  5C12               	subwf	___llmod@dividend^0,w,c
  8454  002488  5017               	movf	(___llmod@divisor+1)^0,w,c
  8455  00248A  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  8456  00248C  5018               	movf	(___llmod@divisor+2)^0,w,c
  8457  00248E  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  8458  002490  5019               	movf	(___llmod@divisor+3)^0,w,c
  8459  002492  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  8460  002494  A0D8               	btfss	status,0,c
  8461  002496  EF4F  F012         	goto	u3041
  8462  00249A  EF51  F012         	goto	u3040
  8463  00249E                     u3041:
  8464  00249E  EF59  F012         	goto	l4142
  8465  0024A2                     u3040:
  8466  0024A2  5016               	movf	___llmod@divisor^0,w,c
  8467  0024A4  5E12               	subwf	___llmod@dividend^0,f,c
  8468  0024A6  5017               	movf	(___llmod@divisor+1)^0,w,c
  8469  0024A8  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  8470  0024AA  5018               	movf	(___llmod@divisor+2)^0,w,c
  8471  0024AC  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  8472  0024AE  5019               	movf	(___llmod@divisor+3)^0,w,c
  8473  0024B0  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  8474  0024B2                     l4142:
  8475  0024B2  90D8               	bcf	status,0,c
  8476  0024B4  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  8477  0024B6  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  8478  0024B8  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  8479  0024BA  3216               	rrcf	___llmod@divisor^0,f,c
  8480  0024BC  2E1A               	decfsz	___llmod@counter^0,f,c
  8481  0024BE  EF42  F012         	goto	l4138
  8482  0024C2                     l1201:
  8483  0024C2  C012  F012         	movff	___llmod@dividend,?___llmod
  8484  0024C6  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  8485  0024CA  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  8486  0024CE  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  8487  0024D2  0012               	return		;funcret
  8488  0024D4                     __end_of___llmod:
  8489                           	opt callstack 0
  8490                           
  8491 ;; *************** function _sleepMS *****************
  8492 ;; Defined at:
  8493 ;;		line 91 in file "init.c"
  8494 ;; Parameters:    Size  Location     Type
  8495 ;;  ms              4    4[COMRAM] unsigned long 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;  t               4    8[COMRAM] unsigned long 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		wreg, status,2, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8507 ;;      Params:         4       0       0       0       0       0       0       0       0
  8508 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8510 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8511 ;;Total ram usage:        8 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    2
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_A6_Init
  8518 ;;		_A6_BaudRateSet
  8519 ;;		_A6_BaudRateAutoDetect
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text32
  8524  002EDE                     __ptext32:
  8525                           	opt callstack 0
  8526  002EDE                     _sleepMS:
  8527                           	opt callstack 26
  8528  002EDE                     
  8529                           ;init.c: 92: uint32_t t = MILLISECONDS + ms;
  8530  002EDE  5005               	movf	sleepMS@ms^0,w,c
  8531  002EE0  0101               	movlb	1	; () banked
  8532  002EE2  25C9               	addwf	_MILLISECONDS& (0+255),w,b
  8533  002EE4  6E09               	movwf	sleepMS@t^0,c
  8534  002EE6  5006               	movf	(sleepMS@ms+1)^0,w,c
  8535  002EE8  21CA               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  8536  002EEA  6E0A               	movwf	(sleepMS@t+1)^0,c
  8537  002EEC  5007               	movf	(sleepMS@ms+2)^0,w,c
  8538  002EEE  21CB               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  8539  002EF0  6E0B               	movwf	(sleepMS@t+2)^0,c
  8540  002EF2  5008               	movf	(sleepMS@ms+3)^0,w,c
  8541  002EF4  21CC               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  8542  002EF6  6E0C               	movwf	(sleepMS@t+3)^0,c
  8543  002EF8                     l4362:
  8544                           
  8545                           ; BSR set to: 1
  8546  002EF8  5009               	movf	sleepMS@t^0,w,c
  8547  002EFA  5DC9               	subwf	_MILLISECONDS& (0+255),w,b
  8548  002EFC  500A               	movf	(sleepMS@t+1)^0,w,c
  8549  002EFE  59CA               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  8550  002F00  500B               	movf	(sleepMS@t+2)^0,w,c
  8551  002F02  59CB               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
  8552  002F04  500C               	movf	(sleepMS@t+3)^0,w,c
  8553  002F06  59CC               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
  8554  002F08  A0D8               	btfss	status,0,c
  8555  002F0A  EF89  F017         	goto	u3371
  8556  002F0E  EF8B  F017         	goto	u3370
  8557  002F12                     u3371:
  8558  002F12  EF7C  F017         	goto	l4362
  8559  002F16                     u3370:
  8560  002F16                     
  8561                           ; BSR set to: 1
  8562  002F16  0012               	return		;funcret
  8563  002F18                     __end_of_sleepMS:
  8564                           	opt callstack 0
  8565                           
  8566 ;; *************** function _TFT_ConsolePrintLine *****************
  8567 ;; Defined at:
  8568 ;;		line 334 in file "TFT.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  str             2   11[BANK0 ] PTR const unsigned char 
  8571 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateAutoDetect@zzzz(32), STR_29(23), loop@zzzz_160(32), 
  8572 ;;		 -> STR_14(27), loop@zzzz_156(32), STR_12(11), loop@zzzz_153(32), 
  8573 ;;		 -> STR_10(16), loop@response(32), STR_8(11), STR_7(13), 
  8574 ;;		 -> STR_6(11), STR_5(23), STR_4(25), loop@zzzz(32), 
  8575 ;;  color           2   13[BANK0 ] unsigned int 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;		None
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8587 ;;      Params:         0       4       0       0       0       0       0       0       0
  8588 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8589 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8590 ;;      Totals:         4       4       0       0       0       0       0       0       0
  8591 ;;Total ram usage:        8 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:    8
  8594 ;; This function calls:
  8595 ;;		_TFT_DrawFillRect
  8596 ;;		_TFT_DrawString
  8597 ;;		_TFT_GetHeight
  8598 ;;		_TFT_GetWidth
  8599 ;; This function is called by:
  8600 ;;		_loop
  8601 ;;		_A6_BaudRateAutoDetect
  8602 ;;		_A6_Process_Random_Comms
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text33
  8607  0021DA                     __ptext33:
  8608                           	opt callstack 0
  8609  0021DA                     _TFT_ConsolePrintLine:
  8610                           	opt callstack 21
  8611  0021DA                     
  8612                           ;TFT.c: 335: TFT_DrawFillRect(0, TFT_ConsoleRow, TFT_GetWidth(), 40, 0x0821);
  8613  0021DA  EC4F  F016         	call	_TFT_GetWidth	;wreg free
  8614  0021DE  C005  F04F         	movff	?_TFT_GetWidth,_TFT_ConsolePrintLine$2240
  8615  0021E2  C006  F050         	movff	?_TFT_GetWidth+1,_TFT_ConsolePrintLine$2240+1
  8616  0021E6                     
  8617                           ;TFT.c: 335: TFT_DrawFillRect(0, TFT_ConsoleRow, TFT_GetWidth(), 40, 0x0821);
  8618  0021E6  0E00               	movlw	0
  8619  0021E8  6E1F               	movwf	(TFT_DrawFillRect@x+1)^0,c
  8620  0021EA  0E00               	movlw	0
  8621  0021EC  6E1E               	movwf	TFT_DrawFillRect@x^0,c
  8622  0021EE  C0CC  F020         	movff	_TFT_ConsoleRow,TFT_DrawFillRect@y
  8623  0021F2  C0CD  F021         	movff	_TFT_ConsoleRow+1,TFT_DrawFillRect@y+1
  8624  0021F6  C04F  F022         	movff	_TFT_ConsolePrintLine$2240,TFT_DrawFillRect@w
  8625  0021FA  C050  F023         	movff	_TFT_ConsolePrintLine$2240+1,TFT_DrawFillRect@w+1
  8626  0021FE  0E00               	movlw	0
  8627  002200  6E25               	movwf	(TFT_DrawFillRect@h+1)^0,c
  8628  002202  0E28               	movlw	40
  8629  002204  6E24               	movwf	TFT_DrawFillRect@h^0,c
  8630  002206  0E08               	movlw	8
  8631  002208  6E27               	movwf	(TFT_DrawFillRect@color+1)^0,c
  8632  00220A  0E21               	movlw	33
  8633  00220C  6E26               	movwf	TFT_DrawFillRect@color^0,c
  8634  00220E  EC74  F013         	call	_TFT_DrawFillRect	;wreg free
  8635  002212                     
  8636                           ;TFT.c: 336: TFT_DrawString(2, TFT_ConsoleRow + 2, str, color, 0x0821, 1);
  8637  002212  0E00               	movlw	0
  8638  002214  0100               	movlb	0	; () banked
  8639  002216  6F61               	movwf	(TFT_DrawString@x+1)& (0+255),b
  8640  002218  0E02               	movlw	2
  8641  00221A  6F60               	movwf	TFT_DrawString@x& (0+255),b
  8642  00221C  0E02               	movlw	2
  8643  00221E  25CC               	addwf	_TFT_ConsoleRow& (0+255),w,b
  8644  002220  6F62               	movwf	TFT_DrawString@y& (0+255),b
  8645  002222  0E00               	movlw	0
  8646  002224  21CD               	addwfc	(_TFT_ConsoleRow+1)& (0+255),w,b
  8647  002226  6F63               	movwf	(TFT_DrawString@y+1)& (0+255),b
  8648  002228  C06B  F064         	movff	TFT_ConsolePrintLine@str,TFT_DrawString@str
  8649  00222C  C06C  F065         	movff	TFT_ConsolePrintLine@str+1,TFT_DrawString@str+1
  8650  002230  C06D  F066         	movff	TFT_ConsolePrintLine@color,TFT_DrawString@color
  8651  002234  C06E  F067         	movff	TFT_ConsolePrintLine@color+1,TFT_DrawString@color+1
  8652  002238  0E08               	movlw	8
  8653  00223A  6F69               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  8654  00223C  0E21               	movlw	33
  8655  00223E  6F68               	movwf	TFT_DrawString@bg& (0+255),b
  8656  002240  0E01               	movlw	1
  8657  002242  6F6A               	movwf	TFT_DrawString@size& (0+255),b
  8658  002244  EC96  F011         	call	_TFT_DrawString	;wreg free
  8659  002248                     
  8660                           ;TFT.c: 337: TFT_ConsoleRow += 10;
  8661  002248  0E0A               	movlw	10
  8662  00224A  0100               	movlb	0	; () banked
  8663  00224C  27CC               	addwf	_TFT_ConsoleRow& (0+255),f,b
  8664  00224E  0E00               	movlw	0
  8665  002250  23CD               	addwfc	(_TFT_ConsoleRow+1)& (0+255),f,b
  8666  002252                     
  8667                           ; BSR set to: 0
  8668                           ;TFT.c: 338: if(TFT_ConsoleRow > TFT_GetHeight() - 12) TFT_ConsoleRow = 0;
  8669  002252  0EF4               	movlw	244
  8670  002254  6E4D               	movwf	??_TFT_ConsolePrintLine^0,c
  8671  002256  0EFF               	movlw	255
  8672  002258  6E4E               	movwf	(??_TFT_ConsolePrintLine+1)^0,c
  8673  00225A  EC76  F016         	call	_TFT_GetHeight	;wreg free
  8674  00225E  504D               	movf	??_TFT_ConsolePrintLine^0,w,c
  8675  002260  2605               	addwf	?_TFT_GetHeight^0,f,c
  8676  002262  504E               	movf	(??_TFT_ConsolePrintLine+1)^0,w,c
  8677  002264  2206               	addwfc	(?_TFT_GetHeight+1)^0,f,c
  8678  002266  0100               	movlb	0	; () banked
  8679  002268  51CC               	movf	_TFT_ConsoleRow& (0+255),w,b
  8680  00226A  5C05               	subwf	?_TFT_GetHeight^0,w,c
  8681  00226C  51CD               	movf	(_TFT_ConsoleRow+1)& (0+255),w,b
  8682  00226E  5806               	subwfb	(?_TFT_GetHeight+1)^0,w,c
  8683  002270  B0D8               	btfsc	status,0,c
  8684  002272  EF3D  F011         	goto	u4801
  8685  002276  EF3F  F011         	goto	u4800
  8686  00227A                     u4801:
  8687  00227A  EF43  F011         	goto	l378
  8688  00227E                     u4800:
  8689  00227E                     
  8690                           ; BSR set to: 0
  8691  00227E  0E00               	movlw	0
  8692  002280  6FCD               	movwf	(_TFT_ConsoleRow+1)& (0+255),b
  8693  002282  0E00               	movlw	0
  8694  002284  6FCC               	movwf	_TFT_ConsoleRow& (0+255),b
  8695  002286                     l378:
  8696                           
  8697                           ; BSR set to: 0
  8698  002286  0012               	return		;funcret
  8699  002288                     __end_of_TFT_ConsolePrintLine:
  8700                           	opt callstack 0
  8701                           
  8702 ;; *************** function _TFT_DrawString *****************
  8703 ;; Defined at:
  8704 ;;		line 304 in file "TFT.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  x               2    0[BANK0 ] unsigned int 
  8707 ;;  y               2    2[BANK0 ] unsigned int 
  8708 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  8709 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateAutoDetect@zzzz(32), STR_29(23), STR_21(28), 
  8710 ;;		 -> STR_20(11), Ecg_ProcessHeartRate@heartrateString(5), loop@zzzz_160(32), STR_14(27), 
  8711 ;;		 -> loop@zzzz_156(32), STR_12(11), loop@zzzz_153(32), STR_10(16), 
  8712 ;;		 -> loop@response(32), STR_8(11), STR_7(13), STR_6(11), 
  8713 ;;		 -> STR_5(23), STR_4(25), loop@zzzz(32), 
  8714 ;;  color           2    6[BANK0 ] unsigned int 
  8715 ;;  bg              2    8[BANK0 ] unsigned int 
  8716 ;;  size            1   10[BANK0 ] unsigned char 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8728 ;;      Params:         0      11       0       0       0       0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8731 ;;      Totals:         0      11       0       0       0       0       0       0       0
  8732 ;;Total ram usage:       11 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; Hardware stack levels required when called:    7
  8735 ;; This function calls:
  8736 ;;		_TFT_DrawChar
  8737 ;; This function is called by:
  8738 ;;		_TFT_ConsolePrintLine
  8739 ;;		_Ecg_Background_Leads_Ok
  8740 ;;		_Ecg_Background_Leads_Failure
  8741 ;;		_Ecg_ProcessHeartRate
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text34
  8746  00232C                     __ptext34:
  8747                           	opt callstack 0
  8748  00232C                     _TFT_DrawString:
  8749                           	opt callstack 21
  8750  00232C                     
  8751                           ;TFT.c: 305: while(*str) {
  8752  00232C  EFC6  F011         	goto	l5526
  8753  002330                     l5520:
  8754                           
  8755                           ;TFT.c: 306: TFT_DrawChar(x, y, *str, color, bg, size);
  8756  002330  C060  F036         	movff	TFT_DrawString@x,TFT_DrawChar@x
  8757  002334  C061  F037         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  8758  002338  C062  F038         	movff	TFT_DrawString@y,TFT_DrawChar@y
  8759  00233C  C063  F039         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  8760  002340  C064  FFF6         	movff	TFT_DrawString@str,tblptrl
  8761  002344  C065  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  8762  002348  6AF8               	clrf	tblptru,c
  8763  00234A  0E07               	movlw	(high __ramtop+-1)
  8764  00234C  64F7               	cpfsgt	tblptrh,c
  8765  00234E  D003               	bra	u4477
  8766  002350  0008               	tblrd		*
  8767  002352  50F5               	movf	tablat,w,c
  8768  002354  D005               	bra	u4470
  8769  002356                     u4477:
  8770  002356  CFF6 FFE9          	movff	tblptrl,fsr0l
  8771  00235A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8772  00235E  50EF               	movf	indf0,w,c
  8773  002360                     u4470:
  8774  002360  6E3A               	movwf	TFT_DrawChar@c^0,c
  8775  002362  C066  F03B         	movff	TFT_DrawString@color,TFT_DrawChar@color
  8776  002366  C067  F03C         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  8777  00236A  C068  F03D         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  8778  00236E  C069  F03E         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  8779  002372  C06A  F03F         	movff	TFT_DrawString@size,TFT_DrawChar@size
  8780  002376  EC3D  F006         	call	_TFT_DrawChar	;wreg free
  8781  00237A                     
  8782                           ;TFT.c: 307: x += (6 * size);
  8783  00237A  0100               	movlb	0	; () banked
  8784  00237C  516A               	movf	TFT_DrawString@size& (0+255),w,b
  8785  00237E  0D06               	mullw	6
  8786  002380  50F3               	movf	243,w,c
  8787  002382  2760               	addwf	TFT_DrawString@x& (0+255),f,b
  8788  002384  50F4               	movf	244,w,c
  8789  002386  2361               	addwfc	(TFT_DrawString@x+1)& (0+255),f,b
  8790  002388                     
  8791                           ; BSR set to: 0
  8792                           ;TFT.c: 308: str++;
  8793  002388  4B64               	infsnz	TFT_DrawString@str& (0+255),f,b
  8794  00238A  2B65               	incf	(TFT_DrawString@str+1)& (0+255),f,b
  8795  00238C                     l5526:
  8796  00238C  C064  FFF6         	movff	TFT_DrawString@str,tblptrl
  8797  002390  C065  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  8798  002394  6AF8               	clrf	tblptru,c
  8799  002396  0E07               	movlw	(high __ramtop+-1)
  8800  002398  64F7               	cpfsgt	tblptrh,c
  8801  00239A  D003               	bra	u4487
  8802  00239C  0008               	tblrd		*
  8803  00239E  50F5               	movf	tablat,w,c
  8804  0023A0  D005               	bra	u4480
  8805  0023A2                     u4487:
  8806  0023A2  CFF6 FFE9          	movff	tblptrl,fsr0l
  8807  0023A6  CFF7 FFEA          	movff	tblptrh,fsr0h
  8808  0023AA  50EF               	movf	indf0,w,c
  8809  0023AC                     u4480:
  8810  0023AC  0900               	iorlw	0
  8811  0023AE  A4D8               	btfss	status,2,c
  8812  0023B0  EFDC  F011         	goto	u4491
  8813  0023B4  EFDE  F011         	goto	u4490
  8814  0023B8                     u4491:
  8815  0023B8  EF98  F011         	goto	l5520
  8816  0023BC                     u4490:
  8817  0023BC  0012               	return		;funcret
  8818  0023BE                     __end_of_TFT_DrawString:
  8819                           	opt callstack 0
  8820                           
  8821 ;; *************** function _TFT_DrawChar *****************
  8822 ;; Defined at:
  8823 ;;		line 275 in file "TFT.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  x               2   53[COMRAM] unsigned int 
  8826 ;;  y               2   55[COMRAM] unsigned int 
  8827 ;;  c               1   57[COMRAM] unsigned char 
  8828 ;;  color           2   58[COMRAM] unsigned int 
  8829 ;;  bg              2   60[COMRAM] unsigned int 
  8830 ;;  size            1   62[COMRAM] unsigned char 
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;  j               1   74[COMRAM] char 
  8833 ;;  xl              2   68[COMRAM] unsigned int 
  8834 ;;  line            1   67[COMRAM] unsigned char 
  8835 ;;  i               1   75[COMRAM] char 
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8845 ;;      Params:        10       0       0       0       0       0       0       0       0
  8846 ;;      Locals:         9       0       0       0       0       0       0       0       0
  8847 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8848 ;;      Totals:        23       0       0       0       0       0       0       0       0
  8849 ;;Total ram usage:       23 bytes
  8850 ;; Hardware stack levels used:    1
  8851 ;; Hardware stack levels required when called:    6
  8852 ;; This function calls:
  8853 ;;		_TFT_DrawFillRect
  8854 ;;		_TFT_DrawLine
  8855 ;;		_TFT_DrawPixel
  8856 ;;		___wmul
  8857 ;; This function is called by:
  8858 ;;		_TFT_DrawString
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text35
  8863  000C7A                     __ptext35:
  8864                           	opt callstack 0
  8865  000C7A                     _TFT_DrawChar:
  8866                           	opt callstack 21
  8867  000C7A                     
  8868                           ;TFT.c: 276: for(int8_t i=0; i<5; i++ ) {
  8869  000C7A  0E00               	movlw	0
  8870  000C7C  6E4C               	movwf	TFT_DrawChar@i^0,c
  8871  000C7E                     l5476:
  8872                           
  8873                           ;TFT.c: 277: uint8_t line = TFT_Font[c * 5 + i];
  8874  000C7E  C04C  F040         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  8875  000C82  6A41               	clrf	(??_TFT_DrawChar+1)^0,c
  8876  000C84  BE40               	btfsc	??_TFT_DrawChar^0,7,c
  8877  000C86  0641               	decf	(??_TFT_DrawChar+1)^0,f,c
  8878  000C88  503A               	movf	TFT_DrawChar@c^0,w,c
  8879  000C8A  0D05               	mullw	5
  8880  000C8C  0EF1               	movlw	low _TFT_Font
  8881  000C8E  6E42               	movwf	(??_TFT_DrawChar+2)^0,c
  8882  000C90  0E57               	movlw	high _TFT_Font
  8883  000C92  6E43               	movwf	(??_TFT_DrawChar+3)^0,c
  8884  000C94  50F3               	movf	243,w,c
  8885  000C96  2642               	addwf	(??_TFT_DrawChar+2)^0,f,c
  8886  000C98  50F4               	movf	244,w,c
  8887  000C9A  2243               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  8888  000C9C  5040               	movf	??_TFT_DrawChar^0,w,c
  8889  000C9E  2642               	addwf	(??_TFT_DrawChar+2)^0,f,c
  8890  000CA0  5041               	movf	(??_TFT_DrawChar+1)^0,w,c
  8891  000CA2  2243               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  8892  000CA4  C042  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  8893  000CA8  C043  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  8894  000CAC                     	if	0	;tblptru may be non-zero
  8895  000CAC                     	endif
  8896  000CAC                     	if	0	;tblptru may be non-zero
  8897  000CAC                     	endif
  8898  000CAC  0008               	tblrd		*
  8899  000CAE  CFF5 F044          	movff	tablat,TFT_DrawChar@line
  8900  000CB2                     
  8901                           ;TFT.c: 278: for(int8_t j=0; j<8; j++, line >>= 1) {
  8902  000CB2  0E00               	movlw	0
  8903  000CB4  6E4B               	movwf	TFT_DrawChar@j^0,c
  8904  000CB6                     l341:
  8905                           
  8906                           ;TFT.c: 279: if(line & 1) {
  8907  000CB6  A044               	btfss	TFT_DrawChar@line^0,0,c
  8908  000CB8  EF60  F006         	goto	u4391
  8909  000CBC  EF62  F006         	goto	u4390
  8910  000CC0                     u4391:
  8911  000CC0  EFB8  F006         	goto	l5490
  8912  000CC4                     u4390:
  8913  000CC4                     
  8914                           ;TFT.c: 280: if(size == 1) {
  8915  000CC4  043F               	decf	TFT_DrawChar@size^0,w,c
  8916  000CC6  A4D8               	btfss	status,2,c
  8917  000CC8  EF68  F006         	goto	u4401
  8918  000CCC  EF6A  F006         	goto	u4400
  8919  000CD0                     u4401:
  8920  000CD0  EF82  F006         	goto	l5488
  8921  000CD4                     u4400:
  8922  000CD4                     
  8923                           ;TFT.c: 281: TFT_DrawPixel((x + i), (y + j), color);
  8924  000CD4  5036               	movf	TFT_DrawChar@x^0,w,c
  8925  000CD6  244C               	addwf	TFT_DrawChar@i^0,w,c
  8926  000CD8  6E0D               	movwf	TFT_DrawPixel@x^0,c
  8927  000CDA  0E00               	movlw	0
  8928  000CDC  BE4C               	btfsc	TFT_DrawChar@i^0,7,c
  8929  000CDE  0EFF               	movlw	255
  8930  000CE0  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  8931  000CE2  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  8932  000CE4  5038               	movf	TFT_DrawChar@y^0,w,c
  8933  000CE6  244B               	addwf	TFT_DrawChar@j^0,w,c
  8934  000CE8  6E0F               	movwf	TFT_DrawPixel@y^0,c
  8935  000CEA  0E00               	movlw	0
  8936  000CEC  BE4B               	btfsc	TFT_DrawChar@j^0,7,c
  8937  000CEE  0EFF               	movlw	255
  8938  000CF0  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  8939  000CF2  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  8940  000CF4  C03B  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  8941  000CF8  C03C  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  8942  000CFC  ECF3  F00E         	call	_TFT_DrawPixel	;wreg free
  8943                           
  8944                           ;TFT.c: 282: } else {
  8945  000D00  EF18  F007         	goto	l5498
  8946  000D04                     l5488:
  8947                           
  8948                           ;TFT.c: 283: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  8949  000D04  504C               	movf	TFT_DrawChar@i^0,w,c
  8950  000D06  6E05               	movwf	___wmul@multiplier^0,c
  8951  000D08  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8952  000D0A  BE05               	btfsc	___wmul@multiplier^0,7,c
  8953  000D0C  0606               	decf	(___wmul@multiplier+1)^0,f,c
  8954  000D0E  C03F  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  8955  000D12  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  8956  000D14  EC1F  F018         	call	___wmul	;wreg free
  8957  000D18  5036               	movf	TFT_DrawChar@x^0,w,c
  8958  000D1A  2405               	addwf	?___wmul^0,w,c
  8959  000D1C  6E47               	movwf	_TFT_DrawChar$2238^0,c
  8960  000D1E  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  8961  000D20  2006               	addwfc	(?___wmul+1)^0,w,c
  8962  000D22  6E48               	movwf	(_TFT_DrawChar$2238+1)^0,c
  8963                           
  8964                           ;TFT.c: 283: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  8965  000D24  504B               	movf	TFT_DrawChar@j^0,w,c
  8966  000D26  6E05               	movwf	___wmul@multiplier^0,c
  8967  000D28  6A06               	clrf	(___wmul@multiplier+1)^0,c
  8968  000D2A  BE05               	btfsc	___wmul@multiplier^0,7,c
  8969  000D2C  0606               	decf	(___wmul@multiplier+1)^0,f,c
  8970  000D2E  C03F  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  8971  000D32  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  8972  000D34  EC1F  F018         	call	___wmul	;wreg free
  8973  000D38  5038               	movf	TFT_DrawChar@y^0,w,c
  8974  000D3A  2405               	addwf	?___wmul^0,w,c
  8975  000D3C  6E49               	movwf	_TFT_DrawChar$2239^0,c
  8976  000D3E  5039               	movf	(TFT_DrawChar@y+1)^0,w,c
  8977  000D40  2006               	addwfc	(?___wmul+1)^0,w,c
  8978  000D42  6E4A               	movwf	(_TFT_DrawChar$2239+1)^0,c
  8979                           
  8980                           ;TFT.c: 283: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  8981  000D44  C047  F01E         	movff	_TFT_DrawChar$2238,TFT_DrawFillRect@x
  8982  000D48  C048  F01F         	movff	_TFT_DrawChar$2238+1,TFT_DrawFillRect@x+1
  8983  000D4C  C049  F020         	movff	_TFT_DrawChar$2239,TFT_DrawFillRect@y
  8984  000D50  C04A  F021         	movff	_TFT_DrawChar$2239+1,TFT_DrawFillRect@y+1
  8985  000D54  C03F  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  8986  000D58  6A23               	clrf	(TFT_DrawFillRect@w+1)^0,c
  8987  000D5A  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  8988  000D5E  6A25               	clrf	(TFT_DrawFillRect@h+1)^0,c
  8989  000D60  C03B  F026         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  8990  000D64  C03C  F027         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  8991  000D68  EC74  F013         	call	_TFT_DrawFillRect	;wreg free
  8992  000D6C  EF18  F007         	goto	l5498
  8993  000D70                     l5490:
  8994  000D70  503B               	movf	TFT_DrawChar@color^0,w,c
  8995  000D72  183D               	xorwf	TFT_DrawChar@bg^0,w,c
  8996  000D74  E109               	bnz	u4410
  8997  000D76  503C               	movf	(TFT_DrawChar@color+1)^0,w,c
  8998  000D78  183E               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  8999  000D7A  B4D8               	btfsc	status,2,c
  9000  000D7C  EFC2  F006         	goto	u4411
  9001  000D80  EFC4  F006         	goto	u4410
  9002  000D84                     u4411:
  9003  000D84  EF18  F007         	goto	l5498
  9004  000D88                     u4410:
  9005  000D88                     
  9006                           ;TFT.c: 286: if(size == 1) {
  9007  000D88  043F               	decf	TFT_DrawChar@size^0,w,c
  9008  000D8A  A4D8               	btfss	status,2,c
  9009  000D8C  EFCA  F006         	goto	u4421
  9010  000D90  EFCC  F006         	goto	u4420
  9011  000D94                     u4421:
  9012  000D94  EFE4  F006         	goto	l5496
  9013  000D98                     u4420:
  9014  000D98                     
  9015                           ;TFT.c: 287: TFT_DrawPixel((x + i), (y + j), bg);
  9016  000D98  5036               	movf	TFT_DrawChar@x^0,w,c
  9017  000D9A  244C               	addwf	TFT_DrawChar@i^0,w,c
  9018  000D9C  6E0D               	movwf	TFT_DrawPixel@x^0,c
  9019  000D9E  0E00               	movlw	0
  9020  000DA0  BE4C               	btfsc	TFT_DrawChar@i^0,7,c
  9021  000DA2  0EFF               	movlw	255
  9022  000DA4  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  9023  000DA6  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  9024  000DA8  5038               	movf	TFT_DrawChar@y^0,w,c
  9025  000DAA  244B               	addwf	TFT_DrawChar@j^0,w,c
  9026  000DAC  6E0F               	movwf	TFT_DrawPixel@y^0,c
  9027  000DAE  0E00               	movlw	0
  9028  000DB0  BE4B               	btfsc	TFT_DrawChar@j^0,7,c
  9029  000DB2  0EFF               	movlw	255
  9030  000DB4  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  9031  000DB6  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  9032  000DB8  C03D  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  9033  000DBC  C03E  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  9034  000DC0  ECF3  F00E         	call	_TFT_DrawPixel	;wreg free
  9035                           
  9036                           ;TFT.c: 288: } else {
  9037  000DC4  EF18  F007         	goto	l5498
  9038  000DC8                     l5496:
  9039                           
  9040                           ;TFT.c: 289: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  9041  000DC8  504C               	movf	TFT_DrawChar@i^0,w,c
  9042  000DCA  6E05               	movwf	___wmul@multiplier^0,c
  9043  000DCC  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9044  000DCE  BE05               	btfsc	___wmul@multiplier^0,7,c
  9045  000DD0  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9046  000DD2  C03F  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9047  000DD6  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9048  000DD8  EC1F  F018         	call	___wmul	;wreg free
  9049  000DDC  5036               	movf	TFT_DrawChar@x^0,w,c
  9050  000DDE  2405               	addwf	?___wmul^0,w,c
  9051  000DE0  6E47               	movwf	_TFT_DrawChar$2238^0,c
  9052  000DE2  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  9053  000DE4  2006               	addwfc	(?___wmul+1)^0,w,c
  9054  000DE6  6E48               	movwf	(_TFT_DrawChar$2238+1)^0,c
  9055                           
  9056                           ;TFT.c: 289: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  9057  000DE8  504B               	movf	TFT_DrawChar@j^0,w,c
  9058  000DEA  6E05               	movwf	___wmul@multiplier^0,c
  9059  000DEC  6A06               	clrf	(___wmul@multiplier+1)^0,c
  9060  000DEE  BE05               	btfsc	___wmul@multiplier^0,7,c
  9061  000DF0  0606               	decf	(___wmul@multiplier+1)^0,f,c
  9062  000DF2  C03F  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  9063  000DF6  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  9064  000DF8  EC1F  F018         	call	___wmul	;wreg free
  9065  000DFC  5038               	movf	TFT_DrawChar@y^0,w,c
  9066  000DFE  2405               	addwf	?___wmul^0,w,c
  9067  000E00  6E49               	movwf	_TFT_DrawChar$2239^0,c
  9068  000E02  5039               	movf	(TFT_DrawChar@y+1)^0,w,c
  9069  000E04  2006               	addwfc	(?___wmul+1)^0,w,c
  9070  000E06  6E4A               	movwf	(_TFT_DrawChar$2239+1)^0,c
  9071                           
  9072                           ;TFT.c: 289: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  9073  000E08  C047  F01E         	movff	_TFT_DrawChar$2238,TFT_DrawFillRect@x
  9074  000E0C  C048  F01F         	movff	_TFT_DrawChar$2238+1,TFT_DrawFillRect@x+1
  9075  000E10  C049  F020         	movff	_TFT_DrawChar$2239,TFT_DrawFillRect@y
  9076  000E14  C04A  F021         	movff	_TFT_DrawChar$2239+1,TFT_DrawFillRect@y+1
  9077  000E18  C03F  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  9078  000E1C  6A23               	clrf	(TFT_DrawFillRect@w+1)^0,c
  9079  000E1E  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  9080  000E22  6A25               	clrf	(TFT_DrawFillRect@h+1)^0,c
  9081  000E24  C03D  F026         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  9082  000E28  C03E  F027         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  9083  000E2C  EC74  F013         	call	_TFT_DrawFillRect	;wreg free
  9084  000E30                     l5498:
  9085  000E30  2A4B               	incf	TFT_DrawChar@j^0,f,c
  9086  000E32  90D8               	bcf	status,0,c
  9087  000E34  3244               	rrcf	TFT_DrawChar@line^0,f,c
  9088  000E36  504B               	movf	TFT_DrawChar@j^0,w,c
  9089  000E38  0A80               	xorlw	128
  9090  000E3A  0F78               	addlw	-136
  9091  000E3C  A0D8               	btfss	status,0,c
  9092  000E3E  EF23  F007         	goto	u4431
  9093  000E42  EF25  F007         	goto	u4430
  9094  000E46                     u4431:
  9095  000E46  EF5B  F006         	goto	l341
  9096  000E4A                     u4430:
  9097  000E4A  2A4C               	incf	TFT_DrawChar@i^0,f,c
  9098  000E4C  504C               	movf	TFT_DrawChar@i^0,w,c
  9099  000E4E  0A80               	xorlw	128
  9100  000E50  0F7B               	addlw	-133
  9101  000E52  A0D8               	btfss	status,0,c
  9102  000E54  EF2E  F007         	goto	u4441
  9103  000E58  EF30  F007         	goto	u4440
  9104  000E5C                     u4441:
  9105  000E5C  EF3F  F006         	goto	l5476
  9106  000E60                     u4440:
  9107  000E60                     
  9108                           ;TFT.c: 290: };TFT.c: 291: };TFT.c: 292: };TFT.c: 293: };TFT.c: 294: if(bg != color) {
  9109  000E60  503B               	movf	TFT_DrawChar@color^0,w,c
  9110  000E62  183D               	xorwf	TFT_DrawChar@bg^0,w,c
  9111  000E64  E109               	bnz	u4450
  9112  000E66  503C               	movf	(TFT_DrawChar@color+1)^0,w,c
  9113  000E68  183E               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  9114  000E6A  B4D8               	btfsc	status,2,c
  9115  000E6C  EF3A  F007         	goto	u4451
  9116  000E70  EF3C  F007         	goto	u4450
  9117  000E74                     u4451:
  9118  000E74  EF83  F007         	goto	l353
  9119  000E78                     u4450:
  9120  000E78                     
  9121                           ;TFT.c: 295: if(size == 1) {
  9122  000E78  043F               	decf	TFT_DrawChar@size^0,w,c
  9123  000E7A  A4D8               	btfss	status,2,c
  9124  000E7C  EF42  F007         	goto	u4461
  9125  000E80  EF44  F007         	goto	u4460
  9126  000E84                     u4461:
  9127  000E84  EF64  F007         	goto	l5516
  9128  000E88                     u4460:
  9129  000E88                     
  9130                           ;TFT.c: 296: uint16_t xl = x + 5;
  9131  000E88  0E05               	movlw	5
  9132  000E8A  2436               	addwf	TFT_DrawChar@x^0,w,c
  9133  000E8C  6E45               	movwf	TFT_DrawChar@xl^0,c
  9134  000E8E  0E00               	movlw	0
  9135  000E90  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  9136  000E92  6E46               	movwf	(TFT_DrawChar@xl+1)^0,c
  9137  000E94                     
  9138                           ;TFT.c: 297: TFT_DrawLine(xl, y, xl, y + 7, bg);
  9139  000E94  C045  F017         	movff	TFT_DrawChar@xl,TFT_DrawLine@x0
  9140  000E98  C046  F018         	movff	TFT_DrawChar@xl+1,TFT_DrawLine@x0+1
  9141  000E9C  C038  F019         	movff	TFT_DrawChar@y,TFT_DrawLine@y0
  9142  000EA0  C039  F01A         	movff	TFT_DrawChar@y+1,TFT_DrawLine@y0+1
  9143  000EA4  C045  F01B         	movff	TFT_DrawChar@xl,TFT_DrawLine@x1
  9144  000EA8  C046  F01C         	movff	TFT_DrawChar@xl+1,TFT_DrawLine@x1+1
  9145  000EAC  0E07               	movlw	7
  9146  000EAE  2438               	addwf	TFT_DrawChar@y^0,w,c
  9147  000EB0  6E1D               	movwf	TFT_DrawLine@y1^0,c
  9148  000EB2  0E00               	movlw	0
  9149  000EB4  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  9150  000EB6  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  9151  000EB8  C03D  F01F         	movff	TFT_DrawChar@bg,TFT_DrawLine@color
  9152  000EBC  C03E  F020         	movff	TFT_DrawChar@bg+1,TFT_DrawLine@color+1
  9153  000EC0  ECC3  F008         	call	_TFT_DrawLine	;wreg free
  9154                           
  9155                           ;TFT.c: 298: } else {
  9156  000EC4  EF83  F007         	goto	l353
  9157  000EC8                     l5516:
  9158                           
  9159                           ;TFT.c: 299: TFT_DrawFillRect((x + 5 * size), y, size, 8 * size, bg);
  9160  000EC8  503F               	movf	TFT_DrawChar@size^0,w,c
  9161  000ECA  0D05               	mullw	5
  9162  000ECC  CFF3 F040          	movff	prodl,??_TFT_DrawChar
  9163  000ED0  CFF4 F041          	movff	prodh,??_TFT_DrawChar+1
  9164  000ED4  5036               	movf	TFT_DrawChar@x^0,w,c
  9165  000ED6  2440               	addwf	??_TFT_DrawChar^0,w,c
  9166  000ED8  6E1E               	movwf	TFT_DrawFillRect@x^0,c
  9167  000EDA  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  9168  000EDC  2041               	addwfc	(??_TFT_DrawChar+1)^0,w,c
  9169  000EDE  6E1F               	movwf	(TFT_DrawFillRect@x+1)^0,c
  9170  000EE0  C038  F020         	movff	TFT_DrawChar@y,TFT_DrawFillRect@y
  9171  000EE4  C039  F021         	movff	TFT_DrawChar@y+1,TFT_DrawFillRect@y+1
  9172  000EE8  C03F  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  9173  000EEC  6A23               	clrf	(TFT_DrawFillRect@w+1)^0,c
  9174  000EEE  503F               	movf	TFT_DrawChar@size^0,w,c
  9175  000EF0  0D08               	mullw	8
  9176  000EF2  CFF3 F024          	movff	prodl,TFT_DrawFillRect@h
  9177  000EF6  CFF4 F025          	movff	prodh,TFT_DrawFillRect@h+1
  9178  000EFA  C03D  F026         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  9179  000EFE  C03E  F027         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  9180  000F02  EC74  F013         	call	_TFT_DrawFillRect	;wreg free
  9181  000F06                     l353:
  9182  000F06  0012               	return		;funcret
  9183  000F08                     __end_of_TFT_DrawChar:
  9184                           	opt callstack 0
  9185                           
  9186 ;; *************** function _TFT_DrawLine *****************
  9187 ;; Defined at:
  9188 ;;		line 193 in file "TFT.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;  x0              2   22[COMRAM] int 
  9191 ;;  y0              2   24[COMRAM] int 
  9192 ;;  x1              2   26[COMRAM] int 
  9193 ;;  y1              2   28[COMRAM] int 
  9194 ;;  color           2   30[COMRAM] unsigned int 
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;  t               2   41[COMRAM] int 
  9197 ;;  t               2   39[COMRAM] int 
  9198 ;;  t               2   37[COMRAM] int 
  9199 ;;  t               2   35[COMRAM] int 
  9200 ;;  dx              2   51[COMRAM] int 
  9201 ;;  steep           2   49[COMRAM] int 
  9202 ;;  err             2   47[COMRAM] int 
  9203 ;;  ystep           2   45[COMRAM] int 
  9204 ;;  dy              2   43[COMRAM] int 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      void 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0, cstack
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9214 ;;      Params:        10       0       0       0       0       0       0       0       0
  9215 ;;      Locals:        18       0       0       0       0       0       0       0       0
  9216 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9217 ;;      Totals:        31       0       0       0       0       0       0       0       0
  9218 ;;Total ram usage:       31 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    4
  9221 ;; This function calls:
  9222 ;;		_TFT_DrawPixel
  9223 ;;		___awdiv
  9224 ;;		_abs
  9225 ;; This function is called by:
  9226 ;;		_TFT_DrawChar
  9227 ;;		_Ecg_Background_Leads_Ok
  9228 ;;		_Ecg_Draw
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text36
  9233  001186                     __ptext36:
  9234                           	opt callstack 0
  9235  001186                     _TFT_DrawLine:
  9236                           	opt callstack 22
  9237  001186                     
  9238                           ;TFT.c: 194: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  9239  001186  5017               	movf	TFT_DrawLine@x0^0,w,c
  9240  001188  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  9241  00118A  6E05               	movwf	abs@a^0,c
  9242  00118C  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  9243  00118E  581C               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  9244  001190  6E06               	movwf	(abs@a+1)^0,c
  9245  001192  ECA8  F017         	call	_abs	;wreg free
  9246  001196  C005  F021         	movff	?_abs,??_TFT_DrawLine
  9247  00119A  C006  F022         	movff	?_abs+1,??_TFT_DrawLine+1
  9248  00119E  5019               	movf	TFT_DrawLine@y0^0,w,c
  9249  0011A0  5C1D               	subwf	TFT_DrawLine@y1^0,w,c
  9250  0011A2  6E05               	movwf	abs@a^0,c
  9251  0011A4  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  9252  0011A6  581E               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  9253  0011A8  6E06               	movwf	(abs@a+1)^0,c
  9254  0011AA  ECA8  F017         	call	_abs	;wreg free
  9255  0011AE  5005               	movf	?_abs^0,w,c
  9256  0011B0  5C21               	subwf	??_TFT_DrawLine^0,w,c
  9257  0011B2  5022               	movf	(??_TFT_DrawLine+1)^0,w,c
  9258  0011B4  0A80               	xorlw	128
  9259  0011B6  6E23               	movwf	(??_TFT_DrawLine+2)^0,c
  9260  0011B8  5006               	movf	(?_abs+1)^0,w,c
  9261  0011BA  0A80               	xorlw	128
  9262  0011BC  5823               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  9263  0011BE  A0D8               	btfss	status,0,c
  9264  0011C0  EFE4  F008         	goto	u4311
  9265  0011C4  EFE7  F008         	goto	u4310
  9266  0011C8                     u4311:
  9267  0011C8  0E01               	movlw	1
  9268  0011CA  EFE8  F008         	goto	u4320
  9269  0011CE                     u4310:
  9270  0011CE  0E00               	movlw	0
  9271  0011D0                     u4320:
  9272  0011D0  6E32               	movwf	TFT_DrawLine@steep^0,c
  9273  0011D2  6A33               	clrf	(TFT_DrawLine@steep+1)^0,c
  9274  0011D4                     
  9275                           ;TFT.c: 195: if(steep) {
  9276  0011D4  5032               	movf	TFT_DrawLine@steep^0,w,c
  9277  0011D6  1033               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  9278  0011D8  B4D8               	btfsc	status,2,c
  9279  0011DA  EFF1  F008         	goto	u4331
  9280  0011DE  EFF3  F008         	goto	u4330
  9281  0011E2                     u4331:
  9282  0011E2  EF0B  F009         	goto	l5436
  9283  0011E6                     u4330:
  9284  0011E6                     
  9285                           ;TFT.c: 196: { int16_t t = x0; x0 = y0; y0 = t; };
  9286  0011E6  C017  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  9287  0011EA  C018  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  9288  0011EE  C019  F017         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  9289  0011F2  C01A  F018         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  9290  0011F6  C024  F019         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  9291  0011FA  C025  F01A         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  9292                           
  9293                           ;TFT.c: 197: { int16_t t = x1; x1 = y1; y1 = t; };
  9294  0011FE  C01B  F026         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_814
  9295  001202  C01C  F027         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_814+1
  9296  001206  C01D  F01B         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  9297  00120A  C01E  F01C         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  9298  00120E  C026  F01D         	movff	TFT_DrawLine@t_814,TFT_DrawLine@y1
  9299  001212  C027  F01E         	movff	TFT_DrawLine@t_814+1,TFT_DrawLine@y1+1
  9300  001216                     l5436:
  9301                           
  9302                           ;TFT.c: 198: };TFT.c: 199: if(x0 > x1) {
  9303  001216  5017               	movf	TFT_DrawLine@x0^0,w,c
  9304  001218  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  9305  00121A  501C               	movf	(TFT_DrawLine@x1+1)^0,w,c
  9306  00121C  0A80               	xorlw	128
  9307  00121E  6E21               	movwf	??_TFT_DrawLine^0,c
  9308  001220  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  9309  001222  0A80               	xorlw	128
  9310  001224  5821               	subwfb	??_TFT_DrawLine^0,w,c
  9311  001226  B0D8               	btfsc	status,0,c
  9312  001228  EF18  F009         	goto	u4341
  9313  00122C  EF1A  F009         	goto	u4340
  9314  001230                     u4341:
  9315  001230  EF32  F009         	goto	l5440
  9316  001234                     u4340:
  9317  001234                     
  9318                           ;TFT.c: 200: { int16_t t = x0; x0 = x1; x1 = t; };
  9319  001234  C017  F028         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_815
  9320  001238  C018  F029         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_815+1
  9321  00123C  C01B  F017         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  9322  001240  C01C  F018         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  9323  001244  C028  F01B         	movff	TFT_DrawLine@t_815,TFT_DrawLine@x1
  9324  001248  C029  F01C         	movff	TFT_DrawLine@t_815+1,TFT_DrawLine@x1+1
  9325                           
  9326                           ;TFT.c: 201: { int16_t t = y0; y0 = y1; y1 = t; };
  9327  00124C  C019  F02A         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_816
  9328  001250  C01A  F02B         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_816+1
  9329  001254  C01D  F019         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  9330  001258  C01E  F01A         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  9331  00125C  C02A  F01D         	movff	TFT_DrawLine@t_816,TFT_DrawLine@y1
  9332  001260  C02B  F01E         	movff	TFT_DrawLine@t_816+1,TFT_DrawLine@y1+1
  9333  001264                     l5440:
  9334                           
  9335                           ;TFT.c: 202: };TFT.c: 204: int16_t dx, dy;;TFT.c: 205: dx = x1 - x0;
  9336  001264  5017               	movf	TFT_DrawLine@x0^0,w,c
  9337  001266  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  9338  001268  6E34               	movwf	TFT_DrawLine@dx^0,c
  9339  00126A  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  9340  00126C  581C               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  9341  00126E  6E35               	movwf	(TFT_DrawLine@dx+1)^0,c
  9342  001270                     
  9343                           ;TFT.c: 206: dy = abs(y1 - y0);
  9344  001270  5019               	movf	TFT_DrawLine@y0^0,w,c
  9345  001272  5C1D               	subwf	TFT_DrawLine@y1^0,w,c
  9346  001274  6E05               	movwf	abs@a^0,c
  9347  001276  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  9348  001278  581E               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  9349  00127A  6E06               	movwf	(abs@a+1)^0,c
  9350  00127C  ECA8  F017         	call	_abs	;wreg free
  9351  001280  C005  F02C         	movff	?_abs,TFT_DrawLine@dy
  9352  001284  C006  F02D         	movff	?_abs+1,TFT_DrawLine@dy+1
  9353  001288                     
  9354                           ;TFT.c: 208: int16_t err = dx / 2;
  9355  001288  C034  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  9356  00128C  C035  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  9357  001290  0E00               	movlw	0
  9358  001292  6E08               	movwf	(___awdiv@divisor+1)^0,c
  9359  001294  0E02               	movlw	2
  9360  001296  6E07               	movwf	___awdiv@divisor^0,c
  9361  001298  ECCB  F00F         	call	___awdiv	;wreg free
  9362  00129C  C005  F030         	movff	?___awdiv,TFT_DrawLine@err
  9363  0012A0  C006  F031         	movff	?___awdiv+1,TFT_DrawLine@err+1
  9364                           
  9365                           ;TFT.c: 209: int16_t ystep;;TFT.c: 211: if(y0 < y1) {
  9366  0012A4  501D               	movf	TFT_DrawLine@y1^0,w,c
  9367  0012A6  5C19               	subwf	TFT_DrawLine@y0^0,w,c
  9368  0012A8  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  9369  0012AA  0A80               	xorlw	128
  9370  0012AC  6E21               	movwf	??_TFT_DrawLine^0,c
  9371  0012AE  501E               	movf	(TFT_DrawLine@y1+1)^0,w,c
  9372  0012B0  0A80               	xorlw	128
  9373  0012B2  5821               	subwfb	??_TFT_DrawLine^0,w,c
  9374  0012B4  B0D8               	btfsc	status,0,c
  9375  0012B6  EF5F  F009         	goto	u4351
  9376  0012BA  EF61  F009         	goto	u4350
  9377  0012BE                     u4351:
  9378  0012BE  EF67  F009         	goto	l308
  9379  0012C2                     u4350:
  9380  0012C2                     
  9381                           ;TFT.c: 212: ystep = 1;
  9382  0012C2  0E00               	movlw	0
  9383  0012C4  6E2F               	movwf	(TFT_DrawLine@ystep+1)^0,c
  9384  0012C6  0E01               	movlw	1
  9385  0012C8  6E2E               	movwf	TFT_DrawLine@ystep^0,c
  9386                           
  9387                           ;TFT.c: 213: } else {
  9388  0012CA  EFA7  F009         	goto	l5462
  9389  0012CE                     l308:
  9390                           
  9391                           ;TFT.c: 214: ystep = -1;
  9392  0012CE  682E               	setf	TFT_DrawLine@ystep^0,c
  9393  0012D0  682F               	setf	(TFT_DrawLine@ystep+1)^0,c
  9394  0012D2  EFA7  F009         	goto	l5462
  9395  0012D6                     l5448:
  9396                           
  9397                           ;TFT.c: 218: if(steep) {
  9398  0012D6  5032               	movf	TFT_DrawLine@steep^0,w,c
  9399  0012D8  1033               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  9400  0012DA  B4D8               	btfsc	status,2,c
  9401  0012DC  EF72  F009         	goto	u4361
  9402  0012E0  EF74  F009         	goto	u4360
  9403  0012E4                     u4361:
  9404  0012E4  EF84  F009         	goto	l5452
  9405  0012E8                     u4360:
  9406  0012E8                     
  9407                           ;TFT.c: 219: TFT_DrawPixel(y0, x0, color);
  9408  0012E8  C019  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  9409  0012EC  C01A  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  9410  0012F0  C017  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  9411  0012F4  C018  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  9412  0012F8  C01F  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  9413  0012FC  C020  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  9414  001300  ECF3  F00E         	call	_TFT_DrawPixel	;wreg free
  9415                           
  9416                           ;TFT.c: 220: } else {
  9417  001304  EF92  F009         	goto	l5454
  9418  001308                     l5452:
  9419                           
  9420                           ;TFT.c: 221: TFT_DrawPixel(x0, y0, color);
  9421  001308  C017  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  9422  00130C  C018  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  9423  001310  C019  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  9424  001314  C01A  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  9425  001318  C01F  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  9426  00131C  C020  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  9427  001320  ECF3  F00E         	call	_TFT_DrawPixel	;wreg free
  9428  001324                     l5454:
  9429                           
  9430                           ;TFT.c: 222: };TFT.c: 223: err -= dy;
  9431  001324  502C               	movf	TFT_DrawLine@dy^0,w,c
  9432  001326  5E30               	subwf	TFT_DrawLine@err^0,f,c
  9433  001328  502D               	movf	(TFT_DrawLine@dy+1)^0,w,c
  9434  00132A  5A31               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  9435  00132C                     
  9436                           ;TFT.c: 224: if(err < 0) {
  9437  00132C  BE31               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  9438  00132E  EF9D  F009         	goto	u4370
  9439  001332  EF9B  F009         	goto	u4371
  9440  001336                     u4371:
  9441  001336  EFA5  F009         	goto	l5460
  9442  00133A                     u4370:
  9443  00133A                     
  9444                           ;TFT.c: 225: y0 += ystep;
  9445  00133A  502E               	movf	TFT_DrawLine@ystep^0,w,c
  9446  00133C  2619               	addwf	TFT_DrawLine@y0^0,f,c
  9447  00133E  502F               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  9448  001340  221A               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  9449                           
  9450                           ;TFT.c: 226: err += dx;
  9451  001342  5034               	movf	TFT_DrawLine@dx^0,w,c
  9452  001344  2630               	addwf	TFT_DrawLine@err^0,f,c
  9453  001346  5035               	movf	(TFT_DrawLine@dx+1)^0,w,c
  9454  001348  2231               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  9455  00134A                     l5460:
  9456  00134A  4A17               	infsnz	TFT_DrawLine@x0^0,f,c
  9457  00134C  2A18               	incf	(TFT_DrawLine@x0+1)^0,f,c
  9458  00134E                     l5462:
  9459  00134E  5017               	movf	TFT_DrawLine@x0^0,w,c
  9460  001350  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  9461  001352  501C               	movf	(TFT_DrawLine@x1+1)^0,w,c
  9462  001354  0A80               	xorlw	128
  9463  001356  6E21               	movwf	??_TFT_DrawLine^0,c
  9464  001358  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  9465  00135A  0A80               	xorlw	128
  9466  00135C  5821               	subwfb	??_TFT_DrawLine^0,w,c
  9467  00135E  B0D8               	btfsc	status,0,c
  9468  001360  EFB4  F009         	goto	u4381
  9469  001364  EFB6  F009         	goto	u4380
  9470  001368                     u4381:
  9471  001368  EF6B  F009         	goto	l5448
  9472  00136C                     u4380:
  9473  00136C  0012               	return		;funcret
  9474  00136E                     __end_of_TFT_DrawLine:
  9475                           	opt callstack 0
  9476                           
  9477 ;; *************** function _abs *****************
  9478 ;; Defined at:
  9479 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;  a               2    4[COMRAM] int 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  2    4[COMRAM] int 
  9486 ;; Registers used:
  9487 ;;		wreg, status,2, status,0
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9493 ;;      Params:         2       0       0       0       0       0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9495 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9496 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9497 ;;Total ram usage:        4 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    2
  9500 ;; This function calls:
  9501 ;;		Nothing
  9502 ;; This function is called by:
  9503 ;;		_TFT_DrawLine
  9504 ;;		_Ecg_ProcessHeartbeat
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           	psect	text37
  9509  002F50                     __ptext37:
  9510                           	opt callstack 0
  9511  002F50                     _abs:
  9512                           	opt callstack 23
  9513  002F50  BE06               	btfsc	(abs@a+1)^0,7,c
  9514  002F52  EFAF  F017         	goto	u4240
  9515  002F56  EFAD  F017         	goto	u4241
  9516  002F5A                     u4241:
  9517  002F5A  EFBD  F017         	goto	l1455
  9518  002F5E                     u4240:
  9519  002F5E  C005  F007         	movff	abs@a,??_abs
  9520  002F62  C006  F008         	movff	abs@a+1,??_abs+1
  9521  002F66  1E07               	comf	??_abs^0,f,c
  9522  002F68  1E08               	comf	(??_abs+1)^0,f,c
  9523  002F6A  4A07               	infsnz	??_abs^0,f,c
  9524  002F6C  2A08               	incf	(??_abs+1)^0,f,c
  9525  002F6E  C007  F005         	movff	??_abs,?_abs
  9526  002F72  C008  F006         	movff	??_abs+1,?_abs+1
  9527  002F76  EFC1  F017         	goto	l1456
  9528  002F7A                     l1455:
  9529  002F7A  C005  F005         	movff	abs@a,?_abs
  9530  002F7E  C006  F006         	movff	abs@a+1,?_abs+1
  9531  002F82                     l1456:
  9532  002F82  0012               	return		;funcret
  9533  002F84                     __end_of_abs:
  9534                           	opt callstack 0
  9535                           
  9536 ;; *************** function ___awdiv *****************
  9537 ;; Defined at:
  9538 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  9539 ;; Parameters:    Size  Location     Type
  9540 ;;  dividend        2    4[COMRAM] int 
  9541 ;;  divisor         2    6[COMRAM] int 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  quotient        2   10[COMRAM] int 
  9544 ;;  sign            1    9[COMRAM] unsigned char 
  9545 ;;  counter         1    8[COMRAM] unsigned char 
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  2    4[COMRAM] int 
  9548 ;; Registers used:
  9549 ;;		wreg, status,2, status,0
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9555 ;;      Params:         4       0       0       0       0       0       0       0       0
  9556 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9558 ;;      Totals:         8       0       0       0       0       0       0       0       0
  9559 ;;Total ram usage:        8 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; Hardware stack levels required when called:    2
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_TFT_DrawLine
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           	psect	text38
  9570  001F96                     __ptext38:
  9571                           	opt callstack 0
  9572  001F96                     ___awdiv:
  9573                           	opt callstack 23
  9574  001F96  0E00               	movlw	0
  9575  001F98  6E0A               	movwf	___awdiv@sign^0,c
  9576  001F9A  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  9577  001F9C  EFD4  F00F         	goto	u4250
  9578  001FA0  EFD2  F00F         	goto	u4251
  9579  001FA4                     u4251:
  9580  001FA4  EFDA  F00F         	goto	l5394
  9581  001FA8                     u4250:
  9582  001FA8  6C07               	negf	___awdiv@divisor^0,c
  9583  001FAA  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  9584  001FAC  B0D8               	btfsc	status,0,c
  9585  001FAE  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  9586  001FB0  0E01               	movlw	1
  9587  001FB2  6E0A               	movwf	___awdiv@sign^0,c
  9588  001FB4                     l5394:
  9589  001FB4  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  9590  001FB6  EFE1  F00F         	goto	u4260
  9591  001FBA  EFDF  F00F         	goto	u4261
  9592  001FBE                     u4261:
  9593  001FBE  EFE7  F00F         	goto	l5400
  9594  001FC2                     u4260:
  9595  001FC2  6C05               	negf	___awdiv@dividend^0,c
  9596  001FC4  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  9597  001FC6  B0D8               	btfsc	status,0,c
  9598  001FC8  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  9599  001FCA  0E01               	movlw	1
  9600  001FCC  1A0A               	xorwf	___awdiv@sign^0,f,c
  9601  001FCE                     l5400:
  9602  001FCE  0E00               	movlw	0
  9603  001FD0  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  9604  001FD2  0E00               	movlw	0
  9605  001FD4  6E0B               	movwf	___awdiv@quotient^0,c
  9606  001FD6  5007               	movf	___awdiv@divisor^0,w,c
  9607  001FD8  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  9608  001FDA  B4D8               	btfsc	status,2,c
  9609  001FDC  EFF2  F00F         	goto	u4271
  9610  001FE0  EFF4  F00F         	goto	u4270
  9611  001FE4                     u4271:
  9612  001FE4  EF1C  F010         	goto	l5422
  9613  001FE8                     u4270:
  9614  001FE8  0E01               	movlw	1
  9615  001FEA  6E09               	movwf	___awdiv@counter^0,c
  9616  001FEC  EFFC  F00F         	goto	l5408
  9617  001FF0                     l5406:
  9618  001FF0  90D8               	bcf	status,0,c
  9619  001FF2  3607               	rlcf	___awdiv@divisor^0,f,c
  9620  001FF4  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  9621  001FF6  2A09               	incf	___awdiv@counter^0,f,c
  9622  001FF8                     l5408:
  9623  001FF8  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  9624  001FFA  EF01  F010         	goto	u4281
  9625  001FFE  EF03  F010         	goto	u4280
  9626  002002                     u4281:
  9627  002002  EFF8  F00F         	goto	l5406
  9628  002006                     u4280:
  9629  002006                     l5410:
  9630  002006  90D8               	bcf	status,0,c
  9631  002008  360B               	rlcf	___awdiv@quotient^0,f,c
  9632  00200A  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  9633  00200C  5007               	movf	___awdiv@divisor^0,w,c
  9634  00200E  5C05               	subwf	___awdiv@dividend^0,w,c
  9635  002010  5008               	movf	(___awdiv@divisor+1)^0,w,c
  9636  002012  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  9637  002014  A0D8               	btfss	status,0,c
  9638  002016  EF0F  F010         	goto	u4291
  9639  00201A  EF11  F010         	goto	u4290
  9640  00201E                     u4291:
  9641  00201E  EF16  F010         	goto	l5418
  9642  002022                     u4290:
  9643  002022  5007               	movf	___awdiv@divisor^0,w,c
  9644  002024  5E05               	subwf	___awdiv@dividend^0,f,c
  9645  002026  5008               	movf	(___awdiv@divisor+1)^0,w,c
  9646  002028  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  9647  00202A  800B               	bsf	___awdiv@quotient^0,0,c
  9648  00202C                     l5418:
  9649  00202C  90D8               	bcf	status,0,c
  9650  00202E  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  9651  002030  3207               	rrcf	___awdiv@divisor^0,f,c
  9652  002032  2E09               	decfsz	___awdiv@counter^0,f,c
  9653  002034  EF03  F010         	goto	l5410
  9654  002038                     l5422:
  9655  002038  500A               	movf	___awdiv@sign^0,w,c
  9656  00203A  B4D8               	btfsc	status,2,c
  9657  00203C  EF22  F010         	goto	u4301
  9658  002040  EF24  F010         	goto	u4300
  9659  002044                     u4301:
  9660  002044  EF28  F010         	goto	l5426
  9661  002048                     u4300:
  9662  002048  6C0B               	negf	___awdiv@quotient^0,c
  9663  00204A  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  9664  00204C  B0D8               	btfsc	status,0,c
  9665  00204E  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  9666  002050                     l5426:
  9667  002050  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  9668  002054  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  9669  002058  0012               	return		;funcret
  9670  00205A                     __end_of___awdiv:
  9671                           	opt callstack 0
  9672                           
  9673 ;; *************** function _TFT_DrawPixel *****************
  9674 ;; Defined at:
  9675 ;;		line 168 in file "TFT.c"
  9676 ;; Parameters:    Size  Location     Type
  9677 ;;  x               2   12[COMRAM] unsigned int 
  9678 ;;  y               2   14[COMRAM] unsigned int 
  9679 ;;  color           2   16[COMRAM] unsigned int 
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;  v               2   20[COMRAM] unsigned int 
  9682 ;;  h               2   18[COMRAM] unsigned int 
  9683 ;; Return value:  Size  Location     Type
  9684 ;;                  1    wreg      void 
  9685 ;; Registers used:
  9686 ;;		wreg, status,2, status,0, cstack
  9687 ;; Tracked objects:
  9688 ;;		On entry : 0/0
  9689 ;;		On exit  : 0/0
  9690 ;;		Unchanged: 0/0
  9691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9692 ;;      Params:         6       0       0       0       0       0       0       0       0
  9693 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9695 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9696 ;;Total ram usage:       10 bytes
  9697 ;; Hardware stack levels used:    1
  9698 ;; Hardware stack levels required when called:    3
  9699 ;; This function calls:
  9700 ;;		_TFT_OrientationGet
  9701 ;;		_TFT_WriteRegister
  9702 ;; This function is called by:
  9703 ;;		_TFT_DrawLine
  9704 ;;		_TFT_DrawChar
  9705 ;;		_TFT_DrawBitmap
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text39
  9710  001DE6                     __ptext39:
  9711                           	opt callstack 0
  9712  001DE6                     _TFT_DrawPixel:
  9713                           	opt callstack 23
  9714  001DE6                     
  9715                           ;TFT.c: 169: uint16_t h, v;;TFT.c: 170: switch(TFT_OrientationGet()) {
  9716  001DE6  EF2D  F00F         	goto	l5372
  9717  001DEA                     l298:
  9718                           
  9719                           ;TFT.c: 172: h = x;
  9720  001DEA  C00D  F013         	movff	TFT_DrawPixel@x,TFT_DrawPixel@h
  9721  001DEE  C00E  F014         	movff	TFT_DrawPixel@x+1,TFT_DrawPixel@h+1
  9722                           
  9723                           ;TFT.c: 173: v = y;
  9724  001DF2  C00F  F015         	movff	TFT_DrawPixel@y,TFT_DrawPixel@v
  9725  001DF6  C010  F016         	movff	TFT_DrawPixel@y+1,TFT_DrawPixel@v+1
  9726                           
  9727                           ;TFT.c: 174: break;
  9728  001DFA  EF41  F00F         	goto	l5374
  9729  001DFE                     l5362:
  9730                           
  9731                           ;TFT.c: 176: h = 240 - y;
  9732  001DFE  500F               	movf	TFT_DrawPixel@y^0,w,c
  9733  001E00  08F0               	sublw	240
  9734  001E02  6E13               	movwf	TFT_DrawPixel@h^0,c
  9735  001E04  5010               	movf	(TFT_DrawPixel@y+1)^0,w,c
  9736  001E06  A0D8               	btfss	status,0,c
  9737  001E08  2AE8               	incf	wreg,f,c
  9738  001E0A  0800               	sublw	0
  9739  001E0C  6E14               	movwf	(TFT_DrawPixel@h+1)^0,c
  9740  001E0E                     
  9741                           ;TFT.c: 177: v = x;
  9742  001E0E  C00D  F015         	movff	TFT_DrawPixel@x,TFT_DrawPixel@v
  9743  001E12  C00E  F016         	movff	TFT_DrawPixel@x+1,TFT_DrawPixel@v+1
  9744                           
  9745                           ;TFT.c: 178: break;
  9746  001E16  EF41  F00F         	goto	l5374
  9747  001E1A                     l5366:
  9748                           
  9749                           ;TFT.c: 180: h = 240 - x;
  9750  001E1A  500D               	movf	TFT_DrawPixel@x^0,w,c
  9751  001E1C  08F0               	sublw	240
  9752  001E1E  6E13               	movwf	TFT_DrawPixel@h^0,c
  9753  001E20  500E               	movf	(TFT_DrawPixel@x+1)^0,w,c
  9754  001E22  A0D8               	btfss	status,0,c
  9755  001E24  2AE8               	incf	wreg,f,c
  9756  001E26  0800               	sublw	0
  9757  001E28  6E14               	movwf	(TFT_DrawPixel@h+1)^0,c
  9758                           
  9759                           ;TFT.c: 181: v = 400 - y;
  9760  001E2A  500F               	movf	TFT_DrawPixel@y^0,w,c
  9761  001E2C  0890               	sublw	144
  9762  001E2E  6E15               	movwf	TFT_DrawPixel@v^0,c
  9763  001E30  5010               	movf	(TFT_DrawPixel@y+1)^0,w,c
  9764  001E32  A0D8               	btfss	status,0,c
  9765  001E34  2AE8               	incf	wreg,f,c
  9766  001E36  0801               	sublw	1
  9767  001E38  6E16               	movwf	(TFT_DrawPixel@v+1)^0,c
  9768                           
  9769                           ;TFT.c: 182: break;
  9770  001E3A  EF41  F00F         	goto	l5374
  9771  001E3E                     l302:
  9772                           
  9773                           ;TFT.c: 184: h = y;
  9774  001E3E  C00F  F013         	movff	TFT_DrawPixel@y,TFT_DrawPixel@h
  9775  001E42  C010  F014         	movff	TFT_DrawPixel@y+1,TFT_DrawPixel@h+1
  9776  001E46                     
  9777                           ;TFT.c: 185: v = 400 - x;
  9778  001E46  500D               	movf	TFT_DrawPixel@x^0,w,c
  9779  001E48  0890               	sublw	144
  9780  001E4A  6E15               	movwf	TFT_DrawPixel@v^0,c
  9781  001E4C  500E               	movf	(TFT_DrawPixel@x+1)^0,w,c
  9782  001E4E  A0D8               	btfss	status,0,c
  9783  001E50  2AE8               	incf	wreg,f,c
  9784  001E52  0801               	sublw	1
  9785  001E54  6E16               	movwf	(TFT_DrawPixel@v+1)^0,c
  9786                           
  9787                           ;TFT.c: 186: break;
  9788  001E56  EF41  F00F         	goto	l5374
  9789  001E5A                     l5372:
  9790  001E5A  EC7E  F018         	call	_TFT_OrientationGet	;wreg free
  9791                           
  9792                           ; Switch size 1, requested type "simple"
  9793                           ; Number of cases is 4, Range of values is 0 to 3
  9794                           ; switch strategies available:
  9795                           ; Name         Instructions Cycles
  9796                           ; simple_byte           13     7 (average)
  9797                           ;	Chosen strategy is simple_byte
  9798  001E5E  0A00               	xorlw	0	; case 0
  9799  001E60  B4D8               	btfsc	status,2,c
  9800  001E62  EFF5  F00E         	goto	l298
  9801  001E66  0A01               	xorlw	1	; case 1
  9802  001E68  B4D8               	btfsc	status,2,c
  9803  001E6A  EFFF  F00E         	goto	l5362
  9804  001E6E  0A03               	xorlw	3	; case 2
  9805  001E70  B4D8               	btfsc	status,2,c
  9806  001E72  EF0D  F00F         	goto	l5366
  9807  001E76  0A01               	xorlw	1	; case 3
  9808  001E78  B4D8               	btfsc	status,2,c
  9809  001E7A  EF1F  F00F         	goto	l302
  9810  001E7E  EF41  F00F         	goto	l5374
  9811  001E82                     l5374:
  9812                           
  9813                           ;TFT.c: 188: TFT_WriteRegister(0x0200, h);
  9814  001E82  0E02               	movlw	2
  9815  001E84  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9816  001E86  0E00               	movlw	0
  9817  001E88  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9818  001E8A  C013  F007         	movff	TFT_DrawPixel@h,TFT_WriteRegister@data
  9819  001E8E  C014  F008         	movff	TFT_DrawPixel@h+1,TFT_WriteRegister@data+1
  9820  001E92  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
  9821                           
  9822                           ;TFT.c: 189: TFT_WriteRegister(0x0201, v);
  9823  001E96  0E02               	movlw	2
  9824  001E98  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9825  001E9A  0E01               	movlw	1
  9826  001E9C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9827  001E9E  C015  F007         	movff	TFT_DrawPixel@v,TFT_WriteRegister@data
  9828  001EA2  C016  F008         	movff	TFT_DrawPixel@v+1,TFT_WriteRegister@data+1
  9829  001EA6  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
  9830                           
  9831                           ;TFT.c: 190: TFT_WriteRegister(0x0202, color);
  9832  001EAA  0E02               	movlw	2
  9833  001EAC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  9834  001EAE  0E02               	movlw	2
  9835  001EB0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  9836  001EB2  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  9837  001EB6  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  9838  001EBA  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
  9839  001EBE  0012               	return		;funcret
  9840  001EC0                     __end_of_TFT_DrawPixel:
  9841                           	opt callstack 0
  9842                           
  9843 ;; *************** function _TFT_DrawFillRect *****************
  9844 ;; Defined at:
  9845 ;;		line 231 in file "TFT.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;  x               2   29[COMRAM] unsigned int 
  9848 ;;  y               2   31[COMRAM] unsigned int 
  9849 ;;  w               2   33[COMRAM] unsigned int 
  9850 ;;  h               2   35[COMRAM] unsigned int 
  9851 ;;  color           2   37[COMRAM] unsigned int 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;		None
  9854 ;; Return value:  Size  Location     Type
  9855 ;;                  1    wreg      void 
  9856 ;; Registers used:
  9857 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9858 ;; Tracked objects:
  9859 ;;		On entry : 0/0
  9860 ;;		On exit  : 0/0
  9861 ;;		Unchanged: 0/0
  9862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9863 ;;      Params:        10       0       0       0       0       0       0       0       0
  9864 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9865 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9866 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9867 ;;Total ram usage:       14 bytes
  9868 ;; Hardware stack levels used:    1
  9869 ;; Hardware stack levels required when called:    5
  9870 ;; This function calls:
  9871 ;;		_TFT_Flood
  9872 ;;		_TFT_FullScreen
  9873 ;;		_TFT_SetAddrWindow
  9874 ;;		___wmul
  9875 ;; This function is called by:
  9876 ;;		_TFT_DrawChar
  9877 ;;		_TFT_ConsolePrintLine
  9878 ;;		_Ecg_ProcessHeartbeat
  9879 ;;		_Ecg_Draw
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           	psect	text40
  9884  0026E8                     __ptext40:
  9885                           	opt callstack 0
  9886  0026E8                     _TFT_DrawFillRect:
  9887                           	opt callstack 21
  9888  0026E8                     
  9889                           ;TFT.c: 232: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h - 1));
  9890  0026E8  C01E  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  9891  0026EC  C01F  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  9892  0026F0  C020  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  9893  0026F4  C021  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  9894  0026F8  5022               	movf	TFT_DrawFillRect@w^0,w,c
  9895  0026FA  241E               	addwf	TFT_DrawFillRect@x^0,w,c
  9896  0026FC  6E28               	movwf	??_TFT_DrawFillRect^0,c
  9897  0026FE  5023               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  9898  002700  201F               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  9899  002702  6E29               	movwf	(??_TFT_DrawFillRect+1)^0,c
  9900  002704  0EFF               	movlw	255
  9901  002706  2428               	addwf	??_TFT_DrawFillRect^0,w,c
  9902  002708  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  9903  00270A  0EFF               	movlw	255
  9904  00270C  2029               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  9905  00270E  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  9906  002710  5024               	movf	TFT_DrawFillRect@h^0,w,c
  9907  002712  2420               	addwf	TFT_DrawFillRect@y^0,w,c
  9908  002714  6E2A               	movwf	(??_TFT_DrawFillRect+2)^0,c
  9909  002716  5025               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  9910  002718  2021               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  9911  00271A  6E2B               	movwf	(??_TFT_DrawFillRect+3)^0,c
  9912  00271C  0EFF               	movlw	255
  9913  00271E  242A               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  9914  002720  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  9915  002722  0EFF               	movlw	255
  9916  002724  202B               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  9917  002726  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  9918  002728  EC84  F007         	call	_TFT_SetAddrWindow	;wreg free
  9919  00272C                     
  9920                           ;TFT.c: 233: TFT_Flood(color, (w * h));
  9921  00272C  C026  F00D         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  9922  002730  C027  F00E         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  9923  002734  C022  F005         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  9924  002738  C023  F006         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  9925  00273C  C024  F007         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  9926  002740  C025  F008         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  9927  002744  EC1F  F018         	call	___wmul	;wreg free
  9928  002748  C005  F00F         	movff	?___wmul,TFT_Flood@len
  9929  00274C  C006  F010         	movff	?___wmul+1,TFT_Flood@len+1
  9930  002750  6A11               	clrf	(TFT_Flood@len+2)^0,c
  9931  002752  6A12               	clrf	(TFT_Flood@len+3)^0,c
  9932  002754  ECB7  F009         	call	_TFT_Flood	;wreg free
  9933  002758                     
  9934                           ;TFT.c: 234: TFT_FullScreen(0);
  9935  002758  0E00               	movlw	0
  9936  00275A  6E1D               	movwf	(TFT_FullScreen@color+1)^0,c
  9937  00275C  0E00               	movlw	0
  9938  00275E  6E1C               	movwf	TFT_FullScreen@color^0,c
  9939  002760  ECD2  F015         	call	_TFT_FullScreen	;wreg free
  9940  002764  0012               	return		;funcret
  9941  002766                     __end_of_TFT_DrawFillRect:
  9942                           	opt callstack 0
  9943                           
  9944 ;; *************** function ___wmul *****************
  9945 ;; Defined at:
  9946 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;  multiplier      2    4[COMRAM] unsigned int 
  9949 ;;  multiplicand    2    6[COMRAM] unsigned int 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;  product         2    8[COMRAM] unsigned int 
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  2    4[COMRAM] unsigned int 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0, prodl, prodh
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9961 ;;      Params:         4       0       0       0       0       0       0       0       0
  9962 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9964 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9965 ;;Total ram usage:        6 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:    2
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_TFT_DrawFillRect
  9972 ;;		_TFT_DrawChar
  9973 ;;		_sprintf
  9974 ;;		_atoi
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text41
  9979  00303E                     __ptext41:
  9980                           	opt callstack 0
  9981  00303E                     ___wmul:
  9982                           	opt callstack 26
  9983  00303E  5005               	movf	___wmul@multiplier^0,w,c
  9984  003040  0207               	mulwf	___wmul@multiplicand^0,c
  9985  003042  CFF3 F009          	movff	prodl,___wmul@product
  9986  003046  CFF4 F00A          	movff	prodh,___wmul@product+1
  9987  00304A  5005               	movf	___wmul@multiplier^0,w,c
  9988  00304C  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  9989  00304E  50F3               	movf	243,w,c
  9990  003050  260A               	addwf	(___wmul@product+1)^0,f,c
  9991  003052  5006               	movf	(___wmul@multiplier+1)^0,w,c
  9992  003054  0207               	mulwf	___wmul@multiplicand^0,c
  9993  003056  50F3               	movf	243,w,c
  9994  003058  260A               	addwf	(___wmul@product+1)^0,f,c
  9995  00305A  C009  F005         	movff	___wmul@product,?___wmul
  9996  00305E  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  9997  003062  0012               	return		;funcret
  9998  003064                     __end_of___wmul:
  9999                           	opt callstack 0
 10000                           
 10001 ;; *************** function _TFT_FullScreen *****************
 10002 ;; Defined at:
 10003 ;;		line 161 in file "TFT.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  color           2   27[COMRAM] unsigned int 
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;		None
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  1    wreg      void 
 10010 ;; Registers used:
 10011 ;;		wreg, status,2, status,0, cstack
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/0
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10017 ;;      Params:         2       0       0       0       0       0       0       0       0
 10018 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10019 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10020 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10021 ;;Total ram usage:        2 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:    4
 10024 ;; This function calls:
 10025 ;;		_TFT_Flood
 10026 ;;		_TFT_GetHeight
 10027 ;;		_TFT_GetWidth
 10028 ;;		_TFT_SetAddrWindow
 10029 ;; This function is called by:
 10030 ;;		_TFT_OrientationSet
 10031 ;;		_TFT_DrawFillRect
 10032 ;;		_Ecg_Background_Leads_Ok
 10033 ;;		_Ecg_Background_Leads_Failure
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           	psect	text42
 10038  002BA4                     __ptext42:
 10039                           	opt callstack 0
 10040  002BA4                     _TFT_FullScreen:
 10041                           	opt callstack 21
 10042  002BA4                     
 10043                           ;TFT.c: 162: TFT_SetAddrWindow(0, 0, TFT_GetWidth(), TFT_GetHeight());
 10044  002BA4  0E00               	movlw	0
 10045  002BA6  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
 10046  002BA8  0E00               	movlw	0
 10047  002BAA  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
 10048  002BAC  0E00               	movlw	0
 10049  002BAE  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
 10050  002BB0  0E00               	movlw	0
 10051  002BB2  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
 10052  002BB4  EC4F  F016         	call	_TFT_GetWidth	;wreg free
 10053  002BB8  C005  F011         	movff	?_TFT_GetWidth,TFT_SetAddrWindow@x2
 10054  002BBC  C006  F012         	movff	?_TFT_GetWidth+1,TFT_SetAddrWindow@x2+1
 10055  002BC0  EC76  F016         	call	_TFT_GetHeight	;wreg free
 10056  002BC4  C005  F013         	movff	?_TFT_GetHeight,TFT_SetAddrWindow@y2
 10057  002BC8  C006  F014         	movff	?_TFT_GetHeight+1,TFT_SetAddrWindow@y2+1
 10058  002BCC  EC84  F007         	call	_TFT_SetAddrWindow	;wreg free
 10059  002BD0                     
 10060                           ;TFT.c: 163: if(color != 0) {
 10061  002BD0  501C               	movf	TFT_FullScreen@color^0,w,c
 10062  002BD2  101D               	iorwf	(TFT_FullScreen@color+1)^0,w,c
 10063  002BD4  B4D8               	btfsc	status,2,c
 10064  002BD6  EFEF  F015         	goto	u4231
 10065  002BDA  EFF1  F015         	goto	u4230
 10066  002BDE                     u4231:
 10067  002BDE  EFFF  F015         	goto	l294
 10068  002BE2                     u4230:
 10069  002BE2                     
 10070                           ;TFT.c: 164: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
 10071  002BE2  C01C  F00D         	movff	TFT_FullScreen@color,TFT_Flood@color
 10072  002BE6  C01D  F00E         	movff	TFT_FullScreen@color+1,TFT_Flood@color+1
 10073  002BEA  0E00               	movlw	0
 10074  002BEC  6E0F               	movwf	TFT_Flood@len^0,c
 10075  002BEE  0E77               	movlw	119
 10076  002BF0  6E10               	movwf	(TFT_Flood@len+1)^0,c
 10077  002BF2  0E01               	movlw	1
 10078  002BF4  6E11               	movwf	(TFT_Flood@len+2)^0,c
 10079  002BF6  0E00               	movlw	0
 10080  002BF8  6E12               	movwf	(TFT_Flood@len+3)^0,c
 10081  002BFA  ECB7  F009         	call	_TFT_Flood	;wreg free
 10082  002BFE                     l294:
 10083  002BFE  0012               	return		;funcret
 10084  002C00                     __end_of_TFT_FullScreen:
 10085                           	opt callstack 0
 10086                           
 10087 ;; *************** function _TFT_SetAddrWindow *****************
 10088 ;; Defined at:
 10089 ;;		line 115 in file "TFT.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  x1              2   12[COMRAM] unsigned int 
 10092 ;;  y1              2   14[COMRAM] unsigned int 
 10093 ;;  x2              2   16[COMRAM] unsigned int 
 10094 ;;  y2              2   18[COMRAM] unsigned int 
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;  tmp             2    0        unsigned int 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  1    wreg      void 
 10099 ;; Registers used:
 10100 ;;		wreg, status,2, status,0, cstack
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10106 ;;      Params:         8       0       0       0       0       0       0       0       0
 10107 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10109 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10110 ;;Total ram usage:        8 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; Hardware stack levels required when called:    3
 10113 ;; This function calls:
 10114 ;;		_TFT_OrientationGet
 10115 ;;		_TFT_WriteRegister
 10116 ;; This function is called by:
 10117 ;;		_TFT_FullScreen
 10118 ;;		_TFT_DrawFillRect
 10119 ;; This function uses a non-reentrant model
 10120 ;;
 10121                           
 10122                           	psect	text43
 10123  000F08                     __ptext43:
 10124                           	opt callstack 0
 10125  000F08                     _TFT_SetAddrWindow:
 10126                           	opt callstack 22
 10127  000F08                     
 10128                           ;TFT.c: 116: uint16_t tmp;;TFT.c: 117: switch(TFT_OrientationGet()) {
 10129  000F08  EFAE  F008         	goto	l5324
 10130  000F0C                     l5302:
 10131                           
 10132                           ;TFT.c: 120: TFT_WriteRegister(0x0210, x1);
 10133  000F0C  0E02               	movlw	2
 10134  000F0E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10135  000F10  0E10               	movlw	16
 10136  000F12  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10137  000F14  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
 10138  000F18  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
 10139  000F1C  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10140                           
 10141                           ;TFT.c: 121: TFT_WriteRegister(0x0211, x2);
 10142  000F20  0E02               	movlw	2
 10143  000F22  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10144  000F24  0E11               	movlw	17
 10145  000F26  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10146  000F28  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
 10147  000F2C  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
 10148  000F30  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10149                           
 10150                           ;TFT.c: 122: TFT_WriteRegister(0x0212, y1);
 10151  000F34  0E02               	movlw	2
 10152  000F36  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10153  000F38  0E12               	movlw	18
 10154  000F3A  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10155  000F3C  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
 10156  000F40  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
 10157  000F44  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10158                           
 10159                           ;TFT.c: 123: TFT_WriteRegister(0x0213, y2);
 10160  000F48  0E02               	movlw	2
 10161  000F4A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10162  000F4C  0E13               	movlw	19
 10163  000F4E  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10164  000F50  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
 10165  000F54  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
 10166  000F58  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10167                           
 10168                           ;TFT.c: 125: TFT_WriteRegister(0x0200, x1);
 10169  000F5C  0E02               	movlw	2
 10170  000F5E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10171  000F60  0E00               	movlw	0
 10172  000F62  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10173  000F64  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
 10174  000F68  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
 10175  000F6C  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10176                           
 10177                           ;TFT.c: 126: TFT_WriteRegister(0x0201, y2);
 10178  000F70  0E02               	movlw	2
 10179  000F72  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10180  000F74  0E01               	movlw	1
 10181  000F76  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10182  000F78  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
 10183  000F7C  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
 10184  000F80  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10185                           
 10186                           ;TFT.c: 127: break;
 10187  000F84  EFC2  F008         	goto	l290
 10188  000F88                     l5304:
 10189                           
 10190                           ;TFT.c: 130: TFT_WriteRegister(0x0210, 240 - 1 - y2);
 10191  000F88  0E02               	movlw	2
 10192  000F8A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10193  000F8C  0E10               	movlw	16
 10194  000F8E  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10195  000F90  5013               	movf	TFT_SetAddrWindow@y2^0,w,c
 10196  000F92  08EF               	sublw	239
 10197  000F94  6E07               	movwf	TFT_WriteRegister@data^0,c
 10198  000F96  5014               	movf	(TFT_SetAddrWindow@y2+1)^0,w,c
 10199  000F98  A0D8               	btfss	status,0,c
 10200  000F9A  2AE8               	incf	wreg,f,c
 10201  000F9C  0800               	sublw	0
 10202  000F9E  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10203  000FA0  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10204                           
 10205                           ;TFT.c: 131: TFT_WriteRegister(0x0211, 240 - 1 - y1);
 10206  000FA4  0E02               	movlw	2
 10207  000FA6  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10208  000FA8  0E11               	movlw	17
 10209  000FAA  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10210  000FAC  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
 10211  000FAE  08EF               	sublw	239
 10212  000FB0  6E07               	movwf	TFT_WriteRegister@data^0,c
 10213  000FB2  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
 10214  000FB4  A0D8               	btfss	status,0,c
 10215  000FB6  2AE8               	incf	wreg,f,c
 10216  000FB8  0800               	sublw	0
 10217  000FBA  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10218  000FBC  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10219  000FC0                     
 10220                           ;TFT.c: 132: TFT_WriteRegister(0x0212, x1);
 10221  000FC0  0E02               	movlw	2
 10222  000FC2  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10223  000FC4  0E12               	movlw	18
 10224  000FC6  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10225  000FC8  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
 10226  000FCC  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
 10227  000FD0  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10228  000FD4                     
 10229                           ;TFT.c: 133: TFT_WriteRegister(0x0213, x2);
 10230  000FD4  0E02               	movlw	2
 10231  000FD6  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10232  000FD8  0E13               	movlw	19
 10233  000FDA  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10234  000FDC  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
 10235  000FE0  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
 10236  000FE4  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10237                           
 10238                           ;TFT.c: 135: TFT_WriteRegister(0x0200, 240 - 1 - y1);
 10239  000FE8  0E02               	movlw	2
 10240  000FEA  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10241  000FEC  0E00               	movlw	0
 10242  000FEE  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10243  000FF0  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
 10244  000FF2  08EF               	sublw	239
 10245  000FF4  6E07               	movwf	TFT_WriteRegister@data^0,c
 10246  000FF6  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
 10247  000FF8  A0D8               	btfss	status,0,c
 10248  000FFA  2AE8               	incf	wreg,f,c
 10249  000FFC  0800               	sublw	0
 10250  000FFE  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10251  001000  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10252  001004                     
 10253                           ;TFT.c: 136: TFT_WriteRegister(0x0201, x1);
 10254  001004  0E02               	movlw	2
 10255  001006  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10256  001008  0E01               	movlw	1
 10257  00100A  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10258  00100C  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
 10259  001010  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
 10260  001014  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10261                           
 10262                           ;TFT.c: 137: break;
 10263  001018  EFC2  F008         	goto	l290
 10264  00101C                     l5312:
 10265                           
 10266                           ;TFT.c: 140: TFT_WriteRegister(0x0210, 240 - 1 - x2);
 10267  00101C  0E02               	movlw	2
 10268  00101E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10269  001020  0E10               	movlw	16
 10270  001022  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10271  001024  5011               	movf	TFT_SetAddrWindow@x2^0,w,c
 10272  001026  08EF               	sublw	239
 10273  001028  6E07               	movwf	TFT_WriteRegister@data^0,c
 10274  00102A  5012               	movf	(TFT_SetAddrWindow@x2+1)^0,w,c
 10275  00102C  A0D8               	btfss	status,0,c
 10276  00102E  2AE8               	incf	wreg,f,c
 10277  001030  0800               	sublw	0
 10278  001032  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10279  001034  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10280                           
 10281                           ;TFT.c: 141: TFT_WriteRegister(0x0211, 240 - 1 - x1);
 10282  001038  0E02               	movlw	2
 10283  00103A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10284  00103C  0E11               	movlw	17
 10285  00103E  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10286  001040  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
 10287  001042  08EF               	sublw	239
 10288  001044  6E07               	movwf	TFT_WriteRegister@data^0,c
 10289  001046  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
 10290  001048  A0D8               	btfss	status,0,c
 10291  00104A  2AE8               	incf	wreg,f,c
 10292  00104C  0800               	sublw	0
 10293  00104E  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10294  001050  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10295                           
 10296                           ;TFT.c: 142: TFT_WriteRegister(0x0212, 400 - 1 - y2);
 10297  001054  0E02               	movlw	2
 10298  001056  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10299  001058  0E12               	movlw	18
 10300  00105A  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10301  00105C  5013               	movf	TFT_SetAddrWindow@y2^0,w,c
 10302  00105E  088F               	sublw	143
 10303  001060  6E07               	movwf	TFT_WriteRegister@data^0,c
 10304  001062  5014               	movf	(TFT_SetAddrWindow@y2+1)^0,w,c
 10305  001064  A0D8               	btfss	status,0,c
 10306  001066  2AE8               	incf	wreg,f,c
 10307  001068  0801               	sublw	1
 10308  00106A  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10309  00106C  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10310                           
 10311                           ;TFT.c: 143: TFT_WriteRegister(0x0213, 400 - 1 - y1);
 10312  001070  0E02               	movlw	2
 10313  001072  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10314  001074  0E13               	movlw	19
 10315  001076  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10316  001078  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
 10317  00107A  088F               	sublw	143
 10318  00107C  6E07               	movwf	TFT_WriteRegister@data^0,c
 10319  00107E  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
 10320  001080  A0D8               	btfss	status,0,c
 10321  001082  2AE8               	incf	wreg,f,c
 10322  001084  0801               	sublw	1
 10323  001086  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10324  001088  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10325                           
 10326                           ;TFT.c: 145: TFT_WriteRegister(0x0200, 240 - 1 - x1);
 10327  00108C  0E02               	movlw	2
 10328  00108E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10329  001090  0E00               	movlw	0
 10330  001092  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10331  001094  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
 10332  001096  08EF               	sublw	239
 10333  001098  6E07               	movwf	TFT_WriteRegister@data^0,c
 10334  00109A  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
 10335  00109C  A0D8               	btfss	status,0,c
 10336  00109E  2AE8               	incf	wreg,f,c
 10337  0010A0  0800               	sublw	0
 10338  0010A2  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10339  0010A4  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10340                           
 10341                           ;TFT.c: 146: TFT_WriteRegister(0x0201, 400 - 1 - y1);
 10342  0010A8  0E02               	movlw	2
 10343  0010AA  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10344  0010AC  0E01               	movlw	1
 10345  0010AE  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10346  0010B0  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
 10347  0010B2  088F               	sublw	143
 10348  0010B4  6E07               	movwf	TFT_WriteRegister@data^0,c
 10349  0010B6  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
 10350  0010B8  A0D8               	btfss	status,0,c
 10351  0010BA  2AE8               	incf	wreg,f,c
 10352  0010BC  0801               	sublw	1
 10353  0010BE  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10354  0010C0  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10355                           
 10356                           ;TFT.c: 147: break;
 10357  0010C4  EFC2  F008         	goto	l290
 10358  0010C8                     l5314:
 10359                           
 10360                           ;TFT.c: 150: TFT_WriteRegister(0x0210, y1);
 10361  0010C8  0E02               	movlw	2
 10362  0010CA  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10363  0010CC  0E10               	movlw	16
 10364  0010CE  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10365  0010D0  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
 10366  0010D4  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
 10367  0010D8  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10368                           
 10369                           ;TFT.c: 151: TFT_WriteRegister(0x0211, y2);
 10370  0010DC  0E02               	movlw	2
 10371  0010DE  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10372  0010E0  0E11               	movlw	17
 10373  0010E2  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10374  0010E4  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
 10375  0010E8  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
 10376  0010EC  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10377  0010F0                     
 10378                           ;TFT.c: 152: TFT_WriteRegister(0x0212, 400 - 1 - x2);
 10379  0010F0  0E02               	movlw	2
 10380  0010F2  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10381  0010F4  0E12               	movlw	18
 10382  0010F6  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10383  0010F8  5011               	movf	TFT_SetAddrWindow@x2^0,w,c
 10384  0010FA  088F               	sublw	143
 10385  0010FC  6E07               	movwf	TFT_WriteRegister@data^0,c
 10386  0010FE  5012               	movf	(TFT_SetAddrWindow@x2+1)^0,w,c
 10387  001100  A0D8               	btfss	status,0,c
 10388  001102  2AE8               	incf	wreg,f,c
 10389  001104  0801               	sublw	1
 10390  001106  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10391  001108  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10392  00110C                     
 10393                           ;TFT.c: 153: TFT_WriteRegister(0x0213, 400 - 1 - x1);
 10394  00110C  0E02               	movlw	2
 10395  00110E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10396  001110  0E13               	movlw	19
 10397  001112  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10398  001114  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
 10399  001116  088F               	sublw	143
 10400  001118  6E07               	movwf	TFT_WriteRegister@data^0,c
 10401  00111A  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
 10402  00111C  A0D8               	btfss	status,0,c
 10403  00111E  2AE8               	incf	wreg,f,c
 10404  001120  0801               	sublw	1
 10405  001122  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10406  001124  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10407                           
 10408                           ;TFT.c: 155: TFT_WriteRegister(0x0200, y1);
 10409  001128  0E02               	movlw	2
 10410  00112A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10411  00112C  0E00               	movlw	0
 10412  00112E  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10413  001130  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
 10414  001134  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
 10415  001138  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10416  00113C                     
 10417                           ;TFT.c: 156: TFT_WriteRegister(0x0201, 400 - 1 - x1);
 10418  00113C  0E02               	movlw	2
 10419  00113E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10420  001140  0E01               	movlw	1
 10421  001142  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10422  001144  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
 10423  001146  088F               	sublw	143
 10424  001148  6E07               	movwf	TFT_WriteRegister@data^0,c
 10425  00114A  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
 10426  00114C  A0D8               	btfss	status,0,c
 10427  00114E  2AE8               	incf	wreg,f,c
 10428  001150  0801               	sublw	1
 10429  001152  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
 10430  001154  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10431                           
 10432                           ;TFT.c: 157: break;
 10433  001158  EFC2  F008         	goto	l290
 10434  00115C                     l5324:
 10435  00115C  EC7E  F018         	call	_TFT_OrientationGet	;wreg free
 10436                           
 10437                           ; Switch size 1, requested type "simple"
 10438                           ; Number of cases is 4, Range of values is 0 to 3
 10439                           ; switch strategies available:
 10440                           ; Name         Instructions Cycles
 10441                           ; simple_byte           13     7 (average)
 10442                           ;	Chosen strategy is simple_byte
 10443  001160  0A00               	xorlw	0	; case 0
 10444  001162  B4D8               	btfsc	status,2,c
 10445  001164  EF86  F007         	goto	l5302
 10446  001168  0A01               	xorlw	1	; case 1
 10447  00116A  B4D8               	btfsc	status,2,c
 10448  00116C  EFC4  F007         	goto	l5304
 10449  001170  0A03               	xorlw	3	; case 2
 10450  001172  B4D8               	btfsc	status,2,c
 10451  001174  EF0E  F008         	goto	l5312
 10452  001178  0A01               	xorlw	1	; case 3
 10453  00117A  B4D8               	btfsc	status,2,c
 10454  00117C  EF64  F008         	goto	l5314
 10455  001180  EFC2  F008         	goto	l290
 10456  001184                     l290:
 10457  001184  0012               	return		;funcret
 10458  001186                     __end_of_TFT_SetAddrWindow:
 10459                           	opt callstack 0
 10460                           
 10461 ;; *************** function _TFT_GetWidth *****************
 10462 ;; Defined at:
 10463 ;;		line 81 in file "TFT.c"
 10464 ;; Parameters:    Size  Location     Type
 10465 ;;		None
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;		None
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  2    4[COMRAM] unsigned int 
 10470 ;; Registers used:
 10471 ;;		wreg, status,2, status,0, cstack
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10477 ;;      Params:         2       0       0       0       0       0       0       0       0
 10478 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10479 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10480 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10481 ;;Total ram usage:        2 bytes
 10482 ;; Hardware stack levels used:    1
 10483 ;; Hardware stack levels required when called:    3
 10484 ;; This function calls:
 10485 ;;		_TFT_OrientationGet
 10486 ;; This function is called by:
 10487 ;;		_TFT_FullScreen
 10488 ;;		_TFT_ConsolePrintLine
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text44
 10493  002C9E                     __ptext44:
 10494                           	opt callstack 0
 10495  002C9E                     _TFT_GetWidth:
 10496                           	opt callstack 25
 10497  002C9E                     
 10498                           ;TFT.c: 82: switch(TFT_OrientationGet()) {
 10499  002C9E  EF5D  F016         	goto	l5276
 10500  002CA2                     l5266:
 10501                           
 10502                           ;TFT.c: 84: case 2:;TFT.c: 85: return 240 - 1;
 10503  002CA2  0E00               	movlw	0
 10504  002CA4  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
 10505  002CA6  0EEF               	movlw	239
 10506  002CA8  6E05               	movwf	?_TFT_GetWidth^0,c
 10507  002CAA  EF75  F016         	goto	l262
 10508  002CAE                     l5270:
 10509                           
 10510                           ;TFT.c: 87: case 3:;TFT.c: 88: return 400 - 1;
 10511  002CAE  0E01               	movlw	1
 10512  002CB0  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
 10513  002CB2  0E8F               	movlw	143
 10514  002CB4  6E05               	movwf	?_TFT_GetWidth^0,c
 10515  002CB6  EF75  F016         	goto	l262
 10516  002CBA                     l5276:
 10517  002CBA  EC7E  F018         	call	_TFT_OrientationGet	;wreg free
 10518                           
 10519                           ; Switch size 1, requested type "simple"
 10520                           ; Number of cases is 4, Range of values is 0 to 3
 10521                           ; switch strategies available:
 10522                           ; Name         Instructions Cycles
 10523                           ; simple_byte           13     7 (average)
 10524                           ;	Chosen strategy is simple_byte
 10525  002CBE  0A00               	xorlw	0	; case 0
 10526  002CC0  B4D8               	btfsc	status,2,c
 10527  002CC2  EF51  F016         	goto	l5266
 10528  002CC6  0A01               	xorlw	1	; case 1
 10529  002CC8  B4D8               	btfsc	status,2,c
 10530  002CCA  EF57  F016         	goto	l5270
 10531  002CCE  0A03               	xorlw	3	; case 2
 10532  002CD0  B4D8               	btfsc	status,2,c
 10533  002CD2  EF51  F016         	goto	l5266
 10534  002CD6  0A01               	xorlw	1	; case 3
 10535  002CD8  B4D8               	btfsc	status,2,c
 10536  002CDA  EF57  F016         	goto	l5270
 10537  002CDE  EF71  F016         	goto	l5278
 10538  002CE2                     l5278:
 10539                           
 10540                           ;TFT.c: 90: return 0;
 10541  002CE2  0E00               	movlw	0
 10542  002CE4  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
 10543  002CE6  0E00               	movlw	0
 10544  002CE8  6E05               	movwf	?_TFT_GetWidth^0,c
 10545  002CEA                     l262:
 10546  002CEA  0012               	return		;funcret
 10547  002CEC                     __end_of_TFT_GetWidth:
 10548                           	opt callstack 0
 10549                           
 10550 ;; *************** function _TFT_GetHeight *****************
 10551 ;; Defined at:
 10552 ;;		line 93 in file "TFT.c"
 10553 ;; Parameters:    Size  Location     Type
 10554 ;;		None
 10555 ;; Auto vars:     Size  Location     Type
 10556 ;;		None
 10557 ;; Return value:  Size  Location     Type
 10558 ;;                  2    4[COMRAM] unsigned int 
 10559 ;; Registers used:
 10560 ;;		wreg, status,2, status,0, cstack
 10561 ;; Tracked objects:
 10562 ;;		On entry : 0/0
 10563 ;;		On exit  : 0/0
 10564 ;;		Unchanged: 0/0
 10565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10566 ;;      Params:         2       0       0       0       0       0       0       0       0
 10567 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10568 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10569 ;;      Totals:         2       0       0       0       0       0       0       0       0
 10570 ;;Total ram usage:        2 bytes
 10571 ;; Hardware stack levels used:    1
 10572 ;; Hardware stack levels required when called:    3
 10573 ;; This function calls:
 10574 ;;		_TFT_OrientationGet
 10575 ;; This function is called by:
 10576 ;;		_TFT_FullScreen
 10577 ;;		_TFT_ConsolePrintLine
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text45
 10582  002CEC                     __ptext45:
 10583                           	opt callstack 0
 10584  002CEC                     _TFT_GetHeight:
 10585                           	opt callstack 25
 10586  002CEC                     
 10587                           ;TFT.c: 94: switch(TFT_OrientationGet()) {
 10588  002CEC  EF84  F016         	goto	l5294
 10589  002CF0                     l5284:
 10590                           
 10591                           ;TFT.c: 96: case 2:;TFT.c: 97: return 400 - 1;
 10592  002CF0  0E01               	movlw	1
 10593  002CF2  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
 10594  002CF4  0E8F               	movlw	143
 10595  002CF6  6E05               	movwf	?_TFT_GetHeight^0,c
 10596  002CF8  EF9C  F016         	goto	l271
 10597  002CFC                     l5288:
 10598                           
 10599                           ;TFT.c: 99: case 3:;TFT.c: 100: return 240 - 1;
 10600  002CFC  0E00               	movlw	0
 10601  002CFE  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
 10602  002D00  0EEF               	movlw	239
 10603  002D02  6E05               	movwf	?_TFT_GetHeight^0,c
 10604  002D04  EF9C  F016         	goto	l271
 10605  002D08                     l5294:
 10606  002D08  EC7E  F018         	call	_TFT_OrientationGet	;wreg free
 10607                           
 10608                           ; Switch size 1, requested type "simple"
 10609                           ; Number of cases is 4, Range of values is 0 to 3
 10610                           ; switch strategies available:
 10611                           ; Name         Instructions Cycles
 10612                           ; simple_byte           13     7 (average)
 10613                           ;	Chosen strategy is simple_byte
 10614  002D0C  0A00               	xorlw	0	; case 0
 10615  002D0E  B4D8               	btfsc	status,2,c
 10616  002D10  EF78  F016         	goto	l5284
 10617  002D14  0A01               	xorlw	1	; case 1
 10618  002D16  B4D8               	btfsc	status,2,c
 10619  002D18  EF7E  F016         	goto	l5288
 10620  002D1C  0A03               	xorlw	3	; case 2
 10621  002D1E  B4D8               	btfsc	status,2,c
 10622  002D20  EF78  F016         	goto	l5284
 10623  002D24  0A01               	xorlw	1	; case 3
 10624  002D26  B4D8               	btfsc	status,2,c
 10625  002D28  EF7E  F016         	goto	l5288
 10626  002D2C  EF98  F016         	goto	l5296
 10627  002D30                     l5296:
 10628                           
 10629                           ;TFT.c: 102: return 0;
 10630  002D30  0E00               	movlw	0
 10631  002D32  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
 10632  002D34  0E00               	movlw	0
 10633  002D36  6E05               	movwf	?_TFT_GetHeight^0,c
 10634  002D38                     l271:
 10635  002D38  0012               	return		;funcret
 10636  002D3A                     __end_of_TFT_GetHeight:
 10637                           	opt callstack 0
 10638                           
 10639 ;; *************** function _TFT_OrientationGet *****************
 10640 ;; Defined at:
 10641 ;;		line 105 in file "TFT.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;		None
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;		None
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  1    wreg      unsigned char 
 10648 ;; Registers used:
 10649 ;;		wreg, status,2
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10655 ;;      Params:         0       0       0       0       0       0       0       0       0
 10656 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10657 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10658 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10659 ;;Total ram usage:        0 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    2
 10662 ;; This function calls:
 10663 ;;		Nothing
 10664 ;; This function is called by:
 10665 ;;		_TFT_GetWidth
 10666 ;;		_TFT_GetHeight
 10667 ;;		_TFT_SetAddrWindow
 10668 ;;		_TFT_DrawPixel
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           	psect	text46
 10673  0030FC                     __ptext46:
 10674                           	opt callstack 0
 10675  0030FC                     _TFT_OrientationGet:
 10676                           	opt callstack 25
 10677  0030FC                     
 10678                           ;TFT.c: 106: return TFT_Orientation;
 10679  0030FC  5058               	movf	_TFT_Orientation^0,w,c
 10680  0030FE  0012               	return		;funcret
 10681  003100                     __end_of_TFT_OrientationGet:
 10682                           	opt callstack 0
 10683                           
 10684 ;; *************** function _TFT_Flood *****************
 10685 ;; Defined at:
 10686 ;;		line 237 in file "TFT.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  color           2   12[COMRAM] unsigned int 
 10689 ;;  len             4   14[COMRAM] unsigned long 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  blocks          2   22[COMRAM] unsigned int 
 10692 ;;  color_lo        1   26[COMRAM] unsigned char 
 10693 ;;  color_hi        1   25[COMRAM] unsigned char 
 10694 ;;  i               1   24[COMRAM] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10704 ;;      Params:         6       0       0       0       0       0       0       0       0
 10705 ;;      Locals:         5       0       0       0       0       0       0       0       0
 10706 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10707 ;;      Totals:        15       0       0       0       0       0       0       0       0
 10708 ;;Total ram usage:       15 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    3
 10711 ;; This function calls:
 10712 ;;		_TFT_WriteRegister
 10713 ;; This function is called by:
 10714 ;;		_TFT_FullScreen
 10715 ;;		_TFT_DrawFillRect
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           
 10719                           	psect	text47
 10720  00136E                     __ptext47:
 10721                           	opt callstack 0
 10722  00136E                     _TFT_Flood:
 10723                           	opt callstack 21
 10724  00136E                     
 10725                           ;TFT.c: 238: uint16_t blocks;;TFT.c: 239: uint8_t i;;TFT.c: 240: uint8_t color_hi = colo
      +                          r >> 8;
 10726  00136E  500E               	movf	(TFT_Flood@color+1)^0,w,c
 10727  001370  6E1A               	movwf	TFT_Flood@color_hi^0,c
 10728  001372                     
 10729                           ;TFT.c: 241: uint8_t color_lo = color;
 10730  001372  C00D  F01B         	movff	TFT_Flood@color,TFT_Flood@color_lo
 10731  001376                     
 10732                           ;TFT.c: 244: TFT_WriteRegister(0x0202, color);
 10733  001376  0E02               	movlw	2
 10734  001378  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
 10735  00137A  0E02               	movlw	2
 10736  00137C  6E05               	movwf	TFT_WriteRegister@reg^0,c
 10737  00137E  C00D  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
 10738  001382  C00E  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
 10739  001386  EC0E  F017         	call	_TFT_WriteRegister	;wreg free
 10740  00138A                     
 10741                           ;TFT.c: 245: len--;
 10742  00138A  060F               	decf	TFT_Flood@len^0,f,c
 10743  00138C  0E00               	movlw	0
 10744  00138E  5A10               	subwfb	(TFT_Flood@len+1)^0,f,c
 10745  001390  5A11               	subwfb	(TFT_Flood@len+2)^0,f,c
 10746  001392  5A12               	subwfb	(TFT_Flood@len+3)^0,f,c
 10747  001394                     
 10748                           ;TFT.c: 249: { PORTCbits.RC0 = 0; { asm("nop"); }; };
 10749  001394  9082               	bcf	130,0,c	;volatile
 10750  001396  F000               	nop		;# 
 10751  001398                     
 10752                           ;TFT.c: 250: blocks = (uint16_t)(len / 4);
 10753  001398  C00F  F013         	movff	TFT_Flood@len,??_TFT_Flood
 10754  00139C  C010  F014         	movff	TFT_Flood@len+1,??_TFT_Flood+1
 10755  0013A0  C011  F015         	movff	TFT_Flood@len+2,??_TFT_Flood+2
 10756  0013A4  C012  F016         	movff	TFT_Flood@len+3,??_TFT_Flood+3
 10757  0013A8  0E03               	movlw	3
 10758  0013AA  EFDC  F009         	goto	u4170
 10759  0013AE                     u4175:
 10760  0013AE  90D8               	bcf	status,0,c
 10761  0013B0  3216               	rrcf	(??_TFT_Flood+3)^0,f,c
 10762  0013B2  3215               	rrcf	(??_TFT_Flood+2)^0,f,c
 10763  0013B4  3214               	rrcf	(??_TFT_Flood+1)^0,f,c
 10764  0013B6  3213               	rrcf	??_TFT_Flood^0,f,c
 10765  0013B8                     u4170:
 10766  0013B8  2EE8               	decfsz	wreg,f,c
 10767  0013BA  EFD7  F009         	goto	u4175
 10768  0013BE  C013  F017         	movff	??_TFT_Flood,TFT_Flood@blocks
 10769  0013C2  C014  F018         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
 10770  0013C6                     
 10771                           ;TFT.c: 251: if(color_hi == color_lo) {
 10772  0013C6  501B               	movf	TFT_Flood@color_lo^0,w,c
 10773  0013C8  181A               	xorwf	TFT_Flood@color_hi^0,w,c
 10774  0013CA  A4D8               	btfss	status,2,c
 10775  0013CC  EFEA  F009         	goto	u4181
 10776  0013D0  EFEC  F009         	goto	u4180
 10777  0013D4                     u4181:
 10778  0013D4  EF51  F00A         	goto	l5348
 10779  0013D8                     u4180:
 10780  0013D8  EF06  F00A         	goto	l5342
 10781  0013DC                     l324:
 10782                           
 10783                           ;TFT.c: 253: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
 10784  0013DC  9A80               	bcf	128,5,c	;volatile
 10785  0013DE  F000               	nop		;# 
 10786  0013E0  8A80               	bsf	128,5,c	;volatile
 10787  0013E2  9A80               	bcf	128,5,c	;volatile
 10788  0013E4  F000               	nop		;# 
 10789  0013E6  8A80               	bsf	128,5,c	;volatile
 10790                           
 10791                           ;TFT.c: 254: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
 10792  0013E8  9A80               	bcf	128,5,c	;volatile
 10793  0013EA  F000               	nop		;# 
 10794  0013EC  8A80               	bsf	128,5,c	;volatile
 10795  0013EE  9A80               	bcf	128,5,c	;volatile
 10796  0013F0  F000               	nop		;# 
 10797  0013F2  8A80               	bsf	128,5,c	;volatile
 10798                           
 10799                           ;TFT.c: 255: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
 10800  0013F4  9A80               	bcf	128,5,c	;volatile
 10801  0013F6  F000               	nop		;# 
 10802  0013F8  8A80               	bsf	128,5,c	;volatile
 10803  0013FA  9A80               	bcf	128,5,c	;volatile
 10804  0013FC  F000               	nop		;# 
 10805  0013FE  8A80               	bsf	128,5,c	;volatile
 10806                           
 10807                           ;TFT.c: 256: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
 10808  001400  9A80               	bcf	128,5,c	;volatile
 10809  001402  F000               	nop		;# 
 10810  001404  8A80               	bsf	128,5,c	;volatile
 10811  001406  9A80               	bcf	128,5,c	;volatile
 10812  001408  F000               	nop		;# 
 10813  00140A  8A80               	bsf	128,5,c	;volatile
 10814  00140C                     l5342:
 10815  00140C  0617               	decf	TFT_Flood@blocks^0,f,c
 10816  00140E  A0D8               	btfss	status,0,c
 10817  001410  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
 10818  001412  2817               	incf	TFT_Flood@blocks^0,w,c
 10819  001414  E106               	bnz	u4191
 10820  001416  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
 10821  001418  A4D8               	btfss	status,2,c
 10822  00141A  EF11  F00A         	goto	u4191
 10823  00141E  EF13  F00A         	goto	u4190
 10824  001422                     u4191:
 10825  001422  EFEE  F009         	goto	l324
 10826  001426                     u4190:
 10827  001426                     
 10828                           ;TFT.c: 257: };TFT.c: 258: for(i = (uint8_t)len & 3; i--; ) {
 10829  001426  500F               	movf	TFT_Flood@len^0,w,c
 10830  001428  0B03               	andlw	3
 10831  00142A  6E19               	movwf	TFT_Flood@i^0,c
 10832  00142C  EF1E  F00A         	goto	l5346
 10833  001430                     l327:
 10834                           
 10835                           ;TFT.c: 259: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
 10836  001430  9A80               	bcf	128,5,c	;volatile
 10837  001432  F000               	nop		;# 
 10838  001434  8A80               	bsf	128,5,c	;volatile
 10839  001436  9A80               	bcf	128,5,c	;volatile
 10840  001438  F000               	nop		;# 
 10841  00143A  8A80               	bsf	128,5,c	;volatile
 10842  00143C                     l5346:
 10843  00143C  0619               	decf	TFT_Flood@i^0,f,c
 10844  00143E  2819               	incf	TFT_Flood@i^0,w,c
 10845  001440  A4D8               	btfss	status,2,c
 10846  001442  EF25  F00A         	goto	u4201
 10847  001446  EF27  F00A         	goto	u4200
 10848  00144A                     u4201:
 10849  00144A  EF18  F00A         	goto	l327
 10850  00144E                     u4200:
 10851  00144E  EF76  F00A         	goto	l329
 10852  001452                     l331:
 10853                           
 10854                           ;TFT.c: 263: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
 10855  001452  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
 10856  001456  9A80               	bcf	128,5,c	;volatile
 10857  001458  F000               	nop		;# 
 10858  00145A  8A80               	bsf	128,5,c	;volatile
 10859  00145C  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
 10860  001460  9A80               	bcf	128,5,c	;volatile
 10861  001462  F000               	nop		;# 
 10862  001464  8A80               	bsf	128,5,c	;volatile
 10863                           
 10864                           ;TFT.c: 264: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
 10865  001466  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
 10866  00146A  9A80               	bcf	128,5,c	;volatile
 10867  00146C  F000               	nop		;# 
 10868  00146E  8A80               	bsf	128,5,c	;volatile
 10869  001470  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
 10870  001474  9A80               	bcf	128,5,c	;volatile
 10871  001476  F000               	nop		;# 
 10872  001478  8A80               	bsf	128,5,c	;volatile
 10873                           
 10874                           ;TFT.c: 265: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
 10875  00147A  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
 10876  00147E  9A80               	bcf	128,5,c	;volatile
 10877  001480  F000               	nop		;# 
 10878  001482  8A80               	bsf	128,5,c	;volatile
 10879  001484  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
 10880  001488  9A80               	bcf	128,5,c	;volatile
 10881  00148A  F000               	nop		;# 
 10882  00148C  8A80               	bsf	128,5,c	;volatile
 10883                           
 10884                           ;TFT.c: 266: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
 10885  00148E  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
 10886  001492  9A80               	bcf	128,5,c	;volatile
 10887  001494  F000               	nop		;# 
 10888  001496  8A80               	bsf	128,5,c	;volatile
 10889  001498  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
 10890  00149C  9A80               	bcf	128,5,c	;volatile
 10891  00149E  F000               	nop		;# 
 10892  0014A0  8A80               	bsf	128,5,c	;volatile
 10893  0014A2                     l5348:
 10894  0014A2  0617               	decf	TFT_Flood@blocks^0,f,c
 10895  0014A4  A0D8               	btfss	status,0,c
 10896  0014A6  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
 10897  0014A8  2817               	incf	TFT_Flood@blocks^0,w,c
 10898  0014AA  E106               	bnz	u4211
 10899  0014AC  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
 10900  0014AE  A4D8               	btfss	status,2,c
 10901  0014B0  EF5C  F00A         	goto	u4211
 10902  0014B4  EF5E  F00A         	goto	u4210
 10903  0014B8                     u4211:
 10904  0014B8  EF29  F00A         	goto	l331
 10905  0014BC                     u4210:
 10906  0014BC                     
 10907                           ;TFT.c: 267: };TFT.c: 268: for(i = (uint8_t)len & 3; i--; ) {
 10908  0014BC  500F               	movf	TFT_Flood@len^0,w,c
 10909  0014BE  0B03               	andlw	3
 10910  0014C0  6E19               	movwf	TFT_Flood@i^0,c
 10911  0014C2  EF6D  F00A         	goto	l5352
 10912  0014C6                     l334:
 10913                           
 10914                           ;TFT.c: 269: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
 10915  0014C6  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
 10916  0014CA  9A80               	bcf	128,5,c	;volatile
 10917  0014CC  F000               	nop		;# 
 10918  0014CE  8A80               	bsf	128,5,c	;volatile
 10919  0014D0  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
 10920  0014D4  9A80               	bcf	128,5,c	;volatile
 10921  0014D6  F000               	nop		;# 
 10922  0014D8  8A80               	bsf	128,5,c	;volatile
 10923  0014DA                     l5352:
 10924  0014DA  0619               	decf	TFT_Flood@i^0,f,c
 10925  0014DC  2819               	incf	TFT_Flood@i^0,w,c
 10926  0014DE  A4D8               	btfss	status,2,c
 10927  0014E0  EF74  F00A         	goto	u4221
 10928  0014E4  EF76  F00A         	goto	u4220
 10929  0014E8                     u4221:
 10930  0014E8  EF63  F00A         	goto	l334
 10931  0014EC                     u4220:
 10932  0014EC                     l329:
 10933                           
 10934                           ;TFT.c: 270: };TFT.c: 271: };TFT.c: 272: PORTCbits.RC0 = 1;;
 10935  0014EC  8082               	bsf	130,0,c	;volatile
 10936  0014EE  0012               	return		;funcret
 10937  0014F0                     __end_of_TFT_Flood:
 10938                           	opt callstack 0
 10939                           
 10940 ;; *************** function _TFT_WriteRegister *****************
 10941 ;; Defined at:
 10942 ;;		line 12 in file "TFT.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  reg             2    4[COMRAM] unsigned int 
 10945 ;;  data            2    6[COMRAM] unsigned int 
 10946 ;; Auto vars:     Size  Location     Type
 10947 ;;  l               1   11[COMRAM] unsigned char 
 10948 ;;  h               1   10[COMRAM] unsigned char 
 10949 ;;  l               1    9[COMRAM] unsigned char 
 10950 ;;  h               1    8[COMRAM] unsigned char 
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  1    wreg      void 
 10953 ;; Registers used:
 10954 ;;		wreg, status,2
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10960 ;;      Params:         4       0       0       0       0       0       0       0       0
 10961 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10963 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10964 ;;Total ram usage:        8 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    2
 10967 ;; This function calls:
 10968 ;;		Nothing
 10969 ;; This function is called by:
 10970 ;;		_TFT_Init
 10971 ;;		_TFT_SetAddrWindow
 10972 ;;		_TFT_DrawPixel
 10973 ;;		_TFT_Flood
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           	psect	text48
 10978  002E1C                     __ptext48:
 10979                           	opt callstack 0
 10980  002E1C                     _TFT_WriteRegister:
 10981                           	opt callstack 23
 10982  002E1C                     
 10983                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
 10984  002E1C  9082               	bcf	130,0,c	;volatile
 10985  002E1E  F000               	nop		;# 
 10986                           
 10987                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
 10988  002E20  9282               	bcf	130,1,c	;volatile
 10989  002E22  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
 10990  002E24  6E09               	movwf	TFT_WriteRegister@h^0,c
 10991  002E26  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
 10992  002E2A  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
 10993  002E2E  9A80               	bcf	128,5,c	;volatile
 10994  002E30  F000               	nop		;# 
 10995  002E32  8A80               	bsf	128,5,c	;volatile
 10996  002E34  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
 10997  002E38  9A80               	bcf	128,5,c	;volatile
 10998  002E3A  F000               	nop		;# 
 10999  002E3C  8A80               	bsf	128,5,c	;volatile
 11000  002E3E                     
 11001                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
 11002  002E3E  8282               	bsf	130,1,c	;volatile
 11003  002E40  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
 11004  002E42  6E0B               	movwf	TFT_WriteRegister@h_753^0,c
 11005  002E44  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_754
 11006  002E48  C00B  FF81         	movff	TFT_WriteRegister@h_753,3969	;volatile
 11007  002E4C  9A80               	bcf	128,5,c	;volatile
 11008  002E4E  F000               	nop		;# 
 11009  002E50  8A80               	bsf	128,5,c	;volatile
 11010  002E52  C00C  FF81         	movff	TFT_WriteRegister@l_754,3969	;volatile
 11011  002E56  9A80               	bcf	128,5,c	;volatile
 11012  002E58  F000               	nop		;# 
 11013  002E5A  8A80               	bsf	128,5,c	;volatile
 11014  002E5C                     
 11015                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
 11016  002E5C  8082               	bsf	130,0,c	;volatile
 11017  002E5E  0012               	return		;funcret
 11018  002E60                     __end_of_TFT_WriteRegister:
 11019                           	opt callstack 0
 11020                           
 11021 ;; *************** function _EUSART_BaudRateSet *****************
 11022 ;; Defined at:
 11023 ;;		line 41 in file "EUSART.c"
 11024 ;; Parameters:    Size  Location     Type
 11025 ;;  baudRate        4   17[COMRAM] const unsigned long 
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;  tmp             4   25[COMRAM] unsigned long 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, status,2, status,0, cstack
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11037 ;;      Params:         4       0       0       0       0       0       0       0       0
 11038 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11039 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11040 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11041 ;;Total ram usage:       12 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:    3
 11044 ;; This function calls:
 11045 ;;		___lldiv
 11046 ;; This function is called by:
 11047 ;;		_A6_BaudRateSet
 11048 ;;		_A6_BaudRateAutoDetect
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text49
 11053  0025E2                     __ptext49:
 11054                           	opt callstack 0
 11055  0025E2                     _EUSART_BaudRateSet:
 11056                           	opt callstack 25
 11057  0025E2                     
 11058                           ;EUSART.c: 42: TXSTAbits.SYNC = 0;
 11059  0025E2  98AC               	bcf	172,4,c	;volatile
 11060                           
 11061                           ;EUSART.c: 43: TXSTAbits.BRGH = 1;
 11062  0025E4  84AC               	bsf	172,2,c	;volatile
 11063                           
 11064                           ;EUSART.c: 44: BAUDCONbits.BRG16 = 1;
 11065  0025E6  86B8               	bsf	184,3,c	;volatile
 11066  0025E8                     
 11067                           ;EUSART.c: 46: uint32_t tmp = (48000000 / baudRate);
 11068  0025E8  0E00               	movlw	0
 11069  0025EA  6E05               	movwf	___lldiv@dividend^0,c
 11070  0025EC  0E6C               	movlw	108
 11071  0025EE  6E06               	movwf	(___lldiv@dividend+1)^0,c
 11072  0025F0  0EDC               	movlw	220
 11073  0025F2  6E07               	movwf	(___lldiv@dividend+2)^0,c
 11074  0025F4  0E02               	movlw	2
 11075  0025F6  6E08               	movwf	(___lldiv@dividend+3)^0,c
 11076  0025F8  C012  F009         	movff	EUSART_BaudRateSet@baudRate,___lldiv@divisor
 11077  0025FC  C013  F00A         	movff	EUSART_BaudRateSet@baudRate+1,___lldiv@divisor+1
 11078  002600  C014  F00B         	movff	EUSART_BaudRateSet@baudRate+2,___lldiv@divisor+2
 11079  002604  C015  F00C         	movff	EUSART_BaudRateSet@baudRate+3,___lldiv@divisor+3
 11080  002608  EC44  F011         	call	___lldiv	;wreg free
 11081  00260C  C005  F01A         	movff	?___lldiv,EUSART_BaudRateSet@tmp
 11082  002610  C006  F01B         	movff	?___lldiv+1,EUSART_BaudRateSet@tmp+1
 11083  002614  C007  F01C         	movff	?___lldiv+2,EUSART_BaudRateSet@tmp+2
 11084  002618  C008  F01D         	movff	?___lldiv+3,EUSART_BaudRateSet@tmp+3
 11085  00261C                     
 11086                           ;EUSART.c: 47: tmp = tmp / 4;
 11087  00261C  C01A  F016         	movff	EUSART_BaudRateSet@tmp,??_EUSART_BaudRateSet
 11088  002620  C01B  F017         	movff	EUSART_BaudRateSet@tmp+1,??_EUSART_BaudRateSet+1
 11089  002624  C01C  F018         	movff	EUSART_BaudRateSet@tmp+2,??_EUSART_BaudRateSet+2
 11090  002628  C01D  F019         	movff	EUSART_BaudRateSet@tmp+3,??_EUSART_BaudRateSet+3
 11091  00262C  0E03               	movlw	3
 11092  00262E  EF1E  F013         	goto	u3390
 11093  002632                     u3395:
 11094  002632  90D8               	bcf	status,0,c
 11095  002634  3219               	rrcf	(??_EUSART_BaudRateSet+3)^0,f,c
 11096  002636  3218               	rrcf	(??_EUSART_BaudRateSet+2)^0,f,c
 11097  002638  3217               	rrcf	(??_EUSART_BaudRateSet+1)^0,f,c
 11098  00263A  3216               	rrcf	??_EUSART_BaudRateSet^0,f,c
 11099  00263C                     u3390:
 11100  00263C  2EE8               	decfsz	wreg,f,c
 11101  00263E  EF19  F013         	goto	u3395
 11102  002642  C016  F01A         	movff	??_EUSART_BaudRateSet,EUSART_BaudRateSet@tmp
 11103  002646  C017  F01B         	movff	??_EUSART_BaudRateSet+1,EUSART_BaudRateSet@tmp+1
 11104  00264A  C018  F01C         	movff	??_EUSART_BaudRateSet+2,EUSART_BaudRateSet@tmp+2
 11105  00264E  C019  F01D         	movff	??_EUSART_BaudRateSet+3,EUSART_BaudRateSet@tmp+3
 11106  002652                     
 11107                           ;EUSART.c: 48: tmp--;
 11108  002652  061A               	decf	EUSART_BaudRateSet@tmp^0,f,c
 11109  002654  0E00               	movlw	0
 11110  002656  5A1B               	subwfb	(EUSART_BaudRateSet@tmp+1)^0,f,c
 11111  002658  5A1C               	subwfb	(EUSART_BaudRateSet@tmp+2)^0,f,c
 11112  00265A  5A1D               	subwfb	(EUSART_BaudRateSet@tmp+3)^0,f,c
 11113  00265C                     
 11114                           ;EUSART.c: 50: SPBRG = (uint8_t) tmp;
 11115  00265C  C01A  FFAF         	movff	EUSART_BaudRateSet@tmp,4015	;volatile
 11116  002660                     
 11117                           ;EUSART.c: 51: SPBRGH = (uint8_t) (tmp >> 8);
 11118  002660  C01B  FFB0         	movff	EUSART_BaudRateSet@tmp+1,4016	;volatile
 11119  002664  0012               	return		;funcret
 11120  002666                     __end_of_EUSART_BaudRateSet:
 11121                           	opt callstack 0
 11122                           
 11123 ;; *************** function ___lldiv *****************
 11124 ;; Defined at:
 11125 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
 11126 ;; Parameters:    Size  Location     Type
 11127 ;;  dividend        4    4[COMRAM] unsigned long 
 11128 ;;  divisor         4    8[COMRAM] unsigned long 
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;  quotient        4   12[COMRAM] unsigned long 
 11131 ;;  counter         1   16[COMRAM] unsigned char 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  4    4[COMRAM] unsigned long 
 11134 ;; Registers used:
 11135 ;;		wreg, status,2, status,0
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11141 ;;      Params:         8       0       0       0       0       0       0       0       0
 11142 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11143 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11144 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11145 ;;Total ram usage:       13 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; Hardware stack levels required when called:    2
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_EUSART_BaudRateSet
 11152 ;;		_sprintf
 11153 ;;		_Ecg_ProcessHeartRate
 11154 ;; This function uses a non-reentrant model
 11155 ;;
 11156                           
 11157                           	psect	text50
 11158  002288                     __ptext50:
 11159                           	opt callstack 0
 11160  002288                     ___lldiv:
 11161                           	opt callstack 26
 11162  002288  0E00               	movlw	0
 11163  00228A  6E0D               	movwf	___lldiv@quotient^0,c
 11164  00228C  0E00               	movlw	0
 11165  00228E  6E0E               	movwf	(___lldiv@quotient+1)^0,c
 11166  002290  0E00               	movlw	0
 11167  002292  6E0F               	movwf	(___lldiv@quotient+2)^0,c
 11168  002294  0E00               	movlw	0
 11169  002296  6E10               	movwf	(___lldiv@quotient+3)^0,c
 11170  002298  5009               	movf	___lldiv@divisor^0,w,c
 11171  00229A  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
 11172  00229C  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
 11173  00229E  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
 11174  0022A0  B4D8               	btfsc	status,2,c
 11175  0022A2  EF55  F011         	goto	u2991
 11176  0022A6  EF57  F011         	goto	u2990
 11177  0022AA                     u2991:
 11178  0022AA  EF8D  F011         	goto	l820
 11179  0022AE                     u2990:
 11180  0022AE  0E01               	movlw	1
 11181  0022B0  6E11               	movwf	___lldiv@counter^0,c
 11182  0022B2  EF61  F011         	goto	l4116
 11183  0022B6                     l4114:
 11184  0022B6  90D8               	bcf	status,0,c
 11185  0022B8  3609               	rlcf	___lldiv@divisor^0,f,c
 11186  0022BA  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
 11187  0022BC  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
 11188  0022BE  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
 11189  0022C0  2A11               	incf	___lldiv@counter^0,f,c
 11190  0022C2                     l4116:
 11191  0022C2  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
 11192  0022C4  EF66  F011         	goto	u3001
 11193  0022C8  EF68  F011         	goto	u3000
 11194  0022CC                     u3001:
 11195  0022CC  EF5B  F011         	goto	l4114
 11196  0022D0                     u3000:
 11197  0022D0                     l4118:
 11198  0022D0  90D8               	bcf	status,0,c
 11199  0022D2  360D               	rlcf	___lldiv@quotient^0,f,c
 11200  0022D4  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
 11201  0022D6  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
 11202  0022D8  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
 11203  0022DA  5009               	movf	___lldiv@divisor^0,w,c
 11204  0022DC  5C05               	subwf	___lldiv@dividend^0,w,c
 11205  0022DE  500A               	movf	(___lldiv@divisor+1)^0,w,c
 11206  0022E0  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
 11207  0022E2  500B               	movf	(___lldiv@divisor+2)^0,w,c
 11208  0022E4  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
 11209  0022E6  500C               	movf	(___lldiv@divisor+3)^0,w,c
 11210  0022E8  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
 11211  0022EA  A0D8               	btfss	status,0,c
 11212  0022EC  EF7A  F011         	goto	u3011
 11213  0022F0  EF7C  F011         	goto	u3010
 11214  0022F4                     u3011:
 11215  0022F4  EF85  F011         	goto	l4126
 11216  0022F8                     u3010:
 11217  0022F8  5009               	movf	___lldiv@divisor^0,w,c
 11218  0022FA  5E05               	subwf	___lldiv@dividend^0,f,c
 11219  0022FC  500A               	movf	(___lldiv@divisor+1)^0,w,c
 11220  0022FE  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
 11221  002300  500B               	movf	(___lldiv@divisor+2)^0,w,c
 11222  002302  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
 11223  002304  500C               	movf	(___lldiv@divisor+3)^0,w,c
 11224  002306  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
 11225  002308  800D               	bsf	___lldiv@quotient^0,0,c
 11226  00230A                     l4126:
 11227  00230A  90D8               	bcf	status,0,c
 11228  00230C  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
 11229  00230E  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
 11230  002310  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
 11231  002312  3209               	rrcf	___lldiv@divisor^0,f,c
 11232  002314  2E11               	decfsz	___lldiv@counter^0,f,c
 11233  002316  EF68  F011         	goto	l4118
 11234  00231A                     l820:
 11235  00231A  C00D  F005         	movff	___lldiv@quotient,?___lldiv
 11236  00231E  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
 11237  002322  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
 11238  002326  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
 11239  00232A  0012               	return		;funcret
 11240  00232C                     __end_of___lldiv:
 11241                           	opt callstack 0
 11242                           
 11243 ;; *************** function _A6_IsAlive *****************
 11244 ;; Defined at:
 11245 ;;		line 17 in file "A6Lib.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;		None
 11248 ;; Auto vars:     Size  Location     Type
 11249 ;;  response       32   30[COMRAM] unsigned char [32]
 11250 ;; Return value:  Size  Location     Type
 11251 ;;                  1    wreg      unsigned char 
 11252 ;; Registers used:
 11253 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11254 ;; Tracked objects:
 11255 ;;		On entry : 0/0
 11256 ;;		On exit  : 0/0
 11257 ;;		Unchanged: 0/0
 11258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11259 ;;      Params:         0       0       0       0       0       0       0       0       0
 11260 ;;      Locals:        32       0       0       0       0       0       0       0       0
 11261 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11262 ;;      Totals:        32       0       0       0       0       0       0       0       0
 11263 ;;Total ram usage:       32 bytes
 11264 ;; Hardware stack levels used:    1
 11265 ;; Hardware stack levels required when called:    6
 11266 ;; This function calls:
 11267 ;;		_A6_Command
 11268 ;;		_strcmp
 11269 ;; This function is called by:
 11270 ;;		_loop
 11271 ;;		_A6_BaudRateSet
 11272 ;;		_A6_BaudRateAutoDetect
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text51
 11277  002C00                     __ptext51:
 11278                           	opt callstack 0
 11279  002C00                     _A6_IsAlive:
 11280                           	opt callstack 23
 11281  002C00                     
 11282                           ;A6Lib.c: 18: char response[32];;A6Lib.c: 19: A6_Command("AT\r", 0, response, 32);
 11283  002C00  0EEE               	movlw	low STR_22
 11284  002C02  6E18               	movwf	A6_Command@command^0,c
 11285  002C04  0E5F               	movlw	high STR_22
 11286  002C06  6E19               	movwf	(A6_Command@command+1)^0,c
 11287  002C08  0E00               	movlw	0
 11288  002C0A  6E1B               	movwf	(A6_Command@timeout+1)^0,c
 11289  002C0C  0E00               	movlw	0
 11290  002C0E  6E1A               	movwf	A6_Command@timeout^0,c
 11291  002C10  0E1F               	movlw	low A6_IsAlive@response
 11292  002C12  6E1C               	movwf	A6_Command@response^0,c
 11293  002C14  0E00               	movlw	high A6_IsAlive@response
 11294  002C16  6E1D               	movwf	(A6_Command@response+1)^0,c
 11295  002C18  0E20               	movlw	32
 11296  002C1A  6E1E               	movwf	A6_Command@responseLen^0,c
 11297  002C1C  ECAE  F012         	call	_A6_Command	;wreg free
 11298  002C20                     
 11299                           ;A6Lib.c: 20: if(strcmp(response, "OK") == 0) {
 11300  002C20  0E1F               	movlw	low A6_IsAlive@response
 11301  002C22  6E05               	movwf	strcmp@s1^0,c
 11302  002C24  0E00               	movlw	high A6_IsAlive@response
 11303  002C26  6E06               	movwf	(strcmp@s1+1)^0,c
 11304  002C28  0EFA               	movlw	low STR_23
 11305  002C2A  6E07               	movwf	strcmp@s2^0,c
 11306  002C2C  0E5F               	movlw	high STR_23
 11307  002C2E  6E08               	movwf	(strcmp@s2+1)^0,c
 11308  002C30  ECA2  F015         	call	_strcmp	;wreg free
 11309  002C34  5005               	movf	?_strcmp^0,w,c
 11310  002C36  1006               	iorwf	(?_strcmp+1)^0,w,c
 11311  002C38  A4D8               	btfss	status,2,c
 11312  002C3A  EF21  F016         	goto	u3341
 11313  002C3E  EF23  F016         	goto	u3340
 11314  002C42                     u3341:
 11315  002C42  EF26  F016         	goto	l4338
 11316  002C46                     u3340:
 11317  002C46                     
 11318                           ;A6Lib.c: 21: return 1;
 11319  002C46  0E01               	movlw	1
 11320  002C48  EF27  F016         	goto	l584
 11321  002C4C                     l4338:
 11322                           
 11323                           ;A6Lib.c: 22: };A6Lib.c: 23: return 0;
 11324  002C4C  0E00               	movlw	0
 11325  002C4E                     l584:
 11326  002C4E  0012               	return		;funcret
 11327  002C50                     __end_of_A6_IsAlive:
 11328                           	opt callstack 0
 11329                           
 11330 ;; *************** function _strcmp *****************
 11331 ;; Defined at:
 11332 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;  s1              2    4[COMRAM] PTR const unsigned char 
 11335 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_IsAlive@response(32), 
 11336 ;;  s2              2    6[COMRAM] PTR const unsigned char 
 11337 ;;		 -> STR_31(3), STR_28(3), STR_23(3), 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  r               1   10[COMRAM] char 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;                  2    4[COMRAM] int 
 11342 ;; Registers used:
 11343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/0
 11346 ;;		On exit  : 0/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11349 ;;      Params:         4       0       0       0       0       0       0       0       0
 11350 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11351 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11352 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11353 ;;Total ram usage:        7 bytes
 11354 ;; Hardware stack levels used:    1
 11355 ;; Hardware stack levels required when called:    2
 11356 ;; This function calls:
 11357 ;;		Nothing
 11358 ;; This function is called by:
 11359 ;;		_A6_IsAlive
 11360 ;;		_A6_BaudRateSet
 11361 ;;		_A6_Process_Random_Comms
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           	psect	text52
 11366  002B44                     __ptext52:
 11367                           	opt callstack 0
 11368  002B44                     _strcmp:
 11369                           	opt callstack 26
 11370  002B44  EFA8  F015         	goto	l3988
 11371  002B48                     l3986:
 11372  002B48  4A05               	infsnz	strcmp@s1^0,f,c
 11373  002B4A  2A06               	incf	(strcmp@s1+1)^0,f,c
 11374  002B4C  4A07               	infsnz	strcmp@s2^0,f,c
 11375  002B4E  2A08               	incf	(strcmp@s2+1)^0,f,c
 11376  002B50                     l3988:
 11377  002B50  C007  FFF6         	movff	strcmp@s2,tblptrl
 11378  002B54  C008  FFF7         	movff	strcmp@s2+1,tblptrh
 11379  002B58                     	if	0	;tblptru may be non-zero
 11380  002B58                     	endif
 11381  002B58                     	if	0	;tblptru may be non-zero
 11382  002B58                     	endif
 11383  002B58  0008               	tblrd		*
 11384  002B5A  CFF5 F009          	movff	tablat,??_strcmp
 11385  002B5E  C005  FFD9         	movff	strcmp@s1,fsr2l
 11386  002B62  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 11387  002B66  50DF               	movf	indf2,w,c
 11388  002B68  6E0A               	movwf	(??_strcmp+1)^0,c
 11389  002B6A  5009               	movf	??_strcmp^0,w,c
 11390  002B6C  5C0A               	subwf	(??_strcmp+1)^0,w,c
 11391  002B6E  6E0B               	movwf	strcmp@r^0,c
 11392  002B70  500B               	movf	strcmp@r^0,w,c
 11393  002B72  A4D8               	btfss	status,2,c
 11394  002B74  EFBE  F015         	goto	u2771
 11395  002B78  EFC0  F015         	goto	u2770
 11396  002B7C                     u2771:
 11397  002B7C  EFCC  F015         	goto	l3992
 11398  002B80                     u2770:
 11399  002B80  C005  FFD9         	movff	strcmp@s1,fsr2l
 11400  002B84  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 11401  002B88  50DF               	movf	indf2,w,c
 11402  002B8A  A4D8               	btfss	status,2,c
 11403  002B8C  EFCA  F015         	goto	u2781
 11404  002B90  EFCC  F015         	goto	u2780
 11405  002B94                     u2781:
 11406  002B94  EFA4  F015         	goto	l3986
 11407  002B98                     u2780:
 11408  002B98                     l3992:
 11409  002B98  500B               	movf	strcmp@r^0,w,c
 11410  002B9A  6E05               	movwf	?_strcmp^0,c
 11411  002B9C  6A06               	clrf	(?_strcmp+1)^0,c
 11412  002B9E  BE05               	btfsc	?_strcmp^0,7,c
 11413  002BA0  0606               	decf	(?_strcmp+1)^0,f,c
 11414  002BA2  0012               	return		;funcret
 11415  002BA4                     __end_of_strcmp:
 11416                           	opt callstack 0
 11417                           
 11418 ;; *************** function _A6_Command *****************
 11419 ;; Defined at:
 11420 ;;		line 91 in file "A6Lib.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  command         2   23[COMRAM] PTR const unsigned char 
 11423 ;;		 -> STR_36(8), STR_32(10), A6_BaudRateSet@request(20), STR_24(9), 
 11424 ;;		 -> STR_22(4), STR_9(10), 
 11425 ;;  timeout         2   25[COMRAM] int 
 11426 ;;  response        2   27[COMRAM] PTR unsigned char 
 11427 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@re
      +sponse(32), 
 11428 ;;		 -> A6_IsAlive@response(32), loop@response(32), 
 11429 ;;  responseLen     1   29[COMRAM] unsigned char 
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11441 ;;      Params:         7       0       0       0       0       0       0       0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11443 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11444 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11445 ;;Total ram usage:        7 bytes
 11446 ;; Hardware stack levels used:    1
 11447 ;; Hardware stack levels required when called:    5
 11448 ;; This function calls:
 11449 ;;		_A6_ReadLine
 11450 ;;		_EUSART_RX_Flush
 11451 ;;		_EUSART_TX_String
 11452 ;;		_strlen
 11453 ;; This function is called by:
 11454 ;;		_loop
 11455 ;;		_A6_IsAlive
 11456 ;;		_A6_BaudRateGet
 11457 ;;		_A6_BaudRateSet
 11458 ;;		_A6_NetworkGetStatus
 11459 ;;		_A6_NetworkGetRSSI
 11460 ;; This function uses a non-reentrant model
 11461 ;;
 11462                           
 11463                           	psect	text53
 11464  00255C                     __ptext53:
 11465                           	opt callstack 0
 11466  00255C                     _A6_Command:
 11467                           	opt callstack 23
 11468  00255C                     
 11469                           ;A6Lib.c: 92: A6_LAST_COMMAND_MILLISECONDS += 75;
 11470  00255C  0E4B               	movlw	75
 11471  00255E  0100               	movlb	0	; () banked
 11472  002560  27C6               	addwf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),f,b
 11473  002562  0E00               	movlw	0
 11474  002564  23C7               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),f,b
 11475  002566  23C8               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),f,b
 11476  002568  23C9               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),f,b
 11477  00256A                     l3964:
 11478  00256A  0100               	movlb	0	; () banked
 11479  00256C  51C6               	movf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),w,b
 11480  00256E  0101               	movlb	1	; () banked
 11481  002570  5DC9               	subwf	_MILLISECONDS& (0+255),w,b
 11482  002572  0100               	movlb	0	; () banked
 11483  002574  51C7               	movf	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),w,b
 11484  002576  0101               	movlb	1	; () banked
 11485  002578  59CA               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
 11486  00257A  0100               	movlb	0	; () banked
 11487  00257C  51C8               	movf	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),w,b
 11488  00257E  0101               	movlb	1	; () banked
 11489  002580  59CB               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
 11490  002582  0100               	movlb	0	; () banked
 11491  002584  51C9               	movf	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),w,b
 11492  002586  0101               	movlb	1	; () banked
 11493  002588  59CC               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
 11494  00258A  A0D8               	btfss	status,0,c
 11495  00258C  EFCA  F012         	goto	u2731
 11496  002590  EFCC  F012         	goto	u2730
 11497  002594                     u2731:
 11498  002594  EFB5  F012         	goto	l3964
 11499  002598                     u2730:
 11500  002598                     
 11501                           ; BSR set to: 1
 11502                           ;A6Lib.c: 94: A6_LAST_COMMAND_MILLISECONDS = MILLISECONDS;
 11503  002598  C1C9  F0C6         	movff	_MILLISECONDS,_A6_LAST_COMMAND_MILLISECONDS
 11504  00259C  C1CA  F0C7         	movff	_MILLISECONDS+1,_A6_LAST_COMMAND_MILLISECONDS+1
 11505  0025A0  C1CB  F0C8         	movff	_MILLISECONDS+2,_A6_LAST_COMMAND_MILLISECONDS+2
 11506  0025A4  C1CC  F0C9         	movff	_MILLISECONDS+3,_A6_LAST_COMMAND_MILLISECONDS+3
 11507  0025A8                     
 11508                           ; BSR set to: 1
 11509                           ;A6Lib.c: 96: EUSART_RX_Flush();
 11510  0025A8  EC7B  F018         	call	_EUSART_RX_Flush	;wreg free
 11511  0025AC                     
 11512                           ;A6Lib.c: 97: EUSART_TX_String(command, strlen(command));
 11513  0025AC  C018  F009         	movff	A6_Command@command,EUSART_TX_String@str
 11514  0025B0  C019  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
 11515  0025B4  C018  F005         	movff	A6_Command@command,strlen@s
 11516  0025B8  C019  F006         	movff	A6_Command@command+1,strlen@s+1
 11517  0025BC  EC9D  F016         	call	_strlen	;wreg free
 11518  0025C0  5005               	movf	?_strlen^0,w,c
 11519  0025C2  6E0B               	movwf	EUSART_TX_String@len^0,c
 11520  0025C4  EC30  F017         	call	_EUSART_TX_String	;wreg free
 11521  0025C8                     
 11522                           ;A6Lib.c: 98: A6_ReadLine(response, responseLen, timeout);
 11523  0025C8  C01C  F011         	movff	A6_Command@response,A6_ReadLine@response
 11524  0025CC  C01D  F012         	movff	A6_Command@response+1,A6_ReadLine@response+1
 11525  0025D0  C01E  F013         	movff	A6_Command@responseLen,A6_ReadLine@responseLen
 11526  0025D4  C01A  F014         	movff	A6_Command@timeout,A6_ReadLine@timeout
 11527  0025D8  C01B  F015         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
 11528  0025DC  EC60  F00F         	call	_A6_ReadLine	;wreg free
 11529  0025E0  0012               	return		;funcret
 11530  0025E2                     __end_of_A6_Command:
 11531                           	opt callstack 0
 11532                           
 11533 ;; *************** function _strlen *****************
 11534 ;; Defined at:
 11535 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;  s               2    4[COMRAM] PTR const unsigned char 
 11538 ;;		 -> STR_37(7), STR_36(8), STR_33(8), STR_32(10), 
 11539 ;;		 -> A6_BaudRateSet@request(20), STR_25(7), STR_24(9), STR_22(4), 
 11540 ;;		 -> STR_9(10), 
 11541 ;; Auto vars:     Size  Location     Type
 11542 ;;  cp              2    6[COMRAM] PTR const unsigned char 
 11543 ;;		 -> STR_37(7), STR_36(8), STR_33(8), STR_32(10), 
 11544 ;;		 -> A6_BaudRateSet@request(20), STR_25(7), STR_24(9), STR_22(4), 
 11545 ;;		 -> STR_9(10), 
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  2    4[COMRAM] unsigned int 
 11548 ;; Registers used:
 11549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 11550 ;; Tracked objects:
 11551 ;;		On entry : 0/0
 11552 ;;		On exit  : 0/0
 11553 ;;		Unchanged: 0/0
 11554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11555 ;;      Params:         2       0       0       0       0       0       0       0       0
 11556 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11557 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11558 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11559 ;;Total ram usage:        4 bytes
 11560 ;; Hardware stack levels used:    1
 11561 ;; Hardware stack levels required when called:    2
 11562 ;; This function calls:
 11563 ;;		Nothing
 11564 ;; This function is called by:
 11565 ;;		_A6_Command
 11566 ;;		_strstr
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570                           	psect	text54
 11571  002D3A                     __ptext54:
 11572                           	opt callstack 0
 11573  002D3A                     _strlen:
 11574                           	opt callstack 25
 11575  002D3A  C005  F007         	movff	strlen@s,strlen@cp
 11576  002D3E  C006  F008         	movff	strlen@s+1,strlen@cp+1
 11577  002D42  EFA5  F016         	goto	l3858
 11578  002D46                     l3856:
 11579  002D46  4A07               	infsnz	strlen@cp^0,f,c
 11580  002D48  2A08               	incf	(strlen@cp+1)^0,f,c
 11581  002D4A                     l3858:
 11582  002D4A  C007  FFF6         	movff	strlen@cp,tblptrl
 11583  002D4E  C008  FFF7         	movff	strlen@cp+1,tblptrh
 11584  002D52  6AF8               	clrf	tblptru,c
 11585  002D54  0E07               	movlw	(high __ramtop+-1)
 11586  002D56  64F7               	cpfsgt	tblptrh,c
 11587  002D58  D003               	bra	u2497
 11588  002D5A  0008               	tblrd		*
 11589  002D5C  50F5               	movf	tablat,w,c
 11590  002D5E  D005               	bra	u2490
 11591  002D60                     u2497:
 11592  002D60  CFF6 FFE9          	movff	tblptrl,fsr0l
 11593  002D64  CFF7 FFEA          	movff	tblptrh,fsr0h
 11594  002D68  50EF               	movf	indf0,w,c
 11595  002D6A                     u2490:
 11596  002D6A  0900               	iorlw	0
 11597  002D6C  A4D8               	btfss	status,2,c
 11598  002D6E  EFBB  F016         	goto	u2501
 11599  002D72  EFBD  F016         	goto	u2500
 11600  002D76                     u2501:
 11601  002D76  EFA3  F016         	goto	l3856
 11602  002D7A                     u2500:
 11603  002D7A  5005               	movf	strlen@s^0,w,c
 11604  002D7C  5C07               	subwf	strlen@cp^0,w,c
 11605  002D7E  6E05               	movwf	?_strlen^0,c
 11606  002D80  5006               	movf	(strlen@s+1)^0,w,c
 11607  002D82  5808               	subwfb	(strlen@cp+1)^0,w,c
 11608  002D84  6E06               	movwf	(?_strlen+1)^0,c
 11609  002D86  0012               	return		;funcret
 11610  002D88                     __end_of_strlen:
 11611                           	opt callstack 0
 11612                           
 11613 ;; *************** function _EUSART_TX_String *****************
 11614 ;; Defined at:
 11615 ;;		line 62 in file "EUSART.c"
 11616 ;; Parameters:    Size  Location     Type
 11617 ;;  str             2    8[COMRAM] PTR const unsigned char 
 11618 ;;		 -> STR_36(8), STR_32(10), A6_BaudRateSet@request(20), STR_24(9), 
 11619 ;;		 -> STR_22(4), STR_9(10), 
 11620 ;;  len             1   10[COMRAM] unsigned char 
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;		None
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  1    wreg      void 
 11625 ;; Registers used:
 11626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11632 ;;      Params:         3       0       0       0       0       0       0       0       0
 11633 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11635 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11636 ;;Total ram usage:        3 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:    3
 11639 ;; This function calls:
 11640 ;;		_EUSART_TX_Char
 11641 ;; This function is called by:
 11642 ;;		_A6_Command
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           	psect	text55
 11647  002E60                     __ptext55:
 11648                           	opt callstack 0
 11649  002E60                     _EUSART_TX_String:
 11650                           	opt callstack 24
 11651  002E60                     
 11652                           ;EUSART.c: 63: while(len--) {
 11653  002E60  EF46  F017         	goto	l3870
 11654  002E64                     l3866:
 11655                           
 11656                           ;EUSART.c: 64: EUSART_TX_Char(*str++);
 11657  002E64  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
 11658  002E68  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
 11659  002E6C  6AF8               	clrf	tblptru,c
 11660  002E6E  0E07               	movlw	(high __ramtop+-1)
 11661  002E70  64F7               	cpfsgt	tblptrh,c
 11662  002E72  D003               	bra	u2517
 11663  002E74  0008               	tblrd		*
 11664  002E76  50F5               	movf	tablat,w,c
 11665  002E78  D005               	bra	u2510
 11666  002E7A                     u2517:
 11667  002E7A  CFF6 FFE9          	movff	tblptrl,fsr0l
 11668  002E7E  CFF7 FFEA          	movff	tblptrh,fsr0h
 11669  002E82  50EF               	movf	indf0,w,c
 11670  002E84                     u2510:
 11671  002E84  EC6C  F018         	call	_EUSART_TX_Char
 11672  002E88  4A09               	infsnz	EUSART_TX_String@str^0,f,c
 11673  002E8A  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
 11674  002E8C                     l3870:
 11675  002E8C  060B               	decf	EUSART_TX_String@len^0,f,c
 11676  002E8E  280B               	incf	EUSART_TX_String@len^0,w,c
 11677  002E90  A4D8               	btfss	status,2,c
 11678  002E92  EF4D  F017         	goto	u2521
 11679  002E96  EF4F  F017         	goto	u2520
 11680  002E9A                     u2521:
 11681  002E9A  EF32  F017         	goto	l3866
 11682  002E9E                     u2520:
 11683  002E9E  0012               	return		;funcret
 11684  002EA0                     __end_of_EUSART_TX_String:
 11685                           	opt callstack 0
 11686                           
 11687 ;; *************** function _EUSART_TX_Char *****************
 11688 ;; Defined at:
 11689 ;;		line 56 in file "EUSART.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  c               1    wreg     unsigned char 
 11692 ;; Auto vars:     Size  Location     Type
 11693 ;;  c               1    4[COMRAM] unsigned char 
 11694 ;; Return value:  Size  Location     Type
 11695 ;;                  1    wreg      void 
 11696 ;; Registers used:
 11697 ;;		wreg
 11698 ;; Tracked objects:
 11699 ;;		On entry : 0/0
 11700 ;;		On exit  : 0/0
 11701 ;;		Unchanged: 0/0
 11702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11703 ;;      Params:         0       0       0       0       0       0       0       0       0
 11704 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11706 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11707 ;;Total ram usage:        1 bytes
 11708 ;; Hardware stack levels used:    1
 11709 ;; Hardware stack levels required when called:    2
 11710 ;; This function calls:
 11711 ;;		Nothing
 11712 ;; This function is called by:
 11713 ;;		_EUSART_TX_String
 11714 ;; This function uses a non-reentrant model
 11715 ;;
 11716                           
 11717                           	psect	text56
 11718  0030D8                     __ptext56:
 11719                           	opt callstack 0
 11720  0030D8                     _EUSART_TX_Char:
 11721                           	opt callstack 24
 11722                           
 11723                           ;incstack = 0
 11724                           ;EUSART_TX_Char@c stored from wreg
 11725  0030D8  6E05               	movwf	EUSART_TX_Char@c^0,c
 11726  0030DA                     l699:
 11727  0030DA  A89E               	btfss	3998,4,c	;volatile
 11728  0030DC  EF72  F018         	goto	u2361
 11729  0030E0  EF74  F018         	goto	u2360
 11730  0030E4                     u2361:
 11731  0030E4  EF6D  F018         	goto	l699
 11732  0030E8                     u2360:
 11733  0030E8                     
 11734                           ;EUSART.c: 58: TXREG = c;
 11735  0030E8  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
 11736  0030EC  F000               	nop		;# 
 11737  0030EE  0012               	return		;funcret
 11738  0030F0                     __end_of_EUSART_TX_Char:
 11739                           	opt callstack 0
 11740                           
 11741 ;; *************** function _EUSART_RX_Flush *****************
 11742 ;; Defined at:
 11743 ;;		line 82 in file "EUSART.c"
 11744 ;; Parameters:    Size  Location     Type
 11745 ;;		None
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;                  1    wreg      void 
 11750 ;; Registers used:
 11751 ;;		None
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11757 ;;      Params:         0       0       0       0       0       0       0       0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11760 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11761 ;;Total ram usage:        0 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    2
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_A6_Command
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text57
 11772  0030F6                     __ptext57:
 11773                           	opt callstack 0
 11774  0030F6                     _EUSART_RX_Flush:
 11775                           	opt callstack 25
 11776  0030F6                     
 11777                           ;EUSART.c: 83: EUSART_RX.iRead = EUSART_RX.iWrite;
 11778  0030F6  C201  F200         	movff	_EUSART_RX+1,_EUSART_RX
 11779  0030FA  0012               	return		;funcret
 11780  0030FC                     __end_of_EUSART_RX_Flush:
 11781                           	opt callstack 0
 11782                           
 11783 ;; *************** function _A6_ReadLine *****************
 11784 ;; Defined at:
 11785 ;;		line 102 in file "A6Lib.c"
 11786 ;; Parameters:    Size  Location     Type
 11787 ;;  response        2   16[COMRAM] PTR unsigned char 
 11788 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@response(32), A6_BaudR
      +ateSet@response(32), 
 11789 ;;		 -> A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 11790 ;;  responseLen     1   18[COMRAM] unsigned char 
 11791 ;;  timeout         2   19[COMRAM] int 
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;  c               1   22[COMRAM] unsigned char 
 11794 ;;  iResponse       1   21[COMRAM] unsigned char 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      unsigned char 
 11797 ;; Registers used:
 11798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11804 ;;      Params:         5       0       0       0       0       0       0       0       0
 11805 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11807 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11808 ;;Total ram usage:        7 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; Hardware stack levels required when called:    4
 11811 ;; This function calls:
 11812 ;;		_EUSART_BufferGetChar
 11813 ;;		_memset
 11814 ;; This function is called by:
 11815 ;;		_A6_Command
 11816 ;;		_A6_Process_Random_Comms
 11817 ;; This function uses a non-reentrant model
 11818 ;;
 11819                           
 11820                           	psect	text58
 11821  001EC0                     __ptext58:
 11822                           	opt callstack 0
 11823  001EC0                     _A6_ReadLine:
 11824                           	opt callstack 24
 11825  001EC0                     
 11826                           ;A6Lib.c: 103: char c;;A6Lib.c: 104: memset(response, 0x00, responseLen);
 11827  001EC0  C011  F005         	movff	A6_ReadLine@response,memset@p1
 11828  001EC4  C012  F006         	movff	A6_ReadLine@response+1,memset@p1+1
 11829  001EC8  0E00               	movlw	0
 11830  001ECA  6E08               	movwf	(memset@c+1)^0,c
 11831  001ECC  0E00               	movlw	0
 11832  001ECE  6E07               	movwf	memset@c^0,c
 11833  001ED0  C013  F009         	movff	A6_ReadLine@responseLen,memset@n
 11834  001ED4  6A0A               	clrf	(memset@n+1)^0,c
 11835  001ED6  EC8C  F017         	call	_memset	;wreg free
 11836  001EDA                     l613:
 11837                           
 11838                           ;A6Lib.c: 108: c = EUSART_BufferGetChar(timeout);
 11839  001EDA  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 11840  001EDE  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 11841  001EE2  ECC4  F016         	call	_EUSART_BufferGetChar	;wreg free
 11842  001EE6  6E17               	movwf	A6_ReadLine@c^0,c
 11843  001EE8                     
 11844                           ;A6Lib.c: 109: if(c == (0)) return 0;
 11845  001EE8  5017               	movf	A6_ReadLine@c^0,w,c
 11846  001EEA  A4D8               	btfss	status,2,c
 11847  001EEC  EF7A  F00F         	goto	u2531
 11848  001EF0  EF7C  F00F         	goto	u2530
 11849  001EF4                     u2531:
 11850  001EF4  EF7F  F00F         	goto	l3880
 11851  001EF8                     u2530:
 11852  001EF8  0E00               	movlw	0
 11853  001EFA  EFCA  F00F         	goto	l615
 11854  001EFE                     l3880:
 11855                           
 11856                           ;A6Lib.c: 110: if((c != '\r') && (c != '\n')) break;
 11857  001EFE  0E0D               	movlw	13
 11858  001F00  1817               	xorwf	A6_ReadLine@c^0,w,c
 11859  001F02  B4D8               	btfsc	status,2,c
 11860  001F04  EF86  F00F         	goto	u2541
 11861  001F08  EF88  F00F         	goto	u2540
 11862  001F0C                     u2541:
 11863  001F0C  EF6D  F00F         	goto	l613
 11864  001F10                     u2540:
 11865  001F10  0E0A               	movlw	10
 11866  001F12  1817               	xorwf	A6_ReadLine@c^0,w,c
 11867  001F14  B4D8               	btfsc	status,2,c
 11868  001F16  EF8F  F00F         	goto	u2551
 11869  001F1A  EF91  F00F         	goto	u2550
 11870  001F1E                     u2551:
 11871  001F1E  EF6D  F00F         	goto	l613
 11872  001F22                     u2550:
 11873  001F22                     
 11874                           ;A6Lib.c: 111: };A6Lib.c: 114: uint8_t iResponse = 0;
 11875  001F22  0E00               	movlw	0
 11876  001F24  6E16               	movwf	A6_ReadLine@iResponse^0,c
 11877  001F26                     l3888:
 11878                           
 11879                           ;A6Lib.c: 116: if((c == '\r') || (c == (0))) break;
 11880  001F26  0E0D               	movlw	13
 11881  001F28  1817               	xorwf	A6_ReadLine@c^0,w,c
 11882  001F2A  B4D8               	btfsc	status,2,c
 11883  001F2C  EF9A  F00F         	goto	u2561
 11884  001F30  EF9C  F00F         	goto	u2560
 11885  001F34                     u2561:
 11886  001F34  EFC9  F00F         	goto	l3902
 11887  001F38                     u2560:
 11888  001F38  5017               	movf	A6_ReadLine@c^0,w,c
 11889  001F3A  A4D8               	btfss	status,2,c
 11890  001F3C  EFA2  F00F         	goto	u2571
 11891  001F40  EFA4  F00F         	goto	u2570
 11892  001F44                     u2571:
 11893  001F44  EFA6  F00F         	goto	l3892
 11894  001F48                     u2570:
 11895  001F48  EFC9  F00F         	goto	l3902
 11896  001F4C                     l3892:
 11897                           
 11898                           ;A6Lib.c: 117: response[iResponse] = c;
 11899  001F4C  5016               	movf	A6_ReadLine@iResponse^0,w,c
 11900  001F4E  2411               	addwf	A6_ReadLine@response^0,w,c
 11901  001F50  6ED9               	movwf	fsr2l,c
 11902  001F52  0E00               	movlw	0
 11903  001F54  2012               	addwfc	(A6_ReadLine@response+1)^0,w,c
 11904  001F56  6EDA               	movwf	fsr2h,c
 11905  001F58  C017  FFDF         	movff	A6_ReadLine@c,indf2
 11906  001F5C                     
 11907                           ;A6Lib.c: 118: iResponse++;
 11908  001F5C  2A16               	incf	A6_ReadLine@iResponse^0,f,c
 11909  001F5E                     
 11910                           ;A6Lib.c: 119: if(iResponse == responseLen) break;
 11911  001F5E  5013               	movf	A6_ReadLine@responseLen^0,w,c
 11912  001F60  1816               	xorwf	A6_ReadLine@iResponse^0,w,c
 11913  001F62  A4D8               	btfss	status,2,c
 11914  001F64  EFB6  F00F         	goto	u2581
 11915  001F68  EFB8  F00F         	goto	u2580
 11916  001F6C                     u2581:
 11917  001F6C  EFBA  F00F         	goto	l3900
 11918  001F70                     u2580:
 11919  001F70  EFC9  F00F         	goto	l3902
 11920  001F74                     l3900:
 11921                           
 11922                           ;A6Lib.c: 120: } while(c = EUSART_BufferGetChar(timeout));
 11923  001F74  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 11924  001F78  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 11925  001F7C  ECC4  F016         	call	_EUSART_BufferGetChar	;wreg free
 11926  001F80  6E17               	movwf	A6_ReadLine@c^0,c
 11927  001F82  5017               	movf	A6_ReadLine@c^0,w,c
 11928  001F84  A4D8               	btfss	status,2,c
 11929  001F86  EFC7  F00F         	goto	u2591
 11930  001F8A  EFC9  F00F         	goto	u2590
 11931  001F8E                     u2591:
 11932  001F8E  EF93  F00F         	goto	l3888
 11933  001F92                     u2590:
 11934  001F92                     l3902:
 11935                           
 11936                           ;A6Lib.c: 122: return iResponse;
 11937  001F92  5016               	movf	A6_ReadLine@iResponse^0,w,c
 11938  001F94                     l615:
 11939  001F94  0012               	return		;funcret
 11940  001F96                     __end_of_A6_ReadLine:
 11941                           	opt callstack 0
 11942                           
 11943 ;; *************** function _memset *****************
 11944 ;; Defined at:
 11945 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;  p1              2    4[COMRAM] PTR void 
 11948 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 11949 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 11950 ;;  c               2    6[COMRAM] int 
 11951 ;;  n               2    8[COMRAM] unsigned int 
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;  p               2   10[COMRAM] PTR unsigned char 
 11954 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 11955 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), loop@response(32), 
 11956 ;; Return value:  Size  Location     Type
 11957 ;;                  2    4[COMRAM] PTR void 
 11958 ;; Registers used:
 11959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11960 ;; Tracked objects:
 11961 ;;		On entry : 0/0
 11962 ;;		On exit  : 0/0
 11963 ;;		Unchanged: 0/0
 11964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11965 ;;      Params:         6       0       0       0       0       0       0       0       0
 11966 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11967 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11968 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11969 ;;Total ram usage:        8 bytes
 11970 ;; Hardware stack levels used:    1
 11971 ;; Hardware stack levels required when called:    2
 11972 ;; This function calls:
 11973 ;;		Nothing
 11974 ;; This function is called by:
 11975 ;;		_A6_ReadLine
 11976 ;;		_EUSART_Init
 11977 ;; This function uses a non-reentrant model
 11978 ;;
 11979                           
 11980                           	psect	text59
 11981  002F18                     __ptext59:
 11982                           	opt callstack 0
 11983  002F18                     _memset:
 11984                           	opt callstack 25
 11985  002F18  C005  F00B         	movff	memset@p1,memset@p
 11986  002F1C  C006  F00C         	movff	memset@p1+1,memset@p+1
 11987  002F20  EF9A  F017         	goto	l3770
 11988  002F24                     l3766:
 11989  002F24  C00B  FFD9         	movff	memset@p,fsr2l
 11990  002F28  C00C  FFDA         	movff	memset@p+1,fsr2h
 11991  002F2C  C007  FFDF         	movff	memset@c,indf2
 11992  002F30  4A0B               	infsnz	memset@p^0,f,c
 11993  002F32  2A0C               	incf	(memset@p+1)^0,f,c
 11994  002F34                     l3770:
 11995  002F34  0609               	decf	memset@n^0,f,c
 11996  002F36  A0D8               	btfss	status,0,c
 11997  002F38  060A               	decf	(memset@n+1)^0,f,c
 11998  002F3A  2809               	incf	memset@n^0,w,c
 11999  002F3C  E106               	bnz	u2331
 12000  002F3E  280A               	incf	(memset@n+1)^0,w,c
 12001  002F40  A4D8               	btfss	status,2,c
 12002  002F42  EFA5  F017         	goto	u2331
 12003  002F46  EFA7  F017         	goto	u2330
 12004  002F4A                     u2331:
 12005  002F4A  EF92  F017         	goto	l3766
 12006  002F4E                     u2330:
 12007  002F4E  0012               	return		;funcret
 12008  002F50                     __end_of_memset:
 12009                           	opt callstack 0
 12010                           
 12011 ;; *************** function _EUSART_BufferGetChar *****************
 12012 ;; Defined at:
 12013 ;;		line 95 in file "EUSART.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;  timeout         2   14[COMRAM] int 
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;		None
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1    wreg      unsigned char 
 12020 ;; Registers used:
 12021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12027 ;;      Params:         2       0       0       0       0       0       0       0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12030 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12031 ;;Total ram usage:        2 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    3
 12034 ;; This function calls:
 12035 ;;		_EUSART_RX_AvailableData
 12036 ;; This function is called by:
 12037 ;;		_A6_ReadLine
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041                           	psect	text60
 12042  002D88                     __ptext60:
 12043                           	opt callstack 0
 12044  002D88                     _EUSART_BufferGetChar:
 12045                           	opt callstack 24
 12046  002D88                     
 12047                           ;EUSART.c: 96: if(EUSART_RX_AvailableData(timeout) == 0) return (0);
 12048  002D88  C00F  F005         	movff	EUSART_BufferGetChar@timeout,EUSART_RX_AvailableData@timeout
 12049  002D8C  C010  F006         	movff	EUSART_BufferGetChar@timeout+1,EUSART_RX_AvailableData@timeout+1
 12050  002D90  EC6A  F012         	call	_EUSART_RX_AvailableData	;wreg free
 12051  002D94  0900               	iorlw	0
 12052  002D96  A4D8               	btfss	status,2,c
 12053  002D98  EFD0  F016         	goto	u2341
 12054  002D9C  EFD2  F016         	goto	u2340
 12055  002DA0                     u2341:
 12056  002DA0  EFD5  F016         	goto	l3778
 12057  002DA4                     u2340:
 12058  002DA4  0E00               	movlw	0
 12059  002DA6  EFE9  F016         	goto	l728
 12060  002DAA                     l3778:
 12061                           
 12062                           ;EUSART.c: 97: EUSART_RX.iRead++;
 12063  002DAA  0102               	movlb	2	; () banked
 12064  002DAC  2B00               	incf	_EUSART_RX& (0+255),f,b
 12065  002DAE                     
 12066                           ; BSR set to: 2
 12067                           ;EUSART.c: 98: if(EUSART_RX.iRead == 128) EUSART_RX.iRead = 0;
 12068  002DAE  0E80               	movlw	128
 12069  002DB0  1900               	xorwf	_EUSART_RX& (0+255),w,b
 12070  002DB2  A4D8               	btfss	status,2,c
 12071  002DB4  EFDE  F016         	goto	u2351
 12072  002DB8  EFE0  F016         	goto	u2350
 12073  002DBC                     u2351:
 12074  002DBC  EFE2  F016         	goto	l3784
 12075  002DC0                     u2350:
 12076  002DC0                     
 12077                           ; BSR set to: 2
 12078  002DC0  0E00               	movlw	0
 12079  002DC2  6F00               	movwf	_EUSART_RX& (0+255),b
 12080  002DC4                     l3784:
 12081                           
 12082                           ; BSR set to: 2
 12083                           ;EUSART.c: 99: return EUSART_RX.buffer[EUSART_RX.iRead];
 12084  002DC4  0E02               	movlw	low (_EUSART_RX+2)
 12085  002DC6  2500               	addwf	_EUSART_RX& (0+255),w,b
 12086  002DC8  6ED9               	movwf	fsr2l,c
 12087  002DCA  6ADA               	clrf	fsr2h,c
 12088  002DCC  0E02               	movlw	high (_EUSART_RX+2)
 12089  002DCE  22DA               	addwfc	fsr2h,f,c
 12090  002DD0  50DF               	movf	indf2,w,c
 12091  002DD2                     l728:
 12092  002DD2  0012               	return		;funcret
 12093  002DD4                     __end_of_EUSART_BufferGetChar:
 12094                           	opt callstack 0
 12095                           
 12096 ;; *************** function _EUSART_RX_AvailableData *****************
 12097 ;; Defined at:
 12098 ;;		line 86 in file "EUSART.c"
 12099 ;; Parameters:    Size  Location     Type
 12100 ;;  timeout         2    4[COMRAM] int 
 12101 ;; Auto vars:     Size  Location     Type
 12102 ;;  t               4   10[COMRAM] unsigned long 
 12103 ;; Return value:  Size  Location     Type
 12104 ;;                  1    wreg      unsigned char 
 12105 ;; Registers used:
 12106 ;;		wreg, status,2, status,0
 12107 ;; Tracked objects:
 12108 ;;		On entry : 0/0
 12109 ;;		On exit  : 0/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12112 ;;      Params:         2       0       0       0       0       0       0       0       0
 12113 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12114 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12115 ;;      Totals:        10       0       0       0       0       0       0       0       0
 12116 ;;Total ram usage:       10 bytes
 12117 ;; Hardware stack levels used:    1
 12118 ;; Hardware stack levels required when called:    2
 12119 ;; This function calls:
 12120 ;;		Nothing
 12121 ;; This function is called by:
 12122 ;;		_A6_Process_Random_Comms
 12123 ;;		_EUSART_BufferGetChar
 12124 ;; This function uses a non-reentrant model
 12125 ;;
 12126                           
 12127                           	psect	text61
 12128  0024D4                     __ptext61:
 12129                           	opt callstack 0
 12130  0024D4                     _EUSART_RX_AvailableData:
 12131                           	opt callstack 26
 12132  0024D4                     
 12133                           ;EUSART.c: 87: if(timeout == 0) timeout = 1000;
 12134  0024D4  5005               	movf	EUSART_RX_AvailableData@timeout^0,w,c
 12135  0024D6  1006               	iorwf	(EUSART_RX_AvailableData@timeout+1)^0,w,c
 12136  0024D8  A4D8               	btfss	status,2,c
 12137  0024DA  EF71  F012         	goto	u2161
 12138  0024DE  EF73  F012         	goto	u2160
 12139  0024E2                     u2161:
 12140  0024E2  EF77  F012         	goto	l3660
 12141  0024E6                     u2160:
 12142  0024E6  0E03               	movlw	3
 12143  0024E8  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
 12144  0024EA  0EE8               	movlw	232
 12145  0024EC  6E05               	movwf	EUSART_RX_AvailableData@timeout^0,c
 12146  0024EE                     l3660:
 12147                           
 12148                           ;EUSART.c: 88: uint32_t t = MILLISECONDS + timeout;
 12149  0024EE  C005  F007         	movff	EUSART_RX_AvailableData@timeout,??_EUSART_RX_AvailableData
 12150  0024F2  C006  F008         	movff	EUSART_RX_AvailableData@timeout+1,??_EUSART_RX_AvailableData+1
 12151  0024F6  0E00               	movlw	0
 12152  0024F8  BE08               	btfsc	(??_EUSART_RX_AvailableData+1)^0,7,c
 12153  0024FA  0EFF               	movlw	255
 12154  0024FC  6E09               	movwf	(??_EUSART_RX_AvailableData+2)^0,c
 12155  0024FE  6E0A               	movwf	(??_EUSART_RX_AvailableData+3)^0,c
 12156  002500  0101               	movlb	1	; () banked
 12157  002502  51C9               	movf	_MILLISECONDS& (0+255),w,b
 12158  002504  2407               	addwf	??_EUSART_RX_AvailableData^0,w,c
 12159  002506  6E0B               	movwf	EUSART_RX_AvailableData@t^0,c
 12160  002508  51CA               	movf	(_MILLISECONDS+1)& (0+255),w,b
 12161  00250A  2008               	addwfc	(??_EUSART_RX_AvailableData+1)^0,w,c
 12162  00250C  6E0C               	movwf	(EUSART_RX_AvailableData@t+1)^0,c
 12163  00250E  51CB               	movf	(_MILLISECONDS+2)& (0+255),w,b
 12164  002510  2009               	addwfc	(??_EUSART_RX_AvailableData+2)^0,w,c
 12165  002512  6E0D               	movwf	(EUSART_RX_AvailableData@t+2)^0,c
 12166  002514  51CC               	movf	(_MILLISECONDS+3)& (0+255),w,b
 12167  002516  200A               	addwfc	(??_EUSART_RX_AvailableData+3)^0,w,c
 12168  002518  6E0E               	movwf	(EUSART_RX_AvailableData@t+3)^0,c
 12169                           
 12170                           ;EUSART.c: 89: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
 12171  00251A  EFA2  F012         	goto	l3668
 12172  00251E                     l3662:
 12173                           
 12174                           ; BSR set to: 2
 12175                           ;EUSART.c: 90: if(t < MILLISECONDS) return 0;
 12176  00251E  0101               	movlb	1	; () banked
 12177  002520  51C9               	movf	_MILLISECONDS& (0+255),w,b
 12178  002522  5C0B               	subwf	EUSART_RX_AvailableData@t^0,w,c
 12179  002524  51CA               	movf	(_MILLISECONDS+1)& (0+255),w,b
 12180  002526  580C               	subwfb	(EUSART_RX_AvailableData@t+1)^0,w,c
 12181  002528  51CB               	movf	(_MILLISECONDS+2)& (0+255),w,b
 12182  00252A  580D               	subwfb	(EUSART_RX_AvailableData@t+2)^0,w,c
 12183  00252C  51CC               	movf	(_MILLISECONDS+3)& (0+255),w,b
 12184  00252E  580E               	subwfb	(EUSART_RX_AvailableData@t+3)^0,w,c
 12185  002530  B0D8               	btfsc	status,0,c
 12186  002532  EF9D  F012         	goto	u2171
 12187  002536  EF9F  F012         	goto	u2170
 12188  00253A                     u2171:
 12189  00253A  EFA2  F012         	goto	l3668
 12190  00253E                     u2170:
 12191  00253E                     
 12192                           ; BSR set to: 1
 12193  00253E  0E00               	movlw	0
 12194  002540  EFAD  F012         	goto	l723
 12195  002544                     l3668:
 12196                           
 12197                           ; BSR set to: 1
 12198  002544  0102               	movlb	2	; () banked
 12199  002546  5100               	movf	_EUSART_RX& (0+255),w,b
 12200  002548  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 12201  00254A  B4D8               	btfsc	status,2,c
 12202  00254C  EFAA  F012         	goto	u2181
 12203  002550  EFAC  F012         	goto	u2180
 12204  002554                     u2181:
 12205  002554  EF8F  F012         	goto	l3662
 12206  002558                     u2180:
 12207  002558                     
 12208                           ; BSR set to: 2
 12209                           ;EUSART.c: 91: };EUSART.c: 92: return 1;
 12210  002558  0E01               	movlw	1
 12211  00255A                     l723:
 12212  00255A  0012               	return		;funcret
 12213  00255C                     __end_of_EUSART_RX_AvailableData:
 12214                           	opt callstack 0
 12215                           
 12216 ;; *************** function _isr *****************
 12217 ;; Defined at:
 12218 ;;		line 100 in file "init.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;		None
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;		None
 12223 ;; Return value:  Size  Location     Type
 12224 ;;                  1    wreg      void 
 12225 ;; Registers used:
 12226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12227 ;; Tracked objects:
 12228 ;;		On entry : 0/0
 12229 ;;		On exit  : 0/0
 12230 ;;		Unchanged: 0/0
 12231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12232 ;;      Params:         0       0       0       0       0       0       0       0       0
 12233 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12234 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12235 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12236 ;;Total ram usage:        2 bytes
 12237 ;; Hardware stack levels used:    1
 12238 ;; Hardware stack levels required when called:    1
 12239 ;; This function calls:
 12240 ;;		_EUSART_RX_Interrupt
 12241 ;;		_Ecg_Interrupt
 12242 ;; This function is called by:
 12243 ;;		Interrupt level 2
 12244 ;; This function uses a non-reentrant model
 12245 ;;
 12246                           
 12247                           	psect	intcode
 12248  000008                     __pintcode:
 12249                           	opt callstack 0
 12250  000008                     _isr:
 12251                           	opt callstack 20
 12252                           
 12253                           ;incstack = 0
 12254  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12255  00000A  ED9E  F014         	call	int_func,f	;refresh shadow registers
 12256                           
 12257                           	psect	intcode_body
 12258  00293C                     __pintcode_body:
 12259                           	opt callstack 20
 12260  00293C                     int_func:
 12261                           	opt callstack 20
 12262  00293C  0006               	pop		; remove dummy address from shadow register refresh
 12263  00293E  CFD9 F003          	movff	fsr2l,??_isr
 12264  002942  CFDA F004          	movff	fsr2h,??_isr+1
 12265  002946                     
 12266                           ;init.c: 102: if(TMR3IE && TMR3IF) {
 12267  002946  A2A0               	btfss	4000,1,c	;volatile
 12268  002948  EFA8  F014         	goto	i2u390_41
 12269  00294C  EFAA  F014         	goto	i2u390_40
 12270  002950                     i2u390_41:
 12271  002950  EFBF  F014         	goto	i2l4860
 12272  002954                     i2u390_40:
 12273  002954  A2A1               	btfss	4001,1,c	;volatile
 12274  002956  EFAF  F014         	goto	i2u391_41
 12275  00295A  EFB1  F014         	goto	i2u391_40
 12276  00295E                     i2u391_41:
 12277  00295E  EFBF  F014         	goto	i2l4860
 12278  002962                     i2u391_40:
 12279  002962                     
 12280                           ;init.c: 103: MILLISECONDS += 5;
 12281  002962  0E05               	movlw	5
 12282  002964  0101               	movlb	1	; () banked
 12283  002966  27C9               	addwf	_MILLISECONDS& (0+255),f,b
 12284  002968  0E00               	movlw	0
 12285  00296A  23CA               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
 12286  00296C  23CB               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
 12287  00296E  23CC               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
 12288  002970                     
 12289                           ; BSR set to: 1
 12290                           ;init.c: 104: Ecg_Interrupt();
 12291  002970  EC32  F018         	call	_Ecg_Interrupt	;wreg free
 12292  002974                     
 12293                           ;init.c: 107: TMR3H = 0x16;
 12294  002974  0E16               	movlw	22
 12295  002976  6EB3               	movwf	179,c	;volatile
 12296  002978                     
 12297                           ;init.c: 108: TMR3L = 0x00;
 12298  002978  0E00               	movlw	0
 12299  00297A  6EB2               	movwf	178,c	;volatile
 12300  00297C                     
 12301                           ;init.c: 109: TMR3IF = 0;
 12302  00297C  92A1               	bcf	4001,1,c	;volatile
 12303  00297E                     i2l4860:
 12304                           
 12305                           ;init.c: 110: };init.c: 113: if(RCIE && RCIF) {
 12306  00297E  AA9D               	btfss	3997,5,c	;volatile
 12307  002980  EFC4  F014         	goto	i2u392_41
 12308  002984  EFC6  F014         	goto	i2u392_40
 12309  002988                     i2u392_41:
 12310  002988  EFCF  F014         	goto	i2l191
 12311  00298C                     i2u392_40:
 12312  00298C  AA9E               	btfss	3998,5,c	;volatile
 12313  00298E  EFCB  F014         	goto	i2u393_41
 12314  002992  EFCD  F014         	goto	i2u393_40
 12315  002996                     i2u393_41:
 12316  002996  EFCF  F014         	goto	i2l191
 12317  00299A                     i2u393_40:
 12318  00299A                     
 12319                           ;init.c: 114: EUSART_RX_Interrupt();
 12320  00299A  EC70  F015         	call	_EUSART_RX_Interrupt	;wreg free
 12321  00299E                     i2l191:
 12322  00299E  C004  FFDA         	movff	??_isr+1,fsr2h
 12323  0029A2  C003  FFD9         	movff	??_isr,fsr2l
 12324  0029A6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12325  0029A8  0011               	retfie		f
 12326  0029AA                     __end_of_isr:
 12327                           	opt callstack 0
 12328                           
 12329 ;; *************** function _Ecg_Interrupt *****************
 12330 ;; Defined at:
 12331 ;;		line 135 in file "ecg.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;		None
 12334 ;; Auto vars:     Size  Location     Type
 12335 ;;		None
 12336 ;; Return value:  Size  Location     Type
 12337 ;;                  1    wreg      void 
 12338 ;; Registers used:
 12339 ;;		wreg, status,2, status,0
 12340 ;; Tracked objects:
 12341 ;;		On entry : 0/0
 12342 ;;		On exit  : 0/0
 12343 ;;		Unchanged: 0/0
 12344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12345 ;;      Params:         0       0       0       0       0       0       0       0       0
 12346 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12347 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12348 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12349 ;;Total ram usage:        2 bytes
 12350 ;; Hardware stack levels used:    1
 12351 ;; This function calls:
 12352 ;;		Nothing
 12353 ;; This function is called by:
 12354 ;;		_isr
 12355 ;; This function uses a non-reentrant model
 12356 ;;
 12357                           
 12358                           	psect	text63
 12359  003064                     __ptext63:
 12360                           	opt callstack 0
 12361  003064                     _Ecg_Interrupt:
 12362                           	opt callstack 20
 12363  003064                     
 12364                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
 12365  003064  0E01               	movlw	1
 12366  003066  6E01               	movwf	??_Ecg_Interrupt^0,c
 12367  003068  5057               	movf	(_ECG_FLAGS+1)^0,w,c
 12368  00306A  0B07               	andlw	7
 12369  00306C  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
 12370  00306E  5001               	movf	??_Ecg_Interrupt^0,w,c
 12371  003070  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
 12372  003072  5057               	movf	(_ECG_FLAGS+1)^0,w,c
 12373  003074  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 12374  003076  0BF8               	andlw	-8
 12375  003078  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 12376  00307A  6E57               	movwf	(_ECG_FLAGS+1)^0,c
 12377  00307C                     
 12378                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
 12379  00307C  0100               	movlb	0	; () banked
 12380  00307E  2BC5               	incf	(_ECG_HEARTRATE+3)& (0+255),f,b
 12381  003080                     
 12382                           ; BSR set to: 0
 12383                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
 12384  003080  8856               	bsf	_ECG_FLAGS^0,4,c
 12385  003082                     
 12386                           ; BSR set to: 0
 12387  003082  0012               	return		;funcret
 12388  003084                     __end_of_Ecg_Interrupt:
 12389                           	opt callstack 0
 12390                           
 12391 ;; *************** function _EUSART_RX_Interrupt *****************
 12392 ;; Defined at:
 12393 ;;		line 68 in file "EUSART.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;		None
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;  c               1    1[COMRAM] unsigned char 
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  1    wreg      void 
 12400 ;; Registers used:
 12401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12407 ;;      Params:         0       0       0       0       0       0       0       0       0
 12408 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12409 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12410 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12411 ;;Total ram usage:        2 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; This function calls:
 12414 ;;		Nothing
 12415 ;; This function is called by:
 12416 ;;		_isr
 12417 ;; This function uses a non-reentrant model
 12418 ;;
 12419                           
 12420                           	psect	text64
 12421  002AE0                     __ptext64:
 12422                           	opt callstack 0
 12423  002AE0                     _EUSART_RX_Interrupt:
 12424                           	opt callstack 20
 12425  002AE0                     
 12426                           ;EUSART.c: 69: uint8_t c = RCREG;
 12427  002AE0  CFAE F002          	movff	4014,EUSART_RX_Interrupt@c	;volatile
 12428                           
 12429                           ;EUSART.c: 70: if(OERR == 1) {
 12430  002AE4  A2AB               	btfss	4011,1,c	;volatile
 12431  002AE6  EF77  F015         	goto	i2u380_41
 12432  002AEA  EF79  F015         	goto	i2u380_40
 12433  002AEE                     i2u380_41:
 12434  002AEE  EF8C  F015         	goto	i2l4764
 12435  002AF2                     i2u380_40:
 12436  002AF2                     
 12437                           ;EUSART.c: 71: CREN = 0;
 12438  002AF2  98AB               	bcf	4011,4,c	;volatile
 12439                           
 12440                           ;EUSART.c: 72: CREN = 1;
 12441  002AF4  88AB               	bsf	4011,4,c	;volatile
 12442  002AF6                     
 12443                           ;EUSART.c: 73: PORTAbits.RA2 = !PORTAbits.RA2;
 12444  002AF6  A480               	btfss	128,2,c	;volatile
 12445  002AF8  EF80  F015         	goto	i2u381_41
 12446  002AFC  EF84  F015         	goto	i2u381_40
 12447  002B00                     i2u381_41:
 12448  002B00  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 12449  002B02  2A01               	incf	??_EUSART_RX_Interrupt^0,f,c
 12450  002B04  EF85  F015         	goto	i2u382_48
 12451  002B08                     i2u381_40:
 12452  002B08  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 12453  002B0A                     i2u382_48:
 12454  002B0A  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 12455  002B0C  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 12456  002B0E  5080               	movf	128,w,c	;volatile
 12457  002B10  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 12458  002B12  0BFB               	andlw	-5
 12459  002B14  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 12460  002B16  6E80               	movwf	128,c	;volatile
 12461  002B18                     i2l4764:
 12462                           
 12463                           ;EUSART.c: 74: };EUSART.c: 76: EUSART_RX.iWrite++;
 12464  002B18  0102               	movlb	2	; () banked
 12465  002B1A  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
 12466  002B1C                     
 12467                           ; BSR set to: 2
 12468                           ;EUSART.c: 77: if(EUSART_RX.iWrite == 128) EUSART_RX.iWrite = 0;
 12469  002B1C  0E80               	movlw	128
 12470  002B1E  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 12471  002B20  A4D8               	btfss	status,2,c
 12472  002B22  EF95  F015         	goto	i2u383_41
 12473  002B26  EF97  F015         	goto	i2u383_40
 12474  002B2A                     i2u383_41:
 12475  002B2A  EF99  F015         	goto	i2l4770
 12476  002B2E                     i2u383_40:
 12477  002B2E                     
 12478                           ; BSR set to: 2
 12479  002B2E  0E00               	movlw	0
 12480  002B30  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
 12481  002B32                     i2l4770:
 12482                           
 12483                           ; BSR set to: 2
 12484                           ;EUSART.c: 78: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
 12485  002B32  0E02               	movlw	low (_EUSART_RX+2)
 12486  002B34  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
 12487  002B36  6ED9               	movwf	fsr2l,c
 12488  002B38  6ADA               	clrf	fsr2h,c
 12489  002B3A  0E02               	movlw	high (_EUSART_RX+2)
 12490  002B3C  22DA               	addwfc	fsr2h,f,c
 12491  002B3E  C002  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
 12492  002B42                     
 12493                           ; BSR set to: 2
 12494  002B42  0012               	return		;funcret
 12495  002B44                     __end_of_EUSART_RX_Interrupt:
 12496                           	opt callstack 0
 12497                           
 12498                           	psect	rparam
 12499  0000                     
 12500                           	psect	temp
 12501  00005B                     btemp:
 12502                           	opt callstack 0
 12503  00005B                     	ds	1
 12504  0000                     int$flags	set	btemp
 12505  0000                     wtemp8	set	btemp+1
 12506  0000                     ttemp5	set	btemp+1
 12507  0000                     ttemp6	set	btemp+4
 12508  0000                     ttemp7	set	btemp+8
 12509                           tosu	equ	0xFFF
 12510                           tosh	equ	0xFFE
 12511                           tosl	equ	0xFFD
 12512                           stkptr	equ	0xFFC
 12513                           pclatu	equ	0xFFB
 12514                           pclath	equ	0xFFA
 12515                           pcl	equ	0xFF9
 12516                           tblptru	equ	0xFF8
 12517                           tblptrh	equ	0xFF7
 12518                           tblptrl	equ	0xFF6
 12519                           tablat	equ	0xFF5
 12520                           prodh	equ	0xFF4
 12521                           prodl	equ	0xFF3
 12522                           indf0	equ	0xFEF
 12523                           postinc0	equ	0xFEE
 12524                           postdec0	equ	0xFED
 12525                           preinc0	equ	0xFEC
 12526                           plusw0	equ	0xFEB
 12527                           fsr0h	equ	0xFEA
 12528                           fsr0l	equ	0xFE9
 12529                           wreg	equ	0xFE8
 12530                           indf1	equ	0xFE7
 12531                           postinc1	equ	0xFE6
 12532                           postdec1	equ	0xFE5
 12533                           preinc1	equ	0xFE4
 12534                           plusw1	equ	0xFE3
 12535                           fsr1h	equ	0xFE2
 12536                           fsr1l	equ	0xFE1
 12537                           bsr	equ	0xFE0
 12538                           indf2	equ	0xFDF
 12539                           postinc2	equ	0xFDE
 12540                           postdec2	equ	0xFDD
 12541                           preinc2	equ	0xFDC
 12542                           plusw2	equ	0xFDB
 12543                           fsr2h	equ	0xFDA
 12544                           fsr2l	equ	0xFD9
 12545                           status	equ	0xFD8


Data Sizes:
    Strings     464
    Constant    1598
    Data        8
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     80     116
    BANK1           256    173     205
    BANK2           256      0     130
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_37(CODE[7]), STR_33(CODE[8]), STR_25(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_37(CODE[7]), STR_33(CODE[8]), STR_25(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[7]), STR_36(CODE[8]), STR_33(CODE[8]), STR_32(CODE[10]), 
		 -> A6_BaudRateSet@request(BANK0[20]), STR_25(CODE[7]), STR_24(CODE[9]), STR_22(CODE[4]), 
		 -> STR_9(CODE[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_37(CODE[7]), STR_36(CODE[8]), STR_33(CODE[8]), STR_32(CODE[10]), 
		 -> A6_BaudRateSet@request(BANK0[20]), STR_25(CODE[7]), STR_24(CODE[9]), STR_22(CODE[4]), 
		 -> STR_9(CODE[10]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_31(CODE[3]), STR_28(CODE[3]), STR_23(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_40(CODE[7]), ?_sprintf(COMRAM[2]), Ecg_ProcessHeartRate@heartbeatAverage(COMRAM[4]), STR_18(CODE[6]), 
		 -> STR_17(CODE[11]), STR_16(CODE[13]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_30(CODE[11]), STR_27(CODE[12]), STR_19(CODE[4]), STR_15(CODE[24]), 
		 -> STR_13(CODE[23]), STR_11(CODE[4]), STR_3(CODE[27]), STR_2(CODE[32]), 
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_BaudRateAutoDetect@zzzz(BANK0[32]), A6_BaudRateSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@zzzz_160(BANK1[32]), 
		 -> loop@zzzz_156(BANK1[32]), loop@zzzz_153(BANK1[32]), loop@zzzz(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_36(CODE[8]), STR_32(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_24(CODE[9]), 
		 -> STR_22(CODE[4]), STR_9(CODE[10]), 

    A6_NetworkGetRSSI@RSSIToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    A6_NetworkGetStatus@networkStatusToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__memset	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK2[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_ReadLine@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateSet@response(BANK0[32]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), loop@response(BANK1[32]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_36(CODE[8]), STR_32(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_24(CODE[9]), 
		 -> STR_22(CODE[4]), STR_9(CODE[10]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    A6_BaudRateGet@baudRateToken	PTR unsigned char  size(2) Largest target is 32
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), NULL(NULL[0]), A6_BaudRateGet@response(COMRAM[32]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 32
		 -> STR_39(CODE[2]), STR_38(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_35(CODE[2]), 
		 -> STR_34(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_26(CODE[2]), NULL(NULL[0]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), 

    TFT_ConsolePrintLine@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateAutoDetect@zzzz(BANK0[32]), STR_29(CODE[23]), loop@zzzz_160(BANK1[32]), 
		 -> STR_14(CODE[27]), loop@zzzz_156(BANK1[32]), STR_12(CODE[11]), loop@zzzz_153(BANK1[32]), 
		 -> STR_10(CODE[16]), loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), 
		 -> STR_6(CODE[11]), STR_5(CODE[23]), STR_4(CODE[25]), loop@zzzz(BANK1[32]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(BANK0[32]), A6_BaudRateAutoDetect@zzzz(BANK0[32]), STR_29(CODE[23]), STR_21(CODE[28]), 
		 -> STR_20(CODE[11]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@zzzz_160(BANK1[32]), STR_14(CODE[27]), 
		 -> loop@zzzz_156(BANK1[32]), STR_12(CODE[11]), loop@zzzz_153(BANK1[32]), STR_10(CODE[16]), 
		 -> loop@response(BANK1[32]), STR_8(CODE[11]), STR_7(CODE[13]), STR_6(CODE[11]), 
		 -> STR_5(CODE[23]), STR_4(CODE[25]), loop@zzzz(BANK1[32]), 

    loop$168	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_18(CODE[6]), STR_17(CODE[11]), 

    loop$167	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_18(CODE[6]), STR_17(CODE[11]), STR_16(CODE[13]), 

    loop$148	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_7(CODE[13]), STR_6(CODE[11]), 

    loop$143	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_4(CODE[25]), loop@zzzz(BANK1[32]), 


Critical Paths under _main in COMRAM

    _loop->_sprintf
    _TFT_ConsoleInit->_TFT_OrientationSet
    _A6_Process_Random_Comms->_TFT_ConsolePrintLine
    _A6_NetworkGetStatus->_A6_Command
    _A6_NetworkGetRSSILevel->_A6_NetworkGetRSSI
    _A6_NetworkGetRSSI->_A6_Command
    _atoi->___wmul
    _A6_BaudRateSet->_sprintf
    _A6_BaudRateGet->_A6_Command
    _A6_BaudRateGet->_atol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _atol->___lmul
    _TFT_Init->_TFT_OrientationSet
    _TFT_OrientationSet->_TFT_FullScreen
    _EUSART_Init->_memset
    _A6_BaudRateAutoDetect->_sprintf
    _sprintf->_A6_BaudRateGet
    ___llmod->___lldiv
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawLine
    _TFT_DrawLine->_TFT_DrawPixel
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_FullScreen
    _TFT_FullScreen->_TFT_Flood
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister
    _EUSART_BaudRateSet->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen
    _A6_ReadLine->_EUSART_BufferGetChar
    _EUSART_BufferGetChar->_EUSART_RX_AvailableData

Critical Paths under _isr in COMRAM

    _isr->_EUSART_RX_Interrupt
    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_A6_BaudRateSet
    _A6_Process_Random_Comms->_TFT_ConsolePrintLine
    _A6_BaudRateSet->_sprintf
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _A6_Init->_A6_BaudRateAutoDetect
    _A6_BaudRateAutoDetect->_sprintf
    _TFT_ConsolePrintLine->_TFT_DrawString

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  679270
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                    _TFT_ConsoleInit
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               177   177      0  389743
                                             76 BANK0      4     4      0
                                              0 BANK1    173   173      0
              _A6_BaudRateAutoDetect
                     _A6_BaudRateGet
                     _A6_BaudRateSet
                         _A6_Command
                         _A6_IsAlive
                  _A6_NetworkGetRSSI
             _A6_NetworkGetRSSILevel
                _A6_NetworkGetStatus
            _A6_Process_Random_Comms
                    _TFT_ConsoleInit
               _TFT_ConsolePrintLine
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _TFT_ConsoleInit                                      1     1      0   14213
                                             32 COMRAM     1     1      0
                 _TFT_OrientationSet
 ---------------------------------------------------------------------------------
 (2) _A6_Process_Random_Comms                             33    33      0   93722
                                             15 BANK0     33    33      0
                        _A6_ReadLine
            _EUSART_RX_AvailableData
               _TFT_ConsolePrintLine
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _A6_NetworkGetStatus                                 34    34      0   11472
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _A6_NetworkGetRSSILevel                               1     1      0   11596
                                             64 COMRAM     1     1      0
                  _A6_NetworkGetRSSI
 ---------------------------------------------------------------------------------
 (3) _A6_NetworkGetRSSI                                   34    34      0   11438
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    2074
                                             10 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateSet                                      60    56      4   27289
                                             16 BANK0     60    56      4
                     _A6_BaudRateGet
                         _A6_Command
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _A6_BaudRateGet                                      43    39      4   10163
                                             30 COMRAM    43    39      4
                         _A6_Command
                               _atol
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    3142
                                             17 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              7     3      4     787
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1781
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              7     1      6     362
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _strchr                                               6     2      4     544
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4     834
                                             16 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            13    11      2   20049
                                             32 COMRAM    13    11      2
                 _TFT_OrientationSet
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _TFT_OrientationSet                                   3     1      2   14182
                                             29 COMRAM     3     1      2
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0  151219
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (2) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Ok                              0     0      0   81035
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Failure                         0     0      0   70137
                     _TFT_DrawString
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0     552
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              0     0      0  103494
              _A6_BaudRateAutoDetect
                            _sleepMS
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateAutoDetect                               33    33      0  103145
                                             16 BANK0     33    33      0
                         _A6_IsAlive
                 _EUSART_BaudRateSet
               _TFT_ConsolePrintLine
                            _sleepMS
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             32    24      8    5816
                                             73 COMRAM    12     4      8
                                              0 BANK0     16    16      0
                     _A6_BaudRateGet (ARG)
                  _A6_NetworkGetRSSI (ARG)
             _A6_NetworkGetRSSILevel (ARG)
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     349
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TFT_ConsolePrintLine                                 8     4      4   91068
                                             76 COMRAM     4     4      0
                                             11 BANK0      4     0      4
                   _TFT_DrawFillRect
                     _TFT_DrawString
                      _TFT_GetHeight
                       _TFT_GetWidth
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawString                                      11     0     11   56231
                                              0 BANK0     11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawChar                                        23    13     10   53817
                                             53 COMRAM    23    13     10
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawLine                                        31    21     10   10898
                                             22 COMRAM    31    21     10
                      _TFT_DrawPixel
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     453
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawPixel                                       10     4      6    7195
                                             12 COMRAM    10     4      6
                 _TFT_OrientationGet
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawFillRect                                    14     4     10   31861
                                             29 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1492
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _TFT_FullScreen                                       2     0      2   13906
                                             27 COMRAM     2     0      2
                          _TFT_Flood
                      _TFT_GetHeight
                       _TFT_GetWidth
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (6) _TFT_SetAddrWindow                                   10     2      8    6944
                                             12 COMRAM     8     0      8
                      _TFT_GetHeight (ARG)
                       _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (3) _TFT_GetWidth                                         2     0      2       0
                                              4 COMRAM     2     0      2
                 _TFT_OrientationGet
 ---------------------------------------------------------------------------------
 (3) _TFT_GetHeight                                        2     0      2       0
                                              4 COMRAM     2     0      2
                 _TFT_OrientationGet
 ---------------------------------------------------------------------------------
 (4) _TFT_OrientationGet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TFT_Flood                                           15     9      6    6540
                                             12 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TFT_WriteRegister                                    8     4      4    5480
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateSet                                  12     8      4     937
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _A6_IsAlive                                          32    32      0    4728
                                             30 COMRAM    32    32      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     547
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _A6_Command                                           7     0      7    4131
                                             23 COMRAM     7     0      7
                        _A6_ReadLine
                    _EUSART_RX_Flush
                   _EUSART_TX_String
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2     242
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _EUSART_TX_String                                     3     0      3     219
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_Char                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _EUSART_RX_Flush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _A6_ReadLine                                          7     2      5    1736
                                             16 COMRAM     7     2      5
               _EUSART_BufferGetChar
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6     552
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (4) _EUSART_BufferGetChar                                 2     0      2     394
                                             14 COMRAM     2     0      2
            _EUSART_RX_AvailableData
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_AvailableData                             10     8      2     220
                                              4 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (11) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_Interrupt                                 2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _TFT_ConsolePrintLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
           _TFT_SetAddrWindow
             _TFT_GetHeight (ARG)
               _TFT_OrientationGet
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             _TFT_OrientationGet (ARG)
             _TFT_WriteRegister (ARG)
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                 _TFT_GetHeight
                   _TFT_OrientationGet
                 _TFT_GetWidth
                   _TFT_OrientationGet
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
               ___wmul
             _TFT_DrawLine
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___awdiv
               _abs
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___wmul
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _sleepMS
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___awdiv
             _abs
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_OrientationGet
           _TFT_WriteRegister
         ___awdiv
         _abs
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___awdiv
             _abs
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _Ecg_CheckLeads
   _TFT_ConsoleInit
     _TFT_OrientationSet
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
   _TFT_Init
     _TFT_OrientationSet
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _TFT_ConsolePrintLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
           _TFT_SetAddrWindow
             _TFT_GetHeight (ARG)
               _TFT_OrientationGet
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             _TFT_OrientationGet (ARG)
             _TFT_WriteRegister (ARG)
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                 _TFT_GetHeight
                   _TFT_OrientationGet
                 _TFT_GetWidth
                   _TFT_OrientationGet
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
               ___wmul
             _TFT_DrawLine
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___awdiv
               _abs
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___wmul
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _A6_BaudRateGet
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atol
         ___lmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_BaudRateSet
       _A6_BaudRateGet
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
       _sprintf
         _A6_BaudRateGet (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atol
             ___lmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSI (ARG)
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
         _A6_NetworkGetRSSILevel (ARG)
           _A6_NetworkGetRSSI
             _A6_Command
               _A6_ReadLine
                 _EUSART_BufferGetChar
                   _EUSART_RX_AvailableData
                 _memset
               _EUSART_RX_Flush
               _EUSART_TX_String
                 _EUSART_TX_Char
                 _strlen (ARG)
               _strlen
             _atoi
               ___wmul
               _isdigit
             _strstr
               _strchr
               _strlen
               _strncmp
                 _strlen (ARG)
             _strtok
               _strcspn
                 _strchr
               _strspn
                 _strchr
         ___lldiv (ARG)
         ___llmod (ARG)
           ___lldiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
       _strcmp
     _A6_Command
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_Flush
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _strlen
     _A6_IsAlive
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _strcmp
     _A6_NetworkGetRSSI
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atoi
         ___wmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_NetworkGetRSSILevel
       _A6_NetworkGetRSSI
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atoi
           ___wmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
     _A6_NetworkGetStatus
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _atoi
         ___wmul
         _isdigit
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _A6_Process_Random_Comms
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_AvailableData
       _TFT_ConsolePrintLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
           _TFT_SetAddrWindow
             _TFT_GetHeight (ARG)
               _TFT_OrientationGet
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             _TFT_OrientationGet (ARG)
             _TFT_WriteRegister (ARG)
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                 _TFT_GetHeight
                   _TFT_OrientationGet
                 _TFT_GetWidth
                   _TFT_OrientationGet
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
               ___wmul
             _TFT_DrawLine
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___awdiv
               _abs
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___wmul
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
       _strcmp
     _TFT_ConsoleInit
       _TFT_OrientationSet
         _TFT_FullScreen
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
           _TFT_SetAddrWindow
             _TFT_GetHeight (ARG)
               _TFT_OrientationGet
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             _TFT_OrientationGet (ARG)
             _TFT_WriteRegister (ARG)
     _TFT_ConsolePrintLine
       _TFT_DrawFillRect
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_FullScreen
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
           _TFT_SetAddrWindow
             _TFT_GetHeight (ARG)
               _TFT_OrientationGet
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             _TFT_OrientationGet (ARG)
             _TFT_WriteRegister (ARG)
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
         ___wmul
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___awdiv
             _abs
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
       _TFT_GetHeight
         _TFT_OrientationGet
       _TFT_GetWidth
         _TFT_OrientationGet
     _sprintf
       _A6_BaudRateGet (ARG)
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_NetworkGetRSSI (ARG)
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atoi
           ___wmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_NetworkGetRSSILevel (ARG)
         _A6_NetworkGetRSSI
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
       ___lldiv (ARG)
       ___llmod (ARG)
         ___lldiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      82       9       50.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AD      CD       7       80.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      74       5       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     21D      20        0.0%
DATA                 0      0     21D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec 27 15:47:26 2019

             ?_A6_Process_Random_Comms 0001                 A6_BaudRateAutoDetect@i 0090  
                  __size_of_A6_IsAlive 0050                    __size_of_A6_Command 0086  
                         ___awdiv@sign 000A                    ___wmul@multiplicand 0007  
                          __CFG_BORV$0 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                                  l104 0646                                    l107 074C  
                                  l230 2E5E                                    l302 1E3E  
                                  l303 1EBE                                    l250 1C2C  
                                  l331 1452                                    l324 13DC  
                                  l316 136C                                    l308 12CE  
                                  l341 0CB6                                    l253 30A0  
                                  l334 14C6                                    l262 2CEA  
                                  l327 1430                                    l271 2D38  
                                  l319 2764                                    l336 14EE  
                                  l184 2F16                                    l329 14EC  
                                  l353 0F06                                    l281 303C  
                                  l610 25E0                                    l290 1184  
                                  l522 2858                                    l178 28CA  
                                  l604 1D0A                                    l508 2C9C  
                                  l613 1EDA                                    l277 30FE  
                                  l525 2EDC                                    l702 30EE  
                                  l294 2BFE                                    l374 30BC  
                                  l615 1F94                                    l359 23BC  
                                  l640 211A                                    l609 2598  
                                  l457 3014                                    l298 1DEA  
                                  l378 2286                                    l723 255A  
                                  l635 1B4E                                    l716 30FA  
                                  l708 2E9E                                    l820 231A  
                                  l580 30D6                                    l804 2A02  
                                  l644 27DE                                    l628 244A  
                                  l805 2A12                                    l728 2DD2  
                                  l584 2C4E                                    l592 1876  
                                  l753 09A8                                    l827 232A  
      __end_of_Ecg_Background_Leads_Ok 285A                                    l596 1752  
                                  l693 2E1A                                    l790 0C78  
                                  l696 2664                                    l793 3062  
                                  l769 0A30                                    l699 30DA  
                                  _GIE 007F97                           __CFG_CPB$OFF 000000  
                         __CFG_CPD$OFF 000000                           __CFG_BOR$OFF 000000  
                                  _abs 2F50                                    _isr 0008  
                      __end_of_A6_Init 30D8                                    wreg 000FE8  
                 __size_of_A6_ReadLine 00D6                           TFT_Flood@len 000F  
                EUSART_BaudRateSet@tmp 001A                           ?_EUSART_Init 0001  
                         __CFG_LVP$OFF 000000                           TFT_Init@data 0026  
                         __CFG_WDT$OFF 000000                                   l1024 2058  
                                 l1201 24C2                                   ?_abs 0005  
                                 l1208 24D2                                   l1510 2D86  
                                 l1504 2BA2                                   l4000 215A  
                                 l4010 21D0                                   l1522 21D8  
                                 l4004 2166                                   l4110 2298  
                                 l1542 2666                                   l4006 218E  
                                 l4030 1A12                                   l4022 19C8  
                                 l1534 19AA                                   l4014 1990  
                                 l1470 1986                                   l1455 2F7A  
                                 l1471 198E                                   l4120 22DA  
                                 l4112 22AE                                   l1456 2F82  
                                 l1544 26E6                                   l4008 21A0  
                                 l4032 1A34                                   l4024 19E4  
                                 l1536 1A70                                   l4016 19A2  
                                 l4122 22F8                                   l4114 22B6  
                                 l4130 244C                                   l1490 2FB4  
                                 l4050 1524                                   l4042 14F0  
                                 l1554 2AD6                                   l4034 1A4C  
                                 l4026 19FC                                   l4018 19BC  
                                 l1563 1DE4                                   l1555 2ADE  
                                 l1539 1A68                                   l4124 2308  
                                 l4116 22C2                                   l4108 2288  
                                 l4140 24A2                                   l4132 2462  
                                 l1484 1618                                   l4060 1560  
                                 l4052 1538                                   l4044 14FC  
                                 l1476 14F0                                   l4036 1A58  
                                 l1485 1628                                   l1573 2A70  
                                 l4126 230A                                   l4118 22D0  
                                 l4142 24B2                                   l4134 246A  
                                 l2710 285A                                   l4054 154A  
                                 l4046 1500                                   l1574 2A78  
                                 l4038 1A60                                   l4150 179A  
                                 l1496 2F4E                                   l4128 2314  
                                 l4144 24BC                                   l4136 2476  
                                 l2720 2884                                   l2712 285C  
                                 l4072 15BE                                   l4056 154C  
                                 l4048 1512                                   l4152 17D2  
                                 l6000 050A                                   l4330 2C00  
                                 l4138 2484                                   l2730 2894  
                                 l2722 2886                                   l2714 2864  
                                 l4074 15D2                                   l4066 1576  
                                 l4058 1558                                   l4162 1804  
                                 l4154 17E4                                   l4170 1866  
                                 l4146 1754                                   l6010 0590  
                                 l6002 051A                                   l4332 2C20  
                                 l5300 0F08                                   l2740 28A6  
                                 l2732 2898                                   l2724 288A  
                                 l2716 286A                                   l4076 15E2  
                                 l4164 1840                                   l4156 1800  
                                 l4148 1774                                   l6020 0622  
                                 l6012 05E2                                   l6004 0530  
                                 l4334 2C46                                   l5230 2E2A  
                                 l5310 1004                                   l5302 0F0C  
                                 l2670 308A                                   l2750 28C0  
                                 l2742 28AE                                   l2734 289C  
                                 l2726 288E                                   l2718 2882  
                                 l4166 1854                                   l6030 067C  
                                 l6022 0632                                   l6014 05F2  
                                 l6006 055E                                   l5240 2E3C  
                                 l5232 2E2E                                   l5224 2E1C  
                                 l5320 113C                                   l5312 101C  
                                 l5304 0F88                                   l5400 1FCE  
                                 l4360 2EDE                                   l4520 2C72  
                                 l4512 2C50                                   l2672 308C  
                                 l2752 28C2                                   l2744 28B0  
                                 l2736 28A0                                   l2728 2890  
                                 l3800 26DE                                   l4168 1856  
                                 l6040 0722                                   l6024 063E  
                                 l6016 0608                                   l6032 0690  
                                 l6008 0572                                   l6120 2FD0  
                                 l6112 2FB6                                   l4338 2C4C  
                                 l5250 2E50                                   l5242 2E3E  
                                 l5234 2E32                                   l5226 2E22  
                                 l5330 1376                                   l5314 10C8  
                                 l5306 0FC0                                   l5410 2006  
                                 l5402 1FD6                                   l4362 2EF8  
                                 l4522 2C74                                   l4514 2C54  
                                 l2674 308E                                   l2666 3084  
                                 l2754 28C4                                   l2746 28B4  
                                 l2738 28A2                                   l6042 073C  
                                 l6034 06AE                                   l6026 0652  
                                 l6018 0610                                   l6122 2FD6  
                                 l6114 2FBA                                   l3660 24EE  
                                 l3900 1F74                                   l4380 265C  
                                 l4372 25E2                                   l5252 2E52  
                                 l5244 2E44                                   l5236 2E34  
                                 l5228 2E26                                   l5332 138A  
                                 l5260 30FC                                   l5316 10F0  
                                 l5308 0FD4                                   l5324 115C  
                                 l5420 2032                                   l5412 200C  
                                 l5404 1FE8                                   l5500 0E32  
                                 l4524 2C96                                   l4516 2C62  
                                 l2676 3090                                   l2668 3088  
                                 l2756 28C6                                   l2748 28BC  
                                 l6036 0700                                   l6028 065A  
                                 l6124 2FDA                                   l6116 2FC8  
                                 l3670 2558                                   l3662 251E  
                                 l3902 1F92                                   l4382 2660  
                                 l4374 25E8                                   l5254 2E56  
                                 l5246 2E48                                   l5238 2E38  
                                 l5350 14BC                                   l5342 140C  
                                 l5334 1394                                   l5326 136E  
                                 l5270 2CAE                                   l5318 110C  
                                 l5414 2022                                   l5406 1FF0  
                                 l5422 2038                                   l5430 1186  
                                 l5510 0E78                                   l5502 0E36  
                                 l3910 2F9A                                   l4518 2C64  
                                 l2678 309E                                   l2758 28C8  
                                 l6038 0710                                   l6118 2FCC  
                                 l3664 253E                                   l3656 24D4  
                                 l4376 261C                                   l5256 2E5A  
                                 l5248 2E4C                                   l5352 14DA  
                                 l5344 1426                                   l5336 1398  
                                 l5328 1372                                   l5264 2C9E  
                                 l5360 1DE6                                   l5424 2048  
                                 l5416 202A                                   l5408 1FF8  
                                 l5440 1264                                   l5432 11D4  
                                 l5512 0E88                                   l5504 0E4A  
                                 l5520 2330                                   l3912 2FAA  
                                 l5600 08D8                                   l3920 29BA  
                                 l3658 24E6                                   l3770 2F34  
                                 l4378 2652                                   l5258 2E5C  
                                 l5346 143C                                   l5338 13C6  
                                 l5282 2CEC                                   l5266 2CA2  
                                 l5354 2BA4                                   l5362 1DFE  
                                 l5426 2050                                   l5418 202C  
                                 l5450 12E8                                   l5442 1270  
                                 l5434 11E6                                   l5514 0E94  
                                 l5506 0E4C                                   l5522 237A  
                                 l3914 2FAE                                   l3906 2F86  
                                 l5610 0936                                   l5602 08E4  
                                 l4570 2DF2                                   l3922 29C8  
                                 l3930 1D10                                   l5530 187C  
                                 l3668 2544                                   l3780 2DAE  
                                 l3772 2D88                                   l3764 2F18  
                                 l3852 30F6                                   l3860 2D7A  
                                 l5348 14A2                                   l5284 2CF0  
                                 l5276 2CBA                                   l5356 2BD0  
                                 l5380 303E                                   l5364 1E0E  
                                 l5372 1E5A                                   l5460 134A  
                                 l5452 1308                                   l5444 1288  
                                 l5436 1216                                   l5516 0EC8  
                                 l5508 0E60                                   l5524 2388  
                                 l5700 21DA                                   l3908 2F8A  
                                 l5620 09B6                                   l5612 093A  
                                 l5604 08E8                                   l4572 2DFE  
                                 l3924 29D8                                   l3932 1D40  
                                 l3940 1DC2                                   l5540 18DA  
                                 l5532 1880                                   l3782 2DC0  
                                 l3774 2DA4                                   l3766 2F24  
                                 l3790 30E8                                   l3870 2E8C  
                                 l3854 2D3A                                   l5294 2D08  
                                 l5278 2CE2                                   l5358 2BE2  
                                 l5382 305A                                   l5366 1E1A  
                                 l5374 1E82                                   l5390 1FA8  
                                 l5454 1324                                   l5462 134E  
                                 l5446 12C2                                   l5438 1234  
                                 l5470 0C7A                                   l5526 238C  
                                 l5518 232C                                   l5710 227E  
                                 l5702 21E6                                   l5630 0A0A  
                                 l5622 09C4                                   l5614 0958  
                                 l5606 0906                                   l4566 2DD4  
                                 l3926 29E2                                   l3918 29AA  
                                 l3942 1DDC                                   l3934 1D7E  
                                 l3950 2A28                                   l5550 193E  
                                 l5542 18E4                                   l5534 189A  
                                 l3784 2DC4                                   l3768 2F30  
                                 l3880 1EFE                                   l3872 1EC0  
                                 l3864 2E60                                   l3856 2D46  
                                 l5296 2D30                                   l5288 2CFC  
                                 l5464 26E8                                   l5368 1E46  
                                 l5392 1FB0                                   l5376 2F50  
                                 l5456 132C                                   l5448 12D6  
                                 l5704 2212                                   l5640 0A62  
                                 l5632 0A18                                   l5624 09DC  
                                 l5608 0930                                   l5560 076E  
                                 l5800 1CC8                                   l4568 2DEA  
                                 l3792 2666                                   l3928 1D0C  
                                 l3960 2AA6                                   l3952 2A40  
                                 l5552 195A                                   l5544 18FE  
                                 l5536 18B4                                   l5528 1878  
                                 l5720 20EA                                   l5712 205A  
                                 l3778 2DAA                                   l3890 1F38  
                                 l3882 1F10                                   l3874 1EE8  
                                 l3866 2E64                                   l3858 2D4A  
                                 l3970 25C8                                   l3962 255C  
                                 l5466 272C                                   l5394 1FB4  
                                 l5386 1F96                                   l5378 2F5E  
                                 l5458 133A                                   l5490 0D70  
                                 l5706 2248                                   l5650 0A8A  
                                 l5642 0A7E                                   l5634 0A1C  
                                 l5626 09E8                                   l5570 07B6  
                                 l5618 095E                                   l5562 077A  
                                 l5730 3018                                   l3794 2696  
                                 l3938 1DBA                                   l3954 2A7A  
                                 l3946 2A14                                   l5554 196A  
                                 l5546 1906                                   l5538 18C0  
                                 l5722 2106                                   l5714 207A  
                                 l5810 2766                                   l6450 01F2  
                                 l3892 1F4C                                   l3876 1EF8  
                                 l3788 30DA                                   l3868 2E88  
                                 l3964 256A                                   l5468 2758  
                                 l5396 1FC2                                   l5388 1F9A  
                                 l5492 0D88                                   l5484 0CC4  
                                 l5476 0C7E                                   l5708 2252  
                                 l5660 0AEA                                   l5636 0A3E  
                                 l5644 0A86                                   l5628 0A02  
                                 l5580 0828                                   l5572 07D2  
                                 l5564 0782                                   l5556 074E  
                                 l5804 1CE2                                   l5732 3028  
                                 l5900 1C1E                                   l3956 2A86  
                                 l3948 2A20                                   l5716 20A0  
                                 l5820 2794                                   l5812 276C  
                                 l5740 30AE                                   l6452 020E  
                                 l3894 1F5C                                   l3886 1F22  
                                 l3966 25A8                                   l3990 2B80  
                                 l5398 1FCA                                   l5494 0D98  
                                 l5486 0CD4                                   l5478 0CB2  
                                 l5670 0B3E                                   l5662 0B00  
                                 l5654 0AC4                                   l5638 0A56  
                                 l5590 0866                                   l5582 0838  
                                 l5574 07FC                                   l5566 078E  
                                 l5558 075C                                   l5806 1CF6  
                                 l5910 300E                                   l5902 2FE6  
                                 l5734 302C                                   l3798 26A2  
                                 l3958 2A8E                                   l5718 20D8  
                                 l5726 2118                                   l5830 27B0  
                                 l5814 277E                                   l5742 23BE  
                                 l6454 01D6                                   l3896 1F5E  
                                 l3888 1F26                                   l3968 25AC  
                                 l3992 2B98                                   l3984 2B44  
                                 l5496 0DC8                                   l5488 0D04  
                                 l5680 0B8E                                   l5672 0B50  
                                 l5664 0B06                                   l5656 0AC6  
                                 l5592 086C                                   l5584 0840  
                                 l5576 0800                                   l5568 07AC  
                                 l5808 1CFA                                   l5912 3012  
                                 l5904 2FFC                                   l5736 3030  
                                 l5760 163E                                   l5832 27C0  
                                 l5824 279A                                   l5752 240C  
                                 l6456 01E4                                   l6448 01C0  
                                 l5920 0016                                   l3986 2B48  
                                 l5498 0E30                                   l5690 0C2C  
                                 l5682 0B9A                                   l5674 0B5C  
                                 l5666 0B2A                                   l5658 0AD8  
                                 l5594 08A8                                   l5586 0852  
                                 l5578 0822                                   l5914 30BE  
                                 l5906 3004                                   l5770 16B0  
                                 l5762 1656                                   l5842 27DC  
                                 l5826 27AA                                   l5818 2784  
                                 l5850 1AB8                                   l5746 23DC  
                                 l5738 30A4                                   l6458 0200  
                                 l5930 00D4                                   l5922 0034  
                                 l3988 2B50                                   l5692 0C30  
                                 l5684 0B9E                                   l5676 0B60  
                                 l5668 0B36                                   l5596 08C0  
                                 l5588 085A                                   l5916 30D2  
                                 l5908 3008                                   l3996 211C  
                                 l5780 173A                                   l5772 16C4  
                                 l5836 27C6                                   l5852 1AF0  
                                 l5860 1B4C                                   l5756 2436  
                                 l5748 23F8                                   l5940 0190  
                                 l5932 00EA                                   l5924 0086  
                                 ?_isr 0001                                   l5686 0BA8  
                                 l5678 0B78                                   l5598 08CC  
                                 l5694 0C4A                                   l5870 2846  
                                 l3998 2120                                   l5774 16EA  
                                 l5766 166C                                   l5758 162A  
                                 l5838 27D6                                   l5854 1B02  
                                 l5846 1A72                                   l5950 0248  
                                 l5942 01A6                                   l5934 0114  
                                 l5926 0096                                   l5918 0012  
                                 l5688 0C20                                   l5696 0C6C  
                                 l5872 284E                                   l5864 27E0  
                                 l5880 1B56                                   l5776 1712  
                                 l5768 1690                                   l5856 1B3A  
                                 l5848 1A92                                   l5960 029E  
                                 l5952 0260                                   l5936 013E  
                                 l5928 00BE                                   l5794 1C4A  
                                 l5786 1C2E                                   l5874 2EA0  
                                 l5866 27EC                                   l5890 1BA2  
                                 l5882 1B6C                                   l5778 1726  
                                 l5970 02E4                                   l5962 02B4  
                                 l5954 026C                                   l5938 0168  
                                 l5946 01AE                                   l5796 1C76  
                                 l5788 1C44                                   l5876 2EAC  
                                 l5868 281C                                   l5892 1BC4  
                                 l5884 1B74                                   l5980 0390  
                                 l5964 02B8                                   l5956 0274  
                                 l5948 0224                                   l5972 02FA  
                                 l5798 1C8A                                   l5894 1BD8  
                                 l5886 1B80                                   l5878 1B52  
                                 l5990 0446                                   l5982 03B0  
                                 l5974 0318                                   l5966 02CC  
                                 l5958 028A                                   l5896 1BF2  
                                 l5888 1B9E                                   l5992 045C  
                                 l5976 036A                                   l5984 03C6  
                                 l5968 02DA                                   l5898 1C06  
                                 l5994 0484                                   l5986 03E4  
                                 l5978 037A                                   l5988 0436  
                                 l5996 049A                                   l5998 04B8  
                                 STR_1 5EE9                                   STR_2 5E2F  
                                 STR_3 5E6B                                   STR_4 5EA1  
                                 STR_5 5F00                                   STR_6 5F85  
                                 STR_7 5F3E                                   STR_8 5F9B  
                                 STR_9 5FB0                                   _CREN 007D5C  
                        TFT_DrawChar@c 003A                                   u3000 22D0  
                                 u3001 22CC                                   u3010 22F8  
                                 u3011 22F4                          TFT_DrawChar@i 004C  
                                 u3020 2462                          TFT_DrawChar@j 004B  
                                 u3021 245E                                   _LATA 000F89  
                                 u3030 2484                                   _LATB 000F8A  
                                 u3031 2480                                   _LATC 000F8B  
                                 u2160 24E6                                   u3040 24A2  
                                 u2400 26DE                                   u2161 24E2  
                                 u3041 249E                                   u2401 26DA  
                                 u2170 253E                                   u2330 2F4E  
                                 u3050 179A                                   u2171 253A  
                                 u2331 2F4A                                   u3051 1796  
                                 u2180 2558                                   u2340 2DA4  
                                 u2500 2D7A                                   u3060 17E4  
                                 u2181 2554                                   u2341 2DA0  
                                 u2501 2D76                                   u3061 17E0  
                                 u2350 2DC0                                   u2510 2E84  
                                 u3070 1840                                   u2351 2DBC  
                                 u3071 183C                                   u2360 30E8  
                                 u2520 2E9E                                   u4200 144E  
                                 u2600 2F9A                                   u5000 1C1E  
                                 u3080 1866                                   u2361 30E4  
                                 u2521 2E9A                                   u4201 144A  
                                 u2601 2F96                                   u5001 1C1A  
                                 u3081 1862                                   u2530 1EF8  
                                 u4210 14BC                                   u2610 2FAA  
                                 u5010 2FFC                                   u2370 2686  
                        TFT_DrawChar@x 0036                                   u2531 1EF4  
                                 u4211 14B8                                   u2611 2FA6  
                                 u5011 2FF8                          TFT_DrawChar@y 0038  
                                 u2540 1F10                                   u3340 2C46  
                                 u4220 14EC                                   u4300 2048  
                                 u2620 29C8                                   u2380 2696  
                                 u2700 2A70                                   u5100 0436  
                                 u5020 0034                                   u2541 1F0C  
                                 u2517 2E7A                                   u3341 2C42  
                                 u4221 14E8                                   u4301 2044  
                                 u2621 29C4                                   u2381 2692  
                                 u2701 2A6C                                   u5101 0432  
                                 u5021 0030                                   u2550 1F22  
                                 u4230 2BE2                                   u4310 11CE  
                                 u2630 2A02                                   u2390 26CE  
                                 u2710 2AA6                                   u5110 04B8  
                                 u5030 0086                                   u2551 1F1E  
                                 u4231 2BDE                                   u4311 11C8  
                                 u2631 29FE                                   u2711 2AA2  
                                 u5111 04B4                                   u5031 0082  
                                 u2560 1F38                                   u4240 2F5E  
                                 u4320 11D0                                   u4400 0CD4  
                                 u2640 1D30                                   u2800 21A0  
                                 u2720 2AD6                                   u5120 050A  
                                 u5040 0260                                   u2561 1F34  
                                 u4241 2F5A                                   u4401 0CD0  
                                 u2377 267C                                   u2801 219C  
                                 u2721 2AD2                                   u5121 0506  
                                 u5041 025C                                   u2570 1F48  
                                 u2490 2D6A                                   u2730 2598  
                                 u4170 13B8                                   u4250 1FA8  
                                 u4330 11E6                                   u4410 0D88  
                                 u3370 2F16                                   u2650 1D40  
                                 u2810 21C0                                   u5130 0590  
                                 u5050 029E                                   u2571 1F44  
                                 u2731 2594                                   u4251 1FA4  
                                 u4331 11E2                                   u4411 0D84  
                                 u3371 2F12                                   u2651 1D3C  
                                 u5131 058C                                   u5051 029A  
                                 u2580 1F70                                   u4180 13D8  
                                 u4260 1FC2                                   u4340 1234  
                                 u4420 0D98                                   u2900 1572  
                                 u2660 1D7E                                   u2820 21D0  
                                 u4500 189A                                   u5140 05E2  
                                 u5060 02CC                                   u2581 1F6C  
                                 u4181 13D4                                   u4261 1FBE  
                                 u4341 1230                                   u4421 0D94  
                                 u2901 156E                                   u2397 26C4  
                                 u2661 1D7A                                   u2821 21CC  
                                 u4501 1896                                   u5141 05DE  
                                 u5061 02C8                                   u2590 1F92  
                                 u3390 263C                                   u4190 1426  
                                 u4270 1FE8                                   u4350 12C2  
                                 u4430 0E4A                                   u3550 2C62  
                                 u2910 15D2                                   u2670 1D9E  
                                 u2830 19A2                                   u4510 18B4  
                                 u5150 0622                                   u5070 0318  
                                 u2591 1F8E                                   u4191 1422  
                                 u4175 13AE                                   u4271 1FE4  
                                 u4351 12BE                                   u4431 0E46  
                                 u3551 2C5E                                   u2911 15CE  
                                 u2647 1D26                                   u2831 199E  
                                 u4511 18B0                                   u5151 061E  
                                 u5071 0314                                   u4280 2006  
                                 u4360 12E8                                   u4440 0E60  
                                 u4600 0898                                   u3560 2C72  
                                 u2920 15E2                                   u2680 1DDC  
                                 u2840 19BC                                   u4520 18DA  
                                 u5160 0632                                   u5080 036A  
                                 u2497 2D60                                   u4281 2002  
                                 u4361 12E4                                   u4441 0E5C  
                                 u3561 2C6E                                   u2921 15DE  
                                 u2681 1DD8                                   u2665 1D6E  
                                 u2817 21B6                                   u2841 19B8  
                                 u4521 18D6                                   u5161 062E  
                                 u5081 0366                                   u2770 2B80  
                                 u4290 2022                                   u4370 133A  
                                 u4450 0E78                                   u4610 08A8  
                                 u3570 2C88                                   u2690 2A40  
                                 u2850 19FC                                   u4530 18FE  
                                 u5170 06AE                                   u5090 03E4  
                                 u2771 2B7C                                   u3395 2632  
                                 u4291 201E                                   u4371 1336  
                                 u4451 0E74                                   u4611 08A4  
                                 u3571 2C80                                   u2667 1D64  
                                 u2691 2A3C                                   u2851 19F8  
                                 u4531 18FA                                   u5171 06AA  
                                 u5091 03E0                                   _PEIE 007F96  
                                 u2780 2B98                                   u4380 136C  
                                 u4460 0E88                                   u4700 0AC0  
                                 u4620 08C0                                   u2860 1A4C  
                                 u4540 195A                                   u5180 0700  
                                 u2781 2B94                                   u4381 1368  
                                 u4461 0E84                                   u4701 0ABC  
                                 u4621 08BC                                   u2677 1D94  
                                 u2861 1A48                                   u4541 1956  
                                 u5181 06FC                                   u4390 0CC4  
                                 u4470 2360                                   u4710 0AD8  
                                 u4630 0902                                   u2870 1512  
                                 u2790 215A                                   u4550 196A  
                                 u5190 073C                                   u4391 0CC0  
                                 u4711 0AD4                                   u4631 08FE  
                                 u4607 088E                                   u2871 150E  
                                 u2791 2156                                   u4551 1966  
                                 u5191 0738                                   u4480 23AC  
                                 u4800 227E                                   u4720 0AEA  
                                 u4640 092E                                   u4560 076E  
                                 u2880 1524                                   u4801 227A  
                                 u4721 0AE6                                   u4561 076A  
                                 u2881 1520                                   u4490 23BC  
                                 u4730 0B00                                   u4650 0954  
                                 u4570 07AC                                   u2890 154A  
                                 u4810 20A0                                   u4491 23B8  
                                 u4731 0AFC                                   u4651 0950  
                                 u4571 07A8                                   u5427 2874  
                                 u2891 1546                                   u4811 209C  
                                 _RCIE 007CED                                   u4740 0B2A  
                                 u4660 09B6                                   u4580 081E  
                                 u4900 1C8A                                   u3588 2C8A  
                                 u4820 20EA                                   _RCIF 007CF5  
                                 u4477 2356                                   u4741 0B26  
                                 u4661 09B2                                   u4581 081A  
                                 u4901 1C86                                   u5437 1B60  
                                 u4821 20E6                                   u2990 22AE  
                                 u4750 0B50                                   u4670 09C4  
                                 u4590 0852                                   u4910 1D0A  
                                 u4830 3028                                   u2991 22AA  
                                 u4487 23A2                                   u4751 0B4C  
                                 u4671 09C0                                   u4647 0924  
                                 u4591 084E                                   u4911 1D06  
                                 u4831 3024                                   u5447 1BE2  
                                 u4760 0B78                                   u4680 0A18  
                                 u4920 277E                                   u4840 23D8  
                                 u4761 0B74                                   u4681 0A14  
                                 u5457 3096                                   u4921 277A  
                                 u4841 23D4                                   u4770 0B8E  
                                 u4690 0A3E                                   u4930 2794  
                                 u4850 2408                                   u4771 0B8A  
                                 u4691 0A3A                                   u4931 2790  
                                 u4851 2404                                   u4780 0C4A  
                                 u4940 27AA                                   u4860 2432  
                                 u4781 0C46                                   u4941 27A6  
                                 u4861 242E                                   u4790 0C6C  
                                 u4870 1656                                   u4950 27C0  
                                 u4791 0C68                                   u4871 1652  
                                 u4951 27BC                                   u4880 16EA  
                                 u4960 27D6                                   u4881 16E6  
                                 u4961 27D2                                   u4890 1726  
                                 u4970 1AB8                                   _OERR 007D59  
                                 u4891 1722                                   u4971 1AB4  
                                 u4980 1B02                                   u4981 1AFE  
                                 u4990 1BD8                                   u4991 1BD4  
                                 _RBPU 007F8F                __size_of_A6_BaudRateGet 0124  
              __size_of_A6_BaudRateSet 012A                                   _TXIF 007CF4  
                        TFT_DrawLine@t 0024                                   abs@a 0005  
                                 _atoi 1878                                   _atol 14F0  
                                 _main 2FB6                        A6_BaudRateGet@j 0049  
                                 _init 285A                                   _tmp1 01C5  
                                 _tmp2 01C1                                   _tmp3 01BD  
                                 _tmp4 01B9                                   _tmp5 01B5  
                                 _tmp6 01B1                                   _loop 0012  
                                 _tmp7 01AD                                   fsr0h 000FEA  
                                 indf0 000FEF                                   fsr2h 000FDA  
                                 fsr0l 000FE9                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 005B                                   prodh 000FF4  
                                 prodl 000FF3                                   start 000E  
                    TFT_Flood@color_hi 001A                      TFT_Flood@color_lo 001B  
                        __CFG_IESO$OFF 000000            __size_of_EUSART_BaudRateSet 0084  
      __size_of_A6_NetworkGetRSSILevel 007A           __end_of_EUSART_BufferGetChar 2DD4  
                      ??_TFT_GetHeight 0007                           ___param_bank 000000  
        ?_Ecg_Background_Leads_Failure 0001          A6_BaudRateSet@currentBaudRate 00A8  
          __end_of_A6_NetworkGetStatus 1B50                                  ??_abs 0007  
                                ??_isr 0003                          __CFG_PLLDIV$1 000000  
                      ??_TFT_DrawPixel 0013                         __CFG_CCP2MX$ON 000000  
                        TFT_Init@color 0021                                  ?_atoi 000B  
                                ?_atol 0011                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 205A  
                                ?_loop 0001                                  STR_10 5F2E  
                                STR_11 5FF6                                  STR_12 5F7A  
                                STR_20 5F6F                                  STR_13 5F17  
                                STR_21 5E4F                                  STR_22 5FEE  
                                STR_30 5F64                                  STR_14 5E86  
                                STR_31 5FFA                                  STR_23 5FFA  
                                STR_15 5EBA                                  STR_40 5FD3  
                                STR_24 5FBA                                  STR_32 5FA6  
                                STR_16 5F4B                                  STR_25 5FE1  
                                STR_33 5FCB                                  STR_17 5F90  
                                STR_34 5FD1                                  STR_26 5FD1  
                                STR_18 5FE8                                  STR_35 5FFD  
                                STR_19 5FF2                                  STR_27 5F58  
                                STR_28 5FFA                                  STR_36 5FC3  
                                STR_37 5FDA                                  STR_29 5ED2  
                                STR_38 5FD1                                  STR_39 5FFD  
                      __end_of___lldiv 232C                        ___awdiv@divisor 0007  
                      __end_of___llmod 24D4                         TFT_DrawChar@bg 003D  
                       TFT_DrawChar@xl 0045                                  i2l503 3082  
                                i2l191 299E                                  i2l713 2B42  
                      ___awdiv@counter 0009                                  _RCREG 000FAE  
                                _TMR3H 000FB3                                  _TMR3L 000FB2  
                                _SPBRG 000FAF                                  _PORTB 000F81  
                        __CFG_USBDIV$2 000000                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TXREG 000FAD                                  _Ecg_X 00D2  
                                _Ecg_Y 0059                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                    ___lmul@multiplicand 0009  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                    ??_EUSART_RX_Flush 0005                         TFT_DrawLine@x0 0017  
                       TFT_DrawLine@x1 001B                         TFT_DrawLine@y0 0019  
                       TFT_DrawLine@y1 001D                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                         TFT_DrawLine@dx 0034  
                       TFT_DrawLine@dy 002C                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                __size_of_Ecg_CheckLeads 004E  
                      __end_of_dpowers 5DE5                        __end_of_isdigit 2FB6  
                     __end_of_TFT_Font 5CF1                       __end_of_TFT_Init 1C2E  
                                atoi@a 0010                                  atol@a 001A  
                                atol@c 001E                                  atoi@s 000B  
                                atol@s 0011                         TFT_DrawPixel@h 0013  
                       TFT_DrawPixel@v 0015                         TFT_DrawPixel@x 000D  
                       TFT_DrawPixel@y 000F                     __size_of_TFT_Flood 0182  
                      __end_of_sleepMS 2F18                       _TFT_DrawFillRect 26E8  
                                tablat 000FF5                     __size_of_TFT_Reset 001E  
               __size_of_Ecg_Interrupt 0020           __end_of_TFT_ConsolePrintLine 2288  
                     __end_of_Ecg_Init 3016        A6_Process_Random_Comms@response 006F  
                                ttemp5 005C                                  ttemp6 005F  
                                ttemp7 0063                                  status 000FD8  
                                wtemp8 005C                        __end_of_sprintf 0C7A  
          EUSART_BufferGetChar@timeout 000F                        __end_of_strcspn 2AE0  
                      __end_of_strncmp 1DE6        __end_of_A6_Process_Random_Comms 244C  
                  TFT_FullScreen@color 001C                         __CFG_MCLRE$OFF 000000  
                       TFT_Flood@color 000D                        __initialization 28CC  
A6_NetworkGetStatus@networkStatusToken 003F                           __end_of_atoi 1990  
                         __end_of_atol 162A                           __end_of_main 2FE6  
                         __end_of_init 28CC                           __end_of_loop 074E  
                            ??_A6_Init 0056                TFT_ConsolePrintLine@str 006B  
                               ??_atoi 000D                                 ??_atol 0015  
                               ??_main 0056                                 ??_init 0005  
                               ??_loop 00AC                          __activetblptr 000002  
               _A6_NetworkGetRSSILevel 2766                       ??_TFT_DrawString 004D  
                         ??_A6_IsAlive 001F                           ??_A6_Command 001F  
                       _EUSART_TX_Char 30D8                       ___llmod@dividend 0012  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                     ___awdiv@dividend 0005                      _TFT_DrawChar$2238 0047  
                    _TFT_DrawChar$2239 0049                                 i2l4760 2AF2  
                               i2l4752 3064                                 i2l4770 2B32  
                               i2l4762 2AF6                                 i2l4754 307C  
                               i2l4850 2962                                 i2l4764 2B18  
                               i2l4756 3080                                 i2l4852 2970  
                               i2l4860 297E                                 i2l4766 2B1C  
                               i2l4758 2AE0                                 i2l4862 298C  
                               i2l4854 2974                                 i2l4846 2946  
                               i2l4768 2B2E                                 i2l4864 299A  
                               i2l4856 2978                                 i2l4848 2954  
                               i2l4858 297C                  _A6_BaudRateAutoDetect 1C2E  
                               _TMR3IE 007D01                                 _TMR3IF 007D09  
                               _SPBRGH 000FB0              TFT_ConsolePrintLine@color 006D  
        TFT_OrientationSet@orientation 0020       __size_of_Ecg_Background_Leads_Ok 007A  
                       __CFG_XINST$OFF 000000                        TFT_DrawLine@err 0030  
                     ??_TFT_FullScreen 001E                                 ___lmul 29AA  
                               ___wmul 303E                 A6_BaudRateSet@baudRate 0070  
                            ??___awdiv 0009               __size_of_TFT_ConsoleInit 001C  
                            ??___lldiv 000D                              ??___llmod 001A  
                    ?_EUSART_TX_String 0009                     __end_of_A6_IsAlive 2C50  
                               _memset 2F18                          _Ecg_Interrupt 3064  
                    __end_of_TFT_Flood 14F0                                 clear_0 290A  
                               clear_1 2916                                 clear_2 2922  
                   __end_of_A6_Command 25E2                       ___awdiv@quotient 000B  
                    __end_of_TFT_Reset 30A2                     ??_EUSART_TX_String 000C  
                               _strchr 2666                                 _strcmp 2B44  
                               _strlen 2D3A                                 _strtok 1990  
                               _strspn 2A14                                 _strstr 211C  
                         __pdataCOMRAM 0059                              ??_isdigit 0005  
                               loop@ns 01AC                                 loop@zz 01A8  
                         __mediumconst 57F0                 __end_of_EUSART_TX_Char 30F0  
                            ??_sleepMS 0009                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                 _EUSART_BufferGetChar 2D88                        TFT_DrawString@x 0060  
                      TFT_DrawString@y 0062                              ??_sprintf 0052  
                            ??_strcspn 000F                              ??_strncmp 000F  
                       _A6_BaudRateGet 1754                         _A6_BaudRateSet 162A  
                 __size_of_EUSART_Init 0048                             __accesstop 0060  
              __end_of__initialization 292E                 A6_BaudRateSet@response 0074  
                      __CFG_PBADEN$OFF 000000                          ___rparam_used 000001  
                      TFT_Flood@blocks 0017                         __pcstackCOMRAM 0001  
                         __pidataBANK0 30F0                         ?_Ecg_Interrupt 0001  
                            ?_TFT_Init 0021                   _TFT_ConsolePrintLine 21DA  
                            ?_Ecg_Init 0001                     _TFT_OrientationGet 30FC  
                   _TFT_OrientationSet 3016           __size_of_EUSART_RX_Interrupt 0064  
                      ?_EUSART_TX_Char 0001                  ?_EUSART_BufferGetChar 000F  
                       _Ecg_CheckLeads 2C50                 __end_of_A6_BaudRateGet 1878  
     __size_of_A6_Process_Random_Comms 008E                 __end_of_A6_BaudRateSet 1754  
                         sprintf@width 006D                    ?_TFT_OrientationGet 0001  
               ?_A6_BaudRateAutoDetect 0001                    ?_TFT_OrientationSet 001E  
                           __pbssBANK0 00B0                             __pbssBANK1 01AD  
                           __pbssBANK2 0200                   A6_ReadLine@iResponse 0016  
                              ?___lmul 0005                                ?___wmul 0005  
           EUSART_BaudRateSet@baudRate 0012                   ??_TFT_OrientationGet 0005  
                 ??_TFT_OrientationSet 0020                        _EUSART_RX_Flush 30F6  
                           ??_TFT_Init 0023                                ?_memset 0005  
                              _A6_Init 30BE                         ___lmul@product 000D  
             __end_of_TFT_DrawFillRect 2766                  ?_TFT_ConsolePrintLine 006B  
                              ?_strchr 0005                                ?_strcmp 0005  
                              ?_strlen 0005                          ??_A6_ReadLine 0016  
                              ?_strtok 0012                                ?_strspn 000B  
                              ?_strstr 0010                             ??_Ecg_Init 004D  
                   A6_ReadLine@timeout 0014                      ??_TFT_ConsoleInit 0021  
               TFT_WriteRegister@h_753 000B                 TFT_WriteRegister@l_754 000C  
               __end_of_Ecg_CheckLeads 2C9E                       TFT_DrawChar@line 0044  
                     TFT_DrawChar@size 003F                           A6_ReadLine@c 0017  
             ?_EUSART_RX_AvailableData 0005                        ?_A6_BaudRateGet 001F  
                      ?_A6_BaudRateSet 0070                TFT_OrientationSet@color 001E  
                            TFT_Init@i 002C                        __CFG_VREGEN$OFF 000000  
                TFT_DrawFillRect@color 0026             __end_of_EUSART_BaudRateSet 2666  
              _Ecg_Background_Leads_Ok 27E0                                __Hparam 0000  
                              __Lparam 0000                      A6_Command@command 0018  
                            _ECG_FLAGS 0056                        ??_Ecg_Interrupt 0001  
            A6_NetworkGetRSSI@response 001F                                ___awdiv 1F96  
                      __size_of___lmul 006A                  __end_of_TFT_GetHeight 2D3A  
                              ___lldiv 2288                        __size_of___wmul 0026  
                              ___llmod 244C                      _A6_NetworkGetRSSI 205A  
                      __CFG_STVREN$OFF 000000                      A6_Command@timeout 001A  
                        _ECG_HEARTBEAT 00B0                                __pcinit 28CC  
                      __size_of_memset 0038                                __ramtop 0800  
                        _ECG_HEARTRATE 00C2                ?_A6_NetworkGetRSSILevel 0001  
                              __ptext0 2FB6                                __ptext1 0012  
                              __ptext2 30A2                                __ptext3 23BE  
                              __ptext4 1A72                                __ptext5 2766  
                              __ptext6 205A                                __ptext7 1878  
                              __ptext8 162A                                __ptext9 1754  
                   ?_A6_NetworkGetRSSI 0001                  __end_of_TFT_DrawPixel 1EC0  
                      __size_of_strchr 0082                        __size_of_strcmp 0060  
                      __size_of_strlen 004E                        __size_of_strtok 00E2  
                      __size_of_strspn 0066                        __size_of_strstr 00BE  
                              _dpowers 5DBD                           __size_of_abs 0034  
                              _isdigit 2F84                           __size_of_isr 29A2  
         __size_of_A6_NetworkGetStatus 00DE                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                 ??_EUSART_BufferGetChar 0011  
                              _sleepMS 2EDE                    ??_A6_NetworkGetRSSI 001F  
                  __end_of_A6_ReadLine 1F96                                _sprintf 074E  
                              _strcspn 2A7A                                _strncmp 1D0C  
                       __pintcode_body 293C                              _EUSART_RX 0200  
                 end_of_initialization 292E                                memset@c 0007  
                              memset@n 0009                                memset@p 000B  
                        __Lmediumconst 57F0                                int_func 293C  
                   TFT_WriteRegister@h 0009                     TFT_WriteRegister@l 000A  
                      ___lldiv@divisor 0009                __end_of_EUSART_RX_Flush 30FC  
                      ___lldiv@counter 0011              Ecg_CheckLeads@leadsStatus 0008  
                            _RCSTAbits 000FAB              __end_of_A6_NetworkGetRSSI 211C  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                        ?_TFT_GetWidth 0005                       TFT_DrawString@bg 0068  
                        ?_TFT_DrawChar 0036                          ?_TFT_DrawLine 0017  
       __end_of_A6_NetworkGetRSSILevel 27E0                 ??_TFT_ConsolePrintLine 004D  
                              strcmp@r 000B                                strlen@s 0005  
                              strspn@i 0010                              _PORTAbits 000F80  
      __end_of_EUSART_RX_AvailableData 255C                              _PORTCbits 000F82  
                            _TFT_Flood 136E                              _TFT_Reset 3084  
              _A6_Process_Random_Comms 23BE            A6_NetworkGetStatus@response 001F  
            __size_of_EUSART_TX_String 0040              ??_Ecg_Background_Leads_Ok 004D  
                          TFT_Init@cmd 002A                              _TXSTAbits 000FAC  
                  _EUSART_RX_Interrupt 2AE0                         ??_TFT_GetWidth 0007  
                       ??_TFT_DrawChar 0040                         ??_TFT_DrawLine 0021  
             EUSART_RX_AvailableData@t 000B                         __end_of___lmul 2A14  
                       __end_of___wmul 3064                            _BAUDCONbits 000FB8  
                   A6_IsAlive@response 001F                          __pidataCOMRAM 3100  
                     ??_EUSART_TX_Char 0005                         __end_of_memset 2F50  
                    __size_of_TFT_Init 00DE                           _MILLISECONDS 01C9  
                          _A6_ReadLine 1EC0                             ?_TFT_Flood 000D  
                       __end_of_strchr 26E8                         __end_of_strcmp 2BA4  
                       __end_of_strlen 2D88                         __end_of_strtok 1A72  
                       __end_of_strspn 2A7A                         __end_of_strstr 21DA  
                           ?_TFT_Reset 0001                    start_initialization 28CC  
                 ?_EUSART_RX_Interrupt 0001                ??_A6_BaudRateAutoDetect 0056  
                    __size_of_Ecg_Init 0030                            __end_of_abs 2F84  
                          __end_of_isr 29AA                          ??_EUSART_Init 000D  
                  TFT_SetAddrWindow@x1 000D                    TFT_SetAddrWindow@x2 0011  
                  TFT_SetAddrWindow@y1 000F                    TFT_SetAddrWindow@y2 0013  
           A6_NetworkGetRSSI@RSSIToken 003F                    EUSART_TX_String@len 000B  
                  EUSART_TX_String@str 0009                        ___llmod@divisor 0016  
                      ___llmod@counter 001A                __size_of_TFT_DrawString 0092  
                     ?_EUSART_RX_Flush 0001                    TFT_Init@orientation 0025  
                      _TFT_ConsoleInit 30A2             __size_of_A6_NetworkGetRSSI 00C2  
                    _TFT_Init_Sequence 5CF1                               ??___lmul 000D  
                             ??___wmul 0009                  A6_Command@responseLen 001E  
                          __pdataBANK0 00CE                       __CFG_LPT1OSC$OFF 000000  
                             ??_memset 000B                               ?_A6_Init 0001  
                    ?_TFT_DrawFillRect 001E         EUSART_RX_AvailableData@timeout 0005  
            ??_A6_Process_Random_Comms 0051                               ??_strchr 0009  
                             ??_strcmp 0009                               ??_strlen 0007  
                     ??_A6_BaudRateGet 0023                               ??_strtok 0016  
                             ??_strspn 000F                               ??_strstr 0014  
                     ??_A6_BaudRateSet 0056                  A6_BaudRateSet@request 0094  
                   ??_TFT_DrawFillRect 0028                  ??_EUSART_RX_Interrupt 0001  
       ??_Ecg_Background_Leads_Failure 004D                __size_of_TFT_FullScreen 005C  
                          __pbssCOMRAM 0056             A6_Process_Random_Comms@cnt 008F  
                        __pcstackBANK0 0060                          __pcstackBANK1 0100  
                         loop@response 0100                           _isdigit$1963 0006  
         _A6_LAST_COMMAND_MILLISECONDS 00C6                            sprintf@flag 006A  
                          sprintf@prec 0060                    __end_of_EUSART_Init 2E1C  
     __size_of_EUSART_RX_AvailableData 0088                    _A6_NetworkGetStatus 1A72  
            __end_of_TFT_Init_Sequence 5DBD              A6_BaudRateAutoDetect@zzzz 0070  
                            __pintcode 0008                          __pmediumconst 57F0  
                         loop@zzzz_160 0160                           loop@zzzz_153 0120  
                         loop@zzzz_156 0140                               ?___awdiv 0005  
                             ?___lldiv 0005                               ?___llmod 0012  
          __size_of_TFT_OrientationGet 0004            __size_of_TFT_OrientationSet 0028  
                     ??_Ecg_CheckLeads 0007                     _EUSART_BaudRateSet 25E2  
                TFT_WriteRegister@data 0007                 A6_ReadLine@responseLen 0013  
                 ?_A6_NetworkGetStatus 0001                            ??_TFT_Flood 0013  
                             ?_isdigit 0001                   EUSART_RX_Interrupt@c 0002  
                          ??_TFT_Reset 0005                    ?_EUSART_BaudRateSet 0012  
                             ?_sleepMS 0005                   __end_of_A6_BAUDRATES 5DF1  
                    _TFT_WriteRegister 2E1C                       _EUSART_TX_String 2E60  
                             ?_sprintf 004A                   __end_of_TFT_GetWidth 2CEC  
                 __end_of_TFT_DrawChar 0F08                               ?_strcspn 000B  
                             ?_strncmp 0009                   __end_of_TFT_DrawLine 136E  
                  A6_ReadLine@response 0011                     ?_TFT_WriteRegister 0005  
              __end_of_TFT_ConsoleInit 30BE                         ___wmul@product 0009  
                    TFT_DrawChar@color 003B                    ??_TFT_WriteRegister 0009  
                 ??_EUSART_BaudRateSet 0016                               i2u380_40 2AF2  
                             i2u380_41 2AEE                               i2u381_40 2B08  
                             i2u381_41 2B00                               i2u390_40 2954  
                             i2u390_41 2950                               i2u383_40 2B2E  
                             i2u382_48 2B0A                               i2u391_40 2962  
                             i2u383_41 2B2A                               i2u391_41 295E  
                             i2u392_40 298C                               i2u392_41 2988  
                             i2u393_40 299A                               i2u393_41 2996  
                             _GO_nDONE 007E11                               _UCFGbits 000F6F  
                     __CFG_WDTPS$32768 000000                               _UCONbits 000F6D  
                __end_of_Ecg_Interrupt 3084              _TFT_ConsolePrintLine$2240 004F  
                             _TFT_Font 57F1                               _TFT_Init 1B50  
                     __size_of_A6_Init 001A                             _ADCON0bits 000FC2  
                           _ADCON1bits 000FC1                             _ADCON2bits 000FC0  
                    ___wmul@multiplier 0005                               _Ecg_Init 2FE6  
                ??_A6_NetworkGetStatus 001F                             TFT_Flood@i 0019  
                             _Ecg_Xold 00D0                               _Ecg_Yold 00CE  
            __end_of_TFT_WriteRegister 2E60                     TFT_DrawPixel@color 0011  
        __size_of_EUSART_BufferGetChar 004C                             _A6_IsAlive 2C00  
                      EUSART_TX_Char@c 0005                            _EUSART_Init 2DD4  
                    TFT_DrawFillRect@h 0024                             _A6_Command 255C  
                    TFT_DrawFillRect@w 0022                      TFT_DrawFillRect@x 001E  
                    TFT_DrawFillRect@y 0020                      ___lmul@multiplier 0005  
                            copy_data0 28E0                 __size_of_TFT_GetHeight 004E  
                    _TFT_SetAddrWindow 0F08                        _TFT_Orientation 0058  
                       _TFT_DrawString 232C                 __size_of_TFT_DrawPixel 00DA  
                   ?_TFT_SetAddrWindow 000D                               __Hrparam 0000  
               A6_BaudRateGet@baudRate 0043                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0028                         _TFT_ConsoleRow 00CC  
                           _ECG_BUFFER 00BD                    TFT_DrawString@color 0066  
                  ??_TFT_SetAddrWindow 0015                      TFT_DrawLine@t_814 0026  
                    TFT_DrawLine@t_815 0028                      TFT_DrawLine@t_816 002A  
                     __size_of___awdiv 00C4                       __size_of___lldiv 00A4  
                     __size_of___llmod 0088                      TFT_DrawLine@color 001F  
                    TFT_DrawLine@steep 0032          __size_of_TFT_ConsolePrintLine 00AE  
                    TFT_DrawLine@ystep 002E                           ?_A6_ReadLine 0011  
                       _TFT_FullScreen 2BA4                     A6_Command@response 001C  
                           sprintf@len 0064                             sprintf@val 0066  
                     __size_of_isdigit 0032                               __ptext10 1990  
                             __ptext11 2A14                               __ptext20 3084  
                             __ptext12 2A7A                               __ptext21 3016  
                             __ptext13 211C                               __ptext30 2F84  
                             __ptext22 2FE6                               __ptext14 1D0C  
                             __ptext31 244C                               __ptext23 2C50  
                             __ptext15 2666                               __ptext40 26E8  
                             __ptext32 2EDE                               __ptext24 27E0  
                             __ptext16 14F0                               __ptext41 303E  
                             __ptext33 21DA                               __ptext25 2EA0  
                             __ptext17 29AA                               __ptext50 2288  
                             __ptext42 2BA4                               __ptext34 232C  
                             __ptext26 2DD4                               __ptext18 285A  
                             __ptext51 2C00                               __ptext43 0F08  
                             __ptext35 0C7A                               __ptext27 30BE  
                             __ptext19 1B50                               __ptext60 2D88  
                             __ptext52 2B44                               __ptext44 2C9E  
                             __ptext36 1186                               __ptext28 1C2E  
                             __ptext61 24D4                               __ptext53 255C  
                             __ptext45 2CEC                               __ptext37 2F50  
                             __ptext29 074E                               __ptext54 2D3A  
                             __ptext46 30FC                               __ptext38 1F96  
                             __ptext63 3064                               __ptext55 2E60  
                             __ptext47 136E                               __ptext39 1DE6  
                             __ptext64 2AE0                               __ptext56 30D8  
                             __ptext48 2E1C                               __ptext57 30F6  
                             __ptext49 25E2                               __ptext58 1EC0  
                             __ptext59 2F18                       __size_of_sleepMS 003A  
       __size_of_A6_BaudRateAutoDetect 00DE          __end_of_A6_BaudRateAutoDetect 1D0C  
                 TFT_WriteRegister@reg 0005              __end_of_TFT_SetAddrWindow 1186  
               A6_BaudRateGet@response 0023                       __size_of_sprintf 052C  
                     __size_of_strcspn 0066                       __size_of_strncmp 00DA  
               __end_of_TFT_DrawString 23BE                               _loop$143 01A0  
                             _loop$148 01A2                               _loop$167 01A4  
                             _loop$168 01A6                              sleepMS@ms 0005  
                        __size_of_atoi 0118                          __size_of_atol 013A  
                        __size_of_main 0030                       ?_TFT_ConsoleInit 0001  
                        __size_of_init 0072                          __size_of_loop 073C  
              _EUSART_RX_AvailableData 24D4             A6_NetworkGetRSSILevel@RSSI 0041  
                           strncmp@len 000D             TFT_ConsoleInit@orientation 0021  
                       _ECG_ICON_HEART 5DF1                               int$flags 005B  
                             atoi@sign 000F                               atol@sign 0019  
                        _TFT_GetHeight 2CEC                 __end_of_TFT_FullScreen 2C00  
                __CFG_CPUDIV$OSC1_PLL2 000000                          _TFT_DrawPixel 1DE6  
                          _OSCTUNEbits 000F9B                  __size_of_TFT_GetWidth 004E  
                __size_of_TFT_DrawChar 028E                  __size_of_TFT_DrawLine 01E8  
           __size_of_TFT_WriteRegister 0044               ?_Ecg_Background_Leads_Ok 0001  
                             isdigit@c 0007                               memset@p1 0005  
                          ?_A6_IsAlive 0001                     TFT_DrawString@size 006A  
                          ?_A6_Command 0018                               intlevel2 0000  
                            sprintf@ap 006B                              sprintf@cp 0062  
                            sprintf@sp 004A              __size_of_TFT_DrawFillRect 007E  
                      ?_TFT_DrawString 0060                              strchr@chr 0007  
                             loop@zzzz 0180                              strchr@ptr 0005  
                     ___lldiv@dividend 0005                 __end_of_ECG_ICON_HEART 5E2F  
                            strcspn@s1 000B                              strcspn@s2 000D  
                             sleepMS@t 0009                              strncmp@s1 0009  
                            strncmp@s2 000B               ??_A6_NetworkGetRSSILevel 0041  
                           _OSCCONbits 000FD3                           _A6_BAUDRATES 5DE5  
             __end_of_EUSART_TX_String 2EA0                         ?_TFT_GetHeight 0005  
                         _TFT_GetWidth 2C9E                           _TFT_DrawChar 0C7A  
                         _TFT_DrawLine 1186            __end_of_EUSART_RX_Interrupt 2B44  
             __size_of_EUSART_RX_Flush 0006                        ?_TFT_FullScreen 001C  
                    TFT_DrawString@str 0064                         ?_TFT_DrawPixel 000D  
                             sprintf@c 006F                               sprintf@f 004C  
                             strcmp@s1 0005                               strcmp@s2 0007  
                     ___lldiv@quotient 000D                               strlen@cp 0007  
                             strcspn@i 0010            A6_BaudRateGet@baudRateToken 0047  
                             strtok@s1 0012                               strtok@s2 0014  
                             strspn@s1 000B                               strspn@s2 000D  
                             strtok@sp 00CA                               strstr@s1 0010  
                             strstr@s2 0012                __size_of_EUSART_TX_Char 0018  
           __size_of_TFT_SetAddrWindow 027E              ??_EUSART_RX_AvailableData 0007  
                   __CFG_FOSC$HSPLL_HS 000000   __end_of_Ecg_Background_Leads_Failure 2EDE  
__size_of_Ecg_Background_Leads_Failure 003E           _Ecg_Background_Leads_Failure 2EA0  
           __end_of_TFT_OrientationGet 3100             __end_of_TFT_OrientationSet 303E  
