

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 24 21:05:52 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           ; Version 2.10
    59                           ; Generated 31/07/2019 GMT
    60                           ; 
    61                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F2455 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  001307                     __pidataCOMRAM:
    95                           	opt callstack 0
    96                           
    97                           ;initializer for _Ecg_Y
    98  001307  018F               	dw	399
    99                           
   100                           ;initializer for _Ecg_Xold
   101  001309  00EF               	dw	239
   102                           
   103                           ;initializer for _Ecg_X
   104  00130B  00EF               	dw	239
   105                           
   106                           	psect	idataBANK0
   107  001108                     __pidataBANK0:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _x6
   111  001108  41                 	db	65
   112  001109  54                 	db	84
   113  00110A  2B                 	db	43
   114  00110B  43                 	db	67
   115  00110C  4F                 	db	79
   116  00110D  50                 	db	80
   117  00110E  53                 	db	83
   118  00110F  3F                 	db	63
   119  001110  0D                 	db	13
   120  001111  00                 	db	0
   121                           
   122                           ;initializer for _x5
   123  001112  41                 	db	65
   124  001113  54                 	db	84
   125  001114  2B                 	db	43
   126  001115  43                 	db	67
   127  001116  52                 	db	82
   128  001117  45                 	db	69
   129  001118  47                 	db	71
   130  001119  3F                 	db	63
   131  00111A  0D                 	db	13
   132  00111B  00                 	db	0
   133                           
   134                           ;initializer for _x2
   135  00111C  41                 	db	65
   136  00111D  54                 	db	84
   137  00111E  2B                 	db	43
   138  00111F  43                 	db	67
   139  001120  43                 	db	67
   140  001121  4C                 	db	76
   141  001122  4B                 	db	75
   142  001123  3F                 	db	63
   143  001124  0D                 	db	13
   144  001125  00                 	db	0
   145                           
   146                           ;initializer for _x4
   147  001126  41                 	db	65
   148  001127  54                 	db	84
   149  001128  2B                 	db	43
   150  001129  43                 	db	67
   151  00112A  43                 	db	67
   152  00112B  49                 	db	73
   153  00112C  44                 	db	68
   154  00112D  0D                 	db	13
   155  00112E  00                 	db	0
   156                           
   157                           ;initializer for _x3
   158  00112F  41                 	db	65
   159  001130  54                 	db	84
   160  001131  2B                 	db	43
   161  001132  43                 	db	67
   162  001133  53                 	db	83
   163  001134  51                 	db	81
   164  001135  0D                 	db	13
   165  001136  00                 	db	0
   166                           
   167                           ;initializer for _Ecg_Yold
   168  001137  018F               	dw	399
   169                           
   170                           ;initializer for _x1
   171  001139  41                 	db	65
   172  00113A  54                 	db	84
   173  00113B  2B                 	db	43
   174  00113C  49                 	db	73
   175  00113D  50                 	db	80
   176  00113E  52                 	db	82
   177  00113F  3F                 	db	63
   178  001140  0D                 	db	13
   179  001141  00                 	db	0
   180                           
   181                           ;initializer for _x8
   182  001142  41                 	db	65
   183  001143  54                 	db	84
   184  001144  0D                 	db	13
   185  001145  00                 	db	0
   186                           
   187                           	psect	idataBANK1
   188  0012FC                     __pidataBANK1:
   189                           	opt callstack 0
   190                           
   191                           ;initializer for _x7
   192  0012FC  41                 	db	65
   193  0012FD  54                 	db	84
   194  0012FE  2B                 	db	43
   195  0012FF  43                 	db	67
   196  001300  4F                 	db	79
   197  001301  50                 	db	80
   198  001302  53                 	db	83
   199  001303  3D                 	db	61
   200  001304  3F                 	db	63
   201  001305  0D                 	db	13
   202  001306  00                 	db	0
   203                           
   204                           	psect	mediumconst
   205  005996                     __pmediumconst:
   206                           	opt callstack 0
   207  005996  00                 	db	0
   208  005997                     _TFT_Font:
   209                           	opt callstack 0
   210  005997  00                 	db	0
   211  005998  00                 	db	0
   212  005999  00                 	db	0
   213  00599A  00                 	db	0
   214  00599B  00                 	db	0
   215  00599C  3E                 	db	62
   216  00599D  5B                 	db	91
   217  00599E  4F                 	db	79
   218  00599F  5B                 	db	91
   219  0059A0  3E                 	db	62
   220  0059A1  3E                 	db	62
   221  0059A2  6B                 	db	107
   222  0059A3  4F                 	db	79
   223  0059A4  6B                 	db	107
   224  0059A5  3E                 	db	62
   225  0059A6  1C                 	db	28
   226  0059A7  3E                 	db	62
   227  0059A8  7C                 	db	124
   228  0059A9  3E                 	db	62
   229  0059AA  1C                 	db	28
   230  0059AB  18                 	db	24
   231  0059AC  3C                 	db	60
   232  0059AD  7E                 	db	126
   233  0059AE  3C                 	db	60
   234  0059AF  18                 	db	24
   235  0059B0  1C                 	db	28
   236  0059B1  57                 	db	87
   237  0059B2  7D                 	db	125
   238  0059B3  57                 	db	87
   239  0059B4  1C                 	db	28
   240  0059B5  1C                 	db	28
   241  0059B6  5E                 	db	94
   242  0059B7  7F                 	db	127
   243  0059B8  5E                 	db	94
   244  0059B9  1C                 	db	28
   245  0059BA  00                 	db	0
   246  0059BB  18                 	db	24
   247  0059BC  3C                 	db	60
   248  0059BD  18                 	db	24
   249  0059BE  00                 	db	0
   250  0059BF  FF                 	db	255
   251  0059C0  E7                 	db	231
   252  0059C1  C3                 	db	195
   253  0059C2  E7                 	db	231
   254  0059C3  FF                 	db	255
   255  0059C4  00                 	db	0
   256  0059C5  18                 	db	24
   257  0059C6  24                 	db	36
   258  0059C7  18                 	db	24
   259  0059C8  00                 	db	0
   260  0059C9  FF                 	db	255
   261  0059CA  E7                 	db	231
   262  0059CB  DB                 	db	219
   263  0059CC  E7                 	db	231
   264  0059CD  FF                 	db	255
   265  0059CE  30                 	db	48
   266  0059CF  48                 	db	72
   267  0059D0  3A                 	db	58
   268  0059D1  06                 	db	6
   269  0059D2  0E                 	db	14
   270  0059D3  26                 	db	38
   271  0059D4  29                 	db	41
   272  0059D5  79                 	db	121
   273  0059D6  29                 	db	41
   274  0059D7  26                 	db	38
   275  0059D8  40                 	db	64
   276  0059D9  7F                 	db	127
   277  0059DA  05                 	db	5
   278  0059DB  05                 	db	5
   279  0059DC  07                 	db	7
   280  0059DD  40                 	db	64
   281  0059DE  7F                 	db	127
   282  0059DF  05                 	db	5
   283  0059E0  25                 	db	37
   284  0059E1  3F                 	db	63
   285  0059E2  5A                 	db	90
   286  0059E3  3C                 	db	60
   287  0059E4  E7                 	db	231
   288  0059E5  3C                 	db	60
   289  0059E6  5A                 	db	90
   290  0059E7  7F                 	db	127
   291  0059E8  3E                 	db	62
   292  0059E9  1C                 	db	28
   293  0059EA  1C                 	db	28
   294  0059EB  08                 	db	8
   295  0059EC  08                 	db	8
   296  0059ED  1C                 	db	28
   297  0059EE  1C                 	db	28
   298  0059EF  3E                 	db	62
   299  0059F0  7F                 	db	127
   300  0059F1  14                 	db	20
   301  0059F2  22                 	db	34
   302  0059F3  7F                 	db	127
   303  0059F4  22                 	db	34
   304  0059F5  14                 	db	20
   305  0059F6  5F                 	db	95
   306  0059F7  5F                 	db	95
   307  0059F8  00                 	db	0
   308  0059F9  5F                 	db	95
   309  0059FA  5F                 	db	95
   310  0059FB  06                 	db	6
   311  0059FC  09                 	db	9
   312  0059FD  7F                 	db	127
   313  0059FE  01                 	db	1
   314  0059FF  7F                 	db	127
   315  005A00  00                 	db	0
   316  005A01  66                 	db	102
   317  005A02  89                 	db	137
   318  005A03  95                 	db	149
   319  005A04  6A                 	db	106
   320  005A05  60                 	db	96
   321  005A06  60                 	db	96
   322  005A07  60                 	db	96
   323  005A08  60                 	db	96
   324  005A09  60                 	db	96
   325  005A0A  94                 	db	148
   326  005A0B  A2                 	db	162
   327  005A0C  FF                 	db	255
   328  005A0D  A2                 	db	162
   329  005A0E  94                 	db	148
   330  005A0F  08                 	db	8
   331  005A10  04                 	db	4
   332  005A11  7E                 	db	126
   333  005A12  04                 	db	4
   334  005A13  08                 	db	8
   335  005A14  10                 	db	16
   336  005A15  20                 	db	32
   337  005A16  7E                 	db	126
   338  005A17  20                 	db	32
   339  005A18  10                 	db	16
   340  005A19  08                 	db	8
   341  005A1A  08                 	db	8
   342  005A1B  2A                 	db	42
   343  005A1C  1C                 	db	28
   344  005A1D  08                 	db	8
   345  005A1E  08                 	db	8
   346  005A1F  1C                 	db	28
   347  005A20  2A                 	db	42
   348  005A21  08                 	db	8
   349  005A22  08                 	db	8
   350  005A23  1E                 	db	30
   351  005A24  10                 	db	16
   352  005A25  10                 	db	16
   353  005A26  10                 	db	16
   354  005A27  10                 	db	16
   355  005A28  0C                 	db	12
   356  005A29  1E                 	db	30
   357  005A2A  0C                 	db	12
   358  005A2B  1E                 	db	30
   359  005A2C  0C                 	db	12
   360  005A2D  30                 	db	48
   361  005A2E  38                 	db	56
   362  005A2F  3E                 	db	62
   363  005A30  38                 	db	56
   364  005A31  30                 	db	48
   365  005A32  06                 	db	6
   366  005A33  0E                 	db	14
   367  005A34  3E                 	db	62
   368  005A35  0E                 	db	14
   369  005A36  06                 	db	6
   370  005A37  00                 	db	0
   371  005A38  00                 	db	0
   372  005A39  00                 	db	0
   373  005A3A  00                 	db	0
   374  005A3B  00                 	db	0
   375  005A3C  00                 	db	0
   376  005A3D  00                 	db	0
   377  005A3E  5F                 	db	95
   378  005A3F  00                 	db	0
   379  005A40  00                 	db	0
   380  005A41  00                 	db	0
   381  005A42  07                 	db	7
   382  005A43  00                 	db	0
   383  005A44  07                 	db	7
   384  005A45  00                 	db	0
   385  005A46  14                 	db	20
   386  005A47  7F                 	db	127
   387  005A48  14                 	db	20
   388  005A49  7F                 	db	127
   389  005A4A  14                 	db	20
   390  005A4B  24                 	db	36
   391  005A4C  2A                 	db	42
   392  005A4D  7F                 	db	127
   393  005A4E  2A                 	db	42
   394  005A4F  12                 	db	18
   395  005A50  23                 	db	35
   396  005A51  13                 	db	19
   397  005A52  08                 	db	8
   398  005A53  64                 	db	100
   399  005A54  62                 	db	98
   400  005A55  36                 	db	54
   401  005A56  49                 	db	73
   402  005A57  56                 	db	86
   403  005A58  20                 	db	32
   404  005A59  50                 	db	80
   405  005A5A  00                 	db	0
   406  005A5B  08                 	db	8
   407  005A5C  07                 	db	7
   408  005A5D  03                 	db	3
   409  005A5E  00                 	db	0
   410  005A5F  00                 	db	0
   411  005A60  1C                 	db	28
   412  005A61  22                 	db	34
   413  005A62  41                 	db	65
   414  005A63  00                 	db	0
   415  005A64  00                 	db	0
   416  005A65  41                 	db	65
   417  005A66  22                 	db	34
   418  005A67  1C                 	db	28
   419  005A68  00                 	db	0
   420  005A69  2A                 	db	42
   421  005A6A  1C                 	db	28
   422  005A6B  7F                 	db	127
   423  005A6C  1C                 	db	28
   424  005A6D  2A                 	db	42
   425  005A6E  08                 	db	8
   426  005A6F  08                 	db	8
   427  005A70  3E                 	db	62
   428  005A71  08                 	db	8
   429  005A72  08                 	db	8
   430  005A73  00                 	db	0
   431  005A74  80                 	db	128
   432  005A75  70                 	db	112
   433  005A76  30                 	db	48
   434  005A77  00                 	db	0
   435  005A78  08                 	db	8
   436  005A79  08                 	db	8
   437  005A7A  08                 	db	8
   438  005A7B  08                 	db	8
   439  005A7C  08                 	db	8
   440  005A7D  00                 	db	0
   441  005A7E  00                 	db	0
   442  005A7F  60                 	db	96
   443  005A80  60                 	db	96
   444  005A81  00                 	db	0
   445  005A82  20                 	db	32
   446  005A83  10                 	db	16
   447  005A84  08                 	db	8
   448  005A85  04                 	db	4
   449  005A86  02                 	db	2
   450  005A87  3E                 	db	62
   451  005A88  51                 	db	81
   452  005A89  49                 	db	73
   453  005A8A  45                 	db	69
   454  005A8B  3E                 	db	62
   455  005A8C  00                 	db	0
   456  005A8D  42                 	db	66
   457  005A8E  7F                 	db	127
   458  005A8F  40                 	db	64
   459  005A90  00                 	db	0
   460  005A91  72                 	db	114
   461  005A92  49                 	db	73
   462  005A93  49                 	db	73
   463  005A94  49                 	db	73
   464  005A95  46                 	db	70
   465  005A96  21                 	db	33
   466  005A97  41                 	db	65
   467  005A98  49                 	db	73
   468  005A99  4D                 	db	77
   469  005A9A  33                 	db	51
   470  005A9B  18                 	db	24
   471  005A9C  14                 	db	20
   472  005A9D  12                 	db	18
   473  005A9E  7F                 	db	127
   474  005A9F  10                 	db	16
   475  005AA0  27                 	db	39
   476  005AA1  45                 	db	69
   477  005AA2  45                 	db	69
   478  005AA3  45                 	db	69
   479  005AA4  39                 	db	57
   480  005AA5  3C                 	db	60
   481  005AA6  4A                 	db	74
   482  005AA7  49                 	db	73
   483  005AA8  49                 	db	73
   484  005AA9  31                 	db	49
   485  005AAA  41                 	db	65
   486  005AAB  21                 	db	33
   487  005AAC  11                 	db	17
   488  005AAD  09                 	db	9
   489  005AAE  07                 	db	7
   490  005AAF  36                 	db	54
   491  005AB0  49                 	db	73
   492  005AB1  49                 	db	73
   493  005AB2  49                 	db	73
   494  005AB3  36                 	db	54
   495  005AB4  46                 	db	70
   496  005AB5  49                 	db	73
   497  005AB6  49                 	db	73
   498  005AB7  29                 	db	41
   499  005AB8  1E                 	db	30
   500  005AB9  00                 	db	0
   501  005ABA  00                 	db	0
   502  005ABB  14                 	db	20
   503  005ABC  00                 	db	0
   504  005ABD  00                 	db	0
   505  005ABE  00                 	db	0
   506  005ABF  40                 	db	64
   507  005AC0  34                 	db	52
   508  005AC1  00                 	db	0
   509  005AC2  00                 	db	0
   510  005AC3  00                 	db	0
   511  005AC4  08                 	db	8
   512  005AC5  14                 	db	20
   513  005AC6  22                 	db	34
   514  005AC7  41                 	db	65
   515  005AC8  14                 	db	20
   516  005AC9  14                 	db	20
   517  005ACA  14                 	db	20
   518  005ACB  14                 	db	20
   519  005ACC  14                 	db	20
   520  005ACD  00                 	db	0
   521  005ACE  41                 	db	65
   522  005ACF  22                 	db	34
   523  005AD0  14                 	db	20
   524  005AD1  08                 	db	8
   525  005AD2  02                 	db	2
   526  005AD3  01                 	db	1
   527  005AD4  59                 	db	89
   528  005AD5  09                 	db	9
   529  005AD6  06                 	db	6
   530  005AD7  3E                 	db	62
   531  005AD8  41                 	db	65
   532  005AD9  5D                 	db	93
   533  005ADA  59                 	db	89
   534  005ADB  4E                 	db	78
   535  005ADC  7C                 	db	124
   536  005ADD  12                 	db	18
   537  005ADE  11                 	db	17
   538  005ADF  12                 	db	18
   539  005AE0  7C                 	db	124
   540  005AE1  7F                 	db	127
   541  005AE2  49                 	db	73
   542  005AE3  49                 	db	73
   543  005AE4  49                 	db	73
   544  005AE5  36                 	db	54
   545  005AE6  3E                 	db	62
   546  005AE7  41                 	db	65
   547  005AE8  41                 	db	65
   548  005AE9  41                 	db	65
   549  005AEA  22                 	db	34
   550  005AEB  7F                 	db	127
   551  005AEC  41                 	db	65
   552  005AED  41                 	db	65
   553  005AEE  41                 	db	65
   554  005AEF  3E                 	db	62
   555  005AF0  7F                 	db	127
   556  005AF1  49                 	db	73
   557  005AF2  49                 	db	73
   558  005AF3  49                 	db	73
   559  005AF4  41                 	db	65
   560  005AF5  7F                 	db	127
   561  005AF6  09                 	db	9
   562  005AF7  09                 	db	9
   563  005AF8  09                 	db	9
   564  005AF9  01                 	db	1
   565  005AFA  3E                 	db	62
   566  005AFB  41                 	db	65
   567  005AFC  41                 	db	65
   568  005AFD  51                 	db	81
   569  005AFE  73                 	db	115
   570  005AFF  7F                 	db	127
   571  005B00  08                 	db	8
   572  005B01  08                 	db	8
   573  005B02  08                 	db	8
   574  005B03  7F                 	db	127
   575  005B04  00                 	db	0
   576  005B05  41                 	db	65
   577  005B06  7F                 	db	127
   578  005B07  41                 	db	65
   579  005B08  00                 	db	0
   580  005B09  20                 	db	32
   581  005B0A  40                 	db	64
   582  005B0B  41                 	db	65
   583  005B0C  3F                 	db	63
   584  005B0D  01                 	db	1
   585  005B0E  7F                 	db	127
   586  005B0F  08                 	db	8
   587  005B10  14                 	db	20
   588  005B11  22                 	db	34
   589  005B12  41                 	db	65
   590  005B13  7F                 	db	127
   591  005B14  40                 	db	64
   592  005B15  40                 	db	64
   593  005B16  40                 	db	64
   594  005B17  40                 	db	64
   595  005B18  7F                 	db	127
   596  005B19  02                 	db	2
   597  005B1A  1C                 	db	28
   598  005B1B  02                 	db	2
   599  005B1C  7F                 	db	127
   600  005B1D  7F                 	db	127
   601  005B1E  04                 	db	4
   602  005B1F  08                 	db	8
   603  005B20  10                 	db	16
   604  005B21  7F                 	db	127
   605  005B22  3E                 	db	62
   606  005B23  41                 	db	65
   607  005B24  41                 	db	65
   608  005B25  41                 	db	65
   609  005B26  3E                 	db	62
   610  005B27  7F                 	db	127
   611  005B28  09                 	db	9
   612  005B29  09                 	db	9
   613  005B2A  09                 	db	9
   614  005B2B  06                 	db	6
   615  005B2C  3E                 	db	62
   616  005B2D  41                 	db	65
   617  005B2E  51                 	db	81
   618  005B2F  21                 	db	33
   619  005B30  5E                 	db	94
   620  005B31  7F                 	db	127
   621  005B32  09                 	db	9
   622  005B33  19                 	db	25
   623  005B34  29                 	db	41
   624  005B35  46                 	db	70
   625  005B36  26                 	db	38
   626  005B37  49                 	db	73
   627  005B38  49                 	db	73
   628  005B39  49                 	db	73
   629  005B3A  32                 	db	50
   630  005B3B  03                 	db	3
   631  005B3C  01                 	db	1
   632  005B3D  7F                 	db	127
   633  005B3E  01                 	db	1
   634  005B3F  03                 	db	3
   635  005B40  3F                 	db	63
   636  005B41  40                 	db	64
   637  005B42  40                 	db	64
   638  005B43  40                 	db	64
   639  005B44  3F                 	db	63
   640  005B45  1F                 	db	31
   641  005B46  20                 	db	32
   642  005B47  40                 	db	64
   643  005B48  20                 	db	32
   644  005B49  1F                 	db	31
   645  005B4A  3F                 	db	63
   646  005B4B  40                 	db	64
   647  005B4C  38                 	db	56
   648  005B4D  40                 	db	64
   649  005B4E  3F                 	db	63
   650  005B4F  63                 	db	99
   651  005B50  14                 	db	20
   652  005B51  08                 	db	8
   653  005B52  14                 	db	20
   654  005B53  63                 	db	99
   655  005B54  03                 	db	3
   656  005B55  04                 	db	4
   657  005B56  78                 	db	120
   658  005B57  04                 	db	4
   659  005B58  03                 	db	3
   660  005B59  61                 	db	97
   661  005B5A  59                 	db	89
   662  005B5B  49                 	db	73
   663  005B5C  4D                 	db	77
   664  005B5D  43                 	db	67
   665  005B5E  00                 	db	0
   666  005B5F  7F                 	db	127
   667  005B60  41                 	db	65
   668  005B61  41                 	db	65
   669  005B62  41                 	db	65
   670  005B63  02                 	db	2
   671  005B64  04                 	db	4
   672  005B65  08                 	db	8
   673  005B66  10                 	db	16
   674  005B67  20                 	db	32
   675  005B68  00                 	db	0
   676  005B69  41                 	db	65
   677  005B6A  41                 	db	65
   678  005B6B  41                 	db	65
   679  005B6C  7F                 	db	127
   680  005B6D  04                 	db	4
   681  005B6E  02                 	db	2
   682  005B6F  01                 	db	1
   683  005B70  02                 	db	2
   684  005B71  04                 	db	4
   685  005B72  40                 	db	64
   686  005B73  40                 	db	64
   687  005B74  40                 	db	64
   688  005B75  40                 	db	64
   689  005B76  40                 	db	64
   690  005B77  00                 	db	0
   691  005B78  03                 	db	3
   692  005B79  07                 	db	7
   693  005B7A  08                 	db	8
   694  005B7B  00                 	db	0
   695  005B7C  20                 	db	32
   696  005B7D  54                 	db	84
   697  005B7E  54                 	db	84
   698  005B7F  78                 	db	120
   699  005B80  40                 	db	64
   700  005B81  7F                 	db	127
   701  005B82  28                 	db	40
   702  005B83  44                 	db	68
   703  005B84  44                 	db	68
   704  005B85  38                 	db	56
   705  005B86  38                 	db	56
   706  005B87  44                 	db	68
   707  005B88  44                 	db	68
   708  005B89  44                 	db	68
   709  005B8A  28                 	db	40
   710  005B8B  38                 	db	56
   711  005B8C  44                 	db	68
   712  005B8D  44                 	db	68
   713  005B8E  28                 	db	40
   714  005B8F  7F                 	db	127
   715  005B90  38                 	db	56
   716  005B91  54                 	db	84
   717  005B92  54                 	db	84
   718  005B93  54                 	db	84
   719  005B94  18                 	db	24
   720  005B95  00                 	db	0
   721  005B96  08                 	db	8
   722  005B97  7E                 	db	126
   723  005B98  09                 	db	9
   724  005B99  02                 	db	2
   725  005B9A  18                 	db	24
   726  005B9B  A4                 	db	164
   727  005B9C  A4                 	db	164
   728  005B9D  9C                 	db	156
   729  005B9E  78                 	db	120
   730  005B9F  7F                 	db	127
   731  005BA0  08                 	db	8
   732  005BA1  04                 	db	4
   733  005BA2  04                 	db	4
   734  005BA3  78                 	db	120
   735  005BA4  00                 	db	0
   736  005BA5  44                 	db	68
   737  005BA6  7D                 	db	125
   738  005BA7  40                 	db	64
   739  005BA8  00                 	db	0
   740  005BA9  20                 	db	32
   741  005BAA  40                 	db	64
   742  005BAB  40                 	db	64
   743  005BAC  3D                 	db	61
   744  005BAD  00                 	db	0
   745  005BAE  7F                 	db	127
   746  005BAF  10                 	db	16
   747  005BB0  28                 	db	40
   748  005BB1  44                 	db	68
   749  005BB2  00                 	db	0
   750  005BB3  00                 	db	0
   751  005BB4  41                 	db	65
   752  005BB5  7F                 	db	127
   753  005BB6  40                 	db	64
   754  005BB7  00                 	db	0
   755  005BB8  7C                 	db	124
   756  005BB9  04                 	db	4
   757  005BBA  78                 	db	120
   758  005BBB  04                 	db	4
   759  005BBC  78                 	db	120
   760  005BBD  7C                 	db	124
   761  005BBE  08                 	db	8
   762  005BBF  04                 	db	4
   763  005BC0  04                 	db	4
   764  005BC1  78                 	db	120
   765  005BC2  38                 	db	56
   766  005BC3  44                 	db	68
   767  005BC4  44                 	db	68
   768  005BC5  44                 	db	68
   769  005BC6  38                 	db	56
   770  005BC7  FC                 	db	252
   771  005BC8  18                 	db	24
   772  005BC9  24                 	db	36
   773  005BCA  24                 	db	36
   774  005BCB  18                 	db	24
   775  005BCC  18                 	db	24
   776  005BCD  24                 	db	36
   777  005BCE  24                 	db	36
   778  005BCF  18                 	db	24
   779  005BD0  FC                 	db	252
   780  005BD1  7C                 	db	124
   781  005BD2  08                 	db	8
   782  005BD3  04                 	db	4
   783  005BD4  04                 	db	4
   784  005BD5  08                 	db	8
   785  005BD6  48                 	db	72
   786  005BD7  54                 	db	84
   787  005BD8  54                 	db	84
   788  005BD9  54                 	db	84
   789  005BDA  24                 	db	36
   790  005BDB  04                 	db	4
   791  005BDC  04                 	db	4
   792  005BDD  3F                 	db	63
   793  005BDE  44                 	db	68
   794  005BDF  24                 	db	36
   795  005BE0  3C                 	db	60
   796  005BE1  40                 	db	64
   797  005BE2  40                 	db	64
   798  005BE3  20                 	db	32
   799  005BE4  7C                 	db	124
   800  005BE5  1C                 	db	28
   801  005BE6  20                 	db	32
   802  005BE7  40                 	db	64
   803  005BE8  20                 	db	32
   804  005BE9  1C                 	db	28
   805  005BEA  3C                 	db	60
   806  005BEB  40                 	db	64
   807  005BEC  30                 	db	48
   808  005BED  40                 	db	64
   809  005BEE  3C                 	db	60
   810  005BEF  44                 	db	68
   811  005BF0  28                 	db	40
   812  005BF1  10                 	db	16
   813  005BF2  28                 	db	40
   814  005BF3  44                 	db	68
   815  005BF4  4C                 	db	76
   816  005BF5  90                 	db	144
   817  005BF6  90                 	db	144
   818  005BF7  90                 	db	144
   819  005BF8  7C                 	db	124
   820  005BF9  44                 	db	68
   821  005BFA  64                 	db	100
   822  005BFB  54                 	db	84
   823  005BFC  4C                 	db	76
   824  005BFD  44                 	db	68
   825  005BFE  00                 	db	0
   826  005BFF  08                 	db	8
   827  005C00  36                 	db	54
   828  005C01  41                 	db	65
   829  005C02  00                 	db	0
   830  005C03  00                 	db	0
   831  005C04  00                 	db	0
   832  005C05  77                 	db	119
   833  005C06  00                 	db	0
   834  005C07  00                 	db	0
   835  005C08  00                 	db	0
   836  005C09  41                 	db	65
   837  005C0A  36                 	db	54
   838  005C0B  08                 	db	8
   839  005C0C  00                 	db	0
   840  005C0D  02                 	db	2
   841  005C0E  01                 	db	1
   842  005C0F  02                 	db	2
   843  005C10  04                 	db	4
   844  005C11  02                 	db	2
   845  005C12  3C                 	db	60
   846  005C13  26                 	db	38
   847  005C14  23                 	db	35
   848  005C15  26                 	db	38
   849  005C16  3C                 	db	60
   850  005C17  1E                 	db	30
   851  005C18  A1                 	db	161
   852  005C19  A1                 	db	161
   853  005C1A  61                 	db	97
   854  005C1B  12                 	db	18
   855  005C1C  3A                 	db	58
   856  005C1D  40                 	db	64
   857  005C1E  40                 	db	64
   858  005C1F  20                 	db	32
   859  005C20  7A                 	db	122
   860  005C21  38                 	db	56
   861  005C22  54                 	db	84
   862  005C23  54                 	db	84
   863  005C24  55                 	db	85
   864  005C25  59                 	db	89
   865  005C26  21                 	db	33
   866  005C27  55                 	db	85
   867  005C28  55                 	db	85
   868  005C29  79                 	db	121
   869  005C2A  41                 	db	65
   870  005C2B  22                 	db	34
   871  005C2C  54                 	db	84
   872  005C2D  54                 	db	84
   873  005C2E  78                 	db	120
   874  005C2F  42                 	db	66
   875  005C30  21                 	db	33
   876  005C31  55                 	db	85
   877  005C32  54                 	db	84
   878  005C33  78                 	db	120
   879  005C34  40                 	db	64
   880  005C35  20                 	db	32
   881  005C36  54                 	db	84
   882  005C37  55                 	db	85
   883  005C38  79                 	db	121
   884  005C39  40                 	db	64
   885  005C3A  0C                 	db	12
   886  005C3B  1E                 	db	30
   887  005C3C  52                 	db	82
   888  005C3D  72                 	db	114
   889  005C3E  12                 	db	18
   890  005C3F  39                 	db	57
   891  005C40  55                 	db	85
   892  005C41  55                 	db	85
   893  005C42  55                 	db	85
   894  005C43  59                 	db	89
   895  005C44  39                 	db	57
   896  005C45  54                 	db	84
   897  005C46  54                 	db	84
   898  005C47  54                 	db	84
   899  005C48  59                 	db	89
   900  005C49  39                 	db	57
   901  005C4A  55                 	db	85
   902  005C4B  54                 	db	84
   903  005C4C  54                 	db	84
   904  005C4D  58                 	db	88
   905  005C4E  00                 	db	0
   906  005C4F  00                 	db	0
   907  005C50  45                 	db	69
   908  005C51  7C                 	db	124
   909  005C52  41                 	db	65
   910  005C53  00                 	db	0
   911  005C54  02                 	db	2
   912  005C55  45                 	db	69
   913  005C56  7D                 	db	125
   914  005C57  42                 	db	66
   915  005C58  00                 	db	0
   916  005C59  01                 	db	1
   917  005C5A  45                 	db	69
   918  005C5B  7C                 	db	124
   919  005C5C  40                 	db	64
   920  005C5D  7D                 	db	125
   921  005C5E  12                 	db	18
   922  005C5F  11                 	db	17
   923  005C60  12                 	db	18
   924  005C61  7D                 	db	125
   925  005C62  F0                 	db	240
   926  005C63  28                 	db	40
   927  005C64  25                 	db	37
   928  005C65  28                 	db	40
   929  005C66  F0                 	db	240
   930  005C67  7C                 	db	124
   931  005C68  54                 	db	84
   932  005C69  55                 	db	85
   933  005C6A  45                 	db	69
   934  005C6B  00                 	db	0
   935  005C6C  20                 	db	32
   936  005C6D  54                 	db	84
   937  005C6E  54                 	db	84
   938  005C6F  7C                 	db	124
   939  005C70  54                 	db	84
   940  005C71  7C                 	db	124
   941  005C72  0A                 	db	10
   942  005C73  09                 	db	9
   943  005C74  7F                 	db	127
   944  005C75  49                 	db	73
   945  005C76  32                 	db	50
   946  005C77  49                 	db	73
   947  005C78  49                 	db	73
   948  005C79  49                 	db	73
   949  005C7A  32                 	db	50
   950  005C7B  3A                 	db	58
   951  005C7C  44                 	db	68
   952  005C7D  44                 	db	68
   953  005C7E  44                 	db	68
   954  005C7F  3A                 	db	58
   955  005C80  32                 	db	50
   956  005C81  4A                 	db	74
   957  005C82  48                 	db	72
   958  005C83  48                 	db	72
   959  005C84  30                 	db	48
   960  005C85  3A                 	db	58
   961  005C86  41                 	db	65
   962  005C87  41                 	db	65
   963  005C88  21                 	db	33
   964  005C89  7A                 	db	122
   965  005C8A  3A                 	db	58
   966  005C8B  42                 	db	66
   967  005C8C  40                 	db	64
   968  005C8D  20                 	db	32
   969  005C8E  78                 	db	120
   970  005C8F  00                 	db	0
   971  005C90  9D                 	db	157
   972  005C91  A0                 	db	160
   973  005C92  A0                 	db	160
   974  005C93  7D                 	db	125
   975  005C94  3D                 	db	61
   976  005C95  42                 	db	66
   977  005C96  42                 	db	66
   978  005C97  42                 	db	66
   979  005C98  3D                 	db	61
   980  005C99  3D                 	db	61
   981  005C9A  40                 	db	64
   982  005C9B  40                 	db	64
   983  005C9C  40                 	db	64
   984  005C9D  3D                 	db	61
   985  005C9E  3C                 	db	60
   986  005C9F  24                 	db	36
   987  005CA0  FF                 	db	255
   988  005CA1  24                 	db	36
   989  005CA2  24                 	db	36
   990  005CA3  48                 	db	72
   991  005CA4  7E                 	db	126
   992  005CA5  49                 	db	73
   993  005CA6  43                 	db	67
   994  005CA7  66                 	db	102
   995  005CA8  2B                 	db	43
   996  005CA9  2F                 	db	47
   997  005CAA  FC                 	db	252
   998  005CAB  2F                 	db	47
   999  005CAC  2B                 	db	43
  1000  005CAD  FF                 	db	255
  1001  005CAE  09                 	db	9
  1002  005CAF  29                 	db	41
  1003  005CB0  F6                 	db	246
  1004  005CB1  20                 	db	32
  1005  005CB2  C0                 	db	192
  1006  005CB3  88                 	db	136
  1007  005CB4  7E                 	db	126
  1008  005CB5  09                 	db	9
  1009  005CB6  03                 	db	3
  1010  005CB7  20                 	db	32
  1011  005CB8  54                 	db	84
  1012  005CB9  54                 	db	84
  1013  005CBA  79                 	db	121
  1014  005CBB  41                 	db	65
  1015  005CBC  00                 	db	0
  1016  005CBD  00                 	db	0
  1017  005CBE  44                 	db	68
  1018  005CBF  7D                 	db	125
  1019  005CC0  41                 	db	65
  1020  005CC1  30                 	db	48
  1021  005CC2  48                 	db	72
  1022  005CC3  48                 	db	72
  1023  005CC4  4A                 	db	74
  1024  005CC5  32                 	db	50
  1025  005CC6  38                 	db	56
  1026  005CC7  40                 	db	64
  1027  005CC8  40                 	db	64
  1028  005CC9  22                 	db	34
  1029  005CCA  7A                 	db	122
  1030  005CCB  00                 	db	0
  1031  005CCC  7A                 	db	122
  1032  005CCD  0A                 	db	10
  1033  005CCE  0A                 	db	10
  1034  005CCF  72                 	db	114
  1035  005CD0  7D                 	db	125
  1036  005CD1  0D                 	db	13
  1037  005CD2  19                 	db	25
  1038  005CD3  31                 	db	49
  1039  005CD4  7D                 	db	125
  1040  005CD5  26                 	db	38
  1041  005CD6  29                 	db	41
  1042  005CD7  29                 	db	41
  1043  005CD8  2F                 	db	47
  1044  005CD9  28                 	db	40
  1045  005CDA  26                 	db	38
  1046  005CDB  29                 	db	41
  1047  005CDC  29                 	db	41
  1048  005CDD  29                 	db	41
  1049  005CDE  26                 	db	38
  1050  005CDF  30                 	db	48
  1051  005CE0  48                 	db	72
  1052  005CE1  4D                 	db	77
  1053  005CE2  40                 	db	64
  1054  005CE3  20                 	db	32
  1055  005CE4  38                 	db	56
  1056  005CE5  08                 	db	8
  1057  005CE6  08                 	db	8
  1058  005CE7  08                 	db	8
  1059  005CE8  08                 	db	8
  1060  005CE9  08                 	db	8
  1061  005CEA  08                 	db	8
  1062  005CEB  08                 	db	8
  1063  005CEC  08                 	db	8
  1064  005CED  38                 	db	56
  1065  005CEE  2F                 	db	47
  1066  005CEF  10                 	db	16
  1067  005CF0  C8                 	db	200
  1068  005CF1  AC                 	db	172
  1069  005CF2  BA                 	db	186
  1070  005CF3  2F                 	db	47
  1071  005CF4  10                 	db	16
  1072  005CF5  28                 	db	40
  1073  005CF6  34                 	db	52
  1074  005CF7  FA                 	db	250
  1075  005CF8  00                 	db	0
  1076  005CF9  00                 	db	0
  1077  005CFA  7B                 	db	123
  1078  005CFB  00                 	db	0
  1079  005CFC  00                 	db	0
  1080  005CFD  08                 	db	8
  1081  005CFE  14                 	db	20
  1082  005CFF  2A                 	db	42
  1083  005D00  14                 	db	20
  1084  005D01  22                 	db	34
  1085  005D02  22                 	db	34
  1086  005D03  14                 	db	20
  1087  005D04  2A                 	db	42
  1088  005D05  14                 	db	20
  1089  005D06  08                 	db	8
  1090  005D07  55                 	db	85
  1091  005D08  00                 	db	0
  1092  005D09  55                 	db	85
  1093  005D0A  00                 	db	0
  1094  005D0B  55                 	db	85
  1095  005D0C  AA                 	db	170
  1096  005D0D  55                 	db	85
  1097  005D0E  AA                 	db	170
  1098  005D0F  55                 	db	85
  1099  005D10  AA                 	db	170
  1100  005D11  FF                 	db	255
  1101  005D12  55                 	db	85
  1102  005D13  FF                 	db	255
  1103  005D14  55                 	db	85
  1104  005D15  FF                 	db	255
  1105  005D16  00                 	db	0
  1106  005D17  00                 	db	0
  1107  005D18  00                 	db	0
  1108  005D19  FF                 	db	255
  1109  005D1A  00                 	db	0
  1110  005D1B  10                 	db	16
  1111  005D1C  10                 	db	16
  1112  005D1D  10                 	db	16
  1113  005D1E  FF                 	db	255
  1114  005D1F  00                 	db	0
  1115  005D20  14                 	db	20
  1116  005D21  14                 	db	20
  1117  005D22  14                 	db	20
  1118  005D23  FF                 	db	255
  1119  005D24  00                 	db	0
  1120  005D25  10                 	db	16
  1121  005D26  10                 	db	16
  1122  005D27  FF                 	db	255
  1123  005D28  00                 	db	0
  1124  005D29  FF                 	db	255
  1125  005D2A  10                 	db	16
  1126  005D2B  10                 	db	16
  1127  005D2C  F0                 	db	240
  1128  005D2D  10                 	db	16
  1129  005D2E  F0                 	db	240
  1130  005D2F  14                 	db	20
  1131  005D30  14                 	db	20
  1132  005D31  14                 	db	20
  1133  005D32  FC                 	db	252
  1134  005D33  00                 	db	0
  1135  005D34  14                 	db	20
  1136  005D35  14                 	db	20
  1137  005D36  F7                 	db	247
  1138  005D37  00                 	db	0
  1139  005D38  FF                 	db	255
  1140  005D39  00                 	db	0
  1141  005D3A  00                 	db	0
  1142  005D3B  FF                 	db	255
  1143  005D3C  00                 	db	0
  1144  005D3D  FF                 	db	255
  1145  005D3E  14                 	db	20
  1146  005D3F  14                 	db	20
  1147  005D40  F4                 	db	244
  1148  005D41  04                 	db	4
  1149  005D42  FC                 	db	252
  1150  005D43  14                 	db	20
  1151  005D44  14                 	db	20
  1152  005D45  17                 	db	23
  1153  005D46  10                 	db	16
  1154  005D47  1F                 	db	31
  1155  005D48  10                 	db	16
  1156  005D49  10                 	db	16
  1157  005D4A  1F                 	db	31
  1158  005D4B  10                 	db	16
  1159  005D4C  1F                 	db	31
  1160  005D4D  14                 	db	20
  1161  005D4E  14                 	db	20
  1162  005D4F  14                 	db	20
  1163  005D50  1F                 	db	31
  1164  005D51  00                 	db	0
  1165  005D52  10                 	db	16
  1166  005D53  10                 	db	16
  1167  005D54  10                 	db	16
  1168  005D55  F0                 	db	240
  1169  005D56  00                 	db	0
  1170  005D57  00                 	db	0
  1171  005D58  00                 	db	0
  1172  005D59  00                 	db	0
  1173  005D5A  1F                 	db	31
  1174  005D5B  10                 	db	16
  1175  005D5C  10                 	db	16
  1176  005D5D  10                 	db	16
  1177  005D5E  10                 	db	16
  1178  005D5F  1F                 	db	31
  1179  005D60  10                 	db	16
  1180  005D61  10                 	db	16
  1181  005D62  10                 	db	16
  1182  005D63  10                 	db	16
  1183  005D64  F0                 	db	240
  1184  005D65  10                 	db	16
  1185  005D66  00                 	db	0
  1186  005D67  00                 	db	0
  1187  005D68  00                 	db	0
  1188  005D69  FF                 	db	255
  1189  005D6A  10                 	db	16
  1190  005D6B  10                 	db	16
  1191  005D6C  10                 	db	16
  1192  005D6D  10                 	db	16
  1193  005D6E  10                 	db	16
  1194  005D6F  10                 	db	16
  1195  005D70  10                 	db	16
  1196  005D71  10                 	db	16
  1197  005D72  10                 	db	16
  1198  005D73  FF                 	db	255
  1199  005D74  10                 	db	16
  1200  005D75  00                 	db	0
  1201  005D76  00                 	db	0
  1202  005D77  00                 	db	0
  1203  005D78  FF                 	db	255
  1204  005D79  14                 	db	20
  1205  005D7A  00                 	db	0
  1206  005D7B  00                 	db	0
  1207  005D7C  FF                 	db	255
  1208  005D7D  00                 	db	0
  1209  005D7E  FF                 	db	255
  1210  005D7F  00                 	db	0
  1211  005D80  00                 	db	0
  1212  005D81  1F                 	db	31
  1213  005D82  10                 	db	16
  1214  005D83  17                 	db	23
  1215  005D84  00                 	db	0
  1216  005D85  00                 	db	0
  1217  005D86  FC                 	db	252
  1218  005D87  04                 	db	4
  1219  005D88  F4                 	db	244
  1220  005D89  14                 	db	20
  1221  005D8A  14                 	db	20
  1222  005D8B  17                 	db	23
  1223  005D8C  10                 	db	16
  1224  005D8D  17                 	db	23
  1225  005D8E  14                 	db	20
  1226  005D8F  14                 	db	20
  1227  005D90  F4                 	db	244
  1228  005D91  04                 	db	4
  1229  005D92  F4                 	db	244
  1230  005D93  00                 	db	0
  1231  005D94  00                 	db	0
  1232  005D95  FF                 	db	255
  1233  005D96  00                 	db	0
  1234  005D97  F7                 	db	247
  1235  005D98  14                 	db	20
  1236  005D99  14                 	db	20
  1237  005D9A  14                 	db	20
  1238  005D9B  14                 	db	20
  1239  005D9C  14                 	db	20
  1240  005D9D  14                 	db	20
  1241  005D9E  14                 	db	20
  1242  005D9F  F7                 	db	247
  1243  005DA0  00                 	db	0
  1244  005DA1  F7                 	db	247
  1245  005DA2  14                 	db	20
  1246  005DA3  14                 	db	20
  1247  005DA4  14                 	db	20
  1248  005DA5  17                 	db	23
  1249  005DA6  14                 	db	20
  1250  005DA7  10                 	db	16
  1251  005DA8  10                 	db	16
  1252  005DA9  1F                 	db	31
  1253  005DAA  10                 	db	16
  1254  005DAB  1F                 	db	31
  1255  005DAC  14                 	db	20
  1256  005DAD  14                 	db	20
  1257  005DAE  14                 	db	20
  1258  005DAF  F4                 	db	244
  1259  005DB0  14                 	db	20
  1260  005DB1  10                 	db	16
  1261  005DB2  10                 	db	16
  1262  005DB3  F0                 	db	240
  1263  005DB4  10                 	db	16
  1264  005DB5  F0                 	db	240
  1265  005DB6  00                 	db	0
  1266  005DB7  00                 	db	0
  1267  005DB8  1F                 	db	31
  1268  005DB9  10                 	db	16
  1269  005DBA  1F                 	db	31
  1270  005DBB  00                 	db	0
  1271  005DBC  00                 	db	0
  1272  005DBD  00                 	db	0
  1273  005DBE  1F                 	db	31
  1274  005DBF  14                 	db	20
  1275  005DC0  00                 	db	0
  1276  005DC1  00                 	db	0
  1277  005DC2  00                 	db	0
  1278  005DC3  FC                 	db	252
  1279  005DC4  14                 	db	20
  1280  005DC5  00                 	db	0
  1281  005DC6  00                 	db	0
  1282  005DC7  F0                 	db	240
  1283  005DC8  10                 	db	16
  1284  005DC9  F0                 	db	240
  1285  005DCA  10                 	db	16
  1286  005DCB  10                 	db	16
  1287  005DCC  FF                 	db	255
  1288  005DCD  10                 	db	16
  1289  005DCE  FF                 	db	255
  1290  005DCF  14                 	db	20
  1291  005DD0  14                 	db	20
  1292  005DD1  14                 	db	20
  1293  005DD2  FF                 	db	255
  1294  005DD3  14                 	db	20
  1295  005DD4  10                 	db	16
  1296  005DD5  10                 	db	16
  1297  005DD6  10                 	db	16
  1298  005DD7  1F                 	db	31
  1299  005DD8  00                 	db	0
  1300  005DD9  00                 	db	0
  1301  005DDA  00                 	db	0
  1302  005DDB  00                 	db	0
  1303  005DDC  F0                 	db	240
  1304  005DDD  10                 	db	16
  1305  005DDE  FF                 	db	255
  1306  005DDF  FF                 	db	255
  1307  005DE0  FF                 	db	255
  1308  005DE1  FF                 	db	255
  1309  005DE2  FF                 	db	255
  1310  005DE3  F0                 	db	240
  1311  005DE4  F0                 	db	240
  1312  005DE5  F0                 	db	240
  1313  005DE6  F0                 	db	240
  1314  005DE7  F0                 	db	240
  1315  005DE8  FF                 	db	255
  1316  005DE9  FF                 	db	255
  1317  005DEA  FF                 	db	255
  1318  005DEB  00                 	db	0
  1319  005DEC  00                 	db	0
  1320  005DED  00                 	db	0
  1321  005DEE  00                 	db	0
  1322  005DEF  00                 	db	0
  1323  005DF0  FF                 	db	255
  1324  005DF1  FF                 	db	255
  1325  005DF2  0F                 	db	15
  1326  005DF3  0F                 	db	15
  1327  005DF4  0F                 	db	15
  1328  005DF5  0F                 	db	15
  1329  005DF6  0F                 	db	15
  1330  005DF7  38                 	db	56
  1331  005DF8  44                 	db	68
  1332  005DF9  44                 	db	68
  1333  005DFA  38                 	db	56
  1334  005DFB  44                 	db	68
  1335  005DFC  FC                 	db	252
  1336  005DFD  4A                 	db	74
  1337  005DFE  4A                 	db	74
  1338  005DFF  4A                 	db	74
  1339  005E00  34                 	db	52
  1340  005E01  7E                 	db	126
  1341  005E02  02                 	db	2
  1342  005E03  02                 	db	2
  1343  005E04  06                 	db	6
  1344  005E05  06                 	db	6
  1345  005E06  02                 	db	2
  1346  005E07  7E                 	db	126
  1347  005E08  02                 	db	2
  1348  005E09  7E                 	db	126
  1349  005E0A  02                 	db	2
  1350  005E0B  63                 	db	99
  1351  005E0C  55                 	db	85
  1352  005E0D  49                 	db	73
  1353  005E0E  41                 	db	65
  1354  005E0F  63                 	db	99
  1355  005E10  38                 	db	56
  1356  005E11  44                 	db	68
  1357  005E12  44                 	db	68
  1358  005E13  3C                 	db	60
  1359  005E14  04                 	db	4
  1360  005E15  40                 	db	64
  1361  005E16  7E                 	db	126
  1362  005E17  20                 	db	32
  1363  005E18  1E                 	db	30
  1364  005E19  20                 	db	32
  1365  005E1A  06                 	db	6
  1366  005E1B  02                 	db	2
  1367  005E1C  7E                 	db	126
  1368  005E1D  02                 	db	2
  1369  005E1E  02                 	db	2
  1370  005E1F  99                 	db	153
  1371  005E20  A5                 	db	165
  1372  005E21  E7                 	db	231
  1373  005E22  A5                 	db	165
  1374  005E23  99                 	db	153
  1375  005E24  1C                 	db	28
  1376  005E25  2A                 	db	42
  1377  005E26  49                 	db	73
  1378  005E27  2A                 	db	42
  1379  005E28  1C                 	db	28
  1380  005E29  4C                 	db	76
  1381  005E2A  72                 	db	114
  1382  005E2B  01                 	db	1
  1383  005E2C  72                 	db	114
  1384  005E2D  4C                 	db	76
  1385  005E2E  30                 	db	48
  1386  005E2F  4A                 	db	74
  1387  005E30  4D                 	db	77
  1388  005E31  4D                 	db	77
  1389  005E32  30                 	db	48
  1390  005E33  30                 	db	48
  1391  005E34  48                 	db	72
  1392  005E35  78                 	db	120
  1393  005E36  48                 	db	72
  1394  005E37  30                 	db	48
  1395  005E38  BC                 	db	188
  1396  005E39  62                 	db	98
  1397  005E3A  5A                 	db	90
  1398  005E3B  46                 	db	70
  1399  005E3C  3D                 	db	61
  1400  005E3D  3E                 	db	62
  1401  005E3E  49                 	db	73
  1402  005E3F  49                 	db	73
  1403  005E40  49                 	db	73
  1404  005E41  00                 	db	0
  1405  005E42  7E                 	db	126
  1406  005E43  01                 	db	1
  1407  005E44  01                 	db	1
  1408  005E45  01                 	db	1
  1409  005E46  7E                 	db	126
  1410  005E47  2A                 	db	42
  1411  005E48  2A                 	db	42
  1412  005E49  2A                 	db	42
  1413  005E4A  2A                 	db	42
  1414  005E4B  2A                 	db	42
  1415  005E4C  44                 	db	68
  1416  005E4D  44                 	db	68
  1417  005E4E  5F                 	db	95
  1418  005E4F  44                 	db	68
  1419  005E50  44                 	db	68
  1420  005E51  40                 	db	64
  1421  005E52  51                 	db	81
  1422  005E53  4A                 	db	74
  1423  005E54  44                 	db	68
  1424  005E55  40                 	db	64
  1425  005E56  40                 	db	64
  1426  005E57  44                 	db	68
  1427  005E58  4A                 	db	74
  1428  005E59  51                 	db	81
  1429  005E5A  40                 	db	64
  1430  005E5B  00                 	db	0
  1431  005E5C  00                 	db	0
  1432  005E5D  FF                 	db	255
  1433  005E5E  01                 	db	1
  1434  005E5F  03                 	db	3
  1435  005E60  E0                 	db	224
  1436  005E61  80                 	db	128
  1437  005E62  FF                 	db	255
  1438  005E63  00                 	db	0
  1439  005E64  00                 	db	0
  1440  005E65  08                 	db	8
  1441  005E66  08                 	db	8
  1442  005E67  6B                 	db	107
  1443  005E68  6B                 	db	107
  1444  005E69  08                 	db	8
  1445  005E6A  36                 	db	54
  1446  005E6B  12                 	db	18
  1447  005E6C  36                 	db	54
  1448  005E6D  24                 	db	36
  1449  005E6E  36                 	db	54
  1450  005E6F  06                 	db	6
  1451  005E70  0F                 	db	15
  1452  005E71  09                 	db	9
  1453  005E72  0F                 	db	15
  1454  005E73  06                 	db	6
  1455  005E74  00                 	db	0
  1456  005E75  00                 	db	0
  1457  005E76  18                 	db	24
  1458  005E77  18                 	db	24
  1459  005E78  00                 	db	0
  1460  005E79  00                 	db	0
  1461  005E7A  00                 	db	0
  1462  005E7B  10                 	db	16
  1463  005E7C  10                 	db	16
  1464  005E7D  00                 	db	0
  1465  005E7E  30                 	db	48
  1466  005E7F  40                 	db	64
  1467  005E80  FF                 	db	255
  1468  005E81  01                 	db	1
  1469  005E82  01                 	db	1
  1470  005E83  00                 	db	0
  1471  005E84  1F                 	db	31
  1472  005E85  01                 	db	1
  1473  005E86  01                 	db	1
  1474  005E87  1E                 	db	30
  1475  005E88  00                 	db	0
  1476  005E89  19                 	db	25
  1477  005E8A  1D                 	db	29
  1478  005E8B  17                 	db	23
  1479  005E8C  12                 	db	18
  1480  005E8D  00                 	db	0
  1481  005E8E  3C                 	db	60
  1482  005E8F  3C                 	db	60
  1483  005E90  3C                 	db	60
  1484  005E91  3C                 	db	60
  1485  005E92  00                 	db	0
  1486  005E93  00                 	db	0
  1487  005E94  00                 	db	0
  1488  005E95  00                 	db	0
  1489  005E96  00                 	db	0
  1490  005E97                     __end_of_TFT_Font:
  1491                           	opt callstack 0
  1492  005E97                     _TFT_Init_Sequence:
  1493                           	opt callstack 0
  1494  005E97  0702               	dw	1794
  1495  005E99  3008               	dw	12296
  1496  005E9B  0705               	dw	1797
  1497  005E9D  0036               	dw	54
  1498  005E9F  070B               	dw	1803
  1499  005EA1  1213               	dw	4627
  1500  005EA3  0001               	dw	1
  1501  005EA5  0100               	dw	256
  1502  005EA7  0002               	dw	2
  1503  005EA9  0100               	dw	256
  1504  005EAB  0003               	dw	3
  1505  005EAD  1030               	dw	4144
  1506  005EAF  0008               	dw	8
  1507  005EB1  0202               	dw	514
  1508  005EB3  0009               	dw	9
  1509  005EB5  0000               	dw	0
  1510  005EB7  000C               	dw	12
  1511  005EB9  0000               	dw	0
  1512  005EBB  000F               	dw	15
  1513  005EBD  0000               	dw	0
  1514  005EBF  0100               	dw	256
  1515  005EC1  0000               	dw	0
  1516  005EC3  0102               	dw	258
  1517  005EC5  0000               	dw	0
  1518  005EC7  0103               	dw	259
  1519  005EC9  0000               	dw	0
  1520  005ECB  FFFF               	dw	65535
  1521  005ECD  0001               	dw	1
  1522  005ECF  0100               	dw	256
  1523  005ED1  1190               	dw	4496
  1524  005ED3  0101               	dw	257
  1525  005ED5  0227               	dw	551
  1526  005ED7  FFFF               	dw	65535
  1527  005ED9  0001               	dw	1
  1528  005EDB  0102               	dw	258
  1529  005EDD  01BD               	dw	445
  1530  005EDF  FFFF               	dw	65535
  1531  005EE1  0001               	dw	1
  1532  005EE3  0103               	dw	259
  1533  005EE5  2D00               	dw	11520
  1534  005EE7  0281               	dw	641
  1535  005EE9  000E               	dw	14
  1536  005EEB  FFFF               	dw	65535
  1537  005EED  0001               	dw	1
  1538  005EEF  0200               	dw	512
  1539  005EF1  0000               	dw	0
  1540  005EF3  0201               	dw	513
  1541  005EF5  0000               	dw	0
  1542  005EF7  0300               	dw	768
  1543  005EF9  0000               	dw	0
  1544  005EFB  0301               	dw	769
  1545  005EFD  0707               	dw	1799
  1546  005EFF  0302               	dw	770
  1547  005F01  0606               	dw	1542
  1548  005F03  0305               	dw	773
  1549  005F05  0000               	dw	0
  1550  005F07  0306               	dw	774
  1551  005F09  0D00               	dw	3328
  1552  005F0B  0307               	dw	775
  1553  005F0D  0706               	dw	1798
  1554  005F0F  0308               	dw	776
  1555  005F11  0005               	dw	5
  1556  005F13  0309               	dw	777
  1557  005F15  0007               	dw	7
  1558  005F17  030C               	dw	780
  1559  005F19  0000               	dw	0
  1560  005F1B  030D               	dw	781
  1561  005F1D  000A               	dw	10
  1562  005F1F  0210               	dw	528
  1563  005F21  0000               	dw	0
  1564  005F23  0211               	dw	529
  1565  005F25  00EF               	dw	239
  1566  005F27  0212               	dw	530
  1567  005F29  0000               	dw	0
  1568  005F2B  0213               	dw	531
  1569  005F2D  018F               	dw	399
  1570  005F2F  0400               	dw	1024
  1571  005F31  3100               	dw	12544
  1572  005F33  0401               	dw	1025
  1573  005F35  0001               	dw	1
  1574  005F37  0404               	dw	1028
  1575  005F39  0000               	dw	0
  1576  005F3B  0500               	dw	1280
  1577  005F3D  0000               	dw	0
  1578  005F3F  0501               	dw	1281
  1579  005F41  0000               	dw	0
  1580  005F43  0502               	dw	1282
  1581  005F45  0000               	dw	0
  1582  005F47  0503               	dw	1283
  1583  005F49  0000               	dw	0
  1584  005F4B  0504               	dw	1284
  1585  005F4D  0000               	dw	0
  1586  005F4F  0505               	dw	1285
  1587  005F51  0000               	dw	0
  1588  005F53  0010               	dw	16
  1589  005F55  0010               	dw	16
  1590  005F57  0011               	dw	17
  1591  005F59  0600               	dw	1536
  1592  005F5B  0020               	dw	32
  1593  005F5D  0002               	dw	2
  1594  005F5F  0007               	dw	7
  1595  005F61  0173               	dw	371
  1596  005F63                     __end_of_TFT_Init_Sequence:
  1597                           	opt callstack 0
  1598  005F63                     _ECG_ICON_HEART:
  1599                           	opt callstack 0
  1600  005F63  14                 	db	20
  1601  005F64  14                 	db	20
  1602  005F65  00                 	db	0
  1603  005F66  00                 	db	0
  1604  005F67  00                 	db	0
  1605  005F68  00                 	db	0
  1606  005F69  00                 	db	0
  1607  005F6A  00                 	db	0
  1608  005F6B  F8                 	db	248
  1609  005F6C  F0                 	db	240
  1610  005F6D  01                 	db	1
  1611  005F6E  FC                 	db	252
  1612  005F6F  F9                 	db	249
  1613  005F70  03                 	db	3
  1614  005F71  FC                 	db	252
  1615  005F72  FF                 	db	255
  1616  005F73  03                 	db	3
  1617  005F74  FE                 	db	254
  1618  005F75  FF                 	db	255
  1619  005F76  07                 	db	7
  1620  005F77  FE                 	db	254
  1621  005F78  FF                 	db	255
  1622  005F79  07                 	db	7
  1623  005F7A  FE                 	db	254
  1624  005F7B  FF                 	db	255
  1625  005F7C  07                 	db	7
  1626  005F7D  FE                 	db	254
  1627  005F7E  FF                 	db	255
  1628  005F7F  07                 	db	7
  1629  005F80  FC                 	db	252
  1630  005F81  FF                 	db	255
  1631  005F82  03                 	db	3
  1632  005F83  FC                 	db	252
  1633  005F84  FF                 	db	255
  1634  005F85  03                 	db	3
  1635  005F86  F8                 	db	248
  1636  005F87  FF                 	db	255
  1637  005F88  01                 	db	1
  1638  005F89  F0                 	db	240
  1639  005F8A  FF                 	db	255
  1640  005F8B  00                 	db	0
  1641  005F8C  E0                 	db	224
  1642  005F8D  7F                 	db	127
  1643  005F8E  00                 	db	0
  1644  005F8F  C0                 	db	192
  1645  005F90  3F                 	db	63
  1646  005F91  00                 	db	0
  1647  005F92  80                 	db	128
  1648  005F93  1F                 	db	31
  1649  005F94  00                 	db	0
  1650  005F95  00                 	db	0
  1651  005F96  0F                 	db	15
  1652  005F97  00                 	db	0
  1653  005F98  00                 	db	0
  1654  005F99  06                 	db	6
  1655  005F9A  00                 	db	0
  1656  005F9B  00                 	db	0
  1657  005F9C  00                 	db	0
  1658  005F9D  00                 	db	0
  1659  005F9E  00                 	db	0
  1660  005F9F  00                 	db	0
  1661  005FA0  00                 	db	0
  1662  005FA1                     __end_of_ECG_ICON_HEART:
  1663                           	opt callstack 0
  1664  0000                     _RCREG	set	4014
  1665  0000                     _TXREG	set	4013
  1666  0000                     _SPBRG	set	4015
  1667  0000                     _SPBRGH	set	4016
  1668  0000                     _BAUDCONbits	set	4024
  1669  0000                     _RCSTAbits	set	4011
  1670  0000                     _TXSTAbits	set	4012
  1671  0000                     _ADRESL	set	4035
  1672  0000                     _ADRESH	set	4036
  1673  0000                     _PORTAbits	set	3968
  1674  0000                     _PORTB	set	3969
  1675  0000                     _PORTCbits	set	3970
  1676  0000                     _TMR3L	set	4018
  1677  0000                     _TMR3H	set	4019
  1678  0000                     _T3CONbits	set	4017
  1679  0000                     _ADCON2bits	set	4032
  1680  0000                     _ADCON1bits	set	4033
  1681  0000                     _ADCON0bits	set	4034
  1682  0000                     _LATC	set	3979
  1683  0000                     _TRISC	set	3988
  1684  0000                     _LATB	set	3978
  1685  0000                     _TRISB	set	3987
  1686  0000                     _LATA	set	3977
  1687  0000                     _TRISA	set	3986
  1688  0000                     _UCFGbits	set	3951
  1689  0000                     _UCONbits	set	3949
  1690  0000                     _OSCTUNEbits	set	3995
  1691  0000                     _OSCCONbits	set	4051
  1692  0000                     _CREN	set	32092
  1693  0000                     _OERR	set	32089
  1694  0000                     _TXIF	set	31988
  1695  0000                     _GO_nDONE	set	32273
  1696  0000                     _RCIF	set	31989
  1697  0000                     _RCIE	set	31981
  1698  0000                     _TMR3IF	set	32009
  1699  0000                     _GIE	set	32663
  1700  0000                     _PEIE	set	32662
  1701  0000                     _TMR3IE	set	32001
  1702  0000                     _RBPU	set	32655
  1703  005FA1                     STR_7:
  1704                           
  1705                           ; BSR set to: 1
  1706  005FA1  2A                 	db	42
  1707  005FA2  2A                 	db	42
  1708  005FA3  2A                 	db	42
  1709  005FA4  20                 	db	32
  1710  005FA5  43                 	db	67	;'C'
  1711  005FA6  6F                 	db	111	;'o'
  1712  005FA7  6C                 	db	108	;'l'
  1713  005FA8  6C                 	db	108	;'l'
  1714  005FA9  65                 	db	101	;'e'
  1715  005FAA  67                 	db	103	;'g'
  1716  005FAB  61                 	db	97	;'a'
  1717  005FAC  72                 	db	114	;'r'
  1718  005FAD  65                 	db	101	;'e'
  1719  005FAE  20                 	db	32
  1720  005FAF  65                 	db	101	;'e'
  1721  005FB0  6C                 	db	108	;'l'
  1722  005FB1  65                 	db	101	;'e'
  1723  005FB2  74                 	db	116	;'t'
  1724  005FB3  74                 	db	116	;'t'
  1725  005FB4  72                 	db	114	;'r'
  1726  005FB5  6F                 	db	111	;'o'
  1727  005FB6  64                 	db	100	;'d'
  1728  005FB7  69                 	db	105	;'i'
  1729  005FB8  20                 	db	32
  1730  005FB9  2A                 	db	42
  1731  005FBA  2A                 	db	42
  1732  005FBB  2A                 	db	42
  1733  005FBC  00                 	db	0
  1734  005FBD                     
  1735                           ; BSR set to: 1
  1736  005FBD  41                 	db	65	;'A'
  1737  005FBE  54                 	db	84	;'T'
  1738  005FBF  2B                 	db	43
  1739  005FC0  49                 	db	73	;'I'
  1740  005FC1  50                 	db	80	;'P'
  1741  005FC2  52                 	db	82	;'R'
  1742  005FC3  3D                 	db	61	;'='
  1743  005FC4  31                 	db	49	;'1'
  1744  005FC5  31                 	db	49	;'1'
  1745  005FC6  35                 	db	53	;'5'
  1746  005FC7  32                 	db	50	;'2'
  1747  005FC8  30                 	db	48	;'0'
  1748  005FC9  30                 	db	48	;'0'
  1749  005FCA  0D                 	db	13
  1750  005FCB  00                 	db	0
  1751  005FCC  00                 	db	0
  1752  005FCD                     
  1753                           ; BSR set to: 1
  1754  005FCD  41                 	db	65	;'A'
  1755  005FCE  54                 	db	84	;'T'
  1756  005FCF  2B                 	db	43
  1757  005FD0  49                 	db	73	;'I'
  1758  005FD1  50                 	db	80	;'P'
  1759  005FD2  52                 	db	82	;'R'
  1760  005FD3  3D                 	db	61	;'='
  1761  005FD4  35                 	db	53	;'5'
  1762  005FD5  37                 	db	55	;'7'
  1763  005FD6  36                 	db	54	;'6'
  1764  005FD7  30                 	db	48	;'0'
  1765  005FD8  30                 	db	48	;'0'
  1766  005FD9  0D                 	db	13
  1767  005FDA  00                 	db	0
  1768  005FDB  00                 	db	0
  1769  005FDC                     
  1770                           ; BSR set to: 1
  1771  005FDC  41                 	db	65	;'A'
  1772  005FDD  54                 	db	84	;'T'
  1773  005FDE  2B                 	db	43
  1774  005FDF  49                 	db	73	;'I'
  1775  005FE0  50                 	db	80	;'P'
  1776  005FE1  52                 	db	82	;'R'
  1777  005FE2  3D                 	db	61	;'='
  1778  005FE3  39                 	db	57	;'9'
  1779  005FE4  36                 	db	54	;'6'
  1780  005FE5  30                 	db	48	;'0'
  1781  005FE6  30                 	db	48	;'0'
  1782  005FE7  0D                 	db	13
  1783  005FE8  00                 	db	0
  1784  005FE9  00                 	db	0
  1785  005FEA                     STR_6:
  1786                           
  1787                           ; BSR set to: 1
  1788  005FEA  46                 	db	70	;'F'
  1789  005FEB  72                 	db	114	;'r'
  1790  005FEC  65                 	db	101	;'e'
  1791  005FED  71                 	db	113	;'q'
  1792  005FEE  75                 	db	117	;'u'
  1793  005FEF  65                 	db	101	;'e'
  1794  005FF0  6E                 	db	110	;'n'
  1795  005FF1  7A                 	db	122	;'z'
  1796  005FF2  61                 	db	97	;'a'
  1797  005FF3  3A                 	db	58	;':'
  1798  005FF4  00                 	db	0
  1799  005FF5                     
  1800                           ; BSR set to: 1
  1801  005FF5  25                 	db	37
  1802  005FF6  33                 	db	51	;'3'
  1803  005FF7  64                 	db	100	;'d'
  1804  005FF8  00                 	db	0
  1805  005FF9                     STR_1:
  1806                           
  1807                           ; BSR set to: 1
  1808  005FF9  61                 	db	97	;'a'
  1809  005FFA  61                 	db	97	;'a'
  1810  005FFB  00                 	db	0
  1811  005FFC                     STR_2:
  1812                           
  1813                           ; BSR set to: 1
  1814  005FFC  62                 	db	98	;'b'
  1815  005FFD  62                 	db	98	;'b'
  1816  005FFE  00                 	db	0
  1817  0000                     
  1818                           ; #config settings
  1819  005FFF  00                 	db	0	; dummy byte at the end
  1820  0000                     
  1821                           	psect	cinit
  1822  0009CC                     __pcinit:
  1823                           	opt callstack 0
  1824  0009CC                     start_initialization:
  1825                           	opt callstack 0
  1826  0009CC                     __initialization:
  1827                           	opt callstack 0
  1828                           
  1829                           ; Initialize objects allocated to BANK1 (11 bytes)
  1830                           ; load TBLPTR registers with __pidataBANK1
  1831  0009CC  0EFC               	movlw	low __pidataBANK1
  1832  0009CE  6EF6               	movwf	tblptrl,c
  1833  0009D0  0E12               	movlw	high __pidataBANK1
  1834  0009D2  6EF7               	movwf	tblptrh,c
  1835  0009D4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1836  0009D6  6EF8               	movwf	tblptru,c
  1837  0009D8  EE01  F064         	lfsr	0,__pdataBANK1
  1838  0009DC  EE10 F00B          	lfsr	1,11
  1839  0009E0                     copy_data0:
  1840  0009E0  0009               	tblrd		*+
  1841  0009E2  CFF5 FFEE          	movff	tablat,postinc0
  1842  0009E6  50E5               	movf	postdec1,w,c
  1843  0009E8  50E1               	movf	fsr1l,w,c
  1844  0009EA  E1FA               	bnz	copy_data0
  1845                           
  1846                           ; Initialize objects allocated to BANK0 (62 bytes)
  1847                           ; load TBLPTR registers with __pidataBANK0
  1848  0009EC  0E08               	movlw	low __pidataBANK0
  1849  0009EE  6EF6               	movwf	tblptrl,c
  1850  0009F0  0E11               	movlw	high __pidataBANK0
  1851  0009F2  6EF7               	movwf	tblptrh,c
  1852  0009F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1853  0009F6  6EF8               	movwf	tblptru,c
  1854  0009F8  EE00  F0A0         	lfsr	0,__pdataBANK0
  1855  0009FC  EE10 F03E          	lfsr	1,62
  1856  000A00                     copy_data1:
  1857  000A00  0009               	tblrd		*+
  1858  000A02  CFF5 FFEE          	movff	tablat,postinc0
  1859  000A06  50E5               	movf	postdec1,w,c
  1860  000A08  50E1               	movf	fsr1l,w,c
  1861  000A0A  E1FA               	bnz	copy_data1
  1862                           
  1863                           ; Initialize objects allocated to COMRAM (6 bytes)
  1864                           ; load TBLPTR registers with __pidataCOMRAM
  1865  000A0C  0E07               	movlw	low __pidataCOMRAM
  1866  000A0E  6EF6               	movwf	tblptrl,c
  1867  000A10  0E13               	movlw	high __pidataCOMRAM
  1868  000A12  6EF7               	movwf	tblptrh,c
  1869  000A14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1870  000A16  6EF8               	movwf	tblptru,c
  1871  000A18  EE00  F055         	lfsr	0,__pdataCOMRAM
  1872  000A1C  EE10 F006          	lfsr	1,6
  1873  000A20                     copy_data2:
  1874  000A20  0009               	tblrd		*+
  1875  000A22  CFF5 FFEE          	movff	tablat,postinc0
  1876  000A26  50E5               	movf	postdec1,w,c
  1877  000A28  50E1               	movf	fsr1l,w,c
  1878  000A2A  E1FA               	bnz	copy_data2
  1879                           
  1880                           ; Clear objects allocated to BANK1 (100 bytes)
  1881  000A2C  EE01  F000         	lfsr	0,__pbssBANK1
  1882  000A30  0E64               	movlw	100
  1883  000A32                     clear_0:
  1884  000A32  6AEE               	clrf	postinc0,c
  1885  000A34  06E8               	decf	wreg,f,c
  1886  000A36  E1FD               	bnz	clear_0
  1887                           
  1888                           ; Clear objects allocated to BANK0 (34 bytes)
  1889  000A38  EE00  F0DE         	lfsr	0,__pbssBANK0
  1890  000A3C  0E22               	movlw	34
  1891  000A3E                     clear_1:
  1892  000A3E  6AEE               	clrf	postinc0,c
  1893  000A40  06E8               	decf	wreg,f,c
  1894  000A42  E1FD               	bnz	clear_1
  1895                           
  1896                           ; Clear objects allocated to COMRAM (7 bytes)
  1897  000A44  EE00  F04E         	lfsr	0,__pbssCOMRAM
  1898  000A48  0E07               	movlw	7
  1899  000A4A                     clear_2:
  1900  000A4A  6AEE               	clrf	postinc0,c
  1901  000A4C  06E8               	decf	wreg,f,c
  1902  000A4E  E1FD               	bnz	clear_2
  1903  000A50                     end_of_initialization:
  1904                           	opt callstack 0
  1905  000A50                     __end_of__initialization:
  1906                           	opt callstack 0
  1907  000A50  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1908  000A52  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1909  000A54  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1910  000A56  6EF8               	movwf	tblptru,c
  1911  000A58  0100               	movlb	0
  1912  000A5A  EFD9  F007         	goto	_main	;jump to C main() function
  1913                           
  1914                           	psect	bssCOMRAM
  1915  00004E                     __pbssCOMRAM:
  1916                           	opt callstack 0
  1917  00004E                     _ECG_HEARTRATE:
  1918                           	opt callstack 0
  1919  00004E                     	ds	4
  1920  000052                     _ECG_FLAGS:
  1921                           	opt callstack 0
  1922  000052                     	ds	2
  1923  000054                     _tmp3:
  1924                           	opt callstack 0
  1925  000054                     	ds	1
  1926                           
  1927                           	psect	dataCOMRAM
  1928  000055                     __pdataCOMRAM:
  1929                           	opt callstack 0
  1930  000055                     _Ecg_Y:
  1931                           	opt callstack 0
  1932  000055                     	ds	2
  1933  000057                     _Ecg_Xold:
  1934                           	opt callstack 0
  1935  000057                     	ds	2
  1936  000059                     _Ecg_X:
  1937                           	opt callstack 0
  1938  000059                     	ds	2
  1939                           
  1940                           	psect	bssBANK0
  1941  0000DE                     __pbssBANK0:
  1942                           	opt callstack 0
  1943  0000DE                     _ECG_HEARTBEAT:
  1944                           	opt callstack 0
  1945  0000DE                     	ds	13
  1946  0000EB                     _ECG_BUFFER:
  1947                           	opt callstack 0
  1948  0000EB                     	ds	5
  1949  0000F0                     _tmp4:
  1950                           	opt callstack 0
  1951  0000F0                     	ds	4
  1952  0000F4                     _tmp2:
  1953                           	opt callstack 0
  1954  0000F4                     	ds	4
  1955  0000F8                     _tmp1:
  1956                           	opt callstack 0
  1957  0000F8                     	ds	4
  1958  0000FC                     _MILLISECONDS:
  1959                           	opt callstack 0
  1960  0000FC                     	ds	4
  1961                           
  1962                           	psect	dataBANK0
  1963  0000A0                     __pdataBANK0:
  1964                           	opt callstack 0
  1965  0000A0                     _x6:
  1966                           	opt callstack 0
  1967  0000A0                     	ds	10
  1968  0000AA                     _x5:
  1969                           	opt callstack 0
  1970  0000AA                     	ds	10
  1971  0000B4                     _x2:
  1972                           	opt callstack 0
  1973  0000B4                     	ds	10
  1974  0000BE                     _x4:
  1975                           	opt callstack 0
  1976  0000BE                     	ds	9
  1977  0000C7                     _x3:
  1978                           	opt callstack 0
  1979  0000C7                     	ds	8
  1980  0000CF                     _Ecg_Yold:
  1981                           	opt callstack 0
  1982  0000CF                     	ds	2
  1983  0000D1                     _x1:
  1984                           	opt callstack 0
  1985  0000D1                     	ds	9
  1986  0000DA                     _x8:
  1987                           	opt callstack 0
  1988  0000DA                     	ds	4
  1989                           
  1990                           	psect	bssBANK1
  1991  000100                     __pbssBANK1:
  1992                           	opt callstack 0
  1993  000100                     _EUSART_RX:
  1994                           	opt callstack 0
  1995  000100                     	ds	100
  1996                           
  1997                           	psect	dataBANK1
  1998  000164                     __pdataBANK1:
  1999                           	opt callstack 0
  2000  000164                     _x7:
  2001                           	opt callstack 0
  2002  000164                     	ds	11
  2003                           
  2004                           	psect	cstackBANK1
  2005  00016F                     __pcstackBANK1:
  2006                           	opt callstack 0
  2007  00016F                     ??_main:
  2008                           
  2009                           ; 1 bytes @ 0x0
  2010  00016F                     	ds	2
  2011                           
  2012                           	psect	cstackBANK0
  2013  000060                     __pcstackBANK0:
  2014                           	opt callstack 0
  2015  000060                     loop@response:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 32 bytes @ 0x0
  2019  000060                     	ds	32
  2020  000080                     loop@response_128:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 32 bytes @ 0x20
  2024  000080                     	ds	32
  2025                           
  2026                           	psect	cstackCOMRAM
  2027  000001                     __pcstackCOMRAM:
  2028                           	opt callstack 0
  2029  000001                     ??_Ecg_Interrupt:
  2030  000001                     EUSART_RX_Interrupt@c:
  2031                           	opt callstack 0
  2032                           
  2033                           ; 1 bytes @ 0x0
  2034  000001                     	ds	2
  2035  000003                     ??_isr:
  2036                           
  2037                           ; 1 bytes @ 0x2
  2038  000003                     	ds	2
  2039  000005                     ??_init:
  2040  000005                     ??_TFT_Reset:
  2041  000005                     ?_abs:
  2042                           	opt callstack 0
  2043  000005                     ?_Ecg_CheckLeads:
  2044                           	opt callstack 0
  2045  000005                     ?_strlen:
  2046                           	opt callstack 0
  2047  000005                     ?___wmul:
  2048                           	opt callstack 0
  2049  000005                     ?___awdiv:
  2050                           	opt callstack 0
  2051  000005                     ?___lldiv:
  2052                           	opt callstack 0
  2053  000005                     EUSART_TX_Char@c:
  2054                           	opt callstack 0
  2055  000005                     TFT_WriteRegister@reg:
  2056                           	opt callstack 0
  2057  000005                     ___wmul@multiplier:
  2058                           	opt callstack 0
  2059  000005                     ___awdiv@dividend:
  2060                           	opt callstack 0
  2061  000005                     abs@a:
  2062                           	opt callstack 0
  2063  000005                     memset@p1:
  2064                           	opt callstack 0
  2065  000005                     strlen@s:
  2066                           	opt callstack 0
  2067  000005                     ___lldiv@dividend:
  2068                           	opt callstack 0
  2069                           
  2070                           ; 4 bytes @ 0x4
  2071  000005                     	ds	2
  2072  000007                     ??_abs:
  2073  000007                     ??_Ecg_CheckLeads:
  2074  000007                     TFT_WriteRegister@data:
  2075                           	opt callstack 0
  2076  000007                     ___wmul@multiplicand:
  2077                           	opt callstack 0
  2078  000007                     ___awdiv@divisor:
  2079                           	opt callstack 0
  2080  000007                     memset@c:
  2081                           	opt callstack 0
  2082  000007                     strlen@cp:
  2083                           	opt callstack 0
  2084                           
  2085                           ; 2 bytes @ 0x6
  2086  000007                     	ds	1
  2087  000008                     Ecg_CheckLeads@leadsStatus:
  2088                           	opt callstack 0
  2089                           
  2090                           ; 1 bytes @ 0x7
  2091  000008                     	ds	1
  2092  000009                     TFT_WriteRegister@h:
  2093                           	opt callstack 0
  2094  000009                     ___awdiv@counter:
  2095                           	opt callstack 0
  2096  000009                     EUSART_TX_String@str:
  2097                           	opt callstack 0
  2098  000009                     ___wmul@product:
  2099                           	opt callstack 0
  2100  000009                     memset@n:
  2101                           	opt callstack 0
  2102  000009                     ___lldiv@divisor:
  2103                           	opt callstack 0
  2104                           
  2105                           ; 4 bytes @ 0x8
  2106  000009                     	ds	1
  2107  00000A                     TFT_WriteRegister@l:
  2108                           	opt callstack 0
  2109  00000A                     ___awdiv@sign:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 1 bytes @ 0x9
  2113  00000A                     	ds	1
  2114  00000B                     TFT_WriteRegister@h_676:
  2115                           	opt callstack 0
  2116  00000B                     EUSART_TX_String@len:
  2117                           	opt callstack 0
  2118  00000B                     ___awdiv@quotient:
  2119                           	opt callstack 0
  2120  00000B                     memset@p:
  2121                           	opt callstack 0
  2122                           
  2123                           ; 2 bytes @ 0xA
  2124  00000B                     	ds	1
  2125  00000C                     TFT_WriteRegister@l_677:
  2126                           	opt callstack 0
  2127                           
  2128                           ; 1 bytes @ 0xB
  2129  00000C                     	ds	1
  2130  00000D                     TFT_SetAddrWindow@x1:
  2131                           	opt callstack 0
  2132  00000D                     TFT_DrawPixel@x:
  2133                           	opt callstack 0
  2134  00000D                     TFT_Flood@color:
  2135                           	opt callstack 0
  2136  00000D                     A6_ReadLine@response:
  2137                           	opt callstack 0
  2138  00000D                     ___lldiv@quotient:
  2139                           	opt callstack 0
  2140                           
  2141                           ; 4 bytes @ 0xC
  2142  00000D                     	ds	2
  2143  00000F                     A6_ReadLine@len:
  2144                           	opt callstack 0
  2145  00000F                     TFT_SetAddrWindow@y1:
  2146                           	opt callstack 0
  2147  00000F                     TFT_DrawPixel@y:
  2148                           	opt callstack 0
  2149  00000F                     TFT_Flood@len:
  2150                           	opt callstack 0
  2151                           
  2152                           ; 4 bytes @ 0xE
  2153  00000F                     	ds	1
  2154  000010                     
  2155                           ; 1 bytes @ 0xF
  2156  000010                     	ds	1
  2157  000011                     A6_ReadLine@iLine:
  2158                           	opt callstack 0
  2159  000011                     ___lldiv@counter:
  2160                           	opt callstack 0
  2161  000011                     TFT_SetAddrWindow@x2:
  2162                           	opt callstack 0
  2163  000011                     TFT_DrawPixel@color:
  2164                           	opt callstack 0
  2165                           
  2166                           ; 2 bytes @ 0x10
  2167  000011                     	ds	1
  2168  000012                     A6_Command@command:
  2169                           	opt callstack 0
  2170  000012                     EUSART_SetSpeed@speed:
  2171                           	opt callstack 0
  2172                           
  2173                           ; 4 bytes @ 0x11
  2174  000012                     	ds	1
  2175  000013                     ??_TFT_Flood:
  2176  000013                     TFT_SetAddrWindow@y2:
  2177                           	opt callstack 0
  2178  000013                     TFT_DrawLine@x0:
  2179                           	opt callstack 0
  2180                           
  2181                           ; 2 bytes @ 0x12
  2182  000013                     	ds	1
  2183  000014                     A6_Command@resp1:
  2184                           	opt callstack 0
  2185                           
  2186                           ; 2 bytes @ 0x13
  2187  000014                     	ds	1
  2188  000015                     TFT_DrawLine@y0:
  2189                           	opt callstack 0
  2190                           
  2191                           ; 2 bytes @ 0x14
  2192  000015                     	ds	1
  2193  000016                     ??_EUSART_SetSpeed:
  2194  000016                     A6_Command@resp2:
  2195                           	opt callstack 0
  2196                           
  2197                           ; 2 bytes @ 0x15
  2198  000016                     	ds	1
  2199  000017                     TFT_DrawLine@x1:
  2200                           	opt callstack 0
  2201  000017                     TFT_Flood@blocks:
  2202                           	opt callstack 0
  2203                           
  2204                           ; 2 bytes @ 0x16
  2205  000017                     	ds	1
  2206  000018                     A6_Command@timeout:
  2207                           	opt callstack 0
  2208                           
  2209                           ; 2 bytes @ 0x17
  2210  000018                     	ds	1
  2211  000019                     TFT_Flood@i:
  2212                           	opt callstack 0
  2213  000019                     TFT_DrawLine@y1:
  2214                           	opt callstack 0
  2215                           
  2216                           ; 2 bytes @ 0x18
  2217  000019                     	ds	1
  2218  00001A                     TFT_Flood@color_hi:
  2219                           	opt callstack 0
  2220  00001A                     A6_Command@response:
  2221                           	opt callstack 0
  2222  00001A                     EUSART_SetSpeed@tmp:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 4 bytes @ 0x19
  2226  00001A                     	ds	1
  2227  00001B                     TFT_Flood@color_lo:
  2228                           	opt callstack 0
  2229  00001B                     TFT_DrawLine@color:
  2230                           	opt callstack 0
  2231                           
  2232                           ; 2 bytes @ 0x1A
  2233  00001B                     	ds	1
  2234  00001C                     TFT_DrawFillRect@x:
  2235                           	opt callstack 0
  2236  00001C                     TFT_FillScreen@color:
  2237                           	opt callstack 0
  2238                           
  2239                           ; 2 bytes @ 0x1B
  2240  00001C                     	ds	1
  2241  00001D                     ??_TFT_DrawLine:
  2242                           
  2243                           ; 1 bytes @ 0x1C
  2244  00001D                     	ds	1
  2245  00001E                     ??_TFT_Init:
  2246  00001E                     TFT_DrawFillRect@y:
  2247                           	opt callstack 0
  2248                           
  2249                           ; 2 bytes @ 0x1D
  2250  00001E                     	ds	2
  2251  000020                     TFT_Init@data:
  2252                           	opt callstack 0
  2253  000020                     TFT_DrawLine@t:
  2254                           	opt callstack 0
  2255  000020                     TFT_DrawFillRect@w:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 2 bytes @ 0x1F
  2259  000020                     	ds	2
  2260  000022                     TFT_Init@initSequenceSize:
  2261                           	opt callstack 0
  2262  000022                     TFT_DrawLine@t_721:
  2263                           	opt callstack 0
  2264  000022                     TFT_DrawFillRect@h:
  2265                           	opt callstack 0
  2266                           
  2267                           ; 2 bytes @ 0x21
  2268  000022                     	ds	2
  2269  000024                     TFT_Init@cmd:
  2270                           	opt callstack 0
  2271  000024                     TFT_DrawLine@t_722:
  2272                           	opt callstack 0
  2273  000024                     TFT_DrawFillRect@color:
  2274                           	opt callstack 0
  2275                           
  2276                           ; 2 bytes @ 0x23
  2277  000024                     	ds	2
  2278  000026                     ??_TFT_DrawFillRect:
  2279  000026                     TFT_Init@i:
  2280                           	opt callstack 0
  2281  000026                     TFT_DrawLine@t_723:
  2282                           	opt callstack 0
  2283                           
  2284                           ; 2 bytes @ 0x25
  2285  000026                     	ds	2
  2286  000028                     TFT_DrawLine@dy:
  2287                           	opt callstack 0
  2288                           
  2289                           ; 2 bytes @ 0x27
  2290  000028                     	ds	2
  2291  00002A                     TFT_DrawLine@ystep:
  2292                           	opt callstack 0
  2293  00002A                     TFT_DrawChar@x:
  2294                           	opt callstack 0
  2295                           
  2296                           ; 2 bytes @ 0x29
  2297  00002A                     	ds	2
  2298  00002C                     TFT_DrawLine@err:
  2299                           	opt callstack 0
  2300  00002C                     TFT_DrawChar@y:
  2301                           	opt callstack 0
  2302                           
  2303                           ; 2 bytes @ 0x2B
  2304  00002C                     	ds	2
  2305  00002E                     TFT_DrawChar@c:
  2306                           	opt callstack 0
  2307  00002E                     TFT_DrawLine@steep:
  2308                           	opt callstack 0
  2309                           
  2310                           ; 2 bytes @ 0x2D
  2311  00002E                     	ds	1
  2312  00002F                     TFT_DrawChar@color:
  2313                           	opt callstack 0
  2314                           
  2315                           ; 2 bytes @ 0x2E
  2316  00002F                     	ds	1
  2317  000030                     TFT_DrawLine@dx:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 2 bytes @ 0x2F
  2321  000030                     	ds	1
  2322  000031                     TFT_DrawChar@bg:
  2323                           	opt callstack 0
  2324                           
  2325                           ; 2 bytes @ 0x30
  2326  000031                     	ds	2
  2327  000033                     TFT_DrawChar@size:
  2328                           	opt callstack 0
  2329                           
  2330                           ; 1 bytes @ 0x32
  2331  000033                     	ds	1
  2332  000034                     ??_TFT_DrawChar:
  2333                           
  2334                           ; 1 bytes @ 0x33
  2335  000034                     	ds	4
  2336  000038                     TFT_DrawChar@line:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 1 bytes @ 0x37
  2340  000038                     	ds	1
  2341  000039                     _TFT_DrawChar$1935:
  2342                           	opt callstack 0
  2343                           
  2344                           ; 2 bytes @ 0x38
  2345  000039                     	ds	2
  2346  00003B                     _TFT_DrawChar$1936:
  2347                           	opt callstack 0
  2348                           
  2349                           ; 2 bytes @ 0x3A
  2350  00003B                     	ds	2
  2351  00003D                     TFT_DrawChar@j:
  2352                           	opt callstack 0
  2353                           
  2354                           ; 1 bytes @ 0x3C
  2355  00003D                     	ds	1
  2356  00003E                     TFT_DrawChar@i:
  2357                           	opt callstack 0
  2358                           
  2359                           ; 1 bytes @ 0x3D
  2360  00003E                     	ds	1
  2361  00003F                     TFT_DrawString@x:
  2362                           	opt callstack 0
  2363                           
  2364                           ; 2 bytes @ 0x3E
  2365  00003F                     	ds	2
  2366  000041                     TFT_DrawString@y:
  2367                           	opt callstack 0
  2368                           
  2369                           ; 2 bytes @ 0x40
  2370  000041                     	ds	2
  2371  000043                     TFT_DrawString@str:
  2372                           	opt callstack 0
  2373                           
  2374                           ; 2 bytes @ 0x42
  2375  000043                     	ds	2
  2376  000045                     TFT_DrawString@color:
  2377                           	opt callstack 0
  2378                           
  2379                           ; 2 bytes @ 0x44
  2380  000045                     	ds	2
  2381  000047                     TFT_DrawString@bg:
  2382                           	opt callstack 0
  2383                           
  2384                           ; 2 bytes @ 0x46
  2385  000047                     	ds	2
  2386  000049                     TFT_DrawString@size:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 1 bytes @ 0x48
  2390  000049                     	ds	1
  2391  00004A                     ??_loop:
  2392  00004A                     
  2393                           ; 1 bytes @ 0x49
  2394  00004A                     	ds	4
  2395                           
  2396 ;;
  2397 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2398 ;;
  2399 ;; *************** function _main *****************
  2400 ;; Defined at:
  2401 ;;		line 21 in file "main.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2417 ;;      Temps:          0       0       2       0       0       0       0       0       0
  2418 ;;      Totals:         0       0       2       0       0       0       0       0       0
  2419 ;;Total ram usage:        2 bytes
  2420 ;; Hardware stack levels required when called:   10
  2421 ;; This function calls:
  2422 ;;		_EUSART_Init
  2423 ;;		_EUSART_SetSpeed
  2424 ;;		_Ecg_Init
  2425 ;;		_TFT_Init
  2426 ;;		_init
  2427 ;;		_loop
  2428 ;; This function is called by:
  2429 ;;		Startup code after reset
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text0
  2434  000FB2                     __ptext0:
  2435                           	opt callstack 0
  2436  000FB2                     _main:
  2437                           	opt callstack 21
  2438  000FB2                     
  2439                           ;main.c: 23: init();
  2440  000FB2  ECB2  F006         	call	_init	;wreg free
  2441  000FB6                     
  2442                           ;main.c: 24: TFT_Init();
  2443  000FB6  ECC3  F003         	call	_TFT_Init	;wreg free
  2444  000FBA                     
  2445                           ;main.c: 25: EUSART_Init();
  2446  000FBA  EC22  F007         	call	_EUSART_Init	;wreg free
  2447  000FBE                     
  2448                           ;main.c: 26: EUSART_SetSpeed(9600);
  2449  000FBE  0E80               	movlw	128
  2450  000FC0  6E12               	movwf	EUSART_SetSpeed@speed^0,c
  2451  000FC2  0E25               	movlw	37
  2452  000FC4  6E13               	movwf	(EUSART_SetSpeed@speed+1)^0,c
  2453  000FC6  0E00               	movlw	0
  2454  000FC8  6E14               	movwf	(EUSART_SetSpeed@speed+2)^0,c
  2455  000FCA  0E00               	movlw	0
  2456  000FCC  6E15               	movwf	(EUSART_SetSpeed@speed+3)^0,c
  2457  000FCE  ECBC  F005         	call	_EUSART_SetSpeed	;wreg free
  2458  000FD2                     
  2459                           ;main.c: 27: Ecg_Init();
  2460  000FD2  EC16  F009         	call	_Ecg_Init	;wreg free
  2461  000FD6                     
  2462                           ;main.c: 30: _delay((unsigned long)((2500)*(48000000/4000.0)));
  2463  000FD6  0E99               	movlw	153
  2464  000FD8  0101               	movlb	1	; () banked
  2465  000FDA  6F70               	movwf	(??_main+1)& (0+255),b
  2466  000FDC  0E31               	movlw	49
  2467  000FDE  6F6F               	movwf	??_main& (0+255),b
  2468  000FE0  0EA2               	movlw	162
  2469  000FE2                     u1857:
  2470  000FE2  2EE8               	decfsz	wreg,f,c
  2471  000FE4  D7FE               	bra	u1857
  2472  000FE6  2F6F               	decfsz	??_main& (0+255),f,b
  2473  000FE8  D7FC               	bra	u1857
  2474  000FEA  2F70               	decfsz	(??_main+1)& (0+255),f,b
  2475  000FEC  D7FA               	bra	u1857
  2476  000FEE  F000               	nop	
  2477  000FF0                     l3021:
  2478  000FF0  EC09  F000         	call	_loop	;wreg free
  2479  000FF4  EFF8  F007         	goto	l3021
  2480  000FF8  EF07  F000         	goto	start
  2481  000FFC                     __end_of_main:
  2482                           	opt callstack 0
  2483                           
  2484 ;; *************** function _loop *****************
  2485 ;; Defined at:
  2486 ;;		line 38 in file "main.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;		None
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;  response       32   32[BANK0 ] unsigned char [32]
  2491 ;;  response       32    0[BANK0 ] unsigned char [32]
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2501 ;;      Params:         0       0       0       0       0       0       0       0       0
  2502 ;;      Locals:         0      64       0       0       0       0       0       0       0
  2503 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2504 ;;      Totals:         4      64       0       0       0       0       0       0       0
  2505 ;;Total ram usage:       68 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    8
  2508 ;; This function calls:
  2509 ;;		_A6_Command
  2510 ;;		_TFT_DrawFillRect
  2511 ;;		_TFT_DrawString
  2512 ;;		_memset
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text1
  2519  000012                     __ptext1:
  2520                           	opt callstack 0
  2521  000012                     _loop:
  2522                           	opt callstack 22
  2523  000012                     
  2524                           ;main.c: 65: if((MILLISECONDS > 2500) && (tmp1 < (MILLISECONDS - 2500))) {
  2525  000012  0100               	movlb	0	; () banked
  2526  000014  51FF               	movf	(_MILLISECONDS+3)& (0+255),w,b
  2527  000016  11FE               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  2528  000018  E10B               	bnz	u1440
  2529  00001A  0EC5               	movlw	197
  2530  00001C  5DFC               	subwf	_MILLISECONDS& (0+255),w,b
  2531  00001E  0E09               	movlw	9
  2532  000020  59FD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  2533  000022  A0D8               	btfss	status,0,c
  2534  000024  EF16  F000         	goto	u1441
  2535  000028  EF18  F000         	goto	u1440
  2536  00002C                     u1441:
  2537  00002C  EF8E  F000         	goto	l2621
  2538  000030                     u1440:
  2539  000030                     
  2540                           ; BSR set to: 0
  2541  000030  0E3C               	movlw	60
  2542  000032  25FC               	addwf	_MILLISECONDS& (0+255),w,b
  2543  000034  6E4A               	movwf	??_loop^0,c
  2544  000036  0EF6               	movlw	246
  2545  000038  21FD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  2546  00003A  6E4B               	movwf	(??_loop+1)^0,c
  2547  00003C  0EFF               	movlw	255
  2548  00003E  21FE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  2549  000040  6E4C               	movwf	(??_loop+2)^0,c
  2550  000042  0EFF               	movlw	255
  2551  000044  21FF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  2552  000046  6E4D               	movwf	(??_loop+3)^0,c
  2553  000048  504A               	movf	??_loop^0,w,c
  2554  00004A  5DF8               	subwf	_tmp1& (0+255),w,b
  2555  00004C  504B               	movf	(??_loop+1)^0,w,c
  2556  00004E  59F9               	subwfb	(_tmp1+1)& (0+255),w,b
  2557  000050  504C               	movf	(??_loop+2)^0,w,c
  2558  000052  59FA               	subwfb	(_tmp1+2)& (0+255),w,b
  2559  000054  504D               	movf	(??_loop+3)^0,w,c
  2560  000056  59FB               	subwfb	(_tmp1+3)& (0+255),w,b
  2561  000058  B0D8               	btfsc	status,0,c
  2562  00005A  EF31  F000         	goto	u1451
  2563  00005E  EF33  F000         	goto	u1450
  2564  000062                     u1451:
  2565  000062  EF8E  F000         	goto	l2621
  2566  000066                     u1450:
  2567  000066                     
  2568                           ; BSR set to: 0
  2569                           ;main.c: 66: tmp1 = MILLISECONDS;
  2570  000066  C0FC  F0F8         	movff	_MILLISECONDS,_tmp1
  2571  00006A  C0FD  F0F9         	movff	_MILLISECONDS+1,_tmp1+1
  2572  00006E  C0FE  F0FA         	movff	_MILLISECONDS+2,_tmp1+2
  2573  000072  C0FF  F0FB         	movff	_MILLISECONDS+3,_tmp1+3
  2574  000076                     
  2575                           ; BSR set to: 0
  2576                           ;main.c: 68: char response[32];;main.c: 69: memset(response, 0x00, 32);
  2577  000076  0E60               	movlw	low loop@response
  2578  000078  6E05               	movwf	memset@p1^0,c
  2579  00007A  0E00               	movlw	high loop@response
  2580  00007C  6E06               	movwf	(memset@p1+1)^0,c
  2581  00007E  0E00               	movlw	0
  2582  000080  6E08               	movwf	(memset@c+1)^0,c
  2583  000082  0E00               	movlw	0
  2584  000084  6E07               	movwf	memset@c^0,c
  2585  000086  0E00               	movlw	0
  2586  000088  6E0A               	movwf	(memset@n+1)^0,c
  2587  00008A  0E20               	movlw	32
  2588  00008C  6E09               	movwf	memset@n^0,c
  2589  00008E  ECE0  F008         	call	_memset	;wreg free
  2590  000092                     
  2591                           ;main.c: 70: A6_Command(x8, "aa", "bb", 123, response);
  2592  000092  0EDA               	movlw	low _x8
  2593  000094  6E12               	movwf	A6_Command@command^0,c
  2594  000096  0E00               	movlw	high _x8
  2595  000098  6E13               	movwf	(A6_Command@command+1)^0,c
  2596  00009A  0EF9               	movlw	low STR_1
  2597  00009C  6E14               	movwf	A6_Command@resp1^0,c
  2598  00009E  0E5F               	movlw	high STR_1
  2599  0000A0  6E15               	movwf	(A6_Command@resp1+1)^0,c
  2600  0000A2  0EFC               	movlw	low STR_2
  2601  0000A4  6E16               	movwf	A6_Command@resp2^0,c
  2602  0000A6  0E5F               	movlw	high STR_2
  2603  0000A8  6E17               	movwf	(A6_Command@resp2+1)^0,c
  2604  0000AA  0E00               	movlw	0
  2605  0000AC  6E19               	movwf	(A6_Command@timeout+1)^0,c
  2606  0000AE  0E7B               	movlw	123
  2607  0000B0  6E18               	movwf	A6_Command@timeout^0,c
  2608  0000B2  0E60               	movlw	low loop@response
  2609  0000B4  6E1A               	movwf	A6_Command@response^0,c
  2610  0000B6  0E00               	movlw	high loop@response
  2611  0000B8  6E1B               	movwf	(A6_Command@response+1)^0,c
  2612  0000BA  EC58  F007         	call	_A6_Command	;wreg free
  2613  0000BE                     
  2614                           ;main.c: 72: EUSART_RX.zzzzzzzzz += 8;
  2615  0000BE  0E08               	movlw	8
  2616  0000C0  0101               	movlb	1	; () banked
  2617  0000C2  2703               	addwf	(_EUSART_RX+3)& (0+255),f,b
  2618  0000C4                     
  2619                           ; BSR set to: 1
  2620                           ;main.c: 73: TFT_DrawFillRect(EUSART_RX.zzzzzzzzz, 0, 50, 400, 0x0000);
  2621  0000C4  C103  F01C         	movff	_EUSART_RX+3,TFT_DrawFillRect@x
  2622  0000C8  6A1D               	clrf	(TFT_DrawFillRect@x+1)^0,c
  2623  0000CA  0E00               	movlw	0
  2624  0000CC  6E1F               	movwf	(TFT_DrawFillRect@y+1)^0,c
  2625  0000CE  0E00               	movlw	0
  2626  0000D0  6E1E               	movwf	TFT_DrawFillRect@y^0,c
  2627  0000D2  0E00               	movlw	0
  2628  0000D4  6E21               	movwf	(TFT_DrawFillRect@w+1)^0,c
  2629  0000D6  0E32               	movlw	50
  2630  0000D8  6E20               	movwf	TFT_DrawFillRect@w^0,c
  2631  0000DA  0E01               	movlw	1
  2632  0000DC  6E23               	movwf	(TFT_DrawFillRect@h+1)^0,c
  2633  0000DE  0E90               	movlw	144
  2634  0000E0  6E22               	movwf	TFT_DrawFillRect@h^0,c
  2635  0000E2  0E00               	movlw	0
  2636  0000E4  6E25               	movwf	(TFT_DrawFillRect@color+1)^0,c
  2637  0000E6  0E00               	movlw	0
  2638  0000E8  6E24               	movwf	TFT_DrawFillRect@color^0,c
  2639  0000EA  EC77  F006         	call	_TFT_DrawFillRect	;wreg free
  2640  0000EE                     
  2641                           ;main.c: 74: TFT_DrawString(EUSART_RX.zzzzzzzzz, (400 - 1), response, 0xF800, 0x0000, 1)
      +                          ;
  2642  0000EE  C103  F03F         	movff	_EUSART_RX+3,TFT_DrawString@x
  2643  0000F2  6A40               	clrf	(TFT_DrawString@x+1)^0,c
  2644  0000F4  0E01               	movlw	1
  2645  0000F6  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  2646  0000F8  0E8F               	movlw	143
  2647  0000FA  6E41               	movwf	TFT_DrawString@y^0,c
  2648  0000FC  0E60               	movlw	low loop@response
  2649  0000FE  6E43               	movwf	TFT_DrawString@str^0,c
  2650  000100  0E00               	movlw	high loop@response
  2651  000102  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  2652  000104  0EF8               	movlw	248
  2653  000106  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  2654  000108  0E00               	movlw	0
  2655  00010A  6E45               	movwf	TFT_DrawString@color^0,c
  2656  00010C  0E00               	movlw	0
  2657  00010E  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  2658  000110  0E00               	movlw	0
  2659  000112  6E47               	movwf	TFT_DrawString@bg^0,c
  2660  000114  0E01               	movlw	1
  2661  000116  6E49               	movwf	TFT_DrawString@size^0,c
  2662  000118  EC2F  F005         	call	_TFT_DrawString	;wreg free
  2663  00011C                     l2621:
  2664                           
  2665                           ;main.c: 75: };main.c: 77: if((MILLISECONDS > 4000) && (tmp2 < (MILLISECONDS - 4000))) {
  2666  00011C  0100               	movlb	0	; () banked
  2667  00011E  51FF               	movf	(_MILLISECONDS+3)& (0+255),w,b
  2668  000120  11FE               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  2669  000122  E10B               	bnz	u1460
  2670  000124  0EA1               	movlw	161
  2671  000126  5DFC               	subwf	_MILLISECONDS& (0+255),w,b
  2672  000128  0E0F               	movlw	15
  2673  00012A  59FD               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  2674  00012C  A0D8               	btfss	status,0,c
  2675  00012E  EF9B  F000         	goto	u1461
  2676  000132  EF9D  F000         	goto	u1460
  2677  000136                     u1461:
  2678  000136  EF13  F001         	goto	l67
  2679  00013A                     u1460:
  2680  00013A                     
  2681                           ; BSR set to: 0
  2682  00013A  0E60               	movlw	96
  2683  00013C  25FC               	addwf	_MILLISECONDS& (0+255),w,b
  2684  00013E  6E4A               	movwf	??_loop^0,c
  2685  000140  0EF0               	movlw	240
  2686  000142  21FD               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  2687  000144  6E4B               	movwf	(??_loop+1)^0,c
  2688  000146  0EFF               	movlw	255
  2689  000148  21FE               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  2690  00014A  6E4C               	movwf	(??_loop+2)^0,c
  2691  00014C  0EFF               	movlw	255
  2692  00014E  21FF               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  2693  000150  6E4D               	movwf	(??_loop+3)^0,c
  2694  000152  504A               	movf	??_loop^0,w,c
  2695  000154  5DF4               	subwf	_tmp2& (0+255),w,b
  2696  000156  504B               	movf	(??_loop+1)^0,w,c
  2697  000158  59F5               	subwfb	(_tmp2+1)& (0+255),w,b
  2698  00015A  504C               	movf	(??_loop+2)^0,w,c
  2699  00015C  59F6               	subwfb	(_tmp2+2)& (0+255),w,b
  2700  00015E  504D               	movf	(??_loop+3)^0,w,c
  2701  000160  59F7               	subwfb	(_tmp2+3)& (0+255),w,b
  2702  000162  B0D8               	btfsc	status,0,c
  2703  000164  EFB6  F000         	goto	u1471
  2704  000168  EFB8  F000         	goto	u1470
  2705  00016C                     u1471:
  2706  00016C  EF13  F001         	goto	l67
  2707  000170                     u1470:
  2708  000170                     
  2709                           ; BSR set to: 0
  2710                           ;main.c: 78: tmp2 = MILLISECONDS;
  2711  000170  C0FC  F0F4         	movff	_MILLISECONDS,_tmp2
  2712  000174  C0FD  F0F5         	movff	_MILLISECONDS+1,_tmp2+1
  2713  000178  C0FE  F0F6         	movff	_MILLISECONDS+2,_tmp2+2
  2714  00017C  C0FF  F0F7         	movff	_MILLISECONDS+3,_tmp2+3
  2715  000180                     
  2716                           ; BSR set to: 0
  2717                           ;main.c: 80: char response[32];;main.c: 81: memset(response, 0x00, 32);
  2718  000180  0E80               	movlw	low loop@response_128
  2719  000182  6E05               	movwf	memset@p1^0,c
  2720  000184  0E00               	movlw	high loop@response_128
  2721  000186  6E06               	movwf	(memset@p1+1)^0,c
  2722  000188  0E00               	movlw	0
  2723  00018A  6E08               	movwf	(memset@c+1)^0,c
  2724  00018C  0E00               	movlw	0
  2725  00018E  6E07               	movwf	memset@c^0,c
  2726  000190  0E00               	movlw	0
  2727  000192  6E0A               	movwf	(memset@n+1)^0,c
  2728  000194  0E20               	movlw	32
  2729  000196  6E09               	movwf	memset@n^0,c
  2730  000198  ECE0  F008         	call	_memset	;wreg free
  2731  00019C                     
  2732                           ;main.c: 82: A6_Command(x1, "aa", "bb", 123, response);
  2733  00019C  0ED1               	movlw	low _x1
  2734  00019E  6E12               	movwf	A6_Command@command^0,c
  2735  0001A0  0E00               	movlw	high _x1
  2736  0001A2  6E13               	movwf	(A6_Command@command+1)^0,c
  2737  0001A4  0EF9               	movlw	low STR_1
  2738  0001A6  6E14               	movwf	A6_Command@resp1^0,c
  2739  0001A8  0E5F               	movlw	high STR_1
  2740  0001AA  6E15               	movwf	(A6_Command@resp1+1)^0,c
  2741  0001AC  0EFC               	movlw	low STR_2
  2742  0001AE  6E16               	movwf	A6_Command@resp2^0,c
  2743  0001B0  0E5F               	movlw	high STR_2
  2744  0001B2  6E17               	movwf	(A6_Command@resp2+1)^0,c
  2745  0001B4  0E00               	movlw	0
  2746  0001B6  6E19               	movwf	(A6_Command@timeout+1)^0,c
  2747  0001B8  0E7B               	movlw	123
  2748  0001BA  6E18               	movwf	A6_Command@timeout^0,c
  2749  0001BC  0E80               	movlw	low loop@response_128
  2750  0001BE  6E1A               	movwf	A6_Command@response^0,c
  2751  0001C0  0E00               	movlw	high loop@response_128
  2752  0001C2  6E1B               	movwf	(A6_Command@response+1)^0,c
  2753  0001C4  EC58  F007         	call	_A6_Command	;wreg free
  2754  0001C8                     
  2755                           ;main.c: 84: EUSART_RX.zzzzzzzzz += 8;
  2756  0001C8  0E08               	movlw	8
  2757  0001CA  0101               	movlb	1	; () banked
  2758  0001CC  2703               	addwf	(_EUSART_RX+3)& (0+255),f,b
  2759  0001CE                     
  2760                           ; BSR set to: 1
  2761                           ;main.c: 85: TFT_DrawFillRect(EUSART_RX.zzzzzzzzz, 0, 50, 400, 0x0000);
  2762  0001CE  C103  F01C         	movff	_EUSART_RX+3,TFT_DrawFillRect@x
  2763  0001D2  6A1D               	clrf	(TFT_DrawFillRect@x+1)^0,c
  2764  0001D4  0E00               	movlw	0
  2765  0001D6  6E1F               	movwf	(TFT_DrawFillRect@y+1)^0,c
  2766  0001D8  0E00               	movlw	0
  2767  0001DA  6E1E               	movwf	TFT_DrawFillRect@y^0,c
  2768  0001DC  0E00               	movlw	0
  2769  0001DE  6E21               	movwf	(TFT_DrawFillRect@w+1)^0,c
  2770  0001E0  0E32               	movlw	50
  2771  0001E2  6E20               	movwf	TFT_DrawFillRect@w^0,c
  2772  0001E4  0E01               	movlw	1
  2773  0001E6  6E23               	movwf	(TFT_DrawFillRect@h+1)^0,c
  2774  0001E8  0E90               	movlw	144
  2775  0001EA  6E22               	movwf	TFT_DrawFillRect@h^0,c
  2776  0001EC  0E00               	movlw	0
  2777  0001EE  6E25               	movwf	(TFT_DrawFillRect@color+1)^0,c
  2778  0001F0  0E00               	movlw	0
  2779  0001F2  6E24               	movwf	TFT_DrawFillRect@color^0,c
  2780  0001F4  EC77  F006         	call	_TFT_DrawFillRect	;wreg free
  2781  0001F8                     
  2782                           ;main.c: 86: TFT_DrawString(EUSART_RX.zzzzzzzzz, (400 - 1), response, 0xF800, 0x0000, 1)
      +                          ;
  2783  0001F8  C103  F03F         	movff	_EUSART_RX+3,TFT_DrawString@x
  2784  0001FC  6A40               	clrf	(TFT_DrawString@x+1)^0,c
  2785  0001FE  0E01               	movlw	1
  2786  000200  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  2787  000202  0E8F               	movlw	143
  2788  000204  6E41               	movwf	TFT_DrawString@y^0,c
  2789  000206  0E80               	movlw	low loop@response_128
  2790  000208  6E43               	movwf	TFT_DrawString@str^0,c
  2791  00020A  0E00               	movlw	high loop@response_128
  2792  00020C  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  2793  00020E  0EF8               	movlw	248
  2794  000210  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  2795  000212  0E00               	movlw	0
  2796  000214  6E45               	movwf	TFT_DrawString@color^0,c
  2797  000216  0E00               	movlw	0
  2798  000218  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  2799  00021A  0E00               	movlw	0
  2800  00021C  6E47               	movwf	TFT_DrawString@bg^0,c
  2801  00021E  0E01               	movlw	1
  2802  000220  6E49               	movwf	TFT_DrawString@size^0,c
  2803  000222  EC2F  F005         	call	_TFT_DrawString	;wreg free
  2804  000226                     l67:
  2805  000226  0012               	return		;funcret
  2806  000228                     __end_of_loop:
  2807                           	opt callstack 0
  2808                           
  2809 ;; *************** function _A6_Command *****************
  2810 ;; Defined at:
  2811 ;;		line 26 in file "A6Lib.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  command         2   17[COMRAM] PTR const unsigned char 
  2814 ;;		 -> STR_14(14), STR_11(16), STR_8(15), x1(9), 
  2815 ;;		 -> x8(4), 
  2816 ;;  resp1           2   19[COMRAM] PTR const unsigned char 
  2817 ;;		 -> STR_15(3), STR_12(3), STR_9(3), STR_3(3), 
  2818 ;;		 -> STR_1(3), 
  2819 ;;  resp2           2   21[COMRAM] PTR const unsigned char 
  2820 ;;		 -> STR_16(3), STR_13(3), STR_10(3), STR_4(3), 
  2821 ;;		 -> STR_2(3), 
  2822 ;;  timeout         2   23[COMRAM] int 
  2823 ;;  response        2   25[COMRAM] PTR unsigned char 
  2824 ;;		 -> A6_SetSpeed@response(32), loop@response_128(32), loop@response(32), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2836 ;;      Params:        10       0       0       0       0       0       0       0       0
  2837 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2838 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2839 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2840 ;;Total ram usage:       11 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    4
  2843 ;; This function calls:
  2844 ;;		_A6_ReadLine
  2845 ;;		_EUSART_TX_String
  2846 ;;		_strlen
  2847 ;; This function is called by:
  2848 ;;		_loop
  2849 ;;		_A6_SetSpeed
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text2
  2854  000EB0                     __ptext2:
  2855                           	opt callstack 0
  2856  000EB0                     _A6_Command:
  2857                           	opt callstack 25
  2858  000EB0                     
  2859                           ;A6Lib.c: 27: EUSART_RX.iRead = EUSART_RX.iWrite;
  2860  000EB0  C102  F101         	movff	_EUSART_RX+2,_EUSART_RX+1
  2861  000EB4                     
  2862                           ;A6Lib.c: 28: EUSART_TX_String(command, strlen(command));
  2863  000EB4  C012  F009         	movff	A6_Command@command,EUSART_TX_String@str
  2864  000EB8  C013  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
  2865  000EBC  C012  F005         	movff	A6_Command@command,strlen@s
  2866  000EC0  C013  F006         	movff	A6_Command@command+1,strlen@s+1
  2867  000EC4  EC8B  F007         	call	_strlen	;wreg free
  2868  000EC8  5005               	movf	?_strlen^0,w,c
  2869  000ECA  6E0B               	movwf	EUSART_TX_String@len^0,c
  2870  000ECC  EC64  F008         	call	_EUSART_TX_String	;wreg free
  2871  000ED0                     l2481:
  2872  000ED0  0101               	movlb	1	; () banked
  2873  000ED2  5102               	movf	(_EUSART_RX+2)& (0+255),w,b
  2874  000ED4  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
  2875  000ED6  B4D8               	btfsc	status,2,c
  2876  000ED8  EF70  F007         	goto	u1311
  2877  000EDC  EF72  F007         	goto	u1310
  2878  000EE0                     u1311:
  2879  000EE0  EF68  F007         	goto	l2481
  2880  000EE4                     u1310:
  2881  000EE4                     
  2882                           ; BSR set to: 1
  2883                           ;A6Lib.c: 33: EUSART_RX.iRead++;
  2884  000EE4  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
  2885  000EE6                     
  2886                           ; BSR set to: 1
  2887                           ;A6Lib.c: 34: } while(EUSART_RX.buffer[EUSART_RX.iRead] != '\n');
  2888  000EE6  0E04               	movlw	low (_EUSART_RX+4)
  2889  000EE8  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
  2890  000EEA  6ED9               	movwf	fsr2l,c
  2891  000EEC  6ADA               	clrf	fsr2h,c
  2892  000EEE  0E01               	movlw	high (_EUSART_RX+4)
  2893  000EF0  22DA               	addwfc	fsr2h,f,c
  2894  000EF2  0E0A               	movlw	10
  2895  000EF4  18DE               	xorwf	postinc2,w,c
  2896  000EF6  A4D8               	btfss	status,2,c
  2897  000EF8  EF80  F007         	goto	u1321
  2898  000EFC  EF82  F007         	goto	u1320
  2899  000F00                     u1321:
  2900  000F00  EF68  F007         	goto	l2481
  2901  000F04                     u1320:
  2902  000F04                     
  2903                           ; BSR set to: 1
  2904                           ;A6Lib.c: 37: A6_ReadLine(response, 32);
  2905  000F04  C01A  F00D         	movff	A6_Command@response,A6_ReadLine@response
  2906  000F08  C01B  F00E         	movff	A6_Command@response+1,A6_ReadLine@response+1
  2907  000F0C  0E20               	movlw	32
  2908  000F0E  6E0F               	movwf	A6_ReadLine@len^0,c
  2909  000F10  EC77  F005         	call	_A6_ReadLine	;wreg free
  2910  000F14  0012               	return		;funcret
  2911  000F16                     __end_of_A6_Command:
  2912                           	opt callstack 0
  2913                           
  2914 ;; *************** function _strlen *****************
  2915 ;; Defined at:
  2916 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  s               2    4[COMRAM] PTR const unsigned char 
  2919 ;;		 -> STR_14(14), STR_11(16), STR_8(15), x1(9), 
  2920 ;;		 -> x8(4), 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  cp              2    6[COMRAM] PTR const unsigned char 
  2923 ;;		 -> STR_14(14), STR_11(16), STR_8(15), x1(9), 
  2924 ;;		 -> x8(4), 
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  2    4[COMRAM] unsigned int 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2934 ;;      Params:         2       0       0       0       0       0       0       0       0
  2935 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2937 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2938 ;;Total ram usage:        4 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    2
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_A6_Command
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text3
  2949  000F16                     __ptext3:
  2950                           	opt callstack 0
  2951  000F16                     _strlen:
  2952                           	opt callstack 26
  2953  000F16  C005  F007         	movff	strlen@s,strlen@cp
  2954  000F1A  C006  F008         	movff	strlen@s+1,strlen@cp+1
  2955  000F1E  EF93  F007         	goto	l2471
  2956  000F22                     l2469:
  2957  000F22  4A07               	infsnz	strlen@cp^0,f,c
  2958  000F24  2A08               	incf	(strlen@cp+1)^0,f,c
  2959  000F26                     l2471:
  2960  000F26  C007  FFF6         	movff	strlen@cp,tblptrl
  2961  000F2A  C008  FFF7         	movff	strlen@cp+1,tblptrh
  2962  000F2E  6AF8               	clrf	tblptru,c
  2963  000F30  0E07               	movlw	(high __ramtop+-1)
  2964  000F32  64F7               	cpfsgt	tblptrh,c
  2965  000F34  D003               	bra	u1297
  2966  000F36  0008               	tblrd		*
  2967  000F38  50F5               	movf	tablat,w,c
  2968  000F3A  D005               	bra	u1290
  2969  000F3C                     u1297:
  2970  000F3C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2971  000F40  CFF7 FFEA          	movff	tblptrh,fsr0h
  2972  000F44  50EF               	movf	indf0,w,c
  2973  000F46                     u1290:
  2974  000F46  0900               	iorlw	0
  2975  000F48  A4D8               	btfss	status,2,c
  2976  000F4A  EFA9  F007         	goto	u1301
  2977  000F4E  EFAB  F007         	goto	u1300
  2978  000F52                     u1301:
  2979  000F52  EF91  F007         	goto	l2469
  2980  000F56                     u1300:
  2981  000F56  5005               	movf	strlen@s^0,w,c
  2982  000F58  5C07               	subwf	strlen@cp^0,w,c
  2983  000F5A  6E05               	movwf	?_strlen^0,c
  2984  000F5C  5006               	movf	(strlen@s+1)^0,w,c
  2985  000F5E  5808               	subwfb	(strlen@cp+1)^0,w,c
  2986  000F60  6E06               	movwf	(?_strlen+1)^0,c
  2987  000F62  0012               	return		;funcret
  2988  000F64                     __end_of_strlen:
  2989                           	opt callstack 0
  2990                           
  2991 ;; *************** function _EUSART_TX_String *****************
  2992 ;; Defined at:
  2993 ;;		line 65 in file "eusart.c"
  2994 ;; Parameters:    Size  Location     Type
  2995 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2996 ;;		 -> STR_14(14), STR_11(16), STR_8(15), x1(9), 
  2997 ;;		 -> x8(4), 
  2998 ;;  len             1   10[COMRAM] unsigned char 
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3010 ;;      Params:         3       0       0       0       0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3013 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3014 ;;Total ram usage:        3 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    3
  3017 ;; This function calls:
  3018 ;;		_EUSART_TX_Char
  3019 ;; This function is called by:
  3020 ;;		_A6_Command
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           	psect	text4
  3025  0010C8                     __ptext4:
  3026                           	opt callstack 0
  3027  0010C8                     _EUSART_TX_String:
  3028                           	opt callstack 25
  3029  0010C8                     
  3030                           ;eusart.c: 66: while(len--) {
  3031  0010C8  EF7A  F008         	goto	l2445
  3032  0010CC                     l2441:
  3033                           
  3034                           ;eusart.c: 67: EUSART_TX_Char(*str++);
  3035  0010CC  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
  3036  0010D0  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
  3037  0010D4  6AF8               	clrf	tblptru,c
  3038  0010D6  0E07               	movlw	(high __ramtop+-1)
  3039  0010D8  64F7               	cpfsgt	tblptrh,c
  3040  0010DA  D003               	bra	u1257
  3041  0010DC  0008               	tblrd		*
  3042  0010DE  50F5               	movf	tablat,w,c
  3043  0010E0  D005               	bra	u1250
  3044  0010E2                     u1257:
  3045  0010E2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3046  0010E6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3047  0010EA  50EF               	movf	indf0,w,c
  3048  0010EC                     u1250:
  3049  0010EC  EC72  F009         	call	_EUSART_TX_Char
  3050  0010F0  4A09               	infsnz	EUSART_TX_String@str^0,f,c
  3051  0010F2  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
  3052  0010F4                     l2445:
  3053  0010F4  060B               	decf	EUSART_TX_String@len^0,f,c
  3054  0010F6  280B               	incf	EUSART_TX_String@len^0,w,c
  3055  0010F8  A4D8               	btfss	status,2,c
  3056  0010FA  EF81  F008         	goto	u1261
  3057  0010FE  EF83  F008         	goto	u1260
  3058  001102                     u1261:
  3059  001102  EF66  F008         	goto	l2441
  3060  001106                     u1260:
  3061  001106  0012               	return		;funcret
  3062  001108                     __end_of_EUSART_TX_String:
  3063                           	opt callstack 0
  3064                           
  3065 ;; *************** function _EUSART_TX_Char *****************
  3066 ;; Defined at:
  3067 ;;		line 59 in file "eusart.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  c               1    wreg     unsigned char 
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  c               1    4[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0
  3082 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3084 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3085 ;;Total ram usage:        1 bytes
  3086 ;; Hardware stack levels used:    1
  3087 ;; Hardware stack levels required when called:    2
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_EUSART_TX_String
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text5
  3096  0012E4                     __ptext5:
  3097                           	opt callstack 0
  3098  0012E4                     _EUSART_TX_Char:
  3099                           	opt callstack 25
  3100                           
  3101                           ;incstack = 0
  3102                           ;EUSART_TX_Char@c stored from wreg
  3103  0012E4  6E05               	movwf	EUSART_TX_Char@c^0,c
  3104  0012E6                     l441:
  3105  0012E6  A89E               	btfss	3998,4,c	;volatile
  3106  0012E8  EF78  F009         	goto	u1071
  3107  0012EC  EF7A  F009         	goto	u1070
  3108  0012F0                     u1071:
  3109  0012F0  EF73  F009         	goto	l441
  3110  0012F4                     u1070:
  3111  0012F4                     
  3112                           ;eusart.c: 61: TXREG = c;
  3113  0012F4  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
  3114  0012F8  F000               	nop		;# 
  3115  0012FA  0012               	return		;funcret
  3116  0012FC                     __end_of_EUSART_TX_Char:
  3117                           	opt callstack 0
  3118                           
  3119 ;; *************** function _A6_ReadLine *****************
  3120 ;; Defined at:
  3121 ;;		line 12 in file "A6Lib.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  response        2   12[COMRAM] PTR unsigned char 
  3124 ;;		 -> A6_SetSpeed@response(32), loop@response_128(32), loop@response(32), 
  3125 ;;  len             1   14[COMRAM] unsigned char 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  iLine           1   16[COMRAM] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3137 ;;      Params:         3       0       0       0       0       0       0       0       0
  3138 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3139 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3140 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3141 ;;Total ram usage:        5 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    3
  3144 ;; This function calls:
  3145 ;;		_memset
  3146 ;; This function is called by:
  3147 ;;		_A6_Command
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text6
  3152  000AEE                     __ptext6:
  3153                           	opt callstack 0
  3154  000AEE                     _A6_ReadLine:
  3155                           	opt callstack 25
  3156  000AEE                     
  3157                           ;A6Lib.c: 13: uint8_t iLine = 0;
  3158  000AEE  0E00               	movlw	0
  3159  000AF0  6E11               	movwf	A6_ReadLine@iLine^0,c
  3160  000AF2                     
  3161                           ;A6Lib.c: 14: memset(response, 0x00, len);
  3162  000AF2  C00D  F005         	movff	A6_ReadLine@response,memset@p1
  3163  000AF6  C00E  F006         	movff	A6_ReadLine@response+1,memset@p1+1
  3164  000AFA  0E00               	movlw	0
  3165  000AFC  6E08               	movwf	(memset@c+1)^0,c
  3166  000AFE  0E00               	movlw	0
  3167  000B00  6E07               	movwf	memset@c^0,c
  3168  000B02  C00F  F009         	movff	A6_ReadLine@len,memset@n
  3169  000B06  6A0A               	clrf	(memset@n+1)^0,c
  3170  000B08  ECE0  F008         	call	_memset	;wreg free
  3171  000B0C                     l2451:
  3172  000B0C  0101               	movlb	1	; () banked
  3173  000B0E  5102               	movf	(_EUSART_RX+2)& (0+255),w,b
  3174  000B10  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
  3175  000B12  B4D8               	btfsc	status,2,c
  3176  000B14  EF8E  F005         	goto	u1271
  3177  000B18  EF90  F005         	goto	u1270
  3178  000B1C                     u1271:
  3179  000B1C  EF86  F005         	goto	l2451
  3180  000B20                     u1270:
  3181  000B20                     
  3182                           ; BSR set to: 1
  3183                           ;A6Lib.c: 17: EUSART_RX.iRead++;
  3184  000B20  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
  3185  000B22                     
  3186                           ; BSR set to: 1
  3187                           ;A6Lib.c: 18: if(EUSART_RX.buffer[EUSART_RX.iRead] == '\r') break;
  3188  000B22  0E04               	movlw	low (_EUSART_RX+4)
  3189  000B24  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
  3190  000B26  6ED9               	movwf	fsr2l,c
  3191  000B28  6ADA               	clrf	fsr2h,c
  3192  000B2A  0E01               	movlw	high (_EUSART_RX+4)
  3193  000B2C  22DA               	addwfc	fsr2h,f,c
  3194  000B2E  0E0D               	movlw	13
  3195  000B30  18DE               	xorwf	postinc2,w,c
  3196  000B32  A4D8               	btfss	status,2,c
  3197  000B34  EF9E  F005         	goto	u1281
  3198  000B38  EFA0  F005         	goto	u1280
  3199  000B3C                     u1281:
  3200  000B3C  EFA2  F005         	goto	l2459
  3201  000B40                     u1280:
  3202  000B40  EFB3  F005         	goto	l2463
  3203  000B44                     l2459:
  3204                           
  3205                           ; BSR set to: 1
  3206                           ;A6Lib.c: 19: response[iLine] = EUSART_RX.buffer[EUSART_RX.iRead];
  3207  000B44  0E04               	movlw	low (_EUSART_RX+4)
  3208  000B46  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
  3209  000B48  6ED9               	movwf	fsr2l,c
  3210  000B4A  6ADA               	clrf	fsr2h,c
  3211  000B4C  0E01               	movlw	high (_EUSART_RX+4)
  3212  000B4E  22DA               	addwfc	fsr2h,f,c
  3213  000B50  5011               	movf	A6_ReadLine@iLine^0,w,c
  3214  000B52  240D               	addwf	A6_ReadLine@response^0,w,c
  3215  000B54  6EE1               	movwf	fsr1l,c
  3216  000B56  0E00               	movlw	0
  3217  000B58  200E               	addwfc	(A6_ReadLine@response+1)^0,w,c
  3218  000B5A  6EE2               	movwf	fsr1h,c
  3219  000B5C  CFDF FFE7          	movff	indf2,indf1
  3220  000B60                     
  3221                           ; BSR set to: 1
  3222                           ;A6Lib.c: 20: iLine++;
  3223  000B60  2A11               	incf	A6_ReadLine@iLine^0,f,c
  3224  000B62  EF86  F005         	goto	l2451
  3225  000B66                     l2463:
  3226                           
  3227                           ; BSR set to: 1
  3228                           ;A6Lib.c: 21: };A6Lib.c: 22: response[iLine] = 0x00;
  3229  000B66  5011               	movf	A6_ReadLine@iLine^0,w,c
  3230  000B68  240D               	addwf	A6_ReadLine@response^0,w,c
  3231  000B6A  6ED9               	movwf	fsr2l,c
  3232  000B6C  0E00               	movlw	0
  3233  000B6E  200E               	addwfc	(A6_ReadLine@response+1)^0,w,c
  3234  000B70  6EDA               	movwf	fsr2h,c
  3235  000B72  0E00               	movlw	0
  3236  000B74  6EDF               	movwf	indf2,c
  3237  000B76                     
  3238                           ; BSR set to: 1
  3239  000B76  0012               	return		;funcret
  3240  000B78                     __end_of_A6_ReadLine:
  3241                           	opt callstack 0
  3242                           
  3243 ;; *************** function _init *****************
  3244 ;; Defined at:
  3245 ;;		line 15 in file "init.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3261 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3262 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3263 ;;Total ram usage:        2 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    2
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_main
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text7
  3274  000D64                     __ptext7:
  3275                           	opt callstack 0
  3276  000D64                     _init:
  3277                           	opt callstack 28
  3278  000D64                     
  3279                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  3280  000D64  9ED3               	bcf	211,7,c	;volatile
  3281  000D66                     
  3282                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  3283  000D66  0E70               	movlw	112
  3284  000D68  12D3               	iorwf	211,f,c	;volatile
  3285                           
  3286                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  3287  000D6A  0EFC               	movlw	-4
  3288  000D6C  16D3               	andwf	211,f,c	;volatile
  3289  000D6E                     
  3290                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  3291  000D6E  8E9B               	bsf	155,7,c	;volatile
  3292                           
  3293                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  3294  000D70  0EE0               	movlw	-32
  3295  000D72  169B               	andwf	155,f,c	;volatile
  3296  000D74                     
  3297                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  3298  000D74  0E07               	movlw	7
  3299  000D76  6E06               	movwf	(??_init+1)^0,c
  3300  000D78  0E17               	movlw	23
  3301  000D7A  6E05               	movwf	??_init^0,c
  3302  000D7C  0E6A               	movlw	106
  3303  000D7E                     u1867:
  3304  000D7E  2EE8               	decfsz	wreg,f,c
  3305  000D80  D7FE               	bra	u1867
  3306  000D82  2E05               	decfsz	??_init^0,f,c
  3307  000D84  D7FC               	bra	u1867
  3308  000D86  2E06               	decfsz	(??_init+1)^0,f,c
  3309  000D88  D7FA               	bra	u1867
  3310  000D8A  D000               	nop2	
  3311  000D8C                     
  3312                           ;init.c: 27: UCONbits.USBEN = 0;
  3313  000D8C  966D               	bcf	109,3,c	;volatile
  3314  000D8E                     
  3315                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  3316  000D8E  866F               	bsf	111,3,c	;volatile
  3317  000D90                     
  3318                           ;init.c: 41: TRISA = 0b00001011;
  3319  000D90  0E0B               	movlw	11
  3320  000D92  6E92               	movwf	146,c	;volatile
  3321  000D94                     
  3322                           ;init.c: 42: LATA = 0x00;
  3323  000D94  0E00               	movlw	0
  3324  000D96  6E89               	movwf	137,c	;volatile
  3325  000D98                     
  3326                           ;init.c: 48: RBPU = 1;
  3327  000D98  8EF1               	bsf	4081,7,c	;volatile
  3328  000D9A                     
  3329                           ;init.c: 49: TRISB = 0x00;
  3330  000D9A  0E00               	movlw	0
  3331  000D9C  6E93               	movwf	147,c	;volatile
  3332  000D9E                     
  3333                           ;init.c: 50: LATB = 0x00;
  3334  000D9E  0E00               	movlw	0
  3335  000DA0  6E8A               	movwf	138,c	;volatile
  3336  000DA2                     
  3337                           ;init.c: 63: TRISC = 0b11110000;
  3338  000DA2  0EF0               	movlw	240
  3339  000DA4  6E94               	movwf	148,c	;volatile
  3340  000DA6                     
  3341                           ;init.c: 64: LATC = 0x00;
  3342  000DA6  0E00               	movlw	0
  3343  000DA8  6E8B               	movwf	139,c	;volatile
  3344  000DAA                     
  3345                           ;init.c: 67: ADCON0bits.ADON = 0;
  3346  000DAA  90C2               	bcf	194,0,c	;volatile
  3347  000DAC                     
  3348                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  3349  000DAC  0ECF               	movlw	-49
  3350  000DAE  16C1               	andwf	193,f,c	;volatile
  3351  000DB0                     
  3352                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  3353  000DB0  50C1               	movf	193,w,c	;volatile
  3354  000DB2  0BF0               	andlw	-16
  3355  000DB4  090E               	iorlw	14
  3356  000DB6  6EC1               	movwf	193,c	;volatile
  3357  000DB8                     
  3358                           ;init.c: 70: ADCON2bits.ADFM = 1;
  3359  000DB8  8EC0               	bsf	192,7,c	;volatile
  3360  000DBA                     
  3361                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  3362  000DBA  0EC7               	movlw	-57
  3363  000DBC  16C0               	andwf	192,f,c	;volatile
  3364  000DBE                     
  3365                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  3366  000DBE  50C0               	movf	192,w,c	;volatile
  3367  000DC0  0BF8               	andlw	-8
  3368  000DC2  0902               	iorlw	2
  3369  000DC4  6EC0               	movwf	192,c	;volatile
  3370  000DC6                     
  3371                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  3372  000DC6  0ECF               	movlw	-49
  3373  000DC8  16B1               	andwf	177,f,c	;volatile
  3374  000DCA                     
  3375                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  3376  000DCA  92B1               	bcf	177,1,c	;volatile
  3377  000DCC                     
  3378                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  3379  000DCC  80B1               	bsf	177,0,c	;volatile
  3380  000DCE                     
  3381                           ;init.c: 78: TMR3IE = 1;
  3382  000DCE  82A0               	bsf	4000,1,c	;volatile
  3383  000DD0                     
  3384                           ;init.c: 81: PEIE = 1;
  3385  000DD0  8CF2               	bsf	4082,6,c	;volatile
  3386  000DD2                     
  3387                           ;init.c: 82: GIE = 1;
  3388  000DD2  8EF2               	bsf	4082,7,c	;volatile
  3389  000DD4  0012               	return		;funcret
  3390  000DD6                     __end_of_init:
  3391                           	opt callstack 0
  3392                           
  3393 ;; *************** function _TFT_Init *****************
  3394 ;; Defined at:
  3395 ;;		line 72 in file "TFT.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  i               2   37[COMRAM] unsigned int 
  3400 ;;  cmd             2   35[COMRAM] unsigned int 
  3401 ;;  initSequence    2   33[COMRAM] unsigned int 
  3402 ;;  data            2   31[COMRAM] unsigned int 
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0
  3413 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3414 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3415 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3416 ;;Total ram usage:       10 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    5
  3419 ;; This function calls:
  3420 ;;		_TFT_FillScreen
  3421 ;;		_TFT_FullScreen
  3422 ;;		_TFT_Reset
  3423 ;;		_TFT_WriteRegister
  3424 ;; This function is called by:
  3425 ;;		_main
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text8
  3430  000786                     __ptext8:
  3431                           	opt callstack 0
  3432  000786                     _TFT_Init:
  3433                           	opt callstack 25
  3434  000786                     
  3435                           ;TFT.c: 73: TFT_Reset();
  3436  000786  EC54  F009         	call	_TFT_Reset	;wreg free
  3437  00078A                     
  3438                           ;TFT.c: 74: _delay((unsigned long)((200)*(48000000/4000.0)));
  3439  00078A  0E0D               	movlw	13
  3440  00078C  6E1F               	movwf	(??_TFT_Init+1)^0,c
  3441  00078E  0E2D               	movlw	45
  3442  000790  6E1E               	movwf	??_TFT_Init^0,c
  3443  000792  0ED8               	movlw	216
  3444  000794                     u1877:
  3445  000794  2EE8               	decfsz	wreg,f,c
  3446  000796  D7FE               	bra	u1877
  3447  000798  2E1E               	decfsz	??_TFT_Init^0,f,c
  3448  00079A  D7FC               	bra	u1877
  3449  00079C  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  3450  00079E  D7FA               	bra	u1877
  3451  0007A0                     
  3452                           ;TFT.c: 77: uint16_t i=0, cmd, data;
  3453  0007A0  0E00               	movlw	0
  3454  0007A2  6E27               	movwf	(TFT_Init@i+1)^0,c
  3455  0007A4  0E00               	movlw	0
  3456  0007A6  6E26               	movwf	TFT_Init@i^0,c
  3457  0007A8                     
  3458                           ;TFT.c: 78: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  3459  0007A8  0E00               	movlw	0
  3460  0007AA  6E23               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  3461  0007AC  0E66               	movlw	102
  3462  0007AE  6E22               	movwf	TFT_Init@initSequenceSize^0,c
  3463                           
  3464                           ;TFT.c: 79: while(i != initSequenceSize) {
  3465  0007B0  EF1D  F004         	goto	l2563
  3466  0007B4                     l2551:
  3467                           
  3468                           ;TFT.c: 80: cmd = TFT_Init_Sequence[i++];
  3469  0007B4  90D8               	bcf	status,0,c
  3470  0007B6  3426               	rlcf	TFT_Init@i^0,w,c
  3471  0007B8  6EF6               	movwf	tblptrl,c
  3472  0007BA  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  3473  0007BC  6EF7               	movwf	tblptrh,c
  3474  0007BE  0E97               	movlw	low _TFT_Init_Sequence
  3475  0007C0  26F6               	addwf	tblptrl,f,c
  3476  0007C2  0E5E               	movlw	high _TFT_Init_Sequence
  3477  0007C4  22F7               	addwfc	tblptrh,f,c
  3478  0007C6                     	if	0	;There are less than 3 active tblptr bytes
  3479  0007C6                     	endif
  3480  0007C6  0009               	tblrd		*+
  3481  0007C8  CFF5 F024          	movff	tablat,TFT_Init@cmd
  3482  0007CC  000A               	tblrd		*-
  3483  0007CE  CFF5 F025          	movff	tablat,TFT_Init@cmd+1
  3484  0007D2  4A26               	infsnz	TFT_Init@i^0,f,c
  3485  0007D4  2A27               	incf	(TFT_Init@i+1)^0,f,c
  3486  0007D6                     
  3487                           ;TFT.c: 81: data = TFT_Init_Sequence[i++];
  3488  0007D6  90D8               	bcf	status,0,c
  3489  0007D8  3426               	rlcf	TFT_Init@i^0,w,c
  3490  0007DA  6EF6               	movwf	tblptrl,c
  3491  0007DC  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  3492  0007DE  6EF7               	movwf	tblptrh,c
  3493  0007E0  0E97               	movlw	low _TFT_Init_Sequence
  3494  0007E2  26F6               	addwf	tblptrl,f,c
  3495  0007E4  0E5E               	movlw	high _TFT_Init_Sequence
  3496  0007E6  22F7               	addwfc	tblptrh,f,c
  3497  0007E8                     	if	0	;There are less than 3 active tblptr bytes
  3498  0007E8                     	endif
  3499  0007E8  0009               	tblrd		*+
  3500  0007EA  CFF5 F020          	movff	tablat,TFT_Init@data
  3501  0007EE  000A               	tblrd		*-
  3502  0007F0  CFF5 F021          	movff	tablat,TFT_Init@data+1
  3503  0007F4  4A26               	infsnz	TFT_Init@i^0,f,c
  3504  0007F6  2A27               	incf	(TFT_Init@i+1)^0,f,c
  3505  0007F8                     
  3506                           ;TFT.c: 82: if(cmd == 0xFFFF) {
  3507  0007F8  2824               	incf	TFT_Init@cmd^0,w,c
  3508  0007FA  E106               	bnz	u1401
  3509  0007FC  2825               	incf	(TFT_Init@cmd+1)^0,w,c
  3510  0007FE  A4D8               	btfss	status,2,c
  3511  000800  EF04  F004         	goto	u1401
  3512  000804  EF06  F004         	goto	u1400
  3513  000808                     u1401:
  3514  000808  EF13  F004         	goto	l2561
  3515  00080C                     u1400:
  3516  00080C                     
  3517                           ;TFT.c: 83: _delay((unsigned long)((200)*(48000000/4000.0)));
  3518  00080C  0E0D               	movlw	13
  3519  00080E  6E1F               	movwf	(??_TFT_Init+1)^0,c
  3520  000810  0E2D               	movlw	45
  3521  000812  6E1E               	movwf	??_TFT_Init^0,c
  3522  000814  0ED8               	movlw	216
  3523  000816                     u1887:
  3524  000816  2EE8               	decfsz	wreg,f,c
  3525  000818  D7FE               	bra	u1887
  3526  00081A  2E1E               	decfsz	??_TFT_Init^0,f,c
  3527  00081C  D7FC               	bra	u1887
  3528  00081E  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  3529  000820  D7FA               	bra	u1887
  3530                           
  3531                           ;TFT.c: 84: } else {
  3532  000822  EF1D  F004         	goto	l2563
  3533  000826                     l2561:
  3534                           
  3535                           ;TFT.c: 85: TFT_WriteRegister(cmd, data);
  3536  000826  C024  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  3537  00082A  C025  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  3538  00082E  C020  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  3539  000832  C021  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  3540  000836  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  3541  00083A                     l2563:
  3542  00083A  5022               	movf	TFT_Init@initSequenceSize^0,w,c
  3543  00083C  1826               	xorwf	TFT_Init@i^0,w,c
  3544  00083E  E107               	bnz	u1411
  3545  000840  5023               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  3546  000842  1827               	xorwf	(TFT_Init@i+1)^0,w,c
  3547  000844  A4D8               	btfss	status,2,c
  3548  000846  EF27  F004         	goto	u1411
  3549  00084A  EF29  F004         	goto	u1410
  3550  00084E                     u1411:
  3551  00084E  EFDA  F003         	goto	l2551
  3552  000852                     u1410:
  3553  000852                     
  3554                           ;TFT.c: 86: };TFT.c: 87: };TFT.c: 90: TFT_FullScreen();
  3555  000852  EC41  F009         	call	_TFT_FullScreen	;wreg free
  3556  000856                     
  3557                           ;TFT.c: 91: TFT_FillScreen(0x0000);
  3558  000856  0E00               	movlw	0
  3559  000858  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  3560  00085A  0E00               	movlw	0
  3561  00085C  6E1C               	movwf	TFT_FillScreen@color^0,c
  3562  00085E  ECFE  F007         	call	_TFT_FillScreen	;wreg free
  3563  000862  0012               	return		;funcret
  3564  000864                     __end_of_TFT_Init:
  3565                           	opt callstack 0
  3566                           
  3567 ;; *************** function _TFT_Reset *****************
  3568 ;; Defined at:
  3569 ;;		line 46 in file "TFT.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;		None
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;		None
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3583 ;;      Params:         0       0       0       0       0       0       0       0       0
  3584 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3585 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3586 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3587 ;;Total ram usage:        1 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    2
  3590 ;; This function calls:
  3591 ;;		Nothing
  3592 ;; This function is called by:
  3593 ;;		_TFT_Init
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text9
  3598  0012A8                     __ptext9:
  3599                           	opt callstack 0
  3600  0012A8                     _TFT_Reset:
  3601                           	opt callstack 27
  3602  0012A8                     
  3603                           ;TFT.c: 47: TRISB = 0x00;;
  3604  0012A8  0E00               	movlw	0
  3605  0012AA  6E93               	movwf	147,c	;volatile
  3606  0012AC                     
  3607                           ;TFT.c: 48: PORTCbits.RC0 = 1;;
  3608  0012AC  8082               	bsf	130,0,c	;volatile
  3609  0012AE                     
  3610                           ;TFT.c: 49: PORTAbits.RA5 = 1;;
  3611  0012AE  8A80               	bsf	128,5,c	;volatile
  3612  0012B0                     
  3613                           ;TFT.c: 50: PORTAbits.RA4 = 1;;
  3614  0012B0  8880               	bsf	128,4,c	;volatile
  3615  0012B2                     
  3616                           ;TFT.c: 51: PORTCbits.RC2 = 0;;
  3617  0012B2  9482               	bcf	130,2,c	;volatile
  3618  0012B4                     
  3619                           ;TFT.c: 52: _delay((unsigned long)((2)*(48000000/4000.0)));
  3620  0012B4  0E20               	movlw	32
  3621  0012B6  6E05               	movwf	??_TFT_Reset^0,c
  3622  0012B8  0E2A               	movlw	42
  3623  0012BA                     u1897:
  3624  0012BA  2EE8               	decfsz	wreg,f,c
  3625  0012BC  D7FE               	bra	u1897
  3626  0012BE  2E05               	decfsz	??_TFT_Reset^0,f,c
  3627  0012C0  D7FC               	bra	u1897
  3628  0012C2                     
  3629                           ;TFT.c: 53: PORTCbits.RC2 = 1;;
  3630  0012C2  8482               	bsf	130,2,c	;volatile
  3631  0012C4  0012               	return		;funcret
  3632  0012C6                     __end_of_TFT_Reset:
  3633                           	opt callstack 0
  3634                           
  3635 ;; *************** function _Ecg_Init *****************
  3636 ;; Defined at:
  3637 ;;		line 12 in file "ecg.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3651 ;;      Params:         0       0       0       0       0       0       0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3654 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3655 ;;Total ram usage:        0 bytes
  3656 ;; Hardware stack levels used:    1
  3657 ;; Hardware stack levels required when called:    9
  3658 ;; This function calls:
  3659 ;;		_Ecg_Background_Leads_Failure
  3660 ;;		_Ecg_Background_Leads_Ok
  3661 ;;		_Ecg_CheckLeads
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text10
  3668  00122C                     __ptext10:
  3669                           	opt callstack 0
  3670  00122C                     _Ecg_Init:
  3671                           	opt callstack 21
  3672  00122C                     
  3673                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  3674  00122C  ECB2  F007         	call	_Ecg_CheckLeads	;wreg free
  3675  001230  5005               	movf	?_Ecg_CheckLeads^0,w,c
  3676  001232  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  3677  001234  A4D8               	btfss	status,2,c
  3678  001236  EF1F  F009         	goto	u1431
  3679  00123A  EF21  F009         	goto	u1430
  3680  00123E                     u1431:
  3681  00123E  EF25  F009         	goto	l2597
  3682  001242                     u1430:
  3683  001242                     
  3684                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  3685  001242  EC3B  F006         	call	_Ecg_Background_Leads_Ok	;wreg free
  3686                           
  3687                           ;ecg.c: 15: } else {
  3688  001246  EF27  F009         	goto	l2599
  3689  00124A                     l2597:
  3690                           
  3691                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  3692  00124A  ECC2  F008         	call	_Ecg_Background_Leads_Failure	;wreg free
  3693  00124E                     l2599:
  3694                           
  3695                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  3696  00124E  0E00               	movlw	0
  3697  001250  0100               	movlb	0	; () banked
  3698  001252  6FEA               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  3699  001254                     
  3700                           ; BSR set to: 0
  3701                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  3702  001254  0E00               	movlw	0
  3703  001256  6FEF               	movwf	(_ECG_BUFFER+4)& (0+255),b
  3704  001258                     
  3705                           ; BSR set to: 0
  3706                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  3707  001258  8C4E               	bsf	_ECG_HEARTRATE^0,6,c
  3708  00125A                     
  3709                           ; BSR set to: 0
  3710  00125A  0012               	return		;funcret
  3711  00125C                     __end_of_Ecg_Init:
  3712                           	opt callstack 0
  3713                           
  3714 ;; *************** function _Ecg_CheckLeads *****************
  3715 ;; Defined at:
  3716 ;;		line 141 in file "ecg.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;                  2    4[COMRAM] unsigned int 
  3723 ;; Registers used:
  3724 ;;		wreg, status,2, status,0
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3730 ;;      Params:         2       0       0       0       0       0       0       0       0
  3731 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3732 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3733 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3734 ;;Total ram usage:        4 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    2
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_Ecg_Init
  3741 ;;		_Ecg_ProcessEcg
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text11
  3746  000F64                     __ptext11:
  3747                           	opt callstack 0
  3748  000F64                     _Ecg_CheckLeads:
  3749                           	opt callstack 27
  3750  000F64                     
  3751                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  3752  000F64  0E00               	movlw	0
  3753  000F66  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  3754  000F68                     
  3755                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  3756  000F68  AA82               	btfss	130,5,c	;volatile
  3757  000F6A  EFB9  F007         	goto	u1331
  3758  000F6E  EFBB  F007         	goto	u1330
  3759  000F72                     u1331:
  3760  000F72  EFBC  F007         	goto	l2497
  3761  000F76                     u1330:
  3762  000F76  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  3763  000F78                     l2497:
  3764                           
  3765                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  3766  000F78  A882               	btfss	130,4,c	;volatile
  3767  000F7A  EFC1  F007         	goto	u1341
  3768  000F7E  EFC3  F007         	goto	u1340
  3769  000F82                     u1341:
  3770  000F82  EFC4  F007         	goto	l2501
  3771  000F86                     u1340:
  3772  000F86  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  3773  000F88                     l2501:
  3774                           
  3775                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  3776  000F88  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  3777  000F8A  B4D8               	btfsc	status,2,c
  3778  000F8C  EFCA  F007         	goto	u1351
  3779  000F90  EFCE  F007         	goto	u1350
  3780  000F94                     u1351:
  3781  000F94  6A07               	clrf	??_Ecg_CheckLeads^0,c
  3782  000F96  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  3783  000F98  EFCF  F007         	goto	u1368
  3784  000F9C                     u1350:
  3785  000F9C  6A07               	clrf	??_Ecg_CheckLeads^0,c
  3786  000F9E                     u1368:
  3787  000F9E  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  3788  000FA0  5052               	movf	_ECG_FLAGS^0,w,c
  3789  000FA2  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  3790  000FA4  0BFD               	andlw	-3
  3791  000FA6  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  3792  000FA8  6E52               	movwf	_ECG_FLAGS^0,c
  3793  000FAA                     
  3794                           ;ecg.c: 146: return leadsStatus;
  3795  000FAA  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  3796  000FAE  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  3797  000FB0  0012               	return		;funcret
  3798  000FB2                     __end_of_Ecg_CheckLeads:
  3799                           	opt callstack 0
  3800                           
  3801 ;; *************** function _Ecg_Background_Leads_Ok *****************
  3802 ;; Defined at:
  3803 ;;		line 180 in file "ecg.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3817 ;;      Params:         0       0       0       0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    8
  3824 ;; This function calls:
  3825 ;;		_TFT_DrawLine
  3826 ;;		_TFT_DrawString
  3827 ;;		_TFT_FillScreen
  3828 ;; This function is called by:
  3829 ;;		_Ecg_Init
  3830 ;;		_Ecg_ProcessEcg
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text12
  3835  000C76                     __ptext12:
  3836                           	opt callstack 0
  3837  000C76                     _Ecg_Background_Leads_Ok:
  3838                           	opt callstack 21
  3839  000C76                     
  3840                           ;ecg.c: 181: TFT_FillScreen(0x0000);
  3841  000C76  0E00               	movlw	0
  3842  000C78  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  3843  000C7A  0E00               	movlw	0
  3844  000C7C  6E1C               	movwf	TFT_FillScreen@color^0,c
  3845  000C7E  ECFE  F007         	call	_TFT_FillScreen	;wreg free
  3846  000C82                     
  3847                           ;ecg.c: 182: TFT_DrawString(8, (400 - 10), "Frequenza:", 0xFFFF, 0x0000, 2);
  3848  000C82  0E00               	movlw	0
  3849  000C84  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  3850  000C86  0E08               	movlw	8
  3851  000C88  6E3F               	movwf	TFT_DrawString@x^0,c
  3852  000C8A  0E01               	movlw	1
  3853  000C8C  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  3854  000C8E  0E86               	movlw	134
  3855  000C90  6E41               	movwf	TFT_DrawString@y^0,c
  3856  000C92  0EEA               	movlw	low STR_6
  3857  000C94  6E43               	movwf	TFT_DrawString@str^0,c
  3858  000C96  0E5F               	movlw	high STR_6
  3859  000C98  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  3860  000C9A  0EFF               	movlw	255
  3861  000C9C  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  3862  000C9E  6845               	setf	TFT_DrawString@color^0,c
  3863  000CA0  0E00               	movlw	0
  3864  000CA2  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  3865  000CA4  0E00               	movlw	0
  3866  000CA6  6E47               	movwf	TFT_DrawString@bg^0,c
  3867  000CA8  0E02               	movlw	2
  3868  000CAA  6E49               	movwf	TFT_DrawString@size^0,c
  3869  000CAC  EC2F  F005         	call	_TFT_DrawString	;wreg free
  3870  000CB0                     
  3871                           ;ecg.c: 183: TFT_DrawLine((33 - 1), 0, (33 - 1), 400, 0xFFFF);
  3872  000CB0  0E00               	movlw	0
  3873  000CB2  6E14               	movwf	(TFT_DrawLine@x0+1)^0,c
  3874  000CB4  0E20               	movlw	32
  3875  000CB6  6E13               	movwf	TFT_DrawLine@x0^0,c
  3876  000CB8  0E00               	movlw	0
  3877  000CBA  6E16               	movwf	(TFT_DrawLine@y0+1)^0,c
  3878  000CBC  0E00               	movlw	0
  3879  000CBE  6E15               	movwf	TFT_DrawLine@y0^0,c
  3880  000CC0  0E00               	movlw	0
  3881  000CC2  6E18               	movwf	(TFT_DrawLine@x1+1)^0,c
  3882  000CC4  0E20               	movlw	32
  3883  000CC6  6E17               	movwf	TFT_DrawLine@x1^0,c
  3884  000CC8  0E01               	movlw	1
  3885  000CCA  6E1A               	movwf	(TFT_DrawLine@y1+1)^0,c
  3886  000CCC  0E90               	movlw	144
  3887  000CCE  6E19               	movwf	TFT_DrawLine@y1^0,c
  3888  000CD0  0EFF               	movlw	255
  3889  000CD2  6E1C               	movwf	(TFT_DrawLine@color+1)^0,c
  3890  000CD4  681B               	setf	TFT_DrawLine@color^0,c
  3891  000CD6  EC0E  F002         	call	_TFT_DrawLine	;wreg free
  3892  000CDA                     
  3893                           ;ecg.c: 184: Ecg_Y = 400 - 1;
  3894  000CDA  0E01               	movlw	1
  3895  000CDC  6E56               	movwf	(_Ecg_Y+1)^0,c
  3896  000CDE  0E8F               	movlw	143
  3897  000CE0  6E55               	movwf	_Ecg_Y^0,c
  3898  000CE2                     
  3899                           ;ecg.c: 185: Ecg_Yold = 400 - 1;
  3900  000CE2  0E01               	movlw	1
  3901  000CE4  0100               	movlb	0	; () banked
  3902  000CE6  6FD0               	movwf	(_Ecg_Yold+1)& (0+255),b
  3903  000CE8  0E8F               	movlw	143
  3904  000CEA  6FCF               	movwf	_Ecg_Yold& (0+255),b
  3905  000CEC                     
  3906                           ; BSR set to: 0
  3907  000CEC  0012               	return		;funcret
  3908  000CEE                     __end_of_Ecg_Background_Leads_Ok:
  3909                           	opt callstack 0
  3910                           
  3911 ;; *************** function _TFT_DrawLine *****************
  3912 ;; Defined at:
  3913 ;;		line 100 in file "TFT.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  x0              2   18[COMRAM] int 
  3916 ;;  y0              2   20[COMRAM] int 
  3917 ;;  x1              2   22[COMRAM] int 
  3918 ;;  y1              2   24[COMRAM] int 
  3919 ;;  color           2   26[COMRAM] unsigned int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  t               2   37[COMRAM] int 
  3922 ;;  t               2   35[COMRAM] int 
  3923 ;;  t               2   33[COMRAM] int 
  3924 ;;  t               2   31[COMRAM] int 
  3925 ;;  dx              2   47[COMRAM] int 
  3926 ;;  steep           2   45[COMRAM] int 
  3927 ;;  err             2   43[COMRAM] int 
  3928 ;;  ystep           2   41[COMRAM] int 
  3929 ;;  dy              2   39[COMRAM] int 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  1    wreg      void 
  3932 ;; Registers used:
  3933 ;;		wreg, status,2, status,0, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3939 ;;      Params:        10       0       0       0       0       0       0       0       0
  3940 ;;      Locals:        18       0       0       0       0       0       0       0       0
  3941 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3942 ;;      Totals:        31       0       0       0       0       0       0       0       0
  3943 ;;Total ram usage:       31 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    4
  3946 ;; This function calls:
  3947 ;;		_TFT_DrawPixel
  3948 ;;		___awdiv
  3949 ;;		_abs
  3950 ;; This function is called by:
  3951 ;;		_Ecg_Background_Leads_Ok
  3952 ;;		_Ecg_Draw
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text13
  3957  00041C                     __ptext13:
  3958                           	opt callstack 0
  3959  00041C                     _TFT_DrawLine:
  3960                           	opt callstack 24
  3961  00041C                     
  3962                           ;TFT.c: 101: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  3963  00041C  5013               	movf	TFT_DrawLine@x0^0,w,c
  3964  00041E  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  3965  000420  6E05               	movwf	abs@a^0,c
  3966  000422  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  3967  000424  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  3968  000426  6E06               	movwf	(abs@a+1)^0,c
  3969  000428  ECFC  F008         	call	_abs	;wreg free
  3970  00042C  C005  F01D         	movff	?_abs,??_TFT_DrawLine
  3971  000430  C006  F01E         	movff	?_abs+1,??_TFT_DrawLine+1
  3972  000434  5015               	movf	TFT_DrawLine@y0^0,w,c
  3973  000436  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  3974  000438  6E05               	movwf	abs@a^0,c
  3975  00043A  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  3976  00043C  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  3977  00043E  6E06               	movwf	(abs@a+1)^0,c
  3978  000440  ECFC  F008         	call	_abs	;wreg free
  3979  000444  5005               	movf	?_abs^0,w,c
  3980  000446  5C1D               	subwf	??_TFT_DrawLine^0,w,c
  3981  000448  501E               	movf	(??_TFT_DrawLine+1)^0,w,c
  3982  00044A  0A80               	xorlw	128
  3983  00044C  6E1F               	movwf	(??_TFT_DrawLine+2)^0,c
  3984  00044E  5006               	movf	(?_abs+1)^0,w,c
  3985  000450  0A80               	xorlw	128
  3986  000452  581F               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  3987  000454  A0D8               	btfss	status,0,c
  3988  000456  EF2F  F002         	goto	u1171
  3989  00045A  EF32  F002         	goto	u1170
  3990  00045E                     u1171:
  3991  00045E  0E01               	movlw	1
  3992  000460  EF33  F002         	goto	u1180
  3993  000464                     u1170:
  3994  000464  0E00               	movlw	0
  3995  000466                     u1180:
  3996  000466  6E2E               	movwf	TFT_DrawLine@steep^0,c
  3997  000468  6A2F               	clrf	(TFT_DrawLine@steep+1)^0,c
  3998  00046A                     
  3999                           ;TFT.c: 102: if(steep) {
  4000  00046A  502E               	movf	TFT_DrawLine@steep^0,w,c
  4001  00046C  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  4002  00046E  B4D8               	btfsc	status,2,c
  4003  000470  EF3C  F002         	goto	u1191
  4004  000474  EF3E  F002         	goto	u1190
  4005  000478                     u1191:
  4006  000478  EF56  F002         	goto	l2411
  4007  00047C                     u1190:
  4008  00047C                     
  4009                           ;TFT.c: 103: { int16_t t = x0; x0 = y0; y0 = t; };
  4010  00047C  C013  F020         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  4011  000480  C014  F021         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  4012  000484  C015  F013         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  4013  000488  C016  F014         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  4014  00048C  C020  F015         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  4015  000490  C021  F016         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  4016                           
  4017                           ;TFT.c: 104: { int16_t t = x1; x1 = y1; y1 = t; };
  4018  000494  C017  F022         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_721
  4019  000498  C018  F023         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_721+1
  4020  00049C  C019  F017         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  4021  0004A0  C01A  F018         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  4022  0004A4  C022  F019         	movff	TFT_DrawLine@t_721,TFT_DrawLine@y1
  4023  0004A8  C023  F01A         	movff	TFT_DrawLine@t_721+1,TFT_DrawLine@y1+1
  4024  0004AC                     l2411:
  4025                           
  4026                           ;TFT.c: 105: };TFT.c: 106: if(x0 > x1) {
  4027  0004AC  5013               	movf	TFT_DrawLine@x0^0,w,c
  4028  0004AE  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  4029  0004B0  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  4030  0004B2  0A80               	xorlw	128
  4031  0004B4  6E1D               	movwf	??_TFT_DrawLine^0,c
  4032  0004B6  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  4033  0004B8  0A80               	xorlw	128
  4034  0004BA  581D               	subwfb	??_TFT_DrawLine^0,w,c
  4035  0004BC  B0D8               	btfsc	status,0,c
  4036  0004BE  EF63  F002         	goto	u1201
  4037  0004C2  EF65  F002         	goto	u1200
  4038  0004C6                     u1201:
  4039  0004C6  EF7D  F002         	goto	l2415
  4040  0004CA                     u1200:
  4041  0004CA                     
  4042                           ;TFT.c: 107: { int16_t t = x0; x0 = x1; x1 = t; };
  4043  0004CA  C013  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_722
  4044  0004CE  C014  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_722+1
  4045  0004D2  C017  F013         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  4046  0004D6  C018  F014         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  4047  0004DA  C024  F017         	movff	TFT_DrawLine@t_722,TFT_DrawLine@x1
  4048  0004DE  C025  F018         	movff	TFT_DrawLine@t_722+1,TFT_DrawLine@x1+1
  4049                           
  4050                           ;TFT.c: 108: { int16_t t = y0; y0 = y1; y1 = t; };
  4051  0004E2  C015  F026         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_723
  4052  0004E6  C016  F027         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_723+1
  4053  0004EA  C019  F015         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  4054  0004EE  C01A  F016         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  4055  0004F2  C026  F019         	movff	TFT_DrawLine@t_723,TFT_DrawLine@y1
  4056  0004F6  C027  F01A         	movff	TFT_DrawLine@t_723+1,TFT_DrawLine@y1+1
  4057  0004FA                     l2415:
  4058                           
  4059                           ;TFT.c: 109: };TFT.c: 111: int16_t dx, dy;;TFT.c: 112: dx = x1 - x0;
  4060  0004FA  5013               	movf	TFT_DrawLine@x0^0,w,c
  4061  0004FC  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  4062  0004FE  6E30               	movwf	TFT_DrawLine@dx^0,c
  4063  000500  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  4064  000502  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  4065  000504  6E31               	movwf	(TFT_DrawLine@dx+1)^0,c
  4066  000506                     
  4067                           ;TFT.c: 113: dy = abs(y1 - y0);
  4068  000506  5015               	movf	TFT_DrawLine@y0^0,w,c
  4069  000508  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  4070  00050A  6E05               	movwf	abs@a^0,c
  4071  00050C  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  4072  00050E  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  4073  000510  6E06               	movwf	(abs@a+1)^0,c
  4074  000512  ECFC  F008         	call	_abs	;wreg free
  4075  000516  C005  F028         	movff	?_abs,TFT_DrawLine@dy
  4076  00051A  C006  F029         	movff	?_abs+1,TFT_DrawLine@dy+1
  4077  00051E                     
  4078                           ;TFT.c: 115: int16_t err = dx / 2;
  4079  00051E  C030  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  4080  000522  C031  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  4081  000526  0E00               	movlw	0
  4082  000528  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4083  00052A  0E02               	movlw	2
  4084  00052C  6E07               	movwf	___awdiv@divisor^0,c
  4085  00052E  EC32  F004         	call	___awdiv	;wreg free
  4086  000532  C005  F02C         	movff	?___awdiv,TFT_DrawLine@err
  4087  000536  C006  F02D         	movff	?___awdiv+1,TFT_DrawLine@err+1
  4088                           
  4089                           ;TFT.c: 116: int16_t ystep;;TFT.c: 118: if(y0 < y1) {
  4090  00053A  5019               	movf	TFT_DrawLine@y1^0,w,c
  4091  00053C  5C15               	subwf	TFT_DrawLine@y0^0,w,c
  4092  00053E  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  4093  000540  0A80               	xorlw	128
  4094  000542  6E1D               	movwf	??_TFT_DrawLine^0,c
  4095  000544  501A               	movf	(TFT_DrawLine@y1+1)^0,w,c
  4096  000546  0A80               	xorlw	128
  4097  000548  581D               	subwfb	??_TFT_DrawLine^0,w,c
  4098  00054A  B0D8               	btfsc	status,0,c
  4099  00054C  EFAA  F002         	goto	u1211
  4100  000550  EFAC  F002         	goto	u1210
  4101  000554                     u1211:
  4102  000554  EFB2  F002         	goto	l195
  4103  000558                     u1210:
  4104  000558                     
  4105                           ;TFT.c: 119: ystep = 1;
  4106  000558  0E00               	movlw	0
  4107  00055A  6E2B               	movwf	(TFT_DrawLine@ystep+1)^0,c
  4108  00055C  0E01               	movlw	1
  4109  00055E  6E2A               	movwf	TFT_DrawLine@ystep^0,c
  4110                           
  4111                           ;TFT.c: 120: } else {
  4112  000560  EFF2  F002         	goto	l2437
  4113  000564                     l195:
  4114                           
  4115                           ;TFT.c: 121: ystep = -1;
  4116  000564  682A               	setf	TFT_DrawLine@ystep^0,c
  4117  000566  682B               	setf	(TFT_DrawLine@ystep+1)^0,c
  4118  000568  EFF2  F002         	goto	l2437
  4119  00056C                     l2423:
  4120                           
  4121                           ;TFT.c: 125: if(steep) {
  4122  00056C  502E               	movf	TFT_DrawLine@steep^0,w,c
  4123  00056E  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  4124  000570  B4D8               	btfsc	status,2,c
  4125  000572  EFBD  F002         	goto	u1221
  4126  000576  EFBF  F002         	goto	u1220
  4127  00057A                     u1221:
  4128  00057A  EFCF  F002         	goto	l2427
  4129  00057E                     u1220:
  4130  00057E                     
  4131                           ;TFT.c: 126: TFT_DrawPixel(y0, x0, color);
  4132  00057E  C015  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  4133  000582  C016  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  4134  000586  C013  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  4135  00058A  C014  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  4136  00058E  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  4137  000592  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  4138  000596  ECA3  F008         	call	_TFT_DrawPixel	;wreg free
  4139                           
  4140                           ;TFT.c: 127: } else {
  4141  00059A  EFDD  F002         	goto	l2429
  4142  00059E                     l2427:
  4143                           
  4144                           ;TFT.c: 128: TFT_DrawPixel(x0, y0, color);
  4145  00059E  C013  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  4146  0005A2  C014  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  4147  0005A6  C015  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  4148  0005AA  C016  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  4149  0005AE  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  4150  0005B2  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  4151  0005B6  ECA3  F008         	call	_TFT_DrawPixel	;wreg free
  4152  0005BA                     l2429:
  4153                           
  4154                           ;TFT.c: 129: };TFT.c: 130: err -= dy;
  4155  0005BA  5028               	movf	TFT_DrawLine@dy^0,w,c
  4156  0005BC  5E2C               	subwf	TFT_DrawLine@err^0,f,c
  4157  0005BE  5029               	movf	(TFT_DrawLine@dy+1)^0,w,c
  4158  0005C0  5A2D               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  4159  0005C2                     
  4160                           ;TFT.c: 131: if(err < 0) {
  4161  0005C2  BE2D               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  4162  0005C4  EFE8  F002         	goto	u1230
  4163  0005C8  EFE6  F002         	goto	u1231
  4164  0005CC                     u1231:
  4165  0005CC  EFF0  F002         	goto	l2435
  4166  0005D0                     u1230:
  4167  0005D0                     
  4168                           ;TFT.c: 132: y0 += ystep;
  4169  0005D0  502A               	movf	TFT_DrawLine@ystep^0,w,c
  4170  0005D2  2615               	addwf	TFT_DrawLine@y0^0,f,c
  4171  0005D4  502B               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  4172  0005D6  2216               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  4173                           
  4174                           ;TFT.c: 133: err += dx;
  4175  0005D8  5030               	movf	TFT_DrawLine@dx^0,w,c
  4176  0005DA  262C               	addwf	TFT_DrawLine@err^0,f,c
  4177  0005DC  5031               	movf	(TFT_DrawLine@dx+1)^0,w,c
  4178  0005DE  222D               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  4179  0005E0                     l2435:
  4180  0005E0  4A13               	infsnz	TFT_DrawLine@x0^0,f,c
  4181  0005E2  2A14               	incf	(TFT_DrawLine@x0+1)^0,f,c
  4182  0005E4                     l2437:
  4183  0005E4  5013               	movf	TFT_DrawLine@x0^0,w,c
  4184  0005E6  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  4185  0005E8  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  4186  0005EA  0A80               	xorlw	128
  4187  0005EC  6E1D               	movwf	??_TFT_DrawLine^0,c
  4188  0005EE  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  4189  0005F0  0A80               	xorlw	128
  4190  0005F2  581D               	subwfb	??_TFT_DrawLine^0,w,c
  4191  0005F4  B0D8               	btfsc	status,0,c
  4192  0005F6  EFFF  F002         	goto	u1241
  4193  0005FA  EF01  F003         	goto	u1240
  4194  0005FE                     u1241:
  4195  0005FE  EFB6  F002         	goto	l2423
  4196  000602                     u1240:
  4197  000602  0012               	return		;funcret
  4198  000604                     __end_of_TFT_DrawLine:
  4199                           	opt callstack 0
  4200                           
  4201 ;; *************** function _abs *****************
  4202 ;; Defined at:
  4203 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  a               2    4[COMRAM] int 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;		None
  4208 ;; Return value:  Size  Location     Type
  4209 ;;                  2    4[COMRAM] int 
  4210 ;; Registers used:
  4211 ;;		wreg, status,2, status,0
  4212 ;; Tracked objects:
  4213 ;;		On entry : 0/0
  4214 ;;		On exit  : 0/0
  4215 ;;		Unchanged: 0/0
  4216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4217 ;;      Params:         2       0       0       0       0       0       0       0       0
  4218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4219 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4220 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4221 ;;Total ram usage:        4 bytes
  4222 ;; Hardware stack levels used:    1
  4223 ;; Hardware stack levels required when called:    2
  4224 ;; This function calls:
  4225 ;;		Nothing
  4226 ;; This function is called by:
  4227 ;;		_TFT_DrawLine
  4228 ;;		_Ecg_ProcessHeartbeat
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text14
  4233  0011F8                     __ptext14:
  4234                           	opt callstack 0
  4235  0011F8                     _abs:
  4236                           	opt callstack 25
  4237  0011F8  BE06               	btfsc	(abs@a+1)^0,7,c
  4238  0011FA  EF03  F009         	goto	u1000
  4239  0011FE  EF01  F009         	goto	u1001
  4240  001202                     u1001:
  4241  001202  EF11  F009         	goto	l1175
  4242  001206                     u1000:
  4243  001206  C005  F007         	movff	abs@a,??_abs
  4244  00120A  C006  F008         	movff	abs@a+1,??_abs+1
  4245  00120E  1E07               	comf	??_abs^0,f,c
  4246  001210  1E08               	comf	(??_abs+1)^0,f,c
  4247  001212  4A07               	infsnz	??_abs^0,f,c
  4248  001214  2A08               	incf	(??_abs+1)^0,f,c
  4249  001216  C007  F005         	movff	??_abs,?_abs
  4250  00121A  C008  F006         	movff	??_abs+1,?_abs+1
  4251  00121E  EF15  F009         	goto	l1176
  4252  001222                     l1175:
  4253  001222  C005  F005         	movff	abs@a,?_abs
  4254  001226  C006  F006         	movff	abs@a+1,?_abs+1
  4255  00122A                     l1176:
  4256  00122A  0012               	return		;funcret
  4257  00122C                     __end_of_abs:
  4258                           	opt callstack 0
  4259                           
  4260 ;; *************** function ___awdiv *****************
  4261 ;; Defined at:
  4262 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  dividend        2    4[COMRAM] int 
  4265 ;;  divisor         2    6[COMRAM] int 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  quotient        2   10[COMRAM] int 
  4268 ;;  sign            1    9[COMRAM] unsigned char 
  4269 ;;  counter         1    8[COMRAM] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  2    4[COMRAM] int 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4279 ;;      Params:         4       0       0       0       0       0       0       0       0
  4280 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4282 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4283 ;;Total ram usage:        8 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    2
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_TFT_DrawLine
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           	psect	text15
  4294  000864                     __ptext15:
  4295                           	opt callstack 0
  4296  000864                     ___awdiv:
  4297                           	opt callstack 25
  4298  000864  0E00               	movlw	0
  4299  000866  6E0A               	movwf	___awdiv@sign^0,c
  4300  000868  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  4301  00086A  EF3B  F004         	goto	u1080
  4302  00086E  EF39  F004         	goto	u1081
  4303  000872                     u1081:
  4304  000872  EF41  F004         	goto	l2355
  4305  000876                     u1080:
  4306  000876  6C07               	negf	___awdiv@divisor^0,c
  4307  000878  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  4308  00087A  B0D8               	btfsc	status,0,c
  4309  00087C  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  4310  00087E  0E01               	movlw	1
  4311  000880  6E0A               	movwf	___awdiv@sign^0,c
  4312  000882                     l2355:
  4313  000882  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  4314  000884  EF48  F004         	goto	u1090
  4315  000888  EF46  F004         	goto	u1091
  4316  00088C                     u1091:
  4317  00088C  EF4E  F004         	goto	l2361
  4318  000890                     u1090:
  4319  000890  6C05               	negf	___awdiv@dividend^0,c
  4320  000892  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  4321  000894  B0D8               	btfsc	status,0,c
  4322  000896  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  4323  000898  0E01               	movlw	1
  4324  00089A  1A0A               	xorwf	___awdiv@sign^0,f,c
  4325  00089C                     l2361:
  4326  00089C  0E00               	movlw	0
  4327  00089E  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  4328  0008A0  0E00               	movlw	0
  4329  0008A2  6E0B               	movwf	___awdiv@quotient^0,c
  4330  0008A4  5007               	movf	___awdiv@divisor^0,w,c
  4331  0008A6  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  4332  0008A8  B4D8               	btfsc	status,2,c
  4333  0008AA  EF59  F004         	goto	u1101
  4334  0008AE  EF5B  F004         	goto	u1100
  4335  0008B2                     u1101:
  4336  0008B2  EF83  F004         	goto	l2383
  4337  0008B6                     u1100:
  4338  0008B6  0E01               	movlw	1
  4339  0008B8  6E09               	movwf	___awdiv@counter^0,c
  4340  0008BA  EF63  F004         	goto	l2369
  4341  0008BE                     l2367:
  4342  0008BE  90D8               	bcf	status,0,c
  4343  0008C0  3607               	rlcf	___awdiv@divisor^0,f,c
  4344  0008C2  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  4345  0008C4  2A09               	incf	___awdiv@counter^0,f,c
  4346  0008C6                     l2369:
  4347  0008C6  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  4348  0008C8  EF68  F004         	goto	u1111
  4349  0008CC  EF6A  F004         	goto	u1110
  4350  0008D0                     u1111:
  4351  0008D0  EF5F  F004         	goto	l2367
  4352  0008D4                     u1110:
  4353  0008D4                     l2371:
  4354  0008D4  90D8               	bcf	status,0,c
  4355  0008D6  360B               	rlcf	___awdiv@quotient^0,f,c
  4356  0008D8  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  4357  0008DA  5007               	movf	___awdiv@divisor^0,w,c
  4358  0008DC  5C05               	subwf	___awdiv@dividend^0,w,c
  4359  0008DE  5008               	movf	(___awdiv@divisor+1)^0,w,c
  4360  0008E0  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  4361  0008E2  A0D8               	btfss	status,0,c
  4362  0008E4  EF76  F004         	goto	u1121
  4363  0008E8  EF78  F004         	goto	u1120
  4364  0008EC                     u1121:
  4365  0008EC  EF7D  F004         	goto	l2379
  4366  0008F0                     u1120:
  4367  0008F0  5007               	movf	___awdiv@divisor^0,w,c
  4368  0008F2  5E05               	subwf	___awdiv@dividend^0,f,c
  4369  0008F4  5008               	movf	(___awdiv@divisor+1)^0,w,c
  4370  0008F6  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  4371  0008F8  800B               	bsf	___awdiv@quotient^0,0,c
  4372  0008FA                     l2379:
  4373  0008FA  90D8               	bcf	status,0,c
  4374  0008FC  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  4375  0008FE  3207               	rrcf	___awdiv@divisor^0,f,c
  4376  000900  2E09               	decfsz	___awdiv@counter^0,f,c
  4377  000902  EF6A  F004         	goto	l2371
  4378  000906                     l2383:
  4379  000906  500A               	movf	___awdiv@sign^0,w,c
  4380  000908  B4D8               	btfsc	status,2,c
  4381  00090A  EF89  F004         	goto	u1131
  4382  00090E  EF8B  F004         	goto	u1130
  4383  000912                     u1131:
  4384  000912  EF8F  F004         	goto	l2387
  4385  000916                     u1130:
  4386  000916  6C0B               	negf	___awdiv@quotient^0,c
  4387  000918  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  4388  00091A  B0D8               	btfsc	status,0,c
  4389  00091C  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  4390  00091E                     l2387:
  4391  00091E  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  4392  000922  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  4393  000926  0012               	return		;funcret
  4394  000928                     __end_of___awdiv:
  4395                           	opt callstack 0
  4396                           
  4397 ;; *************** function _Ecg_Background_Leads_Failure *****************
  4398 ;; Defined at:
  4399 ;;		line 188 in file "ecg.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;		None
  4404 ;; Return value:  Size  Location     Type
  4405 ;;                  1    wreg      void 
  4406 ;; Registers used:
  4407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4413 ;;      Params:         0       0       0       0       0       0       0       0       0
  4414 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4416 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4417 ;;Total ram usage:        0 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    8
  4420 ;; This function calls:
  4421 ;;		_TFT_DrawString
  4422 ;;		_TFT_FillScreen
  4423 ;; This function is called by:
  4424 ;;		_Ecg_Init
  4425 ;;		_Ecg_ProcessEcg
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text16
  4430  001184                     __ptext16:
  4431                           	opt callstack 0
  4432  001184                     _Ecg_Background_Leads_Failure:
  4433                           	opt callstack 21
  4434  001184                     
  4435                           ;ecg.c: 189: TFT_FillScreen(0x0000);
  4436  001184  0E00               	movlw	0
  4437  001186  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  4438  001188  0E00               	movlw	0
  4439  00118A  6E1C               	movwf	TFT_FillScreen@color^0,c
  4440  00118C  ECFE  F007         	call	_TFT_FillScreen	;wreg free
  4441  001190                     
  4442                           ;ecg.c: 190: TFT_DrawString(70, 362, "*** Collegare elettrodi ***", 0xFFFF, 0x0000, 2);
  4443  001190  0E00               	movlw	0
  4444  001192  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  4445  001194  0E46               	movlw	70
  4446  001196  6E3F               	movwf	TFT_DrawString@x^0,c
  4447  001198  0E01               	movlw	1
  4448  00119A  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  4449  00119C  0E6A               	movlw	106
  4450  00119E  6E41               	movwf	TFT_DrawString@y^0,c
  4451  0011A0  0EA1               	movlw	low STR_7
  4452  0011A2  6E43               	movwf	TFT_DrawString@str^0,c
  4453  0011A4  0E5F               	movlw	high STR_7
  4454  0011A6  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  4455  0011A8  0EFF               	movlw	255
  4456  0011AA  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  4457  0011AC  6845               	setf	TFT_DrawString@color^0,c
  4458  0011AE  0E00               	movlw	0
  4459  0011B0  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  4460  0011B2  0E00               	movlw	0
  4461  0011B4  6E47               	movwf	TFT_DrawString@bg^0,c
  4462  0011B6  0E02               	movlw	2
  4463  0011B8  6E49               	movwf	TFT_DrawString@size^0,c
  4464  0011BA  EC2F  F005         	call	_TFT_DrawString	;wreg free
  4465  0011BE  0012               	return		;funcret
  4466  0011C0                     __end_of_Ecg_Background_Leads_Failure:
  4467                           	opt callstack 0
  4468                           
  4469 ;; *************** function _TFT_FillScreen *****************
  4470 ;; Defined at:
  4471 ;;		line 182 in file "TFT.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  color           2   27[COMRAM] unsigned int 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4485 ;;      Params:         2       0       0       0       0       0       0       0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4488 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    4
  4492 ;; This function calls:
  4493 ;;		_TFT_Flood
  4494 ;;		_TFT_WriteRegister
  4495 ;; This function is called by:
  4496 ;;		_TFT_Init
  4497 ;;		_Ecg_Background_Leads_Ok
  4498 ;;		_Ecg_Background_Leads_Failure
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text17
  4503  000FFC                     __ptext17:
  4504                           	opt callstack 0
  4505  000FFC                     _TFT_FillScreen:
  4506                           	opt callstack 25
  4507  000FFC                     
  4508                           ;TFT.c: 183: TFT_WriteRegister(0x0200, 0);
  4509  000FFC  0E02               	movlw	2
  4510  000FFE  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  4511  001000  0E00               	movlw	0
  4512  001002  6E05               	movwf	TFT_WriteRegister@reg^0,c
  4513  001004  0E00               	movlw	0
  4514  001006  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  4515  001008  0E00               	movlw	0
  4516  00100A  6E07               	movwf	TFT_WriteRegister@data^0,c
  4517  00100C  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  4518                           
  4519                           ;TFT.c: 184: TFT_WriteRegister(0x0201, 0);
  4520  001010  0E02               	movlw	2
  4521  001012  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  4522  001014  0E01               	movlw	1
  4523  001016  6E05               	movwf	TFT_WriteRegister@reg^0,c
  4524  001018  0E00               	movlw	0
  4525  00101A  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  4526  00101C  0E00               	movlw	0
  4527  00101E  6E07               	movwf	TFT_WriteRegister@data^0,c
  4528  001020  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  4529  001024                     
  4530                           ;TFT.c: 185: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  4531  001024  C01C  F00D         	movff	TFT_FillScreen@color,TFT_Flood@color
  4532  001028  C01D  F00E         	movff	TFT_FillScreen@color+1,TFT_Flood@color+1
  4533  00102C  0E00               	movlw	0
  4534  00102E  6E0F               	movwf	TFT_Flood@len^0,c
  4535  001030  0E77               	movlw	119
  4536  001032  6E10               	movwf	(TFT_Flood@len+1)^0,c
  4537  001034  0E01               	movlw	1
  4538  001036  6E11               	movwf	(TFT_Flood@len+2)^0,c
  4539  001038  0E00               	movlw	0
  4540  00103A  6E12               	movwf	(TFT_Flood@len+3)^0,c
  4541  00103C  EC02  F003         	call	_TFT_Flood	;wreg free
  4542  001040  0012               	return		;funcret
  4543  001042                     __end_of_TFT_FillScreen:
  4544                           	opt callstack 0
  4545                           
  4546 ;; *************** function _TFT_DrawString *****************
  4547 ;; Defined at:
  4548 ;;		line 213 in file "TFT.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  x               2   62[COMRAM] unsigned int 
  4551 ;;  y               2   64[COMRAM] unsigned int 
  4552 ;;  str             2   66[COMRAM] PTR const unsigned char 
  4553 ;;		 -> A6_SetSpeed@response(32), EUSART_RX.line(32), STR_7(28), STR_6(11), 
  4554 ;;		 -> Ecg_ProcessHeartRate@heartrateString(5), loop@response_128(32), EUSART_RX(100), loop@response(32), 
  4555 ;;  color           2   68[COMRAM] unsigned int 
  4556 ;;  bg              2   70[COMRAM] unsigned int 
  4557 ;;  size            1   72[COMRAM] unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4569 ;;      Params:        11       0       0       0       0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4572 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4573 ;;Total ram usage:       11 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    7
  4576 ;; This function calls:
  4577 ;;		_TFT_DrawChar
  4578 ;; This function is called by:
  4579 ;;		_loop
  4580 ;;		_Ecg_Background_Leads_Ok
  4581 ;;		_Ecg_Background_Leads_Failure
  4582 ;;		_Ecg_ProcessHeartRate
  4583 ;;		_EUSART_RX_Process
  4584 ;;		_A6_SetSpeed
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text18
  4589  000A5E                     __ptext18:
  4590                           	opt callstack 0
  4591  000A5E                     _TFT_DrawString:
  4592                           	opt callstack 22
  4593  000A5E                     
  4594                           ;TFT.c: 214: while(*str) {
  4595  000A5E  EF5E  F005         	goto	l2399
  4596  000A62                     l2393:
  4597                           
  4598                           ;TFT.c: 215: TFT_DrawChar(x, y, *str, color, bg, size);
  4599  000A62  C03F  F02A         	movff	TFT_DrawString@x,TFT_DrawChar@x
  4600  000A66  C040  F02B         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  4601  000A6A  C041  F02C         	movff	TFT_DrawString@y,TFT_DrawChar@y
  4602  000A6E  C042  F02D         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  4603  000A72  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  4604  000A76  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  4605  000A7A  6AF8               	clrf	tblptru,c
  4606  000A7C  0E07               	movlw	(high __ramtop+-1)
  4607  000A7E  64F7               	cpfsgt	tblptrh,c
  4608  000A80  D003               	bra	u1147
  4609  000A82  0008               	tblrd		*
  4610  000A84  50F5               	movf	tablat,w,c
  4611  000A86  D005               	bra	u1140
  4612  000A88                     u1147:
  4613  000A88  CFF6 FFE9          	movff	tblptrl,fsr0l
  4614  000A8C  CFF7 FFEA          	movff	tblptrh,fsr0h
  4615  000A90  50EF               	movf	indf0,w,c
  4616  000A92                     u1140:
  4617  000A92  6E2E               	movwf	TFT_DrawChar@c^0,c
  4618  000A94  C045  F02F         	movff	TFT_DrawString@color,TFT_DrawChar@color
  4619  000A98  C046  F030         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  4620  000A9C  C047  F031         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  4621  000AA0  C048  F032         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  4622  000AA4  C049  F033         	movff	TFT_DrawString@size,TFT_DrawChar@size
  4623  000AA8  EC14  F001         	call	_TFT_DrawChar	;wreg free
  4624  000AAC                     
  4625                           ;TFT.c: 216: y -= (6 * size);
  4626  000AAC  5049               	movf	TFT_DrawString@size^0,w,c
  4627  000AAE  0D06               	mullw	6
  4628  000AB0  50F3               	movf	243,w,c
  4629  000AB2  5E41               	subwf	TFT_DrawString@y^0,f,c
  4630  000AB4  50F4               	movf	244,w,c
  4631  000AB6  5A42               	subwfb	(TFT_DrawString@y+1)^0,f,c
  4632  000AB8                     
  4633                           ;TFT.c: 217: str++;
  4634  000AB8  4A43               	infsnz	TFT_DrawString@str^0,f,c
  4635  000ABA  2A44               	incf	(TFT_DrawString@str+1)^0,f,c
  4636  000ABC                     l2399:
  4637  000ABC  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  4638  000AC0  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  4639  000AC4  6AF8               	clrf	tblptru,c
  4640  000AC6  0E07               	movlw	(high __ramtop+-1)
  4641  000AC8  64F7               	cpfsgt	tblptrh,c
  4642  000ACA  D003               	bra	u1157
  4643  000ACC  0008               	tblrd		*
  4644  000ACE  50F5               	movf	tablat,w,c
  4645  000AD0  D005               	bra	u1150
  4646  000AD2                     u1157:
  4647  000AD2  CFF6 FFE9          	movff	tblptrl,fsr0l
  4648  000AD6  CFF7 FFEA          	movff	tblptrh,fsr0h
  4649  000ADA  50EF               	movf	indf0,w,c
  4650  000ADC                     u1150:
  4651  000ADC  0900               	iorlw	0
  4652  000ADE  A4D8               	btfss	status,2,c
  4653  000AE0  EF74  F005         	goto	u1161
  4654  000AE4  EF76  F005         	goto	u1160
  4655  000AE8                     u1161:
  4656  000AE8  EF31  F005         	goto	l2393
  4657  000AEC                     u1160:
  4658  000AEC  0012               	return		;funcret
  4659  000AEE                     __end_of_TFT_DrawString:
  4660                           	opt callstack 0
  4661                           
  4662 ;; *************** function _TFT_DrawChar *****************
  4663 ;; Defined at:
  4664 ;;		line 192 in file "TFT.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  x               2   41[COMRAM] unsigned int 
  4667 ;;  y               2   43[COMRAM] unsigned int 
  4668 ;;  c               1   45[COMRAM] unsigned char 
  4669 ;;  color           2   46[COMRAM] unsigned int 
  4670 ;;  bg              2   48[COMRAM] unsigned int 
  4671 ;;  size            1   50[COMRAM] unsigned char 
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  j               1   60[COMRAM] char 
  4674 ;;  line            1   55[COMRAM] unsigned char 
  4675 ;;  i               1   61[COMRAM] char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    wreg      void 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4685 ;;      Params:        10       0       0       0       0       0       0       0       0
  4686 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4687 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4688 ;;      Totals:        21       0       0       0       0       0       0       0       0
  4689 ;;Total ram usage:       21 bytes
  4690 ;; Hardware stack levels used:    1
  4691 ;; Hardware stack levels required when called:    6
  4692 ;; This function calls:
  4693 ;;		_TFT_DrawFillRect
  4694 ;;		_TFT_DrawPixel
  4695 ;;		___wmul
  4696 ;; This function is called by:
  4697 ;;		_TFT_DrawString
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text19
  4702  000228                     __ptext19:
  4703                           	opt callstack 0
  4704  000228                     _TFT_DrawChar:
  4705                           	opt callstack 22
  4706  000228                     
  4707                           ;TFT.c: 193: for(int8_t i=0; i<5; i++ ) {
  4708  000228  0E00               	movlw	0
  4709  00022A  6E3E               	movwf	TFT_DrawChar@i^0,c
  4710  00022C                     l2311:
  4711                           
  4712                           ;TFT.c: 194: uint8_t line = TFT_Font[c * 5 + i];
  4713  00022C  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  4714  000230  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  4715  000232  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  4716  000234  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  4717  000236  502E               	movf	TFT_DrawChar@c^0,w,c
  4718  000238  0D05               	mullw	5
  4719  00023A  0E97               	movlw	low _TFT_Font
  4720  00023C  6E36               	movwf	(??_TFT_DrawChar+2)^0,c
  4721  00023E  0E59               	movlw	high _TFT_Font
  4722  000240  6E37               	movwf	(??_TFT_DrawChar+3)^0,c
  4723  000242  50F3               	movf	243,w,c
  4724  000244  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  4725  000246  50F4               	movf	244,w,c
  4726  000248  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  4727  00024A  5034               	movf	??_TFT_DrawChar^0,w,c
  4728  00024C  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  4729  00024E  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  4730  000250  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  4731  000252  C036  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  4732  000256  C037  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  4733  00025A                     	if	0	;tblptru may be non-zero
  4734  00025A                     	endif
  4735  00025A                     	if	0	;tblptru may be non-zero
  4736  00025A                     	endif
  4737  00025A  0008               	tblrd		*
  4738  00025C  CFF5 F038          	movff	tablat,TFT_DrawChar@line
  4739  000260                     
  4740                           ;TFT.c: 195: for(int8_t j=0; j<8; j++, line >>= 1) {
  4741  000260  0E00               	movlw	0
  4742  000262  6E3D               	movwf	TFT_DrawChar@j^0,c
  4743  000264                     l234:
  4744                           
  4745                           ;TFT.c: 196: if(line & 1) {
  4746  000264  A038               	btfss	TFT_DrawChar@line^0,0,c
  4747  000266  EF37  F001         	goto	u1011
  4748  00026A  EF39  F001         	goto	u1010
  4749  00026E                     u1011:
  4750  00026E  EF92  F001         	goto	l2325
  4751  000272                     u1010:
  4752  000272                     
  4753                           ;TFT.c: 197: if(size == 1) {
  4754  000272  0433               	decf	TFT_DrawChar@size^0,w,c
  4755  000274  A4D8               	btfss	status,2,c
  4756  000276  EF3F  F001         	goto	u1021
  4757  00027A  EF41  F001         	goto	u1020
  4758  00027E                     u1021:
  4759  00027E  EF5C  F001         	goto	l2323
  4760  000282                     u1020:
  4761  000282                     
  4762                           ;TFT.c: 198: TFT_DrawPixel((x + j), (y - i), color);
  4763  000282  502A               	movf	TFT_DrawChar@x^0,w,c
  4764  000284  243D               	addwf	TFT_DrawChar@j^0,w,c
  4765  000286  6E0D               	movwf	TFT_DrawPixel@x^0,c
  4766  000288  0E00               	movlw	0
  4767  00028A  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  4768  00028C  0EFF               	movlw	255
  4769  00028E  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  4770  000290  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  4771  000292  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  4772  000296  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  4773  000298  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  4774  00029A  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  4775  00029C  5034               	movf	??_TFT_DrawChar^0,w,c
  4776  00029E  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  4777  0002A0  6E0F               	movwf	TFT_DrawPixel@y^0,c
  4778  0002A2  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  4779  0002A4  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  4780  0002A6  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  4781  0002A8  C02F  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  4782  0002AC  C030  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  4783  0002B0  ECA3  F008         	call	_TFT_DrawPixel	;wreg free
  4784                           
  4785                           ;TFT.c: 199: } else {
  4786  0002B4  EFF5  F001         	goto	l2333
  4787  0002B8                     l2323:
  4788                           
  4789                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  4790  0002B8  503D               	movf	TFT_DrawChar@j^0,w,c
  4791  0002BA  6E05               	movwf	___wmul@multiplier^0,c
  4792  0002BC  6A06               	clrf	(___wmul@multiplier+1)^0,c
  4793  0002BE  BE05               	btfsc	___wmul@multiplier^0,7,c
  4794  0002C0  0606               	decf	(___wmul@multiplier+1)^0,f,c
  4795  0002C2  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  4796  0002C6  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  4797  0002C8  EC2E  F009         	call	___wmul	;wreg free
  4798  0002CC  502A               	movf	TFT_DrawChar@x^0,w,c
  4799  0002CE  2405               	addwf	?___wmul^0,w,c
  4800  0002D0  6E39               	movwf	_TFT_DrawChar$1935^0,c
  4801  0002D2  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  4802  0002D4  2006               	addwfc	(?___wmul+1)^0,w,c
  4803  0002D6  6E3A               	movwf	(_TFT_DrawChar$1935+1)^0,c
  4804                           
  4805                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  4806  0002D8  503E               	movf	TFT_DrawChar@i^0,w,c
  4807  0002DA  6E05               	movwf	___wmul@multiplier^0,c
  4808  0002DC  6A06               	clrf	(___wmul@multiplier+1)^0,c
  4809  0002DE  BE05               	btfsc	___wmul@multiplier^0,7,c
  4810  0002E0  0606               	decf	(___wmul@multiplier+1)^0,f,c
  4811  0002E2  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  4812  0002E6  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  4813  0002E8  EC2E  F009         	call	___wmul	;wreg free
  4814  0002EC  5005               	movf	?___wmul^0,w,c
  4815  0002EE  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  4816  0002F0  6E3B               	movwf	_TFT_DrawChar$1936^0,c
  4817  0002F2  5006               	movf	(?___wmul+1)^0,w,c
  4818  0002F4  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  4819  0002F6  6E3C               	movwf	(_TFT_DrawChar$1936+1)^0,c
  4820                           
  4821                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  4822  0002F8  C039  F01C         	movff	_TFT_DrawChar$1935,TFT_DrawFillRect@x
  4823  0002FC  C03A  F01D         	movff	_TFT_DrawChar$1935+1,TFT_DrawFillRect@x+1
  4824  000300  C03B  F01E         	movff	_TFT_DrawChar$1936,TFT_DrawFillRect@y
  4825  000304  C03C  F01F         	movff	_TFT_DrawChar$1936+1,TFT_DrawFillRect@y+1
  4826  000308  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  4827  00030C  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  4828  00030E  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  4829  000312  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  4830  000314  C02F  F024         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  4831  000318  C030  F025         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  4832  00031C  EC77  F006         	call	_TFT_DrawFillRect	;wreg free
  4833  000320  EFF5  F001         	goto	l2333
  4834  000324                     l2325:
  4835  000324  502F               	movf	TFT_DrawChar@color^0,w,c
  4836  000326  1831               	xorwf	TFT_DrawChar@bg^0,w,c
  4837  000328  E109               	bnz	u1030
  4838  00032A  5030               	movf	(TFT_DrawChar@color+1)^0,w,c
  4839  00032C  1832               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  4840  00032E  B4D8               	btfsc	status,2,c
  4841  000330  EF9C  F001         	goto	u1031
  4842  000334  EF9E  F001         	goto	u1030
  4843  000338                     u1031:
  4844  000338  EFF5  F001         	goto	l2333
  4845  00033C                     u1030:
  4846  00033C                     
  4847                           ;TFT.c: 203: if(size == 1) {
  4848  00033C  0433               	decf	TFT_DrawChar@size^0,w,c
  4849  00033E  A4D8               	btfss	status,2,c
  4850  000340  EFA4  F001         	goto	u1041
  4851  000344  EFA6  F001         	goto	u1040
  4852  000348                     u1041:
  4853  000348  EFC1  F001         	goto	l2331
  4854  00034C                     u1040:
  4855  00034C                     
  4856                           ;TFT.c: 204: TFT_DrawPixel((x + j), (y - i), bg);
  4857  00034C  502A               	movf	TFT_DrawChar@x^0,w,c
  4858  00034E  243D               	addwf	TFT_DrawChar@j^0,w,c
  4859  000350  6E0D               	movwf	TFT_DrawPixel@x^0,c
  4860  000352  0E00               	movlw	0
  4861  000354  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  4862  000356  0EFF               	movlw	255
  4863  000358  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  4864  00035A  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  4865  00035C  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  4866  000360  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  4867  000362  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  4868  000364  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  4869  000366  5034               	movf	??_TFT_DrawChar^0,w,c
  4870  000368  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  4871  00036A  6E0F               	movwf	TFT_DrawPixel@y^0,c
  4872  00036C  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  4873  00036E  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  4874  000370  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  4875  000372  C031  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  4876  000376  C032  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  4877  00037A  ECA3  F008         	call	_TFT_DrawPixel	;wreg free
  4878                           
  4879                           ;TFT.c: 205: } else {
  4880  00037E  EFF5  F001         	goto	l2333
  4881  000382                     l2331:
  4882                           
  4883                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  4884  000382  503D               	movf	TFT_DrawChar@j^0,w,c
  4885  000384  6E05               	movwf	___wmul@multiplier^0,c
  4886  000386  6A06               	clrf	(___wmul@multiplier+1)^0,c
  4887  000388  BE05               	btfsc	___wmul@multiplier^0,7,c
  4888  00038A  0606               	decf	(___wmul@multiplier+1)^0,f,c
  4889  00038C  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  4890  000390  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  4891  000392  EC2E  F009         	call	___wmul	;wreg free
  4892  000396  502A               	movf	TFT_DrawChar@x^0,w,c
  4893  000398  2405               	addwf	?___wmul^0,w,c
  4894  00039A  6E39               	movwf	_TFT_DrawChar$1935^0,c
  4895  00039C  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  4896  00039E  2006               	addwfc	(?___wmul+1)^0,w,c
  4897  0003A0  6E3A               	movwf	(_TFT_DrawChar$1935+1)^0,c
  4898                           
  4899                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  4900  0003A2  503E               	movf	TFT_DrawChar@i^0,w,c
  4901  0003A4  6E05               	movwf	___wmul@multiplier^0,c
  4902  0003A6  6A06               	clrf	(___wmul@multiplier+1)^0,c
  4903  0003A8  BE05               	btfsc	___wmul@multiplier^0,7,c
  4904  0003AA  0606               	decf	(___wmul@multiplier+1)^0,f,c
  4905  0003AC  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  4906  0003B0  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  4907  0003B2  EC2E  F009         	call	___wmul	;wreg free
  4908  0003B6  5005               	movf	?___wmul^0,w,c
  4909  0003B8  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  4910  0003BA  6E3B               	movwf	_TFT_DrawChar$1936^0,c
  4911  0003BC  5006               	movf	(?___wmul+1)^0,w,c
  4912  0003BE  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  4913  0003C0  6E3C               	movwf	(_TFT_DrawChar$1936+1)^0,c
  4914                           
  4915                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  4916  0003C2  C039  F01C         	movff	_TFT_DrawChar$1935,TFT_DrawFillRect@x
  4917  0003C6  C03A  F01D         	movff	_TFT_DrawChar$1935+1,TFT_DrawFillRect@x+1
  4918  0003CA  C03B  F01E         	movff	_TFT_DrawChar$1936,TFT_DrawFillRect@y
  4919  0003CE  C03C  F01F         	movff	_TFT_DrawChar$1936+1,TFT_DrawFillRect@y+1
  4920  0003D2  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  4921  0003D6  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  4922  0003D8  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  4923  0003DC  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  4924  0003DE  C031  F024         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  4925  0003E2  C032  F025         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  4926  0003E6  EC77  F006         	call	_TFT_DrawFillRect	;wreg free
  4927  0003EA                     l2333:
  4928  0003EA  2A3D               	incf	TFT_DrawChar@j^0,f,c
  4929  0003EC  90D8               	bcf	status,0,c
  4930  0003EE  3238               	rrcf	TFT_DrawChar@line^0,f,c
  4931  0003F0  503D               	movf	TFT_DrawChar@j^0,w,c
  4932  0003F2  0A80               	xorlw	128
  4933  0003F4  0F78               	addlw	-136
  4934  0003F6  A0D8               	btfss	status,0,c
  4935  0003F8  EF00  F002         	goto	u1051
  4936  0003FC  EF02  F002         	goto	u1050
  4937  000400                     u1051:
  4938  000400  EF32  F001         	goto	l234
  4939  000404                     u1050:
  4940  000404  2A3E               	incf	TFT_DrawChar@i^0,f,c
  4941  000406  503E               	movf	TFT_DrawChar@i^0,w,c
  4942  000408  0A80               	xorlw	128
  4943  00040A  0F7B               	addlw	-133
  4944  00040C  A0D8               	btfss	status,0,c
  4945  00040E  EF0B  F002         	goto	u1061
  4946  000412  EF0D  F002         	goto	u1060
  4947  000416                     u1061:
  4948  000416  EF16  F001         	goto	l2311
  4949  00041A                     u1060:
  4950  00041A  0012               	return		;funcret
  4951  00041C                     __end_of_TFT_DrawChar:
  4952                           	opt callstack 0
  4953                           
  4954 ;; *************** function _TFT_DrawPixel *****************
  4955 ;; Defined at:
  4956 ;;		line 94 in file "TFT.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  x               2   12[COMRAM] unsigned int 
  4959 ;;  y               2   14[COMRAM] unsigned int 
  4960 ;;  color           2   16[COMRAM] unsigned int 
  4961 ;; Auto vars:     Size  Location     Type
  4962 ;;		None
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4972 ;;      Params:         6       0       0       0       0       0       0       0       0
  4973 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4975 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4976 ;;Total ram usage:        6 bytes
  4977 ;; Hardware stack levels used:    1
  4978 ;; Hardware stack levels required when called:    3
  4979 ;; This function calls:
  4980 ;;		_TFT_WriteRegister
  4981 ;; This function is called by:
  4982 ;;		_TFT_DrawLine
  4983 ;;		_TFT_DrawChar
  4984 ;;		_TFT_DrawBitmap
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           	psect	text20
  4989  001146                     __ptext20:
  4990                           	opt callstack 0
  4991  001146                     _TFT_DrawPixel:
  4992                           	opt callstack 24
  4993  001146                     
  4994                           ;TFT.c: 95: TFT_WriteRegister(0x0200, x);
  4995  001146  0E02               	movlw	2
  4996  001148  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  4997  00114A  0E00               	movlw	0
  4998  00114C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  4999  00114E  C00D  F007         	movff	TFT_DrawPixel@x,TFT_WriteRegister@data
  5000  001152  C00E  F008         	movff	TFT_DrawPixel@x+1,TFT_WriteRegister@data+1
  5001  001156  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5002                           
  5003                           ;TFT.c: 96: TFT_WriteRegister(0x0201, y);
  5004  00115A  0E02               	movlw	2
  5005  00115C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5006  00115E  0E01               	movlw	1
  5007  001160  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5008  001162  C00F  F007         	movff	TFT_DrawPixel@y,TFT_WriteRegister@data
  5009  001166  C010  F008         	movff	TFT_DrawPixel@y+1,TFT_WriteRegister@data+1
  5010  00116A  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5011                           
  5012                           ;TFT.c: 97: TFT_WriteRegister(0x0202, color);
  5013  00116E  0E02               	movlw	2
  5014  001170  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5015  001172  0E02               	movlw	2
  5016  001174  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5017  001176  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  5018  00117A  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  5019  00117E  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5020  001182  0012               	return		;funcret
  5021  001184                     __end_of_TFT_DrawPixel:
  5022                           	opt callstack 0
  5023                           
  5024 ;; *************** function _TFT_DrawFillRect *****************
  5025 ;; Defined at:
  5026 ;;		line 138 in file "TFT.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  x               2   27[COMRAM] unsigned int 
  5029 ;;  y               2   29[COMRAM] unsigned int 
  5030 ;;  w               2   31[COMRAM] unsigned int 
  5031 ;;  h               2   33[COMRAM] unsigned int 
  5032 ;;  color           2   35[COMRAM] unsigned int 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;		None
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5044 ;;      Params:        10       0       0       0       0       0       0       0       0
  5045 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5046 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5047 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5048 ;;Total ram usage:       14 bytes
  5049 ;; Hardware stack levels used:    1
  5050 ;; Hardware stack levels required when called:    5
  5051 ;; This function calls:
  5052 ;;		_TFT_Flood
  5053 ;;		_TFT_FullScreen
  5054 ;;		_TFT_SetAddrWindow
  5055 ;;		___wmul
  5056 ;; This function is called by:
  5057 ;;		_loop
  5058 ;;		_TFT_DrawChar
  5059 ;;		_Ecg_ProcessHeartbeat
  5060 ;;		_Ecg_Draw
  5061 ;;		_EUSART_RX_Process
  5062 ;;		_A6_SetSpeed
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text21
  5067  000CEE                     __ptext21:
  5068                           	opt callstack 0
  5069  000CEE                     _TFT_DrawFillRect:
  5070                           	opt callstack 22
  5071  000CEE                     
  5072                           ;TFT.c: 139: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h -1));
  5073  000CEE  C01C  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  5074  000CF2  C01D  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  5075  000CF6  C01E  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  5076  000CFA  C01F  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  5077  000CFE  5020               	movf	TFT_DrawFillRect@w^0,w,c
  5078  000D00  241C               	addwf	TFT_DrawFillRect@x^0,w,c
  5079  000D02  6E26               	movwf	??_TFT_DrawFillRect^0,c
  5080  000D04  5021               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  5081  000D06  201D               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  5082  000D08  6E27               	movwf	(??_TFT_DrawFillRect+1)^0,c
  5083  000D0A  0EFF               	movlw	255
  5084  000D0C  2426               	addwf	??_TFT_DrawFillRect^0,w,c
  5085  000D0E  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  5086  000D10  0EFF               	movlw	255
  5087  000D12  2027               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  5088  000D14  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  5089  000D16  5022               	movf	TFT_DrawFillRect@h^0,w,c
  5090  000D18  241E               	addwf	TFT_DrawFillRect@y^0,w,c
  5091  000D1A  6E28               	movwf	(??_TFT_DrawFillRect+2)^0,c
  5092  000D1C  5023               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  5093  000D1E  201F               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  5094  000D20  6E29               	movwf	(??_TFT_DrawFillRect+3)^0,c
  5095  000D22  0EFF               	movlw	255
  5096  000D24  2428               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  5097  000D26  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  5098  000D28  0EFF               	movlw	255
  5099  000D2A  2029               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  5100  000D2C  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  5101  000D2E  ECFE  F005         	call	_TFT_SetAddrWindow	;wreg free
  5102  000D32                     
  5103                           ;TFT.c: 140: TFT_Flood(color, (w * h));
  5104  000D32  C024  F00D         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  5105  000D36  C025  F00E         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  5106  000D3A  C020  F005         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  5107  000D3E  C021  F006         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  5108  000D42  C022  F007         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  5109  000D46  C023  F008         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  5110  000D4A  EC2E  F009         	call	___wmul	;wreg free
  5111  000D4E  C005  F00F         	movff	?___wmul,TFT_Flood@len
  5112  000D52  C006  F010         	movff	?___wmul+1,TFT_Flood@len+1
  5113  000D56  6A11               	clrf	(TFT_Flood@len+2)^0,c
  5114  000D58  6A12               	clrf	(TFT_Flood@len+3)^0,c
  5115  000D5A  EC02  F003         	call	_TFT_Flood	;wreg free
  5116  000D5E                     
  5117                           ;TFT.c: 141: TFT_FullScreen();
  5118  000D5E  EC41  F009         	call	_TFT_FullScreen	;wreg free
  5119  000D62  0012               	return		;funcret
  5120  000D64                     __end_of_TFT_DrawFillRect:
  5121                           	opt callstack 0
  5122                           
  5123 ;; *************** function ___wmul *****************
  5124 ;; Defined at:
  5125 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  multiplier      2    4[COMRAM] unsigned int 
  5128 ;;  multiplicand    2    6[COMRAM] unsigned int 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  product         2    8[COMRAM] unsigned int 
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  2    4[COMRAM] unsigned int 
  5133 ;; Registers used:
  5134 ;;		wreg, status,2, status,0, prodl, prodh
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5140 ;;      Params:         4       0       0       0       0       0       0       0       0
  5141 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5143 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5144 ;;Total ram usage:        6 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    2
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_TFT_DrawFillRect
  5151 ;;		_TFT_DrawChar
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text22
  5156  00125C                     __ptext22:
  5157                           	opt callstack 0
  5158  00125C                     ___wmul:
  5159                           	opt callstack 25
  5160  00125C  5005               	movf	___wmul@multiplier^0,w,c
  5161  00125E  0207               	mulwf	___wmul@multiplicand^0,c
  5162  001260  CFF3 F009          	movff	prodl,___wmul@product
  5163  001264  CFF4 F00A          	movff	prodh,___wmul@product+1
  5164  001268  5005               	movf	___wmul@multiplier^0,w,c
  5165  00126A  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  5166  00126C  50F3               	movf	243,w,c
  5167  00126E  260A               	addwf	(___wmul@product+1)^0,f,c
  5168  001270  5006               	movf	(___wmul@multiplier+1)^0,w,c
  5169  001272  0207               	mulwf	___wmul@multiplicand^0,c
  5170  001274  50F3               	movf	243,w,c
  5171  001276  260A               	addwf	(___wmul@product+1)^0,f,c
  5172  001278  C009  F005         	movff	___wmul@product,?___wmul
  5173  00127C  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  5174  001280  0012               	return		;funcret
  5175  001282                     __end_of___wmul:
  5176                           	opt callstack 0
  5177                           
  5178 ;; *************** function _TFT_FullScreen *****************
  5179 ;; Defined at:
  5180 ;;		line 68 in file "TFT.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, cstack
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5197 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5198 ;;Total ram usage:        0 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    4
  5201 ;; This function calls:
  5202 ;;		_TFT_SetAddrWindow
  5203 ;; This function is called by:
  5204 ;;		_TFT_Init
  5205 ;;		_TFT_DrawFillRect
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text23
  5210  001282                     __ptext23:
  5211                           	opt callstack 0
  5212  001282                     _TFT_FullScreen:
  5213                           	opt callstack 22
  5214  001282                     
  5215                           ;TFT.c: 69: TFT_SetAddrWindow(0, 0, 240 - 1, 400 - 1);
  5216  001282  0E00               	movlw	0
  5217  001284  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  5218  001286  0E00               	movlw	0
  5219  001288  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  5220  00128A  0E00               	movlw	0
  5221  00128C  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  5222  00128E  0E00               	movlw	0
  5223  001290  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  5224  001292  0E00               	movlw	0
  5225  001294  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  5226  001296  0EEF               	movlw	239
  5227  001298  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  5228  00129A  0E01               	movlw	1
  5229  00129C  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  5230  00129E  0E8F               	movlw	143
  5231  0012A0  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  5232  0012A2  ECFE  F005         	call	_TFT_SetAddrWindow	;wreg free
  5233  0012A6  0012               	return		;funcret
  5234  0012A8                     __end_of_TFT_FullScreen:
  5235                           	opt callstack 0
  5236                           
  5237 ;; *************** function _TFT_SetAddrWindow *****************
  5238 ;; Defined at:
  5239 ;;		line 56 in file "TFT.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  x1              2   12[COMRAM] unsigned int 
  5242 ;;  y1              2   14[COMRAM] unsigned int 
  5243 ;;  x2              2   16[COMRAM] unsigned int 
  5244 ;;  y2              2   18[COMRAM] unsigned int 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5256 ;;      Params:         8       0       0       0       0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5259 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5260 ;;Total ram usage:        8 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    3
  5263 ;; This function calls:
  5264 ;;		_TFT_WriteRegister
  5265 ;; This function is called by:
  5266 ;;		_TFT_FullScreen
  5267 ;;		_TFT_DrawFillRect
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text24
  5272  000BFC                     __ptext24:
  5273                           	opt callstack 0
  5274  000BFC                     _TFT_SetAddrWindow:
  5275                           	opt callstack 23
  5276  000BFC                     
  5277                           ;TFT.c: 58: TFT_WriteRegister(0x0210, x1);
  5278  000BFC  0E02               	movlw	2
  5279  000BFE  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5280  000C00  0E10               	movlw	16
  5281  000C02  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5282  000C04  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  5283  000C08  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  5284  000C0C  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5285                           
  5286                           ;TFT.c: 59: TFT_WriteRegister(0x0211, x2);
  5287  000C10  0E02               	movlw	2
  5288  000C12  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5289  000C14  0E11               	movlw	17
  5290  000C16  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5291  000C18  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  5292  000C1C  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  5293  000C20  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5294                           
  5295                           ;TFT.c: 60: TFT_WriteRegister(0x0212, y1);
  5296  000C24  0E02               	movlw	2
  5297  000C26  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5298  000C28  0E12               	movlw	18
  5299  000C2A  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5300  000C2C  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  5301  000C30  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  5302  000C34  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5303                           
  5304                           ;TFT.c: 61: TFT_WriteRegister(0x0213, y2);
  5305  000C38  0E02               	movlw	2
  5306  000C3A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5307  000C3C  0E13               	movlw	19
  5308  000C3E  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5309  000C40  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  5310  000C44  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  5311  000C48  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5312                           
  5313                           ;TFT.c: 64: TFT_WriteRegister(0x0200, x1);
  5314  000C4C  0E02               	movlw	2
  5315  000C4E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5316  000C50  0E00               	movlw	0
  5317  000C52  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5318  000C54  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  5319  000C58  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  5320  000C5C  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5321                           
  5322                           ;TFT.c: 65: TFT_WriteRegister(0x0201, y2);
  5323  000C60  0E02               	movlw	2
  5324  000C62  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5325  000C64  0E01               	movlw	1
  5326  000C66  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5327  000C68  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  5328  000C6C  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  5329  000C70  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5330  000C74  0012               	return		;funcret
  5331  000C76                     __end_of_TFT_SetAddrWindow:
  5332                           	opt callstack 0
  5333                           
  5334 ;; *************** function _TFT_Flood *****************
  5335 ;; Defined at:
  5336 ;;		line 144 in file "TFT.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  color           2   12[COMRAM] unsigned int 
  5339 ;;  len             4   14[COMRAM] unsigned long 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  blocks          2   22[COMRAM] unsigned int 
  5342 ;;  color_lo        1   26[COMRAM] unsigned char 
  5343 ;;  color_hi        1   25[COMRAM] unsigned char 
  5344 ;;  i               1   24[COMRAM] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         6       0       0       0       0       0       0       0       0
  5355 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5357 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:       15 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    3
  5361 ;; This function calls:
  5362 ;;		_TFT_WriteRegister
  5363 ;; This function is called by:
  5364 ;;		_TFT_DrawFillRect
  5365 ;;		_TFT_FillScreen
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text25
  5370  000604                     __ptext25:
  5371                           	opt callstack 0
  5372  000604                     _TFT_Flood:
  5373                           	opt callstack 23
  5374  000604                     
  5375                           ;TFT.c: 145: uint16_t blocks;;TFT.c: 146: uint8_t i;;TFT.c: 147: uint8_t color_hi = colo
      +                          r >> 8;
  5376  000604  500E               	movf	(TFT_Flood@color+1)^0,w,c
  5377  000606  6E1A               	movwf	TFT_Flood@color_hi^0,c
  5378  000608                     
  5379                           ;TFT.c: 148: uint8_t color_lo = color;
  5380  000608  C00D  F01B         	movff	TFT_Flood@color,TFT_Flood@color_lo
  5381  00060C                     
  5382                           ;TFT.c: 151: TFT_WriteRegister(0x0202, color);
  5383  00060C  0E02               	movlw	2
  5384  00060E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  5385  000610  0E02               	movlw	2
  5386  000612  6E05               	movwf	TFT_WriteRegister@reg^0,c
  5387  000614  C00D  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  5388  000618  C00E  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  5389  00061C  EC21  F008         	call	_TFT_WriteRegister	;wreg free
  5390  000620                     
  5391                           ;TFT.c: 152: len--;
  5392  000620  060F               	decf	TFT_Flood@len^0,f,c
  5393  000622  0E00               	movlw	0
  5394  000624  5A10               	subwfb	(TFT_Flood@len+1)^0,f,c
  5395  000626  5A11               	subwfb	(TFT_Flood@len+2)^0,f,c
  5396  000628  5A12               	subwfb	(TFT_Flood@len+3)^0,f,c
  5397  00062A                     
  5398                           ;TFT.c: 156: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  5399  00062A  9082               	bcf	130,0,c	;volatile
  5400  00062C  F000               	nop		;# 
  5401  00062E                     
  5402                           ;TFT.c: 157: blocks = (uint16_t)(len / 4);
  5403  00062E  C00F  F013         	movff	TFT_Flood@len,??_TFT_Flood
  5404  000632  C010  F014         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  5405  000636  C011  F015         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  5406  00063A  C012  F016         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  5407  00063E  0E03               	movlw	3
  5408  000640  EF27  F003         	goto	u930
  5409  000644                     u935:
  5410  000644  90D8               	bcf	status,0,c
  5411  000646  3216               	rrcf	(??_TFT_Flood+3)^0,f,c
  5412  000648  3215               	rrcf	(??_TFT_Flood+2)^0,f,c
  5413  00064A  3214               	rrcf	(??_TFT_Flood+1)^0,f,c
  5414  00064C  3213               	rrcf	??_TFT_Flood^0,f,c
  5415  00064E                     u930:
  5416  00064E  2EE8               	decfsz	wreg,f,c
  5417  000650  EF22  F003         	goto	u935
  5418  000654  C013  F017         	movff	??_TFT_Flood,TFT_Flood@blocks
  5419  000658  C014  F018         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  5420  00065C                     
  5421                           ;TFT.c: 158: if(color_hi == color_lo) {
  5422  00065C  501B               	movf	TFT_Flood@color_lo^0,w,c
  5423  00065E  181A               	xorwf	TFT_Flood@color_hi^0,w,c
  5424  000660  A4D8               	btfss	status,2,c
  5425  000662  EF35  F003         	goto	u941
  5426  000666  EF37  F003         	goto	u940
  5427  00066A                     u941:
  5428  00066A  EF9C  F003         	goto	l2273
  5429  00066E                     u940:
  5430  00066E  EF51  F003         	goto	l2267
  5431  000672                     l211:
  5432                           
  5433                           ;TFT.c: 160: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  5434  000672  9A80               	bcf	128,5,c	;volatile
  5435  000674  F000               	nop		;# 
  5436  000676  8A80               	bsf	128,5,c	;volatile
  5437  000678  9A80               	bcf	128,5,c	;volatile
  5438  00067A  F000               	nop		;# 
  5439  00067C  8A80               	bsf	128,5,c	;volatile
  5440                           
  5441                           ;TFT.c: 161: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  5442  00067E  9A80               	bcf	128,5,c	;volatile
  5443  000680  F000               	nop		;# 
  5444  000682  8A80               	bsf	128,5,c	;volatile
  5445  000684  9A80               	bcf	128,5,c	;volatile
  5446  000686  F000               	nop		;# 
  5447  000688  8A80               	bsf	128,5,c	;volatile
  5448                           
  5449                           ;TFT.c: 162: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  5450  00068A  9A80               	bcf	128,5,c	;volatile
  5451  00068C  F000               	nop		;# 
  5452  00068E  8A80               	bsf	128,5,c	;volatile
  5453  000690  9A80               	bcf	128,5,c	;volatile
  5454  000692  F000               	nop		;# 
  5455  000694  8A80               	bsf	128,5,c	;volatile
  5456                           
  5457                           ;TFT.c: 163: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  5458  000696  9A80               	bcf	128,5,c	;volatile
  5459  000698  F000               	nop		;# 
  5460  00069A  8A80               	bsf	128,5,c	;volatile
  5461  00069C  9A80               	bcf	128,5,c	;volatile
  5462  00069E  F000               	nop		;# 
  5463  0006A0  8A80               	bsf	128,5,c	;volatile
  5464  0006A2                     l2267:
  5465  0006A2  0617               	decf	TFT_Flood@blocks^0,f,c
  5466  0006A4  A0D8               	btfss	status,0,c
  5467  0006A6  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  5468  0006A8  2817               	incf	TFT_Flood@blocks^0,w,c
  5469  0006AA  E106               	bnz	u951
  5470  0006AC  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  5471  0006AE  A4D8               	btfss	status,2,c
  5472  0006B0  EF5C  F003         	goto	u951
  5473  0006B4  EF5E  F003         	goto	u950
  5474  0006B8                     u951:
  5475  0006B8  EF39  F003         	goto	l211
  5476  0006BC                     u950:
  5477  0006BC                     
  5478                           ;TFT.c: 164: };TFT.c: 165: for(i = (uint8_t)len & 3; i--; ) {
  5479  0006BC  500F               	movf	TFT_Flood@len^0,w,c
  5480  0006BE  0B03               	andlw	3
  5481  0006C0  6E19               	movwf	TFT_Flood@i^0,c
  5482  0006C2  EF69  F003         	goto	l2271
  5483  0006C6                     l214:
  5484                           
  5485                           ;TFT.c: 166: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  5486  0006C6  9A80               	bcf	128,5,c	;volatile
  5487  0006C8  F000               	nop		;# 
  5488  0006CA  8A80               	bsf	128,5,c	;volatile
  5489  0006CC  9A80               	bcf	128,5,c	;volatile
  5490  0006CE  F000               	nop		;# 
  5491  0006D0  8A80               	bsf	128,5,c	;volatile
  5492  0006D2                     l2271:
  5493  0006D2  0619               	decf	TFT_Flood@i^0,f,c
  5494  0006D4  2819               	incf	TFT_Flood@i^0,w,c
  5495  0006D6  A4D8               	btfss	status,2,c
  5496  0006D8  EF70  F003         	goto	u961
  5497  0006DC  EF72  F003         	goto	u960
  5498  0006E0                     u961:
  5499  0006E0  EF63  F003         	goto	l214
  5500  0006E4                     u960:
  5501  0006E4  EFC1  F003         	goto	l216
  5502  0006E8                     l218:
  5503                           
  5504                           ;TFT.c: 170: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  5505  0006E8  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  5506  0006EC  9A80               	bcf	128,5,c	;volatile
  5507  0006EE  F000               	nop		;# 
  5508  0006F0  8A80               	bsf	128,5,c	;volatile
  5509  0006F2  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  5510  0006F6  9A80               	bcf	128,5,c	;volatile
  5511  0006F8  F000               	nop		;# 
  5512  0006FA  8A80               	bsf	128,5,c	;volatile
  5513                           
  5514                           ;TFT.c: 171: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  5515  0006FC  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  5516  000700  9A80               	bcf	128,5,c	;volatile
  5517  000702  F000               	nop		;# 
  5518  000704  8A80               	bsf	128,5,c	;volatile
  5519  000706  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  5520  00070A  9A80               	bcf	128,5,c	;volatile
  5521  00070C  F000               	nop		;# 
  5522  00070E  8A80               	bsf	128,5,c	;volatile
  5523                           
  5524                           ;TFT.c: 172: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  5525  000710  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  5526  000714  9A80               	bcf	128,5,c	;volatile
  5527  000716  F000               	nop		;# 
  5528  000718  8A80               	bsf	128,5,c	;volatile
  5529  00071A  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  5530  00071E  9A80               	bcf	128,5,c	;volatile
  5531  000720  F000               	nop		;# 
  5532  000722  8A80               	bsf	128,5,c	;volatile
  5533                           
  5534                           ;TFT.c: 173: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  5535  000724  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  5536  000728  9A80               	bcf	128,5,c	;volatile
  5537  00072A  F000               	nop		;# 
  5538  00072C  8A80               	bsf	128,5,c	;volatile
  5539  00072E  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  5540  000732  9A80               	bcf	128,5,c	;volatile
  5541  000734  F000               	nop		;# 
  5542  000736  8A80               	bsf	128,5,c	;volatile
  5543  000738                     l2273:
  5544  000738  0617               	decf	TFT_Flood@blocks^0,f,c
  5545  00073A  A0D8               	btfss	status,0,c
  5546  00073C  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  5547  00073E  2817               	incf	TFT_Flood@blocks^0,w,c
  5548  000740  E106               	bnz	u971
  5549  000742  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  5550  000744  A4D8               	btfss	status,2,c
  5551  000746  EFA7  F003         	goto	u971
  5552  00074A  EFA9  F003         	goto	u970
  5553  00074E                     u971:
  5554  00074E  EF74  F003         	goto	l218
  5555  000752                     u970:
  5556  000752                     
  5557                           ;TFT.c: 174: };TFT.c: 175: for(i = (uint8_t)len & 3; i--; ) {
  5558  000752  500F               	movf	TFT_Flood@len^0,w,c
  5559  000754  0B03               	andlw	3
  5560  000756  6E19               	movwf	TFT_Flood@i^0,c
  5561  000758  EFB8  F003         	goto	l2277
  5562  00075C                     l221:
  5563                           
  5564                           ;TFT.c: 176: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  5565  00075C  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  5566  000760  9A80               	bcf	128,5,c	;volatile
  5567  000762  F000               	nop		;# 
  5568  000764  8A80               	bsf	128,5,c	;volatile
  5569  000766  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  5570  00076A  9A80               	bcf	128,5,c	;volatile
  5571  00076C  F000               	nop		;# 
  5572  00076E  8A80               	bsf	128,5,c	;volatile
  5573  000770                     l2277:
  5574  000770  0619               	decf	TFT_Flood@i^0,f,c
  5575  000772  2819               	incf	TFT_Flood@i^0,w,c
  5576  000774  A4D8               	btfss	status,2,c
  5577  000776  EFBF  F003         	goto	u981
  5578  00077A  EFC1  F003         	goto	u980
  5579  00077E                     u981:
  5580  00077E  EFAE  F003         	goto	l221
  5581  000782                     u980:
  5582  000782                     l216:
  5583                           
  5584                           ;TFT.c: 177: };TFT.c: 178: };TFT.c: 179: PORTCbits.RC0 = 1;;
  5585  000782  8082               	bsf	130,0,c	;volatile
  5586  000784  0012               	return		;funcret
  5587  000786                     __end_of_TFT_Flood:
  5588                           	opt callstack 0
  5589                           
  5590 ;; *************** function _TFT_WriteRegister *****************
  5591 ;; Defined at:
  5592 ;;		line 12 in file "TFT.c"
  5593 ;; Parameters:    Size  Location     Type
  5594 ;;  reg             2    4[COMRAM] unsigned int 
  5595 ;;  data            2    6[COMRAM] unsigned int 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  l               1   11[COMRAM] unsigned char 
  5598 ;;  h               1   10[COMRAM] unsigned char 
  5599 ;;  l               1    9[COMRAM] unsigned char 
  5600 ;;  h               1    8[COMRAM] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  1    wreg      void 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5610 ;;      Params:         4       0       0       0       0       0       0       0       0
  5611 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5613 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5614 ;;Total ram usage:        8 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    2
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_TFT_SetAddrWindow
  5621 ;;		_TFT_Init
  5622 ;;		_TFT_DrawPixel
  5623 ;;		_TFT_Flood
  5624 ;;		_TFT_FillScreen
  5625 ;; This function uses a non-reentrant model
  5626 ;;
  5627                           
  5628                           	psect	text26
  5629  001042                     __ptext26:
  5630                           	opt callstack 0
  5631  001042                     _TFT_WriteRegister:
  5632                           	opt callstack 24
  5633  001042                     
  5634                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  5635  001042  9082               	bcf	130,0,c	;volatile
  5636  001044  F000               	nop		;# 
  5637                           
  5638                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  5639  001046  9282               	bcf	130,1,c	;volatile
  5640  001048  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
  5641  00104A  6E09               	movwf	TFT_WriteRegister@h^0,c
  5642  00104C  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
  5643  001050  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
  5644  001054  9A80               	bcf	128,5,c	;volatile
  5645  001056  F000               	nop		;# 
  5646  001058  8A80               	bsf	128,5,c	;volatile
  5647  00105A  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
  5648  00105E  9A80               	bcf	128,5,c	;volatile
  5649  001060  F000               	nop		;# 
  5650  001062  8A80               	bsf	128,5,c	;volatile
  5651  001064                     
  5652                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  5653  001064  8282               	bsf	130,1,c	;volatile
  5654  001066  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
  5655  001068  6E0B               	movwf	TFT_WriteRegister@h_676^0,c
  5656  00106A  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_677
  5657  00106E  C00B  FF81         	movff	TFT_WriteRegister@h_676,3969	;volatile
  5658  001072  9A80               	bcf	128,5,c	;volatile
  5659  001074  F000               	nop		;# 
  5660  001076  8A80               	bsf	128,5,c	;volatile
  5661  001078  C00C  FF81         	movff	TFT_WriteRegister@l_677,3969	;volatile
  5662  00107C  9A80               	bcf	128,5,c	;volatile
  5663  00107E  F000               	nop		;# 
  5664  001080  8A80               	bsf	128,5,c	;volatile
  5665  001082                     
  5666                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
  5667  001082  8082               	bsf	130,0,c	;volatile
  5668  001084  0012               	return		;funcret
  5669  001086                     __end_of_TFT_WriteRegister:
  5670                           	opt callstack 0
  5671                           
  5672 ;; *************** function _EUSART_SetSpeed *****************
  5673 ;; Defined at:
  5674 ;;		line 44 in file "eusart.c"
  5675 ;; Parameters:    Size  Location     Type
  5676 ;;  speed           4   17[COMRAM] const unsigned long 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  tmp             4   25[COMRAM] unsigned long 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  1    wreg      void 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0, cstack
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5688 ;;      Params:         4       0       0       0       0       0       0       0       0
  5689 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5690 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5691 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5692 ;;Total ram usage:       12 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; Hardware stack levels required when called:    3
  5695 ;; This function calls:
  5696 ;;		___lldiv
  5697 ;; This function is called by:
  5698 ;;		_main
  5699 ;;		_A6_SetSpeed
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text27
  5704  000B78                     __ptext27:
  5705                           	opt callstack 0
  5706  000B78                     _EUSART_SetSpeed:
  5707                           	opt callstack 27
  5708  000B78                     
  5709                           ;eusart.c: 45: TXSTAbits.SYNC = 0;
  5710  000B78  98AC               	bcf	172,4,c	;volatile
  5711                           
  5712                           ;eusart.c: 46: TXSTAbits.BRGH = 1;
  5713  000B7A  84AC               	bsf	172,2,c	;volatile
  5714                           
  5715                           ;eusart.c: 47: BAUDCONbits.BRG16 = 1;
  5716  000B7C  86B8               	bsf	184,3,c	;volatile
  5717  000B7E                     
  5718                           ;eusart.c: 49: uint32_t tmp = (48000000 / speed);
  5719  000B7E  0E00               	movlw	0
  5720  000B80  6E05               	movwf	___lldiv@dividend^0,c
  5721  000B82  0E6C               	movlw	108
  5722  000B84  6E06               	movwf	(___lldiv@dividend+1)^0,c
  5723  000B86  0EDC               	movlw	220
  5724  000B88  6E07               	movwf	(___lldiv@dividend+2)^0,c
  5725  000B8A  0E02               	movlw	2
  5726  000B8C  6E08               	movwf	(___lldiv@dividend+3)^0,c
  5727  000B8E  C012  F009         	movff	EUSART_SetSpeed@speed,___lldiv@divisor
  5728  000B92  C013  F00A         	movff	EUSART_SetSpeed@speed+1,___lldiv@divisor+1
  5729  000B96  C014  F00B         	movff	EUSART_SetSpeed@speed+2,___lldiv@divisor+2
  5730  000B9A  C015  F00C         	movff	EUSART_SetSpeed@speed+3,___lldiv@divisor+3
  5731  000B9E  EC94  F004         	call	___lldiv	;wreg free
  5732  000BA2  C005  F01A         	movff	?___lldiv,EUSART_SetSpeed@tmp
  5733  000BA6  C006  F01B         	movff	?___lldiv+1,EUSART_SetSpeed@tmp+1
  5734  000BAA  C007  F01C         	movff	?___lldiv+2,EUSART_SetSpeed@tmp+2
  5735  000BAE  C008  F01D         	movff	?___lldiv+3,EUSART_SetSpeed@tmp+3
  5736  000BB2                     
  5737                           ;eusart.c: 50: tmp = tmp / 4;
  5738  000BB2  C01A  F016         	movff	EUSART_SetSpeed@tmp,??_EUSART_SetSpeed
  5739  000BB6  C01B  F017         	movff	EUSART_SetSpeed@tmp+1,??_EUSART_SetSpeed+1
  5740  000BBA  C01C  F018         	movff	EUSART_SetSpeed@tmp+2,??_EUSART_SetSpeed+2
  5741  000BBE  C01D  F019         	movff	EUSART_SetSpeed@tmp+3,??_EUSART_SetSpeed+3
  5742  000BC2  0E03               	movlw	3
  5743  000BC4  EFE9  F005         	goto	u1420
  5744  000BC8                     u1425:
  5745  000BC8  90D8               	bcf	status,0,c
  5746  000BCA  3219               	rrcf	(??_EUSART_SetSpeed+3)^0,f,c
  5747  000BCC  3218               	rrcf	(??_EUSART_SetSpeed+2)^0,f,c
  5748  000BCE  3217               	rrcf	(??_EUSART_SetSpeed+1)^0,f,c
  5749  000BD0  3216               	rrcf	??_EUSART_SetSpeed^0,f,c
  5750  000BD2                     u1420:
  5751  000BD2  2EE8               	decfsz	wreg,f,c
  5752  000BD4  EFE4  F005         	goto	u1425
  5753  000BD8  C016  F01A         	movff	??_EUSART_SetSpeed,EUSART_SetSpeed@tmp
  5754  000BDC  C017  F01B         	movff	??_EUSART_SetSpeed+1,EUSART_SetSpeed@tmp+1
  5755  000BE0  C018  F01C         	movff	??_EUSART_SetSpeed+2,EUSART_SetSpeed@tmp+2
  5756  000BE4  C019  F01D         	movff	??_EUSART_SetSpeed+3,EUSART_SetSpeed@tmp+3
  5757  000BE8                     
  5758                           ;eusart.c: 51: tmp--;
  5759  000BE8  061A               	decf	EUSART_SetSpeed@tmp^0,f,c
  5760  000BEA  0E00               	movlw	0
  5761  000BEC  5A1B               	subwfb	(EUSART_SetSpeed@tmp+1)^0,f,c
  5762  000BEE  5A1C               	subwfb	(EUSART_SetSpeed@tmp+2)^0,f,c
  5763  000BF0  5A1D               	subwfb	(EUSART_SetSpeed@tmp+3)^0,f,c
  5764  000BF2                     
  5765                           ;eusart.c: 53: SPBRG = (uint8_t) tmp;
  5766  000BF2  C01A  FFAF         	movff	EUSART_SetSpeed@tmp,4015	;volatile
  5767  000BF6                     
  5768                           ;eusart.c: 54: SPBRGH = (uint8_t) (tmp >> 8);
  5769  000BF6  C01B  FFB0         	movff	EUSART_SetSpeed@tmp+1,4016	;volatile
  5770  000BFA  0012               	return		;funcret
  5771  000BFC                     __end_of_EUSART_SetSpeed:
  5772                           	opt callstack 0
  5773                           
  5774 ;; *************** function ___lldiv *****************
  5775 ;; Defined at:
  5776 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;  dividend        4    4[COMRAM] unsigned long 
  5779 ;;  divisor         4    8[COMRAM] unsigned long 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  quotient        4   12[COMRAM] unsigned long 
  5782 ;;  counter         1   16[COMRAM] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  4    4[COMRAM] unsigned long 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5792 ;;      Params:         8       0       0       0       0       0       0       0       0
  5793 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5795 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5796 ;;Total ram usage:       13 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    2
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_EUSART_SetSpeed
  5803 ;;		_Ecg_ProcessHeartRate
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text28
  5808  000928                     __ptext28:
  5809                           	opt callstack 0
  5810  000928                     ___lldiv:
  5811                           	opt callstack 27
  5812  000928  0E00               	movlw	0
  5813  00092A  6E0D               	movwf	___lldiv@quotient^0,c
  5814  00092C  0E00               	movlw	0
  5815  00092E  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  5816  000930  0E00               	movlw	0
  5817  000932  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  5818  000934  0E00               	movlw	0
  5819  000936  6E10               	movwf	(___lldiv@quotient+3)^0,c
  5820  000938  5009               	movf	___lldiv@divisor^0,w,c
  5821  00093A  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  5822  00093C  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  5823  00093E  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  5824  000940  B4D8               	btfsc	status,2,c
  5825  000942  EFA5  F004         	goto	u1371
  5826  000946  EFA7  F004         	goto	u1370
  5827  00094A                     u1371:
  5828  00094A  EFDD  F004         	goto	l540
  5829  00094E                     u1370:
  5830  00094E  0E01               	movlw	1
  5831  000950  6E11               	movwf	___lldiv@counter^0,c
  5832  000952  EFB1  F004         	goto	l2529
  5833  000956                     l2527:
  5834  000956  90D8               	bcf	status,0,c
  5835  000958  3609               	rlcf	___lldiv@divisor^0,f,c
  5836  00095A  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  5837  00095C  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  5838  00095E  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  5839  000960  2A11               	incf	___lldiv@counter^0,f,c
  5840  000962                     l2529:
  5841  000962  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  5842  000964  EFB6  F004         	goto	u1381
  5843  000968  EFB8  F004         	goto	u1380
  5844  00096C                     u1381:
  5845  00096C  EFAB  F004         	goto	l2527
  5846  000970                     u1380:
  5847  000970                     l2531:
  5848  000970  90D8               	bcf	status,0,c
  5849  000972  360D               	rlcf	___lldiv@quotient^0,f,c
  5850  000974  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  5851  000976  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  5852  000978  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  5853  00097A  5009               	movf	___lldiv@divisor^0,w,c
  5854  00097C  5C05               	subwf	___lldiv@dividend^0,w,c
  5855  00097E  500A               	movf	(___lldiv@divisor+1)^0,w,c
  5856  000980  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  5857  000982  500B               	movf	(___lldiv@divisor+2)^0,w,c
  5858  000984  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  5859  000986  500C               	movf	(___lldiv@divisor+3)^0,w,c
  5860  000988  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  5861  00098A  A0D8               	btfss	status,0,c
  5862  00098C  EFCA  F004         	goto	u1391
  5863  000990  EFCC  F004         	goto	u1390
  5864  000994                     u1391:
  5865  000994  EFD5  F004         	goto	l2539
  5866  000998                     u1390:
  5867  000998  5009               	movf	___lldiv@divisor^0,w,c
  5868  00099A  5E05               	subwf	___lldiv@dividend^0,f,c
  5869  00099C  500A               	movf	(___lldiv@divisor+1)^0,w,c
  5870  00099E  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  5871  0009A0  500B               	movf	(___lldiv@divisor+2)^0,w,c
  5872  0009A2  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  5873  0009A4  500C               	movf	(___lldiv@divisor+3)^0,w,c
  5874  0009A6  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  5875  0009A8  800D               	bsf	___lldiv@quotient^0,0,c
  5876  0009AA                     l2539:
  5877  0009AA  90D8               	bcf	status,0,c
  5878  0009AC  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  5879  0009AE  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  5880  0009B0  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  5881  0009B2  3209               	rrcf	___lldiv@divisor^0,f,c
  5882  0009B4  2E11               	decfsz	___lldiv@counter^0,f,c
  5883  0009B6  EFB8  F004         	goto	l2531
  5884  0009BA                     l540:
  5885  0009BA  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  5886  0009BE  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  5887  0009C2  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  5888  0009C6  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  5889  0009CA  0012               	return		;funcret
  5890  0009CC                     __end_of___lldiv:
  5891                           	opt callstack 0
  5892                           
  5893 ;; *************** function _EUSART_Init *****************
  5894 ;; Defined at:
  5895 ;;		line 12 in file "eusart.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;		None
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      void 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5909 ;;      Params:         0       0       0       0       0       0       0       0       0
  5910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5912 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5913 ;;Total ram usage:        0 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    3
  5916 ;; This function calls:
  5917 ;;		_memset
  5918 ;; This function is called by:
  5919 ;;		_main
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           
  5923                           	psect	text29
  5924  000E44                     __ptext29:
  5925                           	opt callstack 0
  5926  000E44                     _EUSART_Init:
  5927                           	opt callstack 27
  5928  000E44                     
  5929                           ;eusart.c: 14: TXSTAbits.TX9 = 0;
  5930  000E44  9CAC               	bcf	172,6,c	;volatile
  5931                           
  5932                           ;eusart.c: 15: TXSTAbits.TXEN = 1;
  5933  000E46  8AAC               	bsf	172,5,c	;volatile
  5934                           
  5935                           ;eusart.c: 16: TXSTAbits.SYNC = 0;
  5936  000E48  98AC               	bcf	172,4,c	;volatile
  5937                           
  5938                           ;eusart.c: 17: TXSTAbits.SENDB = 0;
  5939  000E4A  96AC               	bcf	172,3,c	;volatile
  5940                           
  5941                           ;eusart.c: 18: TXSTAbits.BRGH = 1;
  5942  000E4C  84AC               	bsf	172,2,c	;volatile
  5943                           
  5944                           ;eusart.c: 21: RCSTAbits.SPEN = 1;
  5945  000E4E  8EAB               	bsf	171,7,c	;volatile
  5946                           
  5947                           ;eusart.c: 22: RCSTAbits.RX9 = 0;
  5948  000E50  9CAB               	bcf	171,6,c	;volatile
  5949                           
  5950                           ;eusart.c: 23: RCSTAbits.CREN = 1;
  5951  000E52  88AB               	bsf	171,4,c	;volatile
  5952                           
  5953                           ;eusart.c: 26: BAUDCONbits.BRG16 = 1;
  5954  000E54  86B8               	bsf	184,3,c	;volatile
  5955                           
  5956                           ;eusart.c: 27: BAUDCONbits.WUE = 0;
  5957  000E56  92B8               	bcf	184,1,c	;volatile
  5958                           
  5959                           ;eusart.c: 28: BAUDCONbits.ABDEN = 0;
  5960  000E58  90B8               	bcf	184,0,c	;volatile
  5961  000E5A                     
  5962                           ;eusart.c: 29: SPBRGH = 0x04;
  5963  000E5A  0E04               	movlw	4
  5964  000E5C  6EB0               	movwf	176,c	;volatile
  5965                           
  5966                           ;eusart.c: 30: SPBRG = 0xE1;
  5967  000E5E  0EE1               	movlw	225
  5968  000E60  6EAF               	movwf	175,c	;volatile
  5969  000E62                     
  5970                           ;eusart.c: 33: RCIE = 1;
  5971  000E62  8A9D               	bsf	3997,5,c	;volatile
  5972                           
  5973                           ;eusart.c: 36: EUSART_RX.iRead = 0;
  5974  000E64  0E00               	movlw	0
  5975  000E66  0101               	movlb	1	; () banked
  5976  000E68  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
  5977                           
  5978                           ;eusart.c: 37: EUSART_RX.iWrite = 0;
  5979  000E6A  0E00               	movlw	0
  5980  000E6C  6F02               	movwf	(_EUSART_RX+2)& (0+255),b
  5981                           
  5982                           ;eusart.c: 38: EUSART_RX.processRX = 0;
  5983  000E6E  0E00               	movlw	0
  5984  000E70  6F00               	movwf	_EUSART_RX& (0+255),b
  5985                           
  5986                           ;eusart.c: 39: EUSART_RX.zzzzzzzzz = 1;
  5987  000E72  0E01               	movlw	1
  5988  000E74  6F03               	movwf	(_EUSART_RX+3)& (0+255),b
  5989  000E76                     
  5990                           ; BSR set to: 1
  5991                           ;eusart.c: 40: memset(EUSART_RX.buffer, 0x00, 64);
  5992  000E76  0E04               	movlw	low (_EUSART_RX+4)
  5993  000E78  6E05               	movwf	memset@p1^0,c
  5994  000E7A  0E01               	movlw	high (_EUSART_RX+4)
  5995  000E7C  6E06               	movwf	(memset@p1+1)^0,c
  5996  000E7E  0E00               	movlw	0
  5997  000E80  6E08               	movwf	(memset@c+1)^0,c
  5998  000E82  0E00               	movlw	0
  5999  000E84  6E07               	movwf	memset@c^0,c
  6000  000E86  0E00               	movlw	0
  6001  000E88  6E0A               	movwf	(memset@n+1)^0,c
  6002  000E8A  0E40               	movlw	64
  6003  000E8C  6E09               	movwf	memset@n^0,c
  6004  000E8E  ECE0  F008         	call	_memset	;wreg free
  6005  000E92                     
  6006                           ;eusart.c: 41: memset(EUSART_RX.line, 0x00, 32);
  6007  000E92  0E44               	movlw	low (_EUSART_RX+68)
  6008  000E94  6E05               	movwf	memset@p1^0,c
  6009  000E96  0E01               	movlw	high (_EUSART_RX+68)
  6010  000E98  6E06               	movwf	(memset@p1+1)^0,c
  6011  000E9A  0E00               	movlw	0
  6012  000E9C  6E08               	movwf	(memset@c+1)^0,c
  6013  000E9E  0E00               	movlw	0
  6014  000EA0  6E07               	movwf	memset@c^0,c
  6015  000EA2  0E00               	movlw	0
  6016  000EA4  6E0A               	movwf	(memset@n+1)^0,c
  6017  000EA6  0E20               	movlw	32
  6018  000EA8  6E09               	movwf	memset@n^0,c
  6019  000EAA  ECE0  F008         	call	_memset	;wreg free
  6020  000EAE  0012               	return		;funcret
  6021  000EB0                     __end_of_EUSART_Init:
  6022                           	opt callstack 0
  6023                           
  6024 ;; *************** function _memset *****************
  6025 ;; Defined at:
  6026 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;  p1              2    4[COMRAM] PTR void 
  6029 ;;		 -> A6_SetSpeed@response(32), loop@response_128(32), EUSART_RX(100), loop@response(32), 
  6030 ;;  c               2    6[COMRAM] int 
  6031 ;;  n               2    8[COMRAM] unsigned int 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  p               2   10[COMRAM] PTR unsigned char 
  6034 ;;		 -> A6_SetSpeed@response(32), loop@response_128(32), EUSART_RX(100), loop@response(32), 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  2    4[COMRAM] PTR void 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6044 ;;      Params:         6       0       0       0       0       0       0       0       0
  6045 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6046 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6047 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6048 ;;Total ram usage:        8 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:    2
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_loop
  6055 ;;		_EUSART_Init
  6056 ;;		_A6_ReadLine
  6057 ;;		_A6_SetSpeed
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text30
  6062  0011C0                     __ptext30:
  6063                           	opt callstack 0
  6064  0011C0                     _memset:
  6065                           	opt callstack 27
  6066  0011C0  C005  F00B         	movff	memset@p1,memset@p
  6067  0011C4  C006  F00C         	movff	memset@p1+1,memset@p+1
  6068  0011C8  EFEE  F008         	goto	l2299
  6069  0011CC                     l2295:
  6070  0011CC  C00B  FFD9         	movff	memset@p,fsr2l
  6071  0011D0  C00C  FFDA         	movff	memset@p+1,fsr2h
  6072  0011D4  C007  FFDF         	movff	memset@c,indf2
  6073  0011D8  4A0B               	infsnz	memset@p^0,f,c
  6074  0011DA  2A0C               	incf	(memset@p+1)^0,f,c
  6075  0011DC                     l2299:
  6076  0011DC  0609               	decf	memset@n^0,f,c
  6077  0011DE  A0D8               	btfss	status,0,c
  6078  0011E0  060A               	decf	(memset@n+1)^0,f,c
  6079  0011E2  2809               	incf	memset@n^0,w,c
  6080  0011E4  E106               	bnz	u991
  6081  0011E6  280A               	incf	(memset@n+1)^0,w,c
  6082  0011E8  A4D8               	btfss	status,2,c
  6083  0011EA  EFF9  F008         	goto	u991
  6084  0011EE  EFFB  F008         	goto	u990
  6085  0011F2                     u991:
  6086  0011F2  EFE6  F008         	goto	l2295
  6087  0011F6                     u990:
  6088  0011F6  0012               	return		;funcret
  6089  0011F8                     __end_of_memset:
  6090                           	opt callstack 0
  6091                           
  6092 ;; *************** function _isr *****************
  6093 ;; Defined at:
  6094 ;;		line 90 in file "init.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6110 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6111 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6112 ;;Total ram usage:        2 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    1
  6115 ;; This function calls:
  6116 ;;		_EUSART_RX_Interrupt
  6117 ;;		_Ecg_Interrupt
  6118 ;; This function is called by:
  6119 ;;		Interrupt level 2
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	intcode
  6124  000008                     __pintcode:
  6125                           	opt callstack 0
  6126  000008                     _isr:
  6127                           	opt callstack 21
  6128                           
  6129                           ;incstack = 0
  6130  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6131  00000A  EDEB  F006         	call	int_func,f	;refresh shadow registers
  6132                           
  6133                           	psect	intcode_body
  6134  000DD6                     __pintcode_body:
  6135                           	opt callstack 21
  6136  000DD6                     int_func:
  6137                           	opt callstack 21
  6138  000DD6  0006               	pop		; remove dummy address from shadow register refresh
  6139  000DD8  CFD9 F003          	movff	fsr2l,??_isr
  6140  000DDC  CFDA F004          	movff	fsr2h,??_isr+1
  6141  000DE0                     
  6142                           ;init.c: 92: if(TMR3IE && TMR3IF) {
  6143  000DE0  A2A0               	btfss	4000,1,c	;volatile
  6144  000DE2  EFF5  F006         	goto	i2u156_41
  6145  000DE6  EFF7  F006         	goto	i2u156_40
  6146  000DEA                     i2u156_41:
  6147  000DEA  EF0C  F007         	goto	i2l2743
  6148  000DEE                     i2u156_40:
  6149  000DEE  A2A1               	btfss	4001,1,c	;volatile
  6150  000DF0  EFFC  F006         	goto	i2u157_41
  6151  000DF4  EFFE  F006         	goto	i2u157_40
  6152  000DF8                     i2u157_41:
  6153  000DF8  EF0C  F007         	goto	i2l2743
  6154  000DFC                     i2u157_40:
  6155  000DFC                     
  6156                           ;init.c: 93: MILLISECONDS += 5;
  6157  000DFC  0E05               	movlw	5
  6158  000DFE  0100               	movlb	0	; () banked
  6159  000E00  27FC               	addwf	_MILLISECONDS& (0+255),f,b
  6160  000E02  0E00               	movlw	0
  6161  000E04  23FD               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
  6162  000E06  23FE               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
  6163  000E08  23FF               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
  6164  000E0A                     
  6165                           ; BSR set to: 0
  6166                           ;init.c: 94: Ecg_Interrupt();
  6167  000E0A  EC63  F009         	call	_Ecg_Interrupt	;wreg free
  6168  000E0E                     
  6169                           ;init.c: 97: TMR3H = 0x16;
  6170  000E0E  0E16               	movlw	22
  6171  000E10  6EB3               	movwf	179,c	;volatile
  6172  000E12                     
  6173                           ;init.c: 98: TMR3L = 0x00;
  6174  000E12  0E00               	movlw	0
  6175  000E14  6EB2               	movwf	178,c	;volatile
  6176  000E16                     
  6177                           ;init.c: 99: TMR3IF = 0;
  6178  000E16  92A1               	bcf	4001,1,c	;volatile
  6179  000E18                     i2l2743:
  6180                           
  6181                           ;init.c: 100: };init.c: 103: if(RCIE && RCIF) {
  6182  000E18  AA9D               	btfss	3997,5,c	;volatile
  6183  000E1A  EF11  F007         	goto	i2u158_41
  6184  000E1E  EF13  F007         	goto	i2u158_40
  6185  000E22                     i2u158_41:
  6186  000E22  EF1C  F007         	goto	i2l135
  6187  000E26                     i2u158_40:
  6188  000E26  AA9E               	btfss	3998,5,c	;volatile
  6189  000E28  EF18  F007         	goto	i2u159_41
  6190  000E2C  EF1A  F007         	goto	i2u159_40
  6191  000E30                     i2u159_41:
  6192  000E30  EF1C  F007         	goto	i2l135
  6193  000E34                     i2u159_40:
  6194  000E34                     
  6195                           ;init.c: 104: EUSART_RX_Interrupt();
  6196  000E34  EC43  F008         	call	_EUSART_RX_Interrupt	;wreg free
  6197  000E38                     i2l135:
  6198  000E38  C004  FFDA         	movff	??_isr+1,fsr2h
  6199  000E3C  C003  FFD9         	movff	??_isr,fsr2l
  6200  000E40  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6201  000E42  0011               	retfie		f
  6202  000E44                     __end_of_isr:
  6203                           	opt callstack 0
  6204                           
  6205 ;; *************** function _Ecg_Interrupt *****************
  6206 ;; Defined at:
  6207 ;;		line 135 in file "ecg.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;		None
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  1    wreg      void 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6221 ;;      Params:         0       0       0       0       0       0       0       0       0
  6222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6223 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6224 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6225 ;;Total ram usage:        2 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_isr
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text32
  6235  0012C6                     __ptext32:
  6236                           	opt callstack 0
  6237  0012C6                     _Ecg_Interrupt:
  6238                           	opt callstack 21
  6239  0012C6                     
  6240                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
  6241  0012C6  0E01               	movlw	1
  6242  0012C8  6E01               	movwf	??_Ecg_Interrupt^0,c
  6243  0012CA  5053               	movf	(_ECG_FLAGS+1)^0,w,c
  6244  0012CC  0B07               	andlw	7
  6245  0012CE  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
  6246  0012D0  5001               	movf	??_Ecg_Interrupt^0,w,c
  6247  0012D2  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
  6248  0012D4  5053               	movf	(_ECG_FLAGS+1)^0,w,c
  6249  0012D6  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
  6250  0012D8  0BF8               	andlw	-8
  6251  0012DA  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
  6252  0012DC  6E53               	movwf	(_ECG_FLAGS+1)^0,c
  6253  0012DE                     
  6254                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
  6255  0012DE  2A51               	incf	(_ECG_HEARTRATE+3)^0,f,c
  6256  0012E0                     
  6257                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
  6258  0012E0  8852               	bsf	_ECG_FLAGS^0,4,c
  6259  0012E2  0012               	return		;funcret
  6260  0012E4                     __end_of_Ecg_Interrupt:
  6261                           	opt callstack 0
  6262                           
  6263 ;; *************** function _EUSART_RX_Interrupt *****************
  6264 ;; Defined at:
  6265 ;;		line 71 in file "eusart.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  c               1    0[COMRAM] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0
  6280 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6282 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6283 ;;Total ram usage:        1 bytes
  6284 ;; Hardware stack levels used:    1
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_isr
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           	psect	text33
  6293  001086                     __ptext33:
  6294                           	opt callstack 0
  6295  001086                     _EUSART_RX_Interrupt:
  6296                           	opt callstack 21
  6297  001086                     
  6298                           ;eusart.c: 72: uint8_t c = RCREG;
  6299  001086  CFAE F001          	movff	4014,EUSART_RX_Interrupt@c	;volatile
  6300                           
  6301                           ;eusart.c: 73: if(OERR == 1) {
  6302  00108A  A2AB               	btfss	4011,1,c	;volatile
  6303  00108C  EF4A  F008         	goto	i2u148_41
  6304  001090  EF4C  F008         	goto	i2u148_40
  6305  001094                     i2u148_41:
  6306  001094  EF4E  F008         	goto	i2l2647
  6307  001098                     i2u148_40:
  6308  001098                     
  6309                           ;eusart.c: 74: CREN = 0;
  6310  001098  98AB               	bcf	4011,4,c	;volatile
  6311                           
  6312                           ;eusart.c: 75: CREN = 1;
  6313  00109A  88AB               	bsf	4011,4,c	;volatile
  6314  00109C                     i2l2647:
  6315                           
  6316                           ;eusart.c: 76: };eusart.c: 77: EUSART_RX.iWrite++;
  6317  00109C  0101               	movlb	1	; () banked
  6318  00109E  2B02               	incf	(_EUSART_RX+2)& (0+255),f,b
  6319  0010A0                     
  6320                           ; BSR set to: 1
  6321                           ;eusart.c: 78: if(EUSART_RX.iWrite == 64) EUSART_RX.iWrite = 0;
  6322  0010A0  0E40               	movlw	64
  6323  0010A2  1902               	xorwf	(_EUSART_RX+2)& (0+255),w,b
  6324  0010A4  A4D8               	btfss	status,2,c
  6325  0010A6  EF57  F008         	goto	i2u149_41
  6326  0010AA  EF59  F008         	goto	i2u149_40
  6327  0010AE                     i2u149_41:
  6328  0010AE  EF5B  F008         	goto	i2l2653
  6329  0010B2                     i2u149_40:
  6330  0010B2                     
  6331                           ; BSR set to: 1
  6332  0010B2  0E00               	movlw	0
  6333  0010B4  6F02               	movwf	(_EUSART_RX+2)& (0+255),b
  6334  0010B6                     i2l2653:
  6335                           
  6336                           ; BSR set to: 1
  6337                           ;eusart.c: 79: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
  6338  0010B6  0E04               	movlw	low (_EUSART_RX+4)
  6339  0010B8  2502               	addwf	(_EUSART_RX+2)& (0+255),w,b
  6340  0010BA  6ED9               	movwf	fsr2l,c
  6341  0010BC  6ADA               	clrf	fsr2h,c
  6342  0010BE  0E01               	movlw	high (_EUSART_RX+4)
  6343  0010C0  22DA               	addwfc	fsr2h,f,c
  6344  0010C2  C001  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
  6345  0010C6                     
  6346                           ; BSR set to: 1
  6347  0010C6  0012               	return		;funcret
  6348  0010C8                     __end_of_EUSART_RX_Interrupt:
  6349                           	opt callstack 0
  6350                           
  6351                           	psect	rparam
  6352  0000                     
  6353                           	psect	temp
  6354  00005B                     btemp:
  6355                           	opt callstack 0
  6356  00005B                     	ds	1
  6357  0000                     int$flags	set	btemp
  6358  0000                     wtemp8	set	btemp+1
  6359  0000                     ttemp5	set	btemp+1
  6360  0000                     ttemp6	set	btemp+4
  6361  0000                     ttemp7	set	btemp+8
  6362                           tosu	equ	0xFFF
  6363                           tosh	equ	0xFFE
  6364                           tosl	equ	0xFFD
  6365                           stkptr	equ	0xFFC
  6366                           pclatu	equ	0xFFB
  6367                           pclath	equ	0xFFA
  6368                           pcl	equ	0xFF9
  6369                           tblptru	equ	0xFF8
  6370                           tblptrh	equ	0xFF7
  6371                           tblptrl	equ	0xFF6
  6372                           tablat	equ	0xFF5
  6373                           prodh	equ	0xFF4
  6374                           prodl	equ	0xFF3
  6375                           indf0	equ	0xFEF
  6376                           postinc0	equ	0xFEE
  6377                           postdec0	equ	0xFED
  6378                           preinc0	equ	0xFEC
  6379                           plusw0	equ	0xFEB
  6380                           fsr0h	equ	0xFEA
  6381                           fsr0l	equ	0xFE9
  6382                           wreg	equ	0xFE8
  6383                           indf1	equ	0xFE7
  6384                           postinc1	equ	0xFE6
  6385                           postdec1	equ	0xFE5
  6386                           preinc1	equ	0xFE4
  6387                           plusw1	equ	0xFE3
  6388                           fsr1h	equ	0xFE2
  6389                           fsr1l	equ	0xFE1
  6390                           bsr	equ	0xFE0
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           preinc2	equ	0xFDC
  6395                           plusw2	equ	0xFDB
  6396                           fsr2h	equ	0xFDA
  6397                           fsr2l	equ	0xFD9
  6398                           status	equ	0xFD8


Data Sizes:
    Strings     94
    Constant    1546
    Data        79
    BSS         141
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      90
    BANK0           160     64     160
    BANK1           256      2     113
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    _doprnt$1	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), 

    _doprnt$0	PTR struct __prbuf size(2) Largest target is 5
		 -> sprintf@pb(COMRAM[4]), 

    A6_Command@resp2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), STR_13(CODE[3]), STR_10(CODE[3]), STR_4(CODE[3]), 
		 -> STR_2(CODE[3]), 

    A6_Command@resp1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), STR_3(CODE[3]), 
		 -> STR_1(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[14]), STR_11(CODE[16]), STR_8(CODE[15]), x1(BANK0[9]), 
		 -> x8(BANK0[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[14]), STR_11(CODE[16]), STR_8(CODE[15]), x1(BANK0[9]), 
		 -> x8(BANK0[4]), 

    S1685__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S1685__prbuf$ptr	PTR unsigned char  size(2) Largest target is 5
		 -> Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), 

    pb.ptr	PTR unsigned char  size(2) Largest target is 5
		 -> Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), 

    memset@p1	PTR void  size(2) Largest target is 100
		 -> A6_SetSpeed@response(COMRAM[32]), loop@response_128(BANK0[32]), EUSART_RX(BANK1[100]), loop@response(BANK0[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> A6_SetSpeed@response(COMRAM[32]), loop@response_128(BANK0[32]), EUSART_RX(BANK1[100]), loop@response(BANK0[32]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_SetSpeed@response(COMRAM[32]), loop@response_128(BANK0[32]), loop@response(BANK0[32]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[14]), STR_11(CODE[16]), STR_8(CODE[15]), x1(BANK0[9]), 
		 -> x8(BANK0[4]), 

    A6_ReadLine@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_SetSpeed@response(COMRAM[32]), loop@response_128(BANK0[32]), loop@response(BANK0[32]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[14]), STR_11(CODE[16]), STR_8(CODE[15]), x1(BANK0[9]), 
		 -> x8(BANK0[4]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 100
		 -> A6_SetSpeed@response(COMRAM[32]), EUSART_RX.line(BANK1[32]), STR_7(CODE[28]), STR_6(CODE[11]), 
		 -> Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), loop@response_128(BANK0[32]), EUSART_RX(BANK1[100]), loop@response(BANK0[32]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> A6_SetSpeed@response(COMRAM[32]), loop@response_128(BANK0[32]), EUSART_RX(BANK1[100]), loop@response(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_loop
    _loop->_TFT_DrawString
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen
    _A6_ReadLine->_memset
    _TFT_Init->_TFT_FillScreen
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _TFT_DrawLine->_TFT_DrawPixel
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _TFT_FillScreen->_TFT_Flood
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawFillRect
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_Flood
    _TFT_FullScreen->_TFT_SetAddrWindow
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister
    _EUSART_SetSpeed->___lldiv
    _EUSART_Init->_memset

Critical Paths under _isr in COMRAM

    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _main->_loop

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  113822
                                              0 BANK1      2     2      0
                        _EUSART_Init
                    _EUSART_SetSpeed
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                68    68      0   40574
                                             73 COMRAM     4     4      0
                                              0 BANK0     64    64      0
                         _A6_Command
                   _TFT_DrawFillRect
                     _TFT_DrawString
                             _memset
 ---------------------------------------------------------------------------------
 (2) _A6_Command                                          11     1     10    4101
                                             17 COMRAM    11     1     10
                        _A6_ReadLine
                   _EUSART_TX_String
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_TX_String                                     3     0      3     219
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _EUSART_TX_Char                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _A6_ReadLine                                          5     2      3    1750
                                             12 COMRAM     5     2      3
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            10    10      0   10568
                                             29 COMRAM    10    10      0
                     _TFT_FillScreen
                     _TFT_FullScreen
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0   60507
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (2) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Ok                              0     0      0   33142
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawLine                                        31    21     10    5824
                                             18 COMRAM    31    21     10
                      _TFT_DrawPixel
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     370
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Failure                         0     0      0   27318
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (2) _TFT_FillScreen                                       2     0      2    5356
                                             27 COMRAM     2     0      2
                          _TFT_Flood
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_DrawString                                      11     0     11   21962
                                             62 COMRAM    11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawChar                                        21    11     10   18592
                                             41 COMRAM    21    11     10
                   _TFT_DrawFillRect
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawPixel                                        6     0      6    3362
                                             12 COMRAM     6     0      6
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawFillRect                                    14     4     10   12899
                                             27 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     919
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _TFT_FullScreen                                       0     0      0    2896
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (5) _TFT_SetAddrWindow                                    8     0      8    2896
                                             12 COMRAM     8     0      8
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_Flood                                           15     9      6    2950
                                             12 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _TFT_WriteRegister                                    8     4      4    2156
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_SetSpeed                                     12     8      4     709
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     466
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0    1464
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1464
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (10) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (10) _EUSART_RX_Interrupt                                 1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
     _memset
   _EUSART_SetSpeed
     ___lldiv
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_WriteRegister
         ___awdiv
         _abs
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_FillScreen
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_WriteRegister
     _TFT_FullScreen
       _TFT_SetAddrWindow
         _TFT_WriteRegister
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _A6_Command
       _A6_ReadLine
         _memset
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _strlen
     _TFT_DrawFillRect
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_FullScreen
         _TFT_SetAddrWindow
           _TFT_WriteRegister
       _TFT_SetAddrWindow
         _TFT_WriteRegister
       ___wmul
     _TFT_DrawString
       _TFT_DrawChar
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawPixel
           _TFT_WriteRegister
         ___wmul
     _memset

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      2      71       7       44.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16B      20        0.0%
DATA                 0      0     16B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 24 21:05:52 2019

                                   l67 0226                    __size_of_A6_Command 0066  
                         ___awdiv@sign 000A                                     _x1 00D1  
                                   _x2 00B4                                     _x3 00C7  
                                   _x4 00BE                                     _x5 00AA  
                                   _x6 00A0                                     _x7 0164  
                                   _x8 00DA                    ___wmul@multiplicand 0007  
                          __CFG_BORV$0 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                                  l211 0672                                    l203 0602  
                                  l221 075C                                    l214 06C6  
                                  l206 0D62                                    l223 0784  
                                  l216 0782                                    l128 0DD4  
                                  l218 06E8                                    l234 0264  
                                  l226 1040                                    l330 125A  
                                  l243 041A                                    l173 12C4  
                                  l501 0F14                                    l158 1084  
                                  l190 1182                                    l176 0C74  
                                  l513 1280                                    l249 0AEC  
                                  l441 12E6                                    l450 1106  
                                  l435 0EAE                                    l179 12A6  
                                  l195 0564                                    l187 0862  
                                  l540 09BA                                    l444 12FA  
                                  l381 0FB0                                    l438 0BFA  
                                  l547 09CA                                    l395 0CEC  
                                  l493 0B76                                    l398 11BE  
                                  l744 0926        __end_of_Ecg_Background_Leads_Ok 0CEE  
                                  _GIE 007F97                           __CFG_CPB$OFF 000000  
                         __CFG_CPD$OFF 000000                                    u930 064E  
                                  u940 066E                                    u941 066A  
                                  u950 06BC                                    u951 06B8  
                                  u935 0644                                    u960 06E4  
                                  u961 06E0                                    u970 0752  
                                  u971 074E                                    u980 0782  
                                  u981 077E                                    u990 11F6  
                                  u991 11F2                           __CFG_BOR$OFF 000000  
                                  _abs 11F8                                    _isr 0008  
                                  wreg 000FE8                   __size_of_A6_ReadLine 008A  
                         TFT_Flood@len 000F                           ?_EUSART_Init 0001  
                         __CFG_LVP$OFF 000000                           TFT_Init@data 0020  
                         __CFG_WDT$OFF 000000                                   ?_abs 0005  
                                 l2211 1042                                   l3011 0FB6  
                                 l2221 1058                                   l2213 1048  
                                 l2301 11F8                                   l3021 0FF0  
                                 l3013 0FBA                                   l1182 11F6  
                                 l2231 106A                                   l2223 105A  
                                 l2215 104C                                   l2311 022C  
                                 l2303 1206                                   l1175 1222  
                                 l3015 0FBE                                   l1176 122A  
                                 l2241 107C                                   l2233 106E  
                                 l2225 105E                                   l2217 1050  
                                 l2321 0282                                   l2313 0260  
                                 l2305 0228                                   l2401 0FFC  
                                 l3017 0FD2                                   l3009 0FB2  
                                 l2243 1080                                   l2235 1072  
                                 l2227 1062                                   l2219 1054  
                                 l2251 0604                                   l2331 0382  
                                 l2323 02B8                                   l2403 1024  
                                 l2411 04AC                                   l1195 0F62  
                                 l3019 0FD6                                   l2245 1082  
                                 l2237 1076                                   l2229 1064  
                                 l2261 062E                                   l2253 0608  
                                 l2341 0406                                   l2333 03EA  
                                 l2325 0324                                   l2421 0558  
                                 l2413 04CA                                   l2405 041C  
                                 l2501 0F88                                   l2239 1078  
                                 l2271 06D2                                   l2263 065C  
                                 l2255 060C                                   l2247 0BFC  
                                 l2335 03EC                                   l2327 033C  
                                 l2319 0272                                   l2351 0876  
                                 l2431 05C2                                   l2423 056C  
                                 l2415 04FA                                   l2407 046A  
                                 l2511 0CB0                                   l2503 0FAA  
                                 l1631 0D6E                                   l2343 12E6  
                                 l2521 0928                                   l2273 0738  
                                 l2257 0620                                   l2249 1282  
                                 l2281 1278                                   l2337 03F0  
                                 l2329 034C                                   l2361 089C  
                                 l2353 087E                                   l2433 05D0  
                                 l2425 057E                                   l2417 0506  
                                 l2409 047C                                   l2513 0CDA  
                                 l2601 1254                                   l1561 12A8  
                                 l1641 0D94                                   l1633 0D74  
                                 l2345 12F4                                   l2441 10CC  
                                 l2531 0970                                   l2523 0938  
                                 l2275 0752                                   l2267 06A2  
                                 l2259 062A                                   l2291 1146  
                                 l2339 0404                                   l2371 08D4  
                                 l2363 08A4                                   l2355 0882  
                                 l2347 0864                                   l2435 05E0  
                                 l2427 059E                                   l2419 051E  
                                 l2515 0CE2                                   l2507 0C76  
                                 l2603 1258                                   l1571 12B4  
                                 l1563 12AC                                   l1651 0DA6  
                                 l1643 0D98                                   l1635 0D8C  
                                 l1627 0D64                                   l2451 0B0C  
                                 l2443 10F0                                   l2611 0076  
                                 l2293 11C0                                   l2541 09B4  
                                 l2533 097A                                   l2525 094E  
                                 l2277 0770                                   l2269 06BC  
                                 l2285 0CEE                                   l2517 1184  
                                 l2381 0900                                   l2373 08DA  
                                 l2365 08B6                                   l2357 0890  
                                 l2349 0868                                   l2429 05BA  
                                 l2437 05E4                                   l2509 0C82  
                                 l1573 12C2                                   l1565 12AE  
                                 l1661 0DBA                                   l1653 0DAA  
                                 l1645 0D9A                                   l1637 0D8E  
                                 l1629 0D66                                   l2461 0B60  
                                 l2453 0B20                                   l2445 10F4  
                                 l2613 0092                                   l2621 011C  
                                 l2605 0012                                   l2295 11CC  
                                 l2535 0998                                   l2527 0956  
                                 l2279 125C                                   l2287 0D32  
                                 l2391 0A5E                                   l2519 1190  
                                 l2375 08F0                                   l2367 08BE  
                                 l2383 0906                                   l2359 0898  
                                 l1567 12B0                                   l2551 07B4  
                                 l2543 0786                                   l1671 0DCE  
                                 l1663 0DBE                                   l1655 0DAC  
                                 l1647 0D9E                                   l1639 0D90  
                                 l2463 0B66                                   l2455 0B22  
                                 l2447 0AEE                                   l2439 10C8  
                                 l2471 0F26                                   l2631 01C8  
                                 l2623 013A                                   l2615 00BE  
                                 l2607 0030                                   l2297 11D8  
                                 l2537 09A8                                   l2529 0962  
                                 l2289 0D5E                                   l2393 0A62  
                                 l2385 0916                                   l2377 08F8  
                                 l2369 08C6                                   l1569 12B2  
                                 l2561 0826                                   l2553 07D2  
                                 l2545 078A                                   l1673 0DD0  
                                 l1665 0DC6                                   l1657 0DB0  
                                 l1649 0DA2                                   l2449 0AF2  
                                 l2473 0F56                                   l2481 0ED0  
                                 l2633 01CE                                   l2625 0170  
                                 l2617 00C4                                   l2609 0066  
                                 l2299 11DC                                   l2571 0E5A  
                                 l2539 09AA                                   l2395 0AAC  
                                 l2387 091E                                   l2379 08FA  
                                 l2491 0F64                                   l2555 07D6  
                                 l2563 083A                                   l2547 07A0  
                                 l1675 0DD2                                   l1667 0DCA  
                                 l1659 0DB8                                   l2459 0B44  
                                 l2467 0F16                                   l2483 0EE4  
                                 l2635 01F8                                   l2627 0180  
                                 l2619 00EE                                   l2573 0E62  
                                 l2581 0B7E                                   l2397 0AB8  
                                 l2493 0F68                                   l2565 0852  
                                 l2557 07F8                                   l2549 07A8  
                                 l1669 0DCC                                   l2469 0F22  
                                 l2485 0EE6                                   l2477 0EB0  
                                 l2629 019C                                   l2575 0E76  
                                 l2583 0BB2                                   l2399 0ABC  
                                 l2495 0F76                                   l2567 0856  
                                 l2559 080C                                   l2487 0F04  
                                 l2479 0EB4                                   l2577 0E92  
                                 l2569 0E44                                   l2585 0BE8  
                                 l2497 0F78                                   l2593 122C  
                                 l2587 0BF2                                   l2579 0B78  
                                 l2499 0F86                                   l2595 1242  
                                 l2589 0BF6                                   l2597 124A  
                                 l2599 124E                                   ?_isr 0001  
                                 STR_1 5FF9                                   STR_2 5FFC  
                                 STR_3 5FF9                                   STR_4 5FFC  
                                 STR_5 5FF5                                   STR_6 5FEA  
                                 STR_7 5FA1                                   STR_8 5FCD  
                                 u1000 1206                                   _CREN 007D5C  
                                 u1001 1202                                   u1010 0272  
                                 u1011 026E                                   u1020 0282  
                                 u1100 08B6                                   u1021 027E  
                                 u1101 08B2                                   u1030 033C  
                                 u1110 08D4                                   u1031 0338  
                                 u1111 08D0                                   u1040 034C  
                                 u1120 08F0                                   u1200 04CA  
                                 u1041 0348                                   u1121 08EC  
                                 u1201 04C6                                   u1050 0404  
                                 u1130 0916                                   u1210 0558  
                                 u1051 0400                                   u1131 0912  
                                 u1211 0554                                   u1060 041A  
                                 u1140 0A92                                   u1220 057E  
                                 u1300 0F56                                   u1061 0416  
                                 u1221 057A                                   u1301 0F52  
                        TFT_DrawChar@c 002E                                   u1150 0ADC  
                                 u1230 05D0                                   u1070 12F4  
                                 u1310 0EE4                                   u1231 05CC  
                                 u1071 12F0                                   u1311 0EE0  
                                 u1160 0AEC                                   u1080 0876  
                                 u1240 0602                                   u1400 080C  
                                 u1320 0F04                                   u1161 0AE8  
                                 u1081 0872                                   u1241 05FE  
                                 u1401 0808                                   u1321 0F00  
                                 u1090 0890                                   u1170 0464  
                                 u1330 0F76                                   u1410 0852  
                                 u1250 10EC                                   u1147 0A88  
                                 u1091 088C                                   u1171 045E  
                                 u1331 0F72                                   u1411 084E  
                        TFT_DrawChar@i 003E                                   u1420 0BD2  
                                 u1180 0466                                   u1340 0F86  
                                 u1260 1106                          TFT_DrawChar@j 003D  
                                 u1157 0AD2                                   u1341 0F82  
                                 u1261 1102                                   _LATA 000F89  
                                 u1190 047C                                   u1350 0F9C  
                                 u1430 1242                                   u1270 0B20  
                                 _LATB 000F8A                                   u1191 0478  
                                 u1351 0F94                                   u1431 123E  
                                 u1271 0B1C                                   _LATC 000F8B  
                                 u1280 0B40                                   u1440 0030  
                                 u1425 0BC8                                   u1281 0B3C  
                                 u1257 10E2                                   u1441 002C  
                                 u1370 094E                                   u1290 0F46  
                                 u1450 0066                                   u1371 094A  
                                 u1451 0062                                   u1380 0970  
                                 u1460 013A                                   u1381 096C  
                                 u1461 0136                                   u1390 0998  
                                 u1470 0170                                   u1391 0994  
                                 u1471 016C                                   u1368 0F9E  
                                 u1297 0F3C                          TFT_DrawChar@x 002A  
                        TFT_DrawChar@y 002C                                   u1857 0FE2  
                                 u1867 0D7E                                   _PEIE 007F96  
                                 u1877 0794                                   u1887 0816  
                                 u1897 12BA                                   _RCIE 007CED  
                                 _RCIF 007CF5                                   _OERR 007D59  
                                 _RBPU 007F8F                                   _TXIF 007CF4  
                        TFT_DrawLine@t 0020                                   abs@a 0005  
                                 _main 0FB2                                   _init 0D64  
                                 _tmp1 00F8                                   _tmp2 00F4  
                                 _tmp3 0054                                   _tmp4 00F0  
                                 _loop 0012                                   fsr0h 000FEA  
                                 indf0 000FEF                                   fsr2h 000FDA  
                                 fsr0l 000FE9                                   indf1 000FE7  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 fsr2l 000FD9                                   btemp 005B  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 000E                      TFT_Flood@color_hi 001A  
                    TFT_Flood@color_lo 001B                          __CFG_IESO$OFF 000000  
                         ___param_bank 000000          ?_Ecg_Background_Leads_Failure 0001  
                                ??_abs 0007                                  ??_isr 0003  
                        __CFG_PLLDIV$1 000000                        ??_TFT_DrawPixel 0013  
                       __CFG_CCP2MX$ON 000000                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 0928  
                                ?_loop 0001                                  STR_11 5FBD  
                                STR_14 5FDC                        __end_of___lldiv 09CC  
                      ___awdiv@divisor 0007                         TFT_DrawChar@bg 0031  
                                i2l135 0E38                                  i2l455 10C6  
                                i2l376 12E2                        ___awdiv@counter 0009  
                                _RCREG 000FAE                                  _TMR3H 000FB3  
                                _TMR3L 000FB2                                  _SPBRG 000FAF  
                                _PORTB 000F81                          __CFG_USBDIV$2 000000  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TXREG 000FAD  
                                _Ecg_X 0059                                  _Ecg_Y 0055  
                        __CFG_PWRT$OFF 000000                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       TFT_DrawLine@x0 0013                         TFT_DrawLine@x1 0017  
                       TFT_DrawLine@y0 0015                         TFT_DrawLine@y1 0019  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                       TFT_DrawLine@dx 0030                         TFT_DrawLine@dy 0028  
                        __CFG_WRTD$OFF 000000                         __CFG_EBTRB$OFF 000000  
              __size_of_Ecg_CheckLeads 004E                       __end_of_TFT_Font 5E97  
                     __end_of_TFT_Init 0864                         TFT_DrawPixel@x 000D  
                       TFT_DrawPixel@y 000F                     __size_of_TFT_Flood 0182  
                     _TFT_DrawFillRect 0CEE                                  tablat 000FF5  
                   __size_of_TFT_Reset 001E                 __size_of_Ecg_Interrupt 001E  
                     __end_of_Ecg_Init 125C                                  ttemp5 005C  
                                ttemp6 005F                                  ttemp7 0063  
                                status 000FD8                                  wtemp8 005C  
                    ??_EUSART_SetSpeed 0016                         __CFG_MCLRE$OFF 000000  
                       TFT_Flood@color 000D                        __initialization 09CC  
                         __end_of_main 0FFC                           __end_of_init 0DD6  
                         __end_of_loop 0228                                 ??_main 016F  
                     ??_TFT_FillScreen 001E                                 ??_init 0005  
                               ??_loop 004A                          __activetblptr 000002  
                     ??_TFT_DrawString 004A                       loop@response_128 0080  
                         ??_A6_Command 001C                         _EUSART_TX_Char 12E4  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                     ___awdiv@dividend 0005                      _TFT_DrawChar$1935 0039  
                    _TFT_DrawChar$1936 003B                                 i2l2641 12E0  
                               i2l2651 10B2                                 i2l2643 1086  
                               i2l2731 0DEE                                 i2l2653 10B6  
                               i2l2645 1098                                 i2l2637 12C6  
                               i2l2741 0E16                                 i2l2733 0DFC  
                               i2l2647 109C                                 i2l2639 12DE  
                               i2l2735 0E0A                                 i2l2743 0E18  
                               i2l2649 10A0                                 i2l2745 0E26  
                               i2l2737 0E0E                                 i2l2729 0DE0  
                               i2l2747 0E34                                 i2l2739 0E12  
                               _TMR3IE 007D01                                 _TMR3IF 007D09  
                               _SPBRGH 000FB0       __size_of_Ecg_Background_Leads_Ok 0078  
                       __CFG_XINST$OFF 000000                        TFT_DrawLine@err 002C  
                     ??_TFT_FullScreen 0015                                 ___wmul 125C  
                            ??___awdiv 0009                              ??___lldiv 000D  
                    ?_EUSART_TX_String 0009                                 _memset 11C0  
                        _Ecg_Interrupt 12C6                      __end_of_TFT_Flood 0786  
                               clear_0 0A32                                 clear_1 0A3E  
                               clear_2 0A4A                     __end_of_A6_Command 0F16  
                     ___awdiv@quotient 000B                      __end_of_TFT_Reset 12C6  
                   ??_EUSART_TX_String 000C                                 _strlen 0F16  
                         __pdataCOMRAM 0055                           __mediumconst 5996  
               __end_of_EUSART_TX_Char 12FC                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                      TFT_DrawString@x 003F                        TFT_DrawString@y 0041  
                 __size_of_EUSART_Init 006C                             __accesstop 0060  
              __end_of__initialization 0A50                        __CFG_PBADEN$OFF 000000  
                        ___rparam_used 000001                        TFT_Flood@blocks 0017  
                       __pcstackCOMRAM 0001                           __pidataBANK0 1108  
                         __pidataBANK1 12FC                         ?_Ecg_Interrupt 0001  
                            ?_TFT_Init 0001                              ?_Ecg_Init 0001  
         __size_of_EUSART_RX_Interrupt 0042                        ?_EUSART_TX_Char 0001  
                       _Ecg_CheckLeads 0F64                             __pbssBANK0 00DE  
                           __pbssBANK1 0100                                ?___wmul 0005  
                           ??_TFT_Init 001E                                ?_memset 0005  
             __end_of_TFT_DrawFillRect 0D64                                ?_strlen 0005  
                        ??_A6_ReadLine 0010                             ??_Ecg_Init 004A  
               TFT_WriteRegister@h_676 000B                 TFT_WriteRegister@l_677 000C  
               __end_of_Ecg_CheckLeads 0FB2                       TFT_DrawChar@line 0038  
                     TFT_DrawChar@size 0033                        _EUSART_SetSpeed 0B78  
                            TFT_Init@i 0026                        __CFG_VREGEN$OFF 000000  
                TFT_DrawFillRect@color 0024                _Ecg_Background_Leads_Ok 0C76  
                              __Hparam 0000                                __Lparam 0000  
                    A6_Command@command 0012                              _ECG_FLAGS 0052  
                      ??_Ecg_Interrupt 0001                                ___awdiv 0864  
                              ___lldiv 0928                        __size_of___wmul 0026  
                      __CFG_STVREN$OFF 000000                      A6_Command@timeout 0018  
                        _ECG_HEARTBEAT 00DE                                __pcinit 09CC  
                      __size_of_memset 0038                                __ramtop 0800  
                        _ECG_HEARTRATE 004E                                __ptext0 0FB2  
                              __ptext1 0012                                __ptext2 0EB0  
                              __ptext3 0F16                                __ptext4 10C8  
                              __ptext5 12E4                                __ptext6 0AEE  
                              __ptext7 0D64                                __ptext8 0786  
                              __ptext9 12A8                  __end_of_TFT_DrawPixel 1184  
                      __size_of_strlen 004E                           __size_of_abs 0034  
                         __size_of_isr 0E3C                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                    __end_of_A6_ReadLine 0B78  
                       __pintcode_body 0DD6                              _EUSART_RX 0100  
                 end_of_initialization 0A50                                memset@c 0007  
                              memset@n 0009                                memset@p 000B  
                        __Lmediumconst 5996                                int_func 0DD6  
                       A6_ReadLine@len 000F                     TFT_WriteRegister@h 0009  
                   TFT_WriteRegister@l 000A                        ___lldiv@divisor 0009  
                      ___lldiv@counter 0011              Ecg_CheckLeads@leadsStatus 0008  
                            _RCSTAbits 000FAB                                postdec1 000FE5  
                              postinc0 000FEE                                postinc2 000FDE  
                     TFT_DrawString@bg 0047                          ?_TFT_DrawChar 002A  
                        ?_TFT_DrawLine 0013                                strlen@s 0005  
                            _PORTAbits 000F80                              _PORTCbits 000F82  
              __end_of_EUSART_SetSpeed 0BFC                              _TFT_Flood 0604  
                            _TFT_Reset 12A8                   EUSART_SetSpeed@speed 0012  
            __size_of_EUSART_TX_String 0040              ??_Ecg_Background_Leads_Ok 004A  
                          TFT_Init@cmd 0024                              _TXSTAbits 000FAC  
                  _EUSART_RX_Interrupt 1086                         ??_TFT_DrawChar 0034  
                       ??_TFT_DrawLine 001D                         __end_of___wmul 1282  
                          _BAUDCONbits 000FB8                          __pidataCOMRAM 1307  
                     ??_EUSART_TX_Char 0005                         __end_of_memset 11F8  
                    __size_of_TFT_Init 00DE                           _MILLISECONDS 00FC  
                          _A6_ReadLine 0AEE                             ?_TFT_Flood 000D  
                       __end_of_strlen 0F64                             ?_TFT_Reset 0001  
                  start_initialization 09CC                   ?_EUSART_RX_Interrupt 0001  
                    __size_of_Ecg_Init 0030                            __end_of_abs 122C  
                          __end_of_isr 0E44                          ??_EUSART_Init 000D  
                  TFT_SetAddrWindow@x1 000D                    TFT_SetAddrWindow@x2 0011  
                  TFT_SetAddrWindow@y1 000F                    TFT_SetAddrWindow@y2 0013  
              __size_of_TFT_FillScreen 0046                    EUSART_TX_String@len 000B  
                  EUSART_TX_String@str 0009                __size_of_TFT_DrawString 0090  
                      A6_Command@resp1 0014                        A6_Command@resp2 0016  
                    _TFT_Init_Sequence 5E97                               ??___wmul 0009  
                          __pdataBANK0 00A0                            __pdataBANK1 0164  
                     __CFG_LPT1OSC$OFF 000000                               ??_memset 000B  
                    ?_TFT_DrawFillRect 001C                               ??_strlen 0007  
                   ??_TFT_DrawFillRect 0026                     EUSART_SetSpeed@tmp 001A  
                     ?_EUSART_SetSpeed 0012                  ??_EUSART_RX_Interrupt 0001  
       ??_Ecg_Background_Leads_Failure 004A                __size_of_TFT_FullScreen 0026  
                          __pbssCOMRAM 004E                          __pcstackBANK0 0060  
                        __pcstackBANK1 016F                           loop@response 0060  
                  __end_of_EUSART_Init 0EB0              __end_of_TFT_Init_Sequence 5F63  
                            __pintcode 0008                          __pmediumconst 5996  
                             ?___awdiv 0005                               ?___lldiv 0005  
                     ??_Ecg_CheckLeads 0007                  TFT_WriteRegister@data 0007  
                          ??_TFT_Flood 0013                   EUSART_RX_Interrupt@c 0001  
                          ??_TFT_Reset 0005                      _TFT_WriteRegister 1042  
                     _EUSART_TX_String 10C8                   __end_of_TFT_DrawChar 041C  
                 __end_of_TFT_DrawLine 0604                    A6_ReadLine@response 000D  
                   ?_TFT_WriteRegister 0005                         ___wmul@product 0009  
                    TFT_DrawChar@color 002F                    ??_TFT_WriteRegister 0009  
                             i2u148_40 1098                               i2u156_40 0DEE  
                             i2u148_41 1094                               i2u156_41 0DEA  
                             i2u149_40 10B2                               i2u157_40 0DFC  
                             i2u149_41 10AE                               i2u157_41 0DF8  
                             i2u158_40 0E26                               i2u158_41 0E22  
                             i2u159_40 0E34                               i2u159_41 0E30  
                             _GO_nDONE 007E11                               _UCFGbits 000F6F  
                     __CFG_WDTPS$32768 000000                               _UCONbits 000F6D  
                __end_of_Ecg_Interrupt 12E4                               _TFT_Font 5997  
                             _TFT_Init 0786                             _ADCON0bits 000FC2  
                           _ADCON1bits 000FC1                             _ADCON2bits 000FC0  
                    ___wmul@multiplier 0005                               _Ecg_Init 122C  
                           TFT_Flood@i 0019                               _Ecg_Xold 0057  
                             _Ecg_Yold 00CF              __end_of_TFT_WriteRegister 1086  
                   TFT_DrawPixel@color 0011                        EUSART_TX_Char@c 0005  
                          _EUSART_Init 0E44                      TFT_DrawFillRect@h 0022  
                           _A6_Command 0EB0                      TFT_DrawFillRect@w 0020  
                    TFT_DrawFillRect@x 001C                      TFT_DrawFillRect@y 001E  
                       _TFT_FillScreen 0FFC                              copy_data0 09E0  
                            copy_data1 0A00                              copy_data2 0A20  
                    _TFT_SetAddrWindow 0BFC                         _TFT_DrawString 0A5E  
               __size_of_TFT_DrawPixel 003E                     ?_TFT_SetAddrWindow 000D  
                             __Hrparam 0000                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0022                             _ECG_BUFFER 00EB  
                  TFT_DrawString@color 0045                    ??_TFT_SetAddrWindow 0015  
                    TFT_DrawLine@t_721 0022                      TFT_DrawLine@t_722 0024  
                    TFT_DrawLine@t_723 0026                       __size_of___awdiv 00C4  
                     __size_of___lldiv 00A4                      TFT_DrawLine@color 001B  
                    TFT_DrawLine@steep 002E                      TFT_DrawLine@ystep 002A  
                         ?_A6_ReadLine 000D                         _TFT_FullScreen 1282  
                   A6_Command@response 001A                       A6_ReadLine@iLine 0011  
               __end_of_TFT_FillScreen 1042                               __ptext10 122C  
                             __ptext11 0F64                               __ptext20 1146  
                             __ptext12 0C76                               __ptext21 0CEE  
                             __ptext13 041C                               __ptext30 11C0  
                             __ptext22 125C                               __ptext14 11F8  
                             __ptext23 1282                               __ptext15 0864  
                             __ptext32 12C6                               __ptext24 0BFC  
                             __ptext16 1184                               __ptext33 1086  
                             __ptext25 0604                               __ptext17 0FFC  
                             __ptext26 1042                               __ptext18 0A5E  
                             __ptext27 0B78                               __ptext19 0228  
                             __ptext28 0928                               __ptext29 0E44  
                 TFT_WriteRegister@reg 0005              __end_of_TFT_SetAddrWindow 0C76  
               __end_of_TFT_DrawString 0AEE                          __size_of_main 004A  
                        __size_of_init 0072                          __size_of_loop 0216  
                       _ECG_ICON_HEART 5F63                               int$flags 005B  
                  TFT_FillScreen@color 001C                 __end_of_TFT_FullScreen 12A8  
                __CFG_CPUDIV$OSC1_PLL2 000000                          _TFT_DrawPixel 1146  
                          _OSCTUNEbits 000F9B                  __size_of_TFT_DrawChar 01F4  
                __size_of_TFT_DrawLine 01E8             __size_of_TFT_WriteRegister 0044  
                      ?_TFT_FillScreen 001C               ?_Ecg_Background_Leads_Ok 0001  
                             memset@p1 0005                     TFT_DrawString@size 0049  
                          ?_A6_Command 0012                               intlevel2 0000  
            __size_of_TFT_DrawFillRect 0076                        ?_TFT_DrawString 003F  
                     ___lldiv@dividend 0005                 __end_of_ECG_ICON_HEART 5FA1  
                           _OSCCONbits 000FD3               __end_of_EUSART_TX_String 1108  
                         _TFT_DrawChar 0228                           _TFT_DrawLine 041C  
          __end_of_EUSART_RX_Interrupt 10C8                        ?_TFT_FullScreen 0001  
                    TFT_DrawString@str 0043                         ?_TFT_DrawPixel 000D  
                     ___lldiv@quotient 000D                               strlen@cp 0007  
              __size_of_EUSART_TX_Char 0018             __size_of_TFT_SetAddrWindow 007A  
                   __CFG_FOSC$HSPLL_HS 000000               __size_of_EUSART_SetSpeed 0084  
 __end_of_Ecg_Background_Leads_Failure 11C0  __size_of_Ecg_Background_Leads_Failure 003C  
         _Ecg_Background_Leads_Failure 1184  
