

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Dec 25 13:56:56 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67  0000                     
    68                           ; Version 2.10
    69                           ; Generated 31/07/2019 GMT
    70                           ; 
    71                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18F2455 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataCOMRAM
   104  001D32                     __pidataCOMRAM:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for _Ecg_Y
   108  001D32  018F               	dw	399
   109                           
   110                           ;initializer for _Ecg_X
   111  001D34  00EF               	dw	239
   112                           
   113                           	psect	idataBANK0
   114  001D2A                     __pidataBANK0:
   115                           	opt callstack 0
   116                           
   117                           ;initializer for _A6_SPEED
   118  001D2A  2580               	dw	9600
   119  001D2C  0000               	dw	0
   120                           
   121                           ;initializer for _Ecg_Yold
   122  001D2E  018F               	dw	399
   123                           
   124                           ;initializer for _Ecg_Xold
   125  001D30  00EF               	dw	239
   126                           
   127                           	psect	idataBANK1
   128  0018D2                     __pidataBANK1:
   129                           	opt callstack 0
   130                           
   131                           ;initializer for A6_SpeedAutoDetect@F3081
   132  0018D2  2580               	dw	9600
   133  0018D4  0000               	dw	0
   134  0018D6  E100               	dw	57600
   135  0018D8  0000               	dw	0
   136  0018DA  C200               	dw	49664
   137  0018DC  0001               	dw	1
   138                           
   139                           ;initializer for _x7
   140  0018DE  41                 	db	65
   141  0018DF  54                 	db	84
   142  0018E0  2B                 	db	43
   143  0018E1  43                 	db	67
   144  0018E2  4F                 	db	79
   145  0018E3  50                 	db	80
   146  0018E4  53                 	db	83
   147  0018E5  3D                 	db	61
   148  0018E6  3F                 	db	63
   149  0018E7  0D                 	db	13
   150  0018E8  00                 	db	0
   151                           
   152                           ;initializer for _x6
   153  0018E9  41                 	db	65
   154  0018EA  54                 	db	84
   155  0018EB  2B                 	db	43
   156  0018EC  43                 	db	67
   157  0018ED  4F                 	db	79
   158  0018EE  50                 	db	80
   159  0018EF  53                 	db	83
   160  0018F0  3F                 	db	63
   161  0018F1  0D                 	db	13
   162  0018F2  00                 	db	0
   163                           
   164                           ;initializer for _x5
   165  0018F3  41                 	db	65
   166  0018F4  54                 	db	84
   167  0018F5  2B                 	db	43
   168  0018F6  43                 	db	67
   169  0018F7  52                 	db	82
   170  0018F8  45                 	db	69
   171  0018F9  47                 	db	71
   172  0018FA  3F                 	db	63
   173  0018FB  0D                 	db	13
   174  0018FC  00                 	db	0
   175                           
   176                           ;initializer for _x2
   177  0018FD  41                 	db	65
   178  0018FE  54                 	db	84
   179  0018FF  2B                 	db	43
   180  001900  43                 	db	67
   181  001901  43                 	db	67
   182  001902  4C                 	db	76
   183  001903  4B                 	db	75
   184  001904  3F                 	db	63
   185  001905  0D                 	db	13
   186  001906  00                 	db	0
   187                           
   188                           ;initializer for _x4
   189  001907  41                 	db	65
   190  001908  54                 	db	84
   191  001909  2B                 	db	43
   192  00190A  43                 	db	67
   193  00190B  43                 	db	67
   194  00190C  49                 	db	73
   195  00190D  44                 	db	68
   196  00190E  0D                 	db	13
   197  00190F  00                 	db	0
   198                           
   199                           ;initializer for _x3
   200  001910  41                 	db	65
   201  001911  54                 	db	84
   202  001912  2B                 	db	43
   203  001913  43                 	db	67
   204  001914  53                 	db	83
   205  001915  51                 	db	81
   206  001916  0D                 	db	13
   207  001917  00                 	db	0
   208                           
   209                           ;initializer for _x1
   210  001918  41                 	db	65
   211  001919  54                 	db	84
   212  00191A  2B                 	db	43
   213  00191B  49                 	db	73
   214  00191C  50                 	db	80
   215  00191D  52                 	db	82
   216  00191E  3F                 	db	63
   217  00191F  0D                 	db	13
   218  001920  00                 	db	0
   219                           
   220                           ;initializer for _x8
   221  001921  41                 	db	65
   222  001922  54                 	db	84
   223  001923  0D                 	db	13
   224  001924  00                 	db	0
   225                           
   226                           	psect	mediumconst
   227  00590E                     __pmediumconst:
   228                           	opt callstack 0
   229  00590E  00                 	db	0
   230  00590F                     _TFT_Font:
   231                           	opt callstack 0
   232  00590F  00                 	db	0
   233  005910  00                 	db	0
   234  005911  00                 	db	0
   235  005912  00                 	db	0
   236  005913  00                 	db	0
   237  005914  3E                 	db	62
   238  005915  5B                 	db	91
   239  005916  4F                 	db	79
   240  005917  5B                 	db	91
   241  005918  3E                 	db	62
   242  005919  3E                 	db	62
   243  00591A  6B                 	db	107
   244  00591B  4F                 	db	79
   245  00591C  6B                 	db	107
   246  00591D  3E                 	db	62
   247  00591E  1C                 	db	28
   248  00591F  3E                 	db	62
   249  005920  7C                 	db	124
   250  005921  3E                 	db	62
   251  005922  1C                 	db	28
   252  005923  18                 	db	24
   253  005924  3C                 	db	60
   254  005925  7E                 	db	126
   255  005926  3C                 	db	60
   256  005927  18                 	db	24
   257  005928  1C                 	db	28
   258  005929  57                 	db	87
   259  00592A  7D                 	db	125
   260  00592B  57                 	db	87
   261  00592C  1C                 	db	28
   262  00592D  1C                 	db	28
   263  00592E  5E                 	db	94
   264  00592F  7F                 	db	127
   265  005930  5E                 	db	94
   266  005931  1C                 	db	28
   267  005932  00                 	db	0
   268  005933  18                 	db	24
   269  005934  3C                 	db	60
   270  005935  18                 	db	24
   271  005936  00                 	db	0
   272  005937  FF                 	db	255
   273  005938  E7                 	db	231
   274  005939  C3                 	db	195
   275  00593A  E7                 	db	231
   276  00593B  FF                 	db	255
   277  00593C  00                 	db	0
   278  00593D  18                 	db	24
   279  00593E  24                 	db	36
   280  00593F  18                 	db	24
   281  005940  00                 	db	0
   282  005941  FF                 	db	255
   283  005942  E7                 	db	231
   284  005943  DB                 	db	219
   285  005944  E7                 	db	231
   286  005945  FF                 	db	255
   287  005946  30                 	db	48
   288  005947  48                 	db	72
   289  005948  3A                 	db	58
   290  005949  06                 	db	6
   291  00594A  0E                 	db	14
   292  00594B  26                 	db	38
   293  00594C  29                 	db	41
   294  00594D  79                 	db	121
   295  00594E  29                 	db	41
   296  00594F  26                 	db	38
   297  005950  40                 	db	64
   298  005951  7F                 	db	127
   299  005952  05                 	db	5
   300  005953  05                 	db	5
   301  005954  07                 	db	7
   302  005955  40                 	db	64
   303  005956  7F                 	db	127
   304  005957  05                 	db	5
   305  005958  25                 	db	37
   306  005959  3F                 	db	63
   307  00595A  5A                 	db	90
   308  00595B  3C                 	db	60
   309  00595C  E7                 	db	231
   310  00595D  3C                 	db	60
   311  00595E  5A                 	db	90
   312  00595F  7F                 	db	127
   313  005960  3E                 	db	62
   314  005961  1C                 	db	28
   315  005962  1C                 	db	28
   316  005963  08                 	db	8
   317  005964  08                 	db	8
   318  005965  1C                 	db	28
   319  005966  1C                 	db	28
   320  005967  3E                 	db	62
   321  005968  7F                 	db	127
   322  005969  14                 	db	20
   323  00596A  22                 	db	34
   324  00596B  7F                 	db	127
   325  00596C  22                 	db	34
   326  00596D  14                 	db	20
   327  00596E  5F                 	db	95
   328  00596F  5F                 	db	95
   329  005970  00                 	db	0
   330  005971  5F                 	db	95
   331  005972  5F                 	db	95
   332  005973  06                 	db	6
   333  005974  09                 	db	9
   334  005975  7F                 	db	127
   335  005976  01                 	db	1
   336  005977  7F                 	db	127
   337  005978  00                 	db	0
   338  005979  66                 	db	102
   339  00597A  89                 	db	137
   340  00597B  95                 	db	149
   341  00597C  6A                 	db	106
   342  00597D  60                 	db	96
   343  00597E  60                 	db	96
   344  00597F  60                 	db	96
   345  005980  60                 	db	96
   346  005981  60                 	db	96
   347  005982  94                 	db	148
   348  005983  A2                 	db	162
   349  005984  FF                 	db	255
   350  005985  A2                 	db	162
   351  005986  94                 	db	148
   352  005987  08                 	db	8
   353  005988  04                 	db	4
   354  005989  7E                 	db	126
   355  00598A  04                 	db	4
   356  00598B  08                 	db	8
   357  00598C  10                 	db	16
   358  00598D  20                 	db	32
   359  00598E  7E                 	db	126
   360  00598F  20                 	db	32
   361  005990  10                 	db	16
   362  005991  08                 	db	8
   363  005992  08                 	db	8
   364  005993  2A                 	db	42
   365  005994  1C                 	db	28
   366  005995  08                 	db	8
   367  005996  08                 	db	8
   368  005997  1C                 	db	28
   369  005998  2A                 	db	42
   370  005999  08                 	db	8
   371  00599A  08                 	db	8
   372  00599B  1E                 	db	30
   373  00599C  10                 	db	16
   374  00599D  10                 	db	16
   375  00599E  10                 	db	16
   376  00599F  10                 	db	16
   377  0059A0  0C                 	db	12
   378  0059A1  1E                 	db	30
   379  0059A2  0C                 	db	12
   380  0059A3  1E                 	db	30
   381  0059A4  0C                 	db	12
   382  0059A5  30                 	db	48
   383  0059A6  38                 	db	56
   384  0059A7  3E                 	db	62
   385  0059A8  38                 	db	56
   386  0059A9  30                 	db	48
   387  0059AA  06                 	db	6
   388  0059AB  0E                 	db	14
   389  0059AC  3E                 	db	62
   390  0059AD  0E                 	db	14
   391  0059AE  06                 	db	6
   392  0059AF  00                 	db	0
   393  0059B0  00                 	db	0
   394  0059B1  00                 	db	0
   395  0059B2  00                 	db	0
   396  0059B3  00                 	db	0
   397  0059B4  00                 	db	0
   398  0059B5  00                 	db	0
   399  0059B6  5F                 	db	95
   400  0059B7  00                 	db	0
   401  0059B8  00                 	db	0
   402  0059B9  00                 	db	0
   403  0059BA  07                 	db	7
   404  0059BB  00                 	db	0
   405  0059BC  07                 	db	7
   406  0059BD  00                 	db	0
   407  0059BE  14                 	db	20
   408  0059BF  7F                 	db	127
   409  0059C0  14                 	db	20
   410  0059C1  7F                 	db	127
   411  0059C2  14                 	db	20
   412  0059C3  24                 	db	36
   413  0059C4  2A                 	db	42
   414  0059C5  7F                 	db	127
   415  0059C6  2A                 	db	42
   416  0059C7  12                 	db	18
   417  0059C8  23                 	db	35
   418  0059C9  13                 	db	19
   419  0059CA  08                 	db	8
   420  0059CB  64                 	db	100
   421  0059CC  62                 	db	98
   422  0059CD  36                 	db	54
   423  0059CE  49                 	db	73
   424  0059CF  56                 	db	86
   425  0059D0  20                 	db	32
   426  0059D1  50                 	db	80
   427  0059D2  00                 	db	0
   428  0059D3  08                 	db	8
   429  0059D4  07                 	db	7
   430  0059D5  03                 	db	3
   431  0059D6  00                 	db	0
   432  0059D7  00                 	db	0
   433  0059D8  1C                 	db	28
   434  0059D9  22                 	db	34
   435  0059DA  41                 	db	65
   436  0059DB  00                 	db	0
   437  0059DC  00                 	db	0
   438  0059DD  41                 	db	65
   439  0059DE  22                 	db	34
   440  0059DF  1C                 	db	28
   441  0059E0  00                 	db	0
   442  0059E1  2A                 	db	42
   443  0059E2  1C                 	db	28
   444  0059E3  7F                 	db	127
   445  0059E4  1C                 	db	28
   446  0059E5  2A                 	db	42
   447  0059E6  08                 	db	8
   448  0059E7  08                 	db	8
   449  0059E8  3E                 	db	62
   450  0059E9  08                 	db	8
   451  0059EA  08                 	db	8
   452  0059EB  00                 	db	0
   453  0059EC  80                 	db	128
   454  0059ED  70                 	db	112
   455  0059EE  30                 	db	48
   456  0059EF  00                 	db	0
   457  0059F0  08                 	db	8
   458  0059F1  08                 	db	8
   459  0059F2  08                 	db	8
   460  0059F3  08                 	db	8
   461  0059F4  08                 	db	8
   462  0059F5  00                 	db	0
   463  0059F6  00                 	db	0
   464  0059F7  60                 	db	96
   465  0059F8  60                 	db	96
   466  0059F9  00                 	db	0
   467  0059FA  20                 	db	32
   468  0059FB  10                 	db	16
   469  0059FC  08                 	db	8
   470  0059FD  04                 	db	4
   471  0059FE  02                 	db	2
   472  0059FF  3E                 	db	62
   473  005A00  51                 	db	81
   474  005A01  49                 	db	73
   475  005A02  45                 	db	69
   476  005A03  3E                 	db	62
   477  005A04  00                 	db	0
   478  005A05  42                 	db	66
   479  005A06  7F                 	db	127
   480  005A07  40                 	db	64
   481  005A08  00                 	db	0
   482  005A09  72                 	db	114
   483  005A0A  49                 	db	73
   484  005A0B  49                 	db	73
   485  005A0C  49                 	db	73
   486  005A0D  46                 	db	70
   487  005A0E  21                 	db	33
   488  005A0F  41                 	db	65
   489  005A10  49                 	db	73
   490  005A11  4D                 	db	77
   491  005A12  33                 	db	51
   492  005A13  18                 	db	24
   493  005A14  14                 	db	20
   494  005A15  12                 	db	18
   495  005A16  7F                 	db	127
   496  005A17  10                 	db	16
   497  005A18  27                 	db	39
   498  005A19  45                 	db	69
   499  005A1A  45                 	db	69
   500  005A1B  45                 	db	69
   501  005A1C  39                 	db	57
   502  005A1D  3C                 	db	60
   503  005A1E  4A                 	db	74
   504  005A1F  49                 	db	73
   505  005A20  49                 	db	73
   506  005A21  31                 	db	49
   507  005A22  41                 	db	65
   508  005A23  21                 	db	33
   509  005A24  11                 	db	17
   510  005A25  09                 	db	9
   511  005A26  07                 	db	7
   512  005A27  36                 	db	54
   513  005A28  49                 	db	73
   514  005A29  49                 	db	73
   515  005A2A  49                 	db	73
   516  005A2B  36                 	db	54
   517  005A2C  46                 	db	70
   518  005A2D  49                 	db	73
   519  005A2E  49                 	db	73
   520  005A2F  29                 	db	41
   521  005A30  1E                 	db	30
   522  005A31  00                 	db	0
   523  005A32  00                 	db	0
   524  005A33  14                 	db	20
   525  005A34  00                 	db	0
   526  005A35  00                 	db	0
   527  005A36  00                 	db	0
   528  005A37  40                 	db	64
   529  005A38  34                 	db	52
   530  005A39  00                 	db	0
   531  005A3A  00                 	db	0
   532  005A3B  00                 	db	0
   533  005A3C  08                 	db	8
   534  005A3D  14                 	db	20
   535  005A3E  22                 	db	34
   536  005A3F  41                 	db	65
   537  005A40  14                 	db	20
   538  005A41  14                 	db	20
   539  005A42  14                 	db	20
   540  005A43  14                 	db	20
   541  005A44  14                 	db	20
   542  005A45  00                 	db	0
   543  005A46  41                 	db	65
   544  005A47  22                 	db	34
   545  005A48  14                 	db	20
   546  005A49  08                 	db	8
   547  005A4A  02                 	db	2
   548  005A4B  01                 	db	1
   549  005A4C  59                 	db	89
   550  005A4D  09                 	db	9
   551  005A4E  06                 	db	6
   552  005A4F  3E                 	db	62
   553  005A50  41                 	db	65
   554  005A51  5D                 	db	93
   555  005A52  59                 	db	89
   556  005A53  4E                 	db	78
   557  005A54  7C                 	db	124
   558  005A55  12                 	db	18
   559  005A56  11                 	db	17
   560  005A57  12                 	db	18
   561  005A58  7C                 	db	124
   562  005A59  7F                 	db	127
   563  005A5A  49                 	db	73
   564  005A5B  49                 	db	73
   565  005A5C  49                 	db	73
   566  005A5D  36                 	db	54
   567  005A5E  3E                 	db	62
   568  005A5F  41                 	db	65
   569  005A60  41                 	db	65
   570  005A61  41                 	db	65
   571  005A62  22                 	db	34
   572  005A63  7F                 	db	127
   573  005A64  41                 	db	65
   574  005A65  41                 	db	65
   575  005A66  41                 	db	65
   576  005A67  3E                 	db	62
   577  005A68  7F                 	db	127
   578  005A69  49                 	db	73
   579  005A6A  49                 	db	73
   580  005A6B  49                 	db	73
   581  005A6C  41                 	db	65
   582  005A6D  7F                 	db	127
   583  005A6E  09                 	db	9
   584  005A6F  09                 	db	9
   585  005A70  09                 	db	9
   586  005A71  01                 	db	1
   587  005A72  3E                 	db	62
   588  005A73  41                 	db	65
   589  005A74  41                 	db	65
   590  005A75  51                 	db	81
   591  005A76  73                 	db	115
   592  005A77  7F                 	db	127
   593  005A78  08                 	db	8
   594  005A79  08                 	db	8
   595  005A7A  08                 	db	8
   596  005A7B  7F                 	db	127
   597  005A7C  00                 	db	0
   598  005A7D  41                 	db	65
   599  005A7E  7F                 	db	127
   600  005A7F  41                 	db	65
   601  005A80  00                 	db	0
   602  005A81  20                 	db	32
   603  005A82  40                 	db	64
   604  005A83  41                 	db	65
   605  005A84  3F                 	db	63
   606  005A85  01                 	db	1
   607  005A86  7F                 	db	127
   608  005A87  08                 	db	8
   609  005A88  14                 	db	20
   610  005A89  22                 	db	34
   611  005A8A  41                 	db	65
   612  005A8B  7F                 	db	127
   613  005A8C  40                 	db	64
   614  005A8D  40                 	db	64
   615  005A8E  40                 	db	64
   616  005A8F  40                 	db	64
   617  005A90  7F                 	db	127
   618  005A91  02                 	db	2
   619  005A92  1C                 	db	28
   620  005A93  02                 	db	2
   621  005A94  7F                 	db	127
   622  005A95  7F                 	db	127
   623  005A96  04                 	db	4
   624  005A97  08                 	db	8
   625  005A98  10                 	db	16
   626  005A99  7F                 	db	127
   627  005A9A  3E                 	db	62
   628  005A9B  41                 	db	65
   629  005A9C  41                 	db	65
   630  005A9D  41                 	db	65
   631  005A9E  3E                 	db	62
   632  005A9F  7F                 	db	127
   633  005AA0  09                 	db	9
   634  005AA1  09                 	db	9
   635  005AA2  09                 	db	9
   636  005AA3  06                 	db	6
   637  005AA4  3E                 	db	62
   638  005AA5  41                 	db	65
   639  005AA6  51                 	db	81
   640  005AA7  21                 	db	33
   641  005AA8  5E                 	db	94
   642  005AA9  7F                 	db	127
   643  005AAA  09                 	db	9
   644  005AAB  19                 	db	25
   645  005AAC  29                 	db	41
   646  005AAD  46                 	db	70
   647  005AAE  26                 	db	38
   648  005AAF  49                 	db	73
   649  005AB0  49                 	db	73
   650  005AB1  49                 	db	73
   651  005AB2  32                 	db	50
   652  005AB3  03                 	db	3
   653  005AB4  01                 	db	1
   654  005AB5  7F                 	db	127
   655  005AB6  01                 	db	1
   656  005AB7  03                 	db	3
   657  005AB8  3F                 	db	63
   658  005AB9  40                 	db	64
   659  005ABA  40                 	db	64
   660  005ABB  40                 	db	64
   661  005ABC  3F                 	db	63
   662  005ABD  1F                 	db	31
   663  005ABE  20                 	db	32
   664  005ABF  40                 	db	64
   665  005AC0  20                 	db	32
   666  005AC1  1F                 	db	31
   667  005AC2  3F                 	db	63
   668  005AC3  40                 	db	64
   669  005AC4  38                 	db	56
   670  005AC5  40                 	db	64
   671  005AC6  3F                 	db	63
   672  005AC7  63                 	db	99
   673  005AC8  14                 	db	20
   674  005AC9  08                 	db	8
   675  005ACA  14                 	db	20
   676  005ACB  63                 	db	99
   677  005ACC  03                 	db	3
   678  005ACD  04                 	db	4
   679  005ACE  78                 	db	120
   680  005ACF  04                 	db	4
   681  005AD0  03                 	db	3
   682  005AD1  61                 	db	97
   683  005AD2  59                 	db	89
   684  005AD3  49                 	db	73
   685  005AD4  4D                 	db	77
   686  005AD5  43                 	db	67
   687  005AD6  00                 	db	0
   688  005AD7  7F                 	db	127
   689  005AD8  41                 	db	65
   690  005AD9  41                 	db	65
   691  005ADA  41                 	db	65
   692  005ADB  02                 	db	2
   693  005ADC  04                 	db	4
   694  005ADD  08                 	db	8
   695  005ADE  10                 	db	16
   696  005ADF  20                 	db	32
   697  005AE0  00                 	db	0
   698  005AE1  41                 	db	65
   699  005AE2  41                 	db	65
   700  005AE3  41                 	db	65
   701  005AE4  7F                 	db	127
   702  005AE5  04                 	db	4
   703  005AE6  02                 	db	2
   704  005AE7  01                 	db	1
   705  005AE8  02                 	db	2
   706  005AE9  04                 	db	4
   707  005AEA  40                 	db	64
   708  005AEB  40                 	db	64
   709  005AEC  40                 	db	64
   710  005AED  40                 	db	64
   711  005AEE  40                 	db	64
   712  005AEF  00                 	db	0
   713  005AF0  03                 	db	3
   714  005AF1  07                 	db	7
   715  005AF2  08                 	db	8
   716  005AF3  00                 	db	0
   717  005AF4  20                 	db	32
   718  005AF5  54                 	db	84
   719  005AF6  54                 	db	84
   720  005AF7  78                 	db	120
   721  005AF8  40                 	db	64
   722  005AF9  7F                 	db	127
   723  005AFA  28                 	db	40
   724  005AFB  44                 	db	68
   725  005AFC  44                 	db	68
   726  005AFD  38                 	db	56
   727  005AFE  38                 	db	56
   728  005AFF  44                 	db	68
   729  005B00  44                 	db	68
   730  005B01  44                 	db	68
   731  005B02  28                 	db	40
   732  005B03  38                 	db	56
   733  005B04  44                 	db	68
   734  005B05  44                 	db	68
   735  005B06  28                 	db	40
   736  005B07  7F                 	db	127
   737  005B08  38                 	db	56
   738  005B09  54                 	db	84
   739  005B0A  54                 	db	84
   740  005B0B  54                 	db	84
   741  005B0C  18                 	db	24
   742  005B0D  00                 	db	0
   743  005B0E  08                 	db	8
   744  005B0F  7E                 	db	126
   745  005B10  09                 	db	9
   746  005B11  02                 	db	2
   747  005B12  18                 	db	24
   748  005B13  A4                 	db	164
   749  005B14  A4                 	db	164
   750  005B15  9C                 	db	156
   751  005B16  78                 	db	120
   752  005B17  7F                 	db	127
   753  005B18  08                 	db	8
   754  005B19  04                 	db	4
   755  005B1A  04                 	db	4
   756  005B1B  78                 	db	120
   757  005B1C  00                 	db	0
   758  005B1D  44                 	db	68
   759  005B1E  7D                 	db	125
   760  005B1F  40                 	db	64
   761  005B20  00                 	db	0
   762  005B21  20                 	db	32
   763  005B22  40                 	db	64
   764  005B23  40                 	db	64
   765  005B24  3D                 	db	61
   766  005B25  00                 	db	0
   767  005B26  7F                 	db	127
   768  005B27  10                 	db	16
   769  005B28  28                 	db	40
   770  005B29  44                 	db	68
   771  005B2A  00                 	db	0
   772  005B2B  00                 	db	0
   773  005B2C  41                 	db	65
   774  005B2D  7F                 	db	127
   775  005B2E  40                 	db	64
   776  005B2F  00                 	db	0
   777  005B30  7C                 	db	124
   778  005B31  04                 	db	4
   779  005B32  78                 	db	120
   780  005B33  04                 	db	4
   781  005B34  78                 	db	120
   782  005B35  7C                 	db	124
   783  005B36  08                 	db	8
   784  005B37  04                 	db	4
   785  005B38  04                 	db	4
   786  005B39  78                 	db	120
   787  005B3A  38                 	db	56
   788  005B3B  44                 	db	68
   789  005B3C  44                 	db	68
   790  005B3D  44                 	db	68
   791  005B3E  38                 	db	56
   792  005B3F  FC                 	db	252
   793  005B40  18                 	db	24
   794  005B41  24                 	db	36
   795  005B42  24                 	db	36
   796  005B43  18                 	db	24
   797  005B44  18                 	db	24
   798  005B45  24                 	db	36
   799  005B46  24                 	db	36
   800  005B47  18                 	db	24
   801  005B48  FC                 	db	252
   802  005B49  7C                 	db	124
   803  005B4A  08                 	db	8
   804  005B4B  04                 	db	4
   805  005B4C  04                 	db	4
   806  005B4D  08                 	db	8
   807  005B4E  48                 	db	72
   808  005B4F  54                 	db	84
   809  005B50  54                 	db	84
   810  005B51  54                 	db	84
   811  005B52  24                 	db	36
   812  005B53  04                 	db	4
   813  005B54  04                 	db	4
   814  005B55  3F                 	db	63
   815  005B56  44                 	db	68
   816  005B57  24                 	db	36
   817  005B58  3C                 	db	60
   818  005B59  40                 	db	64
   819  005B5A  40                 	db	64
   820  005B5B  20                 	db	32
   821  005B5C  7C                 	db	124
   822  005B5D  1C                 	db	28
   823  005B5E  20                 	db	32
   824  005B5F  40                 	db	64
   825  005B60  20                 	db	32
   826  005B61  1C                 	db	28
   827  005B62  3C                 	db	60
   828  005B63  40                 	db	64
   829  005B64  30                 	db	48
   830  005B65  40                 	db	64
   831  005B66  3C                 	db	60
   832  005B67  44                 	db	68
   833  005B68  28                 	db	40
   834  005B69  10                 	db	16
   835  005B6A  28                 	db	40
   836  005B6B  44                 	db	68
   837  005B6C  4C                 	db	76
   838  005B6D  90                 	db	144
   839  005B6E  90                 	db	144
   840  005B6F  90                 	db	144
   841  005B70  7C                 	db	124
   842  005B71  44                 	db	68
   843  005B72  64                 	db	100
   844  005B73  54                 	db	84
   845  005B74  4C                 	db	76
   846  005B75  44                 	db	68
   847  005B76  00                 	db	0
   848  005B77  08                 	db	8
   849  005B78  36                 	db	54
   850  005B79  41                 	db	65
   851  005B7A  00                 	db	0
   852  005B7B  00                 	db	0
   853  005B7C  00                 	db	0
   854  005B7D  77                 	db	119
   855  005B7E  00                 	db	0
   856  005B7F  00                 	db	0
   857  005B80  00                 	db	0
   858  005B81  41                 	db	65
   859  005B82  36                 	db	54
   860  005B83  08                 	db	8
   861  005B84  00                 	db	0
   862  005B85  02                 	db	2
   863  005B86  01                 	db	1
   864  005B87  02                 	db	2
   865  005B88  04                 	db	4
   866  005B89  02                 	db	2
   867  005B8A  3C                 	db	60
   868  005B8B  26                 	db	38
   869  005B8C  23                 	db	35
   870  005B8D  26                 	db	38
   871  005B8E  3C                 	db	60
   872  005B8F  1E                 	db	30
   873  005B90  A1                 	db	161
   874  005B91  A1                 	db	161
   875  005B92  61                 	db	97
   876  005B93  12                 	db	18
   877  005B94  3A                 	db	58
   878  005B95  40                 	db	64
   879  005B96  40                 	db	64
   880  005B97  20                 	db	32
   881  005B98  7A                 	db	122
   882  005B99  38                 	db	56
   883  005B9A  54                 	db	84
   884  005B9B  54                 	db	84
   885  005B9C  55                 	db	85
   886  005B9D  59                 	db	89
   887  005B9E  21                 	db	33
   888  005B9F  55                 	db	85
   889  005BA0  55                 	db	85
   890  005BA1  79                 	db	121
   891  005BA2  41                 	db	65
   892  005BA3  22                 	db	34
   893  005BA4  54                 	db	84
   894  005BA5  54                 	db	84
   895  005BA6  78                 	db	120
   896  005BA7  42                 	db	66
   897  005BA8  21                 	db	33
   898  005BA9  55                 	db	85
   899  005BAA  54                 	db	84
   900  005BAB  78                 	db	120
   901  005BAC  40                 	db	64
   902  005BAD  20                 	db	32
   903  005BAE  54                 	db	84
   904  005BAF  55                 	db	85
   905  005BB0  79                 	db	121
   906  005BB1  40                 	db	64
   907  005BB2  0C                 	db	12
   908  005BB3  1E                 	db	30
   909  005BB4  52                 	db	82
   910  005BB5  72                 	db	114
   911  005BB6  12                 	db	18
   912  005BB7  39                 	db	57
   913  005BB8  55                 	db	85
   914  005BB9  55                 	db	85
   915  005BBA  55                 	db	85
   916  005BBB  59                 	db	89
   917  005BBC  39                 	db	57
   918  005BBD  54                 	db	84
   919  005BBE  54                 	db	84
   920  005BBF  54                 	db	84
   921  005BC0  59                 	db	89
   922  005BC1  39                 	db	57
   923  005BC2  55                 	db	85
   924  005BC3  54                 	db	84
   925  005BC4  54                 	db	84
   926  005BC5  58                 	db	88
   927  005BC6  00                 	db	0
   928  005BC7  00                 	db	0
   929  005BC8  45                 	db	69
   930  005BC9  7C                 	db	124
   931  005BCA  41                 	db	65
   932  005BCB  00                 	db	0
   933  005BCC  02                 	db	2
   934  005BCD  45                 	db	69
   935  005BCE  7D                 	db	125
   936  005BCF  42                 	db	66
   937  005BD0  00                 	db	0
   938  005BD1  01                 	db	1
   939  005BD2  45                 	db	69
   940  005BD3  7C                 	db	124
   941  005BD4  40                 	db	64
   942  005BD5  7D                 	db	125
   943  005BD6  12                 	db	18
   944  005BD7  11                 	db	17
   945  005BD8  12                 	db	18
   946  005BD9  7D                 	db	125
   947  005BDA  F0                 	db	240
   948  005BDB  28                 	db	40
   949  005BDC  25                 	db	37
   950  005BDD  28                 	db	40
   951  005BDE  F0                 	db	240
   952  005BDF  7C                 	db	124
   953  005BE0  54                 	db	84
   954  005BE1  55                 	db	85
   955  005BE2  45                 	db	69
   956  005BE3  00                 	db	0
   957  005BE4  20                 	db	32
   958  005BE5  54                 	db	84
   959  005BE6  54                 	db	84
   960  005BE7  7C                 	db	124
   961  005BE8  54                 	db	84
   962  005BE9  7C                 	db	124
   963  005BEA  0A                 	db	10
   964  005BEB  09                 	db	9
   965  005BEC  7F                 	db	127
   966  005BED  49                 	db	73
   967  005BEE  32                 	db	50
   968  005BEF  49                 	db	73
   969  005BF0  49                 	db	73
   970  005BF1  49                 	db	73
   971  005BF2  32                 	db	50
   972  005BF3  3A                 	db	58
   973  005BF4  44                 	db	68
   974  005BF5  44                 	db	68
   975  005BF6  44                 	db	68
   976  005BF7  3A                 	db	58
   977  005BF8  32                 	db	50
   978  005BF9  4A                 	db	74
   979  005BFA  48                 	db	72
   980  005BFB  48                 	db	72
   981  005BFC  30                 	db	48
   982  005BFD  3A                 	db	58
   983  005BFE  41                 	db	65
   984  005BFF  41                 	db	65
   985  005C00  21                 	db	33
   986  005C01  7A                 	db	122
   987  005C02  3A                 	db	58
   988  005C03  42                 	db	66
   989  005C04  40                 	db	64
   990  005C05  20                 	db	32
   991  005C06  78                 	db	120
   992  005C07  00                 	db	0
   993  005C08  9D                 	db	157
   994  005C09  A0                 	db	160
   995  005C0A  A0                 	db	160
   996  005C0B  7D                 	db	125
   997  005C0C  3D                 	db	61
   998  005C0D  42                 	db	66
   999  005C0E  42                 	db	66
  1000  005C0F  42                 	db	66
  1001  005C10  3D                 	db	61
  1002  005C11  3D                 	db	61
  1003  005C12  40                 	db	64
  1004  005C13  40                 	db	64
  1005  005C14  40                 	db	64
  1006  005C15  3D                 	db	61
  1007  005C16  3C                 	db	60
  1008  005C17  24                 	db	36
  1009  005C18  FF                 	db	255
  1010  005C19  24                 	db	36
  1011  005C1A  24                 	db	36
  1012  005C1B  48                 	db	72
  1013  005C1C  7E                 	db	126
  1014  005C1D  49                 	db	73
  1015  005C1E  43                 	db	67
  1016  005C1F  66                 	db	102
  1017  005C20  2B                 	db	43
  1018  005C21  2F                 	db	47
  1019  005C22  FC                 	db	252
  1020  005C23  2F                 	db	47
  1021  005C24  2B                 	db	43
  1022  005C25  FF                 	db	255
  1023  005C26  09                 	db	9
  1024  005C27  29                 	db	41
  1025  005C28  F6                 	db	246
  1026  005C29  20                 	db	32
  1027  005C2A  C0                 	db	192
  1028  005C2B  88                 	db	136
  1029  005C2C  7E                 	db	126
  1030  005C2D  09                 	db	9
  1031  005C2E  03                 	db	3
  1032  005C2F  20                 	db	32
  1033  005C30  54                 	db	84
  1034  005C31  54                 	db	84
  1035  005C32  79                 	db	121
  1036  005C33  41                 	db	65
  1037  005C34  00                 	db	0
  1038  005C35  00                 	db	0
  1039  005C36  44                 	db	68
  1040  005C37  7D                 	db	125
  1041  005C38  41                 	db	65
  1042  005C39  30                 	db	48
  1043  005C3A  48                 	db	72
  1044  005C3B  48                 	db	72
  1045  005C3C  4A                 	db	74
  1046  005C3D  32                 	db	50
  1047  005C3E  38                 	db	56
  1048  005C3F  40                 	db	64
  1049  005C40  40                 	db	64
  1050  005C41  22                 	db	34
  1051  005C42  7A                 	db	122
  1052  005C43  00                 	db	0
  1053  005C44  7A                 	db	122
  1054  005C45  0A                 	db	10
  1055  005C46  0A                 	db	10
  1056  005C47  72                 	db	114
  1057  005C48  7D                 	db	125
  1058  005C49  0D                 	db	13
  1059  005C4A  19                 	db	25
  1060  005C4B  31                 	db	49
  1061  005C4C  7D                 	db	125
  1062  005C4D  26                 	db	38
  1063  005C4E  29                 	db	41
  1064  005C4F  29                 	db	41
  1065  005C50  2F                 	db	47
  1066  005C51  28                 	db	40
  1067  005C52  26                 	db	38
  1068  005C53  29                 	db	41
  1069  005C54  29                 	db	41
  1070  005C55  29                 	db	41
  1071  005C56  26                 	db	38
  1072  005C57  30                 	db	48
  1073  005C58  48                 	db	72
  1074  005C59  4D                 	db	77
  1075  005C5A  40                 	db	64
  1076  005C5B  20                 	db	32
  1077  005C5C  38                 	db	56
  1078  005C5D  08                 	db	8
  1079  005C5E  08                 	db	8
  1080  005C5F  08                 	db	8
  1081  005C60  08                 	db	8
  1082  005C61  08                 	db	8
  1083  005C62  08                 	db	8
  1084  005C63  08                 	db	8
  1085  005C64  08                 	db	8
  1086  005C65  38                 	db	56
  1087  005C66  2F                 	db	47
  1088  005C67  10                 	db	16
  1089  005C68  C8                 	db	200
  1090  005C69  AC                 	db	172
  1091  005C6A  BA                 	db	186
  1092  005C6B  2F                 	db	47
  1093  005C6C  10                 	db	16
  1094  005C6D  28                 	db	40
  1095  005C6E  34                 	db	52
  1096  005C6F  FA                 	db	250
  1097  005C70  00                 	db	0
  1098  005C71  00                 	db	0
  1099  005C72  7B                 	db	123
  1100  005C73  00                 	db	0
  1101  005C74  00                 	db	0
  1102  005C75  08                 	db	8
  1103  005C76  14                 	db	20
  1104  005C77  2A                 	db	42
  1105  005C78  14                 	db	20
  1106  005C79  22                 	db	34
  1107  005C7A  22                 	db	34
  1108  005C7B  14                 	db	20
  1109  005C7C  2A                 	db	42
  1110  005C7D  14                 	db	20
  1111  005C7E  08                 	db	8
  1112  005C7F  55                 	db	85
  1113  005C80  00                 	db	0
  1114  005C81  55                 	db	85
  1115  005C82  00                 	db	0
  1116  005C83  55                 	db	85
  1117  005C84  AA                 	db	170
  1118  005C85  55                 	db	85
  1119  005C86  AA                 	db	170
  1120  005C87  55                 	db	85
  1121  005C88  AA                 	db	170
  1122  005C89  FF                 	db	255
  1123  005C8A  55                 	db	85
  1124  005C8B  FF                 	db	255
  1125  005C8C  55                 	db	85
  1126  005C8D  FF                 	db	255
  1127  005C8E  00                 	db	0
  1128  005C8F  00                 	db	0
  1129  005C90  00                 	db	0
  1130  005C91  FF                 	db	255
  1131  005C92  00                 	db	0
  1132  005C93  10                 	db	16
  1133  005C94  10                 	db	16
  1134  005C95  10                 	db	16
  1135  005C96  FF                 	db	255
  1136  005C97  00                 	db	0
  1137  005C98  14                 	db	20
  1138  005C99  14                 	db	20
  1139  005C9A  14                 	db	20
  1140  005C9B  FF                 	db	255
  1141  005C9C  00                 	db	0
  1142  005C9D  10                 	db	16
  1143  005C9E  10                 	db	16
  1144  005C9F  FF                 	db	255
  1145  005CA0  00                 	db	0
  1146  005CA1  FF                 	db	255
  1147  005CA2  10                 	db	16
  1148  005CA3  10                 	db	16
  1149  005CA4  F0                 	db	240
  1150  005CA5  10                 	db	16
  1151  005CA6  F0                 	db	240
  1152  005CA7  14                 	db	20
  1153  005CA8  14                 	db	20
  1154  005CA9  14                 	db	20
  1155  005CAA  FC                 	db	252
  1156  005CAB  00                 	db	0
  1157  005CAC  14                 	db	20
  1158  005CAD  14                 	db	20
  1159  005CAE  F7                 	db	247
  1160  005CAF  00                 	db	0
  1161  005CB0  FF                 	db	255
  1162  005CB1  00                 	db	0
  1163  005CB2  00                 	db	0
  1164  005CB3  FF                 	db	255
  1165  005CB4  00                 	db	0
  1166  005CB5  FF                 	db	255
  1167  005CB6  14                 	db	20
  1168  005CB7  14                 	db	20
  1169  005CB8  F4                 	db	244
  1170  005CB9  04                 	db	4
  1171  005CBA  FC                 	db	252
  1172  005CBB  14                 	db	20
  1173  005CBC  14                 	db	20
  1174  005CBD  17                 	db	23
  1175  005CBE  10                 	db	16
  1176  005CBF  1F                 	db	31
  1177  005CC0  10                 	db	16
  1178  005CC1  10                 	db	16
  1179  005CC2  1F                 	db	31
  1180  005CC3  10                 	db	16
  1181  005CC4  1F                 	db	31
  1182  005CC5  14                 	db	20
  1183  005CC6  14                 	db	20
  1184  005CC7  14                 	db	20
  1185  005CC8  1F                 	db	31
  1186  005CC9  00                 	db	0
  1187  005CCA  10                 	db	16
  1188  005CCB  10                 	db	16
  1189  005CCC  10                 	db	16
  1190  005CCD  F0                 	db	240
  1191  005CCE  00                 	db	0
  1192  005CCF  00                 	db	0
  1193  005CD0  00                 	db	0
  1194  005CD1  00                 	db	0
  1195  005CD2  1F                 	db	31
  1196  005CD3  10                 	db	16
  1197  005CD4  10                 	db	16
  1198  005CD5  10                 	db	16
  1199  005CD6  10                 	db	16
  1200  005CD7  1F                 	db	31
  1201  005CD8  10                 	db	16
  1202  005CD9  10                 	db	16
  1203  005CDA  10                 	db	16
  1204  005CDB  10                 	db	16
  1205  005CDC  F0                 	db	240
  1206  005CDD  10                 	db	16
  1207  005CDE  00                 	db	0
  1208  005CDF  00                 	db	0
  1209  005CE0  00                 	db	0
  1210  005CE1  FF                 	db	255
  1211  005CE2  10                 	db	16
  1212  005CE3  10                 	db	16
  1213  005CE4  10                 	db	16
  1214  005CE5  10                 	db	16
  1215  005CE6  10                 	db	16
  1216  005CE7  10                 	db	16
  1217  005CE8  10                 	db	16
  1218  005CE9  10                 	db	16
  1219  005CEA  10                 	db	16
  1220  005CEB  FF                 	db	255
  1221  005CEC  10                 	db	16
  1222  005CED  00                 	db	0
  1223  005CEE  00                 	db	0
  1224  005CEF  00                 	db	0
  1225  005CF0  FF                 	db	255
  1226  005CF1  14                 	db	20
  1227  005CF2  00                 	db	0
  1228  005CF3  00                 	db	0
  1229  005CF4  FF                 	db	255
  1230  005CF5  00                 	db	0
  1231  005CF6  FF                 	db	255
  1232  005CF7  00                 	db	0
  1233  005CF8  00                 	db	0
  1234  005CF9  1F                 	db	31
  1235  005CFA  10                 	db	16
  1236  005CFB  17                 	db	23
  1237  005CFC  00                 	db	0
  1238  005CFD  00                 	db	0
  1239  005CFE  FC                 	db	252
  1240  005CFF  04                 	db	4
  1241  005D00  F4                 	db	244
  1242  005D01  14                 	db	20
  1243  005D02  14                 	db	20
  1244  005D03  17                 	db	23
  1245  005D04  10                 	db	16
  1246  005D05  17                 	db	23
  1247  005D06  14                 	db	20
  1248  005D07  14                 	db	20
  1249  005D08  F4                 	db	244
  1250  005D09  04                 	db	4
  1251  005D0A  F4                 	db	244
  1252  005D0B  00                 	db	0
  1253  005D0C  00                 	db	0
  1254  005D0D  FF                 	db	255
  1255  005D0E  00                 	db	0
  1256  005D0F  F7                 	db	247
  1257  005D10  14                 	db	20
  1258  005D11  14                 	db	20
  1259  005D12  14                 	db	20
  1260  005D13  14                 	db	20
  1261  005D14  14                 	db	20
  1262  005D15  14                 	db	20
  1263  005D16  14                 	db	20
  1264  005D17  F7                 	db	247
  1265  005D18  00                 	db	0
  1266  005D19  F7                 	db	247
  1267  005D1A  14                 	db	20
  1268  005D1B  14                 	db	20
  1269  005D1C  14                 	db	20
  1270  005D1D  17                 	db	23
  1271  005D1E  14                 	db	20
  1272  005D1F  10                 	db	16
  1273  005D20  10                 	db	16
  1274  005D21  1F                 	db	31
  1275  005D22  10                 	db	16
  1276  005D23  1F                 	db	31
  1277  005D24  14                 	db	20
  1278  005D25  14                 	db	20
  1279  005D26  14                 	db	20
  1280  005D27  F4                 	db	244
  1281  005D28  14                 	db	20
  1282  005D29  10                 	db	16
  1283  005D2A  10                 	db	16
  1284  005D2B  F0                 	db	240
  1285  005D2C  10                 	db	16
  1286  005D2D  F0                 	db	240
  1287  005D2E  00                 	db	0
  1288  005D2F  00                 	db	0
  1289  005D30  1F                 	db	31
  1290  005D31  10                 	db	16
  1291  005D32  1F                 	db	31
  1292  005D33  00                 	db	0
  1293  005D34  00                 	db	0
  1294  005D35  00                 	db	0
  1295  005D36  1F                 	db	31
  1296  005D37  14                 	db	20
  1297  005D38  00                 	db	0
  1298  005D39  00                 	db	0
  1299  005D3A  00                 	db	0
  1300  005D3B  FC                 	db	252
  1301  005D3C  14                 	db	20
  1302  005D3D  00                 	db	0
  1303  005D3E  00                 	db	0
  1304  005D3F  F0                 	db	240
  1305  005D40  10                 	db	16
  1306  005D41  F0                 	db	240
  1307  005D42  10                 	db	16
  1308  005D43  10                 	db	16
  1309  005D44  FF                 	db	255
  1310  005D45  10                 	db	16
  1311  005D46  FF                 	db	255
  1312  005D47  14                 	db	20
  1313  005D48  14                 	db	20
  1314  005D49  14                 	db	20
  1315  005D4A  FF                 	db	255
  1316  005D4B  14                 	db	20
  1317  005D4C  10                 	db	16
  1318  005D4D  10                 	db	16
  1319  005D4E  10                 	db	16
  1320  005D4F  1F                 	db	31
  1321  005D50  00                 	db	0
  1322  005D51  00                 	db	0
  1323  005D52  00                 	db	0
  1324  005D53  00                 	db	0
  1325  005D54  F0                 	db	240
  1326  005D55  10                 	db	16
  1327  005D56  FF                 	db	255
  1328  005D57  FF                 	db	255
  1329  005D58  FF                 	db	255
  1330  005D59  FF                 	db	255
  1331  005D5A  FF                 	db	255
  1332  005D5B  F0                 	db	240
  1333  005D5C  F0                 	db	240
  1334  005D5D  F0                 	db	240
  1335  005D5E  F0                 	db	240
  1336  005D5F  F0                 	db	240
  1337  005D60  FF                 	db	255
  1338  005D61  FF                 	db	255
  1339  005D62  FF                 	db	255
  1340  005D63  00                 	db	0
  1341  005D64  00                 	db	0
  1342  005D65  00                 	db	0
  1343  005D66  00                 	db	0
  1344  005D67  00                 	db	0
  1345  005D68  FF                 	db	255
  1346  005D69  FF                 	db	255
  1347  005D6A  0F                 	db	15
  1348  005D6B  0F                 	db	15
  1349  005D6C  0F                 	db	15
  1350  005D6D  0F                 	db	15
  1351  005D6E  0F                 	db	15
  1352  005D6F  38                 	db	56
  1353  005D70  44                 	db	68
  1354  005D71  44                 	db	68
  1355  005D72  38                 	db	56
  1356  005D73  44                 	db	68
  1357  005D74  FC                 	db	252
  1358  005D75  4A                 	db	74
  1359  005D76  4A                 	db	74
  1360  005D77  4A                 	db	74
  1361  005D78  34                 	db	52
  1362  005D79  7E                 	db	126
  1363  005D7A  02                 	db	2
  1364  005D7B  02                 	db	2
  1365  005D7C  06                 	db	6
  1366  005D7D  06                 	db	6
  1367  005D7E  02                 	db	2
  1368  005D7F  7E                 	db	126
  1369  005D80  02                 	db	2
  1370  005D81  7E                 	db	126
  1371  005D82  02                 	db	2
  1372  005D83  63                 	db	99
  1373  005D84  55                 	db	85
  1374  005D85  49                 	db	73
  1375  005D86  41                 	db	65
  1376  005D87  63                 	db	99
  1377  005D88  38                 	db	56
  1378  005D89  44                 	db	68
  1379  005D8A  44                 	db	68
  1380  005D8B  3C                 	db	60
  1381  005D8C  04                 	db	4
  1382  005D8D  40                 	db	64
  1383  005D8E  7E                 	db	126
  1384  005D8F  20                 	db	32
  1385  005D90  1E                 	db	30
  1386  005D91  20                 	db	32
  1387  005D92  06                 	db	6
  1388  005D93  02                 	db	2
  1389  005D94  7E                 	db	126
  1390  005D95  02                 	db	2
  1391  005D96  02                 	db	2
  1392  005D97  99                 	db	153
  1393  005D98  A5                 	db	165
  1394  005D99  E7                 	db	231
  1395  005D9A  A5                 	db	165
  1396  005D9B  99                 	db	153
  1397  005D9C  1C                 	db	28
  1398  005D9D  2A                 	db	42
  1399  005D9E  49                 	db	73
  1400  005D9F  2A                 	db	42
  1401  005DA0  1C                 	db	28
  1402  005DA1  4C                 	db	76
  1403  005DA2  72                 	db	114
  1404  005DA3  01                 	db	1
  1405  005DA4  72                 	db	114
  1406  005DA5  4C                 	db	76
  1407  005DA6  30                 	db	48
  1408  005DA7  4A                 	db	74
  1409  005DA8  4D                 	db	77
  1410  005DA9  4D                 	db	77
  1411  005DAA  30                 	db	48
  1412  005DAB  30                 	db	48
  1413  005DAC  48                 	db	72
  1414  005DAD  78                 	db	120
  1415  005DAE  48                 	db	72
  1416  005DAF  30                 	db	48
  1417  005DB0  BC                 	db	188
  1418  005DB1  62                 	db	98
  1419  005DB2  5A                 	db	90
  1420  005DB3  46                 	db	70
  1421  005DB4  3D                 	db	61
  1422  005DB5  3E                 	db	62
  1423  005DB6  49                 	db	73
  1424  005DB7  49                 	db	73
  1425  005DB8  49                 	db	73
  1426  005DB9  00                 	db	0
  1427  005DBA  7E                 	db	126
  1428  005DBB  01                 	db	1
  1429  005DBC  01                 	db	1
  1430  005DBD  01                 	db	1
  1431  005DBE  7E                 	db	126
  1432  005DBF  2A                 	db	42
  1433  005DC0  2A                 	db	42
  1434  005DC1  2A                 	db	42
  1435  005DC2  2A                 	db	42
  1436  005DC3  2A                 	db	42
  1437  005DC4  44                 	db	68
  1438  005DC5  44                 	db	68
  1439  005DC6  5F                 	db	95
  1440  005DC7  44                 	db	68
  1441  005DC8  44                 	db	68
  1442  005DC9  40                 	db	64
  1443  005DCA  51                 	db	81
  1444  005DCB  4A                 	db	74
  1445  005DCC  44                 	db	68
  1446  005DCD  40                 	db	64
  1447  005DCE  40                 	db	64
  1448  005DCF  44                 	db	68
  1449  005DD0  4A                 	db	74
  1450  005DD1  51                 	db	81
  1451  005DD2  40                 	db	64
  1452  005DD3  00                 	db	0
  1453  005DD4  00                 	db	0
  1454  005DD5  FF                 	db	255
  1455  005DD6  01                 	db	1
  1456  005DD7  03                 	db	3
  1457  005DD8  E0                 	db	224
  1458  005DD9  80                 	db	128
  1459  005DDA  FF                 	db	255
  1460  005DDB  00                 	db	0
  1461  005DDC  00                 	db	0
  1462  005DDD  08                 	db	8
  1463  005DDE  08                 	db	8
  1464  005DDF  6B                 	db	107
  1465  005DE0  6B                 	db	107
  1466  005DE1  08                 	db	8
  1467  005DE2  36                 	db	54
  1468  005DE3  12                 	db	18
  1469  005DE4  36                 	db	54
  1470  005DE5  24                 	db	36
  1471  005DE6  36                 	db	54
  1472  005DE7  06                 	db	6
  1473  005DE8  0F                 	db	15
  1474  005DE9  09                 	db	9
  1475  005DEA  0F                 	db	15
  1476  005DEB  06                 	db	6
  1477  005DEC  00                 	db	0
  1478  005DED  00                 	db	0
  1479  005DEE  18                 	db	24
  1480  005DEF  18                 	db	24
  1481  005DF0  00                 	db	0
  1482  005DF1  00                 	db	0
  1483  005DF2  00                 	db	0
  1484  005DF3  10                 	db	16
  1485  005DF4  10                 	db	16
  1486  005DF5  00                 	db	0
  1487  005DF6  30                 	db	48
  1488  005DF7  40                 	db	64
  1489  005DF8  FF                 	db	255
  1490  005DF9  01                 	db	1
  1491  005DFA  01                 	db	1
  1492  005DFB  00                 	db	0
  1493  005DFC  1F                 	db	31
  1494  005DFD  01                 	db	1
  1495  005DFE  01                 	db	1
  1496  005DFF  1E                 	db	30
  1497  005E00  00                 	db	0
  1498  005E01  19                 	db	25
  1499  005E02  1D                 	db	29
  1500  005E03  17                 	db	23
  1501  005E04  12                 	db	18
  1502  005E05  00                 	db	0
  1503  005E06  3C                 	db	60
  1504  005E07  3C                 	db	60
  1505  005E08  3C                 	db	60
  1506  005E09  3C                 	db	60
  1507  005E0A  00                 	db	0
  1508  005E0B  00                 	db	0
  1509  005E0C  00                 	db	0
  1510  005E0D  00                 	db	0
  1511  005E0E  00                 	db	0
  1512  005E0F                     __end_of_TFT_Font:
  1513                           	opt callstack 0
  1514  005E0F                     _TFT_Init_Sequence:
  1515                           	opt callstack 0
  1516  005E0F  0702               	dw	1794
  1517  005E11  3008               	dw	12296
  1518  005E13  0705               	dw	1797
  1519  005E15  0036               	dw	54
  1520  005E17  070B               	dw	1803
  1521  005E19  1213               	dw	4627
  1522  005E1B  0001               	dw	1
  1523  005E1D  0100               	dw	256
  1524  005E1F  0002               	dw	2
  1525  005E21  0100               	dw	256
  1526  005E23  0003               	dw	3
  1527  005E25  1030               	dw	4144
  1528  005E27  0008               	dw	8
  1529  005E29  0202               	dw	514
  1530  005E2B  0009               	dw	9
  1531  005E2D  0000               	dw	0
  1532  005E2F  000C               	dw	12
  1533  005E31  0000               	dw	0
  1534  005E33  000F               	dw	15
  1535  005E35  0000               	dw	0
  1536  005E37  0100               	dw	256
  1537  005E39  0000               	dw	0
  1538  005E3B  0102               	dw	258
  1539  005E3D  0000               	dw	0
  1540  005E3F  0103               	dw	259
  1541  005E41  0000               	dw	0
  1542  005E43  FFFF               	dw	65535
  1543  005E45  0001               	dw	1
  1544  005E47  0100               	dw	256
  1545  005E49  1190               	dw	4496
  1546  005E4B  0101               	dw	257
  1547  005E4D  0227               	dw	551
  1548  005E4F  FFFF               	dw	65535
  1549  005E51  0001               	dw	1
  1550  005E53  0102               	dw	258
  1551  005E55  01BD               	dw	445
  1552  005E57  FFFF               	dw	65535
  1553  005E59  0001               	dw	1
  1554  005E5B  0103               	dw	259
  1555  005E5D  2D00               	dw	11520
  1556  005E5F  0281               	dw	641
  1557  005E61  000E               	dw	14
  1558  005E63  FFFF               	dw	65535
  1559  005E65  0001               	dw	1
  1560  005E67  0200               	dw	512
  1561  005E69  0000               	dw	0
  1562  005E6B  0201               	dw	513
  1563  005E6D  0000               	dw	0
  1564  005E6F  0300               	dw	768
  1565  005E71  0000               	dw	0
  1566  005E73  0301               	dw	769
  1567  005E75  0707               	dw	1799
  1568  005E77  0302               	dw	770
  1569  005E79  0606               	dw	1542
  1570  005E7B  0305               	dw	773
  1571  005E7D  0000               	dw	0
  1572  005E7F  0306               	dw	774
  1573  005E81  0D00               	dw	3328
  1574  005E83  0307               	dw	775
  1575  005E85  0706               	dw	1798
  1576  005E87  0308               	dw	776
  1577  005E89  0005               	dw	5
  1578  005E8B  0309               	dw	777
  1579  005E8D  0007               	dw	7
  1580  005E8F  030C               	dw	780
  1581  005E91  0000               	dw	0
  1582  005E93  030D               	dw	781
  1583  005E95  000A               	dw	10
  1584  005E97  0210               	dw	528
  1585  005E99  0000               	dw	0
  1586  005E9B  0211               	dw	529
  1587  005E9D  00EF               	dw	239
  1588  005E9F  0212               	dw	530
  1589  005EA1  0000               	dw	0
  1590  005EA3  0213               	dw	531
  1591  005EA5  018F               	dw	399
  1592  005EA7  0400               	dw	1024
  1593  005EA9  3100               	dw	12544
  1594  005EAB  0401               	dw	1025
  1595  005EAD  0001               	dw	1
  1596  005EAF  0404               	dw	1028
  1597  005EB1  0000               	dw	0
  1598  005EB3  0500               	dw	1280
  1599  005EB5  0000               	dw	0
  1600  005EB7  0501               	dw	1281
  1601  005EB9  0000               	dw	0
  1602  005EBB  0502               	dw	1282
  1603  005EBD  0000               	dw	0
  1604  005EBF  0503               	dw	1283
  1605  005EC1  0000               	dw	0
  1606  005EC3  0504               	dw	1284
  1607  005EC5  0000               	dw	0
  1608  005EC7  0505               	dw	1285
  1609  005EC9  0000               	dw	0
  1610  005ECB  0010               	dw	16
  1611  005ECD  0010               	dw	16
  1612  005ECF  0011               	dw	17
  1613  005ED1  0600               	dw	1536
  1614  005ED3  0020               	dw	32
  1615  005ED5  0002               	dw	2
  1616  005ED7  0007               	dw	7
  1617  005ED9  0173               	dw	371
  1618  005EDB                     __end_of_TFT_Init_Sequence:
  1619                           	opt callstack 0
  1620  005EDB                     _dpowers:
  1621                           	opt callstack 0
  1622  005EDB  0001               	dw	1
  1623  005EDD  0000               	dw	0
  1624  005EDF  000A               	dw	10
  1625  005EE1  0000               	dw	0
  1626  005EE3  0064               	dw	100
  1627  005EE5  0000               	dw	0
  1628  005EE7  03E8               	dw	1000
  1629  005EE9  0000               	dw	0
  1630  005EEB  2710               	dw	10000
  1631  005EED  0000               	dw	0
  1632  005EEF  86A0               	dw	34464
  1633  005EF1  0001               	dw	1
  1634  005EF3  4240               	dw	16960
  1635  005EF5  000F               	dw	15
  1636  005EF7  9680               	dw	38528
  1637  005EF9  0098               	dw	152
  1638  005EFB  E100               	dw	57600
  1639  005EFD  05F5               	dw	1525
  1640  005EFF  CA00               	dw	51712
  1641  005F01  3B9A               	dw	15258
  1642  005F03                     __end_of_dpowers:
  1643                           	opt callstack 0
  1644  005F03                     _ECG_ICON_HEART:
  1645                           	opt callstack 0
  1646  005F03  14                 	db	20
  1647  005F04  14                 	db	20
  1648  005F05  00                 	db	0
  1649  005F06  00                 	db	0
  1650  005F07  00                 	db	0
  1651  005F08  00                 	db	0
  1652  005F09  00                 	db	0
  1653  005F0A  00                 	db	0
  1654  005F0B  F8                 	db	248
  1655  005F0C  F0                 	db	240
  1656  005F0D  01                 	db	1
  1657  005F0E  FC                 	db	252
  1658  005F0F  F9                 	db	249
  1659  005F10  03                 	db	3
  1660  005F11  FC                 	db	252
  1661  005F12  FF                 	db	255
  1662  005F13  03                 	db	3
  1663  005F14  FE                 	db	254
  1664  005F15  FF                 	db	255
  1665  005F16  07                 	db	7
  1666  005F17  FE                 	db	254
  1667  005F18  FF                 	db	255
  1668  005F19  07                 	db	7
  1669  005F1A  FE                 	db	254
  1670  005F1B  FF                 	db	255
  1671  005F1C  07                 	db	7
  1672  005F1D  FE                 	db	254
  1673  005F1E  FF                 	db	255
  1674  005F1F  07                 	db	7
  1675  005F20  FC                 	db	252
  1676  005F21  FF                 	db	255
  1677  005F22  03                 	db	3
  1678  005F23  FC                 	db	252
  1679  005F24  FF                 	db	255
  1680  005F25  03                 	db	3
  1681  005F26  F8                 	db	248
  1682  005F27  FF                 	db	255
  1683  005F28  01                 	db	1
  1684  005F29  F0                 	db	240
  1685  005F2A  FF                 	db	255
  1686  005F2B  00                 	db	0
  1687  005F2C  E0                 	db	224
  1688  005F2D  7F                 	db	127
  1689  005F2E  00                 	db	0
  1690  005F2F  C0                 	db	192
  1691  005F30  3F                 	db	63
  1692  005F31  00                 	db	0
  1693  005F32  80                 	db	128
  1694  005F33  1F                 	db	31
  1695  005F34  00                 	db	0
  1696  005F35  00                 	db	0
  1697  005F36  0F                 	db	15
  1698  005F37  00                 	db	0
  1699  005F38  00                 	db	0
  1700  005F39  06                 	db	6
  1701  005F3A  00                 	db	0
  1702  005F3B  00                 	db	0
  1703  005F3C  00                 	db	0
  1704  005F3D  00                 	db	0
  1705  005F3E  00                 	db	0
  1706  005F3F  00                 	db	0
  1707  005F40  00                 	db	0
  1708  005F41                     __end_of_ECG_ICON_HEART:
  1709                           	opt callstack 0
  1710  0000                     _RCREG	set	4014
  1711  0000                     _TXREG	set	4013
  1712  0000                     _SPBRG	set	4015
  1713  0000                     _SPBRGH	set	4016
  1714  0000                     _BAUDCONbits	set	4024
  1715  0000                     _RCSTAbits	set	4011
  1716  0000                     _TXSTAbits	set	4012
  1717  0000                     _ADRESL	set	4035
  1718  0000                     _ADRESH	set	4036
  1719  0000                     _PORTAbits	set	3968
  1720  0000                     _PORTB	set	3969
  1721  0000                     _PORTCbits	set	3970
  1722  0000                     _TMR3L	set	4018
  1723  0000                     _TMR3H	set	4019
  1724  0000                     _T3CONbits	set	4017
  1725  0000                     _ADCON2bits	set	4032
  1726  0000                     _ADCON1bits	set	4033
  1727  0000                     _ADCON0bits	set	4034
  1728  0000                     _LATC	set	3979
  1729  0000                     _TRISC	set	3988
  1730  0000                     _LATB	set	3978
  1731  0000                     _TRISB	set	3987
  1732  0000                     _LATA	set	3977
  1733  0000                     _TRISA	set	3986
  1734  0000                     _UCFGbits	set	3951
  1735  0000                     _UCONbits	set	3949
  1736  0000                     _OSCTUNEbits	set	3995
  1737  0000                     _OSCCONbits	set	4051
  1738  0000                     _CREN	set	32092
  1739  0000                     _OERR	set	32089
  1740  0000                     _TXIF	set	31988
  1741  0000                     _GO_nDONE	set	32273
  1742  0000                     _RCIF	set	31989
  1743  0000                     _RCIE	set	31981
  1744  0000                     _TMR3IF	set	32009
  1745  0000                     _GIE	set	32663
  1746  0000                     _PEIE	set	32662
  1747  0000                     _TMR3IE	set	32001
  1748  0000                     _RBPU	set	32655
  1749  005F41                     STR_15:
  1750                           
  1751                           ; BSR set to: 1
  1752  005F41  2A                 	db	42
  1753  005F42  2A                 	db	42
  1754  005F43  2A                 	db	42
  1755  005F44  20                 	db	32
  1756  005F45  43                 	db	67	;'C'
  1757  005F46  6F                 	db	111	;'o'
  1758  005F47  6C                 	db	108	;'l'
  1759  005F48  6C                 	db	108	;'l'
  1760  005F49  65                 	db	101	;'e'
  1761  005F4A  67                 	db	103	;'g'
  1762  005F4B  61                 	db	97	;'a'
  1763  005F4C  72                 	db	114	;'r'
  1764  005F4D  65                 	db	101	;'e'
  1765  005F4E  20                 	db	32
  1766  005F4F  65                 	db	101	;'e'
  1767  005F50  6C                 	db	108	;'l'
  1768  005F51  65                 	db	101	;'e'
  1769  005F52  74                 	db	116	;'t'
  1770  005F53  74                 	db	116	;'t'
  1771  005F54  72                 	db	114	;'r'
  1772  005F55  6F                 	db	111	;'o'
  1773  005F56  64                 	db	100	;'d'
  1774  005F57  69                 	db	105	;'i'
  1775  005F58  20                 	db	32
  1776  005F59  2A                 	db	42
  1777  005F5A  2A                 	db	42
  1778  005F5B  2A                 	db	42
  1779  005F5C  00                 	db	0
  1780  005F5D                     STR_4:
  1781                           
  1782                           ; BSR set to: 1
  1783  005F5D  43                 	db	67	;'C'
  1784  005F5E  6F                 	db	111	;'o'
  1785  005F5F  6D                 	db	109	;'m'
  1786  005F60  6D                 	db	109	;'m'
  1787  005F61  20                 	db	32
  1788  005F62  69                 	db	105	;'i'
  1789  005F63  73                 	db	115	;'s'
  1790  005F64  20                 	db	32
  1791  005F65  64                 	db	100	;'d'
  1792  005F66  65                 	db	101	;'e'
  1793  005F67  61                 	db	97	;'a'
  1794  005F68  64                 	db	100	;'d'
  1795  005F69  2E                 	db	46
  1796  005F6A  20                 	db	32
  1797  005F6B  52                 	db	82	;'R'
  1798  005F6C  65                 	db	101	;'e'
  1799  005F6D  74                 	db	116	;'t'
  1800  005F6E  72                 	db	114	;'r'
  1801  005F6F  79                 	db	121	;'y'
  1802  005F70  2E                 	db	46
  1803  005F71  2E                 	db	46
  1804  005F72  2E                 	db	46
  1805  005F73  00                 	db	0
  1806  005F74                     STR_24:
  1807                           
  1808                           ; BSR set to: 1
  1809  005F74  44                 	db	68	;'D'
  1810  005F75  65                 	db	101	;'e'
  1811  005F76  74                 	db	116	;'t'
  1812  005F77  65                 	db	101	;'e'
  1813  005F78  63                 	db	99	;'c'
  1814  005F79  74                 	db	116	;'t'
  1815  005F7A  69                 	db	105	;'i'
  1816  005F7B  6E                 	db	110	;'n'
  1817  005F7C  67                 	db	103	;'g'
  1818  005F7D  20                 	db	32
  1819  005F7E  73                 	db	115	;'s'
  1820  005F7F  70                 	db	112	;'p'
  1821  005F80  65                 	db	101	;'e'
  1822  005F81  65                 	db	101	;'e'
  1823  005F82  64                 	db	100	;'d'
  1824  005F83  2E                 	db	46
  1825  005F84  2E                 	db	46
  1826  005F85  2E                 	db	46
  1827  005F86  00                 	db	0
  1828  005F87                     STR_6:
  1829                           
  1830                           ; BSR set to: 1
  1831  005F87  52                 	db	82	;'R'
  1832  005F88  65                 	db	101	;'e'
  1833  005F89  73                 	db	115	;'s'
  1834  005F8A  75                 	db	117	;'u'
  1835  005F8B  72                 	db	114	;'r'
  1836  005F8C  72                 	db	114	;'r'
  1837  005F8D  65                 	db	101	;'e'
  1838  005F8E  63                 	db	99	;'c'
  1839  005F8F  74                 	db	116	;'t'
  1840  005F90  65                 	db	101	;'e'
  1841  005F91  64                 	db	100	;'d'
  1842  005F92  21                 	db	33
  1843  005F93  00                 	db	0
  1844  005F94                     STR_1:
  1845                           
  1846                           ; BSR set to: 1
  1847  005F94  43                 	db	67	;'C'
  1848  005F95  68                 	db	104	;'h'
  1849  005F96  61                 	db	97	;'a'
  1850  005F97  6E                 	db	110	;'n'
  1851  005F98  67                 	db	103	;'g'
  1852  005F99  65                 	db	101	;'e'
  1853  005F9A  20                 	db	32
  1854  005F9B  73                 	db	115	;'s'
  1855  005F9C  70                 	db	112	;'p'
  1856  005F9D  65                 	db	101	;'e'
  1857  005F9E  65                 	db	101	;'e'
  1858  005F9F  64                 	db	100	;'d'
  1859  005FA0  00                 	db	0
  1860  005FA1                     STR_20:
  1861                           
  1862                           ; BSR set to: 1
  1863  005FA1  41                 	db	65	;'A'
  1864  005FA2  54                 	db	84	;'T'
  1865  005FA3  2B                 	db	43
  1866  005FA4  49                 	db	73	;'I'
  1867  005FA5  50                 	db	80	;'P'
  1868  005FA6  52                 	db	82	;'R'
  1869  005FA7  3D                 	db	61	;'='
  1870  005FA8  25                 	db	37
  1871  005FA9  6C                 	db	108	;'l'
  1872  005FAA  75                 	db	117	;'u'
  1873  005FAB  0D                 	db	13
  1874  005FAC  00                 	db	0
  1875  005FAD                     STR_10:
  1876                           
  1877                           ; BSR set to: 1
  1878  005FAD  43                 	db	67	;'C'
  1879  005FAE  68                 	db	104	;'h'
  1880  005FAF  65                 	db	101	;'e'
  1881  005FB0  63                 	db	99	;'c'
  1882  005FB1  6B                 	db	107	;'k'
  1883  005FB2  20                 	db	32
  1884  005FB3  73                 	db	115	;'s'
  1885  005FB4  70                 	db	112	;'p'
  1886  005FB5  65                 	db	101	;'e'
  1887  005FB6  65                 	db	101	;'e'
  1888  005FB7  64                 	db	100	;'d'
  1889  005FB8  00                 	db	0
  1890  005FB9                     STR_25:
  1891                           
  1892                           ; BSR set to: 1
  1893  005FB9  25                 	db	37
  1894  005FBA  6C                 	db	108	;'l'
  1895  005FBB  75                 	db	117	;'u'
  1896  005FBC  20                 	db	32
  1897  005FBD  46                 	db	70	;'F'
  1898  005FBE  4F                 	db	79	;'O'
  1899  005FBF  55                 	db	85	;'U'
  1900  005FC0  4E                 	db	78	;'N'
  1901  005FC1  44                 	db	68	;'D'
  1902  005FC2  21                 	db	33
  1903  005FC3  00                 	db	0
  1904  005FC4                     STR_14:
  1905                           
  1906                           ; BSR set to: 1
  1907  005FC4  46                 	db	70	;'F'
  1908  005FC5  72                 	db	114	;'r'
  1909  005FC6  65                 	db	101	;'e'
  1910  005FC7  71                 	db	113	;'q'
  1911  005FC8  75                 	db	117	;'u'
  1912  005FC9  65                 	db	101	;'e'
  1913  005FCA  6E                 	db	110	;'n'
  1914  005FCB  7A                 	db	122	;'z'
  1915  005FCC  61                 	db	97	;'a'
  1916  005FCD  3A                 	db	58	;':'
  1917  005FCE  00                 	db	0
  1918  005FCF                     STR_5:
  1919                           
  1920                           ; BSR set to: 1
  1921  005FCF  53                 	db	83	;'S'
  1922  005FD0  74                 	db	116	;'t'
  1923  005FD1  69                 	db	105	;'i'
  1924  005FD2  6C                 	db	108	;'l'
  1925  005FD3  6C                 	db	108	;'l'
  1926  005FD4  20                 	db	32
  1927  005FD5  64                 	db	100	;'d'
  1928  005FD6  65                 	db	101	;'e'
  1929  005FD7  61                 	db	97	;'a'
  1930  005FD8  64                 	db	100	;'d'
  1931  005FD9  00                 	db	0
  1932  005FDA                     STR_7:
  1933                           
  1934                           ; BSR set to: 1
  1935  005FDA  53                 	db	83	;'S'
  1936  005FDB  65                 	db	101	;'e'
  1937  005FDC  6E                 	db	110	;'n'
  1938  005FDD  64                 	db	100	;'d'
  1939  005FDE  20                 	db	32
  1940  005FDF  41                 	db	65	;'A'
  1941  005FE0  54                 	db	84	;'T'
  1942  005FE1  00                 	db	0
  1943  005FE2                     STR_3:
  1944                           
  1945                           ; BSR set to: 1
  1946  005FE2  4E                 	db	78	;'N'
  1947  005FE3  6F                 	db	111	;'o'
  1948  005FE4  2E                 	db	46
  1949  005FE5  2E                 	db	46
  1950  005FE6  2E                 	db	46
  1951  005FE7  00                 	db	0
  1952  005FE8                     STR_2:
  1953                           
  1954                           ; BSR set to: 1
  1955  005FE8  59                 	db	89	;'Y'
  1956  005FE9  65                 	db	101	;'e'
  1957  005FEA  73                 	db	115	;'s'
  1958  005FEB  21                 	db	33
  1959  005FEC  00                 	db	0
  1960  005FED                     STR_16:
  1961                           
  1962                           ; BSR set to: 1
  1963  005FED  41                 	db	65	;'A'
  1964  005FEE  54                 	db	84	;'T'
  1965  005FEF  0D                 	db	13
  1966  005FF0  00                 	db	0
  1967  005FF1                     
  1968                           ; BSR set to: 1
  1969  005FF1  25                 	db	37
  1970  005FF2  33                 	db	51	;'3'
  1971  005FF3  64                 	db	100	;'d'
  1972  005FF4  00                 	db	0
  1973  005FF5                     STR_19:
  1974                           
  1975                           ; BSR set to: 1
  1976  005FF5  4F                 	db	79	;'O'
  1977  005FF6  4B                 	db	75	;'K'
  1978  005FF7  00                 	db	0
  1979  005FF8                     STR_8:
  1980                           
  1981                           ; BSR set to: 1
  1982  005FF8  61                 	db	97	;'a'
  1983  005FF9  61                 	db	97	;'a'
  1984  005FFA  00                 	db	0
  1985  005FFB                     STR_9:
  1986                           
  1987                           ; BSR set to: 1
  1988  005FFB  62                 	db	98	;'b'
  1989  005FFC  62                 	db	98	;'b'
  1990  005FFD  00                 	db	0
  1991  0000                     
  1992                           ; #config settings
  1993  005FFE  00                 	db	0	; dummy byte at the end
  1994  0000                     
  1995                           	psect	cinit
  1996  0012BA                     __pcinit:
  1997                           	opt callstack 0
  1998  0012BA                     start_initialization:
  1999                           	opt callstack 0
  2000  0012BA                     __initialization:
  2001                           	opt callstack 0
  2002                           
  2003                           ; Initialize objects allocated to BANK1 (83 bytes)
  2004                           ; load TBLPTR registers with __pidataBANK1
  2005  0012BA  0ED2               	movlw	low __pidataBANK1
  2006  0012BC  6EF6               	movwf	tblptrl,c
  2007  0012BE  0E18               	movlw	high __pidataBANK1
  2008  0012C0  6EF7               	movwf	tblptrh,c
  2009  0012C2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2010  0012C4  6EF8               	movwf	tblptru,c
  2011  0012C6  EE01  F06C         	lfsr	0,__pdataBANK1
  2012  0012CA  EE10 F053          	lfsr	1,83
  2013  0012CE                     copy_data0:
  2014  0012CE  0009               	tblrd		*+
  2015  0012D0  CFF5 FFEE          	movff	tablat,postinc0
  2016  0012D4  50E5               	movf	postdec1,w,c
  2017  0012D6  50E1               	movf	fsr1l,w,c
  2018  0012D8  E1FA               	bnz	copy_data0
  2019                           
  2020                           ; Initialize objects allocated to BANK0 (8 bytes)
  2021                           ; load TBLPTR registers with __pidataBANK0
  2022  0012DA  0E2A               	movlw	low __pidataBANK0
  2023  0012DC  6EF6               	movwf	tblptrl,c
  2024  0012DE  0E1D               	movlw	high __pidataBANK0
  2025  0012E0  6EF7               	movwf	tblptrh,c
  2026  0012E2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2027  0012E4  6EF8               	movwf	tblptru,c
  2028  0012E6  EE00  F0B6         	lfsr	0,__pdataBANK0
  2029  0012EA  EE10 F008          	lfsr	1,8
  2030  0012EE                     copy_data1:
  2031  0012EE  0009               	tblrd		*+
  2032  0012F0  CFF5 FFEE          	movff	tablat,postinc0
  2033  0012F4  50E5               	movf	postdec1,w,c
  2034  0012F6  50E1               	movf	fsr1l,w,c
  2035  0012F8  E1FA               	bnz	copy_data1
  2036                           
  2037                           ; Initialize objects allocated to COMRAM (4 bytes)
  2038                           ; load TBLPTR registers with __pidataCOMRAM
  2039  0012FA  0E32               	movlw	low __pidataCOMRAM
  2040  0012FC  6EF6               	movwf	tblptrl,c
  2041  0012FE  0E1D               	movlw	high __pidataCOMRAM
  2042  001300  6EF7               	movwf	tblptrh,c
  2043  001302  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  2044  001304  6EF8               	movwf	tblptru,c
  2045  001306  EE00  F054         	lfsr	0,__pdataCOMRAM
  2046  00130A  EE10 F004          	lfsr	1,4
  2047  00130E                     copy_data2:
  2048  00130E  0009               	tblrd		*+
  2049  001310  CFF5 FFEE          	movff	tablat,postinc0
  2050  001314  50E5               	movf	postdec1,w,c
  2051  001316  50E1               	movf	fsr1l,w,c
  2052  001318  E1FA               	bnz	copy_data2
  2053                           
  2054                           ; Clear objects allocated to BANK1 (108 bytes)
  2055  00131A  EE01  F000         	lfsr	0,__pbssBANK1
  2056  00131E  0E6C               	movlw	108
  2057  001320                     clear_0:
  2058  001320  6AEE               	clrf	postinc0,c
  2059  001322  06E8               	decf	wreg,f,c
  2060  001324  E1FD               	bnz	clear_0
  2061                           
  2062                           ; Clear objects allocated to BANK0 (30 bytes)
  2063  001326  EE00  F098         	lfsr	0,__pbssBANK0
  2064  00132A  0E1E               	movlw	30
  2065  00132C                     clear_1:
  2066  00132C  6AEE               	clrf	postinc0,c
  2067  00132E  06E8               	decf	wreg,f,c
  2068  001330  E1FD               	bnz	clear_1
  2069                           
  2070                           ; Clear objects allocated to COMRAM (6 bytes)
  2071  001332  6A53               	clrf	(__pbssCOMRAM+5)& (0+255),c
  2072  001334  6A52               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2073  001336  6A51               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2074  001338  6A50               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2075  00133A  6A4F               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2076  00133C  6A4E               	clrf	__pbssCOMRAM& (0+255),c
  2077  00133E                     end_of_initialization:
  2078                           	opt callstack 0
  2079  00133E                     __end_of__initialization:
  2080                           	opt callstack 0
  2081  00133E  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2082  001340  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2083  001342  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2084  001344  6EF8               	movwf	tblptru,c
  2085  001346  0100               	movlb	0
  2086  001348  EF4E  F00E         	goto	_main	;jump to C main() function
  2087                           
  2088                           	psect	bssCOMRAM
  2089  00004E                     __pbssCOMRAM:
  2090                           	opt callstack 0
  2091  00004E                     _ECG_HEARTRATE:
  2092                           	opt callstack 0
  2093  00004E                     	ds	4
  2094  000052                     _ECG_FLAGS:
  2095                           	opt callstack 0
  2096  000052                     	ds	2
  2097                           
  2098                           	psect	dataCOMRAM
  2099  000054                     __pdataCOMRAM:
  2100                           	opt callstack 0
  2101  000054                     _Ecg_Y:
  2102                           	opt callstack 0
  2103  000054                     	ds	2
  2104  000056                     _Ecg_X:
  2105                           	opt callstack 0
  2106  000056                     	ds	2
  2107                           
  2108                           	psect	bssBANK0
  2109  000098                     __pbssBANK0:
  2110                           	opt callstack 0
  2111  000098                     _ECG_HEARTBEAT:
  2112                           	opt callstack 0
  2113  000098                     	ds	13
  2114  0000A5                     _ECG_BUFFER:
  2115                           	opt callstack 0
  2116  0000A5                     	ds	5
  2117  0000AA                     _tmp2:
  2118                           	opt callstack 0
  2119  0000AA                     	ds	4
  2120  0000AE                     _tmp1:
  2121                           	opt callstack 0
  2122  0000AE                     	ds	4
  2123  0000B2                     _MILLISECONDS:
  2124                           	opt callstack 0
  2125  0000B2                     	ds	4
  2126                           
  2127                           	psect	dataBANK0
  2128  0000B6                     __pdataBANK0:
  2129                           	opt callstack 0
  2130  0000B6                     _A6_SPEED:
  2131                           	opt callstack 0
  2132  0000B6                     	ds	4
  2133  0000BA                     _Ecg_Yold:
  2134                           	opt callstack 0
  2135  0000BA                     	ds	2
  2136  0000BC                     _Ecg_Xold:
  2137                           	opt callstack 0
  2138  0000BC                     	ds	2
  2139                           
  2140                           	psect	bssBANK1
  2141  000100                     __pbssBANK1:
  2142                           	opt callstack 0
  2143  000100                     _tmp4:
  2144                           	opt callstack 0
  2145  000100                     	ds	4
  2146  000104                     _tmp3:
  2147                           	opt callstack 0
  2148  000104                     	ds	4
  2149  000108                     _EUSART_RX:
  2150                           	opt callstack 0
  2151  000108                     	ds	100
  2152                           
  2153                           	psect	dataBANK1
  2154  00016C                     __pdataBANK1:
  2155                           	opt callstack 0
  2156  00016C                     A6_SpeedAutoDetect@F3081:
  2157                           	opt callstack 0
  2158  00016C                     	ds	12
  2159  000178                     _x7:
  2160                           	opt callstack 0
  2161  000178                     	ds	11
  2162  000183                     _x6:
  2163                           	opt callstack 0
  2164  000183                     	ds	10
  2165  00018D                     _x5:
  2166                           	opt callstack 0
  2167  00018D                     	ds	10
  2168  000197                     _x2:
  2169                           	opt callstack 0
  2170  000197                     	ds	10
  2171  0001A1                     _x4:
  2172                           	opt callstack 0
  2173  0001A1                     	ds	9
  2174  0001AA                     _x3:
  2175                           	opt callstack 0
  2176  0001AA                     	ds	8
  2177  0001B2                     _x1:
  2178                           	opt callstack 0
  2179  0001B2                     	ds	9
  2180  0001BB                     _x8:
  2181                           	opt callstack 0
  2182  0001BB                     	ds	4
  2183                           
  2184                           	psect	cstackBANK2
  2185  000200                     __pcstackBANK2:
  2186                           	opt callstack 0
  2187  000200                     loop@response:
  2188                           	opt callstack 0
  2189                           
  2190                           ; 32 bytes @ 0x0
  2191  000200                     	ds	32
  2192  000220                     loop@response_154:
  2193                           	opt callstack 0
  2194                           
  2195                           ; 32 bytes @ 0x20
  2196  000220                     	ds	32
  2197  000240                     _loop$143:
  2198                           	opt callstack 0
  2199                           
  2200                           ; 2 bytes @ 0x40
  2201  000240                     	ds	2
  2202  000242                     _loop$148:
  2203                           	opt callstack 0
  2204                           
  2205                           ; 2 bytes @ 0x42
  2206  000242                     	ds	2
  2207  000244                     loop@zz:
  2208                           	opt callstack 0
  2209                           
  2210                           ; 1 bytes @ 0x44
  2211  000244                     	ds	1
  2212                           
  2213                           	psect	cstackBANK0
  2214  000060                     __pcstackBANK0:
  2215                           	opt callstack 0
  2216  000060                     A6_SpeedSet@response:
  2217                           	opt callstack 0
  2218  000060                     A6_SpeedAutoDetect@zzzz:
  2219                           	opt callstack 0
  2220                           
  2221                           ; 32 bytes @ 0x0
  2222  000060                     	ds	32
  2223  000080                     A6_SpeedAutoDetect@speeds:
  2224                           	opt callstack 0
  2225  000080                     A6_SpeedSet@request:
  2226                           	opt callstack 0
  2227                           
  2228                           ; 20 bytes @ 0x20
  2229  000080                     	ds	12
  2230  00008C                     A6_SpeedAutoDetect@i:
  2231                           	opt callstack 0
  2232                           
  2233                           ; 1 bytes @ 0x2C
  2234  00008C                     	ds	8
  2235  000094                     ??_loop:
  2236                           
  2237                           ; 1 bytes @ 0x34
  2238  000094                     	ds	4
  2239                           
  2240                           	psect	cstackCOMRAM
  2241  000001                     __pcstackCOMRAM:
  2242                           	opt callstack 0
  2243  000001                     ??_Ecg_Interrupt:
  2244  000001                     EUSART_RX_Interrupt@c:
  2245                           	opt callstack 0
  2246                           
  2247                           ; 1 bytes @ 0x0
  2248  000001                     	ds	2
  2249  000003                     ??_isr:
  2250                           
  2251                           ; 1 bytes @ 0x2
  2252  000003                     	ds	2
  2253  000005                     ??_init:
  2254  000005                     ??_isdigit:
  2255  000005                     ??_TFT_Reset:
  2256  000005                     ?_abs:
  2257                           	opt callstack 0
  2258  000005                     ?_Ecg_CheckLeads:
  2259                           	opt callstack 0
  2260  000005                     ?_strcmp:
  2261                           	opt callstack 0
  2262  000005                     ?_strlen:
  2263                           	opt callstack 0
  2264  000005                     ?___wmul:
  2265                           	opt callstack 0
  2266  000005                     ?___awdiv:
  2267                           	opt callstack 0
  2268  000005                     ?___lldiv:
  2269                           	opt callstack 0
  2270  000005                     EUSART_TX_Char@c:
  2271                           	opt callstack 0
  2272  000005                     TFT_WriteRegister@reg:
  2273                           	opt callstack 0
  2274  000005                     A6_ReadLine@response:
  2275                           	opt callstack 0
  2276  000005                     ___wmul@multiplier:
  2277                           	opt callstack 0
  2278  000005                     ___awdiv@dividend:
  2279                           	opt callstack 0
  2280  000005                     abs@a:
  2281                           	opt callstack 0
  2282  000005                     memset@p1:
  2283                           	opt callstack 0
  2284  000005                     strcmp@s1:
  2285                           	opt callstack 0
  2286  000005                     strlen@s:
  2287                           	opt callstack 0
  2288  000005                     sleepMS@ms:
  2289                           	opt callstack 0
  2290  000005                     ___lldiv@dividend:
  2291                           	opt callstack 0
  2292                           
  2293                           ; 4 bytes @ 0x4
  2294  000005                     	ds	1
  2295  000006                     _isdigit$1772:
  2296                           	opt callstack 0
  2297                           
  2298                           ; 1 bytes @ 0x5
  2299  000006                     	ds	1
  2300  000007                     ??_abs:
  2301  000007                     ??_Ecg_CheckLeads:
  2302  000007                     isdigit@c:
  2303                           	opt callstack 0
  2304  000007                     TFT_WriteRegister@data:
  2305                           	opt callstack 0
  2306  000007                     A6_ReadLine@timeout:
  2307                           	opt callstack 0
  2308  000007                     ___wmul@multiplicand:
  2309                           	opt callstack 0
  2310  000007                     ___awdiv@divisor:
  2311                           	opt callstack 0
  2312  000007                     memset@c:
  2313                           	opt callstack 0
  2314  000007                     strcmp@s2:
  2315                           	opt callstack 0
  2316  000007                     strlen@cp:
  2317                           	opt callstack 0
  2318                           
  2319                           ; 2 bytes @ 0x6
  2320  000007                     	ds	1
  2321  000008                     Ecg_CheckLeads@leadsStatus:
  2322                           	opt callstack 0
  2323                           
  2324                           ; 1 bytes @ 0x7
  2325  000008                     	ds	1
  2326  000009                     ??_strcmp:
  2327  000009                     ??_A6_ReadLine:
  2328  000009                     TFT_WriteRegister@h:
  2329                           	opt callstack 0
  2330  000009                     ___awdiv@counter:
  2331                           	opt callstack 0
  2332  000009                     EUSART_TX_String@str:
  2333                           	opt callstack 0
  2334  000009                     ___wmul@product:
  2335                           	opt callstack 0
  2336  000009                     memset@n:
  2337                           	opt callstack 0
  2338  000009                     sleepMS@t:
  2339                           	opt callstack 0
  2340  000009                     ___lldiv@divisor:
  2341                           	opt callstack 0
  2342                           
  2343                           ; 4 bytes @ 0x8
  2344  000009                     	ds	1
  2345  00000A                     TFT_WriteRegister@l:
  2346                           	opt callstack 0
  2347  00000A                     ___awdiv@sign:
  2348                           	opt callstack 0
  2349                           
  2350                           ; 1 bytes @ 0x9
  2351  00000A                     	ds	1
  2352  00000B                     TFT_WriteRegister@h_712:
  2353                           	opt callstack 0
  2354  00000B                     EUSART_TX_String@len:
  2355                           	opt callstack 0
  2356  00000B                     strcmp@r:
  2357                           	opt callstack 0
  2358  00000B                     ___awdiv@quotient:
  2359                           	opt callstack 0
  2360  00000B                     memset@p:
  2361                           	opt callstack 0
  2362                           
  2363                           ; 2 bytes @ 0xA
  2364  00000B                     	ds	1
  2365  00000C                     TFT_WriteRegister@l_713:
  2366                           	opt callstack 0
  2367                           
  2368                           ; 1 bytes @ 0xB
  2369  00000C                     	ds	1
  2370  00000D                     TFT_SetAddrWindow@x1:
  2371                           	opt callstack 0
  2372  00000D                     TFT_DrawPixel@x:
  2373                           	opt callstack 0
  2374  00000D                     TFT_Flood@color:
  2375                           	opt callstack 0
  2376  00000D                     A6_ReadLine@t:
  2377                           	opt callstack 0
  2378  00000D                     ___lldiv@quotient:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 4 bytes @ 0xC
  2382  00000D                     	ds	2
  2383  00000F                     TFT_SetAddrWindow@y1:
  2384                           	opt callstack 0
  2385  00000F                     TFT_DrawPixel@y:
  2386                           	opt callstack 0
  2387  00000F                     TFT_Flood@len:
  2388                           	opt callstack 0
  2389                           
  2390                           ; 4 bytes @ 0xE
  2391  00000F                     	ds	2
  2392  000011                     A6_ReadLine@iLine:
  2393                           	opt callstack 0
  2394  000011                     ___lldiv@counter:
  2395                           	opt callstack 0
  2396  000011                     TFT_SetAddrWindow@x2:
  2397                           	opt callstack 0
  2398  000011                     TFT_DrawPixel@color:
  2399                           	opt callstack 0
  2400                           
  2401                           ; 2 bytes @ 0x10
  2402  000011                     	ds	1
  2403  000012                     ?___llmod:
  2404                           	opt callstack 0
  2405  000012                     A6_Command@command:
  2406                           	opt callstack 0
  2407  000012                     EUSART_SetSpeed@speed:
  2408                           	opt callstack 0
  2409  000012                     ___llmod@dividend:
  2410                           	opt callstack 0
  2411                           
  2412                           ; 4 bytes @ 0x11
  2413  000012                     	ds	1
  2414  000013                     ??_TFT_Flood:
  2415  000013                     TFT_SetAddrWindow@y2:
  2416                           	opt callstack 0
  2417  000013                     TFT_DrawLine@x0:
  2418                           	opt callstack 0
  2419                           
  2420                           ; 2 bytes @ 0x12
  2421  000013                     	ds	1
  2422  000014                     A6_Command@resp1:
  2423                           	opt callstack 0
  2424                           
  2425                           ; 2 bytes @ 0x13
  2426  000014                     	ds	1
  2427  000015                     TFT_DrawLine@y0:
  2428                           	opt callstack 0
  2429                           
  2430                           ; 2 bytes @ 0x14
  2431  000015                     	ds	1
  2432  000016                     ??_EUSART_SetSpeed:
  2433  000016                     A6_Command@resp2:
  2434                           	opt callstack 0
  2435  000016                     ___llmod@divisor:
  2436                           	opt callstack 0
  2437                           
  2438                           ; 4 bytes @ 0x15
  2439  000016                     	ds	1
  2440  000017                     TFT_DrawLine@x1:
  2441                           	opt callstack 0
  2442  000017                     TFT_Flood@blocks:
  2443                           	opt callstack 0
  2444                           
  2445                           ; 2 bytes @ 0x16
  2446  000017                     	ds	1
  2447  000018                     A6_Command@timeout:
  2448                           	opt callstack 0
  2449                           
  2450                           ; 2 bytes @ 0x17
  2451  000018                     	ds	1
  2452  000019                     TFT_Flood@i:
  2453                           	opt callstack 0
  2454  000019                     TFT_DrawLine@y1:
  2455                           	opt callstack 0
  2456                           
  2457                           ; 2 bytes @ 0x18
  2458  000019                     	ds	1
  2459  00001A                     TFT_Flood@color_hi:
  2460                           	opt callstack 0
  2461  00001A                     ___llmod@counter:
  2462                           	opt callstack 0
  2463  00001A                     A6_Command@response:
  2464                           	opt callstack 0
  2465  00001A                     EUSART_SetSpeed@tmp:
  2466                           	opt callstack 0
  2467                           
  2468                           ; 4 bytes @ 0x19
  2469  00001A                     	ds	1
  2470  00001B                     ?_sprintf:
  2471                           	opt callstack 0
  2472  00001B                     TFT_Flood@color_lo:
  2473                           	opt callstack 0
  2474  00001B                     TFT_DrawLine@color:
  2475                           	opt callstack 0
  2476  00001B                     sprintf@sp:
  2477                           	opt callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x1A
  2480  00001B                     	ds	1
  2481  00001C                     TFT_DrawFillRect@x:
  2482                           	opt callstack 0
  2483  00001C                     TFT_FillScreen@color:
  2484                           	opt callstack 0
  2485                           
  2486                           ; 2 bytes @ 0x1B
  2487  00001C                     	ds	1
  2488  00001D                     ??_TFT_DrawLine:
  2489  00001D                     sprintf@f:
  2490                           	opt callstack 0
  2491  00001D                     A6_Command@t:
  2492                           	opt callstack 0
  2493                           
  2494                           ; 4 bytes @ 0x1C
  2495  00001D                     	ds	1
  2496  00001E                     ??_TFT_Init:
  2497  00001E                     TFT_DrawFillRect@y:
  2498                           	opt callstack 0
  2499                           
  2500                           ; 2 bytes @ 0x1D
  2501  00001E                     	ds	2
  2502  000020                     TFT_Init@data:
  2503                           	opt callstack 0
  2504  000020                     TFT_DrawLine@t:
  2505                           	opt callstack 0
  2506  000020                     TFT_DrawFillRect@w:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 2 bytes @ 0x1F
  2510  000020                     	ds	1
  2511  000021                     A6_IsAlive@response:
  2512                           	opt callstack 0
  2513                           
  2514                           ; 32 bytes @ 0x20
  2515  000021                     	ds	1
  2516  000022                     TFT_Init@initSequenceSize:
  2517                           	opt callstack 0
  2518  000022                     TFT_DrawLine@t_757:
  2519                           	opt callstack 0
  2520  000022                     TFT_DrawFillRect@h:
  2521                           	opt callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x21
  2524  000022                     	ds	1
  2525  000023                     ??_sprintf:
  2526                           
  2527                           ; 1 bytes @ 0x22
  2528  000023                     	ds	1
  2529  000024                     TFT_Init@cmd:
  2530                           	opt callstack 0
  2531  000024                     TFT_DrawLine@t_758:
  2532                           	opt callstack 0
  2533  000024                     TFT_DrawFillRect@color:
  2534                           	opt callstack 0
  2535                           
  2536                           ; 2 bytes @ 0x23
  2537  000024                     	ds	2
  2538  000026                     ??_TFT_DrawFillRect:
  2539  000026                     TFT_Init@i:
  2540                           	opt callstack 0
  2541  000026                     TFT_DrawLine@t_759:
  2542                           	opt callstack 0
  2543                           
  2544                           ; 2 bytes @ 0x25
  2545  000026                     	ds	1
  2546  000027                     sprintf@prec:
  2547                           	opt callstack 0
  2548                           
  2549                           ; 2 bytes @ 0x26
  2550  000027                     	ds	1
  2551  000028                     TFT_DrawLine@dy:
  2552                           	opt callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x27
  2555  000028                     	ds	1
  2556  000029                     sprintf@val:
  2557                           	opt callstack 0
  2558                           
  2559                           ; 4 bytes @ 0x28
  2560  000029                     	ds	1
  2561  00002A                     TFT_DrawLine@ystep:
  2562                           	opt callstack 0
  2563  00002A                     TFT_DrawChar@x:
  2564                           	opt callstack 0
  2565                           
  2566                           ; 2 bytes @ 0x29
  2567  00002A                     	ds	2
  2568  00002C                     TFT_DrawLine@err:
  2569                           	opt callstack 0
  2570  00002C                     TFT_DrawChar@y:
  2571                           	opt callstack 0
  2572                           
  2573                           ; 2 bytes @ 0x2B
  2574  00002C                     	ds	1
  2575  00002D                     sprintf@ap:
  2576                           	opt callstack 0
  2577                           
  2578                           ; 2 bytes @ 0x2C
  2579  00002D                     	ds	1
  2580  00002E                     TFT_DrawChar@c:
  2581                           	opt callstack 0
  2582  00002E                     TFT_DrawLine@steep:
  2583                           	opt callstack 0
  2584                           
  2585                           ; 2 bytes @ 0x2D
  2586  00002E                     	ds	1
  2587  00002F                     sprintf@flag:
  2588                           	opt callstack 0
  2589  00002F                     TFT_DrawChar@color:
  2590                           	opt callstack 0
  2591                           
  2592                           ; 2 bytes @ 0x2E
  2593  00002F                     	ds	1
  2594  000030                     TFT_DrawLine@dx:
  2595                           	opt callstack 0
  2596  000030                     sprintf@width:
  2597                           	opt callstack 0
  2598                           
  2599                           ; 2 bytes @ 0x2F
  2600  000030                     	ds	1
  2601  000031                     TFT_DrawChar@bg:
  2602                           	opt callstack 0
  2603                           
  2604                           ; 2 bytes @ 0x30
  2605  000031                     	ds	1
  2606  000032                     sprintf@c:
  2607                           	opt callstack 0
  2608                           
  2609                           ; 1 bytes @ 0x31
  2610  000032                     	ds	1
  2611  000033                     TFT_DrawChar@size:
  2612                           	opt callstack 0
  2613                           
  2614                           ; 1 bytes @ 0x32
  2615  000033                     	ds	1
  2616  000034                     ??_TFT_DrawChar:
  2617                           
  2618                           ; 1 bytes @ 0x33
  2619  000034                     	ds	4
  2620  000038                     TFT_DrawChar@line:
  2621                           	opt callstack 0
  2622                           
  2623                           ; 1 bytes @ 0x37
  2624  000038                     	ds	1
  2625  000039                     _TFT_DrawChar$2002:
  2626                           	opt callstack 0
  2627                           
  2628                           ; 2 bytes @ 0x38
  2629  000039                     	ds	2
  2630  00003B                     _TFT_DrawChar$2003:
  2631                           	opt callstack 0
  2632                           
  2633                           ; 2 bytes @ 0x3A
  2634  00003B                     	ds	2
  2635  00003D                     TFT_DrawChar@j:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 1 bytes @ 0x3C
  2639  00003D                     	ds	1
  2640  00003E                     TFT_DrawChar@i:
  2641                           	opt callstack 0
  2642                           
  2643                           ; 1 bytes @ 0x3D
  2644  00003E                     	ds	1
  2645  00003F                     TFT_DrawString@x:
  2646                           	opt callstack 0
  2647                           
  2648                           ; 2 bytes @ 0x3E
  2649  00003F                     	ds	2
  2650  000041                     A6_IsAlive@loop:
  2651                           	opt callstack 0
  2652  000041                     TFT_DrawString@y:
  2653                           	opt callstack 0
  2654                           
  2655                           ; 2 bytes @ 0x40
  2656  000041                     	ds	1
  2657  000042                     A6_SpeedSet@speed:
  2658                           	opt callstack 0
  2659                           
  2660                           ; 4 bytes @ 0x41
  2661  000042                     	ds	1
  2662  000043                     TFT_DrawString@str:
  2663                           	opt callstack 0
  2664                           
  2665                           ; 2 bytes @ 0x42
  2666  000043                     	ds	2
  2667  000045                     TFT_DrawString@color:
  2668                           	opt callstack 0
  2669                           
  2670                           ; 2 bytes @ 0x44
  2671  000045                     	ds	1
  2672  000046                     
  2673                           ; 1 bytes @ 0x45
  2674  000046                     	ds	1
  2675  000047                     TFT_DrawString@bg:
  2676                           	opt callstack 0
  2677                           
  2678                           ; 2 bytes @ 0x46
  2679  000047                     	ds	2
  2680  000049                     TFT_DrawString@size:
  2681                           	opt callstack 0
  2682                           
  2683                           ; 1 bytes @ 0x48
  2684  000049                     	ds	1
  2685  00004A                     printLine@str:
  2686                           	opt callstack 0
  2687                           
  2688                           ; 2 bytes @ 0x49
  2689  00004A                     	ds	2
  2690  00004C                     printLine@color:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 2 bytes @ 0x4B
  2694  00004C                     	ds	2
  2695  00004E                     
  2696                           ; 1 bytes @ 0x4D
  2697 ;;
  2698 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2699 ;;
  2700 ;; *************** function _main *****************
  2701 ;; Defined at:
  2702 ;;		line 21 in file "main.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;		None
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2716 ;;      Params:         0       0       0       0       0       0       0       0       0
  2717 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2719 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2720 ;;Total ram usage:        0 bytes
  2721 ;; Hardware stack levels required when called:   11
  2722 ;; This function calls:
  2723 ;;		_A6_Init
  2724 ;;		_EUSART_Init
  2725 ;;		_Ecg_Init
  2726 ;;		_TFT_Init
  2727 ;;		_init
  2728 ;;		_loop
  2729 ;; This function is called by:
  2730 ;;		Startup code after reset
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text0
  2735  001C9C                     __ptext0:
  2736                           	opt callstack 0
  2737  001C9C                     _main:
  2738                           	opt callstack 20
  2739  001C9C                     
  2740                           ;main.c: 23: init();
  2741  001C9C  EC63  F00B         	call	_init	;wreg free
  2742  001CA0                     
  2743                           ;main.c: 24: TFT_Init();
  2744  001CA0  ECD8  F007         	call	_TFT_Init	;wreg free
  2745  001CA4                     
  2746                           ;main.c: 25: EUSART_Init();
  2747  001CA4  ECD3  F00B         	call	_EUSART_Init	;wreg free
  2748  001CA8                     
  2749                           ;main.c: 26: Ecg_Init();
  2750  001CA8  EC10  F00E         	call	_Ecg_Init	;wreg free
  2751  001CAC                     
  2752                           ;main.c: 27: A6_Init();
  2753  001CAC  EC7C  F00E         	call	_A6_Init	;wreg free
  2754  001CB0                     l4566:
  2755  001CB0  ECFE  F001         	call	_loop	;wreg free
  2756  001CB4  EF58  F00E         	goto	l4566
  2757  001CB8  EF07  F000         	goto	start
  2758  001CBC                     __end_of_main:
  2759                           	opt callstack 0
  2760                           
  2761 ;; *************** function _loop *****************
  2762 ;; Defined at:
  2763 ;;		line 37 in file "main.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  response       32   32[BANK2 ] unsigned char [32]
  2768 ;;  response       32    0[BANK2 ] unsigned char [32]
  2769 ;;  zz              1   68[BANK2 ] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2779 ;;      Params:         0       0       0       0       0       0       0       0       0
  2780 ;;      Locals:         0       0       0      69       0       0       0       0       0
  2781 ;;      Temps:          0       4       0       0       0       0       0       0       0
  2782 ;;      Totals:         0       4       0      69       0       0       0       0       0
  2783 ;;Total ram usage:       73 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:   10
  2786 ;; This function calls:
  2787 ;;		_A6_Command
  2788 ;;		_A6_IsAlive
  2789 ;;		_A6_SpeedAutoDetect
  2790 ;;		_A6_SpeedSet
  2791 ;;		_memset
  2792 ;;		_printLine
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text1
  2799  0003FC                     __ptext1:
  2800                           	opt callstack 0
  2801  0003FC                     _loop:
  2802                           	opt callstack 20
  2803  0003FC                     
  2804                           ;main.c: 42: if((MILLISECONDS > 20000) && (tmp4 < (MILLISECONDS - 20000))) {
  2805  0003FC  0100               	movlb	0	; () banked
  2806  0003FE  51B5               	movf	(_MILLISECONDS+3)& (0+255),w,b
  2807  000400  11B4               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  2808  000402  E10B               	bnz	u3400
  2809  000404  0E21               	movlw	33
  2810  000406  5DB2               	subwf	_MILLISECONDS& (0+255),w,b
  2811  000408  0E4E               	movlw	78
  2812  00040A  59B3               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  2813  00040C  A0D8               	btfss	status,0,c
  2814  00040E  EF0B  F002         	goto	u3401
  2815  000412  EF0D  F002         	goto	u3400
  2816  000416                     u3401:
  2817  000416  EF02  F003         	goto	l4474
  2818  00041A                     u3400:
  2819  00041A                     
  2820                           ; BSR set to: 0
  2821  00041A  0EE0               	movlw	224
  2822  00041C  25B2               	addwf	_MILLISECONDS& (0+255),w,b
  2823  00041E  6F94               	movwf	??_loop& (0+255),b
  2824  000420  0EB1               	movlw	177
  2825  000422  21B3               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  2826  000424  6F95               	movwf	(??_loop+1)& (0+255),b
  2827  000426  0EFF               	movlw	255
  2828  000428  21B4               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  2829  00042A  6F96               	movwf	(??_loop+2)& (0+255),b
  2830  00042C  0EFF               	movlw	255
  2831  00042E  21B5               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  2832  000430  6F97               	movwf	(??_loop+3)& (0+255),b
  2833  000432  5194               	movf	??_loop& (0+255),w,b
  2834  000434  0101               	movlb	1	; () banked
  2835  000436  5D00               	subwf	_tmp4& (0+255),w,b
  2836  000438  0100               	movlb	0	; () banked
  2837  00043A  5195               	movf	(??_loop+1)& (0+255),w,b
  2838  00043C  0101               	movlb	1	; () banked
  2839  00043E  5901               	subwfb	(_tmp4+1)& (0+255),w,b
  2840  000440  0100               	movlb	0	; () banked
  2841  000442  5196               	movf	(??_loop+2)& (0+255),w,b
  2842  000444  0101               	movlb	1	; () banked
  2843  000446  5902               	subwfb	(_tmp4+2)& (0+255),w,b
  2844  000448  0100               	movlb	0	; () banked
  2845  00044A  5197               	movf	(??_loop+3)& (0+255),w,b
  2846  00044C  0101               	movlb	1	; () banked
  2847  00044E  5903               	subwfb	(_tmp4+3)& (0+255),w,b
  2848  000450  B0D8               	btfsc	status,0,c
  2849  000452  EF2D  F002         	goto	u3411
  2850  000456  EF2F  F002         	goto	u3410
  2851  00045A                     u3411:
  2852  00045A  EF02  F003         	goto	l4474
  2853  00045E                     u3410:
  2854  00045E                     
  2855                           ; BSR set to: 1
  2856                           ;main.c: 43: printLine("Change speed", 0xFFE0);
  2857  00045E  0E94               	movlw	low STR_1
  2858  000460  6E4A               	movwf	printLine@str^0,c
  2859  000462  0E5F               	movlw	high STR_1
  2860  000464  6E4B               	movwf	(printLine@str+1)^0,c
  2861  000466  0EFF               	movlw	255
  2862  000468  6E4D               	movwf	(printLine@color+1)^0,c
  2863  00046A  0EE0               	movlw	224
  2864  00046C  6E4C               	movwf	printLine@color^0,c
  2865  00046E  EC09  F00C         	call	_printLine	;wreg free
  2866  000472                     
  2867                           ;main.c: 44: tmp4 = MILLISECONDS;
  2868  000472  C0B2  F100         	movff	_MILLISECONDS,_tmp4
  2869  000476  C0B3  F101         	movff	_MILLISECONDS+1,_tmp4+1
  2870  00047A  C0B4  F102         	movff	_MILLISECONDS+2,_tmp4+2
  2871  00047E  C0B5  F103         	movff	_MILLISECONDS+3,_tmp4+3
  2872                           
  2873                           ;main.c: 46: uint8_t zz;;main.c: 47: switch(A6_SPEED) {
  2874  000482  EF6D  F002         	goto	l4450
  2875  000486                     l4442:
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;main.c: 49: zz = A6_SpeedSet(57600);
  2879  000486  0E00               	movlw	0
  2880  000488  6E42               	movwf	A6_SpeedSet@speed^0,c
  2881  00048A  0EE1               	movlw	225
  2882  00048C  6E43               	movwf	(A6_SpeedSet@speed+1)^0,c
  2883  00048E  0E00               	movlw	0
  2884  000490  6E44               	movwf	(A6_SpeedSet@speed+2)^0,c
  2885  000492  0E00               	movlw	0
  2886  000494  6E45               	movwf	(A6_SpeedSet@speed+3)^0,c
  2887  000496  EC68  F007         	call	_A6_SpeedSet	;wreg free
  2888  00049A  0102               	movlb	2	; () banked
  2889  00049C  6F44               	movwf	loop@zz& (0+255),b
  2890                           
  2891                           ;main.c: 50: break;
  2892  00049E  EFAF  F002         	goto	l4452
  2893  0004A2                     l4444:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;main.c: 52: zz = A6_SpeedSet(115200);
  2897  0004A2  0E00               	movlw	0
  2898  0004A4  6E42               	movwf	A6_SpeedSet@speed^0,c
  2899  0004A6  0EC2               	movlw	194
  2900  0004A8  6E43               	movwf	(A6_SpeedSet@speed+1)^0,c
  2901  0004AA  0E01               	movlw	1
  2902  0004AC  6E44               	movwf	(A6_SpeedSet@speed+2)^0,c
  2903  0004AE  0E00               	movlw	0
  2904  0004B0  6E45               	movwf	(A6_SpeedSet@speed+3)^0,c
  2905  0004B2  EC68  F007         	call	_A6_SpeedSet	;wreg free
  2906  0004B6  0102               	movlb	2	; () banked
  2907  0004B8  6F44               	movwf	loop@zz& (0+255),b
  2908                           
  2909                           ;main.c: 53: break;
  2910  0004BA  EFAF  F002         	goto	l4452
  2911  0004BE                     l4446:
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;main.c: 55: zz = A6_SpeedSet(9600);
  2915  0004BE  0E80               	movlw	128
  2916  0004C0  6E42               	movwf	A6_SpeedSet@speed^0,c
  2917  0004C2  0E25               	movlw	37
  2918  0004C4  6E43               	movwf	(A6_SpeedSet@speed+1)^0,c
  2919  0004C6  0E00               	movlw	0
  2920  0004C8  6E44               	movwf	(A6_SpeedSet@speed+2)^0,c
  2921  0004CA  0E00               	movlw	0
  2922  0004CC  6E45               	movwf	(A6_SpeedSet@speed+3)^0,c
  2923  0004CE  EC68  F007         	call	_A6_SpeedSet	;wreg free
  2924  0004D2  0102               	movlb	2	; () banked
  2925  0004D4  6F44               	movwf	loop@zz& (0+255),b
  2926                           
  2927                           ;main.c: 56: break;
  2928  0004D6  EFAF  F002         	goto	l4452
  2929  0004DA                     l4450:
  2930  0004DA  C0B6  F094         	movff	_A6_SPEED,??_loop
  2931  0004DE  C0B7  F095         	movff	_A6_SPEED+1,??_loop+1
  2932  0004E2  C0B8  F096         	movff	_A6_SPEED+2,??_loop+2
  2933  0004E6  C0B9  F097         	movff	_A6_SPEED+3,??_loop+3
  2934                           
  2935                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  2936                           ; Switch size 1, requested type "simple"
  2937                           ; Number of cases is 1, Range of values is 0 to 0
  2938                           ; switch strategies available:
  2939                           ; Name         Instructions Cycles
  2940                           ; simple_byte            4     3 (average)
  2941                           ;	Chosen strategy is simple_byte
  2942  0004EA  0100               	movlb	0	; () banked
  2943  0004EC  5197               	movf	(??_loop+3)& (0+255),w,b
  2944  0004EE  0A00               	xorlw	0	; case 0
  2945  0004F0  B4D8               	btfsc	status,2,c
  2946  0004F2  EFA4  F002         	goto	l4870
  2947  0004F6  EFAF  F002         	goto	l4452
  2948  0004FA                     l4866:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  2952                           ; Switch size 1, requested type "simple"
  2953                           ; Number of cases is 2, Range of values is 37 to 225
  2954                           ; switch strategies available:
  2955                           ; Name         Instructions Cycles
  2956                           ; simple_byte            7     4 (average)
  2957                           ;	Chosen strategy is simple_byte
  2958  0004FA  5195               	movf	(??_loop+1)& (0+255),w,b
  2959  0004FC  0A25               	xorlw	37	; case 37
  2960  0004FE  B4D8               	btfsc	status,2,c
  2961  000500  EF88  F002         	goto	l4872
  2962  000504  0AC4               	xorlw	196	; case 225
  2963  000506  B4D8               	btfsc	status,2,c
  2964  000508  EF8F  F002         	goto	l4874
  2965  00050C  EFAF  F002         	goto	l4452
  2966  000510                     l4872:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ; Switch size 1, requested type "simple"
  2970                           ; Number of cases is 1, Range of values is 128 to 128
  2971                           ; switch strategies available:
  2972                           ; Name         Instructions Cycles
  2973                           ; simple_byte            4     3 (average)
  2974                           ;	Chosen strategy is simple_byte
  2975  000510  5194               	movf	??_loop& (0+255),w,b
  2976  000512  0A80               	xorlw	128	; case 128
  2977  000514  B4D8               	btfsc	status,2,c
  2978  000516  EF43  F002         	goto	l4442
  2979  00051A  EFAF  F002         	goto	l4452
  2980  00051E                     l4874:
  2981                           
  2982                           ; BSR set to: 0
  2983                           ; Switch size 1, requested type "simple"
  2984                           ; Number of cases is 1, Range of values is 0 to 0
  2985                           ; switch strategies available:
  2986                           ; Name         Instructions Cycles
  2987                           ; simple_byte            4     3 (average)
  2988                           ;	Chosen strategy is simple_byte
  2989  00051E  5194               	movf	??_loop& (0+255),w,b
  2990  000520  0A00               	xorlw	0	; case 0
  2991  000522  B4D8               	btfsc	status,2,c
  2992  000524  EF51  F002         	goto	l4444
  2993  000528  EFAF  F002         	goto	l4452
  2994  00052C                     l4868:
  2995                           
  2996                           ; BSR set to: 0
  2997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2998                           ; Switch size 1, requested type "simple"
  2999                           ; Number of cases is 1, Range of values is 194 to 194
  3000                           ; switch strategies available:
  3001                           ; Name         Instructions Cycles
  3002                           ; simple_byte            4     3 (average)
  3003                           ;	Chosen strategy is simple_byte
  3004  00052C  5195               	movf	(??_loop+1)& (0+255),w,b
  3005  00052E  0AC2               	xorlw	194	; case 194
  3006  000530  B4D8               	btfsc	status,2,c
  3007  000532  EF9D  F002         	goto	l4876
  3008  000536  EFAF  F002         	goto	l4452
  3009  00053A                     l4876:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ; Switch size 1, requested type "simple"
  3013                           ; Number of cases is 1, Range of values is 0 to 0
  3014                           ; switch strategies available:
  3015                           ; Name         Instructions Cycles
  3016                           ; simple_byte            4     3 (average)
  3017                           ;	Chosen strategy is simple_byte
  3018  00053A  5194               	movf	??_loop& (0+255),w,b
  3019  00053C  0A00               	xorlw	0	; case 0
  3020  00053E  B4D8               	btfsc	status,2,c
  3021  000540  EF5F  F002         	goto	l4446
  3022  000544  EFAF  F002         	goto	l4452
  3023  000548                     l4870:
  3024                           
  3025                           ; BSR set to: 0
  3026                           ; Switch size 1, requested type "simple"
  3027                           ; Number of cases is 2, Range of values is 0 to 1
  3028                           ; switch strategies available:
  3029                           ; Name         Instructions Cycles
  3030                           ; simple_byte            7     4 (average)
  3031                           ;	Chosen strategy is simple_byte
  3032  000548  5196               	movf	(??_loop+2)& (0+255),w,b
  3033  00054A  0A00               	xorlw	0	; case 0
  3034  00054C  B4D8               	btfsc	status,2,c
  3035  00054E  EF7D  F002         	goto	l4866
  3036  000552  0A01               	xorlw	1	; case 1
  3037  000554  B4D8               	btfsc	status,2,c
  3038  000556  EF96  F002         	goto	l4868
  3039  00055A  EFAF  F002         	goto	l4452
  3040  00055E                     l4452:
  3041                           
  3042                           ;main.c: 59: printLine(((zz == 1) ? "Yes!" : "No..."), 0x001F);
  3043  00055E  0102               	movlb	2	; () banked
  3044  000560  0544               	decf	loop@zz& (0+255),w,b
  3045  000562  B4D8               	btfsc	status,2,c
  3046  000564  EFB6  F002         	goto	u3421
  3047  000568  EFB8  F002         	goto	u3420
  3048  00056C                     u3421:
  3049  00056C  EFBE  F002         	goto	l4456
  3050  000570                     u3420:
  3051  000570                     
  3052                           ; BSR set to: 2
  3053  000570  0EE2               	movlw	low STR_3
  3054  000572  6F40               	movwf	_loop$143& (0+255),b
  3055  000574  0E5F               	movlw	high STR_3
  3056  000576  6F41               	movwf	(_loop$143+1)& (0+255),b
  3057  000578  EFC2  F002         	goto	l4458
  3058  00057C                     l4456:
  3059                           
  3060                           ; BSR set to: 2
  3061  00057C  0EE8               	movlw	low STR_2
  3062  00057E  6F40               	movwf	_loop$143& (0+255),b
  3063  000580  0E5F               	movlw	high STR_2
  3064  000582  6F41               	movwf	(_loop$143+1)& (0+255),b
  3065  000584                     l4458:
  3066                           
  3067                           ; BSR set to: 2
  3068  000584  C240  F04A         	movff	_loop$143,printLine@str
  3069  000588  C241  F04B         	movff	_loop$143+1,printLine@str+1
  3070  00058C  0E00               	movlw	0
  3071  00058E  6E4D               	movwf	(printLine@color+1)^0,c
  3072  000590  0E1F               	movlw	31
  3073  000592  6E4C               	movwf	printLine@color^0,c
  3074  000594  EC09  F00C         	call	_printLine	;wreg free
  3075  000598                     
  3076                           ;main.c: 61: if(A6_IsAlive() == 0) {
  3077  000598  EC28  F00B         	call	_A6_IsAlive	;wreg free
  3078  00059C  0900               	iorlw	0
  3079  00059E  A4D8               	btfss	status,2,c
  3080  0005A0  EFD4  F002         	goto	u3431
  3081  0005A4  EFD6  F002         	goto	u3430
  3082  0005A8                     u3431:
  3083  0005A8  EF02  F003         	goto	l4474
  3084  0005AC                     u3430:
  3085  0005AC                     
  3086                           ;main.c: 62: printLine("Comm is dead. Retry...", 0x001F);
  3087  0005AC  0E5D               	movlw	low STR_4
  3088  0005AE  6E4A               	movwf	printLine@str^0,c
  3089  0005B0  0E5F               	movlw	high STR_4
  3090  0005B2  6E4B               	movwf	(printLine@str+1)^0,c
  3091  0005B4  0E00               	movlw	0
  3092  0005B6  6E4D               	movwf	(printLine@color+1)^0,c
  3093  0005B8  0E1F               	movlw	31
  3094  0005BA  6E4C               	movwf	printLine@color^0,c
  3095  0005BC  EC09  F00C         	call	_printLine	;wreg free
  3096  0005C0                     
  3097                           ;main.c: 63: A6_SpeedAutoDetect();
  3098  0005C0  EC78  F006         	call	_A6_SpeedAutoDetect	;wreg free
  3099  0005C4                     
  3100                           ;main.c: 64: printLine(((A6_IsAlive() == 0) ? "Still dead" : "Resurrected!"), 0x001F);
  3101  0005C4  EC28  F00B         	call	_A6_IsAlive	;wreg free
  3102  0005C8  0900               	iorlw	0
  3103  0005CA  B4D8               	btfsc	status,2,c
  3104  0005CC  EFEA  F002         	goto	u3441
  3105  0005D0  EFEC  F002         	goto	u3440
  3106  0005D4                     u3441:
  3107  0005D4  EFF3  F002         	goto	l4470
  3108  0005D8                     u3440:
  3109  0005D8  0E87               	movlw	low STR_6
  3110  0005DA  0102               	movlb	2	; () banked
  3111  0005DC  6F42               	movwf	_loop$148& (0+255),b
  3112  0005DE  0E5F               	movlw	high STR_6
  3113  0005E0  6F43               	movwf	(_loop$148+1)& (0+255),b
  3114  0005E2  EFF8  F002         	goto	l4472
  3115  0005E6                     l4470:
  3116  0005E6  0ECF               	movlw	low STR_5
  3117  0005E8  0102               	movlb	2	; () banked
  3118  0005EA  6F42               	movwf	_loop$148& (0+255),b
  3119  0005EC  0E5F               	movlw	high STR_5
  3120  0005EE  6F43               	movwf	(_loop$148+1)& (0+255),b
  3121  0005F0                     l4472:
  3122                           
  3123                           ; BSR set to: 2
  3124  0005F0  C242  F04A         	movff	_loop$148,printLine@str
  3125  0005F4  C243  F04B         	movff	_loop$148+1,printLine@str+1
  3126  0005F8  0E00               	movlw	0
  3127  0005FA  6E4D               	movwf	(printLine@color+1)^0,c
  3128  0005FC  0E1F               	movlw	31
  3129  0005FE  6E4C               	movwf	printLine@color^0,c
  3130  000600  EC09  F00C         	call	_printLine	;wreg free
  3131  000604                     l4474:
  3132                           
  3133                           ;main.c: 65: };main.c: 66: };main.c: 68: if((MILLISECONDS > 2500) && (tmp1 < (MILLISECON
      +                          DS - 2500))) {
  3134  000604  0100               	movlb	0	; () banked
  3135  000606  51B5               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3136  000608  11B4               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3137  00060A  E10B               	bnz	u3450
  3138  00060C  0EC5               	movlw	197
  3139  00060E  5DB2               	subwf	_MILLISECONDS& (0+255),w,b
  3140  000610  0E09               	movlw	9
  3141  000612  59B3               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3142  000614  A0D8               	btfss	status,0,c
  3143  000616  EF0F  F003         	goto	u3451
  3144  00061A  EF11  F003         	goto	u3450
  3145  00061E                     u3451:
  3146  00061E  EF5E  F003         	goto	l4486
  3147  000622                     u3450:
  3148  000622                     
  3149                           ; BSR set to: 0
  3150  000622  0E3C               	movlw	60
  3151  000624  25B2               	addwf	_MILLISECONDS& (0+255),w,b
  3152  000626  6F94               	movwf	??_loop& (0+255),b
  3153  000628  0EF6               	movlw	246
  3154  00062A  21B3               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3155  00062C  6F95               	movwf	(??_loop+1)& (0+255),b
  3156  00062E  0EFF               	movlw	255
  3157  000630  21B4               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3158  000632  6F96               	movwf	(??_loop+2)& (0+255),b
  3159  000634  0EFF               	movlw	255
  3160  000636  21B5               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3161  000638  6F97               	movwf	(??_loop+3)& (0+255),b
  3162  00063A  5194               	movf	??_loop& (0+255),w,b
  3163  00063C  5DAE               	subwf	_tmp1& (0+255),w,b
  3164  00063E  5195               	movf	(??_loop+1)& (0+255),w,b
  3165  000640  59AF               	subwfb	(_tmp1+1)& (0+255),w,b
  3166  000642  5196               	movf	(??_loop+2)& (0+255),w,b
  3167  000644  59B0               	subwfb	(_tmp1+2)& (0+255),w,b
  3168  000646  5197               	movf	(??_loop+3)& (0+255),w,b
  3169  000648  59B1               	subwfb	(_tmp1+3)& (0+255),w,b
  3170  00064A  B0D8               	btfsc	status,0,c
  3171  00064C  EF2A  F003         	goto	u3461
  3172  000650  EF2C  F003         	goto	u3460
  3173  000654                     u3461:
  3174  000654  EF5E  F003         	goto	l4486
  3175  000658                     u3460:
  3176  000658                     
  3177                           ; BSR set to: 0
  3178                           ;main.c: 69: printLine("Send AT", 0xFFE0);
  3179  000658  0EDA               	movlw	low STR_7
  3180  00065A  6E4A               	movwf	printLine@str^0,c
  3181  00065C  0E5F               	movlw	high STR_7
  3182  00065E  6E4B               	movwf	(printLine@str+1)^0,c
  3183  000660  0EFF               	movlw	255
  3184  000662  6E4D               	movwf	(printLine@color+1)^0,c
  3185  000664  0EE0               	movlw	224
  3186  000666  6E4C               	movwf	printLine@color^0,c
  3187  000668  EC09  F00C         	call	_printLine	;wreg free
  3188  00066C                     
  3189                           ;main.c: 70: tmp1 = MILLISECONDS;
  3190  00066C  C0B2  F0AE         	movff	_MILLISECONDS,_tmp1
  3191  000670  C0B3  F0AF         	movff	_MILLISECONDS+1,_tmp1+1
  3192  000674  C0B4  F0B0         	movff	_MILLISECONDS+2,_tmp1+2
  3193  000678  C0B5  F0B1         	movff	_MILLISECONDS+3,_tmp1+3
  3194  00067C                     
  3195                           ;main.c: 72: char response[32];;main.c: 73: A6_Command(x8, "aa", "bb", 0, response);
  3196  00067C  0EBB               	movlw	low _x8
  3197  00067E  6E12               	movwf	A6_Command@command^0,c
  3198  000680  0E01               	movlw	high _x8
  3199  000682  6E13               	movwf	(A6_Command@command+1)^0,c
  3200  000684  0EF8               	movlw	low STR_8
  3201  000686  6E14               	movwf	A6_Command@resp1^0,c
  3202  000688  0E5F               	movlw	high STR_8
  3203  00068A  6E15               	movwf	(A6_Command@resp1+1)^0,c
  3204  00068C  0EFB               	movlw	low STR_9
  3205  00068E  6E16               	movwf	A6_Command@resp2^0,c
  3206  000690  0E5F               	movlw	high STR_9
  3207  000692  6E17               	movwf	(A6_Command@resp2+1)^0,c
  3208  000694  0E00               	movlw	0
  3209  000696  6E19               	movwf	(A6_Command@timeout+1)^0,c
  3210  000698  0E00               	movlw	0
  3211  00069A  6E18               	movwf	A6_Command@timeout^0,c
  3212  00069C  0E00               	movlw	low loop@response
  3213  00069E  6E1A               	movwf	A6_Command@response^0,c
  3214  0006A0  0E02               	movlw	high loop@response
  3215  0006A2  6E1B               	movwf	(A6_Command@response+1)^0,c
  3216  0006A4  ECF7  F006         	call	_A6_Command	;wreg free
  3217  0006A8                     
  3218                           ;main.c: 74: printLine(response, 0xF800);
  3219  0006A8  0E00               	movlw	low loop@response
  3220  0006AA  6E4A               	movwf	printLine@str^0,c
  3221  0006AC  0E02               	movlw	high loop@response
  3222  0006AE  6E4B               	movwf	(printLine@str+1)^0,c
  3223  0006B0  0EF8               	movlw	248
  3224  0006B2  6E4D               	movwf	(printLine@color+1)^0,c
  3225  0006B4  0E00               	movlw	0
  3226  0006B6  6E4C               	movwf	printLine@color^0,c
  3227  0006B8  EC09  F00C         	call	_printLine	;wreg free
  3228  0006BC                     l4486:
  3229                           
  3230                           ;main.c: 75: };main.c: 77: if((MILLISECONDS > 4000) && (tmp2 < (MILLISECONDS - 4000))) {
  3231  0006BC  0100               	movlb	0	; () banked
  3232  0006BE  51B5               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3233  0006C0  11B4               	iorwf	(_MILLISECONDS+2)& (0+255),w,b
  3234  0006C2  E10B               	bnz	u3470
  3235  0006C4  0EA1               	movlw	161
  3236  0006C6  5DB2               	subwf	_MILLISECONDS& (0+255),w,b
  3237  0006C8  0E0F               	movlw	15
  3238  0006CA  59B3               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  3239  0006CC  A0D8               	btfss	status,0,c
  3240  0006CE  EF6B  F003         	goto	u3471
  3241  0006D2  EF6D  F003         	goto	u3470
  3242  0006D6                     u3471:
  3243  0006D6  EFC8  F003         	goto	l90
  3244  0006DA                     u3470:
  3245  0006DA                     
  3246                           ; BSR set to: 0
  3247  0006DA  0E60               	movlw	96
  3248  0006DC  25B2               	addwf	_MILLISECONDS& (0+255),w,b
  3249  0006DE  6F94               	movwf	??_loop& (0+255),b
  3250  0006E0  0EF0               	movlw	240
  3251  0006E2  21B3               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3252  0006E4  6F95               	movwf	(??_loop+1)& (0+255),b
  3253  0006E6  0EFF               	movlw	255
  3254  0006E8  21B4               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3255  0006EA  6F96               	movwf	(??_loop+2)& (0+255),b
  3256  0006EC  0EFF               	movlw	255
  3257  0006EE  21B5               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3258  0006F0  6F97               	movwf	(??_loop+3)& (0+255),b
  3259  0006F2  5194               	movf	??_loop& (0+255),w,b
  3260  0006F4  5DAA               	subwf	_tmp2& (0+255),w,b
  3261  0006F6  5195               	movf	(??_loop+1)& (0+255),w,b
  3262  0006F8  59AB               	subwfb	(_tmp2+1)& (0+255),w,b
  3263  0006FA  5196               	movf	(??_loop+2)& (0+255),w,b
  3264  0006FC  59AC               	subwfb	(_tmp2+2)& (0+255),w,b
  3265  0006FE  5197               	movf	(??_loop+3)& (0+255),w,b
  3266  000700  59AD               	subwfb	(_tmp2+3)& (0+255),w,b
  3267  000702  B0D8               	btfsc	status,0,c
  3268  000704  EF86  F003         	goto	u3481
  3269  000708  EF88  F003         	goto	u3480
  3270  00070C                     u3481:
  3271  00070C  EFC8  F003         	goto	l90
  3272  000710                     u3480:
  3273  000710                     
  3274                           ; BSR set to: 0
  3275                           ;main.c: 78: printLine("Check speed", 0xFFE0);
  3276  000710  0EAD               	movlw	low STR_10
  3277  000712  6E4A               	movwf	printLine@str^0,c
  3278  000714  0E5F               	movlw	high STR_10
  3279  000716  6E4B               	movwf	(printLine@str+1)^0,c
  3280  000718  0EFF               	movlw	255
  3281  00071A  6E4D               	movwf	(printLine@color+1)^0,c
  3282  00071C  0EE0               	movlw	224
  3283  00071E  6E4C               	movwf	printLine@color^0,c
  3284  000720  EC09  F00C         	call	_printLine	;wreg free
  3285  000724                     
  3286                           ;main.c: 79: tmp2 = MILLISECONDS;
  3287  000724  C0B2  F0AA         	movff	_MILLISECONDS,_tmp2
  3288  000728  C0B3  F0AB         	movff	_MILLISECONDS+1,_tmp2+1
  3289  00072C  C0B4  F0AC         	movff	_MILLISECONDS+2,_tmp2+2
  3290  000730  C0B5  F0AD         	movff	_MILLISECONDS+3,_tmp2+3
  3291  000734                     
  3292                           ;main.c: 81: char response[32];;main.c: 82: memset(response, 0x00, 32);
  3293  000734  0E20               	movlw	low loop@response_154
  3294  000736  6E05               	movwf	memset@p1^0,c
  3295  000738  0E02               	movlw	high loop@response_154
  3296  00073A  6E06               	movwf	(memset@p1+1)^0,c
  3297  00073C  0E00               	movlw	0
  3298  00073E  6E08               	movwf	(memset@c+1)^0,c
  3299  000740  0E00               	movlw	0
  3300  000742  6E07               	movwf	memset@c^0,c
  3301  000744  0E00               	movlw	0
  3302  000746  6E0A               	movwf	(memset@n+1)^0,c
  3303  000748  0E20               	movlw	32
  3304  00074A  6E09               	movwf	memset@n^0,c
  3305  00074C  ECC1  F00D         	call	_memset	;wreg free
  3306  000750                     
  3307                           ;main.c: 83: A6_Command(x1, "aa", "bb", 0, response);
  3308  000750  0EB2               	movlw	low _x1
  3309  000752  6E12               	movwf	A6_Command@command^0,c
  3310  000754  0E01               	movlw	high _x1
  3311  000756  6E13               	movwf	(A6_Command@command+1)^0,c
  3312  000758  0EF8               	movlw	low STR_8
  3313  00075A  6E14               	movwf	A6_Command@resp1^0,c
  3314  00075C  0E5F               	movlw	high STR_8
  3315  00075E  6E15               	movwf	(A6_Command@resp1+1)^0,c
  3316  000760  0EFB               	movlw	low STR_9
  3317  000762  6E16               	movwf	A6_Command@resp2^0,c
  3318  000764  0E5F               	movlw	high STR_9
  3319  000766  6E17               	movwf	(A6_Command@resp2+1)^0,c
  3320  000768  0E00               	movlw	0
  3321  00076A  6E19               	movwf	(A6_Command@timeout+1)^0,c
  3322  00076C  0E00               	movlw	0
  3323  00076E  6E18               	movwf	A6_Command@timeout^0,c
  3324  000770  0E20               	movlw	low loop@response_154
  3325  000772  6E1A               	movwf	A6_Command@response^0,c
  3326  000774  0E02               	movlw	high loop@response_154
  3327  000776  6E1B               	movwf	(A6_Command@response+1)^0,c
  3328  000778  ECF7  F006         	call	_A6_Command	;wreg free
  3329  00077C                     
  3330                           ;main.c: 85: printLine(response, 0xF800);
  3331  00077C  0E20               	movlw	low loop@response_154
  3332  00077E  6E4A               	movwf	printLine@str^0,c
  3333  000780  0E02               	movlw	high loop@response_154
  3334  000782  6E4B               	movwf	(printLine@str+1)^0,c
  3335  000784  0EF8               	movlw	248
  3336  000786  6E4D               	movwf	(printLine@color+1)^0,c
  3337  000788  0E00               	movlw	0
  3338  00078A  6E4C               	movwf	printLine@color^0,c
  3339  00078C  EC09  F00C         	call	_printLine	;wreg free
  3340  000790                     l90:
  3341  000790  0012               	return		;funcret
  3342  000792                     __end_of_loop:
  3343                           	opt callstack 0
  3344                           
  3345 ;; *************** function _A6_SpeedSet *****************
  3346 ;; Defined at:
  3347 ;;		line 30 in file "A6Lib.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  speed           4   65[COMRAM] const unsigned long 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  response       32    0[BANK0 ] unsigned char [32]
  3352 ;;  request        20   32[BANK0 ] unsigned char [20]
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      unsigned char 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3362 ;;      Params:         4       0       0       0       0       0       0       0       0
  3363 ;;      Locals:         0      52       0       0       0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3365 ;;      Totals:         4      52       0       0       0       0       0       0       0
  3366 ;;Total ram usage:       56 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:    6
  3369 ;; This function calls:
  3370 ;;		_A6_Command
  3371 ;;		_A6_IsAlive
  3372 ;;		_EUSART_SetSpeed
  3373 ;;		_sleepMS
  3374 ;;		_sprintf
  3375 ;;		_strcmp
  3376 ;; This function is called by:
  3377 ;;		_loop
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text2
  3382  000ED0                     __ptext2:
  3383                           	opt callstack 0
  3384  000ED0                     _A6_SpeedSet:
  3385                           	opt callstack 23
  3386  000ED0                     
  3387                           ;A6Lib.c: 31: char request[20];;A6Lib.c: 32: char response[32];;A6Lib.c: 35: sprintf(req
      +                          uest, "AT+IPR=%lu\r", speed);
  3388  000ED0  0E80               	movlw	low A6_SpeedSet@request
  3389  000ED2  6E1B               	movwf	sprintf@sp^0,c
  3390  000ED4  0E00               	movlw	high A6_SpeedSet@request
  3391  000ED6  6E1C               	movwf	(sprintf@sp+1)^0,c
  3392  000ED8  0EA1               	movlw	low STR_20
  3393  000EDA  6E1D               	movwf	sprintf@f^0,c
  3394  000EDC  0E5F               	movlw	high STR_20
  3395  000EDE  6E1E               	movwf	(sprintf@f+1)^0,c
  3396  000EE0  C042  F01F         	movff	A6_SpeedSet@speed,?_sprintf+4
  3397  000EE4  C043  F020         	movff	A6_SpeedSet@speed+1,?_sprintf+5
  3398  000EE8  C044  F021         	movff	A6_SpeedSet@speed+2,?_sprintf+6
  3399  000EEC  C045  F022         	movff	A6_SpeedSet@speed+3,?_sprintf+7
  3400  000EF0  EC09  F000         	call	_sprintf	;wreg free
  3401  000EF4                     
  3402                           ;A6Lib.c: 36: A6_Command(request, "aa", "bb", 0, response);
  3403  000EF4  0E80               	movlw	low A6_SpeedSet@request
  3404  000EF6  6E12               	movwf	A6_Command@command^0,c
  3405  000EF8  0E00               	movlw	high A6_SpeedSet@request
  3406  000EFA  6E13               	movwf	(A6_Command@command+1)^0,c
  3407  000EFC  0EF8               	movlw	low STR_8
  3408  000EFE  6E14               	movwf	A6_Command@resp1^0,c
  3409  000F00  0E5F               	movlw	high STR_8
  3410  000F02  6E15               	movwf	(A6_Command@resp1+1)^0,c
  3411  000F04  0EFB               	movlw	low STR_9
  3412  000F06  6E16               	movwf	A6_Command@resp2^0,c
  3413  000F08  0E5F               	movlw	high STR_9
  3414  000F0A  6E17               	movwf	(A6_Command@resp2+1)^0,c
  3415  000F0C  0E00               	movlw	0
  3416  000F0E  6E19               	movwf	(A6_Command@timeout+1)^0,c
  3417  000F10  0E00               	movlw	0
  3418  000F12  6E18               	movwf	A6_Command@timeout^0,c
  3419  000F14  0E60               	movlw	low A6_SpeedSet@response
  3420  000F16  6E1A               	movwf	A6_Command@response^0,c
  3421  000F18  0E00               	movlw	high A6_SpeedSet@response
  3422  000F1A  6E1B               	movwf	(A6_Command@response+1)^0,c
  3423  000F1C  ECF7  F006         	call	_A6_Command	;wreg free
  3424  000F20                     
  3425                           ;A6Lib.c: 37: if(strcmp(response, "OK") == 0) {
  3426  000F20  0E60               	movlw	low A6_SpeedSet@response
  3427  000F22  6E05               	movwf	strcmp@s1^0,c
  3428  000F24  0E00               	movlw	high A6_SpeedSet@response
  3429  000F26  6E06               	movwf	(strcmp@s1+1)^0,c
  3430  000F28  0EF5               	movlw	low STR_19
  3431  000F2A  6E07               	movwf	strcmp@s2^0,c
  3432  000F2C  0E5F               	movlw	high STR_19
  3433  000F2E  6E08               	movwf	(strcmp@s2+1)^0,c
  3434  000F30  EC39  F00C         	call	_strcmp	;wreg free
  3435  000F34  5005               	movf	?_strcmp^0,w,c
  3436  000F36  1006               	iorwf	(?_strcmp+1)^0,w,c
  3437  000F38  A4D8               	btfss	status,2,c
  3438  000F3A  EFA1  F007         	goto	u3321
  3439  000F3E  EFA3  F007         	goto	u3320
  3440  000F42                     u3321:
  3441  000F42  EFCC  F007         	goto	l4334
  3442  000F46                     u3320:
  3443  000F46                     
  3444                           ;A6Lib.c: 38: sleepMS(1000);
  3445  000F46  0EE8               	movlw	232
  3446  000F48  6E05               	movwf	sleepMS@ms^0,c
  3447  000F4A  0E03               	movlw	3
  3448  000F4C  6E06               	movwf	(sleepMS@ms+1)^0,c
  3449  000F4E  0E00               	movlw	0
  3450  000F50  6E07               	movwf	(sleepMS@ms+2)^0,c
  3451  000F52  0E00               	movlw	0
  3452  000F54  6E08               	movwf	(sleepMS@ms+3)^0,c
  3453  000F56  ECA4  F00D         	call	_sleepMS	;wreg free
  3454                           
  3455                           ;A6Lib.c: 41: EUSART_SetSpeed(speed);
  3456  000F5A  C042  F012         	movff	A6_SpeedSet@speed,EUSART_SetSpeed@speed
  3457  000F5E  C043  F013         	movff	A6_SpeedSet@speed+1,EUSART_SetSpeed@speed+1
  3458  000F62  C044  F014         	movff	A6_SpeedSet@speed+2,EUSART_SetSpeed@speed+2
  3459  000F66  C045  F015         	movff	A6_SpeedSet@speed+3,EUSART_SetSpeed@speed+3
  3460  000F6A  EC32  F00A         	call	_EUSART_SetSpeed	;wreg free
  3461  000F6E                     
  3462                           ;A6Lib.c: 42: if(A6_IsAlive() == 1) {
  3463  000F6E  EC28  F00B         	call	_A6_IsAlive	;wreg free
  3464  000F72  06E8               	decf	wreg,f,c
  3465  000F74  A4D8               	btfss	status,2,c
  3466  000F76  EFBF  F007         	goto	u3331
  3467  000F7A  EFC1  F007         	goto	u3330
  3468  000F7E                     u3331:
  3469  000F7E  EFCC  F007         	goto	l4334
  3470  000F82                     u3330:
  3471  000F82                     
  3472                           ;A6Lib.c: 44: A6_SPEED = speed;
  3473  000F82  C042  F0B6         	movff	A6_SpeedSet@speed,_A6_SPEED
  3474  000F86  C043  F0B7         	movff	A6_SpeedSet@speed+1,_A6_SPEED+1
  3475  000F8A  C044  F0B8         	movff	A6_SpeedSet@speed+2,_A6_SPEED+2
  3476  000F8E  C045  F0B9         	movff	A6_SpeedSet@speed+3,_A6_SPEED+3
  3477  000F92                     
  3478                           ;A6Lib.c: 45: return 1;
  3479  000F92  0E01               	movlw	1
  3480  000F94  EFD7  F007         	goto	l538
  3481  000F98                     l4334:
  3482                           
  3483                           ;A6Lib.c: 46: };A6Lib.c: 47: };A6Lib.c: 50: EUSART_SetSpeed(A6_SPEED);
  3484  000F98  C0B6  F012         	movff	_A6_SPEED,EUSART_SetSpeed@speed
  3485  000F9C  C0B7  F013         	movff	_A6_SPEED+1,EUSART_SetSpeed@speed+1
  3486  000FA0  C0B8  F014         	movff	_A6_SPEED+2,EUSART_SetSpeed@speed+2
  3487  000FA4  C0B9  F015         	movff	_A6_SPEED+3,EUSART_SetSpeed@speed+3
  3488  000FA8  EC32  F00A         	call	_EUSART_SetSpeed	;wreg free
  3489  000FAC                     
  3490                           ;A6Lib.c: 51: return 0;
  3491  000FAC  0E00               	movlw	0
  3492  000FAE                     l538:
  3493  000FAE  0012               	return		;funcret
  3494  000FB0                     __end_of_A6_SpeedSet:
  3495                           	opt callstack 0
  3496                           
  3497 ;; *************** function _init *****************
  3498 ;; Defined at:
  3499 ;;		line 15 in file "init.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3515 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3516 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3517 ;;Total ram usage:        2 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    2
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text3
  3528  0016C6                     __ptext3:
  3529                           	opt callstack 0
  3530  0016C6                     _init:
  3531                           	opt callstack 28
  3532  0016C6                     
  3533                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  3534  0016C6  9ED3               	bcf	211,7,c	;volatile
  3535  0016C8                     
  3536                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  3537  0016C8  0E70               	movlw	112
  3538  0016CA  12D3               	iorwf	211,f,c	;volatile
  3539                           
  3540                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  3541  0016CC  0EFC               	movlw	-4
  3542  0016CE  16D3               	andwf	211,f,c	;volatile
  3543  0016D0                     
  3544                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  3545  0016D0  8E9B               	bsf	155,7,c	;volatile
  3546                           
  3547                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  3548  0016D2  0EE0               	movlw	-32
  3549  0016D4  169B               	andwf	155,f,c	;volatile
  3550  0016D6                     
  3551                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  3552  0016D6  0E07               	movlw	7
  3553  0016D8  6E06               	movwf	(??_init+1)^0,c
  3554  0016DA  0E17               	movlw	23
  3555  0016DC  6E05               	movwf	??_init^0,c
  3556  0016DE  0E6A               	movlw	106
  3557  0016E0                     u3757:
  3558  0016E0  2EE8               	decfsz	wreg,f,c
  3559  0016E2  D7FE               	bra	u3757
  3560  0016E4  2E05               	decfsz	??_init^0,f,c
  3561  0016E6  D7FC               	bra	u3757
  3562  0016E8  2E06               	decfsz	(??_init+1)^0,f,c
  3563  0016EA  D7FA               	bra	u3757
  3564  0016EC  D000               	nop2	
  3565  0016EE                     
  3566                           ;init.c: 27: UCONbits.USBEN = 0;
  3567  0016EE  966D               	bcf	109,3,c	;volatile
  3568  0016F0                     
  3569                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  3570  0016F0  866F               	bsf	111,3,c	;volatile
  3571  0016F2                     
  3572                           ;init.c: 41: TRISA = 0b00001011;
  3573  0016F2  0E0B               	movlw	11
  3574  0016F4  6E92               	movwf	146,c	;volatile
  3575  0016F6                     
  3576                           ;init.c: 42: LATA = 0x00;
  3577  0016F6  0E00               	movlw	0
  3578  0016F8  6E89               	movwf	137,c	;volatile
  3579  0016FA                     
  3580                           ;init.c: 48: RBPU = 1;
  3581  0016FA  8EF1               	bsf	4081,7,c	;volatile
  3582  0016FC                     
  3583                           ;init.c: 49: TRISB = 0x00;
  3584  0016FC  0E00               	movlw	0
  3585  0016FE  6E93               	movwf	147,c	;volatile
  3586  001700                     
  3587                           ;init.c: 50: LATB = 0x00;
  3588  001700  0E00               	movlw	0
  3589  001702  6E8A               	movwf	138,c	;volatile
  3590  001704                     
  3591                           ;init.c: 63: TRISC = 0b11110000;
  3592  001704  0EF0               	movlw	240
  3593  001706  6E94               	movwf	148,c	;volatile
  3594  001708                     
  3595                           ;init.c: 64: LATC = 0x00;
  3596  001708  0E00               	movlw	0
  3597  00170A  6E8B               	movwf	139,c	;volatile
  3598  00170C                     
  3599                           ;init.c: 67: ADCON0bits.ADON = 0;
  3600  00170C  90C2               	bcf	194,0,c	;volatile
  3601  00170E                     
  3602                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  3603  00170E  0ECF               	movlw	-49
  3604  001710  16C1               	andwf	193,f,c	;volatile
  3605  001712                     
  3606                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  3607  001712  50C1               	movf	193,w,c	;volatile
  3608  001714  0BF0               	andlw	-16
  3609  001716  090E               	iorlw	14
  3610  001718  6EC1               	movwf	193,c	;volatile
  3611  00171A                     
  3612                           ;init.c: 70: ADCON2bits.ADFM = 1;
  3613  00171A  8EC0               	bsf	192,7,c	;volatile
  3614  00171C                     
  3615                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  3616  00171C  0EC7               	movlw	-57
  3617  00171E  16C0               	andwf	192,f,c	;volatile
  3618  001720                     
  3619                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  3620  001720  50C0               	movf	192,w,c	;volatile
  3621  001722  0BF8               	andlw	-8
  3622  001724  0902               	iorlw	2
  3623  001726  6EC0               	movwf	192,c	;volatile
  3624  001728                     
  3625                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  3626  001728  0ECF               	movlw	-49
  3627  00172A  16B1               	andwf	177,f,c	;volatile
  3628  00172C                     
  3629                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  3630  00172C  92B1               	bcf	177,1,c	;volatile
  3631  00172E                     
  3632                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  3633  00172E  80B1               	bsf	177,0,c	;volatile
  3634  001730                     
  3635                           ;init.c: 78: TMR3IE = 1;
  3636  001730  82A0               	bsf	4000,1,c	;volatile
  3637  001732                     
  3638                           ;init.c: 81: PEIE = 1;
  3639  001732  8CF2               	bsf	4082,6,c	;volatile
  3640  001734                     
  3641                           ;init.c: 82: GIE = 1;
  3642  001734  8EF2               	bsf	4082,7,c	;volatile
  3643  001736  0012               	return		;funcret
  3644  001738                     __end_of_init:
  3645                           	opt callstack 0
  3646                           
  3647 ;; *************** function _TFT_Init *****************
  3648 ;; Defined at:
  3649 ;;		line 72 in file "TFT.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;		None
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  i               2   37[COMRAM] unsigned int 
  3654 ;;  cmd             2   35[COMRAM] unsigned int 
  3655 ;;  initSequence    2   33[COMRAM] unsigned int 
  3656 ;;  data            2   31[COMRAM] unsigned int 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  1    wreg      void 
  3659 ;; Registers used:
  3660 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 0/0
  3663 ;;		On exit  : 0/0
  3664 ;;		Unchanged: 0/0
  3665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3666 ;;      Params:         0       0       0       0       0       0       0       0       0
  3667 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3668 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3669 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3670 ;;Total ram usage:       10 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    5
  3673 ;; This function calls:
  3674 ;;		_TFT_FillScreen
  3675 ;;		_TFT_FullScreen
  3676 ;;		_TFT_Reset
  3677 ;;		_TFT_WriteRegister
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text4
  3684  000FB0                     __ptext4:
  3685                           	opt callstack 0
  3686  000FB0                     _TFT_Init:
  3687                           	opt callstack 25
  3688  000FB0                     
  3689                           ;TFT.c: 73: TFT_Reset();
  3690  000FB0  EC5E  F00E         	call	_TFT_Reset	;wreg free
  3691  000FB4                     
  3692                           ;TFT.c: 74: _delay((unsigned long)((200)*(48000000/4000.0)));
  3693  000FB4  0E0D               	movlw	13
  3694  000FB6  6E1F               	movwf	(??_TFT_Init+1)^0,c
  3695  000FB8  0E2D               	movlw	45
  3696  000FBA  6E1E               	movwf	??_TFT_Init^0,c
  3697  000FBC  0ED8               	movlw	216
  3698  000FBE                     u3767:
  3699  000FBE  2EE8               	decfsz	wreg,f,c
  3700  000FC0  D7FE               	bra	u3767
  3701  000FC2  2E1E               	decfsz	??_TFT_Init^0,f,c
  3702  000FC4  D7FC               	bra	u3767
  3703  000FC6  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  3704  000FC8  D7FA               	bra	u3767
  3705  000FCA                     
  3706                           ;TFT.c: 77: uint16_t i=0, cmd, data;
  3707  000FCA  0E00               	movlw	0
  3708  000FCC  6E27               	movwf	(TFT_Init@i+1)^0,c
  3709  000FCE  0E00               	movlw	0
  3710  000FD0  6E26               	movwf	TFT_Init@i^0,c
  3711  000FD2                     
  3712                           ;TFT.c: 78: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  3713  000FD2  0E00               	movlw	0
  3714  000FD4  6E23               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  3715  000FD6  0E66               	movlw	102
  3716  000FD8  6E22               	movwf	TFT_Init@initSequenceSize^0,c
  3717                           
  3718                           ;TFT.c: 79: while(i != initSequenceSize) {
  3719  000FDA  EF32  F008         	goto	l4402
  3720  000FDE                     l4390:
  3721                           
  3722                           ;TFT.c: 80: cmd = TFT_Init_Sequence[i++];
  3723  000FDE  90D8               	bcf	status,0,c
  3724  000FE0  3426               	rlcf	TFT_Init@i^0,w,c
  3725  000FE2  6EF6               	movwf	tblptrl,c
  3726  000FE4  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  3727  000FE6  6EF7               	movwf	tblptrh,c
  3728  000FE8  0E0F               	movlw	low _TFT_Init_Sequence
  3729  000FEA  26F6               	addwf	tblptrl,f,c
  3730  000FEC  0E5E               	movlw	high _TFT_Init_Sequence
  3731  000FEE  22F7               	addwfc	tblptrh,f,c
  3732  000FF0                     	if	0	;There are less than 3 active tblptr bytes
  3733  000FF0                     	endif
  3734  000FF0  0009               	tblrd		*+
  3735  000FF2  CFF5 F024          	movff	tablat,TFT_Init@cmd
  3736  000FF6  000A               	tblrd		*-
  3737  000FF8  CFF5 F025          	movff	tablat,TFT_Init@cmd+1
  3738  000FFC  4A26               	infsnz	TFT_Init@i^0,f,c
  3739  000FFE  2A27               	incf	(TFT_Init@i+1)^0,f,c
  3740  001000                     
  3741                           ;TFT.c: 81: data = TFT_Init_Sequence[i++];
  3742  001000  90D8               	bcf	status,0,c
  3743  001002  3426               	rlcf	TFT_Init@i^0,w,c
  3744  001004  6EF6               	movwf	tblptrl,c
  3745  001006  3427               	rlcf	(TFT_Init@i+1)^0,w,c
  3746  001008  6EF7               	movwf	tblptrh,c
  3747  00100A  0E0F               	movlw	low _TFT_Init_Sequence
  3748  00100C  26F6               	addwf	tblptrl,f,c
  3749  00100E  0E5E               	movlw	high _TFT_Init_Sequence
  3750  001010  22F7               	addwfc	tblptrh,f,c
  3751  001012                     	if	0	;There are less than 3 active tblptr bytes
  3752  001012                     	endif
  3753  001012  0009               	tblrd		*+
  3754  001014  CFF5 F020          	movff	tablat,TFT_Init@data
  3755  001018  000A               	tblrd		*-
  3756  00101A  CFF5 F021          	movff	tablat,TFT_Init@data+1
  3757  00101E  4A26               	infsnz	TFT_Init@i^0,f,c
  3758  001020  2A27               	incf	(TFT_Init@i+1)^0,f,c
  3759  001022                     
  3760                           ;TFT.c: 82: if(cmd == 0xFFFF) {
  3761  001022  2824               	incf	TFT_Init@cmd^0,w,c
  3762  001024  E106               	bnz	u3371
  3763  001026  2825               	incf	(TFT_Init@cmd+1)^0,w,c
  3764  001028  A4D8               	btfss	status,2,c
  3765  00102A  EF19  F008         	goto	u3371
  3766  00102E  EF1B  F008         	goto	u3370
  3767  001032                     u3371:
  3768  001032  EF28  F008         	goto	l4400
  3769  001036                     u3370:
  3770  001036                     
  3771                           ;TFT.c: 83: _delay((unsigned long)((200)*(48000000/4000.0)));
  3772  001036  0E0D               	movlw	13
  3773  001038  6E1F               	movwf	(??_TFT_Init+1)^0,c
  3774  00103A  0E2D               	movlw	45
  3775  00103C  6E1E               	movwf	??_TFT_Init^0,c
  3776  00103E  0ED8               	movlw	216
  3777  001040                     u3777:
  3778  001040  2EE8               	decfsz	wreg,f,c
  3779  001042  D7FE               	bra	u3777
  3780  001044  2E1E               	decfsz	??_TFT_Init^0,f,c
  3781  001046  D7FC               	bra	u3777
  3782  001048  2E1F               	decfsz	(??_TFT_Init+1)^0,f,c
  3783  00104A  D7FA               	bra	u3777
  3784                           
  3785                           ;TFT.c: 84: } else {
  3786  00104C  EF32  F008         	goto	l4402
  3787  001050                     l4400:
  3788                           
  3789                           ;TFT.c: 85: TFT_WriteRegister(cmd, data);
  3790  001050  C024  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  3791  001054  C025  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  3792  001058  C020  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  3793  00105C  C021  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  3794  001060  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  3795  001064                     l4402:
  3796  001064  5022               	movf	TFT_Init@initSequenceSize^0,w,c
  3797  001066  1826               	xorwf	TFT_Init@i^0,w,c
  3798  001068  E107               	bnz	u3381
  3799  00106A  5023               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  3800  00106C  1827               	xorwf	(TFT_Init@i+1)^0,w,c
  3801  00106E  A4D8               	btfss	status,2,c
  3802  001070  EF3C  F008         	goto	u3381
  3803  001074  EF3E  F008         	goto	u3380
  3804  001078                     u3381:
  3805  001078  EFEF  F007         	goto	l4390
  3806  00107C                     u3380:
  3807  00107C                     
  3808                           ;TFT.c: 86: };TFT.c: 87: };TFT.c: 90: TFT_FullScreen();
  3809  00107C  EC3B  F00E         	call	_TFT_FullScreen	;wreg free
  3810  001080                     
  3811                           ;TFT.c: 91: TFT_FillScreen(0x0000);
  3812  001080  0E00               	movlw	0
  3813  001082  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  3814  001084  0E00               	movlw	0
  3815  001086  6E1C               	movwf	TFT_FillScreen@color^0,c
  3816  001088  ECE1  F00C         	call	_TFT_FillScreen	;wreg free
  3817  00108C  0012               	return		;funcret
  3818  00108E                     __end_of_TFT_Init:
  3819                           	opt callstack 0
  3820                           
  3821 ;; *************** function _TFT_Reset *****************
  3822 ;; Defined at:
  3823 ;;		line 46 in file "TFT.c"
  3824 ;; Parameters:    Size  Location     Type
  3825 ;;		None
  3826 ;; Auto vars:     Size  Location     Type
  3827 ;;		None
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      void 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0
  3838 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3839 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3840 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3841 ;;Total ram usage:        1 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; Hardware stack levels required when called:    2
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_TFT_Init
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text5
  3852  001CBC                     __ptext5:
  3853                           	opt callstack 0
  3854  001CBC                     _TFT_Reset:
  3855                           	opt callstack 27
  3856  001CBC                     
  3857                           ;TFT.c: 47: TRISB = 0x00;;
  3858  001CBC  0E00               	movlw	0
  3859  001CBE  6E93               	movwf	147,c	;volatile
  3860  001CC0                     
  3861                           ;TFT.c: 48: PORTCbits.RC0 = 1;;
  3862  001CC0  8082               	bsf	130,0,c	;volatile
  3863  001CC2                     
  3864                           ;TFT.c: 49: PORTAbits.RA5 = 1;;
  3865  001CC2  8A80               	bsf	128,5,c	;volatile
  3866  001CC4                     
  3867                           ;TFT.c: 50: PORTAbits.RA4 = 1;;
  3868  001CC4  8880               	bsf	128,4,c	;volatile
  3869  001CC6                     
  3870                           ;TFT.c: 51: PORTCbits.RC2 = 0;;
  3871  001CC6  9482               	bcf	130,2,c	;volatile
  3872  001CC8                     
  3873                           ;TFT.c: 52: _delay((unsigned long)((2)*(48000000/4000.0)));
  3874  001CC8  0E20               	movlw	32
  3875  001CCA  6E05               	movwf	??_TFT_Reset^0,c
  3876  001CCC  0E2A               	movlw	42
  3877  001CCE                     u3787:
  3878  001CCE  2EE8               	decfsz	wreg,f,c
  3879  001CD0  D7FE               	bra	u3787
  3880  001CD2  2E05               	decfsz	??_TFT_Reset^0,f,c
  3881  001CD4  D7FC               	bra	u3787
  3882  001CD6                     
  3883                           ;TFT.c: 53: PORTCbits.RC2 = 1;;
  3884  001CD6  8482               	bsf	130,2,c	;volatile
  3885  001CD8  0012               	return		;funcret
  3886  001CDA                     __end_of_TFT_Reset:
  3887                           	opt callstack 0
  3888                           
  3889 ;; *************** function _Ecg_Init *****************
  3890 ;; Defined at:
  3891 ;;		line 12 in file "ecg.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;		None
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3905 ;;      Params:         0       0       0       0       0       0       0       0       0
  3906 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3907 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3908 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3909 ;;Total ram usage:        0 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    9
  3912 ;; This function calls:
  3913 ;;		_Ecg_Background_Leads_Failure
  3914 ;;		_Ecg_Background_Leads_Ok
  3915 ;;		_Ecg_CheckLeads
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text6
  3922  001C20                     __ptext6:
  3923                           	opt callstack 0
  3924  001C20                     _Ecg_Init:
  3925                           	opt callstack 21
  3926  001C20                     
  3927                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  3928  001C20  EC93  F00C         	call	_Ecg_CheckLeads	;wreg free
  3929  001C24  5005               	movf	?_Ecg_CheckLeads^0,w,c
  3930  001C26  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  3931  001C28  A4D8               	btfss	status,2,c
  3932  001C2A  EF19  F00E         	goto	u3391
  3933  001C2E  EF1B  F00E         	goto	u3390
  3934  001C32                     u3391:
  3935  001C32  EF1F  F00E         	goto	l4422
  3936  001C36                     u3390:
  3937  001C36                     
  3938                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  3939  001C36  ECB1  F00A         	call	_Ecg_Background_Leads_Ok	;wreg free
  3940                           
  3941                           ;ecg.c: 15: } else {
  3942  001C3A  EF21  F00E         	goto	l4424
  3943  001C3E                     l4422:
  3944                           
  3945                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  3946  001C3E  EC86  F00D         	call	_Ecg_Background_Leads_Failure	;wreg free
  3947  001C42                     l4424:
  3948                           
  3949                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  3950  001C42  0E00               	movlw	0
  3951  001C44  0100               	movlb	0	; () banked
  3952  001C46  6FA4               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  3953  001C48                     
  3954                           ; BSR set to: 0
  3955                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  3956  001C48  0E00               	movlw	0
  3957  001C4A  6FA9               	movwf	(_ECG_BUFFER+4)& (0+255),b
  3958  001C4C                     
  3959                           ; BSR set to: 0
  3960                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  3961  001C4C  8C4E               	bsf	_ECG_HEARTRATE^0,6,c
  3962  001C4E                     
  3963                           ; BSR set to: 0
  3964  001C4E  0012               	return		;funcret
  3965  001C50                     __end_of_Ecg_Init:
  3966                           	opt callstack 0
  3967                           
  3968 ;; *************** function _Ecg_CheckLeads *****************
  3969 ;; Defined at:
  3970 ;;		line 141 in file "ecg.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  2    4[COMRAM] unsigned int 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3984 ;;      Params:         2       0       0       0       0       0       0       0       0
  3985 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3986 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3987 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3988 ;;Total ram usage:        4 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    2
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_Ecg_Init
  3995 ;;		_Ecg_ProcessEcg
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text7
  4000  001926                     __ptext7:
  4001                           	opt callstack 0
  4002  001926                     _Ecg_CheckLeads:
  4003                           	opt callstack 27
  4004  001926                     
  4005                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  4006  001926  0E00               	movlw	0
  4007  001928  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  4008  00192A                     
  4009                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  4010  00192A  AA82               	btfss	130,5,c	;volatile
  4011  00192C  EF9A  F00C         	goto	u2121
  4012  001930  EF9C  F00C         	goto	u2120
  4013  001934                     u2121:
  4014  001934  EF9D  F00C         	goto	l3260
  4015  001938                     u2120:
  4016  001938  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  4017  00193A                     l3260:
  4018                           
  4019                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  4020  00193A  A882               	btfss	130,4,c	;volatile
  4021  00193C  EFA2  F00C         	goto	u2131
  4022  001940  EFA4  F00C         	goto	u2130
  4023  001944                     u2131:
  4024  001944  EFA5  F00C         	goto	l3264
  4025  001948                     u2130:
  4026  001948  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  4027  00194A                     l3264:
  4028                           
  4029                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  4030  00194A  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  4031  00194C  B4D8               	btfsc	status,2,c
  4032  00194E  EFAB  F00C         	goto	u2141
  4033  001952  EFAF  F00C         	goto	u2140
  4034  001956                     u2141:
  4035  001956  6A07               	clrf	??_Ecg_CheckLeads^0,c
  4036  001958  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  4037  00195A  EFB0  F00C         	goto	u2158
  4038  00195E                     u2140:
  4039  00195E  6A07               	clrf	??_Ecg_CheckLeads^0,c
  4040  001960                     u2158:
  4041  001960  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  4042  001962  5052               	movf	_ECG_FLAGS^0,w,c
  4043  001964  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  4044  001966  0BFD               	andlw	-3
  4045  001968  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  4046  00196A  6E52               	movwf	_ECG_FLAGS^0,c
  4047  00196C                     
  4048                           ;ecg.c: 146: return leadsStatus;
  4049  00196C  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  4050  001970  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  4051  001972  0012               	return		;funcret
  4052  001974                     __end_of_Ecg_CheckLeads:
  4053                           	opt callstack 0
  4054                           
  4055 ;; *************** function _Ecg_Background_Leads_Ok *****************
  4056 ;; Defined at:
  4057 ;;		line 180 in file "ecg.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;		None
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;		None
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4071 ;;      Params:         0       0       0       0       0       0       0       0       0
  4072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4074 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4075 ;;Total ram usage:        0 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    8
  4078 ;; This function calls:
  4079 ;;		_TFT_DrawLine
  4080 ;;		_TFT_DrawString
  4081 ;;		_TFT_FillScreen
  4082 ;; This function is called by:
  4083 ;;		_Ecg_Init
  4084 ;;		_Ecg_ProcessEcg
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text8
  4089  001562                     __ptext8:
  4090                           	opt callstack 0
  4091  001562                     _Ecg_Background_Leads_Ok:
  4092                           	opt callstack 21
  4093  001562                     
  4094                           ;ecg.c: 181: TFT_FillScreen(0x0000);
  4095  001562  0E00               	movlw	0
  4096  001564  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  4097  001566  0E00               	movlw	0
  4098  001568  6E1C               	movwf	TFT_FillScreen@color^0,c
  4099  00156A  ECE1  F00C         	call	_TFT_FillScreen	;wreg free
  4100  00156E                     
  4101                           ;ecg.c: 182: TFT_DrawString(8, (400 - 10), "Frequenza:", 0xFFFF, 0x0000, 2);
  4102  00156E  0E00               	movlw	0
  4103  001570  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  4104  001572  0E08               	movlw	8
  4105  001574  6E3F               	movwf	TFT_DrawString@x^0,c
  4106  001576  0E01               	movlw	1
  4107  001578  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  4108  00157A  0E86               	movlw	134
  4109  00157C  6E41               	movwf	TFT_DrawString@y^0,c
  4110  00157E  0EC4               	movlw	low STR_14
  4111  001580  6E43               	movwf	TFT_DrawString@str^0,c
  4112  001582  0E5F               	movlw	high STR_14
  4113  001584  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  4114  001586  0EFF               	movlw	255
  4115  001588  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  4116  00158A  6845               	setf	TFT_DrawString@color^0,c
  4117  00158C  0E00               	movlw	0
  4118  00158E  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  4119  001590  0E00               	movlw	0
  4120  001592  6E47               	movwf	TFT_DrawString@bg^0,c
  4121  001594  0E02               	movlw	2
  4122  001596  6E49               	movwf	TFT_DrawString@size^0,c
  4123  001598  ECA6  F009         	call	_TFT_DrawString	;wreg free
  4124  00159C                     
  4125                           ;ecg.c: 183: TFT_DrawLine((33 - 1), 0, (33 - 1), 400, 0xFFFF);
  4126  00159C  0E00               	movlw	0
  4127  00159E  6E14               	movwf	(TFT_DrawLine@x0+1)^0,c
  4128  0015A0  0E20               	movlw	32
  4129  0015A2  6E13               	movwf	TFT_DrawLine@x0^0,c
  4130  0015A4  0E00               	movlw	0
  4131  0015A6  6E16               	movwf	(TFT_DrawLine@y0+1)^0,c
  4132  0015A8  0E00               	movlw	0
  4133  0015AA  6E15               	movwf	TFT_DrawLine@y0^0,c
  4134  0015AC  0E00               	movlw	0
  4135  0015AE  6E18               	movwf	(TFT_DrawLine@x1+1)^0,c
  4136  0015B0  0E20               	movlw	32
  4137  0015B2  6E17               	movwf	TFT_DrawLine@x1^0,c
  4138  0015B4  0E01               	movlw	1
  4139  0015B6  6E1A               	movwf	(TFT_DrawLine@y1+1)^0,c
  4140  0015B8  0E90               	movlw	144
  4141  0015BA  6E19               	movwf	TFT_DrawLine@y1^0,c
  4142  0015BC  0EFF               	movlw	255
  4143  0015BE  6E1C               	movwf	(TFT_DrawLine@color+1)^0,c
  4144  0015C0  681B               	setf	TFT_DrawLine@color^0,c
  4145  0015C2  ECC3  F004         	call	_TFT_DrawLine	;wreg free
  4146  0015C6                     
  4147                           ;ecg.c: 184: Ecg_Y = 400 - 1;
  4148  0015C6  0E01               	movlw	1
  4149  0015C8  6E55               	movwf	(_Ecg_Y+1)^0,c
  4150  0015CA  0E8F               	movlw	143
  4151  0015CC  6E54               	movwf	_Ecg_Y^0,c
  4152  0015CE                     
  4153                           ;ecg.c: 185: Ecg_Yold = 400 - 1;
  4154  0015CE  0E01               	movlw	1
  4155  0015D0  0100               	movlb	0	; () banked
  4156  0015D2  6FBB               	movwf	(_Ecg_Yold+1)& (0+255),b
  4157  0015D4  0E8F               	movlw	143
  4158  0015D6  6FBA               	movwf	_Ecg_Yold& (0+255),b
  4159  0015D8                     
  4160                           ; BSR set to: 0
  4161  0015D8  0012               	return		;funcret
  4162  0015DA                     __end_of_Ecg_Background_Leads_Ok:
  4163                           	opt callstack 0
  4164                           
  4165 ;; *************** function _TFT_DrawLine *****************
  4166 ;; Defined at:
  4167 ;;		line 100 in file "TFT.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  x0              2   18[COMRAM] int 
  4170 ;;  y0              2   20[COMRAM] int 
  4171 ;;  x1              2   22[COMRAM] int 
  4172 ;;  y1              2   24[COMRAM] int 
  4173 ;;  color           2   26[COMRAM] unsigned int 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  t               2   37[COMRAM] int 
  4176 ;;  t               2   35[COMRAM] int 
  4177 ;;  t               2   33[COMRAM] int 
  4178 ;;  t               2   31[COMRAM] int 
  4179 ;;  dx              2   47[COMRAM] int 
  4180 ;;  steep           2   45[COMRAM] int 
  4181 ;;  err             2   43[COMRAM] int 
  4182 ;;  ystep           2   41[COMRAM] int 
  4183 ;;  dy              2   39[COMRAM] int 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4193 ;;      Params:        10       0       0       0       0       0       0       0       0
  4194 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4195 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4196 ;;      Totals:        31       0       0       0       0       0       0       0       0
  4197 ;;Total ram usage:       31 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    4
  4200 ;; This function calls:
  4201 ;;		_TFT_DrawPixel
  4202 ;;		___awdiv
  4203 ;;		_abs
  4204 ;; This function is called by:
  4205 ;;		_Ecg_Background_Leads_Ok
  4206 ;;		_Ecg_Draw
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text9
  4211  000986                     __ptext9:
  4212                           	opt callstack 0
  4213  000986                     _TFT_DrawLine:
  4214                           	opt callstack 24
  4215  000986                     
  4216                           ;TFT.c: 101: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  4217  000986  5013               	movf	TFT_DrawLine@x0^0,w,c
  4218  000988  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  4219  00098A  6E05               	movwf	abs@a^0,c
  4220  00098C  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  4221  00098E  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  4222  000990  6E06               	movwf	(abs@a+1)^0,c
  4223  000992  ECDD  F00D         	call	_abs	;wreg free
  4224  000996  C005  F01D         	movff	?_abs,??_TFT_DrawLine
  4225  00099A  C006  F01E         	movff	?_abs+1,??_TFT_DrawLine+1
  4226  00099E  5015               	movf	TFT_DrawLine@y0^0,w,c
  4227  0009A0  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  4228  0009A2  6E05               	movwf	abs@a^0,c
  4229  0009A4  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  4230  0009A6  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  4231  0009A8  6E06               	movwf	(abs@a+1)^0,c
  4232  0009AA  ECDD  F00D         	call	_abs	;wreg free
  4233  0009AE  5005               	movf	?_abs^0,w,c
  4234  0009B0  5C1D               	subwf	??_TFT_DrawLine^0,w,c
  4235  0009B2  501E               	movf	(??_TFT_DrawLine+1)^0,w,c
  4236  0009B4  0A80               	xorlw	128
  4237  0009B6  6E1F               	movwf	(??_TFT_DrawLine+2)^0,c
  4238  0009B8  5006               	movf	(?_abs+1)^0,w,c
  4239  0009BA  0A80               	xorlw	128
  4240  0009BC  581F               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  4241  0009BE  A0D8               	btfss	status,0,c
  4242  0009C0  EFE4  F004         	goto	u3061
  4243  0009C4  EFE7  F004         	goto	u3060
  4244  0009C8                     u3061:
  4245  0009C8  0E01               	movlw	1
  4246  0009CA  EFE8  F004         	goto	u3070
  4247  0009CE                     u3060:
  4248  0009CE  0E00               	movlw	0
  4249  0009D0                     u3070:
  4250  0009D0  6E2E               	movwf	TFT_DrawLine@steep^0,c
  4251  0009D2  6A2F               	clrf	(TFT_DrawLine@steep+1)^0,c
  4252  0009D4                     
  4253                           ;TFT.c: 102: if(steep) {
  4254  0009D4  502E               	movf	TFT_DrawLine@steep^0,w,c
  4255  0009D6  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  4256  0009D8  B4D8               	btfsc	status,2,c
  4257  0009DA  EFF1  F004         	goto	u3081
  4258  0009DE  EFF3  F004         	goto	u3080
  4259  0009E2                     u3081:
  4260  0009E2  EF0B  F005         	goto	l4166
  4261  0009E6                     u3080:
  4262  0009E6                     
  4263                           ;TFT.c: 103: { int16_t t = x0; x0 = y0; y0 = t; };
  4264  0009E6  C013  F020         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  4265  0009EA  C014  F021         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  4266  0009EE  C015  F013         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  4267  0009F2  C016  F014         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  4268  0009F6  C020  F015         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  4269  0009FA  C021  F016         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  4270                           
  4271                           ;TFT.c: 104: { int16_t t = x1; x1 = y1; y1 = t; };
  4272  0009FE  C017  F022         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_757
  4273  000A02  C018  F023         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_757+1
  4274  000A06  C019  F017         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  4275  000A0A  C01A  F018         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  4276  000A0E  C022  F019         	movff	TFT_DrawLine@t_757,TFT_DrawLine@y1
  4277  000A12  C023  F01A         	movff	TFT_DrawLine@t_757+1,TFT_DrawLine@y1+1
  4278  000A16                     l4166:
  4279                           
  4280                           ;TFT.c: 105: };TFT.c: 106: if(x0 > x1) {
  4281  000A16  5013               	movf	TFT_DrawLine@x0^0,w,c
  4282  000A18  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  4283  000A1A  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  4284  000A1C  0A80               	xorlw	128
  4285  000A1E  6E1D               	movwf	??_TFT_DrawLine^0,c
  4286  000A20  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  4287  000A22  0A80               	xorlw	128
  4288  000A24  581D               	subwfb	??_TFT_DrawLine^0,w,c
  4289  000A26  B0D8               	btfsc	status,0,c
  4290  000A28  EF18  F005         	goto	u3091
  4291  000A2C  EF1A  F005         	goto	u3090
  4292  000A30                     u3091:
  4293  000A30  EF32  F005         	goto	l4170
  4294  000A34                     u3090:
  4295  000A34                     
  4296                           ;TFT.c: 107: { int16_t t = x0; x0 = x1; x1 = t; };
  4297  000A34  C013  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_758
  4298  000A38  C014  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_758+1
  4299  000A3C  C017  F013         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  4300  000A40  C018  F014         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  4301  000A44  C024  F017         	movff	TFT_DrawLine@t_758,TFT_DrawLine@x1
  4302  000A48  C025  F018         	movff	TFT_DrawLine@t_758+1,TFT_DrawLine@x1+1
  4303                           
  4304                           ;TFT.c: 108: { int16_t t = y0; y0 = y1; y1 = t; };
  4305  000A4C  C015  F026         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_759
  4306  000A50  C016  F027         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_759+1
  4307  000A54  C019  F015         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  4308  000A58  C01A  F016         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  4309  000A5C  C026  F019         	movff	TFT_DrawLine@t_759,TFT_DrawLine@y1
  4310  000A60  C027  F01A         	movff	TFT_DrawLine@t_759+1,TFT_DrawLine@y1+1
  4311  000A64                     l4170:
  4312                           
  4313                           ;TFT.c: 109: };TFT.c: 111: int16_t dx, dy;;TFT.c: 112: dx = x1 - x0;
  4314  000A64  5013               	movf	TFT_DrawLine@x0^0,w,c
  4315  000A66  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  4316  000A68  6E30               	movwf	TFT_DrawLine@dx^0,c
  4317  000A6A  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  4318  000A6C  5818               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  4319  000A6E  6E31               	movwf	(TFT_DrawLine@dx+1)^0,c
  4320  000A70                     
  4321                           ;TFT.c: 113: dy = abs(y1 - y0);
  4322  000A70  5015               	movf	TFT_DrawLine@y0^0,w,c
  4323  000A72  5C19               	subwf	TFT_DrawLine@y1^0,w,c
  4324  000A74  6E05               	movwf	abs@a^0,c
  4325  000A76  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  4326  000A78  581A               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  4327  000A7A  6E06               	movwf	(abs@a+1)^0,c
  4328  000A7C  ECDD  F00D         	call	_abs	;wreg free
  4329  000A80  C005  F028         	movff	?_abs,TFT_DrawLine@dy
  4330  000A84  C006  F029         	movff	?_abs+1,TFT_DrawLine@dy+1
  4331  000A88                     
  4332                           ;TFT.c: 115: int16_t err = dx / 2;
  4333  000A88  C030  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  4334  000A8C  C031  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  4335  000A90  0E00               	movlw	0
  4336  000A92  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4337  000A94  0E02               	movlw	2
  4338  000A96  6E07               	movwf	___awdiv@divisor^0,c
  4339  000A98  EC47  F008         	call	___awdiv	;wreg free
  4340  000A9C  C005  F02C         	movff	?___awdiv,TFT_DrawLine@err
  4341  000AA0  C006  F02D         	movff	?___awdiv+1,TFT_DrawLine@err+1
  4342                           
  4343                           ;TFT.c: 116: int16_t ystep;;TFT.c: 118: if(y0 < y1) {
  4344  000AA4  5019               	movf	TFT_DrawLine@y1^0,w,c
  4345  000AA6  5C15               	subwf	TFT_DrawLine@y0^0,w,c
  4346  000AA8  5016               	movf	(TFT_DrawLine@y0+1)^0,w,c
  4347  000AAA  0A80               	xorlw	128
  4348  000AAC  6E1D               	movwf	??_TFT_DrawLine^0,c
  4349  000AAE  501A               	movf	(TFT_DrawLine@y1+1)^0,w,c
  4350  000AB0  0A80               	xorlw	128
  4351  000AB2  581D               	subwfb	??_TFT_DrawLine^0,w,c
  4352  000AB4  B0D8               	btfsc	status,0,c
  4353  000AB6  EF5F  F005         	goto	u3101
  4354  000ABA  EF61  F005         	goto	u3100
  4355  000ABE                     u3101:
  4356  000ABE  EF67  F005         	goto	l227
  4357  000AC2                     u3100:
  4358  000AC2                     
  4359                           ;TFT.c: 119: ystep = 1;
  4360  000AC2  0E00               	movlw	0
  4361  000AC4  6E2B               	movwf	(TFT_DrawLine@ystep+1)^0,c
  4362  000AC6  0E01               	movlw	1
  4363  000AC8  6E2A               	movwf	TFT_DrawLine@ystep^0,c
  4364                           
  4365                           ;TFT.c: 120: } else {
  4366  000ACA  EFA7  F005         	goto	l4192
  4367  000ACE                     l227:
  4368                           
  4369                           ;TFT.c: 121: ystep = -1;
  4370  000ACE  682A               	setf	TFT_DrawLine@ystep^0,c
  4371  000AD0  682B               	setf	(TFT_DrawLine@ystep+1)^0,c
  4372  000AD2  EFA7  F005         	goto	l4192
  4373  000AD6                     l4178:
  4374                           
  4375                           ;TFT.c: 125: if(steep) {
  4376  000AD6  502E               	movf	TFT_DrawLine@steep^0,w,c
  4377  000AD8  102F               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  4378  000ADA  B4D8               	btfsc	status,2,c
  4379  000ADC  EF72  F005         	goto	u3111
  4380  000AE0  EF74  F005         	goto	u3110
  4381  000AE4                     u3111:
  4382  000AE4  EF84  F005         	goto	l4182
  4383  000AE8                     u3110:
  4384  000AE8                     
  4385                           ;TFT.c: 126: TFT_DrawPixel(y0, x0, color);
  4386  000AE8  C015  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  4387  000AEC  C016  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  4388  000AF0  C013  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  4389  000AF4  C014  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  4390  000AF8  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  4391  000AFC  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  4392  000B00  EC67  F00D         	call	_TFT_DrawPixel	;wreg free
  4393                           
  4394                           ;TFT.c: 127: } else {
  4395  000B04  EF92  F005         	goto	l4184
  4396  000B08                     l4182:
  4397                           
  4398                           ;TFT.c: 128: TFT_DrawPixel(x0, y0, color);
  4399  000B08  C013  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  4400  000B0C  C014  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  4401  000B10  C015  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  4402  000B14  C016  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  4403  000B18  C01B  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  4404  000B1C  C01C  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  4405  000B20  EC67  F00D         	call	_TFT_DrawPixel	;wreg free
  4406  000B24                     l4184:
  4407                           
  4408                           ;TFT.c: 129: };TFT.c: 130: err -= dy;
  4409  000B24  5028               	movf	TFT_DrawLine@dy^0,w,c
  4410  000B26  5E2C               	subwf	TFT_DrawLine@err^0,f,c
  4411  000B28  5029               	movf	(TFT_DrawLine@dy+1)^0,w,c
  4412  000B2A  5A2D               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  4413  000B2C                     
  4414                           ;TFT.c: 131: if(err < 0) {
  4415  000B2C  BE2D               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  4416  000B2E  EF9D  F005         	goto	u3120
  4417  000B32  EF9B  F005         	goto	u3121
  4418  000B36                     u3121:
  4419  000B36  EFA5  F005         	goto	l4190
  4420  000B3A                     u3120:
  4421  000B3A                     
  4422                           ;TFT.c: 132: y0 += ystep;
  4423  000B3A  502A               	movf	TFT_DrawLine@ystep^0,w,c
  4424  000B3C  2615               	addwf	TFT_DrawLine@y0^0,f,c
  4425  000B3E  502B               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  4426  000B40  2216               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  4427                           
  4428                           ;TFT.c: 133: err += dx;
  4429  000B42  5030               	movf	TFT_DrawLine@dx^0,w,c
  4430  000B44  262C               	addwf	TFT_DrawLine@err^0,f,c
  4431  000B46  5031               	movf	(TFT_DrawLine@dx+1)^0,w,c
  4432  000B48  222D               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  4433  000B4A                     l4190:
  4434  000B4A  4A13               	infsnz	TFT_DrawLine@x0^0,f,c
  4435  000B4C  2A14               	incf	(TFT_DrawLine@x0+1)^0,f,c
  4436  000B4E                     l4192:
  4437  000B4E  5013               	movf	TFT_DrawLine@x0^0,w,c
  4438  000B50  5C17               	subwf	TFT_DrawLine@x1^0,w,c
  4439  000B52  5018               	movf	(TFT_DrawLine@x1+1)^0,w,c
  4440  000B54  0A80               	xorlw	128
  4441  000B56  6E1D               	movwf	??_TFT_DrawLine^0,c
  4442  000B58  5014               	movf	(TFT_DrawLine@x0+1)^0,w,c
  4443  000B5A  0A80               	xorlw	128
  4444  000B5C  581D               	subwfb	??_TFT_DrawLine^0,w,c
  4445  000B5E  B0D8               	btfsc	status,0,c
  4446  000B60  EFB4  F005         	goto	u3131
  4447  000B64  EFB6  F005         	goto	u3130
  4448  000B68                     u3131:
  4449  000B68  EF6B  F005         	goto	l4178
  4450  000B6C                     u3130:
  4451  000B6C  0012               	return		;funcret
  4452  000B6E                     __end_of_TFT_DrawLine:
  4453                           	opt callstack 0
  4454                           
  4455 ;; *************** function _abs *****************
  4456 ;; Defined at:
  4457 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  a               2    4[COMRAM] int 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  2    4[COMRAM] int 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4471 ;;      Params:         2       0       0       0       0       0       0       0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4473 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4474 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4475 ;;Total ram usage:        4 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    2
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_TFT_DrawLine
  4482 ;;		_Ecg_ProcessHeartbeat
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           	psect	text10
  4487  001BBA                     __ptext10:
  4488                           	opt callstack 0
  4489  001BBA                     _abs:
  4490                           	opt callstack 25
  4491  001BBA  BE06               	btfsc	(abs@a+1)^0,7,c
  4492  001BBC  EFE4  F00D         	goto	u1610
  4493  001BC0  EFE2  F00D         	goto	u1611
  4494  001BC4                     u1611:
  4495  001BC4  EFF2  F00D         	goto	l1280
  4496  001BC8                     u1610:
  4497  001BC8  C005  F007         	movff	abs@a,??_abs
  4498  001BCC  C006  F008         	movff	abs@a+1,??_abs+1
  4499  001BD0  1E07               	comf	??_abs^0,f,c
  4500  001BD2  1E08               	comf	(??_abs+1)^0,f,c
  4501  001BD4  4A07               	infsnz	??_abs^0,f,c
  4502  001BD6  2A08               	incf	(??_abs+1)^0,f,c
  4503  001BD8  C007  F005         	movff	??_abs,?_abs
  4504  001BDC  C008  F006         	movff	??_abs+1,?_abs+1
  4505  001BE0  EFF6  F00D         	goto	l1281
  4506  001BE4                     l1280:
  4507  001BE4  C005  F005         	movff	abs@a,?_abs
  4508  001BE8  C006  F006         	movff	abs@a+1,?_abs+1
  4509  001BEC                     l1281:
  4510  001BEC  0012               	return		;funcret
  4511  001BEE                     __end_of_abs:
  4512                           	opt callstack 0
  4513                           
  4514 ;; *************** function ___awdiv *****************
  4515 ;; Defined at:
  4516 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  dividend        2    4[COMRAM] int 
  4519 ;;  divisor         2    6[COMRAM] int 
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  quotient        2   10[COMRAM] int 
  4522 ;;  sign            1    9[COMRAM] unsigned char 
  4523 ;;  counter         1    8[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  2    4[COMRAM] int 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4533 ;;      Params:         4       0       0       0       0       0       0       0       0
  4534 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4536 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4537 ;;Total ram usage:        8 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    2
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_TFT_DrawLine
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text11
  4548  00108E                     __ptext11:
  4549                           	opt callstack 0
  4550  00108E                     ___awdiv:
  4551                           	opt callstack 25
  4552  00108E  0E00               	movlw	0
  4553  001090  6E0A               	movwf	___awdiv@sign^0,c
  4554  001092  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  4555  001094  EF50  F008         	goto	u1690
  4556  001098  EF4E  F008         	goto	u1691
  4557  00109C                     u1691:
  4558  00109C  EF56  F008         	goto	l2964
  4559  0010A0                     u1690:
  4560  0010A0  6C07               	negf	___awdiv@divisor^0,c
  4561  0010A2  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  4562  0010A4  B0D8               	btfsc	status,0,c
  4563  0010A6  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  4564  0010A8  0E01               	movlw	1
  4565  0010AA  6E0A               	movwf	___awdiv@sign^0,c
  4566  0010AC                     l2964:
  4567  0010AC  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  4568  0010AE  EF5D  F008         	goto	u1700
  4569  0010B2  EF5B  F008         	goto	u1701
  4570  0010B6                     u1701:
  4571  0010B6  EF63  F008         	goto	l2970
  4572  0010BA                     u1700:
  4573  0010BA  6C05               	negf	___awdiv@dividend^0,c
  4574  0010BC  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  4575  0010BE  B0D8               	btfsc	status,0,c
  4576  0010C0  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  4577  0010C2  0E01               	movlw	1
  4578  0010C4  1A0A               	xorwf	___awdiv@sign^0,f,c
  4579  0010C6                     l2970:
  4580  0010C6  0E00               	movlw	0
  4581  0010C8  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  4582  0010CA  0E00               	movlw	0
  4583  0010CC  6E0B               	movwf	___awdiv@quotient^0,c
  4584  0010CE  5007               	movf	___awdiv@divisor^0,w,c
  4585  0010D0  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  4586  0010D2  B4D8               	btfsc	status,2,c
  4587  0010D4  EF6E  F008         	goto	u1711
  4588  0010D8  EF70  F008         	goto	u1710
  4589  0010DC                     u1711:
  4590  0010DC  EF98  F008         	goto	l2992
  4591  0010E0                     u1710:
  4592  0010E0  0E01               	movlw	1
  4593  0010E2  6E09               	movwf	___awdiv@counter^0,c
  4594  0010E4  EF78  F008         	goto	l2978
  4595  0010E8                     l2976:
  4596  0010E8  90D8               	bcf	status,0,c
  4597  0010EA  3607               	rlcf	___awdiv@divisor^0,f,c
  4598  0010EC  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  4599  0010EE  2A09               	incf	___awdiv@counter^0,f,c
  4600  0010F0                     l2978:
  4601  0010F0  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  4602  0010F2  EF7D  F008         	goto	u1721
  4603  0010F6  EF7F  F008         	goto	u1720
  4604  0010FA                     u1721:
  4605  0010FA  EF74  F008         	goto	l2976
  4606  0010FE                     u1720:
  4607  0010FE                     l2980:
  4608  0010FE  90D8               	bcf	status,0,c
  4609  001100  360B               	rlcf	___awdiv@quotient^0,f,c
  4610  001102  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  4611  001104  5007               	movf	___awdiv@divisor^0,w,c
  4612  001106  5C05               	subwf	___awdiv@dividend^0,w,c
  4613  001108  5008               	movf	(___awdiv@divisor+1)^0,w,c
  4614  00110A  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  4615  00110C  A0D8               	btfss	status,0,c
  4616  00110E  EF8B  F008         	goto	u1731
  4617  001112  EF8D  F008         	goto	u1730
  4618  001116                     u1731:
  4619  001116  EF92  F008         	goto	l2988
  4620  00111A                     u1730:
  4621  00111A  5007               	movf	___awdiv@divisor^0,w,c
  4622  00111C  5E05               	subwf	___awdiv@dividend^0,f,c
  4623  00111E  5008               	movf	(___awdiv@divisor+1)^0,w,c
  4624  001120  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  4625  001122  800B               	bsf	___awdiv@quotient^0,0,c
  4626  001124                     l2988:
  4627  001124  90D8               	bcf	status,0,c
  4628  001126  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  4629  001128  3207               	rrcf	___awdiv@divisor^0,f,c
  4630  00112A  2E09               	decfsz	___awdiv@counter^0,f,c
  4631  00112C  EF7F  F008         	goto	l2980
  4632  001130                     l2992:
  4633  001130  500A               	movf	___awdiv@sign^0,w,c
  4634  001132  B4D8               	btfsc	status,2,c
  4635  001134  EF9E  F008         	goto	u1741
  4636  001138  EFA0  F008         	goto	u1740
  4637  00113C                     u1741:
  4638  00113C  EFA4  F008         	goto	l2996
  4639  001140                     u1740:
  4640  001140  6C0B               	negf	___awdiv@quotient^0,c
  4641  001142  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  4642  001144  B0D8               	btfsc	status,0,c
  4643  001146  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  4644  001148                     l2996:
  4645  001148  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  4646  00114C  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  4647  001150  0012               	return		;funcret
  4648  001152                     __end_of___awdiv:
  4649                           	opt callstack 0
  4650                           
  4651 ;; *************** function _Ecg_Background_Leads_Failure *****************
  4652 ;; Defined at:
  4653 ;;		line 188 in file "ecg.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4670 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4671 ;;Total ram usage:        0 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    8
  4674 ;; This function calls:
  4675 ;;		_TFT_DrawString
  4676 ;;		_TFT_FillScreen
  4677 ;; This function is called by:
  4678 ;;		_Ecg_Init
  4679 ;;		_Ecg_ProcessEcg
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           	psect	text12
  4684  001B0C                     __ptext12:
  4685                           	opt callstack 0
  4686  001B0C                     _Ecg_Background_Leads_Failure:
  4687                           	opt callstack 21
  4688  001B0C                     
  4689                           ;ecg.c: 189: TFT_FillScreen(0x0000);
  4690  001B0C  0E00               	movlw	0
  4691  001B0E  6E1D               	movwf	(TFT_FillScreen@color+1)^0,c
  4692  001B10  0E00               	movlw	0
  4693  001B12  6E1C               	movwf	TFT_FillScreen@color^0,c
  4694  001B14  ECE1  F00C         	call	_TFT_FillScreen	;wreg free
  4695  001B18                     
  4696                           ;ecg.c: 190: TFT_DrawString(70, 362, "*** Collegare elettrodi ***", 0xFFFF, 0x0000, 2);
  4697  001B18  0E00               	movlw	0
  4698  001B1A  6E40               	movwf	(TFT_DrawString@x+1)^0,c
  4699  001B1C  0E46               	movlw	70
  4700  001B1E  6E3F               	movwf	TFT_DrawString@x^0,c
  4701  001B20  0E01               	movlw	1
  4702  001B22  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  4703  001B24  0E6A               	movlw	106
  4704  001B26  6E41               	movwf	TFT_DrawString@y^0,c
  4705  001B28  0E41               	movlw	low STR_15
  4706  001B2A  6E43               	movwf	TFT_DrawString@str^0,c
  4707  001B2C  0E5F               	movlw	high STR_15
  4708  001B2E  6E44               	movwf	(TFT_DrawString@str+1)^0,c
  4709  001B30  0EFF               	movlw	255
  4710  001B32  6E46               	movwf	(TFT_DrawString@color+1)^0,c
  4711  001B34  6845               	setf	TFT_DrawString@color^0,c
  4712  001B36  0E00               	movlw	0
  4713  001B38  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  4714  001B3A  0E00               	movlw	0
  4715  001B3C  6E47               	movwf	TFT_DrawString@bg^0,c
  4716  001B3E  0E02               	movlw	2
  4717  001B40  6E49               	movwf	TFT_DrawString@size^0,c
  4718  001B42  ECA6  F009         	call	_TFT_DrawString	;wreg free
  4719  001B46  0012               	return		;funcret
  4720  001B48                     __end_of_Ecg_Background_Leads_Failure:
  4721                           	opt callstack 0
  4722                           
  4723 ;; *************** function _TFT_FillScreen *****************
  4724 ;; Defined at:
  4725 ;;		line 182 in file "TFT.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  color           2   27[COMRAM] unsigned int 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4739 ;;      Params:         2       0       0       0       0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4742 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4743 ;;Total ram usage:        2 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    4
  4746 ;; This function calls:
  4747 ;;		_TFT_Flood
  4748 ;;		_TFT_WriteRegister
  4749 ;; This function is called by:
  4750 ;;		_TFT_Init
  4751 ;;		_Ecg_Background_Leads_Ok
  4752 ;;		_Ecg_Background_Leads_Failure
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           	psect	text13
  4757  0019C2                     __ptext13:
  4758                           	opt callstack 0
  4759  0019C2                     _TFT_FillScreen:
  4760                           	opt callstack 25
  4761  0019C2                     
  4762                           ;TFT.c: 183: TFT_WriteRegister(0x0200, 0);
  4763  0019C2  0E02               	movlw	2
  4764  0019C4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  4765  0019C6  0E00               	movlw	0
  4766  0019C8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  4767  0019CA  0E00               	movlw	0
  4768  0019CC  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  4769  0019CE  0E00               	movlw	0
  4770  0019D0  6E07               	movwf	TFT_WriteRegister@data^0,c
  4771  0019D2  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  4772                           
  4773                           ;TFT.c: 184: TFT_WriteRegister(0x0201, 0);
  4774  0019D6  0E02               	movlw	2
  4775  0019D8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  4776  0019DA  0E01               	movlw	1
  4777  0019DC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  4778  0019DE  0E00               	movlw	0
  4779  0019E0  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  4780  0019E2  0E00               	movlw	0
  4781  0019E4  6E07               	movwf	TFT_WriteRegister@data^0,c
  4782  0019E6  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  4783  0019EA                     
  4784                           ;TFT.c: 185: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  4785  0019EA  C01C  F00D         	movff	TFT_FillScreen@color,TFT_Flood@color
  4786  0019EE  C01D  F00E         	movff	TFT_FillScreen@color+1,TFT_Flood@color+1
  4787  0019F2  0E00               	movlw	0
  4788  0019F4  6E0F               	movwf	TFT_Flood@len^0,c
  4789  0019F6  0E77               	movlw	119
  4790  0019F8  6E10               	movwf	(TFT_Flood@len+1)^0,c
  4791  0019FA  0E01               	movlw	1
  4792  0019FC  6E11               	movwf	(TFT_Flood@len+2)^0,c
  4793  0019FE  0E00               	movlw	0
  4794  001A00  6E12               	movwf	(TFT_Flood@len+3)^0,c
  4795  001A02  ECB7  F005         	call	_TFT_Flood	;wreg free
  4796  001A06  0012               	return		;funcret
  4797  001A08                     __end_of_TFT_FillScreen:
  4798                           	opt callstack 0
  4799                           
  4800 ;; *************** function _EUSART_Init *****************
  4801 ;; Defined at:
  4802 ;;		line 12 in file "eusart.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;		None
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      void 
  4809 ;; Registers used:
  4810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4816 ;;      Params:         0       0       0       0       0       0       0       0       0
  4817 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4819 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4820 ;;Total ram usage:        0 bytes
  4821 ;; Hardware stack levels used:    1
  4822 ;; Hardware stack levels required when called:    3
  4823 ;; This function calls:
  4824 ;;		_memset
  4825 ;; This function is called by:
  4826 ;;		_main
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text14
  4831  0017A6                     __ptext14:
  4832                           	opt callstack 0
  4833  0017A6                     _EUSART_Init:
  4834                           	opt callstack 27
  4835  0017A6                     
  4836                           ;eusart.c: 14: TXSTAbits.TX9 = 0;
  4837  0017A6  9CAC               	bcf	172,6,c	;volatile
  4838                           
  4839                           ;eusart.c: 15: TXSTAbits.TXEN = 1;
  4840  0017A8  8AAC               	bsf	172,5,c	;volatile
  4841                           
  4842                           ;eusart.c: 16: TXSTAbits.SYNC = 0;
  4843  0017AA  98AC               	bcf	172,4,c	;volatile
  4844                           
  4845                           ;eusart.c: 17: TXSTAbits.SENDB = 0;
  4846  0017AC  96AC               	bcf	172,3,c	;volatile
  4847                           
  4848                           ;eusart.c: 18: TXSTAbits.BRGH = 1;
  4849  0017AE  84AC               	bsf	172,2,c	;volatile
  4850                           
  4851                           ;eusart.c: 21: RCSTAbits.SPEN = 1;
  4852  0017B0  8EAB               	bsf	171,7,c	;volatile
  4853                           
  4854                           ;eusart.c: 22: RCSTAbits.RX9 = 0;
  4855  0017B2  9CAB               	bcf	171,6,c	;volatile
  4856                           
  4857                           ;eusart.c: 23: RCSTAbits.CREN = 1;
  4858  0017B4  88AB               	bsf	171,4,c	;volatile
  4859                           
  4860                           ;eusart.c: 26: BAUDCONbits.BRG16 = 1;
  4861  0017B6  86B8               	bsf	184,3,c	;volatile
  4862                           
  4863                           ;eusart.c: 27: BAUDCONbits.WUE = 0;
  4864  0017B8  92B8               	bcf	184,1,c	;volatile
  4865                           
  4866                           ;eusart.c: 28: BAUDCONbits.ABDEN = 0;
  4867  0017BA  90B8               	bcf	184,0,c	;volatile
  4868  0017BC                     
  4869                           ;eusart.c: 29: SPBRGH = 0x04;
  4870  0017BC  0E04               	movlw	4
  4871  0017BE  6EB0               	movwf	176,c	;volatile
  4872                           
  4873                           ;eusart.c: 30: SPBRG = 0xE1;
  4874  0017C0  0EE1               	movlw	225
  4875  0017C2  6EAF               	movwf	175,c	;volatile
  4876  0017C4                     
  4877                           ;eusart.c: 33: RCIE = 1;
  4878  0017C4  8A9D               	bsf	3997,5,c	;volatile
  4879                           
  4880                           ;eusart.c: 36: EUSART_RX.iRead = 0;
  4881  0017C6  0E00               	movlw	0
  4882  0017C8  0101               	movlb	1	; () banked
  4883  0017CA  6F09               	movwf	(_EUSART_RX+1)& (0+255),b
  4884                           
  4885                           ;eusart.c: 37: EUSART_RX.iWrite = 0;
  4886  0017CC  0E00               	movlw	0
  4887  0017CE  6F0A               	movwf	(_EUSART_RX+2)& (0+255),b
  4888                           
  4889                           ;eusart.c: 38: EUSART_RX.processRX = 0;
  4890  0017D0  0E00               	movlw	0
  4891  0017D2  6F08               	movwf	_EUSART_RX& (0+255),b
  4892                           
  4893                           ;eusart.c: 39: EUSART_RX.zzzzzzzzz = 1;
  4894  0017D4  0E01               	movlw	1
  4895  0017D6  6F0B               	movwf	(_EUSART_RX+3)& (0+255),b
  4896  0017D8                     
  4897                           ; BSR set to: 1
  4898                           ;eusart.c: 40: memset(EUSART_RX.buffer, 0x00, 64);
  4899  0017D8  0E0C               	movlw	low (_EUSART_RX+4)
  4900  0017DA  6E05               	movwf	memset@p1^0,c
  4901  0017DC  0E01               	movlw	high (_EUSART_RX+4)
  4902  0017DE  6E06               	movwf	(memset@p1+1)^0,c
  4903  0017E0  0E00               	movlw	0
  4904  0017E2  6E08               	movwf	(memset@c+1)^0,c
  4905  0017E4  0E00               	movlw	0
  4906  0017E6  6E07               	movwf	memset@c^0,c
  4907  0017E8  0E00               	movlw	0
  4908  0017EA  6E0A               	movwf	(memset@n+1)^0,c
  4909  0017EC  0E40               	movlw	64
  4910  0017EE  6E09               	movwf	memset@n^0,c
  4911  0017F0  ECC1  F00D         	call	_memset	;wreg free
  4912  0017F4                     
  4913                           ;eusart.c: 41: memset(EUSART_RX.line, 0x00, 32);
  4914  0017F4  0E4C               	movlw	low (_EUSART_RX+68)
  4915  0017F6  6E05               	movwf	memset@p1^0,c
  4916  0017F8  0E01               	movlw	high (_EUSART_RX+68)
  4917  0017FA  6E06               	movwf	(memset@p1+1)^0,c
  4918  0017FC  0E00               	movlw	0
  4919  0017FE  6E08               	movwf	(memset@c+1)^0,c
  4920  001800  0E00               	movlw	0
  4921  001802  6E07               	movwf	memset@c^0,c
  4922  001804  0E00               	movlw	0
  4923  001806  6E0A               	movwf	(memset@n+1)^0,c
  4924  001808  0E20               	movlw	32
  4925  00180A  6E09               	movwf	memset@n^0,c
  4926  00180C  ECC1  F00D         	call	_memset	;wreg free
  4927  001810  0012               	return		;funcret
  4928  001812                     __end_of_EUSART_Init:
  4929                           	opt callstack 0
  4930                           
  4931 ;; *************** function _A6_Init *****************
  4932 ;; Defined at:
  4933 ;;		line 12 in file "A6Lib.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4950 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4951 ;;Total ram usage:        0 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:   10
  4954 ;; This function calls:
  4955 ;;		_A6_SpeedAutoDetect
  4956 ;;		_sleepMS
  4957 ;; This function is called by:
  4958 ;;		_main
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text15
  4963  001CF8                     __ptext15:
  4964                           	opt callstack 0
  4965  001CF8                     _A6_Init:
  4966                           	opt callstack 20
  4967  001CF8                     
  4968                           ;A6Lib.c: 13: A6_SpeedAutoDetect();
  4969  001CF8  EC78  F006         	call	_A6_SpeedAutoDetect	;wreg free
  4970  001CFC                     
  4971                           ;A6Lib.c: 14: sleepMS(2500);
  4972  001CFC  0EC4               	movlw	196
  4973  001CFE  6E05               	movwf	sleepMS@ms^0,c
  4974  001D00  0E09               	movlw	9
  4975  001D02  6E06               	movwf	(sleepMS@ms+1)^0,c
  4976  001D04  0E00               	movlw	0
  4977  001D06  6E07               	movwf	(sleepMS@ms+2)^0,c
  4978  001D08  0E00               	movlw	0
  4979  001D0A  6E08               	movwf	(sleepMS@ms+3)^0,c
  4980  001D0C  ECA4  F00D         	call	_sleepMS	;wreg free
  4981  001D10  0012               	return		;funcret
  4982  001D12                     __end_of_A6_Init:
  4983                           	opt callstack 0
  4984                           
  4985 ;; *************** function _A6_SpeedAutoDetect *****************
  4986 ;; Defined at:
  4987 ;;		line 54 in file "A6Lib.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  i               1   44[BANK0 ] unsigned char 
  4992 ;;  zzzz           32    0[BANK0 ] unsigned char [32]
  4993 ;;  speeds         12   32[BANK0 ] unsigned long [3]
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5003 ;;      Params:         0       0       0       0       0       0       0       0       0
  5004 ;;      Locals:         0      45       0       0       0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5006 ;;      Totals:         0      45       0       0       0       0       0       0       0
  5007 ;;Total ram usage:       45 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    9
  5010 ;; This function calls:
  5011 ;;		_A6_IsAlive
  5012 ;;		_EUSART_SetSpeed
  5013 ;;		_printLine
  5014 ;;		_sleepMS
  5015 ;;		_sprintf
  5016 ;; This function is called by:
  5017 ;;		_loop
  5018 ;;		_A6_Init
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text16
  5023  000CF0                     __ptext16:
  5024                           	opt callstack 0
  5025  000CF0                     _A6_SpeedAutoDetect:
  5026                           	opt callstack 20
  5027  000CF0                     
  5028                           ;A6Lib.c: 55: uint32_t speeds[] = { 9600, 57600, 115200 };
  5029  000CF0  EE21  F06C         	lfsr	2,A6_SpeedAutoDetect@F3081
  5030  000CF4  EE10  F080         	lfsr	1,A6_SpeedAutoDetect@speeds
  5031  000CF8  0E0B               	movlw	11
  5032  000CFA                     u3341:
  5033  000CFA  CFDB FFE3          	movff	plusw2,plusw1
  5034  000CFE  06E8               	decf	wreg,f,c
  5035  000D00  E2FC               	bc	u3341
  5036  000D02                     
  5037                           ;A6Lib.c: 57: char zzzz[32];;A6Lib.c: 59: printLine("Detecting speed...", 0xF81F);
  5038  000D02  0E74               	movlw	low STR_24
  5039  000D04  6E4A               	movwf	printLine@str^0,c
  5040  000D06  0E5F               	movlw	high STR_24
  5041  000D08  6E4B               	movwf	(printLine@str+1)^0,c
  5042  000D0A  0EF8               	movlw	248
  5043  000D0C  6E4D               	movwf	(printLine@color+1)^0,c
  5044  000D0E  0E1F               	movlw	31
  5045  000D10  6E4C               	movwf	printLine@color^0,c
  5046  000D12  EC09  F00C         	call	_printLine	;wreg free
  5047  000D16                     
  5048                           ;A6Lib.c: 61: for(uint8_t i=0; i<3; i++) {
  5049  000D16  0E00               	movlw	0
  5050  000D18  0100               	movlb	0	; () banked
  5051  000D1A  6F8C               	movwf	A6_SpeedAutoDetect@i& (0+255),b
  5052  000D1C                     l4350:
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;A6Lib.c: 62: EUSART_SetSpeed(speeds[i]);
  5056  000D1C  518C               	movf	A6_SpeedAutoDetect@i& (0+255),w,b
  5057  000D1E  0D04               	mullw	4
  5058  000D20  0E80               	movlw	low A6_SpeedAutoDetect@speeds
  5059  000D22  24F3               	addwf	243,w,c
  5060  000D24  6ED9               	movwf	fsr2l,c
  5061  000D26  0E00               	movlw	high A6_SpeedAutoDetect@speeds
  5062  000D28  20F4               	addwfc	prodh,w,c
  5063  000D2A  6EDA               	movwf	fsr2h,c
  5064  000D2C  CFDE F012          	movff	postinc2,EUSART_SetSpeed@speed
  5065  000D30  CFDE F013          	movff	postinc2,EUSART_SetSpeed@speed+1
  5066  000D34  CFDE F014          	movff	postinc2,EUSART_SetSpeed@speed+2
  5067  000D38  CFDE F015          	movff	postinc2,EUSART_SetSpeed@speed+3
  5068  000D3C  EC32  F00A         	call	_EUSART_SetSpeed	;wreg free
  5069  000D40                     
  5070                           ;A6Lib.c: 63: if(A6_IsAlive() == 1) {
  5071  000D40  EC28  F00B         	call	_A6_IsAlive	;wreg free
  5072  000D44  06E8               	decf	wreg,f,c
  5073  000D46  A4D8               	btfss	status,2,c
  5074  000D48  EFA8  F006         	goto	u3351
  5075  000D4C  EFAA  F006         	goto	u3350
  5076  000D50                     u3351:
  5077  000D50  EFE2  F006         	goto	l4362
  5078  000D54                     u3350:
  5079  000D54                     
  5080                           ;A6Lib.c: 64: sprintf(zzzz, "%lu FOUND!", speeds[i]);
  5081  000D54  0E60               	movlw	low A6_SpeedAutoDetect@zzzz
  5082  000D56  6E1B               	movwf	sprintf@sp^0,c
  5083  000D58  0E00               	movlw	high A6_SpeedAutoDetect@zzzz
  5084  000D5A  6E1C               	movwf	(sprintf@sp+1)^0,c
  5085  000D5C  0EB9               	movlw	low STR_25
  5086  000D5E  6E1D               	movwf	sprintf@f^0,c
  5087  000D60  0E5F               	movlw	high STR_25
  5088  000D62  6E1E               	movwf	(sprintf@f+1)^0,c
  5089  000D64  0100               	movlb	0	; () banked
  5090  000D66  518C               	movf	A6_SpeedAutoDetect@i& (0+255),w,b
  5091  000D68  0D04               	mullw	4
  5092  000D6A  0E80               	movlw	low A6_SpeedAutoDetect@speeds
  5093  000D6C  24F3               	addwf	243,w,c
  5094  000D6E  6ED9               	movwf	fsr2l,c
  5095  000D70  0E00               	movlw	high A6_SpeedAutoDetect@speeds
  5096  000D72  20F4               	addwfc	prodh,w,c
  5097  000D74  6EDA               	movwf	fsr2h,c
  5098  000D76  CFDE F01F          	movff	postinc2,?_sprintf+4
  5099  000D7A  CFDE F020          	movff	postinc2,?_sprintf+5
  5100  000D7E  CFDE F021          	movff	postinc2,?_sprintf+6
  5101  000D82  CFDE F022          	movff	postinc2,?_sprintf+7
  5102  000D86  EC09  F000         	call	_sprintf	;wreg free
  5103  000D8A                     
  5104                           ;A6Lib.c: 65: printLine(zzzz, 0xF800);
  5105  000D8A  0E60               	movlw	low A6_SpeedAutoDetect@zzzz
  5106  000D8C  6E4A               	movwf	printLine@str^0,c
  5107  000D8E  0E00               	movlw	high A6_SpeedAutoDetect@zzzz
  5108  000D90  6E4B               	movwf	(printLine@str+1)^0,c
  5109  000D92  0EF8               	movlw	248
  5110  000D94  6E4D               	movwf	(printLine@color+1)^0,c
  5111  000D96  0E00               	movlw	0
  5112  000D98  6E4C               	movwf	printLine@color^0,c
  5113  000D9A  EC09  F00C         	call	_printLine	;wreg free
  5114  000D9E                     
  5115                           ;A6Lib.c: 66: A6_SPEED = speeds[i];
  5116  000D9E  0100               	movlb	0	; () banked
  5117  000DA0  518C               	movf	A6_SpeedAutoDetect@i& (0+255),w,b
  5118  000DA2  0D04               	mullw	4
  5119  000DA4  0E80               	movlw	low A6_SpeedAutoDetect@speeds
  5120  000DA6  24F3               	addwf	243,w,c
  5121  000DA8  6ED9               	movwf	fsr2l,c
  5122  000DAA  0E00               	movlw	high A6_SpeedAutoDetect@speeds
  5123  000DAC  20F4               	addwfc	prodh,w,c
  5124  000DAE  6EDA               	movwf	fsr2h,c
  5125  000DB0  CFDE F0B6          	movff	postinc2,_A6_SPEED
  5126  000DB4  CFDE F0B7          	movff	postinc2,_A6_SPEED+1
  5127  000DB8  CFDE F0B8          	movff	postinc2,_A6_SPEED+2
  5128  000DBC  CFDE F0B9          	movff	postinc2,_A6_SPEED+3
  5129  000DC0  EFF6  F006         	goto	l546
  5130  000DC4                     l4362:
  5131                           
  5132                           ;A6Lib.c: 68: };A6Lib.c: 69: sleepMS(250);
  5133  000DC4  0EFA               	movlw	250
  5134  000DC6  6E05               	movwf	sleepMS@ms^0,c
  5135  000DC8  0E00               	movlw	0
  5136  000DCA  6E06               	movwf	(sleepMS@ms+1)^0,c
  5137  000DCC  0E00               	movlw	0
  5138  000DCE  6E07               	movwf	(sleepMS@ms+2)^0,c
  5139  000DD0  0E00               	movlw	0
  5140  000DD2  6E08               	movwf	(sleepMS@ms+3)^0,c
  5141  000DD4  ECA4  F00D         	call	_sleepMS	;wreg free
  5142  000DD8  0100               	movlb	0	; () banked
  5143  000DDA  2B8C               	incf	A6_SpeedAutoDetect@i& (0+255),f,b
  5144  000DDC                     
  5145                           ; BSR set to: 0
  5146  000DDC  0E02               	movlw	2
  5147  000DDE  658C               	cpfsgt	A6_SpeedAutoDetect@i& (0+255),b
  5148  000DE0  EFF4  F006         	goto	u3361
  5149  000DE4  EFF6  F006         	goto	u3360
  5150  000DE8                     u3361:
  5151  000DE8  EF8E  F006         	goto	l4350
  5152  000DEC                     u3360:
  5153  000DEC                     l546:
  5154                           
  5155                           ; BSR set to: 0
  5156  000DEC  0012               	return		;funcret
  5157  000DEE                     __end_of_A6_SpeedAutoDetect:
  5158                           	opt callstack 0
  5159                           
  5160 ;; *************** function _sprintf *****************
  5161 ;; Defined at:
  5162 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  sp              2   26[COMRAM] PTR unsigned char 
  5165 ;;		 -> A6_SpeedAutoDetect@zzzz(32), A6_SpeedSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), 
  5166 ;;  f               2   28[COMRAM] PTR const unsigned char 
  5167 ;;		 -> STR_25(11), STR_20(12), STR_13(4), 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  val             4   40[COMRAM] unsigned long 
  5170 ;;  tmpval          4    0        struct .
  5171 ;;  cp              3    0        PTR const unsigned char 
  5172 ;;  width           2   47[COMRAM] int 
  5173 ;;  ap              2   44[COMRAM] PTR void [1]
  5174 ;;		 -> ?_sprintf(2), 
  5175 ;;  prec            2   38[COMRAM] int 
  5176 ;;  len             2    0        unsigned int 
  5177 ;;  c               1   49[COMRAM] unsigned char 
  5178 ;;  flag            1   46[COMRAM] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  2   26[COMRAM] int 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5188 ;;      Params:         8       0       0       0       0       0       0       0       0
  5189 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5190 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5191 ;;      Totals:        24       0       0       0       0       0       0       0       0
  5192 ;;Total ram usage:       24 bytes
  5193 ;; Hardware stack levels used:    1
  5194 ;; Hardware stack levels required when called:    3
  5195 ;; This function calls:
  5196 ;;		___lldiv
  5197 ;;		___llmod
  5198 ;;		___wmul
  5199 ;;		_isdigit
  5200 ;; This function is called by:
  5201 ;;		_A6_SpeedSet
  5202 ;;		_A6_SpeedAutoDetect
  5203 ;;		_Ecg_ProcessHeartRate
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text17
  5208  000012                     __ptext17:
  5209                           	opt callstack 0
  5210  000012                     _sprintf:
  5211                           	opt callstack 25
  5212  000012                     
  5213                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  5214  000012  0E1F               	movlw	low (?_sprintf+4)
  5215  000014  6E2D               	movwf	sprintf@ap^0,c
  5216  000016  0E00               	movlw	high (?_sprintf+4)
  5217  000018  6E2E               	movwf	(sprintf@ap+1)^0,c
  5218                           
  5219                           ;doprnt.c: 553: while((c = *f++)) {
  5220  00001A  EFE6  F001         	goto	l4298
  5221  00001E                     l4196:
  5222                           
  5223                           ;doprnt.c: 555: if(c != '%')
  5224  00001E  0E25               	movlw	37
  5225  000020  1832               	xorwf	sprintf@c^0,w,c
  5226  000022  B4D8               	btfsc	status,2,c
  5227  000024  EF16  F000         	goto	u3141
  5228  000028  EF18  F000         	goto	u3140
  5229  00002C                     u3141:
  5230  00002C  EF22  F000         	goto	l4202
  5231  000030                     u3140:
  5232  000030                     
  5233                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5234  000030  C01B  FFD9         	movff	sprintf@sp,fsr2l
  5235  000034  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  5236  000038  C032  FFDF         	movff	sprintf@c,indf2
  5237  00003C  4A1B               	infsnz	sprintf@sp^0,f,c
  5238  00003E  2A1C               	incf	(sprintf@sp+1)^0,f,c
  5239                           
  5240                           ;doprnt.c: 559: continue;
  5241  000040  EFE6  F001         	goto	l4298
  5242  000044                     l4202:
  5243                           
  5244                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5245  000044  0E00               	movlw	0
  5246  000046  6E31               	movwf	(sprintf@width+1)^0,c
  5247  000048  0E00               	movlw	0
  5248  00004A  6E30               	movwf	sprintf@width^0,c
  5249                           
  5250                           ;doprnt.c: 565: flag = 0;
  5251  00004C  0E00               	movlw	0
  5252  00004E  6E2F               	movwf	sprintf@flag^0,c
  5253  000050                     
  5254                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5255  000050  C01D  FFF6         	movff	sprintf@f,tblptrl
  5256  000054  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  5257  000058                     	if	0	;tblptru may be non-zero
  5258  000058                     	endif
  5259  000058                     	if	0	;tblptru may be non-zero
  5260  000058                     	endif
  5261  000058  0008               	tblrd		*
  5262  00005A  50F5               	movf	tablat,w,c
  5263  00005C  ECF7  F00D         	call	_isdigit
  5264  000060  A0D8               	btfss	status,0,c
  5265  000062  EF35  F000         	goto	u3151
  5266  000066  EF37  F000         	goto	u3150
  5267  00006A                     u3151:
  5268  00006A  EF76  F000         	goto	l4222
  5269  00006E                     u3150:
  5270  00006E                     
  5271                           ;doprnt.c: 615: width = 0;
  5272  00006E  0E00               	movlw	0
  5273  000070  6E31               	movwf	(sprintf@width+1)^0,c
  5274  000072  0E00               	movlw	0
  5275  000074  6E30               	movwf	sprintf@width^0,c
  5276  000076                     l4208:
  5277                           
  5278                           ;doprnt.c: 617: width *= 10;
  5279  000076  C030  F005         	movff	sprintf@width,___wmul@multiplier
  5280  00007A  C031  F006         	movff	sprintf@width+1,___wmul@multiplier+1
  5281  00007E  0E00               	movlw	0
  5282  000080  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  5283  000082  0E0A               	movlw	10
  5284  000084  6E07               	movwf	___wmul@multiplicand^0,c
  5285  000086  EC28  F00E         	call	___wmul	;wreg free
  5286  00008A  C005  F030         	movff	?___wmul,sprintf@width
  5287  00008E  C006  F031         	movff	?___wmul+1,sprintf@width+1
  5288  000092                     
  5289                           ;doprnt.c: 618: width += *f++ - '0';
  5290  000092  0ED0               	movlw	208
  5291  000094  6E23               	movwf	??_sprintf^0,c
  5292  000096  0EFF               	movlw	255
  5293  000098  6E24               	movwf	(??_sprintf+1)^0,c
  5294  00009A  C01D  FFF6         	movff	sprintf@f,tblptrl
  5295  00009E  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  5296  0000A2                     	if	0	;tblptru may be non-zero
  5297  0000A2                     	endif
  5298  0000A2                     	if	0	;tblptru may be non-zero
  5299  0000A2                     	endif
  5300  0000A2  0008               	tblrd		*
  5301  0000A4  50F5               	movf	tablat,w,c
  5302  0000A6  6E25               	movwf	(??_sprintf+2)^0,c
  5303  0000A8  6A26               	clrf	(??_sprintf+3)^0,c
  5304  0000AA  5023               	movf	??_sprintf^0,w,c
  5305  0000AC  2625               	addwf	(??_sprintf+2)^0,f,c
  5306  0000AE  5024               	movf	(??_sprintf+1)^0,w,c
  5307  0000B0  2226               	addwfc	(??_sprintf+3)^0,f,c
  5308  0000B2  5025               	movf	(??_sprintf+2)^0,w,c
  5309  0000B4  2630               	addwf	sprintf@width^0,f,c
  5310  0000B6  5026               	movf	(??_sprintf+3)^0,w,c
  5311  0000B8  2231               	addwfc	(sprintf@width+1)^0,f,c
  5312  0000BA  4A1D               	infsnz	sprintf@f^0,f,c
  5313  0000BC  2A1E               	incf	(sprintf@f+1)^0,f,c
  5314  0000BE                     
  5315                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5316  0000BE  C01D  FFF6         	movff	sprintf@f,tblptrl
  5317  0000C2  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  5318  0000C6                     	if	0	;tblptru may be non-zero
  5319  0000C6                     	endif
  5320  0000C6                     	if	0	;tblptru may be non-zero
  5321  0000C6                     	endif
  5322  0000C6  0008               	tblrd		*
  5323  0000C8  50F5               	movf	tablat,w,c
  5324  0000CA  ECF7  F00D         	call	_isdigit
  5325  0000CE  B0D8               	btfsc	status,0,c
  5326  0000D0  EF6C  F000         	goto	u3161
  5327  0000D4  EF6E  F000         	goto	u3160
  5328  0000D8                     u3161:
  5329  0000D8  EF3B  F000         	goto	l4208
  5330  0000DC                     u3160:
  5331  0000DC  EF76  F000         	goto	l4222
  5332  0000E0                     l4216:
  5333                           
  5334                           ;doprnt.c: 669: flag |= 0x10;
  5335  0000E0  882F               	bsf	sprintf@flag^0,4,c
  5336                           
  5337                           ;doprnt.c: 670: goto loop;
  5338  0000E2  EF76  F000         	goto	l4222
  5339  0000E6                     l4218:
  5340                           
  5341                           ;doprnt.c: 844: flag |= 0x40;
  5342  0000E6  8C2F               	bsf	sprintf@flag^0,6,c
  5343                           
  5344                           ;doprnt.c: 845: break;
  5345  0000E8  EF96  F000         	goto	l591
  5346  0000EC                     l4222:
  5347  0000EC  C01D  FFF6         	movff	sprintf@f,tblptrl
  5348  0000F0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  5349  0000F4  4A1D               	infsnz	sprintf@f^0,f,c
  5350  0000F6  2A1E               	incf	(sprintf@f+1)^0,f,c
  5351  0000F8                     	if	0	;tblptru may be non-zero
  5352  0000F8                     	endif
  5353  0000F8                     	if	0	;tblptru may be non-zero
  5354  0000F8                     	endif
  5355  0000F8  0008               	tblrd		*
  5356  0000FA  CFF5 F032          	movff	tablat,sprintf@c
  5357  0000FE  5032               	movf	sprintf@c^0,w,c
  5358                           
  5359                           ; Switch size 1, requested type "simple"
  5360                           ; Number of cases is 5, Range of values is 0 to 117
  5361                           ; switch strategies available:
  5362                           ; Name         Instructions Cycles
  5363                           ; simple_byte           16     9 (average)
  5364                           ;	Chosen strategy is simple_byte
  5365  000100  0A00               	xorlw	0	; case 0
  5366  000102  B4D8               	btfsc	status,2,c
  5367  000104  EFF7  F001         	goto	l4300
  5368  000108  0A64               	xorlw	100	; case 100
  5369  00010A  B4D8               	btfsc	status,2,c
  5370  00010C  EF96  F000         	goto	l591
  5371  000110  0A0D               	xorlw	13	; case 105
  5372  000112  B4D8               	btfsc	status,2,c
  5373  000114  EF96  F000         	goto	l591
  5374  000118  0A05               	xorlw	5	; case 108
  5375  00011A  B4D8               	btfsc	status,2,c
  5376  00011C  EF70  F000         	goto	l4216
  5377  000120  0A19               	xorlw	25	; case 117
  5378  000122  B4D8               	btfsc	status,2,c
  5379  000124  EF73  F000         	goto	l4218
  5380  000128  EFE6  F001         	goto	l4298
  5381  00012C                     l591:
  5382                           
  5383                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  5384  00012C  BC2F               	btfsc	sprintf@flag^0,6,c
  5385  00012E  EF9B  F000         	goto	u3171
  5386  000132  EF9D  F000         	goto	u3170
  5387  000136                     u3171:
  5388  000136  EFDA  F000         	goto	l594
  5389  00013A                     u3170:
  5390  00013A                     
  5391                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  5392  00013A  A82F               	btfss	sprintf@flag^0,4,c
  5393  00013C  EFA2  F000         	goto	u3181
  5394  000140  EFA4  F000         	goto	u3180
  5395  000144                     u3181:
  5396  000144  EFB6  F000         	goto	l4230
  5397  000148                     u3180:
  5398  000148                     
  5399                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  5400  000148  C02D  FFD9         	movff	sprintf@ap,fsr2l
  5401  00014C  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  5402  000150  CFDE F029          	movff	postinc2,sprintf@val
  5403  000154  CFDE F02A          	movff	postinc2,sprintf@val+1
  5404  000158  CFDE F02B          	movff	postinc2,sprintf@val+2
  5405  00015C  CFDE F02C          	movff	postinc2,sprintf@val+3
  5406  000160  0E04               	movlw	4
  5407  000162  262D               	addwf	sprintf@ap^0,f,c
  5408  000164  0E00               	movlw	0
  5409  000166  222E               	addwfc	(sprintf@ap+1)^0,f,c
  5410  000168  EFC7  F000         	goto	l4234
  5411  00016C                     l4230:
  5412                           
  5413                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  5414  00016C  C02D  FFD9         	movff	sprintf@ap,fsr2l
  5415  000170  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  5416  000174  CFDE F029          	movff	postinc2,sprintf@val
  5417  000178  CFDD F02A          	movff	postdec2,sprintf@val+1
  5418  00017C  0E00               	movlw	0
  5419  00017E  BE2A               	btfsc	(sprintf@val+1)^0,7,c
  5420  000180  0EFF               	movlw	-1
  5421  000182  6E2B               	movwf	(sprintf@val+2)^0,c
  5422  000184  6E2C               	movwf	(sprintf@val+3)^0,c
  5423  000186  0E02               	movlw	2
  5424  000188  262D               	addwf	sprintf@ap^0,f,c
  5425  00018A  0E00               	movlw	0
  5426  00018C  222E               	addwfc	(sprintf@ap+1)^0,f,c
  5427  00018E                     l4234:
  5428                           
  5429                           ;doprnt.c: 1287: if((long)val < 0) {
  5430  00018E  BE2C               	btfsc	(sprintf@val+3)^0,7,c
  5431  000190  EFCE  F000         	goto	u3190
  5432  000194  EFCC  F000         	goto	u3191
  5433  000198                     u3191:
  5434  000198  EF05  F001         	goto	l4248
  5435  00019C                     u3190:
  5436  00019C                     
  5437                           ;doprnt.c: 1288: flag |= 0x03;
  5438  00019C  0E03               	movlw	3
  5439  00019E  122F               	iorwf	sprintf@flag^0,f,c
  5440  0001A0                     
  5441                           ;doprnt.c: 1289: val = -val;
  5442  0001A0  1E2C               	comf	(sprintf@val+3)^0,f,c
  5443  0001A2  1E2B               	comf	(sprintf@val+2)^0,f,c
  5444  0001A4  1E2A               	comf	(sprintf@val+1)^0,f,c
  5445  0001A6  6C29               	negf	sprintf@val^0,c
  5446  0001A8  0E00               	movlw	0
  5447  0001AA  222A               	addwfc	(sprintf@val+1)^0,f,c
  5448  0001AC  222B               	addwfc	(sprintf@val+2)^0,f,c
  5449  0001AE  222C               	addwfc	(sprintf@val+3)^0,f,c
  5450  0001B0  EF05  F001         	goto	l4248
  5451  0001B4                     l594:
  5452                           
  5453                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  5454  0001B4  A82F               	btfss	sprintf@flag^0,4,c
  5455  0001B6  EFDF  F000         	goto	u3201
  5456  0001BA  EFE1  F000         	goto	u3200
  5457  0001BE                     u3201:
  5458  0001BE  EFF3  F000         	goto	l4244
  5459  0001C2                     u3200:
  5460  0001C2                     
  5461                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  5462  0001C2  C02D  FFD9         	movff	sprintf@ap,fsr2l
  5463  0001C6  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  5464  0001CA  CFDE F029          	movff	postinc2,sprintf@val
  5465  0001CE  CFDE F02A          	movff	postinc2,sprintf@val+1
  5466  0001D2  CFDE F02B          	movff	postinc2,sprintf@val+2
  5467  0001D6  CFDE F02C          	movff	postinc2,sprintf@val+3
  5468  0001DA  0E04               	movlw	4
  5469  0001DC  262D               	addwf	sprintf@ap^0,f,c
  5470  0001DE  0E00               	movlw	0
  5471  0001E0  222E               	addwfc	(sprintf@ap+1)^0,f,c
  5472  0001E2  EF05  F001         	goto	l4248
  5473  0001E6                     l4244:
  5474                           
  5475                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  5476  0001E6  C02D  FFD9         	movff	sprintf@ap,fsr2l
  5477  0001EA  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  5478  0001EE  CFDE F023          	movff	postinc2,??_sprintf
  5479  0001F2  CFDD F024          	movff	postdec2,??_sprintf+1
  5480  0001F6  C023  F029         	movff	??_sprintf,sprintf@val
  5481  0001FA  C024  F02A         	movff	??_sprintf+1,sprintf@val+1
  5482  0001FE  6A2B               	clrf	(sprintf@val+2)^0,c
  5483  000200  6A2C               	clrf	(sprintf@val+3)^0,c
  5484  000202  0E02               	movlw	2
  5485  000204  262D               	addwf	sprintf@ap^0,f,c
  5486  000206  0E00               	movlw	0
  5487  000208  222E               	addwfc	(sprintf@ap+1)^0,f,c
  5488  00020A                     l4248:
  5489                           
  5490                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  5491  00020A  0E01               	movlw	1
  5492  00020C  6E32               	movwf	sprintf@c^0,c
  5493  00020E                     l4254:
  5494                           
  5495                           ;doprnt.c: 1332: if(val < dpowers[c])
  5496  00020E  5032               	movf	sprintf@c^0,w,c
  5497  000210  0D04               	mullw	4
  5498  000212  0EDB               	movlw	low _dpowers
  5499  000214  24F3               	addwf	243,w,c
  5500  000216  6EF6               	movwf	tblptrl,c
  5501  000218  0E5E               	movlw	high _dpowers
  5502  00021A  20F4               	addwfc	244,w,c
  5503  00021C  6EF7               	movwf	tblptrh,c
  5504  00021E                     	if	0	;There are less than 3 active tblptr bytes
  5505  00021E                     	endif
  5506  00021E  0009               	tblrd		*+
  5507  000220  50F5               	movf	tablat,w,c
  5508  000222  5C29               	subwf	sprintf@val^0,w,c
  5509  000224  0009               	tblrd		*+
  5510  000226  50F5               	movf	tablat,w,c
  5511  000228  582A               	subwfb	(sprintf@val+1)^0,w,c
  5512  00022A  0009               	tblrd		*+
  5513  00022C  50F5               	movf	tablat,w,c
  5514  00022E  582B               	subwfb	(sprintf@val+2)^0,w,c
  5515  000230  0009               	tblrd		*+
  5516  000232  50F5               	movf	tablat,w,c
  5517  000234  582C               	subwfb	(sprintf@val+3)^0,w,c
  5518  000236  B0D8               	btfsc	status,0,c
  5519  000238  EF20  F001         	goto	u3211
  5520  00023C  EF22  F001         	goto	u3210
  5521  000240                     u3211:
  5522  000240  EF24  F001         	goto	l4258
  5523  000244                     u3210:
  5524  000244  EF2E  F001         	goto	l4262
  5525  000248                     l4258:
  5526  000248  2A32               	incf	sprintf@c^0,f,c
  5527  00024A  0E0A               	movlw	10
  5528  00024C  1832               	xorwf	sprintf@c^0,w,c
  5529  00024E  A4D8               	btfss	status,2,c
  5530  000250  EF2C  F001         	goto	u3221
  5531  000254  EF2E  F001         	goto	u3220
  5532  000258                     u3221:
  5533  000258  EF07  F001         	goto	l4254
  5534  00025C                     u3220:
  5535  00025C                     l4262:
  5536                           
  5537                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5538  00025C  5030               	movf	sprintf@width^0,w,c
  5539  00025E  1031               	iorwf	(sprintf@width+1)^0,w,c
  5540  000260  B4D8               	btfsc	status,2,c
  5541  000262  EF35  F001         	goto	u3231
  5542  000266  EF37  F001         	goto	u3230
  5543  00026A                     u3231:
  5544  00026A  EF45  F001         	goto	l4268
  5545  00026E                     u3230:
  5546  00026E  C02F  F023         	movff	sprintf@flag,??_sprintf
  5547  000272  0E03               	movlw	3
  5548  000274  1623               	andwf	??_sprintf^0,f,c
  5549  000276  B4D8               	btfsc	status,2,c
  5550  000278  EF40  F001         	goto	u3241
  5551  00027C  EF42  F001         	goto	u3240
  5552  000280                     u3241:
  5553  000280  EF45  F001         	goto	l4268
  5554  000284                     u3240:
  5555  000284                     
  5556                           ;doprnt.c: 1372: width--;
  5557  000284  0630               	decf	sprintf@width^0,f,c
  5558  000286  A0D8               	btfss	status,0,c
  5559  000288  0631               	decf	(sprintf@width+1)^0,f,c
  5560  00028A                     l4268:
  5561                           
  5562                           ;doprnt.c: 1407: if(width > c)
  5563  00028A  5032               	movf	sprintf@c^0,w,c
  5564  00028C  6E23               	movwf	??_sprintf^0,c
  5565  00028E  6A24               	clrf	(??_sprintf+1)^0,c
  5566  000290  5030               	movf	sprintf@width^0,w,c
  5567  000292  5C23               	subwf	??_sprintf^0,w,c
  5568  000294  5024               	movf	(??_sprintf+1)^0,w,c
  5569  000296  0A80               	xorlw	128
  5570  000298  6E25               	movwf	(??_sprintf+2)^0,c
  5571  00029A  5031               	movf	(sprintf@width+1)^0,w,c
  5572  00029C  0A80               	xorlw	128
  5573  00029E  5825               	subwfb	(??_sprintf+2)^0,w,c
  5574  0002A0  B0D8               	btfsc	status,0,c
  5575  0002A2  EF55  F001         	goto	u3251
  5576  0002A6  EF57  F001         	goto	u3250
  5577  0002AA                     u3251:
  5578  0002AA  EF5D  F001         	goto	l4272
  5579  0002AE                     u3250:
  5580  0002AE                     
  5581                           ;doprnt.c: 1408: width -= c;
  5582  0002AE  5032               	movf	sprintf@c^0,w,c
  5583  0002B0  5E30               	subwf	sprintf@width^0,f,c
  5584  0002B2  0E00               	movlw	0
  5585  0002B4  5A31               	subwfb	(sprintf@width+1)^0,f,c
  5586  0002B6  EF61  F001         	goto	l4274
  5587  0002BA                     l4272:
  5588                           
  5589                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5590  0002BA  0E00               	movlw	0
  5591  0002BC  6E31               	movwf	(sprintf@width+1)^0,c
  5592  0002BE  0E00               	movlw	0
  5593  0002C0  6E30               	movwf	sprintf@width^0,c
  5594  0002C2                     l4274:
  5595                           
  5596                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  5597  0002C2  5030               	movf	sprintf@width^0,w,c
  5598  0002C4  1031               	iorwf	(sprintf@width+1)^0,w,c
  5599  0002C6  B4D8               	btfsc	status,2,c
  5600  0002C8  EF68  F001         	goto	u3261
  5601  0002CC  EF6A  F001         	goto	u3260
  5602  0002D0                     u3261:
  5603  0002D0  EF7E  F001         	goto	l4282
  5604  0002D4                     u3260:
  5605  0002D4                     l4276:
  5606                           
  5607                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  5608  0002D4  C01B  FFD9         	movff	sprintf@sp,fsr2l
  5609  0002D8  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  5610  0002DC  0E20               	movlw	32
  5611  0002DE  6EDF               	movwf	indf2,c
  5612  0002E0  4A1B               	infsnz	sprintf@sp^0,f,c
  5613  0002E2  2A1C               	incf	(sprintf@sp+1)^0,f,c
  5614  0002E4                     
  5615                           ;doprnt.c: 1457: while(--width);
  5616  0002E4  0630               	decf	sprintf@width^0,f,c
  5617  0002E6  A0D8               	btfss	status,0,c
  5618  0002E8  0631               	decf	(sprintf@width+1)^0,f,c
  5619  0002EA  5030               	movf	sprintf@width^0,w,c
  5620  0002EC  1031               	iorwf	(sprintf@width+1)^0,w,c
  5621  0002EE  A4D8               	btfss	status,2,c
  5622  0002F0  EF7C  F001         	goto	u3271
  5623  0002F4  EF7E  F001         	goto	u3270
  5624  0002F8                     u3271:
  5625  0002F8  EF6A  F001         	goto	l4276
  5626  0002FC                     u3270:
  5627  0002FC                     l4282:
  5628                           
  5629                           ;doprnt.c: 1464: if(flag & 0x03)
  5630  0002FC  C02F  F023         	movff	sprintf@flag,??_sprintf
  5631  000300  0E03               	movlw	3
  5632  000302  1623               	andwf	??_sprintf^0,f,c
  5633  000304  B4D8               	btfsc	status,2,c
  5634  000306  EF87  F001         	goto	u3281
  5635  00030A  EF89  F001         	goto	u3280
  5636  00030E                     u3281:
  5637  00030E  EF91  F001         	goto	l4288
  5638  000312                     u3280:
  5639  000312                     
  5640                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5641  000312  C01B  FFD9         	movff	sprintf@sp,fsr2l
  5642  000316  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  5643  00031A  0E2D               	movlw	45
  5644  00031C  6EDF               	movwf	indf2,c
  5645  00031E  4A1B               	infsnz	sprintf@sp^0,f,c
  5646  000320  2A1C               	incf	(sprintf@sp+1)^0,f,c
  5647  000322                     l4288:
  5648                           
  5649                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5650  000322  C032  F027         	movff	sprintf@c,sprintf@prec
  5651  000326  6A28               	clrf	(sprintf@prec+1)^0,c
  5652                           
  5653                           ;doprnt.c: 1500: while(prec--) {
  5654  000328  EFD9  F001         	goto	l4296
  5655  00032C                     l4290:
  5656                           
  5657                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  5658  00032C  C027  F023         	movff	sprintf@prec,??_sprintf
  5659  000330  C028  F024         	movff	sprintf@prec+1,??_sprintf+1
  5660  000334  90D8               	bcf	status,0,c
  5661  000336  3623               	rlcf	??_sprintf^0,f,c
  5662  000338  3624               	rlcf	(??_sprintf+1)^0,f,c
  5663  00033A  90D8               	bcf	status,0,c
  5664  00033C  3623               	rlcf	??_sprintf^0,f,c
  5665  00033E  3624               	rlcf	(??_sprintf+1)^0,f,c
  5666  000340  0EDB               	movlw	low _dpowers
  5667  000342  2423               	addwf	??_sprintf^0,w,c
  5668  000344  6EF6               	movwf	tblptrl,c
  5669  000346  0E5E               	movlw	high _dpowers
  5670  000348  2024               	addwfc	(??_sprintf+1)^0,w,c
  5671  00034A  6EF7               	movwf	tblptrh,c
  5672  00034C                     	if	0	;There are less than 3 active tblptr bytes
  5673  00034C                     	endif
  5674  00034C  0009               	tblrd		*+
  5675  00034E  CFF5 F009          	movff	tablat,___lldiv@divisor
  5676  000352  0009               	tblrd		*+
  5677  000354  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  5678  000358  0009               	tblrd		*+
  5679  00035A  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  5680  00035E  000A               	tblrd		*-
  5681  000360  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  5682  000364  C029  F005         	movff	sprintf@val,___lldiv@dividend
  5683  000368  C02A  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  5684  00036C  C02B  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  5685  000370  C02C  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  5686  000374  EC0B  F009         	call	___lldiv	;wreg free
  5687  000378  C005  F012         	movff	?___lldiv,___llmod@dividend
  5688  00037C  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  5689  000380  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  5690  000384  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  5691  000388  0E0A               	movlw	10
  5692  00038A  6E16               	movwf	___llmod@divisor^0,c
  5693  00038C  0E00               	movlw	0
  5694  00038E  6E17               	movwf	(___llmod@divisor+1)^0,c
  5695  000390  0E00               	movlw	0
  5696  000392  6E18               	movwf	(___llmod@divisor+2)^0,c
  5697  000394  0E00               	movlw	0
  5698  000396  6E19               	movwf	(___llmod@divisor+3)^0,c
  5699  000398  ECEE  F009         	call	___llmod	;wreg free
  5700  00039C  5012               	movf	?___llmod^0,w,c
  5701  00039E  0F30               	addlw	48
  5702  0003A0  6E32               	movwf	sprintf@c^0,c
  5703  0003A2                     
  5704                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  5705  0003A2  C01B  FFD9         	movff	sprintf@sp,fsr2l
  5706  0003A6  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  5707  0003AA  C032  FFDF         	movff	sprintf@c,indf2
  5708  0003AE  4A1B               	infsnz	sprintf@sp^0,f,c
  5709  0003B0  2A1C               	incf	(sprintf@sp+1)^0,f,c
  5710  0003B2                     l4296:
  5711  0003B2  0627               	decf	sprintf@prec^0,f,c
  5712  0003B4  A0D8               	btfss	status,0,c
  5713  0003B6  0628               	decf	(sprintf@prec+1)^0,f,c
  5714  0003B8  2827               	incf	sprintf@prec^0,w,c
  5715  0003BA  E106               	bnz	u3291
  5716  0003BC  2828               	incf	(sprintf@prec+1)^0,w,c
  5717  0003BE  A4D8               	btfss	status,2,c
  5718  0003C0  EFE4  F001         	goto	u3291
  5719  0003C4  EFE6  F001         	goto	u3290
  5720  0003C8                     u3291:
  5721  0003C8  EF96  F001         	goto	l4290
  5722  0003CC                     u3290:
  5723  0003CC                     l4298:
  5724  0003CC  C01D  FFF6         	movff	sprintf@f,tblptrl
  5725  0003D0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  5726  0003D4  4A1D               	infsnz	sprintf@f^0,f,c
  5727  0003D6  2A1E               	incf	(sprintf@f+1)^0,f,c
  5728  0003D8                     	if	0	;tblptru may be non-zero
  5729  0003D8                     	endif
  5730  0003D8                     	if	0	;tblptru may be non-zero
  5731  0003D8                     	endif
  5732  0003D8  0008               	tblrd		*
  5733  0003DA  CFF5 F032          	movff	tablat,sprintf@c
  5734  0003DE  5032               	movf	sprintf@c^0,w,c
  5735  0003E0  A4D8               	btfss	status,2,c
  5736  0003E2  EFF5  F001         	goto	u3301
  5737  0003E6  EFF7  F001         	goto	u3300
  5738  0003EA                     u3301:
  5739  0003EA  EF0F  F000         	goto	l4196
  5740  0003EE                     u3300:
  5741  0003EE                     l4300:
  5742                           
  5743                           ;doprnt.c: 1564: *sp = 0;
  5744  0003EE  C01B  FFD9         	movff	sprintf@sp,fsr2l
  5745  0003F2  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  5746  0003F6  0E00               	movlw	0
  5747  0003F8  6EDF               	movwf	indf2,c
  5748  0003FA  0012               	return		;funcret
  5749  0003FC                     __end_of_sprintf:
  5750                           	opt callstack 0
  5751                           
  5752 ;; *************** function _isdigit *****************
  5753 ;; Defined at:
  5754 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  c               1    wreg     unsigned char 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  c               1    6[COMRAM] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;		None               void
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5768 ;;      Params:         0       0       0       0       0       0       0       0       0
  5769 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5770 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5771 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5772 ;;Total ram usage:        3 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    2
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_sprintf
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text18
  5783  001BEE                     __ptext18:
  5784                           	opt callstack 0
  5785  001BEE                     _isdigit:
  5786                           	opt callstack 25
  5787                           
  5788                           ;incstack = 0
  5789                           ;isdigit@c stored from wreg
  5790  001BEE  6E07               	movwf	isdigit@c^0,c
  5791  001BF0  0E00               	movlw	0
  5792  001BF2  6E06               	movwf	_isdigit$1772^0,c
  5793  001BF4  0E3A               	movlw	58
  5794  001BF6  6007               	cpfslt	isdigit@c^0,c
  5795  001BF8  EF00  F00E         	goto	u2951
  5796  001BFC  EF02  F00E         	goto	u2950
  5797  001C00                     u2951:
  5798  001C00  EF0C  F00E         	goto	l4088
  5799  001C04                     u2950:
  5800  001C04  0E2F               	movlw	47
  5801  001C06  6407               	cpfsgt	isdigit@c^0,c
  5802  001C08  EF08  F00E         	goto	u2961
  5803  001C0C  EF0A  F00E         	goto	u2960
  5804  001C10                     u2961:
  5805  001C10  EF0C  F00E         	goto	l4088
  5806  001C14                     u2960:
  5807  001C14  0E01               	movlw	1
  5808  001C16  6E06               	movwf	_isdigit$1772^0,c
  5809  001C18                     l4088:
  5810  001C18  C006  F005         	movff	_isdigit$1772,??_isdigit
  5811  001C1C  3005               	rrcf	??_isdigit^0,w,c
  5812  001C1E  0012               	return		;funcret
  5813  001C20                     __end_of_isdigit:
  5814                           	opt callstack 0
  5815                           
  5816 ;; *************** function ___llmod *****************
  5817 ;; Defined at:
  5818 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  dividend        4   17[COMRAM] unsigned long 
  5821 ;;  divisor         4   21[COMRAM] unsigned long 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  counter         1   25[COMRAM] unsigned char 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  4   17[COMRAM] unsigned long 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5833 ;;      Params:         8       0       0       0       0       0       0       0       0
  5834 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5835 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5836 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5837 ;;Total ram usage:        9 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    2
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_sprintf
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text19
  5848  0013DC                     __ptext19:
  5849                           	opt callstack 0
  5850  0013DC                     ___llmod:
  5851                           	opt callstack 25
  5852  0013DC  5016               	movf	___llmod@divisor^0,w,c
  5853  0013DE  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  5854  0013E0  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  5855  0013E2  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  5856  0013E4  B4D8               	btfsc	status,2,c
  5857  0013E6  EFF7  F009         	goto	u3001
  5858  0013EA  EFF9  F009         	goto	u3000
  5859  0013EE                     u3001:
  5860  0013EE  EF29  F00A         	goto	l1026
  5861  0013F2                     u3000:
  5862  0013F2  0E01               	movlw	1
  5863  0013F4  6E1A               	movwf	___llmod@counter^0,c
  5864  0013F6  EF03  F00A         	goto	l4120
  5865  0013FA                     l4118:
  5866  0013FA  90D8               	bcf	status,0,c
  5867  0013FC  3616               	rlcf	___llmod@divisor^0,f,c
  5868  0013FE  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  5869  001400  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  5870  001402  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  5871  001404  2A1A               	incf	___llmod@counter^0,f,c
  5872  001406                     l4120:
  5873  001406  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  5874  001408  EF08  F00A         	goto	u3011
  5875  00140C  EF0A  F00A         	goto	u3010
  5876  001410                     u3011:
  5877  001410  EFFD  F009         	goto	l4118
  5878  001414                     u3010:
  5879  001414                     l4122:
  5880  001414  5016               	movf	___llmod@divisor^0,w,c
  5881  001416  5C12               	subwf	___llmod@dividend^0,w,c
  5882  001418  5017               	movf	(___llmod@divisor+1)^0,w,c
  5883  00141A  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  5884  00141C  5018               	movf	(___llmod@divisor+2)^0,w,c
  5885  00141E  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  5886  001420  5019               	movf	(___llmod@divisor+3)^0,w,c
  5887  001422  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  5888  001424  A0D8               	btfss	status,0,c
  5889  001426  EF17  F00A         	goto	u3021
  5890  00142A  EF19  F00A         	goto	u3020
  5891  00142E                     u3021:
  5892  00142E  EF21  F00A         	goto	l4126
  5893  001432                     u3020:
  5894  001432  5016               	movf	___llmod@divisor^0,w,c
  5895  001434  5E12               	subwf	___llmod@dividend^0,f,c
  5896  001436  5017               	movf	(___llmod@divisor+1)^0,w,c
  5897  001438  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  5898  00143A  5018               	movf	(___llmod@divisor+2)^0,w,c
  5899  00143C  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  5900  00143E  5019               	movf	(___llmod@divisor+3)^0,w,c
  5901  001440  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  5902  001442                     l4126:
  5903  001442  90D8               	bcf	status,0,c
  5904  001444  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  5905  001446  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  5906  001448  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  5907  00144A  3216               	rrcf	___llmod@divisor^0,f,c
  5908  00144C  2E1A               	decfsz	___llmod@counter^0,f,c
  5909  00144E  EF0A  F00A         	goto	l4122
  5910  001452                     l1026:
  5911  001452  C012  F012         	movff	___llmod@dividend,?___llmod
  5912  001456  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  5913  00145A  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  5914  00145E  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  5915  001462  0012               	return		;funcret
  5916  001464                     __end_of___llmod:
  5917                           	opt callstack 0
  5918                           
  5919 ;; *************** function _sleepMS *****************
  5920 ;; Defined at:
  5921 ;;		line 131 in file "main.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  ms              4    4[COMRAM] unsigned long 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  t               4    8[COMRAM] unsigned long 
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2, status,0
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5935 ;;      Params:         4       0       0       0       0       0       0       0       0
  5936 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5938 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5939 ;;Total ram usage:        8 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    2
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_A6_Init
  5946 ;;		_A6_SpeedSet
  5947 ;;		_A6_SpeedAutoDetect
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text20
  5952  001B48                     __ptext20:
  5953                           	opt callstack 0
  5954  001B48                     _sleepMS:
  5955                           	opt callstack 26
  5956  001B48                     
  5957                           ;main.c: 132: uint32_t t = MILLISECONDS + ms;
  5958  001B48  5005               	movf	sleepMS@ms^0,w,c
  5959  001B4A  0100               	movlb	0	; () banked
  5960  001B4C  25B2               	addwf	_MILLISECONDS& (0+255),w,b
  5961  001B4E  6E09               	movwf	sleepMS@t^0,c
  5962  001B50  5006               	movf	(sleepMS@ms+1)^0,w,c
  5963  001B52  21B3               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  5964  001B54  6E0A               	movwf	(sleepMS@t+1)^0,c
  5965  001B56  5007               	movf	(sleepMS@ms+2)^0,w,c
  5966  001B58  21B4               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  5967  001B5A  6E0B               	movwf	(sleepMS@t+2)^0,c
  5968  001B5C  5008               	movf	(sleepMS@ms+3)^0,w,c
  5969  001B5E  21B5               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  5970  001B60  6E0C               	movwf	(sleepMS@t+3)^0,c
  5971  001B62                     l4154:
  5972                           
  5973                           ; BSR set to: 0
  5974  001B62  5009               	movf	sleepMS@t^0,w,c
  5975  001B64  5DB2               	subwf	_MILLISECONDS& (0+255),w,b
  5976  001B66  500A               	movf	(sleepMS@t+1)^0,w,c
  5977  001B68  59B3               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
  5978  001B6A  500B               	movf	(sleepMS@t+2)^0,w,c
  5979  001B6C  59B4               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
  5980  001B6E  500C               	movf	(sleepMS@t+3)^0,w,c
  5981  001B70  59B5               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
  5982  001B72  A0D8               	btfss	status,0,c
  5983  001B74  EFBE  F00D         	goto	u3051
  5984  001B78  EFC0  F00D         	goto	u3050
  5985  001B7C                     u3051:
  5986  001B7C  EFB1  F00D         	goto	l4154
  5987  001B80                     u3050:
  5988  001B80                     
  5989                           ; BSR set to: 0
  5990  001B80  0012               	return		;funcret
  5991  001B82                     __end_of_sleepMS:
  5992                           	opt callstack 0
  5993                           
  5994 ;; *************** function _printLine *****************
  5995 ;; Defined at:
  5996 ;;		line 136 in file "main.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  str             2   73[COMRAM] PTR const unsigned char 
  5999 ;;		 -> A6_SpeedAutoDetect@zzzz(32), STR_24(19), EUSART_RX.line(32), EUSART_RX(100), 
  6000 ;;		 -> loop@response_154(32), STR_10(12), loop@response(32), STR_7(8), 
  6001 ;;		 -> STR_6(13), STR_5(11), STR_4(23), STR_3(6), 
  6002 ;;		 -> STR_2(5), STR_1(13), 
  6003 ;;  color           2   75[COMRAM] unsigned int 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6015 ;;      Params:         4       0       0       0       0       0       0       0       0
  6016 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6018 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6019 ;;Total ram usage:        4 bytes
  6020 ;; Hardware stack levels used:    1
  6021 ;; Hardware stack levels required when called:    8
  6022 ;; This function calls:
  6023 ;;		_TFT_DrawFillRect
  6024 ;;		_TFT_DrawString
  6025 ;; This function is called by:
  6026 ;;		_loop
  6027 ;;		_A6_SpeedAutoDetect
  6028 ;;		_EUSART_RX_Process
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text21
  6033  001812                     __ptext21:
  6034                           	opt callstack 0
  6035  001812                     _printLine:
  6036                           	opt callstack 21
  6037  001812                     
  6038                           ;main.c: 137: EUSART_RX.zzzzzzzzz += 8;
  6039  001812  0E08               	movlw	8
  6040  001814  0101               	movlb	1	; () banked
  6041  001816  270B               	addwf	(_EUSART_RX+3)& (0+255),f,b
  6042  001818                     
  6043                           ; BSR set to: 1
  6044                           ;main.c: 138: TFT_DrawFillRect(EUSART_RX.zzzzzzzzz, 0, 50, 400, 0x0000);
  6045  001818  C10B  F01C         	movff	_EUSART_RX+3,TFT_DrawFillRect@x
  6046  00181C  6A1D               	clrf	(TFT_DrawFillRect@x+1)^0,c
  6047  00181E  0E00               	movlw	0
  6048  001820  6E1F               	movwf	(TFT_DrawFillRect@y+1)^0,c
  6049  001822  0E00               	movlw	0
  6050  001824  6E1E               	movwf	TFT_DrawFillRect@y^0,c
  6051  001826  0E00               	movlw	0
  6052  001828  6E21               	movwf	(TFT_DrawFillRect@w+1)^0,c
  6053  00182A  0E32               	movlw	50
  6054  00182C  6E20               	movwf	TFT_DrawFillRect@w^0,c
  6055  00182E  0E01               	movlw	1
  6056  001830  6E23               	movwf	(TFT_DrawFillRect@h+1)^0,c
  6057  001832  0E90               	movlw	144
  6058  001834  6E22               	movwf	TFT_DrawFillRect@h^0,c
  6059  001836  0E00               	movlw	0
  6060  001838  6E25               	movwf	(TFT_DrawFillRect@color+1)^0,c
  6061  00183A  0E00               	movlw	0
  6062  00183C  6E24               	movwf	TFT_DrawFillRect@color^0,c
  6063  00183E  ECED  F00A         	call	_TFT_DrawFillRect	;wreg free
  6064  001842                     
  6065                           ;main.c: 139: TFT_DrawString(EUSART_RX.zzzzzzzzz, (400 - 1), str, color, 0x0000, 1);
  6066  001842  C10B  F03F         	movff	_EUSART_RX+3,TFT_DrawString@x
  6067  001846  6A40               	clrf	(TFT_DrawString@x+1)^0,c
  6068  001848  0E01               	movlw	1
  6069  00184A  6E42               	movwf	(TFT_DrawString@y+1)^0,c
  6070  00184C  0E8F               	movlw	143
  6071  00184E  6E41               	movwf	TFT_DrawString@y^0,c
  6072  001850  C04A  F043         	movff	printLine@str,TFT_DrawString@str
  6073  001854  C04B  F044         	movff	printLine@str+1,TFT_DrawString@str+1
  6074  001858  C04C  F045         	movff	printLine@color,TFT_DrawString@color
  6075  00185C  C04D  F046         	movff	printLine@color+1,TFT_DrawString@color+1
  6076  001860  0E00               	movlw	0
  6077  001862  6E48               	movwf	(TFT_DrawString@bg+1)^0,c
  6078  001864  0E00               	movlw	0
  6079  001866  6E47               	movwf	TFT_DrawString@bg^0,c
  6080  001868  0E01               	movlw	1
  6081  00186A  6E49               	movwf	TFT_DrawString@size^0,c
  6082  00186C  ECA6  F009         	call	_TFT_DrawString	;wreg free
  6083  001870  0012               	return		;funcret
  6084  001872                     __end_of_printLine:
  6085                           	opt callstack 0
  6086                           
  6087 ;; *************** function _TFT_DrawString *****************
  6088 ;; Defined at:
  6089 ;;		line 213 in file "TFT.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  x               2   62[COMRAM] unsigned int 
  6092 ;;  y               2   64[COMRAM] unsigned int 
  6093 ;;  str             2   66[COMRAM] PTR const unsigned char 
  6094 ;;		 -> A6_SpeedAutoDetect@zzzz(32), STR_24(19), EUSART_RX.line(32), STR_15(28), 
  6095 ;;		 -> STR_14(11), Ecg_ProcessHeartRate@heartrateString(5), EUSART_RX(100), loop@response_154(32), 
  6096 ;;		 -> STR_10(12), loop@response(32), STR_7(8), STR_6(13), 
  6097 ;;		 -> STR_5(11), STR_4(23), STR_3(6), STR_2(5), 
  6098 ;;		 -> STR_1(13), 
  6099 ;;  color           2   68[COMRAM] unsigned int 
  6100 ;;  bg              2   70[COMRAM] unsigned int 
  6101 ;;  size            1   72[COMRAM] unsigned char 
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;		None
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  1    wreg      void 
  6106 ;; Registers used:
  6107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6113 ;;      Params:        11       0       0       0       0       0       0       0       0
  6114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6116 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6117 ;;Total ram usage:       11 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    7
  6120 ;; This function calls:
  6121 ;;		_TFT_DrawChar
  6122 ;; This function is called by:
  6123 ;;		_printLine
  6124 ;;		_Ecg_Background_Leads_Ok
  6125 ;;		_Ecg_Background_Leads_Failure
  6126 ;;		_Ecg_ProcessHeartRate
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text22
  6131  00134C                     __ptext22:
  6132                           	opt callstack 0
  6133  00134C                     _TFT_DrawString:
  6134                           	opt callstack 21
  6135  00134C                     
  6136                           ;TFT.c: 214: while(*str) {
  6137  00134C  EFD5  F009         	goto	l4066
  6138  001350                     l4060:
  6139                           
  6140                           ;TFT.c: 215: TFT_DrawChar(x, y, *str, color, bg, size);
  6141  001350  C03F  F02A         	movff	TFT_DrawString@x,TFT_DrawChar@x
  6142  001354  C040  F02B         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  6143  001358  C041  F02C         	movff	TFT_DrawString@y,TFT_DrawChar@y
  6144  00135C  C042  F02D         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  6145  001360  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  6146  001364  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  6147  001368  6AF8               	clrf	tblptru,c
  6148  00136A  0E07               	movlw	(high __ramtop+-1)
  6149  00136C  64F7               	cpfsgt	tblptrh,c
  6150  00136E  D003               	bra	u2907
  6151  001370  0008               	tblrd		*
  6152  001372  50F5               	movf	tablat,w,c
  6153  001374  D005               	bra	u2900
  6154  001376                     u2907:
  6155  001376  CFF6 FFE9          	movff	tblptrl,fsr0l
  6156  00137A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6157  00137E  50EF               	movf	indf0,w,c
  6158  001380                     u2900:
  6159  001380  6E2E               	movwf	TFT_DrawChar@c^0,c
  6160  001382  C045  F02F         	movff	TFT_DrawString@color,TFT_DrawChar@color
  6161  001386  C046  F030         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  6162  00138A  C047  F031         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  6163  00138E  C048  F032         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  6164  001392  C049  F033         	movff	TFT_DrawString@size,TFT_DrawChar@size
  6165  001396  ECC9  F003         	call	_TFT_DrawChar	;wreg free
  6166  00139A                     
  6167                           ;TFT.c: 216: y -= (6 * size);
  6168  00139A  5049               	movf	TFT_DrawString@size^0,w,c
  6169  00139C  0D06               	mullw	6
  6170  00139E  50F3               	movf	243,w,c
  6171  0013A0  5E41               	subwf	TFT_DrawString@y^0,f,c
  6172  0013A2  50F4               	movf	244,w,c
  6173  0013A4  5A42               	subwfb	(TFT_DrawString@y+1)^0,f,c
  6174  0013A6                     
  6175                           ;TFT.c: 217: str++;
  6176  0013A6  4A43               	infsnz	TFT_DrawString@str^0,f,c
  6177  0013A8  2A44               	incf	(TFT_DrawString@str+1)^0,f,c
  6178  0013AA                     l4066:
  6179  0013AA  C043  FFF6         	movff	TFT_DrawString@str,tblptrl
  6180  0013AE  C044  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  6181  0013B2  6AF8               	clrf	tblptru,c
  6182  0013B4  0E07               	movlw	(high __ramtop+-1)
  6183  0013B6  64F7               	cpfsgt	tblptrh,c
  6184  0013B8  D003               	bra	u2917
  6185  0013BA  0008               	tblrd		*
  6186  0013BC  50F5               	movf	tablat,w,c
  6187  0013BE  D005               	bra	u2910
  6188  0013C0                     u2917:
  6189  0013C0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6190  0013C4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6191  0013C8  50EF               	movf	indf0,w,c
  6192  0013CA                     u2910:
  6193  0013CA  0900               	iorlw	0
  6194  0013CC  A4D8               	btfss	status,2,c
  6195  0013CE  EFEB  F009         	goto	u2921
  6196  0013D2  EFED  F009         	goto	u2920
  6197  0013D6                     u2921:
  6198  0013D6  EFA8  F009         	goto	l4060
  6199  0013DA                     u2920:
  6200  0013DA  0012               	return		;funcret
  6201  0013DC                     __end_of_TFT_DrawString:
  6202                           	opt callstack 0
  6203                           
  6204 ;; *************** function _TFT_DrawChar *****************
  6205 ;; Defined at:
  6206 ;;		line 192 in file "TFT.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  x               2   41[COMRAM] unsigned int 
  6209 ;;  y               2   43[COMRAM] unsigned int 
  6210 ;;  c               1   45[COMRAM] unsigned char 
  6211 ;;  color           2   46[COMRAM] unsigned int 
  6212 ;;  bg              2   48[COMRAM] unsigned int 
  6213 ;;  size            1   50[COMRAM] unsigned char 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  j               1   60[COMRAM] char 
  6216 ;;  line            1   55[COMRAM] unsigned char 
  6217 ;;  i               1   61[COMRAM] char 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  1    wreg      void 
  6220 ;; Registers used:
  6221 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6227 ;;      Params:        10       0       0       0       0       0       0       0       0
  6228 ;;      Locals:         7       0       0       0       0       0       0       0       0
  6229 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6230 ;;      Totals:        21       0       0       0       0       0       0       0       0
  6231 ;;Total ram usage:       21 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:    6
  6234 ;; This function calls:
  6235 ;;		_TFT_DrawFillRect
  6236 ;;		_TFT_DrawPixel
  6237 ;;		___wmul
  6238 ;; This function is called by:
  6239 ;;		_TFT_DrawString
  6240 ;; This function uses a non-reentrant model
  6241 ;;
  6242                           
  6243                           	psect	text23
  6244  000792                     __ptext23:
  6245                           	opt callstack 0
  6246  000792                     _TFT_DrawChar:
  6247                           	opt callstack 21
  6248  000792                     
  6249                           ;TFT.c: 193: for(int8_t i=0; i<5; i++ ) {
  6250  000792  0E00               	movlw	0
  6251  000794  6E3E               	movwf	TFT_DrawChar@i^0,c
  6252  000796                     l3958:
  6253                           
  6254                           ;TFT.c: 194: uint8_t line = TFT_Font[c * 5 + i];
  6255  000796  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  6256  00079A  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  6257  00079C  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  6258  00079E  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  6259  0007A0  502E               	movf	TFT_DrawChar@c^0,w,c
  6260  0007A2  0D05               	mullw	5
  6261  0007A4  0E0F               	movlw	low _TFT_Font
  6262  0007A6  6E36               	movwf	(??_TFT_DrawChar+2)^0,c
  6263  0007A8  0E59               	movlw	high _TFT_Font
  6264  0007AA  6E37               	movwf	(??_TFT_DrawChar+3)^0,c
  6265  0007AC  50F3               	movf	243,w,c
  6266  0007AE  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  6267  0007B0  50F4               	movf	244,w,c
  6268  0007B2  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  6269  0007B4  5034               	movf	??_TFT_DrawChar^0,w,c
  6270  0007B6  2636               	addwf	(??_TFT_DrawChar+2)^0,f,c
  6271  0007B8  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  6272  0007BA  2237               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  6273  0007BC  C036  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  6274  0007C0  C037  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  6275  0007C4                     	if	0	;tblptru may be non-zero
  6276  0007C4                     	endif
  6277  0007C4                     	if	0	;tblptru may be non-zero
  6278  0007C4                     	endif
  6279  0007C4  0008               	tblrd		*
  6280  0007C6  CFF5 F038          	movff	tablat,TFT_DrawChar@line
  6281  0007CA                     
  6282                           ;TFT.c: 195: for(int8_t j=0; j<8; j++, line >>= 1) {
  6283  0007CA  0E00               	movlw	0
  6284  0007CC  6E3D               	movwf	TFT_DrawChar@j^0,c
  6285  0007CE                     l266:
  6286                           
  6287                           ;TFT.c: 196: if(line & 1) {
  6288  0007CE  A038               	btfss	TFT_DrawChar@line^0,0,c
  6289  0007D0  EFEC  F003         	goto	u2731
  6290  0007D4  EFEE  F003         	goto	u2730
  6291  0007D8                     u2731:
  6292  0007D8  EF47  F004         	goto	l3972
  6293  0007DC                     u2730:
  6294  0007DC                     
  6295                           ;TFT.c: 197: if(size == 1) {
  6296  0007DC  0433               	decf	TFT_DrawChar@size^0,w,c
  6297  0007DE  A4D8               	btfss	status,2,c
  6298  0007E0  EFF4  F003         	goto	u2741
  6299  0007E4  EFF6  F003         	goto	u2740
  6300  0007E8                     u2741:
  6301  0007E8  EF11  F004         	goto	l3970
  6302  0007EC                     u2740:
  6303  0007EC                     
  6304                           ;TFT.c: 198: TFT_DrawPixel((x + j), (y - i), color);
  6305  0007EC  502A               	movf	TFT_DrawChar@x^0,w,c
  6306  0007EE  243D               	addwf	TFT_DrawChar@j^0,w,c
  6307  0007F0  6E0D               	movwf	TFT_DrawPixel@x^0,c
  6308  0007F2  0E00               	movlw	0
  6309  0007F4  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  6310  0007F6  0EFF               	movlw	255
  6311  0007F8  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6312  0007FA  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  6313  0007FC  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  6314  000800  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  6315  000802  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  6316  000804  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  6317  000806  5034               	movf	??_TFT_DrawChar^0,w,c
  6318  000808  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  6319  00080A  6E0F               	movwf	TFT_DrawPixel@y^0,c
  6320  00080C  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  6321  00080E  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  6322  000810  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  6323  000812  C02F  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  6324  000816  C030  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  6325  00081A  EC67  F00D         	call	_TFT_DrawPixel	;wreg free
  6326                           
  6327                           ;TFT.c: 199: } else {
  6328  00081E  EFAA  F004         	goto	l3980
  6329  000822                     l3970:
  6330                           
  6331                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  6332  000822  503D               	movf	TFT_DrawChar@j^0,w,c
  6333  000824  6E05               	movwf	___wmul@multiplier^0,c
  6334  000826  6A06               	clrf	(___wmul@multiplier+1)^0,c
  6335  000828  BE05               	btfsc	___wmul@multiplier^0,7,c
  6336  00082A  0606               	decf	(___wmul@multiplier+1)^0,f,c
  6337  00082C  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6338  000830  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  6339  000832  EC28  F00E         	call	___wmul	;wreg free
  6340  000836  502A               	movf	TFT_DrawChar@x^0,w,c
  6341  000838  2405               	addwf	?___wmul^0,w,c
  6342  00083A  6E39               	movwf	_TFT_DrawChar$2002^0,c
  6343  00083C  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  6344  00083E  2006               	addwfc	(?___wmul+1)^0,w,c
  6345  000840  6E3A               	movwf	(_TFT_DrawChar$2002+1)^0,c
  6346                           
  6347                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  6348  000842  503E               	movf	TFT_DrawChar@i^0,w,c
  6349  000844  6E05               	movwf	___wmul@multiplier^0,c
  6350  000846  6A06               	clrf	(___wmul@multiplier+1)^0,c
  6351  000848  BE05               	btfsc	___wmul@multiplier^0,7,c
  6352  00084A  0606               	decf	(___wmul@multiplier+1)^0,f,c
  6353  00084C  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6354  000850  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  6355  000852  EC28  F00E         	call	___wmul	;wreg free
  6356  000856  5005               	movf	?___wmul^0,w,c
  6357  000858  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  6358  00085A  6E3B               	movwf	_TFT_DrawChar$2003^0,c
  6359  00085C  5006               	movf	(?___wmul+1)^0,w,c
  6360  00085E  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  6361  000860  6E3C               	movwf	(_TFT_DrawChar$2003+1)^0,c
  6362                           
  6363                           ;TFT.c: 200: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, color);
  6364  000862  C039  F01C         	movff	_TFT_DrawChar$2002,TFT_DrawFillRect@x
  6365  000866  C03A  F01D         	movff	_TFT_DrawChar$2002+1,TFT_DrawFillRect@x+1
  6366  00086A  C03B  F01E         	movff	_TFT_DrawChar$2003,TFT_DrawFillRect@y
  6367  00086E  C03C  F01F         	movff	_TFT_DrawChar$2003+1,TFT_DrawFillRect@y+1
  6368  000872  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6369  000876  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6370  000878  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6371  00087C  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6372  00087E  C02F  F024         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  6373  000882  C030  F025         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  6374  000886  ECED  F00A         	call	_TFT_DrawFillRect	;wreg free
  6375  00088A  EFAA  F004         	goto	l3980
  6376  00088E                     l3972:
  6377  00088E  502F               	movf	TFT_DrawChar@color^0,w,c
  6378  000890  1831               	xorwf	TFT_DrawChar@bg^0,w,c
  6379  000892  E109               	bnz	u2750
  6380  000894  5030               	movf	(TFT_DrawChar@color+1)^0,w,c
  6381  000896  1832               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  6382  000898  B4D8               	btfsc	status,2,c
  6383  00089A  EF51  F004         	goto	u2751
  6384  00089E  EF53  F004         	goto	u2750
  6385  0008A2                     u2751:
  6386  0008A2  EFAA  F004         	goto	l3980
  6387  0008A6                     u2750:
  6388  0008A6                     
  6389                           ;TFT.c: 203: if(size == 1) {
  6390  0008A6  0433               	decf	TFT_DrawChar@size^0,w,c
  6391  0008A8  A4D8               	btfss	status,2,c
  6392  0008AA  EF59  F004         	goto	u2761
  6393  0008AE  EF5B  F004         	goto	u2760
  6394  0008B2                     u2761:
  6395  0008B2  EF76  F004         	goto	l3978
  6396  0008B6                     u2760:
  6397  0008B6                     
  6398                           ;TFT.c: 204: TFT_DrawPixel((x + j), (y - i), bg);
  6399  0008B6  502A               	movf	TFT_DrawChar@x^0,w,c
  6400  0008B8  243D               	addwf	TFT_DrawChar@j^0,w,c
  6401  0008BA  6E0D               	movwf	TFT_DrawPixel@x^0,c
  6402  0008BC  0E00               	movlw	0
  6403  0008BE  BE3D               	btfsc	TFT_DrawChar@j^0,7,c
  6404  0008C0  0EFF               	movlw	255
  6405  0008C2  202B               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6406  0008C4  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  6407  0008C6  C03E  F034         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  6408  0008CA  6A35               	clrf	(??_TFT_DrawChar+1)^0,c
  6409  0008CC  BE34               	btfsc	??_TFT_DrawChar^0,7,c
  6410  0008CE  0635               	decf	(??_TFT_DrawChar+1)^0,f,c
  6411  0008D0  5034               	movf	??_TFT_DrawChar^0,w,c
  6412  0008D2  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  6413  0008D4  6E0F               	movwf	TFT_DrawPixel@y^0,c
  6414  0008D6  5035               	movf	(??_TFT_DrawChar+1)^0,w,c
  6415  0008D8  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  6416  0008DA  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  6417  0008DC  C031  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  6418  0008E0  C032  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  6419  0008E4  EC67  F00D         	call	_TFT_DrawPixel	;wreg free
  6420                           
  6421                           ;TFT.c: 205: } else {
  6422  0008E8  EFAA  F004         	goto	l3980
  6423  0008EC                     l3978:
  6424                           
  6425                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  6426  0008EC  503D               	movf	TFT_DrawChar@j^0,w,c
  6427  0008EE  6E05               	movwf	___wmul@multiplier^0,c
  6428  0008F0  6A06               	clrf	(___wmul@multiplier+1)^0,c
  6429  0008F2  BE05               	btfsc	___wmul@multiplier^0,7,c
  6430  0008F4  0606               	decf	(___wmul@multiplier+1)^0,f,c
  6431  0008F6  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6432  0008FA  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  6433  0008FC  EC28  F00E         	call	___wmul	;wreg free
  6434  000900  502A               	movf	TFT_DrawChar@x^0,w,c
  6435  000902  2405               	addwf	?___wmul^0,w,c
  6436  000904  6E39               	movwf	_TFT_DrawChar$2002^0,c
  6437  000906  502B               	movf	(TFT_DrawChar@x+1)^0,w,c
  6438  000908  2006               	addwfc	(?___wmul+1)^0,w,c
  6439  00090A  6E3A               	movwf	(_TFT_DrawChar$2002+1)^0,c
  6440                           
  6441                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  6442  00090C  503E               	movf	TFT_DrawChar@i^0,w,c
  6443  00090E  6E05               	movwf	___wmul@multiplier^0,c
  6444  000910  6A06               	clrf	(___wmul@multiplier+1)^0,c
  6445  000912  BE05               	btfsc	___wmul@multiplier^0,7,c
  6446  000914  0606               	decf	(___wmul@multiplier+1)^0,f,c
  6447  000916  C033  F007         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6448  00091A  6A08               	clrf	(___wmul@multiplicand+1)^0,c
  6449  00091C  EC28  F00E         	call	___wmul	;wreg free
  6450  000920  5005               	movf	?___wmul^0,w,c
  6451  000922  5C2C               	subwf	TFT_DrawChar@y^0,w,c
  6452  000924  6E3B               	movwf	_TFT_DrawChar$2003^0,c
  6453  000926  5006               	movf	(?___wmul+1)^0,w,c
  6454  000928  582D               	subwfb	(TFT_DrawChar@y+1)^0,w,c
  6455  00092A  6E3C               	movwf	(_TFT_DrawChar$2003+1)^0,c
  6456                           
  6457                           ;TFT.c: 206: TFT_DrawFillRect((x + j * size), (y - i * size), size, size, bg);
  6458  00092C  C039  F01C         	movff	_TFT_DrawChar$2002,TFT_DrawFillRect@x
  6459  000930  C03A  F01D         	movff	_TFT_DrawChar$2002+1,TFT_DrawFillRect@x+1
  6460  000934  C03B  F01E         	movff	_TFT_DrawChar$2003,TFT_DrawFillRect@y
  6461  000938  C03C  F01F         	movff	_TFT_DrawChar$2003+1,TFT_DrawFillRect@y+1
  6462  00093C  C033  F020         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6463  000940  6A21               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6464  000942  C033  F022         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6465  000946  6A23               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6466  000948  C031  F024         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  6467  00094C  C032  F025         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  6468  000950  ECED  F00A         	call	_TFT_DrawFillRect	;wreg free
  6469  000954                     l3980:
  6470  000954  2A3D               	incf	TFT_DrawChar@j^0,f,c
  6471  000956  90D8               	bcf	status,0,c
  6472  000958  3238               	rrcf	TFT_DrawChar@line^0,f,c
  6473  00095A  503D               	movf	TFT_DrawChar@j^0,w,c
  6474  00095C  0A80               	xorlw	128
  6475  00095E  0F78               	addlw	-136
  6476  000960  A0D8               	btfss	status,0,c
  6477  000962  EFB5  F004         	goto	u2771
  6478  000966  EFB7  F004         	goto	u2770
  6479  00096A                     u2771:
  6480  00096A  EFE7  F003         	goto	l266
  6481  00096E                     u2770:
  6482  00096E  2A3E               	incf	TFT_DrawChar@i^0,f,c
  6483  000970  503E               	movf	TFT_DrawChar@i^0,w,c
  6484  000972  0A80               	xorlw	128
  6485  000974  0F7B               	addlw	-133
  6486  000976  A0D8               	btfss	status,0,c
  6487  000978  EFC0  F004         	goto	u2781
  6488  00097C  EFC2  F004         	goto	u2780
  6489  000980                     u2781:
  6490  000980  EFCB  F003         	goto	l3958
  6491  000984                     u2780:
  6492  000984  0012               	return		;funcret
  6493  000986                     __end_of_TFT_DrawChar:
  6494                           	opt callstack 0
  6495                           
  6496 ;; *************** function _TFT_DrawPixel *****************
  6497 ;; Defined at:
  6498 ;;		line 94 in file "TFT.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  x               2   12[COMRAM] unsigned int 
  6501 ;;  y               2   14[COMRAM] unsigned int 
  6502 ;;  color           2   16[COMRAM] unsigned int 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      void 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, cstack
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6514 ;;      Params:         6       0       0       0       0       0       0       0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6517 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6518 ;;Total ram usage:        6 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    3
  6521 ;; This function calls:
  6522 ;;		_TFT_WriteRegister
  6523 ;; This function is called by:
  6524 ;;		_TFT_DrawLine
  6525 ;;		_TFT_DrawChar
  6526 ;;		_TFT_DrawBitmap
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text24
  6531  001ACE                     __ptext24:
  6532                           	opt callstack 0
  6533  001ACE                     _TFT_DrawPixel:
  6534                           	opt callstack 23
  6535  001ACE                     
  6536                           ;TFT.c: 95: TFT_WriteRegister(0x0200, x);
  6537  001ACE  0E02               	movlw	2
  6538  001AD0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6539  001AD2  0E00               	movlw	0
  6540  001AD4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6541  001AD6  C00D  F007         	movff	TFT_DrawPixel@x,TFT_WriteRegister@data
  6542  001ADA  C00E  F008         	movff	TFT_DrawPixel@x+1,TFT_WriteRegister@data+1
  6543  001ADE  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6544                           
  6545                           ;TFT.c: 96: TFT_WriteRegister(0x0201, y);
  6546  001AE2  0E02               	movlw	2
  6547  001AE4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6548  001AE6  0E01               	movlw	1
  6549  001AE8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6550  001AEA  C00F  F007         	movff	TFT_DrawPixel@y,TFT_WriteRegister@data
  6551  001AEE  C010  F008         	movff	TFT_DrawPixel@y+1,TFT_WriteRegister@data+1
  6552  001AF2  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6553                           
  6554                           ;TFT.c: 97: TFT_WriteRegister(0x0202, color);
  6555  001AF6  0E02               	movlw	2
  6556  001AF8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6557  001AFA  0E02               	movlw	2
  6558  001AFC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6559  001AFE  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  6560  001B02  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  6561  001B06  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6562  001B0A  0012               	return		;funcret
  6563  001B0C                     __end_of_TFT_DrawPixel:
  6564                           	opt callstack 0
  6565                           
  6566 ;; *************** function _TFT_DrawFillRect *****************
  6567 ;; Defined at:
  6568 ;;		line 138 in file "TFT.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  x               2   27[COMRAM] unsigned int 
  6571 ;;  y               2   29[COMRAM] unsigned int 
  6572 ;;  w               2   31[COMRAM] unsigned int 
  6573 ;;  h               2   33[COMRAM] unsigned int 
  6574 ;;  color           2   35[COMRAM] unsigned int 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;                  1    wreg      void 
  6579 ;; Registers used:
  6580 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6586 ;;      Params:        10       0       0       0       0       0       0       0       0
  6587 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6588 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6589 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6590 ;;Total ram usage:       14 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:    5
  6593 ;; This function calls:
  6594 ;;		_TFT_Flood
  6595 ;;		_TFT_FullScreen
  6596 ;;		_TFT_SetAddrWindow
  6597 ;;		___wmul
  6598 ;; This function is called by:
  6599 ;;		_printLine
  6600 ;;		_TFT_DrawChar
  6601 ;;		_Ecg_ProcessHeartbeat
  6602 ;;		_Ecg_Draw
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606                           	psect	text25
  6607  0015DA                     __ptext25:
  6608                           	opt callstack 0
  6609  0015DA                     _TFT_DrawFillRect:
  6610                           	opt callstack 21
  6611  0015DA                     
  6612                           ;TFT.c: 139: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h -1));
  6613  0015DA  C01C  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  6614  0015DE  C01D  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  6615  0015E2  C01E  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  6616  0015E6  C01F  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  6617  0015EA  5020               	movf	TFT_DrawFillRect@w^0,w,c
  6618  0015EC  241C               	addwf	TFT_DrawFillRect@x^0,w,c
  6619  0015EE  6E26               	movwf	??_TFT_DrawFillRect^0,c
  6620  0015F0  5021               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  6621  0015F2  201D               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  6622  0015F4  6E27               	movwf	(??_TFT_DrawFillRect+1)^0,c
  6623  0015F6  0EFF               	movlw	255
  6624  0015F8  2426               	addwf	??_TFT_DrawFillRect^0,w,c
  6625  0015FA  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  6626  0015FC  0EFF               	movlw	255
  6627  0015FE  2027               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  6628  001600  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  6629  001602  5022               	movf	TFT_DrawFillRect@h^0,w,c
  6630  001604  241E               	addwf	TFT_DrawFillRect@y^0,w,c
  6631  001606  6E28               	movwf	(??_TFT_DrawFillRect+2)^0,c
  6632  001608  5023               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  6633  00160A  201F               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  6634  00160C  6E29               	movwf	(??_TFT_DrawFillRect+3)^0,c
  6635  00160E  0EFF               	movlw	255
  6636  001610  2428               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  6637  001612  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  6638  001614  0EFF               	movlw	255
  6639  001616  2029               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  6640  001618  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  6641  00161A  EC74  F00A         	call	_TFT_SetAddrWindow	;wreg free
  6642  00161E                     
  6643                           ;TFT.c: 140: TFT_Flood(color, (w * h));
  6644  00161E  C024  F00D         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  6645  001622  C025  F00E         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  6646  001626  C020  F005         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  6647  00162A  C021  F006         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  6648  00162E  C022  F007         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  6649  001632  C023  F008         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  6650  001636  EC28  F00E         	call	___wmul	;wreg free
  6651  00163A  C005  F00F         	movff	?___wmul,TFT_Flood@len
  6652  00163E  C006  F010         	movff	?___wmul+1,TFT_Flood@len+1
  6653  001642  6A11               	clrf	(TFT_Flood@len+2)^0,c
  6654  001644  6A12               	clrf	(TFT_Flood@len+3)^0,c
  6655  001646  ECB7  F005         	call	_TFT_Flood	;wreg free
  6656  00164A                     
  6657                           ;TFT.c: 141: TFT_FullScreen();
  6658  00164A  EC3B  F00E         	call	_TFT_FullScreen	;wreg free
  6659  00164E  0012               	return		;funcret
  6660  001650                     __end_of_TFT_DrawFillRect:
  6661                           	opt callstack 0
  6662                           
  6663 ;; *************** function ___wmul *****************
  6664 ;; Defined at:
  6665 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  multiplier      2    4[COMRAM] unsigned int 
  6668 ;;  multiplicand    2    6[COMRAM] unsigned int 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  product         2    8[COMRAM] unsigned int 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  2    4[COMRAM] unsigned int 
  6673 ;; Registers used:
  6674 ;;		wreg, status,2, status,0, prodl, prodh
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6680 ;;      Params:         4       0       0       0       0       0       0       0       0
  6681 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6683 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6684 ;;Total ram usage:        6 bytes
  6685 ;; Hardware stack levels used:    1
  6686 ;; Hardware stack levels required when called:    2
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_TFT_DrawFillRect
  6691 ;;		_TFT_DrawChar
  6692 ;;		_sprintf
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text26
  6697  001C50                     __ptext26:
  6698                           	opt callstack 0
  6699  001C50                     ___wmul:
  6700                           	opt callstack 24
  6701  001C50  5005               	movf	___wmul@multiplier^0,w,c
  6702  001C52  0207               	mulwf	___wmul@multiplicand^0,c
  6703  001C54  CFF3 F009          	movff	prodl,___wmul@product
  6704  001C58  CFF4 F00A          	movff	prodh,___wmul@product+1
  6705  001C5C  5005               	movf	___wmul@multiplier^0,w,c
  6706  001C5E  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  6707  001C60  50F3               	movf	243,w,c
  6708  001C62  260A               	addwf	(___wmul@product+1)^0,f,c
  6709  001C64  5006               	movf	(___wmul@multiplier+1)^0,w,c
  6710  001C66  0207               	mulwf	___wmul@multiplicand^0,c
  6711  001C68  50F3               	movf	243,w,c
  6712  001C6A  260A               	addwf	(___wmul@product+1)^0,f,c
  6713  001C6C  C009  F005         	movff	___wmul@product,?___wmul
  6714  001C70  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  6715  001C74  0012               	return		;funcret
  6716  001C76                     __end_of___wmul:
  6717                           	opt callstack 0
  6718                           
  6719 ;; *************** function _TFT_FullScreen *****************
  6720 ;; Defined at:
  6721 ;;		line 68 in file "TFT.c"
  6722 ;; Parameters:    Size  Location     Type
  6723 ;;		None
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;		None
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, status,2, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0
  6736 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6737 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6738 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6739 ;;Total ram usage:        0 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; Hardware stack levels required when called:    4
  6742 ;; This function calls:
  6743 ;;		_TFT_SetAddrWindow
  6744 ;; This function is called by:
  6745 ;;		_TFT_Init
  6746 ;;		_TFT_DrawFillRect
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text27
  6751  001C76                     __ptext27:
  6752                           	opt callstack 0
  6753  001C76                     _TFT_FullScreen:
  6754                           	opt callstack 21
  6755  001C76                     
  6756                           ;TFT.c: 69: TFT_SetAddrWindow(0, 0, 240 - 1, 400 - 1);
  6757  001C76  0E00               	movlw	0
  6758  001C78  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  6759  001C7A  0E00               	movlw	0
  6760  001C7C  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  6761  001C7E  0E00               	movlw	0
  6762  001C80  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  6763  001C82  0E00               	movlw	0
  6764  001C84  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  6765  001C86  0E00               	movlw	0
  6766  001C88  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  6767  001C8A  0EEF               	movlw	239
  6768  001C8C  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  6769  001C8E  0E01               	movlw	1
  6770  001C90  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  6771  001C92  0E8F               	movlw	143
  6772  001C94  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  6773  001C96  EC74  F00A         	call	_TFT_SetAddrWindow	;wreg free
  6774  001C9A  0012               	return		;funcret
  6775  001C9C                     __end_of_TFT_FullScreen:
  6776                           	opt callstack 0
  6777                           
  6778 ;; *************** function _TFT_SetAddrWindow *****************
  6779 ;; Defined at:
  6780 ;;		line 56 in file "TFT.c"
  6781 ;; Parameters:    Size  Location     Type
  6782 ;;  x1              2   12[COMRAM] unsigned int 
  6783 ;;  y1              2   14[COMRAM] unsigned int 
  6784 ;;  x2              2   16[COMRAM] unsigned int 
  6785 ;;  y2              2   18[COMRAM] unsigned int 
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;		None
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  1    wreg      void 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6797 ;;      Params:         8       0       0       0       0       0       0       0       0
  6798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6800 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6801 ;;Total ram usage:        8 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    3
  6804 ;; This function calls:
  6805 ;;		_TFT_WriteRegister
  6806 ;; This function is called by:
  6807 ;;		_TFT_FullScreen
  6808 ;;		_TFT_DrawFillRect
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text28
  6813  0014E8                     __ptext28:
  6814                           	opt callstack 0
  6815  0014E8                     _TFT_SetAddrWindow:
  6816                           	opt callstack 22
  6817  0014E8                     
  6818                           ;TFT.c: 58: TFT_WriteRegister(0x0210, x1);
  6819  0014E8  0E02               	movlw	2
  6820  0014EA  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6821  0014EC  0E10               	movlw	16
  6822  0014EE  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6823  0014F0  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  6824  0014F4  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  6825  0014F8  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6826                           
  6827                           ;TFT.c: 59: TFT_WriteRegister(0x0211, x2);
  6828  0014FC  0E02               	movlw	2
  6829  0014FE  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6830  001500  0E11               	movlw	17
  6831  001502  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6832  001504  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  6833  001508  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  6834  00150C  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6835                           
  6836                           ;TFT.c: 60: TFT_WriteRegister(0x0212, y1);
  6837  001510  0E02               	movlw	2
  6838  001512  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6839  001514  0E12               	movlw	18
  6840  001516  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6841  001518  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  6842  00151C  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  6843  001520  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6844                           
  6845                           ;TFT.c: 61: TFT_WriteRegister(0x0213, y2);
  6846  001524  0E02               	movlw	2
  6847  001526  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6848  001528  0E13               	movlw	19
  6849  00152A  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6850  00152C  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  6851  001530  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  6852  001534  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6853                           
  6854                           ;TFT.c: 64: TFT_WriteRegister(0x0200, x1);
  6855  001538  0E02               	movlw	2
  6856  00153A  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6857  00153C  0E00               	movlw	0
  6858  00153E  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6859  001540  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  6860  001544  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  6861  001548  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6862                           
  6863                           ;TFT.c: 65: TFT_WriteRegister(0x0201, y2);
  6864  00154C  0E02               	movlw	2
  6865  00154E  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6866  001550  0E01               	movlw	1
  6867  001552  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6868  001554  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  6869  001558  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  6870  00155C  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6871  001560  0012               	return		;funcret
  6872  001562                     __end_of_TFT_SetAddrWindow:
  6873                           	opt callstack 0
  6874                           
  6875 ;; *************** function _TFT_Flood *****************
  6876 ;; Defined at:
  6877 ;;		line 144 in file "TFT.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  color           2   12[COMRAM] unsigned int 
  6880 ;;  len             4   14[COMRAM] unsigned long 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  blocks          2   22[COMRAM] unsigned int 
  6883 ;;  color_lo        1   26[COMRAM] unsigned char 
  6884 ;;  color_hi        1   25[COMRAM] unsigned char 
  6885 ;;  i               1   24[COMRAM] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      void 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, status,0, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6895 ;;      Params:         6       0       0       0       0       0       0       0       0
  6896 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6897 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6898 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6899 ;;Total ram usage:       15 bytes
  6900 ;; Hardware stack levels used:    1
  6901 ;; Hardware stack levels required when called:    3
  6902 ;; This function calls:
  6903 ;;		_TFT_WriteRegister
  6904 ;; This function is called by:
  6905 ;;		_TFT_DrawFillRect
  6906 ;;		_TFT_FillScreen
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text29
  6911  000B6E                     __ptext29:
  6912                           	opt callstack 0
  6913  000B6E                     _TFT_Flood:
  6914                           	opt callstack 22
  6915  000B6E                     
  6916                           ;TFT.c: 145: uint16_t blocks;;TFT.c: 146: uint8_t i;;TFT.c: 147: uint8_t color_hi = colo
      +                          r >> 8;
  6917  000B6E  500E               	movf	(TFT_Flood@color+1)^0,w,c
  6918  000B70  6E1A               	movwf	TFT_Flood@color_hi^0,c
  6919  000B72                     
  6920                           ;TFT.c: 148: uint8_t color_lo = color;
  6921  000B72  C00D  F01B         	movff	TFT_Flood@color,TFT_Flood@color_lo
  6922  000B76                     
  6923                           ;TFT.c: 151: TFT_WriteRegister(0x0202, color);
  6924  000B76  0E02               	movlw	2
  6925  000B78  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  6926  000B7A  0E02               	movlw	2
  6927  000B7C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  6928  000B7E  C00D  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  6929  000B82  C00E  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  6930  000B86  EC04  F00D         	call	_TFT_WriteRegister	;wreg free
  6931  000B8A                     
  6932                           ;TFT.c: 152: len--;
  6933  000B8A  060F               	decf	TFT_Flood@len^0,f,c
  6934  000B8C  0E00               	movlw	0
  6935  000B8E  5A10               	subwfb	(TFT_Flood@len+1)^0,f,c
  6936  000B90  5A11               	subwfb	(TFT_Flood@len+2)^0,f,c
  6937  000B92  5A12               	subwfb	(TFT_Flood@len+3)^0,f,c
  6938  000B94                     
  6939                           ;TFT.c: 156: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  6940  000B94  9082               	bcf	130,0,c	;volatile
  6941  000B96  F000               	nop		;# 
  6942  000B98                     
  6943                           ;TFT.c: 157: blocks = (uint16_t)(len / 4);
  6944  000B98  C00F  F013         	movff	TFT_Flood@len,??_TFT_Flood
  6945  000B9C  C010  F014         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  6946  000BA0  C011  F015         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  6947  000BA4  C012  F016         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  6948  000BA8  0E03               	movlw	3
  6949  000BAA  EFDC  F005         	goto	u2650
  6950  000BAE                     u2655:
  6951  000BAE  90D8               	bcf	status,0,c
  6952  000BB0  3216               	rrcf	(??_TFT_Flood+3)^0,f,c
  6953  000BB2  3215               	rrcf	(??_TFT_Flood+2)^0,f,c
  6954  000BB4  3214               	rrcf	(??_TFT_Flood+1)^0,f,c
  6955  000BB6  3213               	rrcf	??_TFT_Flood^0,f,c
  6956  000BB8                     u2650:
  6957  000BB8  2EE8               	decfsz	wreg,f,c
  6958  000BBA  EFD7  F005         	goto	u2655
  6959  000BBE  C013  F017         	movff	??_TFT_Flood,TFT_Flood@blocks
  6960  000BC2  C014  F018         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  6961  000BC6                     
  6962                           ;TFT.c: 158: if(color_hi == color_lo) {
  6963  000BC6  501B               	movf	TFT_Flood@color_lo^0,w,c
  6964  000BC8  181A               	xorwf	TFT_Flood@color_hi^0,w,c
  6965  000BCA  A4D8               	btfss	status,2,c
  6966  000BCC  EFEA  F005         	goto	u2661
  6967  000BD0  EFEC  F005         	goto	u2660
  6968  000BD4                     u2661:
  6969  000BD4  EF51  F006         	goto	l3920
  6970  000BD8                     u2660:
  6971  000BD8  EF06  F006         	goto	l3914
  6972  000BDC                     l243:
  6973                           
  6974                           ;TFT.c: 160: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6975  000BDC  9A80               	bcf	128,5,c	;volatile
  6976  000BDE  F000               	nop		;# 
  6977  000BE0  8A80               	bsf	128,5,c	;volatile
  6978  000BE2  9A80               	bcf	128,5,c	;volatile
  6979  000BE4  F000               	nop		;# 
  6980  000BE6  8A80               	bsf	128,5,c	;volatile
  6981                           
  6982                           ;TFT.c: 161: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6983  000BE8  9A80               	bcf	128,5,c	;volatile
  6984  000BEA  F000               	nop		;# 
  6985  000BEC  8A80               	bsf	128,5,c	;volatile
  6986  000BEE  9A80               	bcf	128,5,c	;volatile
  6987  000BF0  F000               	nop		;# 
  6988  000BF2  8A80               	bsf	128,5,c	;volatile
  6989                           
  6990                           ;TFT.c: 162: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6991  000BF4  9A80               	bcf	128,5,c	;volatile
  6992  000BF6  F000               	nop		;# 
  6993  000BF8  8A80               	bsf	128,5,c	;volatile
  6994  000BFA  9A80               	bcf	128,5,c	;volatile
  6995  000BFC  F000               	nop		;# 
  6996  000BFE  8A80               	bsf	128,5,c	;volatile
  6997                           
  6998                           ;TFT.c: 163: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  6999  000C00  9A80               	bcf	128,5,c	;volatile
  7000  000C02  F000               	nop		;# 
  7001  000C04  8A80               	bsf	128,5,c	;volatile
  7002  000C06  9A80               	bcf	128,5,c	;volatile
  7003  000C08  F000               	nop		;# 
  7004  000C0A  8A80               	bsf	128,5,c	;volatile
  7005  000C0C                     l3914:
  7006  000C0C  0617               	decf	TFT_Flood@blocks^0,f,c
  7007  000C0E  A0D8               	btfss	status,0,c
  7008  000C10  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  7009  000C12  2817               	incf	TFT_Flood@blocks^0,w,c
  7010  000C14  E106               	bnz	u2671
  7011  000C16  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  7012  000C18  A4D8               	btfss	status,2,c
  7013  000C1A  EF11  F006         	goto	u2671
  7014  000C1E  EF13  F006         	goto	u2670
  7015  000C22                     u2671:
  7016  000C22  EFEE  F005         	goto	l243
  7017  000C26                     u2670:
  7018  000C26                     
  7019                           ;TFT.c: 164: };TFT.c: 165: for(i = (uint8_t)len & 3; i--; ) {
  7020  000C26  500F               	movf	TFT_Flood@len^0,w,c
  7021  000C28  0B03               	andlw	3
  7022  000C2A  6E19               	movwf	TFT_Flood@i^0,c
  7023  000C2C  EF1E  F006         	goto	l3918
  7024  000C30                     l246:
  7025                           
  7026                           ;TFT.c: 166: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  7027  000C30  9A80               	bcf	128,5,c	;volatile
  7028  000C32  F000               	nop		;# 
  7029  000C34  8A80               	bsf	128,5,c	;volatile
  7030  000C36  9A80               	bcf	128,5,c	;volatile
  7031  000C38  F000               	nop		;# 
  7032  000C3A  8A80               	bsf	128,5,c	;volatile
  7033  000C3C                     l3918:
  7034  000C3C  0619               	decf	TFT_Flood@i^0,f,c
  7035  000C3E  2819               	incf	TFT_Flood@i^0,w,c
  7036  000C40  A4D8               	btfss	status,2,c
  7037  000C42  EF25  F006         	goto	u2681
  7038  000C46  EF27  F006         	goto	u2680
  7039  000C4A                     u2681:
  7040  000C4A  EF18  F006         	goto	l246
  7041  000C4E                     u2680:
  7042  000C4E  EF76  F006         	goto	l248
  7043  000C52                     l250:
  7044                           
  7045                           ;TFT.c: 170: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  7046  000C52  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  7047  000C56  9A80               	bcf	128,5,c	;volatile
  7048  000C58  F000               	nop		;# 
  7049  000C5A  8A80               	bsf	128,5,c	;volatile
  7050  000C5C  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  7051  000C60  9A80               	bcf	128,5,c	;volatile
  7052  000C62  F000               	nop		;# 
  7053  000C64  8A80               	bsf	128,5,c	;volatile
  7054                           
  7055                           ;TFT.c: 171: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  7056  000C66  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  7057  000C6A  9A80               	bcf	128,5,c	;volatile
  7058  000C6C  F000               	nop		;# 
  7059  000C6E  8A80               	bsf	128,5,c	;volatile
  7060  000C70  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  7061  000C74  9A80               	bcf	128,5,c	;volatile
  7062  000C76  F000               	nop		;# 
  7063  000C78  8A80               	bsf	128,5,c	;volatile
  7064                           
  7065                           ;TFT.c: 172: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  7066  000C7A  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  7067  000C7E  9A80               	bcf	128,5,c	;volatile
  7068  000C80  F000               	nop		;# 
  7069  000C82  8A80               	bsf	128,5,c	;volatile
  7070  000C84  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  7071  000C88  9A80               	bcf	128,5,c	;volatile
  7072  000C8A  F000               	nop		;# 
  7073  000C8C  8A80               	bsf	128,5,c	;volatile
  7074                           
  7075                           ;TFT.c: 173: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  7076  000C8E  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  7077  000C92  9A80               	bcf	128,5,c	;volatile
  7078  000C94  F000               	nop		;# 
  7079  000C96  8A80               	bsf	128,5,c	;volatile
  7080  000C98  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  7081  000C9C  9A80               	bcf	128,5,c	;volatile
  7082  000C9E  F000               	nop		;# 
  7083  000CA0  8A80               	bsf	128,5,c	;volatile
  7084  000CA2                     l3920:
  7085  000CA2  0617               	decf	TFT_Flood@blocks^0,f,c
  7086  000CA4  A0D8               	btfss	status,0,c
  7087  000CA6  0618               	decf	(TFT_Flood@blocks+1)^0,f,c
  7088  000CA8  2817               	incf	TFT_Flood@blocks^0,w,c
  7089  000CAA  E106               	bnz	u2691
  7090  000CAC  2818               	incf	(TFT_Flood@blocks+1)^0,w,c
  7091  000CAE  A4D8               	btfss	status,2,c
  7092  000CB0  EF5C  F006         	goto	u2691
  7093  000CB4  EF5E  F006         	goto	u2690
  7094  000CB8                     u2691:
  7095  000CB8  EF29  F006         	goto	l250
  7096  000CBC                     u2690:
  7097  000CBC                     
  7098                           ;TFT.c: 174: };TFT.c: 175: for(i = (uint8_t)len & 3; i--; ) {
  7099  000CBC  500F               	movf	TFT_Flood@len^0,w,c
  7100  000CBE  0B03               	andlw	3
  7101  000CC0  6E19               	movwf	TFT_Flood@i^0,c
  7102  000CC2  EF6D  F006         	goto	l3924
  7103  000CC6                     l253:
  7104                           
  7105                           ;TFT.c: 176: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  7106  000CC6  C01A  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  7107  000CCA  9A80               	bcf	128,5,c	;volatile
  7108  000CCC  F000               	nop		;# 
  7109  000CCE  8A80               	bsf	128,5,c	;volatile
  7110  000CD0  C01B  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  7111  000CD4  9A80               	bcf	128,5,c	;volatile
  7112  000CD6  F000               	nop		;# 
  7113  000CD8  8A80               	bsf	128,5,c	;volatile
  7114  000CDA                     l3924:
  7115  000CDA  0619               	decf	TFT_Flood@i^0,f,c
  7116  000CDC  2819               	incf	TFT_Flood@i^0,w,c
  7117  000CDE  A4D8               	btfss	status,2,c
  7118  000CE0  EF74  F006         	goto	u2701
  7119  000CE4  EF76  F006         	goto	u2700
  7120  000CE8                     u2701:
  7121  000CE8  EF63  F006         	goto	l253
  7122  000CEC                     u2700:
  7123  000CEC                     l248:
  7124                           
  7125                           ;TFT.c: 177: };TFT.c: 178: };TFT.c: 179: PORTCbits.RC0 = 1;;
  7126  000CEC  8082               	bsf	130,0,c	;volatile
  7127  000CEE  0012               	return		;funcret
  7128  000CF0                     __end_of_TFT_Flood:
  7129                           	opt callstack 0
  7130                           
  7131 ;; *************** function _TFT_WriteRegister *****************
  7132 ;; Defined at:
  7133 ;;		line 12 in file "TFT.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  reg             2    4[COMRAM] unsigned int 
  7136 ;;  data            2    6[COMRAM] unsigned int 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;  l               1   11[COMRAM] unsigned char 
  7139 ;;  h               1   10[COMRAM] unsigned char 
  7140 ;;  l               1    9[COMRAM] unsigned char 
  7141 ;;  h               1    8[COMRAM] unsigned char 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      void 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7151 ;;      Params:         4       0       0       0       0       0       0       0       0
  7152 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7153 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7154 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7155 ;;Total ram usage:        8 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; Hardware stack levels required when called:    2
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_TFT_SetAddrWindow
  7162 ;;		_TFT_Init
  7163 ;;		_TFT_DrawPixel
  7164 ;;		_TFT_Flood
  7165 ;;		_TFT_FillScreen
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text30
  7170  001A08                     __ptext30:
  7171                           	opt callstack 0
  7172  001A08                     _TFT_WriteRegister:
  7173                           	opt callstack 23
  7174  001A08                     
  7175                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  7176  001A08  9082               	bcf	130,0,c	;volatile
  7177  001A0A  F000               	nop		;# 
  7178                           
  7179                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  7180  001A0C  9282               	bcf	130,1,c	;volatile
  7181  001A0E  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
  7182  001A10  6E09               	movwf	TFT_WriteRegister@h^0,c
  7183  001A12  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
  7184  001A16  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
  7185  001A1A  9A80               	bcf	128,5,c	;volatile
  7186  001A1C  F000               	nop		;# 
  7187  001A1E  8A80               	bsf	128,5,c	;volatile
  7188  001A20  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
  7189  001A24  9A80               	bcf	128,5,c	;volatile
  7190  001A26  F000               	nop		;# 
  7191  001A28  8A80               	bsf	128,5,c	;volatile
  7192  001A2A                     
  7193                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  7194  001A2A  8282               	bsf	130,1,c	;volatile
  7195  001A2C  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
  7196  001A2E  6E0B               	movwf	TFT_WriteRegister@h_712^0,c
  7197  001A30  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_713
  7198  001A34  C00B  FF81         	movff	TFT_WriteRegister@h_712,3969	;volatile
  7199  001A38  9A80               	bcf	128,5,c	;volatile
  7200  001A3A  F000               	nop		;# 
  7201  001A3C  8A80               	bsf	128,5,c	;volatile
  7202  001A3E  C00C  FF81         	movff	TFT_WriteRegister@l_713,3969	;volatile
  7203  001A42  9A80               	bcf	128,5,c	;volatile
  7204  001A44  F000               	nop		;# 
  7205  001A46  8A80               	bsf	128,5,c	;volatile
  7206  001A48                     
  7207                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
  7208  001A48  8082               	bsf	130,0,c	;volatile
  7209  001A4A  0012               	return		;funcret
  7210  001A4C                     __end_of_TFT_WriteRegister:
  7211                           	opt callstack 0
  7212                           
  7213 ;; *************** function _EUSART_SetSpeed *****************
  7214 ;; Defined at:
  7215 ;;		line 44 in file "eusart.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  speed           4   17[COMRAM] const unsigned long 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  tmp             4   25[COMRAM] unsigned long 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  1    wreg      void 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7229 ;;      Params:         4       0       0       0       0       0       0       0       0
  7230 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7231 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7232 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7233 ;;Total ram usage:       12 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    3
  7236 ;; This function calls:
  7237 ;;		___lldiv
  7238 ;; This function is called by:
  7239 ;;		_A6_SpeedSet
  7240 ;;		_A6_SpeedAutoDetect
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text31
  7245  001464                     __ptext31:
  7246                           	opt callstack 0
  7247  001464                     _EUSART_SetSpeed:
  7248                           	opt callstack 25
  7249  001464                     
  7250                           ;eusart.c: 45: TXSTAbits.SYNC = 0;
  7251  001464  98AC               	bcf	172,4,c	;volatile
  7252                           
  7253                           ;eusart.c: 46: TXSTAbits.BRGH = 1;
  7254  001466  84AC               	bsf	172,2,c	;volatile
  7255                           
  7256                           ;eusart.c: 47: BAUDCONbits.BRG16 = 1;
  7257  001468  86B8               	bsf	184,3,c	;volatile
  7258  00146A                     
  7259                           ;eusart.c: 49: uint32_t tmp = (48000000 / speed);
  7260  00146A  0E00               	movlw	0
  7261  00146C  6E05               	movwf	___lldiv@dividend^0,c
  7262  00146E  0E6C               	movlw	108
  7263  001470  6E06               	movwf	(___lldiv@dividend+1)^0,c
  7264  001472  0EDC               	movlw	220
  7265  001474  6E07               	movwf	(___lldiv@dividend+2)^0,c
  7266  001476  0E02               	movlw	2
  7267  001478  6E08               	movwf	(___lldiv@dividend+3)^0,c
  7268  00147A  C012  F009         	movff	EUSART_SetSpeed@speed,___lldiv@divisor
  7269  00147E  C013  F00A         	movff	EUSART_SetSpeed@speed+1,___lldiv@divisor+1
  7270  001482  C014  F00B         	movff	EUSART_SetSpeed@speed+2,___lldiv@divisor+2
  7271  001486  C015  F00C         	movff	EUSART_SetSpeed@speed+3,___lldiv@divisor+3
  7272  00148A  EC0B  F009         	call	___lldiv	;wreg free
  7273  00148E  C005  F01A         	movff	?___lldiv,EUSART_SetSpeed@tmp
  7274  001492  C006  F01B         	movff	?___lldiv+1,EUSART_SetSpeed@tmp+1
  7275  001496  C007  F01C         	movff	?___lldiv+2,EUSART_SetSpeed@tmp+2
  7276  00149A  C008  F01D         	movff	?___lldiv+3,EUSART_SetSpeed@tmp+3
  7277  00149E                     
  7278                           ;eusart.c: 50: tmp = tmp / 4;
  7279  00149E  C01A  F016         	movff	EUSART_SetSpeed@tmp,??_EUSART_SetSpeed
  7280  0014A2  C01B  F017         	movff	EUSART_SetSpeed@tmp+1,??_EUSART_SetSpeed+1
  7281  0014A6  C01C  F018         	movff	EUSART_SetSpeed@tmp+2,??_EUSART_SetSpeed+2
  7282  0014AA  C01D  F019         	movff	EUSART_SetSpeed@tmp+3,??_EUSART_SetSpeed+3
  7283  0014AE  0E03               	movlw	3
  7284  0014B0  EF5F  F00A         	goto	u3310
  7285  0014B4                     u3315:
  7286  0014B4  90D8               	bcf	status,0,c
  7287  0014B6  3219               	rrcf	(??_EUSART_SetSpeed+3)^0,f,c
  7288  0014B8  3218               	rrcf	(??_EUSART_SetSpeed+2)^0,f,c
  7289  0014BA  3217               	rrcf	(??_EUSART_SetSpeed+1)^0,f,c
  7290  0014BC  3216               	rrcf	??_EUSART_SetSpeed^0,f,c
  7291  0014BE                     u3310:
  7292  0014BE  2EE8               	decfsz	wreg,f,c
  7293  0014C0  EF5A  F00A         	goto	u3315
  7294  0014C4  C016  F01A         	movff	??_EUSART_SetSpeed,EUSART_SetSpeed@tmp
  7295  0014C8  C017  F01B         	movff	??_EUSART_SetSpeed+1,EUSART_SetSpeed@tmp+1
  7296  0014CC  C018  F01C         	movff	??_EUSART_SetSpeed+2,EUSART_SetSpeed@tmp+2
  7297  0014D0  C019  F01D         	movff	??_EUSART_SetSpeed+3,EUSART_SetSpeed@tmp+3
  7298  0014D4                     
  7299                           ;eusart.c: 51: tmp--;
  7300  0014D4  061A               	decf	EUSART_SetSpeed@tmp^0,f,c
  7301  0014D6  0E00               	movlw	0
  7302  0014D8  5A1B               	subwfb	(EUSART_SetSpeed@tmp+1)^0,f,c
  7303  0014DA  5A1C               	subwfb	(EUSART_SetSpeed@tmp+2)^0,f,c
  7304  0014DC  5A1D               	subwfb	(EUSART_SetSpeed@tmp+3)^0,f,c
  7305  0014DE                     
  7306                           ;eusart.c: 53: SPBRG = (uint8_t) tmp;
  7307  0014DE  C01A  FFAF         	movff	EUSART_SetSpeed@tmp,4015	;volatile
  7308  0014E2                     
  7309                           ;eusart.c: 54: SPBRGH = (uint8_t) (tmp >> 8);
  7310  0014E2  C01B  FFB0         	movff	EUSART_SetSpeed@tmp+1,4016	;volatile
  7311  0014E6  0012               	return		;funcret
  7312  0014E8                     __end_of_EUSART_SetSpeed:
  7313                           	opt callstack 0
  7314                           
  7315 ;; *************** function ___lldiv *****************
  7316 ;; Defined at:
  7317 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  dividend        4    4[COMRAM] unsigned long 
  7320 ;;  divisor         4    8[COMRAM] unsigned long 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;  quotient        4   12[COMRAM] unsigned long 
  7323 ;;  counter         1   16[COMRAM] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  4    4[COMRAM] unsigned long 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7333 ;;      Params:         8       0       0       0       0       0       0       0       0
  7334 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7336 ;;      Totals:        13       0       0       0       0       0       0       0       0
  7337 ;;Total ram usage:       13 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    2
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_EUSART_SetSpeed
  7344 ;;		_sprintf
  7345 ;;		_Ecg_ProcessHeartRate
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text32
  7350  001216                     __ptext32:
  7351                           	opt callstack 0
  7352  001216                     ___lldiv:
  7353                           	opt callstack 25
  7354  001216  0E00               	movlw	0
  7355  001218  6E0D               	movwf	___lldiv@quotient^0,c
  7356  00121A  0E00               	movlw	0
  7357  00121C  6E0E               	movwf	(___lldiv@quotient+1)^0,c
  7358  00121E  0E00               	movlw	0
  7359  001220  6E0F               	movwf	(___lldiv@quotient+2)^0,c
  7360  001222  0E00               	movlw	0
  7361  001224  6E10               	movwf	(___lldiv@quotient+3)^0,c
  7362  001226  5009               	movf	___lldiv@divisor^0,w,c
  7363  001228  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
  7364  00122A  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
  7365  00122C  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
  7366  00122E  B4D8               	btfsc	status,2,c
  7367  001230  EF1C  F009         	goto	u2971
  7368  001234  EF1E  F009         	goto	u2970
  7369  001238                     u2971:
  7370  001238  EF54  F009         	goto	l645
  7371  00123C                     u2970:
  7372  00123C  0E01               	movlw	1
  7373  00123E  6E11               	movwf	___lldiv@counter^0,c
  7374  001240  EF28  F009         	goto	l4100
  7375  001244                     l4098:
  7376  001244  90D8               	bcf	status,0,c
  7377  001246  3609               	rlcf	___lldiv@divisor^0,f,c
  7378  001248  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
  7379  00124A  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
  7380  00124C  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
  7381  00124E  2A11               	incf	___lldiv@counter^0,f,c
  7382  001250                     l4100:
  7383  001250  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
  7384  001252  EF2D  F009         	goto	u2981
  7385  001256  EF2F  F009         	goto	u2980
  7386  00125A                     u2981:
  7387  00125A  EF22  F009         	goto	l4098
  7388  00125E                     u2980:
  7389  00125E                     l4102:
  7390  00125E  90D8               	bcf	status,0,c
  7391  001260  360D               	rlcf	___lldiv@quotient^0,f,c
  7392  001262  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
  7393  001264  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
  7394  001266  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
  7395  001268  5009               	movf	___lldiv@divisor^0,w,c
  7396  00126A  5C05               	subwf	___lldiv@dividend^0,w,c
  7397  00126C  500A               	movf	(___lldiv@divisor+1)^0,w,c
  7398  00126E  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
  7399  001270  500B               	movf	(___lldiv@divisor+2)^0,w,c
  7400  001272  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
  7401  001274  500C               	movf	(___lldiv@divisor+3)^0,w,c
  7402  001276  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
  7403  001278  A0D8               	btfss	status,0,c
  7404  00127A  EF41  F009         	goto	u2991
  7405  00127E  EF43  F009         	goto	u2990
  7406  001282                     u2991:
  7407  001282  EF4C  F009         	goto	l4110
  7408  001286                     u2990:
  7409  001286  5009               	movf	___lldiv@divisor^0,w,c
  7410  001288  5E05               	subwf	___lldiv@dividend^0,f,c
  7411  00128A  500A               	movf	(___lldiv@divisor+1)^0,w,c
  7412  00128C  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
  7413  00128E  500B               	movf	(___lldiv@divisor+2)^0,w,c
  7414  001290  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
  7415  001292  500C               	movf	(___lldiv@divisor+3)^0,w,c
  7416  001294  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
  7417  001296  800D               	bsf	___lldiv@quotient^0,0,c
  7418  001298                     l4110:
  7419  001298  90D8               	bcf	status,0,c
  7420  00129A  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
  7421  00129C  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
  7422  00129E  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
  7423  0012A0  3209               	rrcf	___lldiv@divisor^0,f,c
  7424  0012A2  2E11               	decfsz	___lldiv@counter^0,f,c
  7425  0012A4  EF2F  F009         	goto	l4102
  7426  0012A8                     l645:
  7427  0012A8  C00D  F005         	movff	___lldiv@quotient,?___lldiv
  7428  0012AC  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
  7429  0012B0  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
  7430  0012B4  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
  7431  0012B8  0012               	return		;funcret
  7432  0012BA                     __end_of___lldiv:
  7433                           	opt callstack 0
  7434                           
  7435 ;; *************** function _A6_IsAlive *****************
  7436 ;; Defined at:
  7437 ;;		line 17 in file "A6Lib.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;		None
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  response       32   32[COMRAM] unsigned char [32]
  7442 ;;  loop            1   64[COMRAM] unsigned char 
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  1    wreg      unsigned char 
  7445 ;; Registers used:
  7446 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7452 ;;      Params:         0       0       0       0       0       0       0       0       0
  7453 ;;      Locals:        33       0       0       0       0       0       0       0       0
  7454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7455 ;;      Totals:        33       0       0       0       0       0       0       0       0
  7456 ;;Total ram usage:       33 bytes
  7457 ;; Hardware stack levels used:    1
  7458 ;; Hardware stack levels required when called:    5
  7459 ;; This function calls:
  7460 ;;		_A6_Command
  7461 ;;		_strcmp
  7462 ;; This function is called by:
  7463 ;;		_loop
  7464 ;;		_A6_SpeedSet
  7465 ;;		_A6_SpeedAutoDetect
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           	psect	text33
  7470  001650                     __ptext33:
  7471                           	opt callstack 0
  7472  001650                     _A6_IsAlive:
  7473                           	opt callstack 23
  7474  001650                     
  7475                           ;A6Lib.c: 18: uint8_t loop = 3;
  7476  001650  0E03               	movlw	3
  7477  001652  6E41               	movwf	A6_IsAlive@loop^0,c
  7478                           
  7479                           ;A6Lib.c: 19: char response[32];;A6Lib.c: 21: while(loop--) {
  7480  001654  EF58  F00B         	goto	l4146
  7481  001658                     l4138:
  7482                           
  7483                           ;A6Lib.c: 22: A6_Command("AT\r", "aa", "bb", 0, response);
  7484  001658  0EED               	movlw	low STR_16
  7485  00165A  6E12               	movwf	A6_Command@command^0,c
  7486  00165C  0E5F               	movlw	high STR_16
  7487  00165E  6E13               	movwf	(A6_Command@command+1)^0,c
  7488  001660  0EF8               	movlw	low STR_8
  7489  001662  6E14               	movwf	A6_Command@resp1^0,c
  7490  001664  0E5F               	movlw	high STR_8
  7491  001666  6E15               	movwf	(A6_Command@resp1+1)^0,c
  7492  001668  0EFB               	movlw	low STR_9
  7493  00166A  6E16               	movwf	A6_Command@resp2^0,c
  7494  00166C  0E5F               	movlw	high STR_9
  7495  00166E  6E17               	movwf	(A6_Command@resp2+1)^0,c
  7496  001670  0E00               	movlw	0
  7497  001672  6E19               	movwf	(A6_Command@timeout+1)^0,c
  7498  001674  0E00               	movlw	0
  7499  001676  6E18               	movwf	A6_Command@timeout^0,c
  7500  001678  0E21               	movlw	low A6_IsAlive@response
  7501  00167A  6E1A               	movwf	A6_Command@response^0,c
  7502  00167C  0E00               	movlw	high A6_IsAlive@response
  7503  00167E  6E1B               	movwf	(A6_Command@response+1)^0,c
  7504  001680  ECF7  F006         	call	_A6_Command	;wreg free
  7505  001684                     
  7506                           ;A6Lib.c: 23: if(strcmp(response, "OK") == 0) {
  7507  001684  0E21               	movlw	low A6_IsAlive@response
  7508  001686  6E05               	movwf	strcmp@s1^0,c
  7509  001688  0E00               	movlw	high A6_IsAlive@response
  7510  00168A  6E06               	movwf	(strcmp@s1+1)^0,c
  7511  00168C  0EF5               	movlw	low STR_19
  7512  00168E  6E07               	movwf	strcmp@s2^0,c
  7513  001690  0E5F               	movlw	high STR_19
  7514  001692  6E08               	movwf	(strcmp@s2+1)^0,c
  7515  001694  EC39  F00C         	call	_strcmp	;wreg free
  7516  001698  5005               	movf	?_strcmp^0,w,c
  7517  00169A  1006               	iorwf	(?_strcmp+1)^0,w,c
  7518  00169C  A4D8               	btfss	status,2,c
  7519  00169E  EF53  F00B         	goto	u3031
  7520  0016A2  EF55  F00B         	goto	u3030
  7521  0016A6                     u3031:
  7522  0016A6  EF58  F00B         	goto	l4146
  7523  0016AA                     u3030:
  7524  0016AA                     
  7525                           ;A6Lib.c: 24: return 1;
  7526  0016AA  0E01               	movlw	1
  7527  0016AC  EF62  F00B         	goto	l532
  7528  0016B0                     l4146:
  7529  0016B0  0641               	decf	A6_IsAlive@loop^0,f,c
  7530  0016B2  2841               	incf	A6_IsAlive@loop^0,w,c
  7531  0016B4  A4D8               	btfss	status,2,c
  7532  0016B6  EF5F  F00B         	goto	u3041
  7533  0016BA  EF61  F00B         	goto	u3040
  7534  0016BE                     u3041:
  7535  0016BE  EF2C  F00B         	goto	l4138
  7536  0016C2                     u3040:
  7537  0016C2                     
  7538                           ;A6Lib.c: 25: };A6Lib.c: 26: };A6Lib.c: 27: return 0;
  7539  0016C2  0E00               	movlw	0
  7540  0016C4                     l532:
  7541  0016C4  0012               	return		;funcret
  7542  0016C6                     __end_of_A6_IsAlive:
  7543                           	opt callstack 0
  7544                           
  7545 ;; *************** function _strcmp *****************
  7546 ;; Defined at:
  7547 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;  s1              2    4[COMRAM] PTR const unsigned char 
  7550 ;;		 -> A6_SpeedSet@response(32), A6_IsAlive@response(32), 
  7551 ;;  s2              2    6[COMRAM] PTR const unsigned char 
  7552 ;;		 -> STR_23(3), STR_19(3), 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  r               1   10[COMRAM] char 
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  2    4[COMRAM] int 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7564 ;;      Params:         4       0       0       0       0       0       0       0       0
  7565 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7566 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7567 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7568 ;;Total ram usage:        7 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    2
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_A6_IsAlive
  7575 ;;		_A6_SpeedSet
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text34
  7580  001872                     __ptext34:
  7581                           	opt callstack 0
  7582  001872                     _strcmp:
  7583                           	opt callstack 26
  7584  001872  EF3F  F00C         	goto	l4072
  7585  001876                     l4070:
  7586  001876  4A05               	infsnz	strcmp@s1^0,f,c
  7587  001878  2A06               	incf	(strcmp@s1+1)^0,f,c
  7588  00187A  4A07               	infsnz	strcmp@s2^0,f,c
  7589  00187C  2A08               	incf	(strcmp@s2+1)^0,f,c
  7590  00187E                     l4072:
  7591  00187E  C007  FFF6         	movff	strcmp@s2,tblptrl
  7592  001882  C008  FFF7         	movff	strcmp@s2+1,tblptrh
  7593  001886                     	if	0	;tblptru may be non-zero
  7594  001886                     	endif
  7595  001886                     	if	0	;tblptru may be non-zero
  7596  001886                     	endif
  7597  001886  0008               	tblrd		*
  7598  001888  CFF5 F009          	movff	tablat,??_strcmp
  7599  00188C  C005  FFD9         	movff	strcmp@s1,fsr2l
  7600  001890  C006  FFDA         	movff	strcmp@s1+1,fsr2h
  7601  001894  50DF               	movf	indf2,w,c
  7602  001896  6E0A               	movwf	(??_strcmp+1)^0,c
  7603  001898  5009               	movf	??_strcmp^0,w,c
  7604  00189A  5C0A               	subwf	(??_strcmp+1)^0,w,c
  7605  00189C  6E0B               	movwf	strcmp@r^0,c
  7606  00189E  500B               	movf	strcmp@r^0,w,c
  7607  0018A0  A4D8               	btfss	status,2,c
  7608  0018A2  EF55  F00C         	goto	u2931
  7609  0018A6  EF57  F00C         	goto	u2930
  7610  0018AA                     u2931:
  7611  0018AA  EF63  F00C         	goto	l4076
  7612  0018AE                     u2930:
  7613  0018AE  C005  FFD9         	movff	strcmp@s1,fsr2l
  7614  0018B2  C006  FFDA         	movff	strcmp@s1+1,fsr2h
  7615  0018B6  50DF               	movf	indf2,w,c
  7616  0018B8  A4D8               	btfss	status,2,c
  7617  0018BA  EF61  F00C         	goto	u2941
  7618  0018BE  EF63  F00C         	goto	u2940
  7619  0018C2                     u2941:
  7620  0018C2  EF3B  F00C         	goto	l4070
  7621  0018C6                     u2940:
  7622  0018C6                     l4076:
  7623  0018C6  500B               	movf	strcmp@r^0,w,c
  7624  0018C8  6E05               	movwf	?_strcmp^0,c
  7625  0018CA  6A06               	clrf	(?_strcmp+1)^0,c
  7626  0018CC  BE05               	btfsc	?_strcmp^0,7,c
  7627  0018CE  0606               	decf	(?_strcmp+1)^0,f,c
  7628  0018D0  0012               	return		;funcret
  7629  0018D2                     __end_of_strcmp:
  7630                           	opt callstack 0
  7631                           
  7632 ;; *************** function _A6_Command *****************
  7633 ;; Defined at:
  7634 ;;		line 89 in file "A6Lib.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;  command         2   17[COMRAM] PTR const unsigned char 
  7637 ;;		 -> A6_SpeedSet@request(20), STR_16(4), x1(9), x8(4), 
  7638 ;;  resp1           2   19[COMRAM] PTR const unsigned char 
  7639 ;;		 -> STR_21(3), STR_17(3), STR_11(3), STR_8(3), 
  7640 ;;  resp2           2   21[COMRAM] PTR const unsigned char 
  7641 ;;		 -> STR_22(3), STR_18(3), STR_12(3), STR_9(3), 
  7642 ;;  timeout         2   23[COMRAM] unsigned int 
  7643 ;;  response        2   25[COMRAM] PTR unsigned char 
  7644 ;;		 -> A6_SpeedSet@response(32), A6_IsAlive@response(32), loop@response_154(32), loop@response(32), 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  t               4   28[COMRAM] unsigned long 
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  1    wreg      void 
  7649 ;; Registers used:
  7650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7656 ;;      Params:        10       0       0       0       0       0       0       0       0
  7657 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7658 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7659 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7660 ;;Total ram usage:       15 bytes
  7661 ;; Hardware stack levels used:    1
  7662 ;; Hardware stack levels required when called:    4
  7663 ;; This function calls:
  7664 ;;		_A6_ReadLine
  7665 ;;		_EUSART_TX_String
  7666 ;;		_memset
  7667 ;;		_strlen
  7668 ;; This function is called by:
  7669 ;;		_loop
  7670 ;;		_A6_IsAlive
  7671 ;;		_A6_SpeedSet
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text35
  7676  000DEE                     __ptext35:
  7677                           	opt callstack 0
  7678  000DEE                     _A6_Command:
  7679                           	opt callstack 23
  7680  000DEE                     
  7681                           ;A6Lib.c: 90: if(timeout == 0) timeout = 1000;
  7682  000DEE  5018               	movf	A6_Command@timeout^0,w,c
  7683  000DF0  1019               	iorwf	(A6_Command@timeout+1)^0,w,c
  7684  000DF2  A4D8               	btfss	status,2,c
  7685  000DF4  EFFE  F006         	goto	u2861
  7686  000DF8  EF00  F007         	goto	u2860
  7687  000DFC                     u2861:
  7688  000DFC  EF04  F007         	goto	l4036
  7689  000E00                     u2860:
  7690  000E00  0E03               	movlw	3
  7691  000E02  6E19               	movwf	(A6_Command@timeout+1)^0,c
  7692  000E04  0EE8               	movlw	232
  7693  000E06  6E18               	movwf	A6_Command@timeout^0,c
  7694  000E08                     l4036:
  7695                           
  7696                           ;A6Lib.c: 91: memset(response, 0x00, sizeof(response));
  7697  000E08  C01A  F005         	movff	A6_Command@response,memset@p1
  7698  000E0C  C01B  F006         	movff	A6_Command@response+1,memset@p1+1
  7699  000E10  0E00               	movlw	0
  7700  000E12  6E08               	movwf	(memset@c+1)^0,c
  7701  000E14  0E00               	movlw	0
  7702  000E16  6E07               	movwf	memset@c^0,c
  7703  000E18  0E00               	movlw	0
  7704  000E1A  6E0A               	movwf	(memset@n+1)^0,c
  7705  000E1C  0E02               	movlw	2
  7706  000E1E  6E09               	movwf	memset@n^0,c
  7707  000E20  ECC1  F00D         	call	_memset	;wreg free
  7708  000E24                     
  7709                           ;A6Lib.c: 93: EUSART_RX.iRead = EUSART_RX.iWrite;
  7710  000E24  C10A  F109         	movff	_EUSART_RX+2,_EUSART_RX+1
  7711  000E28                     
  7712                           ;A6Lib.c: 94: EUSART_TX_String(command, strlen(command));
  7713  000E28  C012  F009         	movff	A6_Command@command,EUSART_TX_String@str
  7714  000E2C  C013  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
  7715  000E30  C012  F005         	movff	A6_Command@command,strlen@s
  7716  000E34  C013  F006         	movff	A6_Command@command+1,strlen@s+1
  7717  000E38  ECBA  F00C         	call	_strlen	;wreg free
  7718  000E3C  5005               	movf	?_strlen^0,w,c
  7719  000E3E  6E0B               	movwf	EUSART_TX_String@len^0,c
  7720  000E40  EC47  F00D         	call	_EUSART_TX_String	;wreg free
  7721  000E44                     l4042:
  7722                           
  7723                           ;A6Lib.c: 98: uint32_t t = MILLISECONDS + timeout;
  7724  000E44  5018               	movf	A6_Command@timeout^0,w,c
  7725  000E46  0100               	movlb	0	; () banked
  7726  000E48  25B2               	addwf	_MILLISECONDS& (0+255),w,b
  7727  000E4A  6E1D               	movwf	A6_Command@t^0,c
  7728  000E4C  5019               	movf	(A6_Command@timeout+1)^0,w,c
  7729  000E4E  21B3               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  7730  000E50  6E1E               	movwf	(A6_Command@t+1)^0,c
  7731  000E52  0E00               	movlw	0
  7732  000E54  21B4               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  7733  000E56  6E1F               	movwf	(A6_Command@t+2)^0,c
  7734  000E58  0E00               	movlw	0
  7735  000E5A  21B5               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  7736  000E5C  6E20               	movwf	(A6_Command@t+3)^0,c
  7737                           
  7738                           ;A6Lib.c: 99: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
  7739  000E5E  EF43  F007         	goto	l4048
  7740  000E62                     l4044:
  7741                           
  7742                           ; BSR set to: 1
  7743                           ;A6Lib.c: 100: if(t < MILLISECONDS) return;
  7744  000E62  0100               	movlb	0	; () banked
  7745  000E64  51B2               	movf	_MILLISECONDS& (0+255),w,b
  7746  000E66  5C1D               	subwf	A6_Command@t^0,w,c
  7747  000E68  51B3               	movf	(_MILLISECONDS+1)& (0+255),w,b
  7748  000E6A  581E               	subwfb	(A6_Command@t+1)^0,w,c
  7749  000E6C  51B4               	movf	(_MILLISECONDS+2)& (0+255),w,b
  7750  000E6E  581F               	subwfb	(A6_Command@t+2)^0,w,c
  7751  000E70  51B5               	movf	(_MILLISECONDS+3)& (0+255),w,b
  7752  000E72  5820               	subwfb	(A6_Command@t+3)^0,w,c
  7753  000E74  B0D8               	btfsc	status,0,c
  7754  000E76  EF3F  F007         	goto	u2871
  7755  000E7A  EF41  F007         	goto	u2870
  7756  000E7E                     u2871:
  7757  000E7E  EF43  F007         	goto	l4048
  7758  000E82                     u2870:
  7759  000E82  EF67  F007         	goto	l565
  7760  000E86                     l4048:
  7761                           
  7762                           ; BSR set to: 0
  7763  000E86  0101               	movlb	1	; () banked
  7764  000E88  510A               	movf	(_EUSART_RX+2)& (0+255),w,b
  7765  000E8A  1909               	xorwf	(_EUSART_RX+1)& (0+255),w,b
  7766  000E8C  B4D8               	btfsc	status,2,c
  7767  000E8E  EF4B  F007         	goto	u2881
  7768  000E92  EF4D  F007         	goto	u2880
  7769  000E96                     u2881:
  7770  000E96  EF31  F007         	goto	l4044
  7771  000E9A                     u2880:
  7772  000E9A                     
  7773                           ; BSR set to: 1
  7774                           ;A6Lib.c: 101: };A6Lib.c: 102: EUSART_RX.iRead++;
  7775  000E9A  2B09               	incf	(_EUSART_RX+1)& (0+255),f,b
  7776  000E9C                     
  7777                           ; BSR set to: 1
  7778                           ;A6Lib.c: 103: } while(EUSART_RX.buffer[EUSART_RX.iRead] != '\n');
  7779  000E9C  0E0C               	movlw	low (_EUSART_RX+4)
  7780  000E9E  2509               	addwf	(_EUSART_RX+1)& (0+255),w,b
  7781  000EA0  6ED9               	movwf	fsr2l,c
  7782  000EA2  6ADA               	clrf	fsr2h,c
  7783  000EA4  0E01               	movlw	high (_EUSART_RX+4)
  7784  000EA6  22DA               	addwfc	fsr2h,f,c
  7785  000EA8  0E0A               	movlw	10
  7786  000EAA  18DE               	xorwf	postinc2,w,c
  7787  000EAC  A4D8               	btfss	status,2,c
  7788  000EAE  EF5B  F007         	goto	u2891
  7789  000EB2  EF5D  F007         	goto	u2890
  7790  000EB6                     u2891:
  7791  000EB6  EF22  F007         	goto	l4042
  7792  000EBA                     u2890:
  7793  000EBA                     
  7794                           ; BSR set to: 1
  7795                           ;A6Lib.c: 106: A6_ReadLine(response, timeout);
  7796  000EBA  C01A  F005         	movff	A6_Command@response,A6_ReadLine@response
  7797  000EBE  C01B  F006         	movff	A6_Command@response+1,A6_ReadLine@response+1
  7798  000EC2  C018  F007         	movff	A6_Command@timeout,A6_ReadLine@timeout
  7799  000EC6  C019  F008         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
  7800  000ECA  ECA9  F008         	call	_A6_ReadLine	;wreg free
  7801  000ECE                     l565:
  7802  000ECE  0012               	return		;funcret
  7803  000ED0                     __end_of_A6_Command:
  7804                           	opt callstack 0
  7805                           
  7806 ;; *************** function _strlen *****************
  7807 ;; Defined at:
  7808 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;  s               2    4[COMRAM] PTR const unsigned char 
  7811 ;;		 -> A6_SpeedSet@request(20), STR_16(4), x1(9), x8(4), 
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  cp              2    6[COMRAM] PTR const unsigned char 
  7814 ;;		 -> A6_SpeedSet@request(20), STR_16(4), x1(9), x8(4), 
  7815 ;; Return value:  Size  Location     Type
  7816 ;;                  2    4[COMRAM] unsigned int 
  7817 ;; Registers used:
  7818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  7819 ;; Tracked objects:
  7820 ;;		On entry : 0/0
  7821 ;;		On exit  : 0/0
  7822 ;;		Unchanged: 0/0
  7823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7824 ;;      Params:         2       0       0       0       0       0       0       0       0
  7825 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7827 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7828 ;;Total ram usage:        4 bytes
  7829 ;; Hardware stack levels used:    1
  7830 ;; Hardware stack levels required when called:    2
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_A6_Command
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text36
  7839  001974                     __ptext36:
  7840                           	opt callstack 0
  7841  001974                     _strlen:
  7842                           	opt callstack 24
  7843  001974  C005  F007         	movff	strlen@s,strlen@cp
  7844  001978  C006  F008         	movff	strlen@s+1,strlen@cp+1
  7845  00197C  EFC2  F00C         	goto	l4026
  7846  001980                     l4024:
  7847  001980  4A07               	infsnz	strlen@cp^0,f,c
  7848  001982  2A08               	incf	(strlen@cp+1)^0,f,c
  7849  001984                     l4026:
  7850  001984  C007  FFF6         	movff	strlen@cp,tblptrl
  7851  001988  C008  FFF7         	movff	strlen@cp+1,tblptrh
  7852  00198C  6AF8               	clrf	tblptru,c
  7853  00198E  0E07               	movlw	(high __ramtop+-1)
  7854  001990  64F7               	cpfsgt	tblptrh,c
  7855  001992  D003               	bra	u2847
  7856  001994  0008               	tblrd		*
  7857  001996  50F5               	movf	tablat,w,c
  7858  001998  D005               	bra	u2840
  7859  00199A                     u2847:
  7860  00199A  CFF6 FFE9          	movff	tblptrl,fsr0l
  7861  00199E  CFF7 FFEA          	movff	tblptrh,fsr0h
  7862  0019A2  50EF               	movf	indf0,w,c
  7863  0019A4                     u2840:
  7864  0019A4  0900               	iorlw	0
  7865  0019A6  A4D8               	btfss	status,2,c
  7866  0019A8  EFD8  F00C         	goto	u2851
  7867  0019AC  EFDA  F00C         	goto	u2850
  7868  0019B0                     u2851:
  7869  0019B0  EFC0  F00C         	goto	l4024
  7870  0019B4                     u2850:
  7871  0019B4  5005               	movf	strlen@s^0,w,c
  7872  0019B6  5C07               	subwf	strlen@cp^0,w,c
  7873  0019B8  6E05               	movwf	?_strlen^0,c
  7874  0019BA  5006               	movf	(strlen@s+1)^0,w,c
  7875  0019BC  5808               	subwfb	(strlen@cp+1)^0,w,c
  7876  0019BE  6E06               	movwf	(?_strlen+1)^0,c
  7877  0019C0  0012               	return		;funcret
  7878  0019C2                     __end_of_strlen:
  7879                           	opt callstack 0
  7880                           
  7881 ;; *************** function _memset *****************
  7882 ;; Defined at:
  7883 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  p1              2    4[COMRAM] PTR void 
  7886 ;;		 -> A6_SpeedSet@response(32), A6_IsAlive@response(32), EUSART_RX(100), loop@response_154(32), 
  7887 ;;		 -> loop@response(32), 
  7888 ;;  c               2    6[COMRAM] int 
  7889 ;;  n               2    8[COMRAM] unsigned int 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  p               2   10[COMRAM] PTR unsigned char 
  7892 ;;		 -> A6_SpeedSet@response(32), A6_IsAlive@response(32), EUSART_RX(100), loop@response_154(32), 
  7893 ;;		 -> loop@response(32), 
  7894 ;; Return value:  Size  Location     Type
  7895 ;;                  2    4[COMRAM] PTR void 
  7896 ;; Registers used:
  7897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7898 ;; Tracked objects:
  7899 ;;		On entry : 0/0
  7900 ;;		On exit  : 0/0
  7901 ;;		Unchanged: 0/0
  7902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7903 ;;      Params:         6       0       0       0       0       0       0       0       0
  7904 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7905 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7906 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7907 ;;Total ram usage:        8 bytes
  7908 ;; Hardware stack levels used:    1
  7909 ;; Hardware stack levels required when called:    2
  7910 ;; This function calls:
  7911 ;;		Nothing
  7912 ;; This function is called by:
  7913 ;;		_loop
  7914 ;;		_EUSART_Init
  7915 ;;		_A6_Command
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text37
  7920  001B82                     __ptext37:
  7921                           	opt callstack 0
  7922  001B82                     _memset:
  7923                           	opt callstack 27
  7924  001B82  C005  F00B         	movff	memset@p1,memset@p
  7925  001B86  C006  F00C         	movff	memset@p1+1,memset@p+1
  7926  001B8A  EFCF  F00D         	goto	l3950
  7927  001B8E                     l3946:
  7928  001B8E  C00B  FFD9         	movff	memset@p,fsr2l
  7929  001B92  C00C  FFDA         	movff	memset@p+1,fsr2h
  7930  001B96  C007  FFDF         	movff	memset@c,indf2
  7931  001B9A  4A0B               	infsnz	memset@p^0,f,c
  7932  001B9C  2A0C               	incf	(memset@p+1)^0,f,c
  7933  001B9E                     l3950:
  7934  001B9E  0609               	decf	memset@n^0,f,c
  7935  001BA0  A0D8               	btfss	status,0,c
  7936  001BA2  060A               	decf	(memset@n+1)^0,f,c
  7937  001BA4  2809               	incf	memset@n^0,w,c
  7938  001BA6  E106               	bnz	u2721
  7939  001BA8  280A               	incf	(memset@n+1)^0,w,c
  7940  001BAA  A4D8               	btfss	status,2,c
  7941  001BAC  EFDA  F00D         	goto	u2721
  7942  001BB0  EFDC  F00D         	goto	u2720
  7943  001BB4                     u2721:
  7944  001BB4  EFC7  F00D         	goto	l3946
  7945  001BB8                     u2720:
  7946  001BB8  0012               	return		;funcret
  7947  001BBA                     __end_of_memset:
  7948                           	opt callstack 0
  7949                           
  7950 ;; *************** function _EUSART_TX_String *****************
  7951 ;; Defined at:
  7952 ;;		line 65 in file "eusart.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  str             2    8[COMRAM] PTR const unsigned char 
  7955 ;;		 -> A6_SpeedSet@request(20), STR_16(4), x1(9), x8(4), 
  7956 ;;  len             1   10[COMRAM] unsigned char 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7968 ;;      Params:         3       0       0       0       0       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7971 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7972 ;;Total ram usage:        3 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:    3
  7975 ;; This function calls:
  7976 ;;		_EUSART_TX_Char
  7977 ;; This function is called by:
  7978 ;;		_A6_Command
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           	psect	text38
  7983  001A8E                     __ptext38:
  7984                           	opt callstack 0
  7985  001A8E                     _EUSART_TX_String:
  7986                           	opt callstack 23
  7987  001A8E                     
  7988                           ;eusart.c: 66: while(len--) {
  7989  001A8E  EF5D  F00D         	goto	l3996
  7990  001A92                     l3992:
  7991                           
  7992                           ;eusart.c: 67: EUSART_TX_Char(*str++);
  7993  001A92  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
  7994  001A96  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
  7995  001A9A  6AF8               	clrf	tblptru,c
  7996  001A9C  0E07               	movlw	(high __ramtop+-1)
  7997  001A9E  64F7               	cpfsgt	tblptrh,c
  7998  001AA0  D003               	bra	u2797
  7999  001AA2  0008               	tblrd		*
  8000  001AA4  50F5               	movf	tablat,w,c
  8001  001AA6  D005               	bra	u2790
  8002  001AA8                     u2797:
  8003  001AA8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8004  001AAC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8005  001AB0  50EF               	movf	indf0,w,c
  8006  001AB2                     u2790:
  8007  001AB2  EC89  F00E         	call	_EUSART_TX_Char
  8008  001AB6  4A09               	infsnz	EUSART_TX_String@str^0,f,c
  8009  001AB8  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
  8010  001ABA                     l3996:
  8011  001ABA  060B               	decf	EUSART_TX_String@len^0,f,c
  8012  001ABC  280B               	incf	EUSART_TX_String@len^0,w,c
  8013  001ABE  A4D8               	btfss	status,2,c
  8014  001AC0  EF64  F00D         	goto	u2801
  8015  001AC4  EF66  F00D         	goto	u2800
  8016  001AC8                     u2801:
  8017  001AC8  EF49  F00D         	goto	l3992
  8018  001ACC                     u2800:
  8019  001ACC  0012               	return		;funcret
  8020  001ACE                     __end_of_EUSART_TX_String:
  8021                           	opt callstack 0
  8022                           
  8023 ;; *************** function _EUSART_TX_Char *****************
  8024 ;; Defined at:
  8025 ;;		line 59 in file "eusart.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  c               1    wreg     unsigned char 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  c               1    4[COMRAM] unsigned char 
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  1    wreg      void 
  8032 ;; Registers used:
  8033 ;;		wreg
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8039 ;;      Params:         0       0       0       0       0       0       0       0       0
  8040 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8042 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8043 ;;Total ram usage:        1 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:    2
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_EUSART_TX_String
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text39
  8054  001D12                     __ptext39:
  8055                           	opt callstack 0
  8056  001D12                     _EUSART_TX_Char:
  8057                           	opt callstack 23
  8058                           
  8059                           ;incstack = 0
  8060                           ;EUSART_TX_Char@c stored from wreg
  8061  001D12  6E05               	movwf	EUSART_TX_Char@c^0,c
  8062  001D14                     l471:
  8063  001D14  A89E               	btfss	3998,4,c	;volatile
  8064  001D16  EF8F  F00E         	goto	u2711
  8065  001D1A  EF91  F00E         	goto	u2710
  8066  001D1E                     u2711:
  8067  001D1E  EF8A  F00E         	goto	l471
  8068  001D22                     u2710:
  8069  001D22                     
  8070                           ;eusart.c: 61: TXREG = c;
  8071  001D22  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
  8072  001D26  F000               	nop		;# 
  8073  001D28  0012               	return		;funcret
  8074  001D2A                     __end_of_EUSART_TX_Char:
  8075                           	opt callstack 0
  8076                           
  8077 ;; *************** function _A6_ReadLine *****************
  8078 ;; Defined at:
  8079 ;;		line 73 in file "A6Lib.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  response        2    4[COMRAM] PTR unsigned char 
  8082 ;;		 -> A6_SpeedSet@response(32), A6_IsAlive@response(32), loop@response_154(32), loop@response(32), 
  8083 ;;  timeout         2    6[COMRAM] int 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  t               4   12[COMRAM] unsigned long 
  8086 ;;  iLine           1   16[COMRAM] unsigned char 
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8096 ;;      Params:         4       0       0       0       0       0       0       0       0
  8097 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8098 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8099 ;;      Totals:        13       0       0       0       0       0       0       0       0
  8100 ;;Total ram usage:       13 bytes
  8101 ;; Hardware stack levels used:    1
  8102 ;; Hardware stack levels required when called:    2
  8103 ;; This function calls:
  8104 ;;		Nothing
  8105 ;; This function is called by:
  8106 ;;		_A6_Command
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text40
  8111  001152                     __ptext40:
  8112                           	opt callstack 0
  8113  001152                     _A6_ReadLine:
  8114                           	opt callstack 24
  8115  001152                     
  8116                           ;A6Lib.c: 74: uint8_t iLine = 0;
  8117  001152  0E00               	movlw	0
  8118  001154  6E11               	movwf	A6_ReadLine@iLine^0,c
  8119  001156                     l4000:
  8120                           
  8121                           ;A6Lib.c: 76: uint32_t t = MILLISECONDS + timeout;
  8122  001156  C007  F009         	movff	A6_ReadLine@timeout,??_A6_ReadLine
  8123  00115A  C008  F00A         	movff	A6_ReadLine@timeout+1,??_A6_ReadLine+1
  8124  00115E  0E00               	movlw	0
  8125  001160  BE0A               	btfsc	(??_A6_ReadLine+1)^0,7,c
  8126  001162  0EFF               	movlw	255
  8127  001164  6E0B               	movwf	(??_A6_ReadLine+2)^0,c
  8128  001166  6E0C               	movwf	(??_A6_ReadLine+3)^0,c
  8129  001168  0100               	movlb	0	; () banked
  8130  00116A  51B2               	movf	_MILLISECONDS& (0+255),w,b
  8131  00116C  2409               	addwf	??_A6_ReadLine^0,w,c
  8132  00116E  6E0D               	movwf	A6_ReadLine@t^0,c
  8133  001170  51B3               	movf	(_MILLISECONDS+1)& (0+255),w,b
  8134  001172  200A               	addwfc	(??_A6_ReadLine+1)^0,w,c
  8135  001174  6E0E               	movwf	(A6_ReadLine@t+1)^0,c
  8136  001176  51B4               	movf	(_MILLISECONDS+2)& (0+255),w,b
  8137  001178  200B               	addwfc	(??_A6_ReadLine+2)^0,w,c
  8138  00117A  6E0F               	movwf	(A6_ReadLine@t+2)^0,c
  8139  00117C  51B5               	movf	(_MILLISECONDS+3)& (0+255),w,b
  8140  00117E  200C               	addwfc	(??_A6_ReadLine+3)^0,w,c
  8141  001180  6E10               	movwf	(A6_ReadLine@t+3)^0,c
  8142                           
  8143                           ;A6Lib.c: 77: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
  8144  001182  EFD5  F008         	goto	l4006
  8145  001186                     l4002:
  8146                           
  8147                           ; BSR set to: 1
  8148                           ;A6Lib.c: 78: if(t < MILLISECONDS) return;
  8149  001186  0100               	movlb	0	; () banked
  8150  001188  51B2               	movf	_MILLISECONDS& (0+255),w,b
  8151  00118A  5C0D               	subwf	A6_ReadLine@t^0,w,c
  8152  00118C  51B3               	movf	(_MILLISECONDS+1)& (0+255),w,b
  8153  00118E  580E               	subwfb	(A6_ReadLine@t+1)^0,w,c
  8154  001190  51B4               	movf	(_MILLISECONDS+2)& (0+255),w,b
  8155  001192  580F               	subwfb	(A6_ReadLine@t+2)^0,w,c
  8156  001194  51B5               	movf	(_MILLISECONDS+3)& (0+255),w,b
  8157  001196  5810               	subwfb	(A6_ReadLine@t+3)^0,w,c
  8158  001198  B0D8               	btfsc	status,0,c
  8159  00119A  EFD1  F008         	goto	u2811
  8160  00119E  EFD3  F008         	goto	u2810
  8161  0011A2                     u2811:
  8162  0011A2  EFD5  F008         	goto	l4006
  8163  0011A6                     u2810:
  8164  0011A6  EF0A  F009         	goto	l553
  8165  0011AA                     l4006:
  8166                           
  8167                           ; BSR set to: 0
  8168  0011AA  0101               	movlb	1	; () banked
  8169  0011AC  510A               	movf	(_EUSART_RX+2)& (0+255),w,b
  8170  0011AE  1909               	xorwf	(_EUSART_RX+1)& (0+255),w,b
  8171  0011B0  B4D8               	btfsc	status,2,c
  8172  0011B2  EFDD  F008         	goto	u2821
  8173  0011B6  EFDF  F008         	goto	u2820
  8174  0011BA                     u2821:
  8175  0011BA  EFC3  F008         	goto	l4002
  8176  0011BE                     u2820:
  8177  0011BE                     
  8178                           ; BSR set to: 1
  8179                           ;A6Lib.c: 79: };A6Lib.c: 80: EUSART_RX.iRead++;
  8180  0011BE  2B09               	incf	(_EUSART_RX+1)& (0+255),f,b
  8181  0011C0                     
  8182                           ; BSR set to: 1
  8183                           ;A6Lib.c: 81: if(EUSART_RX.buffer[EUSART_RX.iRead] == '\r') break;
  8184  0011C0  0E0C               	movlw	low (_EUSART_RX+4)
  8185  0011C2  2509               	addwf	(_EUSART_RX+1)& (0+255),w,b
  8186  0011C4  6ED9               	movwf	fsr2l,c
  8187  0011C6  6ADA               	clrf	fsr2h,c
  8188  0011C8  0E01               	movlw	high (_EUSART_RX+4)
  8189  0011CA  22DA               	addwfc	fsr2h,f,c
  8190  0011CC  0E0D               	movlw	13
  8191  0011CE  18DE               	xorwf	postinc2,w,c
  8192  0011D0  A4D8               	btfss	status,2,c
  8193  0011D2  EFED  F008         	goto	u2831
  8194  0011D6  EFEF  F008         	goto	u2830
  8195  0011DA                     u2831:
  8196  0011DA  EFF1  F008         	goto	l4014
  8197  0011DE                     u2830:
  8198  0011DE  EF02  F009         	goto	l4018
  8199  0011E2                     l4014:
  8200                           
  8201                           ; BSR set to: 1
  8202                           ;A6Lib.c: 82: response[iLine] = EUSART_RX.buffer[EUSART_RX.iRead];
  8203  0011E2  0E0C               	movlw	low (_EUSART_RX+4)
  8204  0011E4  2509               	addwf	(_EUSART_RX+1)& (0+255),w,b
  8205  0011E6  6ED9               	movwf	fsr2l,c
  8206  0011E8  6ADA               	clrf	fsr2h,c
  8207  0011EA  0E01               	movlw	high (_EUSART_RX+4)
  8208  0011EC  22DA               	addwfc	fsr2h,f,c
  8209  0011EE  5011               	movf	A6_ReadLine@iLine^0,w,c
  8210  0011F0  2405               	addwf	A6_ReadLine@response^0,w,c
  8211  0011F2  6EE1               	movwf	fsr1l,c
  8212  0011F4  0E00               	movlw	0
  8213  0011F6  2006               	addwfc	(A6_ReadLine@response+1)^0,w,c
  8214  0011F8  6EE2               	movwf	fsr1h,c
  8215  0011FA  CFDF FFE7          	movff	indf2,indf1
  8216  0011FE                     
  8217                           ; BSR set to: 1
  8218                           ;A6Lib.c: 83: iLine++;
  8219  0011FE  2A11               	incf	A6_ReadLine@iLine^0,f,c
  8220  001200  EFAB  F008         	goto	l4000
  8221  001204                     l4018:
  8222                           
  8223                           ; BSR set to: 1
  8224                           ;A6Lib.c: 84: };A6Lib.c: 85: response[iLine] = 0x00;
  8225  001204  5011               	movf	A6_ReadLine@iLine^0,w,c
  8226  001206  2405               	addwf	A6_ReadLine@response^0,w,c
  8227  001208  6ED9               	movwf	fsr2l,c
  8228  00120A  0E00               	movlw	0
  8229  00120C  2006               	addwfc	(A6_ReadLine@response+1)^0,w,c
  8230  00120E  6EDA               	movwf	fsr2h,c
  8231  001210  0E00               	movlw	0
  8232  001212  6EDF               	movwf	indf2,c
  8233  001214                     l553:
  8234  001214  0012               	return		;funcret
  8235  001216                     __end_of_A6_ReadLine:
  8236                           	opt callstack 0
  8237                           
  8238 ;; *************** function _isr *****************
  8239 ;; Defined at:
  8240 ;;		line 90 in file "init.c"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;		None
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      void 
  8247 ;; Registers used:
  8248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8254 ;;      Params:         0       0       0       0       0       0       0       0       0
  8255 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8256 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8257 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8258 ;;Total ram usage:        2 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:    1
  8261 ;; This function calls:
  8262 ;;		_EUSART_RX_Interrupt
  8263 ;;		_Ecg_Interrupt
  8264 ;; This function is called by:
  8265 ;;		Interrupt level 2
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	intcode
  8270  000008                     __pintcode:
  8271                           	opt callstack 0
  8272  000008                     _isr:
  8273                           	opt callstack 20
  8274                           
  8275                           ;incstack = 0
  8276  000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8277  00000A  ED9C  F00B         	call	int_func,f	;refresh shadow registers
  8278                           
  8279                           	psect	intcode_body
  8280  001738                     __pintcode_body:
  8281                           	opt callstack 20
  8282  001738                     int_func:
  8283                           	opt callstack 20
  8284  001738  0006               	pop		; remove dummy address from shadow register refresh
  8285  00173A  CFD9 F003          	movff	fsr2l,??_isr
  8286  00173E  CFDA F004          	movff	fsr2h,??_isr+1
  8287  001742                     
  8288                           ;init.c: 92: if(TMR3IE && TMR3IF) {
  8289  001742  A2A0               	btfss	4000,1,c	;volatile
  8290  001744  EFA6  F00B         	goto	i2u236_41
  8291  001748  EFA8  F00B         	goto	i2u236_40
  8292  00174C                     i2u236_41:
  8293  00174C  EFBD  F00B         	goto	i2l3530
  8294  001750                     i2u236_40:
  8295  001750  A2A1               	btfss	4001,1,c	;volatile
  8296  001752  EFAD  F00B         	goto	i2u237_41
  8297  001756  EFAF  F00B         	goto	i2u237_40
  8298  00175A                     i2u237_41:
  8299  00175A  EFBD  F00B         	goto	i2l3530
  8300  00175E                     i2u237_40:
  8301  00175E                     
  8302                           ;init.c: 93: MILLISECONDS += 5;
  8303  00175E  0E05               	movlw	5
  8304  001760  0100               	movlb	0	; () banked
  8305  001762  27B2               	addwf	_MILLISECONDS& (0+255),f,b
  8306  001764  0E00               	movlw	0
  8307  001766  23B3               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
  8308  001768  23B4               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
  8309  00176A  23B5               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
  8310  00176C                     
  8311                           ; BSR set to: 0
  8312                           ;init.c: 94: Ecg_Interrupt();
  8313  00176C  EC6D  F00E         	call	_Ecg_Interrupt	;wreg free
  8314  001770                     
  8315                           ;init.c: 97: TMR3H = 0x16;
  8316  001770  0E16               	movlw	22
  8317  001772  6EB3               	movwf	179,c	;volatile
  8318  001774                     
  8319                           ;init.c: 98: TMR3L = 0x00;
  8320  001774  0E00               	movlw	0
  8321  001776  6EB2               	movwf	178,c	;volatile
  8322  001778                     
  8323                           ;init.c: 99: TMR3IF = 0;
  8324  001778  92A1               	bcf	4001,1,c	;volatile
  8325  00177A                     i2l3530:
  8326                           
  8327                           ;init.c: 100: };init.c: 103: if(RCIE && RCIF) {
  8328  00177A  AA9D               	btfss	3997,5,c	;volatile
  8329  00177C  EFC2  F00B         	goto	i2u238_41
  8330  001780  EFC4  F00B         	goto	i2u238_40
  8331  001784                     i2u238_41:
  8332  001784  EFCD  F00B         	goto	i2l167
  8333  001788                     i2u238_40:
  8334  001788  AA9E               	btfss	3998,5,c	;volatile
  8335  00178A  EFC9  F00B         	goto	i2u239_41
  8336  00178E  EFCB  F00B         	goto	i2u239_40
  8337  001792                     i2u239_41:
  8338  001792  EFCD  F00B         	goto	i2l167
  8339  001796                     i2u239_40:
  8340  001796                     
  8341                           ;init.c: 104: EUSART_RX_Interrupt();
  8342  001796  EC26  F00D         	call	_EUSART_RX_Interrupt	;wreg free
  8343  00179A                     i2l167:
  8344  00179A  C004  FFDA         	movff	??_isr+1,fsr2h
  8345  00179E  C003  FFD9         	movff	??_isr,fsr2l
  8346  0017A2  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8347  0017A4  0011               	retfie		f
  8348  0017A6                     __end_of_isr:
  8349                           	opt callstack 0
  8350                           
  8351 ;; *************** function _Ecg_Interrupt *****************
  8352 ;; Defined at:
  8353 ;;		line 135 in file "ecg.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;		None
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;		None
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  1    wreg      void 
  8360 ;; Registers used:
  8361 ;;		wreg, status,2, status,0
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8367 ;;      Params:         0       0       0       0       0       0       0       0       0
  8368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8369 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8370 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8371 ;;Total ram usage:        2 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_isr
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text42
  8381  001CDA                     __ptext42:
  8382                           	opt callstack 0
  8383  001CDA                     _Ecg_Interrupt:
  8384                           	opt callstack 20
  8385  001CDA                     
  8386                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
  8387  001CDA  0E01               	movlw	1
  8388  001CDC  6E01               	movwf	??_Ecg_Interrupt^0,c
  8389  001CDE  5053               	movf	(_ECG_FLAGS+1)^0,w,c
  8390  001CE0  0B07               	andlw	7
  8391  001CE2  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
  8392  001CE4  5001               	movf	??_Ecg_Interrupt^0,w,c
  8393  001CE6  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
  8394  001CE8  5053               	movf	(_ECG_FLAGS+1)^0,w,c
  8395  001CEA  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
  8396  001CEC  0BF8               	andlw	-8
  8397  001CEE  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
  8398  001CF0  6E53               	movwf	(_ECG_FLAGS+1)^0,c
  8399  001CF2                     
  8400                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
  8401  001CF2  2A51               	incf	(_ECG_HEARTRATE+3)^0,f,c
  8402  001CF4                     
  8403                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
  8404  001CF4  8852               	bsf	_ECG_FLAGS^0,4,c
  8405  001CF6  0012               	return		;funcret
  8406  001CF8                     __end_of_Ecg_Interrupt:
  8407                           	opt callstack 0
  8408                           
  8409 ;; *************** function _EUSART_RX_Interrupt *****************
  8410 ;; Defined at:
  8411 ;;		line 71 in file "eusart.c"
  8412 ;; Parameters:    Size  Location     Type
  8413 ;;		None
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;  c               1    0[COMRAM] unsigned char 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8425 ;;      Params:         0       0       0       0       0       0       0       0       0
  8426 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8428 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8429 ;;Total ram usage:        1 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; This function calls:
  8432 ;;		Nothing
  8433 ;; This function is called by:
  8434 ;;		_isr
  8435 ;; This function uses a non-reentrant model
  8436 ;;
  8437                           
  8438                           	psect	text43
  8439  001A4C                     __ptext43:
  8440                           	opt callstack 0
  8441  001A4C                     _EUSART_RX_Interrupt:
  8442                           	opt callstack 20
  8443  001A4C                     
  8444                           ;eusart.c: 72: uint8_t c = RCREG;
  8445  001A4C  CFAE F001          	movff	4014,EUSART_RX_Interrupt@c	;volatile
  8446                           
  8447                           ;eusart.c: 73: if(OERR == 1) {
  8448  001A50  A2AB               	btfss	4011,1,c	;volatile
  8449  001A52  EF2D  F00D         	goto	i2u228_41
  8450  001A56  EF2F  F00D         	goto	i2u228_40
  8451  001A5A                     i2u228_41:
  8452  001A5A  EF31  F00D         	goto	i2l3436
  8453  001A5E                     i2u228_40:
  8454  001A5E                     
  8455                           ;eusart.c: 74: CREN = 0;
  8456  001A5E  98AB               	bcf	4011,4,c	;volatile
  8457                           
  8458                           ;eusart.c: 75: CREN = 1;
  8459  001A60  88AB               	bsf	4011,4,c	;volatile
  8460  001A62                     i2l3436:
  8461                           
  8462                           ;eusart.c: 76: };eusart.c: 77: EUSART_RX.iWrite++;
  8463  001A62  0101               	movlb	1	; () banked
  8464  001A64  2B0A               	incf	(_EUSART_RX+2)& (0+255),f,b
  8465  001A66                     
  8466                           ; BSR set to: 1
  8467                           ;eusart.c: 78: if(EUSART_RX.iWrite == 64) EUSART_RX.iWrite = 0;
  8468  001A66  0E40               	movlw	64
  8469  001A68  190A               	xorwf	(_EUSART_RX+2)& (0+255),w,b
  8470  001A6A  A4D8               	btfss	status,2,c
  8471  001A6C  EF3A  F00D         	goto	i2u229_41
  8472  001A70  EF3C  F00D         	goto	i2u229_40
  8473  001A74                     i2u229_41:
  8474  001A74  EF3E  F00D         	goto	i2l3442
  8475  001A78                     i2u229_40:
  8476  001A78                     
  8477                           ; BSR set to: 1
  8478  001A78  0E00               	movlw	0
  8479  001A7A  6F0A               	movwf	(_EUSART_RX+2)& (0+255),b
  8480  001A7C                     i2l3442:
  8481                           
  8482                           ; BSR set to: 1
  8483                           ;eusart.c: 79: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
  8484  001A7C  0E0C               	movlw	low (_EUSART_RX+4)
  8485  001A7E  250A               	addwf	(_EUSART_RX+2)& (0+255),w,b
  8486  001A80  6ED9               	movwf	fsr2l,c
  8487  001A82  6ADA               	clrf	fsr2h,c
  8488  001A84  0E01               	movlw	high (_EUSART_RX+4)
  8489  001A86  22DA               	addwfc	fsr2h,f,c
  8490  001A88  C001  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
  8491  001A8C                     
  8492                           ; BSR set to: 1
  8493  001A8C  0012               	return		;funcret
  8494  001A8E                     __end_of_EUSART_RX_Interrupt:
  8495                           	opt callstack 0
  8496                           
  8497                           	psect	rparam
  8498  0000                     
  8499                           	psect	temp
  8500  000058                     btemp:
  8501                           	opt callstack 0
  8502  000058                     	ds	1
  8503  0000                     int$flags	set	btemp
  8504  0000                     wtemp8	set	btemp+1
  8505  0000                     ttemp5	set	btemp+1
  8506  0000                     ttemp6	set	btemp+4
  8507  0000                     ttemp7	set	btemp+8
  8508                           tosu	equ	0xFFF
  8509                           tosh	equ	0xFFE
  8510                           tosl	equ	0xFFD
  8511                           stkptr	equ	0xFFC
  8512                           pclatu	equ	0xFFB
  8513                           pclath	equ	0xFFA
  8514                           pcl	equ	0xFF9
  8515                           tblptru	equ	0xFF8
  8516                           tblptrh	equ	0xFF7
  8517                           tblptrl	equ	0xFF6
  8518                           tablat	equ	0xFF5
  8519                           prodh	equ	0xFF4
  8520                           prodl	equ	0xFF3
  8521                           indf0	equ	0xFEF
  8522                           postinc0	equ	0xFEE
  8523                           postdec0	equ	0xFED
  8524                           preinc0	equ	0xFEC
  8525                           plusw0	equ	0xFEB
  8526                           fsr0h	equ	0xFEA
  8527                           fsr0l	equ	0xFE9
  8528                           wreg	equ	0xFE8
  8529                           indf1	equ	0xFE7
  8530                           postinc1	equ	0xFE6
  8531                           postdec1	equ	0xFE5
  8532                           preinc1	equ	0xFE4
  8533                           plusw1	equ	0xFE3
  8534                           fsr1h	equ	0xFE2
  8535                           fsr1l	equ	0xFE1
  8536                           bsr	equ	0xFE0
  8537                           indf2	equ	0xFDF
  8538                           postinc2	equ	0xFDE
  8539                           postdec2	equ	0xFDD
  8540                           preinc2	equ	0xFDC
  8541                           plusw2	equ	0xFDB
  8542                           fsr2h	equ	0xFDA
  8543                           fsr2l	equ	0xFD9
  8544                           status	equ	0xFD8


Data Sizes:
    Strings     189
    Constant    1586
    Data        95
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     77      87
    BANK0           160     56      94
    BANK1           256      0     191
    BANK2           256     69      69
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    A6_Command@resp2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_22(CODE[3]), STR_18(CODE[3]), STR_12(CODE[3]), STR_9(CODE[3]), 

    A6_Command@resp1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), STR_17(CODE[3]), STR_11(CODE[3]), STR_8(CODE[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_SpeedSet@request(BANK0[20]), STR_16(CODE[4]), x1(BANK1[9]), x8(BANK1[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_SpeedSet@request(BANK0[20]), STR_16(CODE[4]), x1(BANK1[9]), x8(BANK1[4]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), STR_19(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_SpeedSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 100
		 -> A6_SpeedSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), EUSART_RX(BANK1[100]), loop@response_154(BANK2[32]), 
		 -> loop@response(BANK2[32]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> A6_SpeedSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), EUSART_RX(BANK1[100]), loop@response_154(BANK2[32]), 
		 -> loop@response(BANK2[32]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_25(CODE[11]), STR_20(CODE[12]), STR_13(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> A6_SpeedAutoDetect@zzzz(BANK0[32]), A6_SpeedSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_SpeedSet@request(BANK0[20]), STR_16(CODE[4]), x1(BANK1[9]), x8(BANK1[4]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_SpeedSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), loop@response_154(BANK2[32]), loop@response(BANK2[32]), 

    A6_ReadLine@response	PTR unsigned char  size(2) Largest target is 32
		 -> A6_SpeedSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), loop@response_154(BANK2[32]), loop@response(BANK2[32]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> A6_SpeedSet@request(BANK0[20]), STR_16(CODE[4]), x1(BANK1[9]), x8(BANK1[4]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 100
		 -> A6_SpeedAutoDetect@zzzz(BANK0[32]), STR_24(CODE[19]), EUSART_RX.line(BANK1[32]), STR_15(CODE[28]), 
		 -> STR_14(CODE[11]), Ecg_ProcessHeartRate@heartrateString(COMRAM[5]), EUSART_RX(BANK1[100]), loop@response_154(BANK2[32]), 
		 -> STR_10(CODE[12]), loop@response(BANK2[32]), STR_7(CODE[8]), STR_6(CODE[13]), 
		 -> STR_5(CODE[11]), STR_4(CODE[23]), STR_3(CODE[6]), STR_2(CODE[5]), 
		 -> STR_1(CODE[13]), 

    printLine@str	PTR const unsigned char  size(2) Largest target is 100
		 -> A6_SpeedAutoDetect@zzzz(BANK0[32]), STR_24(CODE[19]), EUSART_RX.line(BANK1[32]), EUSART_RX(BANK1[100]), 
		 -> loop@response_154(BANK2[32]), STR_10(CODE[12]), loop@response(BANK2[32]), STR_7(CODE[8]), 
		 -> STR_6(CODE[13]), STR_5(CODE[11]), STR_4(CODE[23]), STR_3(CODE[6]), 
		 -> STR_2(CODE[5]), STR_1(CODE[13]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> A6_SpeedSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), EUSART_RX(BANK1[100]), loop@response_154(BANK2[32]), 
		 -> loop@response(BANK2[32]), 

    loop$148	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_6(CODE[13]), STR_5(CODE[11]), 

    loop$143	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_3(CODE[6]), STR_2(CODE[5]), 


Critical Paths under _main in COMRAM

    _loop->_printLine
    _A6_SpeedSet->_A6_IsAlive
    _TFT_Init->_TFT_FillScreen
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _TFT_DrawLine->_TFT_DrawPixel
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _TFT_FillScreen->_TFT_Flood
    _EUSART_Init->_memset
    _A6_SpeedAutoDetect->_printLine
    _sprintf->___llmod
    ___llmod->___lldiv
    _printLine->_TFT_DrawString
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawFillRect
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_Flood
    _TFT_FullScreen->_TFT_SetAddrWindow
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->_TFT_WriteRegister
    _EUSART_SetSpeed->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen

Critical Paths under _isr in COMRAM

    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _main->_loop
    _loop->_A6_SpeedSet
    _A6_Init->_A6_SpeedAutoDetect

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_loop

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  253763
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                73    73      0  118903
                                             52 BANK0      4     4      0
                                              0 BANK2     69    69      0
                         _A6_Command
                         _A6_IsAlive
                 _A6_SpeedAutoDetect
                        _A6_SpeedSet
                             _memset
                          _printLine
 ---------------------------------------------------------------------------------
 (2) _A6_SpeedSet                                         56    52      4   15905
                                             65 COMRAM     4     0      4
                                              0 BANK0     52    52      0
                         _A6_Command
                         _A6_IsAlive
                    _EUSART_SetSpeed
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            10    10      0   12902
                                             29 COMRAM    10    10      0
                     _TFT_FillScreen
                     _TFT_FullScreen
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0   68579
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (2) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Ok                              0     0      0   37786
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawLine                                        31    21     10    7040
                                             18 COMRAM    31    21     10
                      _TFT_DrawPixel
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     370
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Ecg_Background_Leads_Failure                         0     0      0   30746
                     _TFT_DrawString
                     _TFT_FillScreen
 ---------------------------------------------------------------------------------
 (2) _TFT_FillScreen                                       2     0      2    6561
                                             27 COMRAM     2     0      2
                          _TFT_Flood
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0    1217
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              0     0      0   52162
                 _A6_SpeedAutoDetect
                            _sleepMS
 ---------------------------------------------------------------------------------
 (2) _A6_SpeedAutoDetect                                  45    45      0   51827
                                              0 BANK0     45    45      0
                         _A6_IsAlive
                    _EUSART_SetSpeed
                          _printLine
                            _sleepMS
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             33    25      8    4449
                                             26 COMRAM    24    16      8
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     412
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     335
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _printLine                                            4     0      4   40740
                                             73 COMRAM     4     0      4
                   _TFT_DrawFillRect
                     _TFT_DrawString
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawString                                      11     0     11   24185
                                             62 COMRAM    11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawChar                                        21    11     10   21771
                                             41 COMRAM    21    11     10
                   _TFT_DrawFillRect
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawPixel                                        6     0      6    4043
                                             12 COMRAM     6     0      6
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawFillRect                                    14     4     10   14513
                                             27 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1312
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _TFT_FullScreen                                       0     0      0    3506
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (6) _TFT_SetAddrWindow                                    8     0      8    3506
                                             12 COMRAM     8     0      8
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (6) _TFT_Flood                                           15     9      6    3660
                                             12 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TFT_WriteRegister                                    8     4      4    2600
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetSpeed                                     12     8      4    1184
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     781
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _A6_IsAlive                                          33    33      0    4755
                                             32 COMRAM    33    33      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     493
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _A6_Command                                          15     5     10    4142
                                             17 COMRAM    15     5     10
                        _A6_ReadLine
                   _EUSART_TX_String
                             _memset
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1217
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_String                                     3     0      3     276
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _EUSART_TX_Char                                       1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _A6_ReadLine                                         13     9      4     375
                                              4 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (11) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_RX_Interrupt                                 1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_SpeedAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _memset
           _strlen
         _strcmp
       _EUSART_SetSpeed
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
     _sleepMS
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_WriteRegister
         ___awdiv
         _abs
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul
       _TFT_FillScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_WriteRegister
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_FillScreen
       _TFT_Flood
         _TFT_WriteRegister
         ___wmul (ARG)
       _TFT_WriteRegister
     _TFT_FullScreen
       _TFT_SetAddrWindow
         _TFT_WriteRegister
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _A6_Command
       _A6_ReadLine
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _memset
       _strlen
     _A6_IsAlive
       _A6_Command
         _A6_ReadLine
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _memset
         _strlen
       _strcmp
     _A6_SpeedAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _memset
           _strlen
         _strcmp
       _EUSART_SetSpeed
         ___lldiv
       _printLine
         _TFT_DrawFillRect
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
           _TFT_FullScreen
             _TFT_SetAddrWindow
               _TFT_WriteRegister
           _TFT_SetAddrWindow
             _TFT_WriteRegister
           ___wmul
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
               _TFT_FullScreen
                 _TFT_SetAddrWindow
                   _TFT_WriteRegister
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
               ___wmul
             _TFT_DrawPixel
               _TFT_WriteRegister
             ___wmul
       _sleepMS
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
     _A6_SpeedSet
       _A6_Command
         _A6_ReadLine
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _memset
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _memset
           _strlen
         _strcmp
       _EUSART_SetSpeed
         ___lldiv
       _sleepMS
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
       _strcmp
     _memset
     _printLine
       _TFT_DrawFillRect
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
         _TFT_FullScreen
           _TFT_SetAddrWindow
             _TFT_WriteRegister
         _TFT_SetAddrWindow
           _TFT_WriteRegister
         ___wmul
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
             _TFT_FullScreen
               _TFT_SetAddrWindow
                 _TFT_WriteRegister
             _TFT_SetAddrWindow
               _TFT_WriteRegister
             ___wmul
           _TFT_DrawPixel
             _TFT_WriteRegister
           ___wmul

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     45      45       9       27.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BF       7       74.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      5E       5       58.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4D      57       1       92.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B9      20        0.0%
DATA                 0      0     1B9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Dec 25 13:56:56 2019

                  __size_of_A6_IsAlive 0076                                     l90 0790  
                                   l96 1B80                                     l99 1870  
                  __size_of_A6_Command 00E2                           ___awdiv@sign 000A  
                                   _x1 01B2                                     _x2 0197  
                                   _x3 01AA                                     _x4 01A1  
                                   _x5 018D                                     _x6 0183  
                                   _x7 0178                                     _x8 01BB  
                  ___wmul@multiplicand 0007                            __CFG_BORV$0 000000  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                                    l211 1C9A  
                                  l205 1CD8                                    l222 1B0A  
                                  l208 1560                                    l160 1736  
                                  l250 0C52                                    l243 0BDC  
                                  l235 0B6C                                    l227 0ACE  
                                  l219 108C                                    l253 0CC6  
                                  l413 1972                                    l190 1A4A  
                                  l246 0C30                                    l238 164E  
                                  l430 1B46                                    l255 0CEE  
                                  l248 0CEC                                    l281 13DA  
                                  l266 07CE                                    l258 1A06  
                                  l362 1C4E                                    l275 0984  
                                  l427 15D8                                    l532 16C4  
                                  l526 1D10                                    l471 1D14  
                                  l615 03FA                                    l480 1ACC  
                                  l553 1214                                    l465 1810  
                                  l474 1D28                                    l618 1C74  
                                  l546 0DEC                                    l538 0FAE  
                                  l652 12B8                                    l468 14E6  
                                  l565 0ECE                                    l645 12A8  
                                  l591 012C                                    l594 01B4  
      __end_of_Ecg_Background_Leads_Ok 15DA                                    l849 1150  
                                  _GIE 007F97                           __CFG_CPB$OFF 000000  
                         printLine@str 004A                           __CFG_CPD$OFF 000000  
                         __CFG_BOR$OFF 000000                                    _abs 1BBA  
                                  _isr 0008                        __end_of_A6_Init 1D12  
                                  prod 000FF3                                    wreg 000FE8  
                 __size_of_A6_ReadLine 00C4                           TFT_Flood@len 000F  
                         ?_EUSART_Init 0001                           __CFG_LVP$OFF 000000  
                         TFT_Init@data 0020                           __CFG_WDT$OFF 000000  
                                 l2000 16D0                                   l1033 1462  
                                 l1026 1452                                   l2010 16F6  
                                 l2002 16D6                                   ?_abs 0005  
                                 l1300 18D0                                   l2020 1708  
                                 l2012 16FA                                   l2004 16EE  
                                 l2030 171C                                   l2022 170C  
                                 l2014 16FC                                   l2006 16F0  
                                 l2040 1730                                   l2032 1720  
                                 l2024 170E                                   l2016 1700  
                                 l2008 16F2                                   l1306 19C0  
                                 l2042 1732                                   l2034 1728  
                                 l2026 1712                                   l2018 1704  
                                 l2044 1734                                   l2036 172C  
                                 l2028 171A                                   l2038 172E  
                                 l4000 1156                                   l1280 1BE4  
                                 l1281 1BEC                                   l4010 11C0  
                                 l4002 1186                                   l1292 1BB8  
                                 l4100 1250                                   l4014 11E2  
                                 l4006 11AA                                   l4022 1974  
                                 l4110 1298                                   l4102 125E  
                                 l1286 1C1E                                   l4016 11FE  
                                 l4008 11BE                                   l4024 1980  
                                 l4040 0E28                                   l4032 0DEE  
                                 l4112 12A2                                   l4104 1268  
                                 l4120 1406                                   l4200 003C  
                                 l4018 1204                                   l4026 1984  
                                 l4050 0E9A                                   l4042 0E44  
                                 l4034 0E00                                   l4106 1286  
                                 l4130 1812                                   l4122 1414  
                                 l4114 13DC                                   l4210 0092  
                                 l4202 0044                                   l4028 19B4  
                                 l4052 0E9C                                   l4044 0E62  
                                 l4036 0E08                                   l4140 1684  
                                 l4108 1296                                   l4060 1350  
                                 l4132 1818                                   l4124 1432  
                                 l4116 13F2                                   l4300 03EE  
                                 l4212 00BA                                   l4204 0050  
                                 l3260 193A                                   l4054 0EBA  
                                 l4038 0E24                                   l4070 1876  
                                 l4142 16AA                                   l4310 14D4  
                                 l4062 139A                                   l4134 1842  
                                 l4126 1442                                   l4118 13FA  
                                 l4230 016C                                   l4214 00BE  
                                 l4206 006E                                   l4222 00EC  
                                 l3262 1948                                   l3254 1926  
                                 l4048 0E86                                   l4072 187E  
                                 l4136 1650                                   l4312 14DE  
                                 l4304 1464                                   l4064 13A6  
                                 l4152 1B48                                   l4128 144C  
                                 l4080 1BF0                                   l4240 01C2  
                                 l4232 0186                                   l4224 013A  
                                 l4216 00E0                                   l4208 0076  
                                 l4160 0986                                   l3264 194A  
                                 l3256 192A                                   l4400 1050  
                                 l4320 0EF4                                   l4074 18AE  
                                 l4138 1658                                   l4146 16B0  
                                 l4314 14E2                                   l4306 146A  
                                 l4066 13AA                                   l4058 134C  
                                 l4154 1B62                                   l4082 1BF4  
                                 l4242 01DA                                   l4234 018E  
                                 l4226 0148                                   l4218 00E6  
                                 l4410 17BC                                   l4170 0A64  
                                 l4162 09D4                                   l3266 196C  
                                 l3258 1938                                   l4402 1064  
                                 l4330 0F92                                   l4322 0F20  
                                 l4076 18C6                                   l4068 1872  
                                 l4148 16C2                                   l4092 1216  
                                 l4308 149E                                   l4084 1C04  
                                 l4260 024A                                   l4244 01E6  
                                 l4236 019C                                   l4228 0160  
                                 l4340 0CF0                                   l4412 17C4  
                                 l4156 19C2                                   l4180 0AE8  
                                 l4172 0A70                                   l4164 09E6  
                                 l4420 1C36                                   l4404 107C  
                                 l4324 0F46                                   l4094 1226  
                                 l4086 1C14                                   l4270 02AE  
                                 l4262 025C                                   l4254 020E  
                                 l4246 0202                                   l4238 01A0  
                                 l4350 0D1C                                   l4342 0D02  
                                 l4430 1CF8                                   l4414 17D8  
                                 l4158 19EA                                   l4190 0B4A  
                                 l4182 0B08                                   l4174 0A88  
                                 l4166 0A16                                   l4422 1C3E  
                                 l4406 1080                                   l4326 0F6E  
                                 l4334 0F98                                   l4318 0ED0  
                                 l4096 123C                                   l4088 1C18  
                                 l4280 02E4                                   l4272 02BA  
                                 l4264 026E                                   l4248 020A  
                                 l4352 0D40                                   l4344 0D16  
                                 l4432 1CFC                                   l4416 17F4  
                                 l4408 17A6                                   l4184 0B24  
                                 l4192 0B4E                                   l4176 0AC2  
                                 l4168 0A34                                   l4424 1C42  
                                 l1960 1CC6                                   l1952 1CBC  
                                 l4336 0FAC                                   l4328 0F82  
                                 l4440 0472                                   l4098 1244  
                                 l4290 032C                                   l4282 02FC  
                                 l4274 02C2                                   l4266 0284  
                                 l4258 0248                                   l4194 0012  
                                 l4354 0D54                                   l4362 0DC4  
                                 l2906 1BBA                                   l4186 0B2C  
                                 l4178 0AD6                                   l4370 156E  
                                 l4426 1C48                                   l4418 1C20  
                                 l1962 1CC8                                   l1954 1CC0  
                                 l4442 0486                                   l4450 04DA  
                                 l4434 03FC                                   l3900 0B72  
                                 l4292 03A2                                   l4284 0312  
                                 l4276 02D4                                   l4268 028A  
                                 l4196 001E                                   l4364 0DD8  
                                 l4356 0D8A                                   l4380 1B18  
                                 l2908 1BC8                                   l4188 0B3A  
                                 l4372 159C                                   l4428 1C4C  
                                 l1964 1CD6                                   l1956 1CC2  
                                 l4460 0598                                   l4444 04A2  
                                 l4452 055E                                   l4436 041A  
                                 l3910 0BC6                                   l3902 0B76  
                                 l4294 03AE                                   l4286 031E  
                                 l4278 02E0                                   l4198 0030  
                                 l4366 0DDC                                   l4358 0D9E  
                                 l4374 15C6                                   l1958 1CC4  
                                 l4390 0FDE                                   l4382 0FB0  
                                 l4470 05E6                                   l4462 05AC  
                                 l4454 0570                                   l4446 04BE  
                                 l4438 045E                                   l3920 0CA2  
                                 l3904 0B8A                                   l4296 03B2  
                                 l4288 0322                                   l2960 10A0  
                                 l4376 15CE                                   l4368 1562  
                                 l4392 0FFC                                   l4384 0FB4  
                                 l4480 066C                                   l4472 05F0  
                                 l4464 05C0                                   l4456 057C  
                                 l4560 1CA4                                   l3922 0CBC  
                                 l3914 0C0C                                   l3906 0B94  
                                 l4298 03CC                                   l4378 1B0C  
                                 l2970 10C6                                   l2962 10A8  
                                 l4394 1000                                   l4386 0FCA  
                                 l4490 0710                                   l4482 067C  
                                 l4466 05C4                                   l4458 0584  
                                 l4474 0604                                   l4562 1CA8  
                                 l3940 1D14                                   l3860 1A0E  
                                 l3924 0CDA                                   l3916 0C26  
                                 l3908 0B98                                   l3932 15DA  
                                 l2980 10FE                                   l2972 10CE  
                                 l2964 10AC                                   l2956 108E  
                                 l4396 1022                                   l4388 0FD2  
                                 l1996 16C6                                   l4492 0724  
                                 l4484 06A8                                   l4476 0622  
                                 l4468 05D8                                   l4564 1CAC  
                                 l4556 1C9C                                   l3942 1D22  
                                 l3950 1B9E                                   l3870 1A20  
                                 l3862 1A12                                   l3918 0C3C  
                                 l3926 1C50                                   l3934 161E  
                                 l2990 112A                                   l2982 1104  
                                 l2974 10E0                                   l2966 10BA  
                                 l2958 1092                                   l4398 1036  
                                 l1998 16C8                                   l4494 0734  
                                 l4478 0658                                   l4486 06BC  
                                 l4566 1CB0                                   l4558 1CA0  
                                 l3944 1B82                                   l3880 1A34  
                                 l3872 1A24                                   l3864 1A16  
                                 l3928 1C6C                                   l3936 164A  
                                 l3960 07CA                                   l3952 0792  
                                 l2984 111A                                   l2976 10E8  
                                 l2992 1130                                   l2968 10C2  
                                 l4496 0750                                   l4488 06DA  
                                 l3946 1B8E                                   l3890 1A46  
                                 l3882 1A38                                   l3874 1A28  
                                 l3866 1A1A                                   l3858 1A08  
                                 l3938 1ACE                                   l3970 0822  
                                 l2994 1140                                   l2986 1122  
                                 l2978 10F0                                   l4498 077C  
                                 l3948 1B9A                                   l3892 1A48  
                                 l3884 1A3C                                   l3876 1A2A  
                                 l3868 1A1E                                   l3980 0954  
                                 l3972 088E                                   l2996 1148  
                                 l2988 1124                                   l3990 1A8E  
                                 l3886 1A3E                                   l3878 1A30  
                                 l3894 14E8                                   l3982 0956  
                                 l3974 08A6                                   l3966 07DC  
                                 l3958 0796                                   l4870 0548  
                                 l3992 1A92                                   l3888 1A42  
                                 l3896 1C76                                   l3984 095A  
                                 l3976 08B6                                   l3968 07EC  
                                 l4872 0510                                   l3994 1AB6  
                                 l3898 0B6E                                   l3986 096E  
                                 l3978 08EC                                   l4874 051E  
                                 l4866 04FA                                   l3996 1ABA  
                                 l3988 0970                                   l4876 053A  
                                 l4868 052C                                   ?_isr 0001  
                                 l3998 1152                                   STR_1 5F94  
                                 STR_2 5FE8                                   STR_3 5FE2  
                                 STR_4 5F5D                                   STR_5 5FCF  
                                 STR_6 5F87                                   STR_7 5FDA  
                                 STR_8 5FF8                                   STR_9 5FFB  
                                 _CREN 007D5C                          TFT_DrawChar@c 002E  
                                 u3000 13F2                                   u2120 1938  
                                 u3001 13EE                                   u2121 1934  
                                 u3010 1414                                   u2130 1948  
                                 u3011 1410                                   u2131 1944  
                        TFT_DrawChar@i 003E                                   u3020 1432  
                                 u3100 0AC2                                   u2140 195E  
                        TFT_DrawChar@j 003D                                   u3021 142E  
                                 u3101 0ABE                                   u2141 1956  
                                 _LATA 000F89                                   u3030 16AA  
                                 u3110 0AE8                                   _LATB 000F8A  
                                 u3031 16A6                                   u3111 0AE4  
                                 _LATC 000F8B                                   u3040 16C2  
                                 u3200 01C2                                   u3120 0B3A  
                                 u3041 16BE                                   u3201 01BE  
                                 u3121 0B36                                   u3050 1B80  
                                 u3210 0244                                   u1610 1BC8  
                                 u3130 0B6C                                   u3051 1B7C  
                                 u3211 0240                                   u1611 1BC4  
                                 u3131 0B68                                   u3300 03EE  
                                 u3220 025C                                   u3140 0030  
                                 u1700 10BA                                   u3060 09CE  
                                 u3301 03EA                                   u3221 0258  
                                 u3141 002C                                   u1701 10B6  
                                 u3061 09C8                                   u3310 14BE  
                                 u3230 026E                                   u3150 006E  
                                 u1710 10E0                                   u3070 09D0  
                                 u2158 1960                                   u3231 026A  
                                 u3151 006A                                   u1711 10DC  
                                 u3240 0284                                   u3160 00DC  
                                 u1720 10FE                                   u3080 09E6  
                                 u3320 0F46                                   u3400 041A  
                                 u3241 0280                                   u3161 00D8  
                                 u1721 10FA                                   u3081 09E2  
                                 u3321 0F42                                   u3401 0416  
                                 u3250 02AE                                   u3170 013A  
                                 u1730 111A                                   u3090 0A34  
                                 u3330 0F82                                   u3410 045E  
                        TFT_DrawChar@x 002A                                   u3315 14B4  
                                 u3251 02AA                                   u3171 0136  
                                 u1731 1116                                   u3091 0A30  
                                 u3331 0F7E                                   u3411 045A  
                        TFT_DrawChar@y 002C                                   u2700 0CEC  
                                 u3260 02D4                                   u3180 0148  
                                 u1740 1140                                   u3420 0570  
                                 u2701 0CE8                                   u3261 02D0  
                                 u3181 0144                                   u3341 0CFA  
                                 u1741 113C                                   u3421 056C  
                                 u2710 1D22                                   u3270 02FC  
                                 u3190 019C                                   u3350 0D54  
                                 u3430 05AC                                   u2711 1D1E  
                                 u3271 02F8                                   u3191 0198  
                                 u3351 0D50                                   u3431 05A8  
                                 u2800 1ACC                                   u2720 1BB8  
                                 u3280 0312                                   u3360 0DEC  
                                 u3440 05D8                                   u2801 1AC8  
                                 u2721 1BB4                                   u3281 030E  
                                 u3361 0DE8                                   u3441 05D4  
                                 u2810 11A6                                   u2650 0BB8  
                                 u2730 07DC                                   u3290 03CC  
                                 u1690 10A0                                   u3370 1036  
                                 u3450 0622                                   u2811 11A2  
                                 u2731 07D8                                   u3291 03C8  
                                 u1691 109C                                   u3371 1032  
                                 u3451 061E                                   u2820 11BE  
                                 u2660 0BD8                                   u2740 07EC  
                                 u2900 1380                                   u3380 107C  
                                 u3460 0658                                   u2821 11BA  
                                 u2661 0BD4                                   u2741 07E8  
                                 u3381 1078                                   u3461 0654  
                                 u2830 11DE                                   u2670 0C26  
                                 u2750 08A6                                   u2910 13CA  
                                 u3390 1C36                                   u3470 06DA  
                                 u2831 11DA                                   u2671 0C22  
                                 u2655 0BAE                                   u2751 08A2  
                                 u3391 1C32                                   u3471 06D6  
                                 u2840 19A4                                   u2680 0C4E  
                                 u2760 08B6                                   u2920 13DA  
                                 u3480 0710                                   u2681 0C4A  
                                 u2761 08B2                                   u2921 13D6  
                                 u3481 070C                                   u2850 19B4  
                                 u2930 18AE                                   u2690 0CBC  
                                 u2770 096E                                   u2851 19B0  
                                 u2931 18AA                                   u2691 0CB8  
                                 u2771 096A                                   u2907 1376  
                                 _PEIE 007F96                                   u2860 0E00  
                                 u2940 18C6                                   u2780 0984  
                                 u2861 0DFC                                   u2941 18C2  
                                 u2781 0980                                   u2917 13C0  
                                 u2790 1AB2                                   u2870 0E82  
                                 u2950 1C04                                   u2847 199A  
                                 u2871 0E7E                                   u2951 1C00  
                                 u2880 0E9A                                   u2960 1C14  
                                 u2881 0E96                                   u2961 1C10  
                                 u2890 0EBA                                   u2970 123C  
                                 u2891 0EB6                                   u2971 1238  
                                 _RCIE 007CED                                   u2980 125E  
                                 _RCIF 007CF5                                   u2797 1AA8  
                                 u2981 125A                                   u3757 16E0  
                                 u2990 1286                                   u2991 1282  
                                 u3767 0FBE                                   u3777 1040  
                                 u3787 1CCE                                   _OERR 007D59  
                                 _RBPU 007F8F                                   _TXIF 007CF4  
                 __size_of_A6_SpeedSet 00E0                          TFT_DrawLine@t 0020  
                                 abs@a 0005                                   _main 1C9C  
                                 _init 16C6                                   _tmp1 00AE  
                                 _tmp2 00AA                                   _tmp3 0104  
                                 _tmp4 0100                                   _loop 03FC  
                                 fsr0h 000FEA                                   indf0 000FEF  
                                 fsr2h 000FDA                                   fsr0l 000FE9  
                                 indf1 000FE7                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 0058                                   prodh 000FF4  
                                 prodl 000FF3                                   start 000E  
                    TFT_Flood@color_hi 001A                      TFT_Flood@color_lo 001B  
                        __CFG_IESO$OFF 000000                           ___param_bank 000000  
        ?_Ecg_Background_Leads_Failure 0001                                  ??_abs 0007  
                                ??_isr 0003                          __CFG_PLLDIV$1 000000  
                      ??_TFT_DrawPixel 0013                         __CFG_CCP2MX$ON 000000  
                       printLine@color 004C                                  ?_main 0001  
                                ?_init 0001                        __end_of___awdiv 1152  
                                ?_loop 0001                                  STR_10 5FAD  
                                STR_11 5FF8                                  STR_12 5FFB  
                                STR_20 5FA1                                  STR_21 5FF8  
                                STR_13 5FF1                                  STR_22 5FFB  
                                STR_14 5FC4                                  STR_23 5FF5  
                                STR_15 5F41                                  STR_16 5FED  
                                STR_24 5F74                                  STR_17 5FF8  
                                STR_25 5FB9                                  STR_18 5FFB  
                                STR_19 5FF5                        __end_of___lldiv 12BA  
                      ___awdiv@divisor 0007                        __end_of___llmod 1464  
                       TFT_DrawChar@bg 0031                                  i2l167 179A  
                                i2l408 1CF6                                  i2l485 1A8C  
                      ___awdiv@counter 0009                                  _RCREG 000FAE  
                                _TMR3H 000FB3                                  _TMR3L 000FB2  
                                _SPBRG 000FAF                                  _PORTB 000F81  
                        __CFG_USBDIV$2 000000                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TXREG 000FAD                                  _Ecg_X 0056  
                                _Ecg_Y 0054                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         TFT_DrawLine@x0 0013  
                       TFT_DrawLine@x1 0017                         TFT_DrawLine@y0 0015  
                       TFT_DrawLine@y1 0019                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                         TFT_DrawLine@dx 0030  
                       TFT_DrawLine@dy 0028                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                __size_of_Ecg_CheckLeads 004E  
                      __end_of_dpowers 5F03                        __end_of_isdigit 1C20  
                     __end_of_TFT_Font 5E0F                       __end_of_TFT_Init 108E  
                       TFT_DrawPixel@x 000D                         TFT_DrawPixel@y 000F  
                   __size_of_TFT_Flood 0182                        __end_of_sleepMS 1B82  
                     _TFT_DrawFillRect 15DA                                  tablat 000FF5  
                   __size_of_TFT_Reset 001E                 __size_of_Ecg_Interrupt 001E  
                     __end_of_Ecg_Init 1C50                                  plusw1 000FE3  
                                plusw2 000FDB                                  ttemp5 0059  
                                ttemp6 005C                                  ttemp7 0060  
                                status 000FD8                                  wtemp8 0059  
                      __end_of_sprintf 03FC                      ??_EUSART_SetSpeed 0016  
                       __CFG_MCLRE$OFF 000000                         TFT_Flood@color 000D  
                      __initialization 12BA                           __end_of_main 1CBC  
                         __end_of_init 1738                           __end_of_loop 0792  
                            ??_A6_Init 004E                                 ??_main 004E  
                     ??_TFT_FillScreen 001E                                 ??_init 0005  
                               ??_loop 0094                          __activetblptr 000002  
                     ??_TFT_DrawString 004A                       loop@response_154 0220  
                         ??_A6_IsAlive 0021                           ??_A6_Command 001C  
                       _EUSART_TX_Char 1D12                       ___llmod@dividend 0012  
                               _ADRESH 000FC4                                 _ADRESL 000FC3  
                     ___awdiv@dividend 0005                      _TFT_DrawChar$2002 0039  
                    _TFT_DrawChar$2003 003B                                 i2l3430 1CF4  
                               i2l3440 1A78                                 i2l3432 1A4C  
                               i2l3520 175E                                 i2l3442 1A7C  
                               i2l3434 1A5E                                 i2l3426 1CDA  
                               i2l3522 176C                                 i2l3530 177A  
                               i2l3436 1A62                                 i2l3428 1CF2  
                               i2l3532 1788                                 i2l3524 1770  
                               i2l3516 1742                                 i2l3438 1A66  
                               i2l3534 1796                                 i2l3526 1774  
                               i2l3518 1750                                 i2l3528 1778  
                               _TMR3IE 007D01                                 _TMR3IF 007D09  
                               _SPBRGH 000FB0       __size_of_Ecg_Background_Leads_Ok 0078  
                       __CFG_XINST$OFF 000000                        TFT_DrawLine@err 002C  
                     ??_TFT_FullScreen 0015                                 ___wmul 1C50  
                            ??___awdiv 0009                              ??___lldiv 000D  
                            ??___llmod 001A                      ?_EUSART_TX_String 0009  
                   __end_of_A6_IsAlive 16C6                                 _memset 1B82  
                        _Ecg_Interrupt 1CDA                      __end_of_TFT_Flood 0CF0  
                               clear_0 1320                                 clear_1 132C  
                   __end_of_A6_Command 0ED0                       ___awdiv@quotient 000B  
                    __end_of_TFT_Reset 1CDA                     ??_EUSART_TX_String 000C  
                               _strcmp 1872                                 _strlen 1974  
                       A6_IsAlive@loop 0041                           __pdataCOMRAM 0054  
                            ??_isdigit 0005                                 loop@zz 0244  
                         __mediumconst 590E                 __end_of_EUSART_TX_Char 1D2A  
                            ??_sleepMS 0009                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                      TFT_DrawString@x 003F                        TFT_DrawString@y 0041  
                            ??_sprintf 0023                   __size_of_EUSART_Init 006C  
                           __accesstop 0060                __end_of__initialization 133E  
                      __CFG_PBADEN$OFF 000000                          ___rparam_used 000001  
                      TFT_Flood@blocks 0017                         __pcstackCOMRAM 0001  
                         __pidataBANK0 1D2A                           __pidataBANK1 18D2  
                       ?_Ecg_Interrupt 0001                              ?_TFT_Init 0001  
           __end_of_A6_SpeedAutoDetect 0DEE                              ?_Ecg_Init 0001  
         __size_of_EUSART_RX_Interrupt 0042                        ?_EUSART_TX_Char 0001  
                       _Ecg_CheckLeads 1926                           sprintf@width 0030  
                           __pbssBANK0 0098                             __pbssBANK1 0100  
              A6_SpeedAutoDetect@F3081 016C                                ?___wmul 0005  
                           ??_TFT_Init 001E                                ?_memset 0005  
                              _A6_Init 1CF8               __end_of_TFT_DrawFillRect 1650  
                              ?_strcmp 0005                                ?_strlen 0005  
                        ??_A6_ReadLine 0009                             ??_Ecg_Init 004A  
                   A6_ReadLine@timeout 0007                 TFT_WriteRegister@h_712 000B  
               TFT_WriteRegister@l_713 000C                 __end_of_Ecg_CheckLeads 1974  
                     TFT_DrawChar@line 0038                       TFT_DrawChar@size 0033  
                   __size_of_printLine 0060                           A6_ReadLine@t 000D  
                        ??_A6_SpeedSet 0046                        _EUSART_SetSpeed 1464  
                            TFT_Init@i 0026                        __CFG_VREGEN$OFF 000000  
                TFT_DrawFillRect@color 0024                _Ecg_Background_Leads_Ok 1562  
                              __Hparam 0000                                __Lparam 0000  
                    A6_Command@command 0012                              _ECG_FLAGS 0052  
                      ??_Ecg_Interrupt 0001                                ___awdiv 108E  
                              ___lldiv 1216                        __size_of___wmul 0026  
                              ___llmod 13DC                        __CFG_STVREN$OFF 000000  
                    A6_Command@timeout 0018                          _ECG_HEARTBEAT 0098  
                              __pcinit 12BA                        __size_of_memset 0038  
                              __ramtop 0800                          _ECG_HEARTRATE 004E  
                              __ptext0 1C9C                                __ptext1 03FC  
                              __ptext2 0ED0                                __ptext3 16C6  
                              __ptext4 0FB0                                __ptext5 1CBC  
                              __ptext6 1C20                                __ptext7 1926  
                              __ptext8 1562                                __ptext9 0986  
                __end_of_TFT_DrawPixel 1B0C                        __size_of_strcmp 0060  
                      __size_of_strlen 004E                                _dpowers 5EDB  
                         __size_of_abs 0034                                _isdigit 1BEE  
                         __size_of_isr 179E                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                                _sleepMS 1B48  
                  __end_of_A6_ReadLine 1216                                _sprintf 0012  
                       __pintcode_body 1738                              _EUSART_RX 0108  
                 end_of_initialization 133E                                memset@c 0007  
                              memset@n 0009                                memset@p 000B  
                        __Lmediumconst 590E                                int_func 1738  
                  __end_of_A6_SpeedSet 0FB0                     TFT_WriteRegister@h 0009  
                   TFT_WriteRegister@l 000A                        ___lldiv@divisor 0009  
                      ___lldiv@counter 0011                      __end_of_printLine 1872  
            Ecg_CheckLeads@leadsStatus 0008                              _RCSTAbits 000FAB  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                     TFT_DrawString@bg 0047                          ?_TFT_DrawChar 002A  
                        ?_TFT_DrawLine 0013                                strcmp@r 000B  
                              strlen@s 0005                              _PORTAbits 000F80  
                            _PORTCbits 000F82                __end_of_EUSART_SetSpeed 14E8  
                            _TFT_Flood 0B6E                              _TFT_Reset 1CBC  
                 EUSART_SetSpeed@speed 0012              __size_of_EUSART_TX_String 0040  
            ??_Ecg_Background_Leads_Ok 004A                            TFT_Init@cmd 0024  
                            _TXSTAbits 000FAC                    _EUSART_RX_Interrupt 1A4C  
                       ??_TFT_DrawChar 0034                         ??_TFT_DrawLine 001D  
                       __end_of___wmul 1C76                            _BAUDCONbits 000FB8  
                   A6_IsAlive@response 0021                          __pidataCOMRAM 1D32  
                     ??_EUSART_TX_Char 0005                         __end_of_memset 1BBA  
                    __size_of_TFT_Init 00DE                           _MILLISECONDS 00B2  
                          _A6_ReadLine 1152                             ?_TFT_Flood 000D  
                       __end_of_strcmp 18D2                         __end_of_strlen 19C2  
                           ?_TFT_Reset 0001                    start_initialization 12BA  
                 ?_EUSART_RX_Interrupt 0001                      __size_of_Ecg_Init 0030  
                          __end_of_abs 1BEE                            __end_of_isr 17A6  
                        ??_EUSART_Init 000D                    TFT_SetAddrWindow@x1 000D  
                  TFT_SetAddrWindow@x2 0011                    TFT_SetAddrWindow@y1 000F  
                  TFT_SetAddrWindow@y2 0013                     _A6_SpeedAutoDetect 0CF0  
                          _A6_SpeedSet 0ED0                __size_of_TFT_FillScreen 0046  
                  EUSART_TX_String@len 000B                    EUSART_TX_String@str 0009  
                  A6_SpeedAutoDetect@i 008C                        ___llmod@divisor 0016  
                      ___llmod@counter 001A                    ?_A6_SpeedAutoDetect 0001  
              __size_of_TFT_DrawString 0090                        A6_Command@resp1 0014  
                      A6_Command@resp2 0016                      _TFT_Init_Sequence 5E0F  
                             ??___wmul 0009                            __pdataBANK0 00B6  
                          __pdataBANK1 016C                       __CFG_LPT1OSC$OFF 000000  
                             ??_memset 000B                               ?_A6_Init 0001  
                    ?_TFT_DrawFillRect 001C                               ??_strcmp 0009  
                             ??_strlen 0007                   ??_A6_SpeedAutoDetect 004E  
                   ??_TFT_DrawFillRect 0026                     EUSART_SetSpeed@tmp 001A  
                     ?_EUSART_SetSpeed 0012                  ??_EUSART_RX_Interrupt 0001  
       ??_Ecg_Background_Leads_Failure 004A                __size_of_TFT_FullScreen 0026  
                          __pbssCOMRAM 004E                          __pcstackBANK0 0060  
                        __pcstackBANK2 0200                           loop@response 0200  
                         _isdigit$1772 0006                            sprintf@flag 002F  
                          sprintf@prec 0027                    __end_of_EUSART_Init 1812  
            __end_of_TFT_Init_Sequence 5EDB                            A6_Command@t 001D  
                            __pintcode 0008                          __pmediumconst 590E  
                             ?___awdiv 0005                               ?___lldiv 0005  
                             ?___llmod 0012                       ??_Ecg_CheckLeads 0007  
                TFT_WriteRegister@data 0007                 A6_SpeedAutoDetect@zzzz 0060  
                             _A6_SPEED 00B6                            ??_TFT_Flood 0013  
                             ?_isdigit 0001                   EUSART_RX_Interrupt@c 0001  
                          ??_TFT_Reset 0005                               ?_sleepMS 0005  
                    _TFT_WriteRegister 1A08                       _EUSART_TX_String 1A8E  
                             ?_sprintf 001B                   __end_of_TFT_DrawChar 0986  
                 __end_of_TFT_DrawLine 0B6E                    A6_ReadLine@response 0005  
                   ?_TFT_WriteRegister 0005                         ___wmul@product 0009  
                    TFT_DrawChar@color 002F               A6_SpeedAutoDetect@speeds 0080  
                  ??_TFT_WriteRegister 0009                               i2u228_40 1A5E  
                             i2u236_40 1750                               i2u228_41 1A5A  
                             i2u236_41 174C                               i2u229_40 1A78  
                             i2u237_40 175E                               i2u229_41 1A74  
                             i2u237_41 175A                               i2u238_40 1788  
                             i2u238_41 1784                               i2u239_40 1796  
                             i2u239_41 1792                               _GO_nDONE 007E11  
                             _UCFGbits 000F6F                       __CFG_WDTPS$32768 000000  
                             _UCONbits 000F6D                              _printLine 1812  
                __end_of_Ecg_Interrupt 1CF8                               _TFT_Font 590F  
                             _TFT_Init 0FB0                       __size_of_A6_Init 001A  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0                      ___wmul@multiplier 0005  
                             _Ecg_Init 1C20                             TFT_Flood@i 0019  
                             _Ecg_Xold 00BC                               _Ecg_Yold 00BA  
            __end_of_TFT_WriteRegister 1A4C                     TFT_DrawPixel@color 0011  
                           _A6_IsAlive 1650                        EUSART_TX_Char@c 0005  
                          _EUSART_Init 17A6                      TFT_DrawFillRect@h 0022  
                           _A6_Command 0DEE                      TFT_DrawFillRect@w 0020  
                    TFT_DrawFillRect@x 001C                      TFT_DrawFillRect@y 001E  
                       _TFT_FillScreen 19C2                              copy_data0 12CE  
                            copy_data1 12EE                              copy_data2 130E  
                    _TFT_SetAddrWindow 14E8                         _TFT_DrawString 134C  
               __size_of_TFT_DrawPixel 003E                     ?_TFT_SetAddrWindow 000D  
                             __Hrparam 0000                               __Lrparam 0000  
             TFT_Init@initSequenceSize 0022                             _ECG_BUFFER 00A5  
                  TFT_DrawString@color 0045                             ?_printLine 004A  
                  ??_TFT_SetAddrWindow 0015                      TFT_DrawLine@t_757 0022  
                    TFT_DrawLine@t_758 0024                      TFT_DrawLine@t_759 0026  
                     __size_of___awdiv 00C4                       __size_of___lldiv 00A4  
                     __size_of___llmod 0088                      TFT_DrawLine@color 001B  
                    TFT_DrawLine@steep 002E                      TFT_DrawLine@ystep 002A  
                         ?_A6_ReadLine 0005                         _TFT_FullScreen 1C76  
                   A6_Command@response 001A                             sprintf@val 0029  
                  A6_SpeedSet@response 0060                       __size_of_isdigit 0032  
                     A6_ReadLine@iLine 0011                 __end_of_TFT_FillScreen 1A08  
                             __ptext10 1BBA                               __ptext11 108E  
                             __ptext20 1B48                               __ptext12 1B0C  
                             __ptext21 1812                               __ptext13 19C2  
                             __ptext30 1A08                               __ptext22 134C  
                             __ptext14 17A6                               __ptext31 1464  
                             __ptext23 0792                               __ptext15 1CF8  
                             __ptext40 1152                               __ptext32 1216  
                             __ptext24 1ACE                               __ptext16 0CF0  
                             __ptext33 1650                               __ptext25 15DA  
                             __ptext17 0012                               __ptext42 1CDA  
                             __ptext34 1872                               __ptext26 1C50  
                             __ptext18 1BEE                               __ptext43 1A4C  
                             __ptext35 0DEE                               __ptext27 1C76  
                             __ptext19 13DC                               __ptext36 1974  
                             __ptext28 14E8                               __ptext37 1B82  
                             __ptext29 0B6E                               __ptext38 1A8E  
                             __ptext39 1D12                       __size_of_sleepMS 003A  
                         ?_A6_SpeedSet 0042                   TFT_WriteRegister@reg 0005  
            __end_of_TFT_SetAddrWindow 1562                       __size_of_sprintf 03EA  
               __end_of_TFT_DrawString 13DC                               _loop$143 0240  
                             _loop$148 0242                              sleepMS@ms 0005  
                        __size_of_main 0020                          __size_of_init 0072  
                        __size_of_loop 0396                         _ECG_ICON_HEART 5F03  
                             int$flags 0058                    TFT_FillScreen@color 001C  
               __end_of_TFT_FullScreen 1C9C                  __CFG_CPUDIV$OSC1_PLL2 000000  
                        _TFT_DrawPixel 1ACE                            _OSCTUNEbits 000F9B  
                __size_of_TFT_DrawChar 01F4                  __size_of_TFT_DrawLine 01E8  
           __size_of_TFT_WriteRegister 0044                        ?_TFT_FillScreen 001C  
             ?_Ecg_Background_Leads_Ok 0001                               isdigit@c 0007  
                             memset@p1 0005                            ?_A6_IsAlive 0001  
                   TFT_DrawString@size 0049                            ?_A6_Command 0012  
                             intlevel2 0000                              sprintf@ap 002D  
                   A6_SpeedSet@request 0080                              sprintf@sp 001B  
            __size_of_TFT_DrawFillRect 0076                        ?_TFT_DrawString 003F  
                     ___lldiv@dividend 0005                 __end_of_ECG_ICON_HEART 5F41  
                             sleepMS@t 0009                             _OSCCONbits 000FD3  
             __end_of_EUSART_TX_String 1ACE                            ??_printLine 004E  
                         _TFT_DrawChar 0792                           _TFT_DrawLine 0986  
          __end_of_EUSART_RX_Interrupt 1A8E                        ?_TFT_FullScreen 0001  
                    TFT_DrawString@str 0043                         ?_TFT_DrawPixel 000D  
                             sprintf@c 0032                               sprintf@f 001D  
          __size_of_A6_SpeedAutoDetect 00FE                               strcmp@s1 0005  
                             strcmp@s2 0007                       ___lldiv@quotient 000D  
                             strlen@cp 0007                __size_of_EUSART_TX_Char 0018  
           __size_of_TFT_SetAddrWindow 007A                       A6_SpeedSet@speed 0042  
                   __CFG_FOSC$HSPLL_HS 000000               __size_of_EUSART_SetSpeed 0084  
 __end_of_Ecg_Background_Leads_Failure 1B48  __size_of_Ecg_Background_Leads_Failure 003C  
         _Ecg_Background_Leads_Failure 1B0C  
