

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 28 09:27:18 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93  0000                     
    94                           ; Version 2.10
    95                           ; Generated 31/07/2019 GMT
    96                           ; 
    97                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F2455 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	idataCOMRAM
   130  003058                     __pidataCOMRAM:
   131                           	opt callstack 0
   132                           
   133                           ;initializer for _Ecg_X
   134  003058  00EF               	dw	239
   135                           
   136                           	psect	idataBANK0
   137  003048                     __pidataBANK0:
   138                           	opt callstack 0
   139                           
   140                           ;initializer for _Ecg_Yold
   141  003048  018F               	dw	399
   142                           
   143                           ;initializer for _Ecg_Y
   144  00304A  018F               	dw	399
   145                           
   146                           ;initializer for _Ecg_Xold
   147  00304C  00EF               	dw	239
   148                           
   149                           	psect	mediumconst
   150  00591E                     __pmediumconst:
   151                           	opt callstack 0
   152  00591E  00                 	db	0
   153  00591F                     _TFT_Font:
   154                           	opt callstack 0
   155  00591F  00                 	db	0
   156  005920  00                 	db	0
   157  005921  00                 	db	0
   158  005922  00                 	db	0
   159  005923  00                 	db	0
   160  005924  3E                 	db	62
   161  005925  5B                 	db	91
   162  005926  4F                 	db	79
   163  005927  5B                 	db	91
   164  005928  3E                 	db	62
   165  005929  3E                 	db	62
   166  00592A  6B                 	db	107
   167  00592B  4F                 	db	79
   168  00592C  6B                 	db	107
   169  00592D  3E                 	db	62
   170  00592E  1C                 	db	28
   171  00592F  3E                 	db	62
   172  005930  7C                 	db	124
   173  005931  3E                 	db	62
   174  005932  1C                 	db	28
   175  005933  18                 	db	24
   176  005934  3C                 	db	60
   177  005935  7E                 	db	126
   178  005936  3C                 	db	60
   179  005937  18                 	db	24
   180  005938  1C                 	db	28
   181  005939  57                 	db	87
   182  00593A  7D                 	db	125
   183  00593B  57                 	db	87
   184  00593C  1C                 	db	28
   185  00593D  1C                 	db	28
   186  00593E  5E                 	db	94
   187  00593F  7F                 	db	127
   188  005940  5E                 	db	94
   189  005941  1C                 	db	28
   190  005942  00                 	db	0
   191  005943  18                 	db	24
   192  005944  3C                 	db	60
   193  005945  18                 	db	24
   194  005946  00                 	db	0
   195  005947  FF                 	db	255
   196  005948  E7                 	db	231
   197  005949  C3                 	db	195
   198  00594A  E7                 	db	231
   199  00594B  FF                 	db	255
   200  00594C  00                 	db	0
   201  00594D  18                 	db	24
   202  00594E  24                 	db	36
   203  00594F  18                 	db	24
   204  005950  00                 	db	0
   205  005951  FF                 	db	255
   206  005952  E7                 	db	231
   207  005953  DB                 	db	219
   208  005954  E7                 	db	231
   209  005955  FF                 	db	255
   210  005956  30                 	db	48
   211  005957  48                 	db	72
   212  005958  3A                 	db	58
   213  005959  06                 	db	6
   214  00595A  0E                 	db	14
   215  00595B  26                 	db	38
   216  00595C  29                 	db	41
   217  00595D  79                 	db	121
   218  00595E  29                 	db	41
   219  00595F  26                 	db	38
   220  005960  40                 	db	64
   221  005961  7F                 	db	127
   222  005962  05                 	db	5
   223  005963  05                 	db	5
   224  005964  07                 	db	7
   225  005965  40                 	db	64
   226  005966  7F                 	db	127
   227  005967  05                 	db	5
   228  005968  25                 	db	37
   229  005969  3F                 	db	63
   230  00596A  5A                 	db	90
   231  00596B  3C                 	db	60
   232  00596C  E7                 	db	231
   233  00596D  3C                 	db	60
   234  00596E  5A                 	db	90
   235  00596F  7F                 	db	127
   236  005970  3E                 	db	62
   237  005971  1C                 	db	28
   238  005972  1C                 	db	28
   239  005973  08                 	db	8
   240  005974  08                 	db	8
   241  005975  1C                 	db	28
   242  005976  1C                 	db	28
   243  005977  3E                 	db	62
   244  005978  7F                 	db	127
   245  005979  14                 	db	20
   246  00597A  22                 	db	34
   247  00597B  7F                 	db	127
   248  00597C  22                 	db	34
   249  00597D  14                 	db	20
   250  00597E  5F                 	db	95
   251  00597F  5F                 	db	95
   252  005980  00                 	db	0
   253  005981  5F                 	db	95
   254  005982  5F                 	db	95
   255  005983  06                 	db	6
   256  005984  09                 	db	9
   257  005985  7F                 	db	127
   258  005986  01                 	db	1
   259  005987  7F                 	db	127
   260  005988  00                 	db	0
   261  005989  66                 	db	102
   262  00598A  89                 	db	137
   263  00598B  95                 	db	149
   264  00598C  6A                 	db	106
   265  00598D  60                 	db	96
   266  00598E  60                 	db	96
   267  00598F  60                 	db	96
   268  005990  60                 	db	96
   269  005991  60                 	db	96
   270  005992  94                 	db	148
   271  005993  A2                 	db	162
   272  005994  FF                 	db	255
   273  005995  A2                 	db	162
   274  005996  94                 	db	148
   275  005997  08                 	db	8
   276  005998  04                 	db	4
   277  005999  7E                 	db	126
   278  00599A  04                 	db	4
   279  00599B  08                 	db	8
   280  00599C  10                 	db	16
   281  00599D  20                 	db	32
   282  00599E  7E                 	db	126
   283  00599F  20                 	db	32
   284  0059A0  10                 	db	16
   285  0059A1  08                 	db	8
   286  0059A2  08                 	db	8
   287  0059A3  2A                 	db	42
   288  0059A4  1C                 	db	28
   289  0059A5  08                 	db	8
   290  0059A6  08                 	db	8
   291  0059A7  1C                 	db	28
   292  0059A8  2A                 	db	42
   293  0059A9  08                 	db	8
   294  0059AA  08                 	db	8
   295  0059AB  1E                 	db	30
   296  0059AC  10                 	db	16
   297  0059AD  10                 	db	16
   298  0059AE  10                 	db	16
   299  0059AF  10                 	db	16
   300  0059B0  0C                 	db	12
   301  0059B1  1E                 	db	30
   302  0059B2  0C                 	db	12
   303  0059B3  1E                 	db	30
   304  0059B4  0C                 	db	12
   305  0059B5  30                 	db	48
   306  0059B6  38                 	db	56
   307  0059B7  3E                 	db	62
   308  0059B8  38                 	db	56
   309  0059B9  30                 	db	48
   310  0059BA  06                 	db	6
   311  0059BB  0E                 	db	14
   312  0059BC  3E                 	db	62
   313  0059BD  0E                 	db	14
   314  0059BE  06                 	db	6
   315  0059BF  00                 	db	0
   316  0059C0  00                 	db	0
   317  0059C1  00                 	db	0
   318  0059C2  00                 	db	0
   319  0059C3  00                 	db	0
   320  0059C4  00                 	db	0
   321  0059C5  00                 	db	0
   322  0059C6  5F                 	db	95
   323  0059C7  00                 	db	0
   324  0059C8  00                 	db	0
   325  0059C9  00                 	db	0
   326  0059CA  07                 	db	7
   327  0059CB  00                 	db	0
   328  0059CC  07                 	db	7
   329  0059CD  00                 	db	0
   330  0059CE  14                 	db	20
   331  0059CF  7F                 	db	127
   332  0059D0  14                 	db	20
   333  0059D1  7F                 	db	127
   334  0059D2  14                 	db	20
   335  0059D3  24                 	db	36
   336  0059D4  2A                 	db	42
   337  0059D5  7F                 	db	127
   338  0059D6  2A                 	db	42
   339  0059D7  12                 	db	18
   340  0059D8  23                 	db	35
   341  0059D9  13                 	db	19
   342  0059DA  08                 	db	8
   343  0059DB  64                 	db	100
   344  0059DC  62                 	db	98
   345  0059DD  36                 	db	54
   346  0059DE  49                 	db	73
   347  0059DF  56                 	db	86
   348  0059E0  20                 	db	32
   349  0059E1  50                 	db	80
   350  0059E2  00                 	db	0
   351  0059E3  08                 	db	8
   352  0059E4  07                 	db	7
   353  0059E5  03                 	db	3
   354  0059E6  00                 	db	0
   355  0059E7  00                 	db	0
   356  0059E8  1C                 	db	28
   357  0059E9  22                 	db	34
   358  0059EA  41                 	db	65
   359  0059EB  00                 	db	0
   360  0059EC  00                 	db	0
   361  0059ED  41                 	db	65
   362  0059EE  22                 	db	34
   363  0059EF  1C                 	db	28
   364  0059F0  00                 	db	0
   365  0059F1  2A                 	db	42
   366  0059F2  1C                 	db	28
   367  0059F3  7F                 	db	127
   368  0059F4  1C                 	db	28
   369  0059F5  2A                 	db	42
   370  0059F6  08                 	db	8
   371  0059F7  08                 	db	8
   372  0059F8  3E                 	db	62
   373  0059F9  08                 	db	8
   374  0059FA  08                 	db	8
   375  0059FB  00                 	db	0
   376  0059FC  80                 	db	128
   377  0059FD  70                 	db	112
   378  0059FE  30                 	db	48
   379  0059FF  00                 	db	0
   380  005A00  08                 	db	8
   381  005A01  08                 	db	8
   382  005A02  08                 	db	8
   383  005A03  08                 	db	8
   384  005A04  08                 	db	8
   385  005A05  00                 	db	0
   386  005A06  00                 	db	0
   387  005A07  60                 	db	96
   388  005A08  60                 	db	96
   389  005A09  00                 	db	0
   390  005A0A  20                 	db	32
   391  005A0B  10                 	db	16
   392  005A0C  08                 	db	8
   393  005A0D  04                 	db	4
   394  005A0E  02                 	db	2
   395  005A0F  3E                 	db	62
   396  005A10  51                 	db	81
   397  005A11  49                 	db	73
   398  005A12  45                 	db	69
   399  005A13  3E                 	db	62
   400  005A14  00                 	db	0
   401  005A15  42                 	db	66
   402  005A16  7F                 	db	127
   403  005A17  40                 	db	64
   404  005A18  00                 	db	0
   405  005A19  72                 	db	114
   406  005A1A  49                 	db	73
   407  005A1B  49                 	db	73
   408  005A1C  49                 	db	73
   409  005A1D  46                 	db	70
   410  005A1E  21                 	db	33
   411  005A1F  41                 	db	65
   412  005A20  49                 	db	73
   413  005A21  4D                 	db	77
   414  005A22  33                 	db	51
   415  005A23  18                 	db	24
   416  005A24  14                 	db	20
   417  005A25  12                 	db	18
   418  005A26  7F                 	db	127
   419  005A27  10                 	db	16
   420  005A28  27                 	db	39
   421  005A29  45                 	db	69
   422  005A2A  45                 	db	69
   423  005A2B  45                 	db	69
   424  005A2C  39                 	db	57
   425  005A2D  3C                 	db	60
   426  005A2E  4A                 	db	74
   427  005A2F  49                 	db	73
   428  005A30  49                 	db	73
   429  005A31  31                 	db	49
   430  005A32  41                 	db	65
   431  005A33  21                 	db	33
   432  005A34  11                 	db	17
   433  005A35  09                 	db	9
   434  005A36  07                 	db	7
   435  005A37  36                 	db	54
   436  005A38  49                 	db	73
   437  005A39  49                 	db	73
   438  005A3A  49                 	db	73
   439  005A3B  36                 	db	54
   440  005A3C  46                 	db	70
   441  005A3D  49                 	db	73
   442  005A3E  49                 	db	73
   443  005A3F  29                 	db	41
   444  005A40  1E                 	db	30
   445  005A41  00                 	db	0
   446  005A42  00                 	db	0
   447  005A43  14                 	db	20
   448  005A44  00                 	db	0
   449  005A45  00                 	db	0
   450  005A46  00                 	db	0
   451  005A47  40                 	db	64
   452  005A48  34                 	db	52
   453  005A49  00                 	db	0
   454  005A4A  00                 	db	0
   455  005A4B  00                 	db	0
   456  005A4C  08                 	db	8
   457  005A4D  14                 	db	20
   458  005A4E  22                 	db	34
   459  005A4F  41                 	db	65
   460  005A50  14                 	db	20
   461  005A51  14                 	db	20
   462  005A52  14                 	db	20
   463  005A53  14                 	db	20
   464  005A54  14                 	db	20
   465  005A55  00                 	db	0
   466  005A56  41                 	db	65
   467  005A57  22                 	db	34
   468  005A58  14                 	db	20
   469  005A59  08                 	db	8
   470  005A5A  02                 	db	2
   471  005A5B  01                 	db	1
   472  005A5C  59                 	db	89
   473  005A5D  09                 	db	9
   474  005A5E  06                 	db	6
   475  005A5F  3E                 	db	62
   476  005A60  41                 	db	65
   477  005A61  5D                 	db	93
   478  005A62  59                 	db	89
   479  005A63  4E                 	db	78
   480  005A64  7C                 	db	124
   481  005A65  12                 	db	18
   482  005A66  11                 	db	17
   483  005A67  12                 	db	18
   484  005A68  7C                 	db	124
   485  005A69  7F                 	db	127
   486  005A6A  49                 	db	73
   487  005A6B  49                 	db	73
   488  005A6C  49                 	db	73
   489  005A6D  36                 	db	54
   490  005A6E  3E                 	db	62
   491  005A6F  41                 	db	65
   492  005A70  41                 	db	65
   493  005A71  41                 	db	65
   494  005A72  22                 	db	34
   495  005A73  7F                 	db	127
   496  005A74  41                 	db	65
   497  005A75  41                 	db	65
   498  005A76  41                 	db	65
   499  005A77  3E                 	db	62
   500  005A78  7F                 	db	127
   501  005A79  49                 	db	73
   502  005A7A  49                 	db	73
   503  005A7B  49                 	db	73
   504  005A7C  41                 	db	65
   505  005A7D  7F                 	db	127
   506  005A7E  09                 	db	9
   507  005A7F  09                 	db	9
   508  005A80  09                 	db	9
   509  005A81  01                 	db	1
   510  005A82  3E                 	db	62
   511  005A83  41                 	db	65
   512  005A84  41                 	db	65
   513  005A85  51                 	db	81
   514  005A86  73                 	db	115
   515  005A87  7F                 	db	127
   516  005A88  08                 	db	8
   517  005A89  08                 	db	8
   518  005A8A  08                 	db	8
   519  005A8B  7F                 	db	127
   520  005A8C  00                 	db	0
   521  005A8D  41                 	db	65
   522  005A8E  7F                 	db	127
   523  005A8F  41                 	db	65
   524  005A90  00                 	db	0
   525  005A91  20                 	db	32
   526  005A92  40                 	db	64
   527  005A93  41                 	db	65
   528  005A94  3F                 	db	63
   529  005A95  01                 	db	1
   530  005A96  7F                 	db	127
   531  005A97  08                 	db	8
   532  005A98  14                 	db	20
   533  005A99  22                 	db	34
   534  005A9A  41                 	db	65
   535  005A9B  7F                 	db	127
   536  005A9C  40                 	db	64
   537  005A9D  40                 	db	64
   538  005A9E  40                 	db	64
   539  005A9F  40                 	db	64
   540  005AA0  7F                 	db	127
   541  005AA1  02                 	db	2
   542  005AA2  1C                 	db	28
   543  005AA3  02                 	db	2
   544  005AA4  7F                 	db	127
   545  005AA5  7F                 	db	127
   546  005AA6  04                 	db	4
   547  005AA7  08                 	db	8
   548  005AA8  10                 	db	16
   549  005AA9  7F                 	db	127
   550  005AAA  3E                 	db	62
   551  005AAB  41                 	db	65
   552  005AAC  41                 	db	65
   553  005AAD  41                 	db	65
   554  005AAE  3E                 	db	62
   555  005AAF  7F                 	db	127
   556  005AB0  09                 	db	9
   557  005AB1  09                 	db	9
   558  005AB2  09                 	db	9
   559  005AB3  06                 	db	6
   560  005AB4  3E                 	db	62
   561  005AB5  41                 	db	65
   562  005AB6  51                 	db	81
   563  005AB7  21                 	db	33
   564  005AB8  5E                 	db	94
   565  005AB9  7F                 	db	127
   566  005ABA  09                 	db	9
   567  005ABB  19                 	db	25
   568  005ABC  29                 	db	41
   569  005ABD  46                 	db	70
   570  005ABE  26                 	db	38
   571  005ABF  49                 	db	73
   572  005AC0  49                 	db	73
   573  005AC1  49                 	db	73
   574  005AC2  32                 	db	50
   575  005AC3  03                 	db	3
   576  005AC4  01                 	db	1
   577  005AC5  7F                 	db	127
   578  005AC6  01                 	db	1
   579  005AC7  03                 	db	3
   580  005AC8  3F                 	db	63
   581  005AC9  40                 	db	64
   582  005ACA  40                 	db	64
   583  005ACB  40                 	db	64
   584  005ACC  3F                 	db	63
   585  005ACD  1F                 	db	31
   586  005ACE  20                 	db	32
   587  005ACF  40                 	db	64
   588  005AD0  20                 	db	32
   589  005AD1  1F                 	db	31
   590  005AD2  3F                 	db	63
   591  005AD3  40                 	db	64
   592  005AD4  38                 	db	56
   593  005AD5  40                 	db	64
   594  005AD6  3F                 	db	63
   595  005AD7  63                 	db	99
   596  005AD8  14                 	db	20
   597  005AD9  08                 	db	8
   598  005ADA  14                 	db	20
   599  005ADB  63                 	db	99
   600  005ADC  03                 	db	3
   601  005ADD  04                 	db	4
   602  005ADE  78                 	db	120
   603  005ADF  04                 	db	4
   604  005AE0  03                 	db	3
   605  005AE1  61                 	db	97
   606  005AE2  59                 	db	89
   607  005AE3  49                 	db	73
   608  005AE4  4D                 	db	77
   609  005AE5  43                 	db	67
   610  005AE6  00                 	db	0
   611  005AE7  7F                 	db	127
   612  005AE8  41                 	db	65
   613  005AE9  41                 	db	65
   614  005AEA  41                 	db	65
   615  005AEB  02                 	db	2
   616  005AEC  04                 	db	4
   617  005AED  08                 	db	8
   618  005AEE  10                 	db	16
   619  005AEF  20                 	db	32
   620  005AF0  00                 	db	0
   621  005AF1  41                 	db	65
   622  005AF2  41                 	db	65
   623  005AF3  41                 	db	65
   624  005AF4  7F                 	db	127
   625  005AF5  04                 	db	4
   626  005AF6  02                 	db	2
   627  005AF7  01                 	db	1
   628  005AF8  02                 	db	2
   629  005AF9  04                 	db	4
   630  005AFA  40                 	db	64
   631  005AFB  40                 	db	64
   632  005AFC  40                 	db	64
   633  005AFD  40                 	db	64
   634  005AFE  40                 	db	64
   635  005AFF  00                 	db	0
   636  005B00  03                 	db	3
   637  005B01  07                 	db	7
   638  005B02  08                 	db	8
   639  005B03  00                 	db	0
   640  005B04  20                 	db	32
   641  005B05  54                 	db	84
   642  005B06  54                 	db	84
   643  005B07  78                 	db	120
   644  005B08  40                 	db	64
   645  005B09  7F                 	db	127
   646  005B0A  28                 	db	40
   647  005B0B  44                 	db	68
   648  005B0C  44                 	db	68
   649  005B0D  38                 	db	56
   650  005B0E  38                 	db	56
   651  005B0F  44                 	db	68
   652  005B10  44                 	db	68
   653  005B11  44                 	db	68
   654  005B12  28                 	db	40
   655  005B13  38                 	db	56
   656  005B14  44                 	db	68
   657  005B15  44                 	db	68
   658  005B16  28                 	db	40
   659  005B17  7F                 	db	127
   660  005B18  38                 	db	56
   661  005B19  54                 	db	84
   662  005B1A  54                 	db	84
   663  005B1B  54                 	db	84
   664  005B1C  18                 	db	24
   665  005B1D  00                 	db	0
   666  005B1E  08                 	db	8
   667  005B1F  7E                 	db	126
   668  005B20  09                 	db	9
   669  005B21  02                 	db	2
   670  005B22  18                 	db	24
   671  005B23  A4                 	db	164
   672  005B24  A4                 	db	164
   673  005B25  9C                 	db	156
   674  005B26  78                 	db	120
   675  005B27  7F                 	db	127
   676  005B28  08                 	db	8
   677  005B29  04                 	db	4
   678  005B2A  04                 	db	4
   679  005B2B  78                 	db	120
   680  005B2C  00                 	db	0
   681  005B2D  44                 	db	68
   682  005B2E  7D                 	db	125
   683  005B2F  40                 	db	64
   684  005B30  00                 	db	0
   685  005B31  20                 	db	32
   686  005B32  40                 	db	64
   687  005B33  40                 	db	64
   688  005B34  3D                 	db	61
   689  005B35  00                 	db	0
   690  005B36  7F                 	db	127
   691  005B37  10                 	db	16
   692  005B38  28                 	db	40
   693  005B39  44                 	db	68
   694  005B3A  00                 	db	0
   695  005B3B  00                 	db	0
   696  005B3C  41                 	db	65
   697  005B3D  7F                 	db	127
   698  005B3E  40                 	db	64
   699  005B3F  00                 	db	0
   700  005B40  7C                 	db	124
   701  005B41  04                 	db	4
   702  005B42  78                 	db	120
   703  005B43  04                 	db	4
   704  005B44  78                 	db	120
   705  005B45  7C                 	db	124
   706  005B46  08                 	db	8
   707  005B47  04                 	db	4
   708  005B48  04                 	db	4
   709  005B49  78                 	db	120
   710  005B4A  38                 	db	56
   711  005B4B  44                 	db	68
   712  005B4C  44                 	db	68
   713  005B4D  44                 	db	68
   714  005B4E  38                 	db	56
   715  005B4F  FC                 	db	252
   716  005B50  18                 	db	24
   717  005B51  24                 	db	36
   718  005B52  24                 	db	36
   719  005B53  18                 	db	24
   720  005B54  18                 	db	24
   721  005B55  24                 	db	36
   722  005B56  24                 	db	36
   723  005B57  18                 	db	24
   724  005B58  FC                 	db	252
   725  005B59  7C                 	db	124
   726  005B5A  08                 	db	8
   727  005B5B  04                 	db	4
   728  005B5C  04                 	db	4
   729  005B5D  08                 	db	8
   730  005B5E  48                 	db	72
   731  005B5F  54                 	db	84
   732  005B60  54                 	db	84
   733  005B61  54                 	db	84
   734  005B62  24                 	db	36
   735  005B63  04                 	db	4
   736  005B64  04                 	db	4
   737  005B65  3F                 	db	63
   738  005B66  44                 	db	68
   739  005B67  24                 	db	36
   740  005B68  3C                 	db	60
   741  005B69  40                 	db	64
   742  005B6A  40                 	db	64
   743  005B6B  20                 	db	32
   744  005B6C  7C                 	db	124
   745  005B6D  1C                 	db	28
   746  005B6E  20                 	db	32
   747  005B6F  40                 	db	64
   748  005B70  20                 	db	32
   749  005B71  1C                 	db	28
   750  005B72  3C                 	db	60
   751  005B73  40                 	db	64
   752  005B74  30                 	db	48
   753  005B75  40                 	db	64
   754  005B76  3C                 	db	60
   755  005B77  44                 	db	68
   756  005B78  28                 	db	40
   757  005B79  10                 	db	16
   758  005B7A  28                 	db	40
   759  005B7B  44                 	db	68
   760  005B7C  4C                 	db	76
   761  005B7D  90                 	db	144
   762  005B7E  90                 	db	144
   763  005B7F  90                 	db	144
   764  005B80  7C                 	db	124
   765  005B81  44                 	db	68
   766  005B82  64                 	db	100
   767  005B83  54                 	db	84
   768  005B84  4C                 	db	76
   769  005B85  44                 	db	68
   770  005B86  00                 	db	0
   771  005B87  08                 	db	8
   772  005B88  36                 	db	54
   773  005B89  41                 	db	65
   774  005B8A  00                 	db	0
   775  005B8B  00                 	db	0
   776  005B8C  00                 	db	0
   777  005B8D  77                 	db	119
   778  005B8E  00                 	db	0
   779  005B8F  00                 	db	0
   780  005B90  00                 	db	0
   781  005B91  41                 	db	65
   782  005B92  36                 	db	54
   783  005B93  08                 	db	8
   784  005B94  00                 	db	0
   785  005B95  02                 	db	2
   786  005B96  01                 	db	1
   787  005B97  02                 	db	2
   788  005B98  04                 	db	4
   789  005B99  02                 	db	2
   790  005B9A  3C                 	db	60
   791  005B9B  26                 	db	38
   792  005B9C  23                 	db	35
   793  005B9D  26                 	db	38
   794  005B9E  3C                 	db	60
   795  005B9F  1E                 	db	30
   796  005BA0  A1                 	db	161
   797  005BA1  A1                 	db	161
   798  005BA2  61                 	db	97
   799  005BA3  12                 	db	18
   800  005BA4  3A                 	db	58
   801  005BA5  40                 	db	64
   802  005BA6  40                 	db	64
   803  005BA7  20                 	db	32
   804  005BA8  7A                 	db	122
   805  005BA9  38                 	db	56
   806  005BAA  54                 	db	84
   807  005BAB  54                 	db	84
   808  005BAC  55                 	db	85
   809  005BAD  59                 	db	89
   810  005BAE  21                 	db	33
   811  005BAF  55                 	db	85
   812  005BB0  55                 	db	85
   813  005BB1  79                 	db	121
   814  005BB2  41                 	db	65
   815  005BB3  22                 	db	34
   816  005BB4  54                 	db	84
   817  005BB5  54                 	db	84
   818  005BB6  78                 	db	120
   819  005BB7  42                 	db	66
   820  005BB8  21                 	db	33
   821  005BB9  55                 	db	85
   822  005BBA  54                 	db	84
   823  005BBB  78                 	db	120
   824  005BBC  40                 	db	64
   825  005BBD  20                 	db	32
   826  005BBE  54                 	db	84
   827  005BBF  55                 	db	85
   828  005BC0  79                 	db	121
   829  005BC1  40                 	db	64
   830  005BC2  0C                 	db	12
   831  005BC3  1E                 	db	30
   832  005BC4  52                 	db	82
   833  005BC5  72                 	db	114
   834  005BC6  12                 	db	18
   835  005BC7  39                 	db	57
   836  005BC8  55                 	db	85
   837  005BC9  55                 	db	85
   838  005BCA  55                 	db	85
   839  005BCB  59                 	db	89
   840  005BCC  39                 	db	57
   841  005BCD  54                 	db	84
   842  005BCE  54                 	db	84
   843  005BCF  54                 	db	84
   844  005BD0  59                 	db	89
   845  005BD1  39                 	db	57
   846  005BD2  55                 	db	85
   847  005BD3  54                 	db	84
   848  005BD4  54                 	db	84
   849  005BD5  58                 	db	88
   850  005BD6  00                 	db	0
   851  005BD7  00                 	db	0
   852  005BD8  45                 	db	69
   853  005BD9  7C                 	db	124
   854  005BDA  41                 	db	65
   855  005BDB  00                 	db	0
   856  005BDC  02                 	db	2
   857  005BDD  45                 	db	69
   858  005BDE  7D                 	db	125
   859  005BDF  42                 	db	66
   860  005BE0  00                 	db	0
   861  005BE1  01                 	db	1
   862  005BE2  45                 	db	69
   863  005BE3  7C                 	db	124
   864  005BE4  40                 	db	64
   865  005BE5  7D                 	db	125
   866  005BE6  12                 	db	18
   867  005BE7  11                 	db	17
   868  005BE8  12                 	db	18
   869  005BE9  7D                 	db	125
   870  005BEA  F0                 	db	240
   871  005BEB  28                 	db	40
   872  005BEC  25                 	db	37
   873  005BED  28                 	db	40
   874  005BEE  F0                 	db	240
   875  005BEF  7C                 	db	124
   876  005BF0  54                 	db	84
   877  005BF1  55                 	db	85
   878  005BF2  45                 	db	69
   879  005BF3  00                 	db	0
   880  005BF4  20                 	db	32
   881  005BF5  54                 	db	84
   882  005BF6  54                 	db	84
   883  005BF7  7C                 	db	124
   884  005BF8  54                 	db	84
   885  005BF9  7C                 	db	124
   886  005BFA  0A                 	db	10
   887  005BFB  09                 	db	9
   888  005BFC  7F                 	db	127
   889  005BFD  49                 	db	73
   890  005BFE  32                 	db	50
   891  005BFF  49                 	db	73
   892  005C00  49                 	db	73
   893  005C01  49                 	db	73
   894  005C02  32                 	db	50
   895  005C03  3A                 	db	58
   896  005C04  44                 	db	68
   897  005C05  44                 	db	68
   898  005C06  44                 	db	68
   899  005C07  3A                 	db	58
   900  005C08  32                 	db	50
   901  005C09  4A                 	db	74
   902  005C0A  48                 	db	72
   903  005C0B  48                 	db	72
   904  005C0C  30                 	db	48
   905  005C0D  3A                 	db	58
   906  005C0E  41                 	db	65
   907  005C0F  41                 	db	65
   908  005C10  21                 	db	33
   909  005C11  7A                 	db	122
   910  005C12  3A                 	db	58
   911  005C13  42                 	db	66
   912  005C14  40                 	db	64
   913  005C15  20                 	db	32
   914  005C16  78                 	db	120
   915  005C17  00                 	db	0
   916  005C18  9D                 	db	157
   917  005C19  A0                 	db	160
   918  005C1A  A0                 	db	160
   919  005C1B  7D                 	db	125
   920  005C1C  3D                 	db	61
   921  005C1D  42                 	db	66
   922  005C1E  42                 	db	66
   923  005C1F  42                 	db	66
   924  005C20  3D                 	db	61
   925  005C21  3D                 	db	61
   926  005C22  40                 	db	64
   927  005C23  40                 	db	64
   928  005C24  40                 	db	64
   929  005C25  3D                 	db	61
   930  005C26  3C                 	db	60
   931  005C27  24                 	db	36
   932  005C28  FF                 	db	255
   933  005C29  24                 	db	36
   934  005C2A  24                 	db	36
   935  005C2B  48                 	db	72
   936  005C2C  7E                 	db	126
   937  005C2D  49                 	db	73
   938  005C2E  43                 	db	67
   939  005C2F  66                 	db	102
   940  005C30  2B                 	db	43
   941  005C31  2F                 	db	47
   942  005C32  FC                 	db	252
   943  005C33  2F                 	db	47
   944  005C34  2B                 	db	43
   945  005C35  FF                 	db	255
   946  005C36  09                 	db	9
   947  005C37  29                 	db	41
   948  005C38  F6                 	db	246
   949  005C39  20                 	db	32
   950  005C3A  C0                 	db	192
   951  005C3B  88                 	db	136
   952  005C3C  7E                 	db	126
   953  005C3D  09                 	db	9
   954  005C3E  03                 	db	3
   955  005C3F  20                 	db	32
   956  005C40  54                 	db	84
   957  005C41  54                 	db	84
   958  005C42  79                 	db	121
   959  005C43  41                 	db	65
   960  005C44  00                 	db	0
   961  005C45  00                 	db	0
   962  005C46  44                 	db	68
   963  005C47  7D                 	db	125
   964  005C48  41                 	db	65
   965  005C49  30                 	db	48
   966  005C4A  48                 	db	72
   967  005C4B  48                 	db	72
   968  005C4C  4A                 	db	74
   969  005C4D  32                 	db	50
   970  005C4E  38                 	db	56
   971  005C4F  40                 	db	64
   972  005C50  40                 	db	64
   973  005C51  22                 	db	34
   974  005C52  7A                 	db	122
   975  005C53  00                 	db	0
   976  005C54  7A                 	db	122
   977  005C55  0A                 	db	10
   978  005C56  0A                 	db	10
   979  005C57  72                 	db	114
   980  005C58  7D                 	db	125
   981  005C59  0D                 	db	13
   982  005C5A  19                 	db	25
   983  005C5B  31                 	db	49
   984  005C5C  7D                 	db	125
   985  005C5D  26                 	db	38
   986  005C5E  29                 	db	41
   987  005C5F  29                 	db	41
   988  005C60  2F                 	db	47
   989  005C61  28                 	db	40
   990  005C62  26                 	db	38
   991  005C63  29                 	db	41
   992  005C64  29                 	db	41
   993  005C65  29                 	db	41
   994  005C66  26                 	db	38
   995  005C67  30                 	db	48
   996  005C68  48                 	db	72
   997  005C69  4D                 	db	77
   998  005C6A  40                 	db	64
   999  005C6B  20                 	db	32
  1000  005C6C  38                 	db	56
  1001  005C6D  08                 	db	8
  1002  005C6E  08                 	db	8
  1003  005C6F  08                 	db	8
  1004  005C70  08                 	db	8
  1005  005C71  08                 	db	8
  1006  005C72  08                 	db	8
  1007  005C73  08                 	db	8
  1008  005C74  08                 	db	8
  1009  005C75  38                 	db	56
  1010  005C76  2F                 	db	47
  1011  005C77  10                 	db	16
  1012  005C78  C8                 	db	200
  1013  005C79  AC                 	db	172
  1014  005C7A  BA                 	db	186
  1015  005C7B  2F                 	db	47
  1016  005C7C  10                 	db	16
  1017  005C7D  28                 	db	40
  1018  005C7E  34                 	db	52
  1019  005C7F  FA                 	db	250
  1020  005C80  00                 	db	0
  1021  005C81  00                 	db	0
  1022  005C82  7B                 	db	123
  1023  005C83  00                 	db	0
  1024  005C84  00                 	db	0
  1025  005C85  08                 	db	8
  1026  005C86  14                 	db	20
  1027  005C87  2A                 	db	42
  1028  005C88  14                 	db	20
  1029  005C89  22                 	db	34
  1030  005C8A  22                 	db	34
  1031  005C8B  14                 	db	20
  1032  005C8C  2A                 	db	42
  1033  005C8D  14                 	db	20
  1034  005C8E  08                 	db	8
  1035  005C8F  55                 	db	85
  1036  005C90  00                 	db	0
  1037  005C91  55                 	db	85
  1038  005C92  00                 	db	0
  1039  005C93  55                 	db	85
  1040  005C94  AA                 	db	170
  1041  005C95  55                 	db	85
  1042  005C96  AA                 	db	170
  1043  005C97  55                 	db	85
  1044  005C98  AA                 	db	170
  1045  005C99  FF                 	db	255
  1046  005C9A  55                 	db	85
  1047  005C9B  FF                 	db	255
  1048  005C9C  55                 	db	85
  1049  005C9D  FF                 	db	255
  1050  005C9E  00                 	db	0
  1051  005C9F  00                 	db	0
  1052  005CA0  00                 	db	0
  1053  005CA1  FF                 	db	255
  1054  005CA2  00                 	db	0
  1055  005CA3  10                 	db	16
  1056  005CA4  10                 	db	16
  1057  005CA5  10                 	db	16
  1058  005CA6  FF                 	db	255
  1059  005CA7  00                 	db	0
  1060  005CA8  14                 	db	20
  1061  005CA9  14                 	db	20
  1062  005CAA  14                 	db	20
  1063  005CAB  FF                 	db	255
  1064  005CAC  00                 	db	0
  1065  005CAD  10                 	db	16
  1066  005CAE  10                 	db	16
  1067  005CAF  FF                 	db	255
  1068  005CB0  00                 	db	0
  1069  005CB1  FF                 	db	255
  1070  005CB2  10                 	db	16
  1071  005CB3  10                 	db	16
  1072  005CB4  F0                 	db	240
  1073  005CB5  10                 	db	16
  1074  005CB6  F0                 	db	240
  1075  005CB7  14                 	db	20
  1076  005CB8  14                 	db	20
  1077  005CB9  14                 	db	20
  1078  005CBA  FC                 	db	252
  1079  005CBB  00                 	db	0
  1080  005CBC  14                 	db	20
  1081  005CBD  14                 	db	20
  1082  005CBE  F7                 	db	247
  1083  005CBF  00                 	db	0
  1084  005CC0  FF                 	db	255
  1085  005CC1  00                 	db	0
  1086  005CC2  00                 	db	0
  1087  005CC3  FF                 	db	255
  1088  005CC4  00                 	db	0
  1089  005CC5  FF                 	db	255
  1090  005CC6  14                 	db	20
  1091  005CC7  14                 	db	20
  1092  005CC8  F4                 	db	244
  1093  005CC9  04                 	db	4
  1094  005CCA  FC                 	db	252
  1095  005CCB  14                 	db	20
  1096  005CCC  14                 	db	20
  1097  005CCD  17                 	db	23
  1098  005CCE  10                 	db	16
  1099  005CCF  1F                 	db	31
  1100  005CD0  10                 	db	16
  1101  005CD1  10                 	db	16
  1102  005CD2  1F                 	db	31
  1103  005CD3  10                 	db	16
  1104  005CD4  1F                 	db	31
  1105  005CD5  14                 	db	20
  1106  005CD6  14                 	db	20
  1107  005CD7  14                 	db	20
  1108  005CD8  1F                 	db	31
  1109  005CD9  00                 	db	0
  1110  005CDA  10                 	db	16
  1111  005CDB  10                 	db	16
  1112  005CDC  10                 	db	16
  1113  005CDD  F0                 	db	240
  1114  005CDE  00                 	db	0
  1115  005CDF  00                 	db	0
  1116  005CE0  00                 	db	0
  1117  005CE1  00                 	db	0
  1118  005CE2  1F                 	db	31
  1119  005CE3  10                 	db	16
  1120  005CE4  10                 	db	16
  1121  005CE5  10                 	db	16
  1122  005CE6  10                 	db	16
  1123  005CE7  1F                 	db	31
  1124  005CE8  10                 	db	16
  1125  005CE9  10                 	db	16
  1126  005CEA  10                 	db	16
  1127  005CEB  10                 	db	16
  1128  005CEC  F0                 	db	240
  1129  005CED  10                 	db	16
  1130  005CEE  00                 	db	0
  1131  005CEF  00                 	db	0
  1132  005CF0  00                 	db	0
  1133  005CF1  FF                 	db	255
  1134  005CF2  10                 	db	16
  1135  005CF3  10                 	db	16
  1136  005CF4  10                 	db	16
  1137  005CF5  10                 	db	16
  1138  005CF6  10                 	db	16
  1139  005CF7  10                 	db	16
  1140  005CF8  10                 	db	16
  1141  005CF9  10                 	db	16
  1142  005CFA  10                 	db	16
  1143  005CFB  FF                 	db	255
  1144  005CFC  10                 	db	16
  1145  005CFD  00                 	db	0
  1146  005CFE  00                 	db	0
  1147  005CFF  00                 	db	0
  1148  005D00  FF                 	db	255
  1149  005D01  14                 	db	20
  1150  005D02  00                 	db	0
  1151  005D03  00                 	db	0
  1152  005D04  FF                 	db	255
  1153  005D05  00                 	db	0
  1154  005D06  FF                 	db	255
  1155  005D07  00                 	db	0
  1156  005D08  00                 	db	0
  1157  005D09  1F                 	db	31
  1158  005D0A  10                 	db	16
  1159  005D0B  17                 	db	23
  1160  005D0C  00                 	db	0
  1161  005D0D  00                 	db	0
  1162  005D0E  FC                 	db	252
  1163  005D0F  04                 	db	4
  1164  005D10  F4                 	db	244
  1165  005D11  14                 	db	20
  1166  005D12  14                 	db	20
  1167  005D13  17                 	db	23
  1168  005D14  10                 	db	16
  1169  005D15  17                 	db	23
  1170  005D16  14                 	db	20
  1171  005D17  14                 	db	20
  1172  005D18  F4                 	db	244
  1173  005D19  04                 	db	4
  1174  005D1A  F4                 	db	244
  1175  005D1B  00                 	db	0
  1176  005D1C  00                 	db	0
  1177  005D1D  FF                 	db	255
  1178  005D1E  00                 	db	0
  1179  005D1F  F7                 	db	247
  1180  005D20  14                 	db	20
  1181  005D21  14                 	db	20
  1182  005D22  14                 	db	20
  1183  005D23  14                 	db	20
  1184  005D24  14                 	db	20
  1185  005D25  14                 	db	20
  1186  005D26  14                 	db	20
  1187  005D27  F7                 	db	247
  1188  005D28  00                 	db	0
  1189  005D29  F7                 	db	247
  1190  005D2A  14                 	db	20
  1191  005D2B  14                 	db	20
  1192  005D2C  14                 	db	20
  1193  005D2D  17                 	db	23
  1194  005D2E  14                 	db	20
  1195  005D2F  10                 	db	16
  1196  005D30  10                 	db	16
  1197  005D31  1F                 	db	31
  1198  005D32  10                 	db	16
  1199  005D33  1F                 	db	31
  1200  005D34  14                 	db	20
  1201  005D35  14                 	db	20
  1202  005D36  14                 	db	20
  1203  005D37  F4                 	db	244
  1204  005D38  14                 	db	20
  1205  005D39  10                 	db	16
  1206  005D3A  10                 	db	16
  1207  005D3B  F0                 	db	240
  1208  005D3C  10                 	db	16
  1209  005D3D  F0                 	db	240
  1210  005D3E  00                 	db	0
  1211  005D3F  00                 	db	0
  1212  005D40  1F                 	db	31
  1213  005D41  10                 	db	16
  1214  005D42  1F                 	db	31
  1215  005D43  00                 	db	0
  1216  005D44  00                 	db	0
  1217  005D45  00                 	db	0
  1218  005D46  1F                 	db	31
  1219  005D47  14                 	db	20
  1220  005D48  00                 	db	0
  1221  005D49  00                 	db	0
  1222  005D4A  00                 	db	0
  1223  005D4B  FC                 	db	252
  1224  005D4C  14                 	db	20
  1225  005D4D  00                 	db	0
  1226  005D4E  00                 	db	0
  1227  005D4F  F0                 	db	240
  1228  005D50  10                 	db	16
  1229  005D51  F0                 	db	240
  1230  005D52  10                 	db	16
  1231  005D53  10                 	db	16
  1232  005D54  FF                 	db	255
  1233  005D55  10                 	db	16
  1234  005D56  FF                 	db	255
  1235  005D57  14                 	db	20
  1236  005D58  14                 	db	20
  1237  005D59  14                 	db	20
  1238  005D5A  FF                 	db	255
  1239  005D5B  14                 	db	20
  1240  005D5C  10                 	db	16
  1241  005D5D  10                 	db	16
  1242  005D5E  10                 	db	16
  1243  005D5F  1F                 	db	31
  1244  005D60  00                 	db	0
  1245  005D61  00                 	db	0
  1246  005D62  00                 	db	0
  1247  005D63  00                 	db	0
  1248  005D64  F0                 	db	240
  1249  005D65  10                 	db	16
  1250  005D66  FF                 	db	255
  1251  005D67  FF                 	db	255
  1252  005D68  FF                 	db	255
  1253  005D69  FF                 	db	255
  1254  005D6A  FF                 	db	255
  1255  005D6B  F0                 	db	240
  1256  005D6C  F0                 	db	240
  1257  005D6D  F0                 	db	240
  1258  005D6E  F0                 	db	240
  1259  005D6F  F0                 	db	240
  1260  005D70  FF                 	db	255
  1261  005D71  FF                 	db	255
  1262  005D72  FF                 	db	255
  1263  005D73  00                 	db	0
  1264  005D74  00                 	db	0
  1265  005D75  00                 	db	0
  1266  005D76  00                 	db	0
  1267  005D77  00                 	db	0
  1268  005D78  FF                 	db	255
  1269  005D79  FF                 	db	255
  1270  005D7A  0F                 	db	15
  1271  005D7B  0F                 	db	15
  1272  005D7C  0F                 	db	15
  1273  005D7D  0F                 	db	15
  1274  005D7E  0F                 	db	15
  1275  005D7F  38                 	db	56
  1276  005D80  44                 	db	68
  1277  005D81  44                 	db	68
  1278  005D82  38                 	db	56
  1279  005D83  44                 	db	68
  1280  005D84  FC                 	db	252
  1281  005D85  4A                 	db	74
  1282  005D86  4A                 	db	74
  1283  005D87  4A                 	db	74
  1284  005D88  34                 	db	52
  1285  005D89  7E                 	db	126
  1286  005D8A  02                 	db	2
  1287  005D8B  02                 	db	2
  1288  005D8C  06                 	db	6
  1289  005D8D  06                 	db	6
  1290  005D8E  02                 	db	2
  1291  005D8F  7E                 	db	126
  1292  005D90  02                 	db	2
  1293  005D91  7E                 	db	126
  1294  005D92  02                 	db	2
  1295  005D93  63                 	db	99
  1296  005D94  55                 	db	85
  1297  005D95  49                 	db	73
  1298  005D96  41                 	db	65
  1299  005D97  63                 	db	99
  1300  005D98  38                 	db	56
  1301  005D99  44                 	db	68
  1302  005D9A  44                 	db	68
  1303  005D9B  3C                 	db	60
  1304  005D9C  04                 	db	4
  1305  005D9D  40                 	db	64
  1306  005D9E  7E                 	db	126
  1307  005D9F  20                 	db	32
  1308  005DA0  1E                 	db	30
  1309  005DA1  20                 	db	32
  1310  005DA2  06                 	db	6
  1311  005DA3  02                 	db	2
  1312  005DA4  7E                 	db	126
  1313  005DA5  02                 	db	2
  1314  005DA6  02                 	db	2
  1315  005DA7  99                 	db	153
  1316  005DA8  A5                 	db	165
  1317  005DA9  E7                 	db	231
  1318  005DAA  A5                 	db	165
  1319  005DAB  99                 	db	153
  1320  005DAC  1C                 	db	28
  1321  005DAD  2A                 	db	42
  1322  005DAE  49                 	db	73
  1323  005DAF  2A                 	db	42
  1324  005DB0  1C                 	db	28
  1325  005DB1  4C                 	db	76
  1326  005DB2  72                 	db	114
  1327  005DB3  01                 	db	1
  1328  005DB4  72                 	db	114
  1329  005DB5  4C                 	db	76
  1330  005DB6  30                 	db	48
  1331  005DB7  4A                 	db	74
  1332  005DB8  4D                 	db	77
  1333  005DB9  4D                 	db	77
  1334  005DBA  30                 	db	48
  1335  005DBB  30                 	db	48
  1336  005DBC  48                 	db	72
  1337  005DBD  78                 	db	120
  1338  005DBE  48                 	db	72
  1339  005DBF  30                 	db	48
  1340  005DC0  BC                 	db	188
  1341  005DC1  62                 	db	98
  1342  005DC2  5A                 	db	90
  1343  005DC3  46                 	db	70
  1344  005DC4  3D                 	db	61
  1345  005DC5  3E                 	db	62
  1346  005DC6  49                 	db	73
  1347  005DC7  49                 	db	73
  1348  005DC8  49                 	db	73
  1349  005DC9  00                 	db	0
  1350  005DCA  7E                 	db	126
  1351  005DCB  01                 	db	1
  1352  005DCC  01                 	db	1
  1353  005DCD  01                 	db	1
  1354  005DCE  7E                 	db	126
  1355  005DCF  2A                 	db	42
  1356  005DD0  2A                 	db	42
  1357  005DD1  2A                 	db	42
  1358  005DD2  2A                 	db	42
  1359  005DD3  2A                 	db	42
  1360  005DD4  44                 	db	68
  1361  005DD5  44                 	db	68
  1362  005DD6  5F                 	db	95
  1363  005DD7  44                 	db	68
  1364  005DD8  44                 	db	68
  1365  005DD9  40                 	db	64
  1366  005DDA  51                 	db	81
  1367  005DDB  4A                 	db	74
  1368  005DDC  44                 	db	68
  1369  005DDD  40                 	db	64
  1370  005DDE  40                 	db	64
  1371  005DDF  44                 	db	68
  1372  005DE0  4A                 	db	74
  1373  005DE1  51                 	db	81
  1374  005DE2  40                 	db	64
  1375  005DE3  00                 	db	0
  1376  005DE4  00                 	db	0
  1377  005DE5  FF                 	db	255
  1378  005DE6  01                 	db	1
  1379  005DE7  03                 	db	3
  1380  005DE8  E0                 	db	224
  1381  005DE9  80                 	db	128
  1382  005DEA  FF                 	db	255
  1383  005DEB  00                 	db	0
  1384  005DEC  00                 	db	0
  1385  005DED  08                 	db	8
  1386  005DEE  08                 	db	8
  1387  005DEF  6B                 	db	107
  1388  005DF0  6B                 	db	107
  1389  005DF1  08                 	db	8
  1390  005DF2  36                 	db	54
  1391  005DF3  12                 	db	18
  1392  005DF4  36                 	db	54
  1393  005DF5  24                 	db	36
  1394  005DF6  36                 	db	54
  1395  005DF7  06                 	db	6
  1396  005DF8  0F                 	db	15
  1397  005DF9  09                 	db	9
  1398  005DFA  0F                 	db	15
  1399  005DFB  06                 	db	6
  1400  005DFC  00                 	db	0
  1401  005DFD  00                 	db	0
  1402  005DFE  18                 	db	24
  1403  005DFF  18                 	db	24
  1404  005E00  00                 	db	0
  1405  005E01  00                 	db	0
  1406  005E02  00                 	db	0
  1407  005E03  10                 	db	16
  1408  005E04  10                 	db	16
  1409  005E05  00                 	db	0
  1410  005E06  30                 	db	48
  1411  005E07  40                 	db	64
  1412  005E08  FF                 	db	255
  1413  005E09  01                 	db	1
  1414  005E0A  01                 	db	1
  1415  005E0B  00                 	db	0
  1416  005E0C  1F                 	db	31
  1417  005E0D  01                 	db	1
  1418  005E0E  01                 	db	1
  1419  005E0F  1E                 	db	30
  1420  005E10  00                 	db	0
  1421  005E11  19                 	db	25
  1422  005E12  1D                 	db	29
  1423  005E13  17                 	db	23
  1424  005E14  12                 	db	18
  1425  005E15  00                 	db	0
  1426  005E16  3C                 	db	60
  1427  005E17  3C                 	db	60
  1428  005E18  3C                 	db	60
  1429  005E19  3C                 	db	60
  1430  005E1A  00                 	db	0
  1431  005E1B  00                 	db	0
  1432  005E1C  00                 	db	0
  1433  005E1D  00                 	db	0
  1434  005E1E  00                 	db	0
  1435  005E1F                     __end_of_TFT_Font:
  1436                           	opt callstack 0
  1437  005E1F                     _TFT_Init_Sequence:
  1438                           	opt callstack 0
  1439  005E1F  0702               	dw	1794
  1440  005E21  3008               	dw	12296
  1441  005E23  0705               	dw	1797
  1442  005E25  0036               	dw	54
  1443  005E27  070B               	dw	1803
  1444  005E29  1213               	dw	4627
  1445  005E2B  0001               	dw	1
  1446  005E2D  0100               	dw	256
  1447  005E2F  0002               	dw	2
  1448  005E31  0100               	dw	256
  1449  005E33  0003               	dw	3
  1450  005E35  1030               	dw	4144
  1451  005E37  0008               	dw	8
  1452  005E39  0202               	dw	514
  1453  005E3B  0009               	dw	9
  1454  005E3D  0000               	dw	0
  1455  005E3F  000C               	dw	12
  1456  005E41  0000               	dw	0
  1457  005E43  000F               	dw	15
  1458  005E45  0000               	dw	0
  1459  005E47  0100               	dw	256
  1460  005E49  0000               	dw	0
  1461  005E4B  0102               	dw	258
  1462  005E4D  0000               	dw	0
  1463  005E4F  0103               	dw	259
  1464  005E51  0000               	dw	0
  1465  005E53  FFFF               	dw	65535
  1466  005E55  0001               	dw	1
  1467  005E57  0100               	dw	256
  1468  005E59  1190               	dw	4496
  1469  005E5B  0101               	dw	257
  1470  005E5D  0227               	dw	551
  1471  005E5F  FFFF               	dw	65535
  1472  005E61  0001               	dw	1
  1473  005E63  0102               	dw	258
  1474  005E65  01BD               	dw	445
  1475  005E67  FFFF               	dw	65535
  1476  005E69  0001               	dw	1
  1477  005E6B  0103               	dw	259
  1478  005E6D  2D00               	dw	11520
  1479  005E6F  0281               	dw	641
  1480  005E71  000E               	dw	14
  1481  005E73  FFFF               	dw	65535
  1482  005E75  0001               	dw	1
  1483  005E77  0200               	dw	512
  1484  005E79  0000               	dw	0
  1485  005E7B  0201               	dw	513
  1486  005E7D  0000               	dw	0
  1487  005E7F  0300               	dw	768
  1488  005E81  0000               	dw	0
  1489  005E83  0301               	dw	769
  1490  005E85  0707               	dw	1799
  1491  005E87  0302               	dw	770
  1492  005E89  0606               	dw	1542
  1493  005E8B  0305               	dw	773
  1494  005E8D  0000               	dw	0
  1495  005E8F  0306               	dw	774
  1496  005E91  0D00               	dw	3328
  1497  005E93  0307               	dw	775
  1498  005E95  0706               	dw	1798
  1499  005E97  0308               	dw	776
  1500  005E99  0005               	dw	5
  1501  005E9B  0309               	dw	777
  1502  005E9D  0007               	dw	7
  1503  005E9F  030C               	dw	780
  1504  005EA1  0000               	dw	0
  1505  005EA3  030D               	dw	781
  1506  005EA5  000A               	dw	10
  1507  005EA7  0210               	dw	528
  1508  005EA9  0000               	dw	0
  1509  005EAB  0211               	dw	529
  1510  005EAD  00EF               	dw	239
  1511  005EAF  0212               	dw	530
  1512  005EB1  0000               	dw	0
  1513  005EB3  0213               	dw	531
  1514  005EB5  018F               	dw	399
  1515  005EB7  0400               	dw	1024
  1516  005EB9  3100               	dw	12544
  1517  005EBB  0401               	dw	1025
  1518  005EBD  0001               	dw	1
  1519  005EBF  0404               	dw	1028
  1520  005EC1  0000               	dw	0
  1521  005EC3  0500               	dw	1280
  1522  005EC5  0000               	dw	0
  1523  005EC7  0501               	dw	1281
  1524  005EC9  0000               	dw	0
  1525  005ECB  0502               	dw	1282
  1526  005ECD  0000               	dw	0
  1527  005ECF  0503               	dw	1283
  1528  005ED1  0000               	dw	0
  1529  005ED3  0504               	dw	1284
  1530  005ED5  0000               	dw	0
  1531  005ED7  0505               	dw	1285
  1532  005ED9  0000               	dw	0
  1533  005EDB  0010               	dw	16
  1534  005EDD  0010               	dw	16
  1535  005EDF  0011               	dw	17
  1536  005EE1  0600               	dw	1536
  1537  005EE3  0020               	dw	32
  1538  005EE5  0002               	dw	2
  1539  005EE7  0007               	dw	7
  1540  005EE9  0173               	dw	371
  1541  005EEB                     __end_of_TFT_Init_Sequence:
  1542                           	opt callstack 0
  1543  005EEB                     _dpowers:
  1544                           	opt callstack 0
  1545  005EEB  0001               	dw	1
  1546  005EED  0000               	dw	0
  1547  005EEF  000A               	dw	10
  1548  005EF1  0000               	dw	0
  1549  005EF3  0064               	dw	100
  1550  005EF5  0000               	dw	0
  1551  005EF7  03E8               	dw	1000
  1552  005EF9  0000               	dw	0
  1553  005EFB  2710               	dw	10000
  1554  005EFD  0000               	dw	0
  1555  005EFF  86A0               	dw	34464
  1556  005F01  0001               	dw	1
  1557  005F03  4240               	dw	16960
  1558  005F05  000F               	dw	15
  1559  005F07  9680               	dw	38528
  1560  005F09  0098               	dw	152
  1561  005F0B  E100               	dw	57600
  1562  005F0D  05F5               	dw	1525
  1563  005F0F  CA00               	dw	51712
  1564  005F11  3B9A               	dw	15258
  1565  005F13                     __end_of_dpowers:
  1566                           	opt callstack 0
  1567  005F13                     _A6_BAUDRATES:
  1568                           	opt callstack 0
  1569  005F13  2580               	dw	9600
  1570  005F15  0000               	dw	0
  1571  005F17  E100               	dw	57600
  1572  005F19  0000               	dw	0
  1573  005F1B  C200               	dw	49664
  1574  005F1D  0001               	dw	1
  1575  005F1F                     __end_of_A6_BAUDRATES:
  1576                           	opt callstack 0
  1577  005F1F                     _ECG_ICON_HEART:
  1578                           	opt callstack 0
  1579  005F1F  14                 	db	20
  1580  005F20  14                 	db	20
  1581  005F21  00                 	db	0
  1582  005F22  00                 	db	0
  1583  005F23  00                 	db	0
  1584  005F24  00                 	db	0
  1585  005F25  00                 	db	0
  1586  005F26  00                 	db	0
  1587  005F27  F8                 	db	248
  1588  005F28  F0                 	db	240
  1589  005F29  01                 	db	1
  1590  005F2A  FC                 	db	252
  1591  005F2B  F9                 	db	249
  1592  005F2C  03                 	db	3
  1593  005F2D  FC                 	db	252
  1594  005F2E  FF                 	db	255
  1595  005F2F  03                 	db	3
  1596  005F30  FE                 	db	254
  1597  005F31  FF                 	db	255
  1598  005F32  07                 	db	7
  1599  005F33  FE                 	db	254
  1600  005F34  FF                 	db	255
  1601  005F35  07                 	db	7
  1602  005F36  FE                 	db	254
  1603  005F37  FF                 	db	255
  1604  005F38  07                 	db	7
  1605  005F39  FE                 	db	254
  1606  005F3A  FF                 	db	255
  1607  005F3B  07                 	db	7
  1608  005F3C  FC                 	db	252
  1609  005F3D  FF                 	db	255
  1610  005F3E  03                 	db	3
  1611  005F3F  FC                 	db	252
  1612  005F40  FF                 	db	255
  1613  005F41  03                 	db	3
  1614  005F42  F8                 	db	248
  1615  005F43  FF                 	db	255
  1616  005F44  01                 	db	1
  1617  005F45  F0                 	db	240
  1618  005F46  FF                 	db	255
  1619  005F47  00                 	db	0
  1620  005F48  E0                 	db	224
  1621  005F49  7F                 	db	127
  1622  005F4A  00                 	db	0
  1623  005F4B  C0                 	db	192
  1624  005F4C  3F                 	db	63
  1625  005F4D  00                 	db	0
  1626  005F4E  80                 	db	128
  1627  005F4F  1F                 	db	31
  1628  005F50  00                 	db	0
  1629  005F51  00                 	db	0
  1630  005F52  0F                 	db	15
  1631  005F53  00                 	db	0
  1632  005F54  00                 	db	0
  1633  005F55  06                 	db	6
  1634  005F56  00                 	db	0
  1635  005F57  00                 	db	0
  1636  005F58  00                 	db	0
  1637  005F59  00                 	db	0
  1638  005F5A  00                 	db	0
  1639  005F5B  00                 	db	0
  1640  005F5C  00                 	db	0
  1641  005F5D                     __end_of_ECG_ICON_HEART:
  1642                           	opt callstack 0
  1643  0000                     _RCREG	set	4014
  1644  0000                     _TXREG	set	4013
  1645  0000                     _SPBRG	set	4015
  1646  0000                     _SPBRGH	set	4016
  1647  0000                     _BAUDCONbits	set	4024
  1648  0000                     _RCSTAbits	set	4011
  1649  0000                     _TXSTAbits	set	4012
  1650  0000                     _ADRESL	set	4035
  1651  0000                     _ADRESH	set	4036
  1652  0000                     _PORTAbits	set	3968
  1653  0000                     _PORTB	set	3969
  1654  0000                     _PORTCbits	set	3970
  1655  0000                     _TMR3L	set	4018
  1656  0000                     _TMR3H	set	4019
  1657  0000                     _T3CONbits	set	4017
  1658  0000                     _ADCON2bits	set	4032
  1659  0000                     _ADCON1bits	set	4033
  1660  0000                     _ADCON0bits	set	4034
  1661  0000                     _LATC	set	3979
  1662  0000                     _TRISC	set	3988
  1663  0000                     _LATB	set	3978
  1664  0000                     _TRISB	set	3987
  1665  0000                     _LATA	set	3977
  1666  0000                     _TRISA	set	3986
  1667  0000                     _UCFGbits	set	3951
  1668  0000                     _UCONbits	set	3949
  1669  0000                     _OSCTUNEbits	set	3995
  1670  0000                     _OSCCONbits	set	4051
  1671  0000                     _CREN	set	32092
  1672  0000                     _OERR	set	32089
  1673  0000                     _TXIF	set	31988
  1674  0000                     _GO_nDONE	set	32273
  1675  0000                     _RCIF	set	31989
  1676  0000                     _RCIE	set	31981
  1677  0000                     _TMR3IF	set	32009
  1678  0000                     _GIE	set	32663
  1679  0000                     _PEIE	set	32662
  1680  0000                     _TMR3IE	set	32001
  1681  0000                     _RBPU	set	32655
  1682  005F5D                     STR_4:
  1683                           
  1684                           ; BSR set to: 1
  1685  005F5D  2A                 	db	42
  1686  005F5E  2A                 	db	42
  1687  005F5F  2A                 	db	42
  1688  005F60  20                 	db	32
  1689  005F61  43                 	db	67	;'C'
  1690  005F62  6F                 	db	111	;'o'
  1691  005F63  6C                 	db	108	;'l'
  1692  005F64  6C                 	db	108	;'l'
  1693  005F65  65                 	db	101	;'e'
  1694  005F66  67                 	db	103	;'g'
  1695  005F67  61                 	db	97	;'a'
  1696  005F68  72                 	db	114	;'r'
  1697  005F69  65                 	db	101	;'e'
  1698  005F6A  20                 	db	32
  1699  005F6B  65                 	db	101	;'e'
  1700  005F6C  6C                 	db	108	;'l'
  1701  005F6D  65                 	db	101	;'e'
  1702  005F6E  74                 	db	116	;'t'
  1703  005F6F  74                 	db	116	;'t'
  1704  005F70  72                 	db	114	;'r'
  1705  005F71  6F                 	db	111	;'o'
  1706  005F72  64                 	db	100	;'d'
  1707  005F73  69                 	db	105	;'i'
  1708  005F74  20                 	db	32
  1709  005F75  2A                 	db	42
  1710  005F76  2A                 	db	42
  1711  005F77  2A                 	db	42
  1712  005F78  00                 	db	0
  1713  005F79                     STR_1:
  1714                           
  1715                           ; BSR set to: 1
  1716  005F79  43                 	db	67	;'C'
  1717  005F7A  6F                 	db	111	;'o'
  1718  005F7B  6E                 	db	110	;'n'
  1719  005F7C  6E                 	db	110	;'n'
  1720  005F7D  65                 	db	101	;'e'
  1721  005F7E  63                 	db	99	;'c'
  1722  005F7F  74                 	db	116	;'t'
  1723  005F80  69                 	db	105	;'i'
  1724  005F81  6E                 	db	110	;'n'
  1725  005F82  67                 	db	103	;'g'
  1726  005F83  2E                 	db	46
  1727  005F84  2E                 	db	46
  1728  005F85  2E                 	db	46
  1729  005F86  00                 	db	0
  1730  005F87                     STR_5:
  1731                           
  1732                           ; BSR set to: 1
  1733  005F87  41                 	db	65	;'A'
  1734  005F88  54                 	db	84	;'T'
  1735  005F89  2B                 	db	43
  1736  005F8A  43                 	db	67	;'C'
  1737  005F8B  4F                 	db	79	;'O'
  1738  005F8C  50                 	db	80	;'P'
  1739  005F8D  53                 	db	83	;'S'
  1740  005F8E  3D                 	db	61	;'='
  1741  005F8F  33                 	db	51	;'3'
  1742  005F90  2C                 	db	44
  1743  005F91  30                 	db	48	;'0'
  1744  005F92  0D                 	db	13
  1745  005F93  00                 	db	0
  1746  005F94                     STR_12:
  1747                           
  1748                           ; BSR set to: 1
  1749  005F94  41                 	db	65	;'A'
  1750  005F95  54                 	db	84	;'T'
  1751  005F96  2B                 	db	43
  1752  005F97  49                 	db	73	;'I'
  1753  005F98  50                 	db	80	;'P'
  1754  005F99  52                 	db	82	;'R'
  1755  005F9A  3D                 	db	61	;'='
  1756  005F9B  25                 	db	37
  1757  005F9C  6C                 	db	108	;'l'
  1758  005F9D  75                 	db	117	;'u'
  1759  005F9E  0D                 	db	13
  1760  005F9F  00                 	db	0
  1761  005FA0                     STR_3:
  1762                           
  1763                           ; BSR set to: 1
  1764  005FA0  46                 	db	70	;'F'
  1765  005FA1  72                 	db	114	;'r'
  1766  005FA2  65                 	db	101	;'e'
  1767  005FA3  71                 	db	113	;'q'
  1768  005FA4  75                 	db	117	;'u'
  1769  005FA5  65                 	db	101	;'e'
  1770  005FA6  6E                 	db	110	;'n'
  1771  005FA7  7A                 	db	122	;'z'
  1772  005FA8  61                 	db	97	;'a'
  1773  005FA9  3A                 	db	58	;':'
  1774  005FAA  00                 	db	0
  1775  005FAB                     
  1776                           ; BSR set to: 1
  1777  005FAB  41                 	db	65	;'A'
  1778  005FAC  54                 	db	84	;'T'
  1779  005FAD  2B                 	db	43
  1780  005FAE  43                 	db	67	;'C'
  1781  005FAF  52                 	db	82	;'R'
  1782  005FB0  45                 	db	69	;'E'
  1783  005FB1  47                 	db	71	;'G'
  1784  005FB2  3F                 	db	63	;'?'
  1785  005FB3  0D                 	db	13
  1786  005FB4  00                 	db	0
  1787  005FB5                     STR_26:
  1788                           
  1789                           ; BSR set to: 1
  1790  005FB5  41                 	db	65	;'A'
  1791  005FB6  54                 	db	84	;'T'
  1792  005FB7  2B                 	db	43
  1793  005FB8  43                 	db	67	;'C'
  1794  005FB9  4F                 	db	79	;'O'
  1795  005FBA  50                 	db	80	;'P'
  1796  005FBB  53                 	db	83	;'S'
  1797  005FBC  3F                 	db	63	;'?'
  1798  005FBD  0D                 	db	13
  1799  005FBE  00                 	db	0
  1800  005FBF                     STR_8:
  1801                           
  1802                           ; BSR set to: 1
  1803  005FBF  41                 	db	65	;'A'
  1804  005FC0  54                 	db	84	;'T'
  1805  005FC1  2B                 	db	43
  1806  005FC2  49                 	db	73	;'I'
  1807  005FC3  50                 	db	80	;'P'
  1808  005FC4  52                 	db	82	;'R'
  1809  005FC5  3F                 	db	63	;'?'
  1810  005FC6  0D                 	db	13
  1811  005FC7  00                 	db	0
  1812  005FC8                     STR_21:
  1813                           
  1814                           ; BSR set to: 1
  1815  005FC8  41                 	db	65	;'A'
  1816  005FC9  54                 	db	84	;'T'
  1817  005FCA  2B                 	db	43
  1818  005FCB  43                 	db	67	;'C'
  1819  005FCC  53                 	db	83	;'S'
  1820  005FCD  51                 	db	81	;'Q'
  1821  005FCE  0D                 	db	13
  1822  005FCF  00                 	db	0
  1823  005FD0                     STR_16:
  1824                           
  1825                           ; BSR set to: 1
  1826  005FD0  2B                 	db	43
  1827  005FD1  43                 	db	67	;'C'
  1828  005FD2  52                 	db	82	;'R'
  1829  005FD3  45                 	db	69	;'E'
  1830  005FD4  47                 	db	71	;'G'
  1831  005FD5  3A                 	db	58	;':'
  1832  005FD6  20                 	db	32
  1833  005FD7  00                 	db	0
  1834  005FD8                     STR_27:
  1835                           
  1836                           ; BSR set to: 1
  1837  005FD8  2B                 	db	43
  1838  005FD9  43                 	db	67	;'C'
  1839  005FDA  4F                 	db	79	;'O'
  1840  005FDB  50                 	db	80	;'P'
  1841  005FDC  53                 	db	83	;'S'
  1842  005FDD  3A                 	db	58	;':'
  1843  005FDE  20                 	db	32
  1844  005FDF  00                 	db	0
  1845  005FE0                     STR_22:
  1846                           
  1847                           ; BSR set to: 1
  1848  005FE0  2B                 	db	43
  1849  005FE1  43                 	db	67	;'C'
  1850  005FE2  53                 	db	83	;'S'
  1851  005FE3  51                 	db	81	;'Q'
  1852  005FE4  3A                 	db	58	;':'
  1853  005FE5  20                 	db	32
  1854  005FE6  00                 	db	0
  1855  005FE7                     STR_9:
  1856                           
  1857                           ; BSR set to: 1
  1858  005FE7  2B                 	db	43
  1859  005FE8  49                 	db	73	;'I'
  1860  005FE9  50                 	db	80	;'P'
  1861  005FEA  52                 	db	82	;'R'
  1862  005FEB  3A                 	db	58	;':'
  1863  005FEC  20                 	db	32
  1864  005FED  00                 	db	0
  1865  005FEE                     STR_6:
  1866                           
  1867                           ; BSR set to: 1
  1868  005FEE  41                 	db	65	;'A'
  1869  005FEF  54                 	db	84	;'T'
  1870  005FF0  0D                 	db	13
  1871  005FF1  00                 	db	0
  1872  005FF2                     STR_2:
  1873                           
  1874                           ; BSR set to: 1
  1875  005FF2  25                 	db	37
  1876  005FF3  33                 	db	51	;'3'
  1877  005FF4  64                 	db	100	;'d'
  1878  005FF5  00                 	db	0
  1879  005FF6                     STR_7:
  1880                           
  1881                           ; BSR set to: 1
  1882  005FF6  4F                 	db	79	;'O'
  1883  005FF7  4B                 	db	75	;'K'
  1884  005FF8  00                 	db	0
  1885  005FF9                     STR_33:
  1886                           
  1887                           ; BSR set to: 1
  1888  005FF9  22                 	db	34
  1889  005FFA  00                 	db	0
  1890  005FFB                     STR_19:
  1891                           
  1892                           ; BSR set to: 1
  1893  005FFB  2C                 	db	44
  1894  005FFC  00                 	db	0
  1895  005FFD                     STR_34:
  1896                           
  1897                           ; BSR set to: 1
  1898  005FFD  2D                 	db	45
  1899  005FFE  00                 	db	0
  1900  0000                     
  1901                           ; #config settings
  1902  005FFF  00                 	db	0	; dummy byte at the end
  1903  0000                     
  1904                           	psect	cinit
  1905  002892                     __pcinit:
  1906                           	opt callstack 0
  1907  002892                     start_initialization:
  1908                           	opt callstack 0
  1909  002892                     __initialization:
  1910                           	opt callstack 0
  1911                           
  1912                           ; Initialize objects allocated to BANK0 (6 bytes)
  1913                           ; load TBLPTR registers with __pidataBANK0
  1914  002892  0E48               	movlw	low __pidataBANK0
  1915  002894  6EF6               	movwf	tblptrl,c
  1916  002896  0E30               	movlw	high __pidataBANK0
  1917  002898  6EF7               	movwf	tblptrh,c
  1918  00289A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1919  00289C  6EF8               	movwf	tblptru,c
  1920  00289E  EE00  F0E3         	lfsr	0,__pdataBANK0
  1921  0028A2  EE10 F006          	lfsr	1,6
  1922  0028A6                     copy_data0:
  1923  0028A6  0009               	tblrd		*+
  1924  0028A8  CFF5 FFEE          	movff	tablat,postinc0
  1925  0028AC  50E5               	movf	postdec1,w,c
  1926  0028AE  50E1               	movf	fsr1l,w,c
  1927  0028B0  E1FA               	bnz	copy_data0
  1928                           
  1929                           ; Initialize objects allocated to COMRAM (2 bytes)
  1930                           ; load TBLPTR registers with __pidataCOMRAM
  1931  0028B2  0E58               	movlw	low __pidataCOMRAM
  1932  0028B4  6EF6               	movwf	tblptrl,c
  1933  0028B6  0E30               	movlw	high __pidataCOMRAM
  1934  0028B8  6EF7               	movwf	tblptrh,c
  1935  0028BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1936  0028BC  6EF8               	movwf	tblptru,c
  1937  0028BE  0009               	tblrd		*+	;fetch initializer
  1938  0028C0  CFF5 F058          	movff	tablat,__pdataCOMRAM
  1939  0028C4  0009               	tblrd		*+	;fetch initializer
  1940  0028C6  CFF5 F059          	movff	tablat,__pdataCOMRAM+1
  1941                           
  1942                           ; Clear objects allocated to BANK1 (130 bytes)
  1943  0028CA  EE01  F000         	lfsr	0,__pbssBANK1
  1944  0028CE  0E82               	movlw	130
  1945  0028D0                     clear_0:
  1946  0028D0  6AEE               	clrf	postinc0,c
  1947  0028D2  06E8               	decf	wreg,f,c
  1948  0028D4  E1FD               	bnz	clear_0
  1949                           
  1950                           ; Clear objects allocated to BANK0 (75 bytes)
  1951  0028D6  EE00  F060         	lfsr	0,__pbssBANK0
  1952  0028DA  0E4B               	movlw	75
  1953  0028DC                     clear_1:
  1954  0028DC  6AEE               	clrf	postinc0,c
  1955  0028DE  06E8               	decf	wreg,f,c
  1956  0028E0  E1FD               	bnz	clear_1
  1957                           
  1958                           ; Clear objects allocated to COMRAM (3 bytes)
  1959  0028E2  6A57               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1960  0028E4  6A56               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1961  0028E6  6A55               	clrf	__pbssCOMRAM& (0+255),c
  1962  0028E8                     end_of_initialization:
  1963                           	opt callstack 0
  1964  0028E8                     __end_of__initialization:
  1965                           	opt callstack 0
  1966  0028E8  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1967  0028EA  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1968  0028EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1969  0028EE  6EF8               	movwf	tblptru,c
  1970  0028F0  0100               	movlb	0
  1971  0028F2  EFF4  F016         	goto	_main	;jump to C main() function
  1972                           
  1973                           	psect	bssCOMRAM
  1974  000055                     __pbssCOMRAM:
  1975                           	opt callstack 0
  1976  000055                     _TFT_ConsoleRow:
  1977                           	opt callstack 0
  1978  000055                     	ds	2
  1979  000057                     _TFT_Orientation:
  1980                           	opt callstack 0
  1981  000057                     	ds	1
  1982                           
  1983                           	psect	dataCOMRAM
  1984  000058                     __pdataCOMRAM:
  1985                           	opt callstack 0
  1986  000058                     _Ecg_X:
  1987                           	opt callstack 0
  1988  000058                     	ds	2
  1989                           
  1990                           	psect	bssBANK0
  1991  000060                     __pbssBANK0:
  1992                           	opt callstack 0
  1993  000060                     _ECG_HEARTBEAT:
  1994                           	opt callstack 0
  1995  000060                     	ds	13
  1996  00006D                     _ECG_BUFFER:
  1997                           	opt callstack 0
  1998  00006D                     	ds	5
  1999  000072                     _ECG_HEARTRATE:
  2000                           	opt callstack 0
  2001  000072                     	ds	4
  2002  000076                     _A6_LAST_COMMAND_MILLISECONDS:
  2003                           	opt callstack 0
  2004  000076                     	ds	4
  2005  00007A                     _MILLISECONDS:
  2006                           	opt callstack 0
  2007  00007A                     	ds	4
  2008  00007E                     strtok@sp:
  2009                           	opt callstack 0
  2010  00007E                     	ds	2
  2011  000080                     _ECG_FLAGS:
  2012                           	opt callstack 0
  2013  000080                     	ds	2
  2014  000082                     _GSMStatus:
  2015                           	opt callstack 0
  2016  000082                     	ds	41
  2017                           
  2018                           	psect	dataBANK0
  2019  0000E3                     __pdataBANK0:
  2020                           	opt callstack 0
  2021  0000E3                     _Ecg_Yold:
  2022                           	opt callstack 0
  2023  0000E3                     	ds	2
  2024  0000E5                     _Ecg_Y:
  2025                           	opt callstack 0
  2026  0000E5                     	ds	2
  2027  0000E7                     _Ecg_Xold:
  2028                           	opt callstack 0
  2029  0000E7                     	ds	2
  2030                           
  2031                           	psect	bssBANK1
  2032  000100                     __pbssBANK1:
  2033                           	opt callstack 0
  2034  000100                     _EUSART_RX:
  2035                           	opt callstack 0
  2036  000100                     	ds	130
  2037                           
  2038                           	psect	cstackBANK0
  2039  0000AB                     __pcstackBANK0:
  2040                           	opt callstack 0
  2041  0000AB                     TFT_DrawString@x:
  2042                           	opt callstack 0
  2043  0000AB                     A6_BaudRateSet@response:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 32 bytes @ 0x0
  2047  0000AB                     	ds	2
  2048  0000AD                     TFT_DrawString@y:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 2 bytes @ 0x2
  2052  0000AD                     	ds	2
  2053  0000AF                     TFT_DrawString@str:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 2 bytes @ 0x4
  2057  0000AF                     	ds	2
  2058  0000B1                     TFT_DrawString@color:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 2 bytes @ 0x6
  2062  0000B1                     	ds	2
  2063  0000B3                     TFT_DrawString@bg:
  2064                           	opt callstack 0
  2065                           
  2066                           ; 2 bytes @ 0x8
  2067  0000B3                     	ds	2
  2068  0000B5                     TFT_DrawString@size:
  2069                           	opt callstack 0
  2070                           
  2071                           ; 1 bytes @ 0xA
  2072  0000B5                     	ds	1
  2073  0000B6                     ??_Ecg_ProcessHeartRate:
  2074                           
  2075                           ; 1 bytes @ 0xB
  2076  0000B6                     	ds	12
  2077  0000C2                     Ecg_ProcessHeartRate@heartrateString:
  2078                           	opt callstack 0
  2079                           
  2080                           ; 5 bytes @ 0x17
  2081  0000C2                     	ds	5
  2082  0000C7                     _Ecg_ProcessHeartRate$1036:
  2083                           	opt callstack 0
  2084                           
  2085                           ; 2 bytes @ 0x1C
  2086  0000C7                     	ds	2
  2087  0000C9                     _Ecg_ProcessHeartRate$1037:
  2088                           	opt callstack 0
  2089                           
  2090                           ; 2 bytes @ 0x1E
  2091  0000C9                     	ds	2
  2092  0000CB                     Ecg_ProcessHeartRate@heartbeatAverage:
  2093                           	opt callstack 0
  2094  0000CB                     A6_BaudRateSet@request:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 20 bytes @ 0x20
  2098  0000CB                     	ds	4
  2099  0000CF                     Ecg_ProcessHeartRate@heartrate:
  2100                           	opt callstack 0
  2101                           
  2102                           ; 1 bytes @ 0x24
  2103  0000CF                     	ds	1
  2104  0000D0                     Ecg_ProcessHeartRate@jPrev:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 1 bytes @ 0x25
  2108  0000D0                     	ds	1
  2109  0000D1                     Ecg_ProcessHeartRate@i:
  2110                           	opt callstack 0
  2111                           
  2112                           ; 1 bytes @ 0x26
  2113  0000D1                     	ds	1
  2114  0000D2                     Ecg_ProcessHeartRate@j:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 1 bytes @ 0x27
  2118  0000D2                     	ds	13
  2119  0000DF                     A6_BaudRateSet@currentBaudRate:
  2120                           	opt callstack 0
  2121                           
  2122                           ; 4 bytes @ 0x34
  2123  0000DF                     	ds	4
  2124                           
  2125                           	psect	cstackCOMRAM
  2126  000001                     __pcstackCOMRAM:
  2127                           	opt callstack 0
  2128  000001                     ??_Ecg_Interrupt:
  2129  000001                     ??_EUSART_RX_Interrupt:
  2130  000001                     
  2131                           ; 4 bytes @ 0x0
  2132  000001                     	ds	1
  2133  000002                     EUSART_RX_Interrupt@c:
  2134                           	opt callstack 0
  2135                           
  2136                           ; 1 bytes @ 0x1
  2137  000002                     	ds	1
  2138  000003                     ??_isr:
  2139                           
  2140                           ; 1 bytes @ 0x2
  2141  000003                     	ds	2
  2142  000005                     ??_init:
  2143  000005                     ??_TFT_Reset:
  2144  000005                     ??_Ecg_ProcessInterrupt:
  2145  000005                     ??_isdigit:
  2146  000005                     ?_TFT_GetWidth:
  2147                           	opt callstack 0
  2148  000005                     ?_strlen:
  2149                           	opt callstack 0
  2150  000005                     ?_abs:
  2151                           	opt callstack 0
  2152  000005                     ?_Ecg_CheckLeads:
  2153                           	opt callstack 0
  2154  000005                     ?_strcmp:
  2155                           	opt callstack 0
  2156  000005                     ?_strchr:
  2157                           	opt callstack 0
  2158  000005                     ?_TFT_GetHeight:
  2159                           	opt callstack 0
  2160  000005                     ?_Ecg_Read:
  2161                           	opt callstack 0
  2162  000005                     ?___awdiv:
  2163                           	opt callstack 0
  2164  000005                     ?___lwdiv:
  2165                           	opt callstack 0
  2166  000005                     ?___lmul:
  2167                           	opt callstack 0
  2168  000005                     ?___lldiv:
  2169                           	opt callstack 0
  2170  000005                     EUSART_TX_Char@c:
  2171                           	opt callstack 0
  2172  000005                     TFT_WriteRegister@reg:
  2173                           	opt callstack 0
  2174  000005                     EUSART_RX_AvailableData@timeout:
  2175                           	opt callstack 0
  2176  000005                     ___awdiv@dividend:
  2177                           	opt callstack 0
  2178  000005                     ___lwdiv@dividend:
  2179                           	opt callstack 0
  2180  000005                     abs@a:
  2181                           	opt callstack 0
  2182  000005                     memset@p1:
  2183                           	opt callstack 0
  2184  000005                     strcmp@s1:
  2185                           	opt callstack 0
  2186  000005                     strcpy@to:
  2187                           	opt callstack 0
  2188  000005                     strlen@s:
  2189                           	opt callstack 0
  2190  000005                     strchr@ptr:
  2191                           	opt callstack 0
  2192  000005                     sleepMS@ms:
  2193                           	opt callstack 0
  2194  000005                     ___lmul@multiplier:
  2195                           	opt callstack 0
  2196  000005                     ___lldiv@dividend:
  2197                           	opt callstack 0
  2198                           
  2199                           ; 4 bytes @ 0x4
  2200  000005                     	ds	1
  2201  000006                     _isdigit$1975:
  2202                           	opt callstack 0
  2203                           
  2204                           ; 1 bytes @ 0x5
  2205  000006                     	ds	1
  2206  000007                     ??_abs:
  2207  000007                     ??_Ecg_CheckLeads:
  2208  000007                     ??_EUSART_RX_AvailableData:
  2209  000007                     ??_Ecg_Read:
  2210  000007                     isdigit@c:
  2211                           	opt callstack 0
  2212  000007                     TFT_WriteRegister@data:
  2213                           	opt callstack 0
  2214  000007                     ___awdiv@divisor:
  2215                           	opt callstack 0
  2216  000007                     ___lwdiv@divisor:
  2217                           	opt callstack 0
  2218  000007                     memset@c:
  2219                           	opt callstack 0
  2220  000007                     strcmp@s2:
  2221                           	opt callstack 0
  2222  000007                     strcpy@from:
  2223                           	opt callstack 0
  2224  000007                     strlen@cp:
  2225                           	opt callstack 0
  2226  000007                     strchr@chr:
  2227                           	opt callstack 0
  2228                           
  2229                           ; 2 bytes @ 0x6
  2230  000007                     	ds	1
  2231  000008                     Ecg_CheckLeads@leadsStatus:
  2232                           	opt callstack 0
  2233                           
  2234                           ; 1 bytes @ 0x7
  2235  000008                     	ds	1
  2236  000009                     ??_strcmp:
  2237  000009                     ??_strchr:
  2238  000009                     ?_strncmp:
  2239                           	opt callstack 0
  2240  000009                     ?___wmul:
  2241                           	opt callstack 0
  2242  000009                     TFT_WriteRegister@h:
  2243                           	opt callstack 0
  2244  000009                     ___awdiv@counter:
  2245                           	opt callstack 0
  2246  000009                     Ecg_Read@ecg:
  2247                           	opt callstack 0
  2248  000009                     EUSART_TX_String@str:
  2249                           	opt callstack 0
  2250  000009                     ___wmul@multiplier:
  2251                           	opt callstack 0
  2252  000009                     ___lwdiv@quotient:
  2253                           	opt callstack 0
  2254  000009                     memset@n:
  2255                           	opt callstack 0
  2256  000009                     strcpy@cp:
  2257                           	opt callstack 0
  2258  000009                     strncmp@s1:
  2259                           	opt callstack 0
  2260  000009                     sleepMS@t:
  2261                           	opt callstack 0
  2262  000009                     ___lmul@multiplicand:
  2263                           	opt callstack 0
  2264  000009                     ___lldiv@divisor:
  2265                           	opt callstack 0
  2266                           
  2267                           ; 4 bytes @ 0x8
  2268  000009                     	ds	1
  2269  00000A                     TFT_WriteRegister@l:
  2270                           	opt callstack 0
  2271  00000A                     ___awdiv@sign:
  2272                           	opt callstack 0
  2273                           
  2274                           ; 1 bytes @ 0x9
  2275  00000A                     	ds	1
  2276  00000B                     ?_strspn:
  2277                           	opt callstack 0
  2278  00000B                     ?_strcspn:
  2279                           	opt callstack 0
  2280  00000B                     TFT_WriteRegister@h_727:
  2281                           	opt callstack 0
  2282  00000B                     EUSART_TX_String@len:
  2283                           	opt callstack 0
  2284  00000B                     ___lwdiv@counter:
  2285                           	opt callstack 0
  2286  00000B                     strcmp@r:
  2287                           	opt callstack 0
  2288  00000B                     ___wmul@multiplicand:
  2289                           	opt callstack 0
  2290  00000B                     ___awdiv@quotient:
  2291                           	opt callstack 0
  2292  00000B                     memset@p:
  2293                           	opt callstack 0
  2294  00000B                     strcspn@s1:
  2295                           	opt callstack 0
  2296  00000B                     strncmp@s2:
  2297                           	opt callstack 0
  2298  00000B                     strspn@s1:
  2299                           	opt callstack 0
  2300  00000B                     EUSART_RX_AvailableData@t:
  2301                           	opt callstack 0
  2302                           
  2303                           ; 4 bytes @ 0xA
  2304  00000B                     	ds	1
  2305  00000C                     TFT_WriteRegister@l_728:
  2306                           	opt callstack 0
  2307                           
  2308                           ; 1 bytes @ 0xB
  2309  00000C                     	ds	1
  2310  00000D                     TFT_SetAddrWindow@x1:
  2311                           	opt callstack 0
  2312  00000D                     TFT_DrawPixel@x:
  2313                           	opt callstack 0
  2314  00000D                     ___wmul@product:
  2315                           	opt callstack 0
  2316  00000D                     strcspn@s2:
  2317                           	opt callstack 0
  2318  00000D                     strncmp@len:
  2319                           	opt callstack 0
  2320  00000D                     strspn@s2:
  2321                           	opt callstack 0
  2322  00000D                     ___lmul@product:
  2323                           	opt callstack 0
  2324  00000D                     ___lldiv@quotient:
  2325                           	opt callstack 0
  2326                           
  2327                           ; 4 bytes @ 0xC
  2328  00000D                     	ds	2
  2329  00000F                     ??_strncmp:
  2330  00000F                     ??_strspn:
  2331  00000F                     ??_strcspn:
  2332  00000F                     ?_atoi:
  2333                           	opt callstack 0
  2334  00000F                     TFT_SetAddrWindow@y1:
  2335                           	opt callstack 0
  2336  00000F                     TFT_DrawPixel@y:
  2337                           	opt callstack 0
  2338  00000F                     TFT_Flood@color:
  2339                           	opt callstack 0
  2340  00000F                     EUSART_BufferGetChar@timeout:
  2341                           	opt callstack 0
  2342  00000F                     atoi@s:
  2343                           	opt callstack 0
  2344                           
  2345                           ; 2 bytes @ 0xE
  2346  00000F                     	ds	1
  2347  000010                     ?_strstr:
  2348                           	opt callstack 0
  2349  000010                     strstr@s1:
  2350                           	opt callstack 0
  2351  000010                     strcspn@i:
  2352                           	opt callstack 0
  2353  000010                     strspn@i:
  2354                           	opt callstack 0
  2355                           
  2356                           ; 2 bytes @ 0xF
  2357  000010                     	ds	1
  2358  000011                     ??_atoi:
  2359  000011                     ?_atol:
  2360                           	opt callstack 0
  2361  000011                     ___lldiv@counter:
  2362                           	opt callstack 0
  2363  000011                     TFT_SetAddrWindow@x2:
  2364                           	opt callstack 0
  2365  000011                     TFT_DrawPixel@color:
  2366                           	opt callstack 0
  2367  000011                     A6_ReadLine@line:
  2368                           	opt callstack 0
  2369  000011                     atol@s:
  2370                           	opt callstack 0
  2371  000011                     TFT_Flood@len:
  2372                           	opt callstack 0
  2373                           
  2374                           ; 4 bytes @ 0x10
  2375  000011                     	ds	1
  2376  000012                     ?_strtok:
  2377                           	opt callstack 0
  2378  000012                     ?___llmod:
  2379                           	opt callstack 0
  2380  000012                     strstr@s2:
  2381                           	opt callstack 0
  2382  000012                     strtok@s1:
  2383                           	opt callstack 0
  2384  000012                     EUSART_BaudRateSet@baudRate:
  2385                           	opt callstack 0
  2386  000012                     ___llmod@dividend:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 4 bytes @ 0x11
  2390  000012                     	ds	1
  2391  000013                     A6_ReadLine@lineLen:
  2392                           	opt callstack 0
  2393  000013                     atoi@sign:
  2394                           	opt callstack 0
  2395  000013                     TFT_SetAddrWindow@y2:
  2396                           	opt callstack 0
  2397  000013                     TFT_DrawPixel@h:
  2398                           	opt callstack 0
  2399                           
  2400                           ; 2 bytes @ 0x12
  2401  000013                     	ds	1
  2402  000014                     A6_ReadLine@timeout:
  2403                           	opt callstack 0
  2404  000014                     atoi@a:
  2405                           	opt callstack 0
  2406  000014                     strtok@s2:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 2 bytes @ 0x13
  2410  000014                     	ds	1
  2411  000015                     ??_TFT_Flood:
  2412  000015                     ??_atol:
  2413  000015                     TFT_DrawPixel@v:
  2414                           	opt callstack 0
  2415                           
  2416                           ; 2 bytes @ 0x14
  2417  000015                     	ds	1
  2418  000016                     ??_EUSART_BaudRateSet:
  2419  000016                     A6_ReadLine@iResponse:
  2420                           	opt callstack 0
  2421  000016                     ___llmod@divisor:
  2422                           	opt callstack 0
  2423                           
  2424                           ; 4 bytes @ 0x15
  2425  000016                     	ds	1
  2426  000017                     A6_ReadLine@c:
  2427                           	opt callstack 0
  2428  000017                     TFT_DrawLine@x0:
  2429                           	opt callstack 0
  2430  000017                     TFT_DrawBitmap@x:
  2431                           	opt callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x16
  2434  000017                     	ds	1
  2435  000018                     A6_Command@command:
  2436                           	opt callstack 0
  2437                           
  2438                           ; 2 bytes @ 0x17
  2439  000018                     	ds	1
  2440  000019                     atol@sign:
  2441                           	opt callstack 0
  2442  000019                     TFT_DrawLine@y0:
  2443                           	opt callstack 0
  2444  000019                     TFT_Flood@blocks:
  2445                           	opt callstack 0
  2446  000019                     TFT_DrawBitmap@y:
  2447                           	opt callstack 0
  2448                           
  2449                           ; 2 bytes @ 0x18
  2450  000019                     	ds	1
  2451  00001A                     ___llmod@counter:
  2452                           	opt callstack 0
  2453  00001A                     A6_Command@timeout:
  2454                           	opt callstack 0
  2455  00001A                     EUSART_BaudRateSet@tmp:
  2456                           	opt callstack 0
  2457  00001A                     atol@a:
  2458                           	opt callstack 0
  2459                           
  2460                           ; 4 bytes @ 0x19
  2461  00001A                     	ds	1
  2462  00001B                     ?_sprintf:
  2463                           	opt callstack 0
  2464  00001B                     TFT_Flood@i:
  2465                           	opt callstack 0
  2466  00001B                     TFT_DrawLine@x1:
  2467                           	opt callstack 0
  2468  00001B                     TFT_DrawBitmap@bitmap:
  2469                           	opt callstack 0
  2470  00001B                     sprintf@sp:
  2471                           	opt callstack 0
  2472                           
  2473                           ; 2 bytes @ 0x1A
  2474  00001B                     	ds	1
  2475  00001C                     TFT_Flood@color_hi:
  2476                           	opt callstack 0
  2477  00001C                     A6_Command@response:
  2478                           	opt callstack 0
  2479                           
  2480                           ; 2 bytes @ 0x1B
  2481  00001C                     	ds	1
  2482  00001D                     TFT_Flood@color_lo:
  2483                           	opt callstack 0
  2484  00001D                     TFT_DrawLine@y1:
  2485                           	opt callstack 0
  2486  00001D                     TFT_DrawBitmap@color:
  2487                           	opt callstack 0
  2488  00001D                     sprintf@f:
  2489                           	opt callstack 0
  2490                           
  2491                           ; 2 bytes @ 0x1C
  2492  00001D                     	ds	1
  2493  00001E                     A6_Command@responseLen:
  2494                           	opt callstack 0
  2495  00001E                     atol@c:
  2496                           	opt callstack 0
  2497  00001E                     TFT_FullScreen@color:
  2498                           	opt callstack 0
  2499                           
  2500                           ; 2 bytes @ 0x1D
  2501  00001E                     	ds	1
  2502  00001F                     ??_TFT_DrawBitmap:
  2503  00001F                     ?_A6_BaudRateGet:
  2504                           	opt callstack 0
  2505  00001F                     TFT_DrawLine@color:
  2506                           	opt callstack 0
  2507  00001F                     A6_NetworkGetOperator@operator:
  2508                           	opt callstack 0
  2509  00001F                     A6_IsAlive@response:
  2510                           	opt callstack 0
  2511  00001F                     A6_NetworkGetRSSI@response:
  2512                           	opt callstack 0
  2513                           
  2514                           ; 32 bytes @ 0x1E
  2515  00001F                     	ds	1
  2516  000020                     TFT_OrientationSet@color:
  2517                           	opt callstack 0
  2518  000020                     TFT_DrawFillRect@x:
  2519                           	opt callstack 0
  2520                           
  2521                           ; 2 bytes @ 0x1F
  2522  000020                     	ds	1
  2523  000021                     ??_TFT_DrawLine:
  2524  000021                     TFT_DrawBitmap@w:
  2525                           	opt callstack 0
  2526  000021                     A6_NetworkGetOperator@operatorLen:
  2527                           	opt callstack 0
  2528                           
  2529                           ; 1 bytes @ 0x20
  2530  000021                     	ds	1
  2531  000022                     TFT_OrientationSet@orientation:
  2532                           	opt callstack 0
  2533  000022                     TFT_DrawBitmap@h:
  2534                           	opt callstack 0
  2535  000022                     TFT_DrawFillRect@y:
  2536                           	opt callstack 0
  2537                           
  2538                           ; 2 bytes @ 0x21
  2539  000022                     	ds	1
  2540  000023                     ??_sprintf:
  2541  000023                     TFT_Init@color:
  2542                           	opt callstack 0
  2543  000023                     TFT_DrawBitmap@j:
  2544                           	opt callstack 0
  2545  000023                     A6_NetworkGetOperator@operatorToken:
  2546                           	opt callstack 0
  2547  000023                     A6_BaudRateGet@response:
  2548                           	opt callstack 0
  2549                           
  2550                           ; 32 bytes @ 0x22
  2551  000023                     	ds	1
  2552  000024                     TFT_DrawLine@t:
  2553                           	opt callstack 0
  2554  000024                     TFT_DrawFillRect@w:
  2555                           	opt callstack 0
  2556                           
  2557                           ; 2 bytes @ 0x23
  2558  000024                     	ds	1
  2559  000025                     ??_TFT_Init:
  2560  000025                     TFT_DrawBitmap@byte:
  2561                           	opt callstack 0
  2562                           
  2563                           ; 1 bytes @ 0x24
  2564  000025                     	ds	1
  2565  000026                     TFT_DrawLine@t_786:
  2566                           	opt callstack 0
  2567  000026                     TFT_DrawFillRect@h:
  2568                           	opt callstack 0
  2569  000026                     TFT_DrawBitmap@i:
  2570                           	opt callstack 0
  2571                           
  2572                           ; 2 bytes @ 0x25
  2573  000026                     	ds	1
  2574  000027                     TFT_Init@orientation:
  2575                           	opt callstack 0
  2576  000027                     sprintf@prec:
  2577                           	opt callstack 0
  2578                           
  2579                           ; 2 bytes @ 0x26
  2580  000027                     	ds	1
  2581  000028                     TFT_Init@data:
  2582                           	opt callstack 0
  2583  000028                     TFT_DrawLine@t_787:
  2584                           	opt callstack 0
  2585  000028                     TFT_DrawFillRect@color:
  2586                           	opt callstack 0
  2587                           
  2588                           ; 2 bytes @ 0x27
  2589  000028                     	ds	1
  2590  000029                     sprintf@val:
  2591                           	opt callstack 0
  2592                           
  2593                           ; 4 bytes @ 0x28
  2594  000029                     	ds	1
  2595  00002A                     ??_TFT_DrawFillRect:
  2596  00002A                     TFT_Init@initSequenceSize:
  2597                           	opt callstack 0
  2598  00002A                     TFT_DrawLine@t_788:
  2599                           	opt callstack 0
  2600                           
  2601                           ; 2 bytes @ 0x29
  2602  00002A                     	ds	2
  2603  00002C                     TFT_Init@cmd:
  2604                           	opt callstack 0
  2605  00002C                     TFT_DrawLine@dy:
  2606                           	opt callstack 0
  2607                           
  2608                           ; 2 bytes @ 0x2B
  2609  00002C                     	ds	1
  2610  00002D                     sprintf@ap:
  2611                           	opt callstack 0
  2612                           
  2613                           ; 2 bytes @ 0x2C
  2614  00002D                     	ds	1
  2615  00002E                     ??_Ecg_ProcessHeartbeat:
  2616  00002E                     TFT_Init@i:
  2617                           	opt callstack 0
  2618  00002E                     TFT_DrawLine@ystep:
  2619                           	opt callstack 0
  2620                           
  2621                           ; 2 bytes @ 0x2D
  2622  00002E                     	ds	1
  2623  00002F                     sprintf@flag:
  2624                           	opt callstack 0
  2625                           
  2626                           ; 1 bytes @ 0x2E
  2627  00002F                     	ds	1
  2628  000030                     TFT_DrawLine@err:
  2629                           	opt callstack 0
  2630  000030                     Ecg_ProcessHeartbeat@ecgDeltaSum:
  2631                           	opt callstack 0
  2632  000030                     sprintf@width:
  2633                           	opt callstack 0
  2634                           
  2635                           ; 2 bytes @ 0x2F
  2636  000030                     	ds	2
  2637  000032                     sprintf@c:
  2638                           	opt callstack 0
  2639  000032                     TFT_DrawLine@steep:
  2640                           	opt callstack 0
  2641  000032                     Ecg_ProcessHeartbeat@ecgDeltaAbsSum:
  2642                           	opt callstack 0
  2643                           
  2644                           ; 2 bytes @ 0x31
  2645  000032                     	ds	2
  2646  000034                     TFT_DrawLine@dx:
  2647                           	opt callstack 0
  2648  000034                     Ecg_ProcessHeartbeat@ecgDeltaDiff:
  2649                           	opt callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x33
  2652  000034                     	ds	2
  2653  000036                     TFT_DrawChar@x:
  2654                           	opt callstack 0
  2655  000036                     Ecg_ProcessHeartbeat@delta:
  2656                           	opt callstack 0
  2657  000036                     _Ecg_Draw$2263:
  2658                           	opt callstack 0
  2659                           
  2660                           ; 2 bytes @ 0x35
  2661  000036                     	ds	2
  2662  000038                     Ecg_ProcessHeartbeat@i:
  2663                           	opt callstack 0
  2664  000038                     TFT_DrawChar@y:
  2665                           	opt callstack 0
  2666  000038                     Ecg_Draw@ecg:
  2667                           	opt callstack 0
  2668                           
  2669                           ; 2 bytes @ 0x37
  2670  000038                     	ds	2
  2671  00003A                     TFT_DrawChar@c:
  2672                           	opt callstack 0
  2673                           
  2674                           ; 1 bytes @ 0x39
  2675  00003A                     	ds	1
  2676  00003B                     TFT_DrawChar@color:
  2677                           	opt callstack 0
  2678                           
  2679                           ; 2 bytes @ 0x3A
  2680  00003B                     	ds	2
  2681  00003D                     TFT_DrawChar@bg:
  2682                           	opt callstack 0
  2683                           
  2684                           ; 2 bytes @ 0x3C
  2685  00003D                     	ds	2
  2686  00003F                     TFT_DrawChar@size:
  2687                           	opt callstack 0
  2688  00003F                     A6_BaudRateAutoDetect@i:
  2689                           	opt callstack 0
  2690  00003F                     A6_NetworkGetRSSI@RSSIToken:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 2 bytes @ 0x3E
  2694  00003F                     	ds	1
  2695  000040                     ??_TFT_DrawChar:
  2696                           
  2697                           ; 1 bytes @ 0x3F
  2698  000040                     	ds	1
  2699  000041                     A6_NetworkGetRSSILevel@RSSI:
  2700                           	opt callstack 0
  2701                           
  2702                           ; 1 bytes @ 0x40
  2703  000041                     	ds	2
  2704  000043                     A6_BaudRateGet@baudRate:
  2705                           	opt callstack 0
  2706                           
  2707                           ; 4 bytes @ 0x42
  2708  000043                     	ds	1
  2709  000044                     TFT_DrawChar@line:
  2710                           	opt callstack 0
  2711                           
  2712                           ; 1 bytes @ 0x43
  2713  000044                     	ds	1
  2714  000045                     TFT_DrawChar@xl:
  2715                           	opt callstack 0
  2716                           
  2717                           ; 2 bytes @ 0x44
  2718  000045                     	ds	2
  2719  000047                     A6_BaudRateGet@baudRateToken:
  2720                           	opt callstack 0
  2721  000047                     _TFT_DrawChar$2260:
  2722                           	opt callstack 0
  2723                           
  2724                           ; 2 bytes @ 0x46
  2725  000047                     	ds	2
  2726  000049                     A6_BaudRateGet@j:
  2727                           	opt callstack 0
  2728  000049                     _TFT_DrawChar$2261:
  2729                           	opt callstack 0
  2730                           
  2731                           ; 2 bytes @ 0x48
  2732  000049                     	ds	1
  2733  00004A                     A6_BaudRateSet@baudRate:
  2734                           	opt callstack 0
  2735                           
  2736                           ; 4 bytes @ 0x49
  2737  00004A                     	ds	1
  2738  00004B                     TFT_DrawChar@j:
  2739                           	opt callstack 0
  2740                           
  2741                           ; 1 bytes @ 0x4A
  2742  00004B                     	ds	1
  2743  00004C                     TFT_DrawChar@i:
  2744                           	opt callstack 0
  2745                           
  2746                           ; 1 bytes @ 0x4B
  2747  00004C                     	ds	1
  2748  00004D                     ??_processGSM:
  2749  00004D                     ??_Ecg_Background_Leads_Ok:
  2750  00004D                     
  2751                           ; 1 bytes @ 0x4C
  2752  00004D                     	ds	1
  2753  00004E                     A6_Init@baudRate:
  2754                           	opt callstack 0
  2755                           
  2756                           ; 4 bytes @ 0x4D
  2757  00004E                     	ds	1
  2758  00004F                     processGSM@operatorX:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 2 bytes @ 0x4E
  2762  00004F                     	ds	2
  2763  000051                     processGSM@RSSIY:
  2764                           	opt callstack 0
  2765                           
  2766                           ; 1 bytes @ 0x50
  2767  000051                     	ds	1
  2768  000052                     processGSM@RSSIX:
  2769                           	opt callstack 0
  2770                           
  2771                           ; 2 bytes @ 0x51
  2772  000052                     	ds	2
  2773  000054                     processGSM@i:
  2774                           	opt callstack 0
  2775                           
  2776                           ; 1 bytes @ 0x53
  2777  000054                     	ds	1
  2778  000055                     
  2779                           ; 1 bytes @ 0x54
  2780 ;;
  2781 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2782 ;;
  2783 ;; *************** function _main *****************
  2784 ;; Defined at:
  2785 ;;		line 12 in file "main.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2799 ;;      Params:         0       0       0       0       0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2802 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels required when called:   12
  2805 ;; This function calls:
  2806 ;;		_A6_Init
  2807 ;;		_EUSART_Init
  2808 ;;		_Ecg_Init
  2809 ;;		_TFT_Init
  2810 ;;		_init
  2811 ;;		_loop
  2812 ;; This function is called by:
  2813 ;;		Startup code after reset
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text0
  2818  002DE8                     __ptext0:
  2819                           	opt callstack 0
  2820  002DE8                     _main:
  2821                           	opt callstack 19
  2822  002DE8                     
  2823                           ;main.c: 14: init();
  2824  002DE8  EC06  F013         	call	_init	;wreg free
  2825  002DEC                     
  2826                           ;main.c: 15: TFT_Init(3, 0x0821);
  2827  002DEC  0E08               	movlw	8
  2828  002DEE  6E24               	movwf	(TFT_Init@color+1)^0,c
  2829  002DF0  0E21               	movlw	33
  2830  002DF2  6E23               	movwf	TFT_Init@color^0,c
  2831  002DF4  0E03               	movlw	3
  2832  002DF6  EC08  F00D         	call	_TFT_Init
  2833  002DFA                     
  2834                           ;main.c: 16: EUSART_Init();
  2835  002DFA  EC6F  F016         	call	_EUSART_Init	;wreg free
  2836  002DFE                     
  2837                           ;main.c: 17: Ecg_Init();
  2838  002DFE  ECB5  F017         	call	_Ecg_Init	;wreg free
  2839  002E02                     
  2840                           ;main.c: 18: A6_Init(115200);
  2841  002E02  0E00               	movlw	0
  2842  002E04  6E4E               	movwf	A6_Init@baudRate^0,c
  2843  002E06  0EC2               	movlw	194
  2844  002E08  6E4F               	movwf	(A6_Init@baudRate+1)^0,c
  2845  002E0A  0E01               	movlw	1
  2846  002E0C  6E50               	movwf	(A6_Init@baudRate+2)^0,c
  2847  002E0E  0E00               	movlw	0
  2848  002E10  6E51               	movwf	(A6_Init@baudRate+3)^0,c
  2849  002E12  EC11  F017         	call	_A6_Init	;wreg free
  2850  002E16                     l5773:
  2851  002E16  EC1F  F018         	call	_loop	;wreg free
  2852  002E1A  EF0B  F017         	goto	l5773
  2853  002E1E  EF07  F000         	goto	start
  2854  002E22                     __end_of_main:
  2855                           	opt callstack 0
  2856                           
  2857 ;; *************** function _loop *****************
  2858 ;; Defined at:
  2859 ;;		line 28 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:   11
  2880 ;; This function calls:
  2881 ;;		_Ecg_Process
  2882 ;;		_processGSM
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text1
  2889  00303E                     __ptext1:
  2890                           	opt callstack 0
  2891  00303E                     _loop:
  2892                           	opt callstack 19
  2893  00303E                     
  2894                           ;main.c: 30: Ecg_Process();
  2895  00303E  EC0B  F015         	call	_Ecg_Process	;wreg free
  2896                           
  2897                           ;main.c: 32: processGSM();
  2898  003042  EC84  F004         	call	_processGSM	;wreg free
  2899  003046  0012               	return		;funcret
  2900  003048                     __end_of_loop:
  2901                           	opt callstack 0
  2902                           
  2903 ;; *************** function _processGSM *****************
  2904 ;; Defined at:
  2905 ;;		line 53 in file "main.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;		None
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  RSSIY           1   80[COMRAM] unsigned char 
  2910 ;;  i               1   83[COMRAM] unsigned char 
  2911 ;;  RSSIX           2   81[COMRAM] unsigned int 
  2912 ;;  operatorX       2   78[COMRAM] unsigned int 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0
  2923 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2924 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2925 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2926 ;;Total ram usage:        8 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    8
  2929 ;; This function calls:
  2930 ;;		_A6_NetworkGetOperator
  2931 ;;		_A6_NetworkGetRSSILevel
  2932 ;;		_TFT_DrawFillRect
  2933 ;;		_TFT_DrawLine
  2934 ;;		_TFT_DrawString
  2935 ;;		_TFT_GetWidth
  2936 ;;		___wmul
  2937 ;;		_strlen
  2938 ;; This function is called by:
  2939 ;;		_loop
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text2
  2944  000908                     __ptext2:
  2945                           	opt callstack 0
  2946  000908                     _processGSM:
  2947                           	opt callstack 21
  2948  000908                     
  2949                           ;main.c: 55: if(GSMStatus.nextOperatorName < MILLISECONDS) {
  2950  000908  0100               	movlb	0	; () banked
  2951  00090A  517A               	movf	_MILLISECONDS& (0+255),w,b
  2952  00090C  5D82               	subwf	_GSMStatus& (0+255),w,b
  2953  00090E  517B               	movf	(_MILLISECONDS+1)& (0+255),w,b
  2954  000910  5983               	subwfb	(_GSMStatus+1)& (0+255),w,b
  2955  000912  517C               	movf	(_MILLISECONDS+2)& (0+255),w,b
  2956  000914  5984               	subwfb	(_GSMStatus+2)& (0+255),w,b
  2957  000916  517D               	movf	(_MILLISECONDS+3)& (0+255),w,b
  2958  000918  5985               	subwfb	(_GSMStatus+3)& (0+255),w,b
  2959  00091A  B0D8               	btfsc	status,0,c
  2960  00091C  EF92  F004         	goto	u5351
  2961  000920  EF94  F004         	goto	u5350
  2962  000924                     u5351:
  2963  000924  EFF7  F004         	goto	l5621
  2964  000928                     u5350:
  2965  000928                     
  2966                           ; BSR set to: 0
  2967                           ;main.c: 56: A6_NetworkGetOperator(GSMStatus.operatorName, 32);
  2968  000928  0E8A               	movlw	low (_GSMStatus+8)
  2969  00092A  6E1F               	movwf	A6_NetworkGetOperator@operator^0,c
  2970  00092C  0E00               	movlw	high (_GSMStatus+8)
  2971  00092E  6E20               	movwf	(A6_NetworkGetOperator@operator+1)^0,c
  2972  000930  0E20               	movlw	32
  2973  000932  6E21               	movwf	A6_NetworkGetOperator@operatorLen^0,c
  2974  000934  ECD4  F008         	call	_A6_NetworkGetOperator	;wreg free
  2975  000938                     
  2976                           ;main.c: 57: uint16_t operatorX = TFT_GetWidth() - 110;
  2977  000938  ECD4  F015         	call	_TFT_GetWidth	;wreg free
  2978  00093C  0E92               	movlw	146
  2979  00093E  2405               	addwf	?_TFT_GetWidth^0,w,c
  2980  000940  6E4F               	movwf	processGSM@operatorX^0,c
  2981  000942  0EFF               	movlw	255
  2982  000944  2006               	addwfc	(?_TFT_GetWidth+1)^0,w,c
  2983  000946  6E50               	movwf	(processGSM@operatorX+1)^0,c
  2984  000948                     
  2985                           ;main.c: 58: if(GSMStatus.operatorName[0] == '-') {
  2986  000948  0E2D               	movlw	45
  2987  00094A  0100               	movlb	0	; () banked
  2988  00094C  198A               	xorwf	(_GSMStatus+8)& (0+255),w,b
  2989  00094E  A4D8               	btfss	status,2,c
  2990  000950  EFAC  F004         	goto	u5361
  2991  000954  EFAE  F004         	goto	u5360
  2992  000958                     u5361:
  2993  000958  EFD4  F004         	goto	l5617
  2994  00095C                     u5360:
  2995  00095C                     
  2996                           ; BSR set to: 0
  2997                           ;main.c: 59: GSMStatus.nextOperatorName = MILLISECONDS + 2510;
  2998  00095C  0ECE               	movlw	206
  2999  00095E  257A               	addwf	_MILLISECONDS& (0+255),w,b
  3000  000960  6F82               	movwf	_GSMStatus& (0+255),b
  3001  000962  0E09               	movlw	9
  3002  000964  217B               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3003  000966  6F83               	movwf	(_GSMStatus+1)& (0+255),b
  3004  000968  0E00               	movlw	0
  3005  00096A  217C               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3006  00096C  6F84               	movwf	(_GSMStatus+2)& (0+255),b
  3007  00096E  0E00               	movlw	0
  3008  000970  217D               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3009  000972  6F85               	movwf	(_GSMStatus+3)& (0+255),b
  3010  000974                     
  3011                           ; BSR set to: 0
  3012                           ;main.c: 60: TFT_DrawString(operatorX, 8, "Connecting...", 0xFFE0, 0x0821, 1);
  3013  000974  C04F  F0AB         	movff	processGSM@operatorX,TFT_DrawString@x
  3014  000978  C050  F0AC         	movff	processGSM@operatorX+1,TFT_DrawString@x+1
  3015  00097C  0E00               	movlw	0
  3016  00097E  6FAE               	movwf	(TFT_DrawString@y+1)& (0+255),b
  3017  000980  0E08               	movlw	8
  3018  000982  6FAD               	movwf	TFT_DrawString@y& (0+255),b
  3019  000984  0E79               	movlw	low STR_1
  3020  000986  6FAF               	movwf	TFT_DrawString@str& (0+255),b
  3021  000988  0E5F               	movlw	high STR_1
  3022  00098A  6FB0               	movwf	(TFT_DrawString@str+1)& (0+255),b
  3023  00098C  0EFF               	movlw	255
  3024  00098E  6FB2               	movwf	(TFT_DrawString@color+1)& (0+255),b
  3025  000990  0EE0               	movlw	224
  3026  000992  6FB1               	movwf	TFT_DrawString@color& (0+255),b
  3027  000994  0E08               	movlw	8
  3028  000996  6FB4               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  3029  000998  0E21               	movlw	33
  3030  00099A  6FB3               	movwf	TFT_DrawString@bg& (0+255),b
  3031  00099C  0E01               	movlw	1
  3032  00099E  6FB5               	movwf	TFT_DrawString@size& (0+255),b
  3033  0009A0  EC7D  F010         	call	_TFT_DrawString	;wreg free
  3034                           
  3035                           ;main.c: 61: } else {
  3036  0009A4  EFF7  F004         	goto	l5621
  3037  0009A8                     l5617:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;main.c: 62: GSMStatus.nextOperatorName = MILLISECONDS + 37190;
  3041  0009A8  0E46               	movlw	70
  3042  0009AA  257A               	addwf	_MILLISECONDS& (0+255),w,b
  3043  0009AC  6F82               	movwf	_GSMStatus& (0+255),b
  3044  0009AE  0E91               	movlw	145
  3045  0009B0  217B               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3046  0009B2  6F83               	movwf	(_GSMStatus+1)& (0+255),b
  3047  0009B4  0E00               	movlw	0
  3048  0009B6  217C               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3049  0009B8  6F84               	movwf	(_GSMStatus+2)& (0+255),b
  3050  0009BA  0E00               	movlw	0
  3051  0009BC  217D               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3052  0009BE  6F85               	movwf	(_GSMStatus+3)& (0+255),b
  3053  0009C0                     
  3054                           ; BSR set to: 0
  3055                           ;main.c: 63: TFT_DrawString(operatorX, 8, GSMStatus.operatorName, 0xFFFF, 0x0821, 1);
  3056  0009C0  C04F  F0AB         	movff	processGSM@operatorX,TFT_DrawString@x
  3057  0009C4  C050  F0AC         	movff	processGSM@operatorX+1,TFT_DrawString@x+1
  3058  0009C8  0E00               	movlw	0
  3059  0009CA  6FAE               	movwf	(TFT_DrawString@y+1)& (0+255),b
  3060  0009CC  0E08               	movlw	8
  3061  0009CE  6FAD               	movwf	TFT_DrawString@y& (0+255),b
  3062  0009D0  0E8A               	movlw	low (_GSMStatus+8)
  3063  0009D2  6FAF               	movwf	TFT_DrawString@str& (0+255),b
  3064  0009D4  0E00               	movlw	high (_GSMStatus+8)
  3065  0009D6  6FB0               	movwf	(TFT_DrawString@str+1)& (0+255),b
  3066  0009D8  0EFF               	movlw	255
  3067  0009DA  6FB2               	movwf	(TFT_DrawString@color+1)& (0+255),b
  3068  0009DC  69B1               	setf	TFT_DrawString@color& (0+255),b
  3069  0009DE  0E08               	movlw	8
  3070  0009E0  6FB4               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  3071  0009E2  0E21               	movlw	33
  3072  0009E4  6FB3               	movwf	TFT_DrawString@bg& (0+255),b
  3073  0009E6  0E01               	movlw	1
  3074  0009E8  6FB5               	movwf	TFT_DrawString@size& (0+255),b
  3075  0009EA  EC7D  F010         	call	_TFT_DrawString	;wreg free
  3076  0009EE                     l5621:
  3077                           
  3078                           ;main.c: 64: };main.c: 65: };main.c: 68: if(GSMStatus.nextRSSI < MILLISECONDS) {
  3079  0009EE  0100               	movlb	0	; () banked
  3080  0009F0  517A               	movf	_MILLISECONDS& (0+255),w,b
  3081  0009F2  5D86               	subwf	(_GSMStatus+4)& (0+255),w,b
  3082  0009F4  517B               	movf	(_MILLISECONDS+1)& (0+255),w,b
  3083  0009F6  5987               	subwfb	(_GSMStatus+5)& (0+255),w,b
  3084  0009F8  517C               	movf	(_MILLISECONDS+2)& (0+255),w,b
  3085  0009FA  5988               	subwfb	(_GSMStatus+6)& (0+255),w,b
  3086  0009FC  517D               	movf	(_MILLISECONDS+3)& (0+255),w,b
  3087  0009FE  5989               	subwfb	(_GSMStatus+7)& (0+255),w,b
  3088  000A00  B0D8               	btfsc	status,0,c
  3089  000A02  EF05  F005         	goto	u5371
  3090  000A06  EF07  F005         	goto	u5370
  3091  000A0A                     u5371:
  3092  000A0A  EFA9  F005         	goto	l71
  3093  000A0E                     u5370:
  3094  000A0E                     
  3095                           ; BSR set to: 0
  3096                           ;main.c: 69: GSMStatus.nextRSSI = MILLISECONDS + 4740;
  3097  000A0E  0E84               	movlw	132
  3098  000A10  257A               	addwf	_MILLISECONDS& (0+255),w,b
  3099  000A12  6F86               	movwf	(_GSMStatus+4)& (0+255),b
  3100  000A14  0E12               	movlw	18
  3101  000A16  217B               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
  3102  000A18  6F87               	movwf	(_GSMStatus+5)& (0+255),b
  3103  000A1A  0E00               	movlw	0
  3104  000A1C  217C               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
  3105  000A1E  6F88               	movwf	(_GSMStatus+6)& (0+255),b
  3106  000A20  0E00               	movlw	0
  3107  000A22  217D               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
  3108  000A24  6F89               	movwf	(_GSMStatus+7)& (0+255),b
  3109                           
  3110                           ;main.c: 70: if(GSMStatus.operatorName[0] != '-') {
  3111  000A26  0E2D               	movlw	45
  3112  000A28  198A               	xorwf	(_GSMStatus+8)& (0+255),w,b
  3113  000A2A  B4D8               	btfsc	status,2,c
  3114  000A2C  EF1A  F005         	goto	u5381
  3115  000A30  EF1C  F005         	goto	u5380
  3116  000A34                     u5381:
  3117  000A34  EFA9  F005         	goto	l71
  3118  000A38                     u5380:
  3119  000A38                     
  3120                           ; BSR set to: 0
  3121                           ;main.c: 71: GSMStatus.operatorRSSILevel = A6_NetworkGetRSSILevel();
  3122  000A38  EC53  F012         	call	_A6_NetworkGetRSSILevel	;wreg free
  3123  000A3C  0100               	movlb	0	; () banked
  3124  000A3E  6FAA               	movwf	(_GSMStatus+40)& (0+255),b
  3125  000A40                     
  3126                           ; BSR set to: 0
  3127                           ;main.c: 72: uint16_t RSSIX = TFT_GetWidth() - 110 + ((strlen(GSMStatus.operatorName) + 
      +                          1) * 6);
  3128  000A40  0E8A               	movlw	low (_GSMStatus+8)
  3129  000A42  6E05               	movwf	strlen@s^0,c
  3130  000A44  0E00               	movlw	high (_GSMStatus+8)
  3131  000A46  6E06               	movwf	(strlen@s+1)^0,c
  3132  000A48  EC22  F016         	call	_strlen	;wreg free
  3133  000A4C  C005  F009         	movff	?_strlen,___wmul@multiplier
  3134  000A50  C006  F00A         	movff	?_strlen+1,___wmul@multiplier+1
  3135  000A54  0E00               	movlw	0
  3136  000A56  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  3137  000A58  0E06               	movlw	6
  3138  000A5A  6E0B               	movwf	___wmul@multiplicand^0,c
  3139  000A5C  ECE1  F017         	call	___wmul	;wreg free
  3140  000A60  C009  F04D         	movff	?___wmul,??_processGSM
  3141  000A64  C00A  F04E         	movff	?___wmul+1,??_processGSM+1
  3142  000A68  ECD4  F015         	call	_TFT_GetWidth	;wreg free
  3143  000A6C  5005               	movf	?_TFT_GetWidth^0,w,c
  3144  000A6E  264D               	addwf	??_processGSM^0,f,c
  3145  000A70  5006               	movf	(?_TFT_GetWidth+1)^0,w,c
  3146  000A72  224E               	addwfc	(??_processGSM+1)^0,f,c
  3147  000A74  0E98               	movlw	152
  3148  000A76  244D               	addwf	??_processGSM^0,w,c
  3149  000A78  6E52               	movwf	processGSM@RSSIX^0,c
  3150  000A7A  0EFF               	movlw	255
  3151  000A7C  204E               	addwfc	(??_processGSM+1)^0,w,c
  3152  000A7E  6E53               	movwf	(processGSM@RSSIX+1)^0,c
  3153  000A80                     
  3154                           ;main.c: 73: for(uint8_t i=0; i<5; i++) {
  3155  000A80  0E00               	movlw	0
  3156  000A82  6E54               	movwf	processGSM@i^0,c
  3157  000A84                     l5635:
  3158                           
  3159                           ;main.c: 74: if(GSMStatus.operatorRSSILevel > i) {
  3160  000A84  0100               	movlb	0	; () banked
  3161  000A86  51AA               	movf	(_GSMStatus+40)& (0+255),w,b
  3162  000A88  5C54               	subwf	processGSM@i^0,w,c
  3163  000A8A  B0D8               	btfsc	status,0,c
  3164  000A8C  EF4A  F005         	goto	u5391
  3165  000A90  EF4C  F005         	goto	u5390
  3166  000A94                     u5391:
  3167  000A94  EF6F  F005         	goto	l5641
  3168  000A98                     u5390:
  3169  000A98                     
  3170                           ; BSR set to: 0
  3171                           ;main.c: 75: uint8_t RSSIY = (4 - i) * 2;
  3172  000A98  5054               	movf	processGSM@i^0,w,c
  3173  000A9A  0804               	sublw	4
  3174  000A9C  6E4D               	movwf	??_processGSM^0,c
  3175  000A9E  90D8               	bcf	status,0,c
  3176  000AA0  344D               	rlcf	??_processGSM^0,w,c
  3177  000AA2  6E51               	movwf	processGSM@RSSIY^0,c
  3178  000AA4                     
  3179                           ; BSR set to: 0
  3180                           ;main.c: 76: TFT_DrawFillRect(RSSIX, (5 + RSSIY), 2, (10 - RSSIY), 0xFFFF);
  3181  000AA4  C052  F020         	movff	processGSM@RSSIX,TFT_DrawFillRect@x
  3182  000AA8  C053  F021         	movff	processGSM@RSSIX+1,TFT_DrawFillRect@x+1
  3183  000AAC  0E05               	movlw	5
  3184  000AAE  2451               	addwf	processGSM@RSSIY^0,w,c
  3185  000AB0  6E22               	movwf	TFT_DrawFillRect@y^0,c
  3186  000AB2  6A23               	clrf	(TFT_DrawFillRect@y+1)^0,c
  3187  000AB4  0E00               	movlw	0
  3188  000AB6  2223               	addwfc	(TFT_DrawFillRect@y+1)^0,f,c
  3189  000AB8  0E00               	movlw	0
  3190  000ABA  6E25               	movwf	(TFT_DrawFillRect@w+1)^0,c
  3191  000ABC  0E02               	movlw	2
  3192  000ABE  6E24               	movwf	TFT_DrawFillRect@w^0,c
  3193  000AC0  5051               	movf	processGSM@RSSIY^0,w,c
  3194  000AC2  080A               	sublw	10
  3195  000AC4  6E26               	movwf	TFT_DrawFillRect@h^0,c
  3196  000AC6  0E00               	movlw	0
  3197  000AC8  A0D8               	btfss	status,0,c
  3198  000ACA  2AE8               	incf	wreg,f,c
  3199  000ACC  0800               	sublw	0
  3200  000ACE  6E27               	movwf	(TFT_DrawFillRect@h+1)^0,c
  3201  000AD0  0EFF               	movlw	255
  3202  000AD2  6E29               	movwf	(TFT_DrawFillRect@color+1)^0,c
  3203  000AD4  6828               	setf	TFT_DrawFillRect@color^0,c
  3204  000AD6  EC14  F012         	call	_TFT_DrawFillRect	;wreg free
  3205                           
  3206                           ;main.c: 77: } else {
  3207  000ADA  EF9C  F005         	goto	l5645
  3208  000ADE                     l5641:
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;main.c: 78: TFT_DrawFillRect(RSSIX, 5, 2, 10, 0x0821);
  3212  000ADE  C052  F020         	movff	processGSM@RSSIX,TFT_DrawFillRect@x
  3213  000AE2  C053  F021         	movff	processGSM@RSSIX+1,TFT_DrawFillRect@x+1
  3214  000AE6  0E00               	movlw	0
  3215  000AE8  6E23               	movwf	(TFT_DrawFillRect@y+1)^0,c
  3216  000AEA  0E05               	movlw	5
  3217  000AEC  6E22               	movwf	TFT_DrawFillRect@y^0,c
  3218  000AEE  0E00               	movlw	0
  3219  000AF0  6E25               	movwf	(TFT_DrawFillRect@w+1)^0,c
  3220  000AF2  0E02               	movlw	2
  3221  000AF4  6E24               	movwf	TFT_DrawFillRect@w^0,c
  3222  000AF6  0E00               	movlw	0
  3223  000AF8  6E27               	movwf	(TFT_DrawFillRect@h+1)^0,c
  3224  000AFA  0E0A               	movlw	10
  3225  000AFC  6E26               	movwf	TFT_DrawFillRect@h^0,c
  3226  000AFE  0E08               	movlw	8
  3227  000B00  6E29               	movwf	(TFT_DrawFillRect@color+1)^0,c
  3228  000B02  0E21               	movlw	33
  3229  000B04  6E28               	movwf	TFT_DrawFillRect@color^0,c
  3230  000B06  EC14  F012         	call	_TFT_DrawFillRect	;wreg free
  3231  000B0A                     
  3232                           ;main.c: 79: TFT_DrawLine(RSSIX, 14, (RSSIX + 2), 14, 0xFFFF);
  3233  000B0A  C052  F017         	movff	processGSM@RSSIX,TFT_DrawLine@x0
  3234  000B0E  C053  F018         	movff	processGSM@RSSIX+1,TFT_DrawLine@x0+1
  3235  000B12  0E00               	movlw	0
  3236  000B14  6E1A               	movwf	(TFT_DrawLine@y0+1)^0,c
  3237  000B16  0E0E               	movlw	14
  3238  000B18  6E19               	movwf	TFT_DrawLine@y0^0,c
  3239  000B1A  0E02               	movlw	2
  3240  000B1C  2452               	addwf	processGSM@RSSIX^0,w,c
  3241  000B1E  6E1B               	movwf	TFT_DrawLine@x1^0,c
  3242  000B20  0E00               	movlw	0
  3243  000B22  2053               	addwfc	(processGSM@RSSIX+1)^0,w,c
  3244  000B24  6E1C               	movwf	(TFT_DrawLine@x1+1)^0,c
  3245  000B26  0E00               	movlw	0
  3246  000B28  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  3247  000B2A  0E0E               	movlw	14
  3248  000B2C  6E1D               	movwf	TFT_DrawLine@y1^0,c
  3249  000B2E  0EFF               	movlw	255
  3250  000B30  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  3251  000B32  681F               	setf	TFT_DrawLine@color^0,c
  3252  000B34  ECAA  F005         	call	_TFT_DrawLine	;wreg free
  3253  000B38                     l5645:
  3254                           
  3255                           ;main.c: 80: };main.c: 81: RSSIX += 3;
  3256  000B38  0E03               	movlw	3
  3257  000B3A  2652               	addwf	processGSM@RSSIX^0,f,c
  3258  000B3C  0E00               	movlw	0
  3259  000B3E  2253               	addwfc	(processGSM@RSSIX+1)^0,f,c
  3260  000B40  2A54               	incf	processGSM@i^0,f,c
  3261  000B42  0E04               	movlw	4
  3262  000B44  6454               	cpfsgt	processGSM@i^0,c
  3263  000B46  EFA7  F005         	goto	u5401
  3264  000B4A  EFA9  F005         	goto	u5400
  3265  000B4E                     u5401:
  3266  000B4E  EF42  F005         	goto	l5635
  3267  000B52                     u5400:
  3268  000B52                     l71:
  3269  000B52  0012               	return		;funcret
  3270  000B54                     __end_of_processGSM:
  3271                           	opt callstack 0
  3272                           
  3273 ;; *************** function _A6_NetworkGetRSSILevel *****************
  3274 ;; Defined at:
  3275 ;;		line 168 in file "A6Lib.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  RSSI            1   64[COMRAM] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      char 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0
  3290 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3292 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3293 ;;Total ram usage:        1 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    7
  3296 ;; This function calls:
  3297 ;;		_A6_NetworkGetRSSI
  3298 ;; This function is called by:
  3299 ;;		_processGSM
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303                           	psect	text3
  3304  0024A6                     __ptext3:
  3305                           	opt callstack 0
  3306  0024A6                     _A6_NetworkGetRSSILevel:
  3307                           	opt callstack 21
  3308  0024A6                     
  3309                           ;A6Lib.c: 169: uint8_t RSSI = A6_NetworkGetRSSI();
  3310  0024A6  EC1E  F00F         	call	_A6_NetworkGetRSSI	;wreg free
  3311  0024AA  6E41               	movwf	A6_NetworkGetRSSILevel@RSSI^0,c
  3312  0024AC                     
  3313                           ;A6Lib.c: 170: if(RSSI == 99) return -1;
  3314  0024AC  0E63               	movlw	99
  3315  0024AE  1841               	xorwf	A6_NetworkGetRSSILevel@RSSI^0,w,c
  3316  0024B0  A4D8               	btfss	status,2,c
  3317  0024B2  EF5D  F012         	goto	u5151
  3318  0024B6  EF5F  F012         	goto	u5150
  3319  0024BA                     u5151:
  3320  0024BA  EF62  F012         	goto	l5463
  3321  0024BE                     u5150:
  3322  0024BE  0EFF               	movlw	255
  3323  0024C0  EF8F  F012         	goto	l617
  3324  0024C4                     l5463:
  3325                           
  3326                           ;A6Lib.c: 171: if(RSSI < 3) return 0;
  3327  0024C4  0E03               	movlw	3
  3328  0024C6  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  3329  0024C8  EF68  F012         	goto	u5161
  3330  0024CC  EF6A  F012         	goto	u5160
  3331  0024D0                     u5161:
  3332  0024D0  EF6D  F012         	goto	l5469
  3333  0024D4                     u5160:
  3334  0024D4  0E00               	movlw	0
  3335  0024D6  EF8F  F012         	goto	l617
  3336  0024DA                     l5469:
  3337                           
  3338                           ;A6Lib.c: 172: if(RSSI < 10) return 1;
  3339  0024DA  0E0A               	movlw	10
  3340  0024DC  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  3341  0024DE  EF73  F012         	goto	u5171
  3342  0024E2  EF75  F012         	goto	u5170
  3343  0024E6                     u5171:
  3344  0024E6  EF78  F012         	goto	l5475
  3345  0024EA                     u5170:
  3346  0024EA  0E01               	movlw	1
  3347  0024EC  EF8F  F012         	goto	l617
  3348  0024F0                     l5475:
  3349                           
  3350                           ;A6Lib.c: 173: if(RSSI < 15) return 2;
  3351  0024F0  0E0F               	movlw	15
  3352  0024F2  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  3353  0024F4  EF7E  F012         	goto	u5181
  3354  0024F8  EF80  F012         	goto	u5180
  3355  0024FC                     u5181:
  3356  0024FC  EF83  F012         	goto	l5481
  3357  002500                     u5180:
  3358  002500  0E02               	movlw	2
  3359  002502  EF8F  F012         	goto	l617
  3360  002506                     l5481:
  3361                           
  3362                           ;A6Lib.c: 174: if(RSSI < 20) return 3;
  3363  002506  0E14               	movlw	20
  3364  002508  6041               	cpfslt	A6_NetworkGetRSSILevel@RSSI^0,c
  3365  00250A  EF89  F012         	goto	u5191
  3366  00250E  EF8B  F012         	goto	u5190
  3367  002512                     u5191:
  3368  002512  EF8E  F012         	goto	l5487
  3369  002516                     u5190:
  3370  002516  0E03               	movlw	3
  3371  002518  EF8F  F012         	goto	l617
  3372  00251C                     l5487:
  3373                           
  3374                           ;A6Lib.c: 175: return 4;
  3375  00251C  0E04               	movlw	4
  3376  00251E                     l617:
  3377  00251E  0012               	return		;funcret
  3378  002520                     __end_of_A6_NetworkGetRSSILevel:
  3379                           	opt callstack 0
  3380                           
  3381 ;; *************** function _A6_NetworkGetRSSI *****************
  3382 ;; Defined at:
  3383 ;;		line 151 in file "A6Lib.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  response       32   30[COMRAM] unsigned char [32]
  3388 ;;  RSSIToken       2   62[COMRAM] PTR unsigned char 
  3389 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  3390 ;;		 -> GSMStatus(41), 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  1    wreg      unsigned char 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3400 ;;      Params:         0       0       0       0       0       0       0       0       0
  3401 ;;      Locals:        34       0       0       0       0       0       0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3403 ;;      Totals:        34       0       0       0       0       0       0       0       0
  3404 ;;Total ram usage:       34 bytes
  3405 ;; Hardware stack levels used:    1
  3406 ;; Hardware stack levels required when called:    6
  3407 ;; This function calls:
  3408 ;;		_A6_Command
  3409 ;;		_atoi
  3410 ;;		_strstr
  3411 ;;		_strtok
  3412 ;; This function is called by:
  3413 ;;		_A6_NetworkGetRSSILevel
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text4
  3418  001E3C                     __ptext4:
  3419                           	opt callstack 0
  3420  001E3C                     _A6_NetworkGetRSSI:
  3421                           	opt callstack 21
  3422  001E3C                     
  3423                           ;A6Lib.c: 152: char *RSSIToken;;A6Lib.c: 153: char response[32];;A6Lib.c: 155: A6_Comman
      +                          d("AT+CSQ\r", 0, response, 32);
  3424  001E3C  0EC8               	movlw	low STR_21
  3425  001E3E  6E18               	movwf	A6_Command@command^0,c
  3426  001E40  0E5F               	movlw	high STR_21
  3427  001E42  6E19               	movwf	(A6_Command@command+1)^0,c
  3428  001E44  0E00               	movlw	0
  3429  001E46  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3430  001E48  0E00               	movlw	0
  3431  001E4A  6E1A               	movwf	A6_Command@timeout^0,c
  3432  001E4C  0E1F               	movlw	low A6_NetworkGetRSSI@response
  3433  001E4E  6E1C               	movwf	A6_Command@response^0,c
  3434  001E50  0E00               	movlw	high A6_NetworkGetRSSI@response
  3435  001E52  6E1D               	movwf	(A6_Command@response+1)^0,c
  3436  001E54  0E20               	movlw	32
  3437  001E56  6E1E               	movwf	A6_Command@responseLen^0,c
  3438  001E58  EC4E  F011         	call	_A6_Command	;wreg free
  3439  001E5C                     
  3440                           ;A6Lib.c: 156: if(strstr(response, "+CSQ: ") != (0)) {
  3441  001E5C  0E1F               	movlw	low A6_NetworkGetRSSI@response
  3442  001E5E  6E10               	movwf	strstr@s1^0,c
  3443  001E60  0E00               	movlw	high A6_NetworkGetRSSI@response
  3444  001E62  6E11               	movwf	(strstr@s1+1)^0,c
  3445  001E64  0EE0               	movlw	low STR_22
  3446  001E66  6E12               	movwf	strstr@s2^0,c
  3447  001E68  0E5F               	movlw	high STR_22
  3448  001E6A  6E13               	movwf	(strstr@s2+1)^0,c
  3449  001E6C  EC7F  F00F         	call	_strstr	;wreg free
  3450  001E70  5010               	movf	?_strstr^0,w,c
  3451  001E72  1011               	iorwf	(?_strstr+1)^0,w,c
  3452  001E74  B4D8               	btfsc	status,2,c
  3453  001E76  EF3F  F00F         	goto	u5091
  3454  001E7A  EF41  F00F         	goto	u5090
  3455  001E7E                     u5091:
  3456  001E7E  EF7D  F00F         	goto	l5431
  3457  001E82                     u5090:
  3458  001E82                     
  3459                           ;A6Lib.c: 157: RSSIToken = strtok(response, " ");
  3460  001E82  0E1F               	movlw	low A6_NetworkGetRSSI@response
  3461  001E84  6E12               	movwf	strtok@s1^0,c
  3462  001E86  0E00               	movlw	high A6_NetworkGetRSSI@response
  3463  001E88  6E13               	movwf	(strtok@s1+1)^0,c
  3464  001E8A  0ED6               	movlw	low (STR_16+6)
  3465  001E8C  6E14               	movwf	strtok@s2^0,c
  3466  001E8E  0E5F               	movlw	high (STR_16+6)
  3467  001E90  6E15               	movwf	(strtok@s2+1)^0,c
  3468  001E92  EC97  F00C         	call	_strtok	;wreg free
  3469  001E96  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  3470  001E9A  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  3471                           
  3472                           ;A6Lib.c: 158: RSSIToken = strtok((0), " ");
  3473  001E9E  0E00               	movlw	0
  3474  001EA0  6E12               	movwf	strtok@s1^0,c
  3475  001EA2  0E00               	movlw	0
  3476  001EA4  6E13               	movwf	(strtok@s1+1)^0,c
  3477  001EA6  0ED6               	movlw	low (STR_16+6)
  3478  001EA8  6E14               	movwf	strtok@s2^0,c
  3479  001EAA  0E5F               	movlw	high (STR_16+6)
  3480  001EAC  6E15               	movwf	(strtok@s2+1)^0,c
  3481  001EAE  EC97  F00C         	call	_strtok	;wreg free
  3482  001EB2  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  3483  001EB6  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  3484  001EBA                     
  3485                           ;A6Lib.c: 159: if(RSSIToken != (0)) {
  3486  001EBA  503F               	movf	A6_NetworkGetRSSI@RSSIToken^0,w,c
  3487  001EBC  1040               	iorwf	(A6_NetworkGetRSSI@RSSIToken+1)^0,w,c
  3488  001EBE  B4D8               	btfsc	status,2,c
  3489  001EC0  EF64  F00F         	goto	u5101
  3490  001EC4  EF66  F00F         	goto	u5100
  3491  001EC8                     u5101:
  3492  001EC8  EF7D  F00F         	goto	l5431
  3493  001ECC                     u5100:
  3494  001ECC                     
  3495                           ;A6Lib.c: 160: RSSIToken = strtok(RSSIToken, ",");
  3496  001ECC  C03F  F012         	movff	A6_NetworkGetRSSI@RSSIToken,strtok@s1
  3497  001ED0  C040  F013         	movff	A6_NetworkGetRSSI@RSSIToken+1,strtok@s1+1
  3498  001ED4  0EFB               	movlw	low STR_19
  3499  001ED6  6E14               	movwf	strtok@s2^0,c
  3500  001ED8  0E5F               	movlw	high STR_19
  3501  001EDA  6E15               	movwf	(strtok@s2+1)^0,c
  3502  001EDC  EC97  F00C         	call	_strtok	;wreg free
  3503  001EE0  C012  F03F         	movff	?_strtok,A6_NetworkGetRSSI@RSSIToken
  3504  001EE4  C013  F040         	movff	?_strtok+1,A6_NetworkGetRSSI@RSSIToken+1
  3505  001EE8                     
  3506                           ;A6Lib.c: 161: return atoi(RSSIToken);
  3507  001EE8  C03F  F00F         	movff	A6_NetworkGetRSSI@RSSIToken,atoi@s
  3508  001EEC  C040  F010         	movff	A6_NetworkGetRSSI@RSSIToken+1,atoi@s+1
  3509  001EF0  ECA0  F00A         	call	_atoi	;wreg free
  3510  001EF4  500F               	movf	?_atoi^0,w,c
  3511  001EF6  EF7E  F00F         	goto	l613
  3512  001EFA                     l5431:
  3513                           
  3514                           ;A6Lib.c: 162: };A6Lib.c: 163: };A6Lib.c: 165: return 0;
  3515  001EFA  0E00               	movlw	0
  3516  001EFC                     l613:
  3517  001EFC  0012               	return		;funcret
  3518  001EFE                     __end_of_A6_NetworkGetRSSI:
  3519                           	opt callstack 0
  3520                           
  3521 ;; *************** function _atoi *****************
  3522 ;; Defined at:
  3523 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atoi.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  s               2   14[COMRAM] PTR const unsigned char 
  3526 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  3527 ;;		 -> GSMStatus(41), 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  a               2   19[COMRAM] int 
  3530 ;;  sign            1   18[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  2   14[COMRAM] int 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3540 ;;      Params:         2       0       0       0       0       0       0       0       0
  3541 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3542 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3543 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3544 ;;Total ram usage:        7 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; Hardware stack levels required when called:    3
  3547 ;; This function calls:
  3548 ;;		___wmul
  3549 ;;		_isdigit
  3550 ;; This function is called by:
  3551 ;;		_A6_NetworkGetRSSI
  3552 ;;		_A6_NetworkGetStatus
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text5
  3557  001540                     __ptext5:
  3558                           	opt callstack 0
  3559  001540                     _atoi:
  3560                           	opt callstack 23
  3561  001540  EFA4  F00A         	goto	l5153
  3562  001544                     l5151:
  3563  001544  4A0F               	infsnz	atoi@s^0,f,c
  3564  001546  2A10               	incf	(atoi@s+1)^0,f,c
  3565  001548                     l5153:
  3566  001548  C00F  FFD9         	movff	atoi@s,fsr2l
  3567  00154C  C010  FFDA         	movff	atoi@s+1,fsr2h
  3568  001550  0E20               	movlw	32
  3569  001552  18DE               	xorwf	postinc2,w,c
  3570  001554  B4D8               	btfsc	status,2,c
  3571  001556  EFAF  F00A         	goto	u4721
  3572  00155A  EFB1  F00A         	goto	u4720
  3573  00155E                     u4721:
  3574  00155E  EFA2  F00A         	goto	l5151
  3575  001562                     u4720:
  3576  001562  C00F  FFD9         	movff	atoi@s,fsr2l
  3577  001566  C010  FFDA         	movff	atoi@s+1,fsr2h
  3578  00156A  0E09               	movlw	9
  3579  00156C  18DE               	xorwf	postinc2,w,c
  3580  00156E  B4D8               	btfsc	status,2,c
  3581  001570  EFBC  F00A         	goto	u4731
  3582  001574  EFBE  F00A         	goto	u4730
  3583  001578                     u4731:
  3584  001578  EFA2  F00A         	goto	l5151
  3585  00157C                     u4730:
  3586  00157C  0E00               	movlw	0
  3587  00157E  6E15               	movwf	(atoi@a+1)^0,c
  3588  001580  0E00               	movlw	0
  3589  001582  6E14               	movwf	atoi@a^0,c
  3590  001584  0E00               	movlw	0
  3591  001586  6E13               	movwf	atoi@sign^0,c
  3592  001588  C00F  FFD9         	movff	atoi@s,fsr2l
  3593  00158C  C010  FFDA         	movff	atoi@s+1,fsr2h
  3594  001590  0E2D               	movlw	45
  3595  001592  18DE               	xorwf	postinc2,w,c
  3596  001594  A4D8               	btfss	status,2,c
  3597  001596  EFCF  F00A         	goto	u4741
  3598  00159A  EFD1  F00A         	goto	u4740
  3599  00159E                     u4741:
  3600  00159E  EFD6  F00A         	goto	l5163
  3601  0015A2                     u4740:
  3602  0015A2  2A13               	incf	atoi@sign^0,f,c
  3603  0015A4  4A0F               	infsnz	atoi@s^0,f,c
  3604  0015A6  2A10               	incf	(atoi@s+1)^0,f,c
  3605  0015A8  EF03  F00B         	goto	l5171
  3606  0015AC                     l5163:
  3607  0015AC  C00F  FFD9         	movff	atoi@s,fsr2l
  3608  0015B0  C010  FFDA         	movff	atoi@s+1,fsr2h
  3609  0015B4  0E2B               	movlw	43
  3610  0015B6  18DE               	xorwf	postinc2,w,c
  3611  0015B8  A4D8               	btfss	status,2,c
  3612  0015BA  EFE1  F00A         	goto	u4751
  3613  0015BE  EFE3  F00A         	goto	u4750
  3614  0015C2                     u4751:
  3615  0015C2  EF03  F00B         	goto	l5171
  3616  0015C6                     u4750:
  3617  0015C6                     l5165:
  3618  0015C6  4A0F               	infsnz	atoi@s^0,f,c
  3619  0015C8  2A10               	incf	(atoi@s+1)^0,f,c
  3620  0015CA  EF03  F00B         	goto	l5171
  3621  0015CE                     l5167:
  3622  0015CE  C014  F009         	movff	atoi@a,___wmul@multiplier
  3623  0015D2  C015  F00A         	movff	atoi@a+1,___wmul@multiplier+1
  3624  0015D6  0E00               	movlw	0
  3625  0015D8  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  3626  0015DA  0E0A               	movlw	10
  3627  0015DC  6E0B               	movwf	___wmul@multiplicand^0,c
  3628  0015DE  ECE1  F017         	call	___wmul	;wreg free
  3629  0015E2  C00F  FFD9         	movff	atoi@s,fsr2l
  3630  0015E6  C010  FFDA         	movff	atoi@s+1,fsr2h
  3631  0015EA  50DF               	movf	indf2,w,c
  3632  0015EC  6E11               	movwf	??_atoi^0,c
  3633  0015EE  5011               	movf	??_atoi^0,w,c
  3634  0015F0  2609               	addwf	?___wmul^0,f,c
  3635  0015F2  0E00               	movlw	0
  3636  0015F4  220A               	addwfc	(?___wmul+1)^0,f,c
  3637  0015F6  0ED0               	movlw	208
  3638  0015F8  2409               	addwf	?___wmul^0,w,c
  3639  0015FA  6E14               	movwf	atoi@a^0,c
  3640  0015FC  0EFF               	movlw	255
  3641  0015FE  200A               	addwfc	(?___wmul+1)^0,w,c
  3642  001600  6E15               	movwf	(atoi@a+1)^0,c
  3643  001602  EFE3  F00A         	goto	l5165
  3644  001606                     l5171:
  3645  001606  C00F  FFD9         	movff	atoi@s,fsr2l
  3646  00160A  C010  FFDA         	movff	atoi@s+1,fsr2h
  3647  00160E  50DF               	movf	indf2,w,c
  3648  001610  EC9C  F017         	call	_isdigit
  3649  001614  B0D8               	btfsc	status,0,c
  3650  001616  EF0F  F00B         	goto	u4761
  3651  00161A  EF11  F00B         	goto	u4760
  3652  00161E                     u4761:
  3653  00161E  EFE7  F00A         	goto	l5167
  3654  001622                     u4760:
  3655  001622  5013               	movf	atoi@sign^0,w,c
  3656  001624  B4D8               	btfsc	status,2,c
  3657  001626  EF17  F00B         	goto	u4771
  3658  00162A  EF19  F00B         	goto	u4770
  3659  00162E                     u4771:
  3660  00162E  EF27  F00B         	goto	l1435
  3661  001632                     u4770:
  3662  001632  C014  F011         	movff	atoi@a,??_atoi
  3663  001636  C015  F012         	movff	atoi@a+1,??_atoi+1
  3664  00163A  1E11               	comf	??_atoi^0,f,c
  3665  00163C  1E12               	comf	(??_atoi+1)^0,f,c
  3666  00163E  4A11               	infsnz	??_atoi^0,f,c
  3667  001640  2A12               	incf	(??_atoi+1)^0,f,c
  3668  001642  C011  F00F         	movff	??_atoi,?_atoi
  3669  001646  C012  F010         	movff	??_atoi+1,?_atoi+1
  3670  00164A  EF2B  F00B         	goto	l1436
  3671  00164E                     l1435:
  3672  00164E  C014  F00F         	movff	atoi@a,?_atoi
  3673  001652  C015  F010         	movff	atoi@a+1,?_atoi+1
  3674  001656                     l1436:
  3675  001656  0012               	return		;funcret
  3676  001658                     __end_of_atoi:
  3677                           	opt callstack 0
  3678                           
  3679 ;; *************** function _A6_NetworkGetOperator *****************
  3680 ;; Defined at:
  3681 ;;		line 178 in file "A6Lib.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  operator        2   30[COMRAM] PTR unsigned char 
  3684 ;;		 -> GSMStatus(41), 
  3685 ;;  operatorLen     1   32[COMRAM] unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  operatorToke    2   34[COMRAM] PTR unsigned char 
  3688 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  3689 ;;		 -> GSMStatus(41), 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3699 ;;      Params:         3       0       0       0       0       0       0       0       0
  3700 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3701 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3702 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3703 ;;Total ram usage:        6 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    6
  3706 ;; This function calls:
  3707 ;;		_A6_Command
  3708 ;;		_strcpy
  3709 ;;		_strstr
  3710 ;;		_strtok
  3711 ;; This function is called by:
  3712 ;;		_processGSM
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text6
  3717  0011A8                     __ptext6:
  3718                           	opt callstack 0
  3719  0011A8                     _A6_NetworkGetOperator:
  3720                           	opt callstack 22
  3721  0011A8                     
  3722                           ;A6Lib.c: 179: char *operatorToken;;A6Lib.c: 181: A6_Command("AT+COPS?\r", 0, operator, 
      +                          32);
  3723  0011A8  0EB5               	movlw	low STR_26
  3724  0011AA  6E18               	movwf	A6_Command@command^0,c
  3725  0011AC  0E5F               	movlw	high STR_26
  3726  0011AE  6E19               	movwf	(A6_Command@command+1)^0,c
  3727  0011B0  0E00               	movlw	0
  3728  0011B2  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  3729  0011B4  0E00               	movlw	0
  3730  0011B6  6E1A               	movwf	A6_Command@timeout^0,c
  3731  0011B8  C01F  F01C         	movff	A6_NetworkGetOperator@operator,A6_Command@response
  3732  0011BC  C020  F01D         	movff	A6_NetworkGetOperator@operator+1,A6_Command@response+1
  3733  0011C0  0E20               	movlw	32
  3734  0011C2  6E1E               	movwf	A6_Command@responseLen^0,c
  3735  0011C4  EC4E  F011         	call	_A6_Command	;wreg free
  3736  0011C8                     
  3737                           ;A6Lib.c: 182: if(strstr(operator, "+COPS: ") != (0)) {
  3738  0011C8  C01F  F010         	movff	A6_NetworkGetOperator@operator,strstr@s1
  3739  0011CC  C020  F011         	movff	A6_NetworkGetOperator@operator+1,strstr@s1+1
  3740  0011D0  0ED8               	movlw	low STR_27
  3741  0011D2  6E12               	movwf	strstr@s2^0,c
  3742  0011D4  0E5F               	movlw	high STR_27
  3743  0011D6  6E13               	movwf	(strstr@s2+1)^0,c
  3744  0011D8  EC7F  F00F         	call	_strstr	;wreg free
  3745  0011DC  5010               	movf	?_strstr^0,w,c
  3746  0011DE  1011               	iorwf	(?_strstr+1)^0,w,c
  3747  0011E0  B4D8               	btfsc	status,2,c
  3748  0011E2  EFF5  F008         	goto	u5131
  3749  0011E6  EFF7  F008         	goto	u5130
  3750  0011EA                     u5131:
  3751  0011EA  EF66  F009         	goto	l5453
  3752  0011EE                     u5130:
  3753  0011EE                     
  3754                           ;A6Lib.c: 183: operatorToken = strtok(operator, " ");
  3755  0011EE  C01F  F012         	movff	A6_NetworkGetOperator@operator,strtok@s1
  3756  0011F2  C020  F013         	movff	A6_NetworkGetOperator@operator+1,strtok@s1+1
  3757  0011F6  0ED6               	movlw	low (STR_16+6)
  3758  0011F8  6E14               	movwf	strtok@s2^0,c
  3759  0011FA  0E5F               	movlw	high (STR_16+6)
  3760  0011FC  6E15               	movwf	(strtok@s2+1)^0,c
  3761  0011FE  EC97  F00C         	call	_strtok	;wreg free
  3762  001202  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3763  001206  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3764                           
  3765                           ;A6Lib.c: 184: operatorToken = strtok((0), " ");
  3766  00120A  0E00               	movlw	0
  3767  00120C  6E12               	movwf	strtok@s1^0,c
  3768  00120E  0E00               	movlw	0
  3769  001210  6E13               	movwf	(strtok@s1+1)^0,c
  3770  001212  0ED6               	movlw	low (STR_16+6)
  3771  001214  6E14               	movwf	strtok@s2^0,c
  3772  001216  0E5F               	movlw	high (STR_16+6)
  3773  001218  6E15               	movwf	(strtok@s2+1)^0,c
  3774  00121A  EC97  F00C         	call	_strtok	;wreg free
  3775  00121E  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3776  001222  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3777                           
  3778                           ;A6Lib.c: 185: operatorToken = strtok(operatorToken, ",");
  3779  001226  C023  F012         	movff	A6_NetworkGetOperator@operatorToken,strtok@s1
  3780  00122A  C024  F013         	movff	A6_NetworkGetOperator@operatorToken+1,strtok@s1+1
  3781  00122E  0EFB               	movlw	low STR_19
  3782  001230  6E14               	movwf	strtok@s2^0,c
  3783  001232  0E5F               	movlw	high STR_19
  3784  001234  6E15               	movwf	(strtok@s2+1)^0,c
  3785  001236  EC97  F00C         	call	_strtok	;wreg free
  3786  00123A  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3787  00123E  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3788  001242                     
  3789                           ;A6Lib.c: 186: if(operatorToken[0] == '0') {
  3790  001242  C023  FFD9         	movff	A6_NetworkGetOperator@operatorToken,fsr2l
  3791  001246  C024  FFDA         	movff	A6_NetworkGetOperator@operatorToken+1,fsr2h
  3792  00124A  0E30               	movlw	48
  3793  00124C  18DE               	xorwf	postinc2,w,c
  3794  00124E  A4D8               	btfss	status,2,c
  3795  001250  EF2C  F009         	goto	u5141
  3796  001254  EF2E  F009         	goto	u5140
  3797  001258                     u5141:
  3798  001258  EF66  F009         	goto	l5453
  3799  00125C                     u5140:
  3800  00125C                     
  3801                           ;A6Lib.c: 187: operatorToken = strtok((0), ",");
  3802  00125C  0E00               	movlw	0
  3803  00125E  6E12               	movwf	strtok@s1^0,c
  3804  001260  0E00               	movlw	0
  3805  001262  6E13               	movwf	(strtok@s1+1)^0,c
  3806  001264  0EFB               	movlw	low STR_19
  3807  001266  6E14               	movwf	strtok@s2^0,c
  3808  001268  0E5F               	movlw	high STR_19
  3809  00126A  6E15               	movwf	(strtok@s2+1)^0,c
  3810  00126C  EC97  F00C         	call	_strtok	;wreg free
  3811  001270  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3812  001274  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3813                           
  3814                           ;A6Lib.c: 188: operatorToken = strtok((0), ",");
  3815  001278  0E00               	movlw	0
  3816  00127A  6E12               	movwf	strtok@s1^0,c
  3817  00127C  0E00               	movlw	0
  3818  00127E  6E13               	movwf	(strtok@s1+1)^0,c
  3819  001280  0EFB               	movlw	low STR_19
  3820  001282  6E14               	movwf	strtok@s2^0,c
  3821  001284  0E5F               	movlw	high STR_19
  3822  001286  6E15               	movwf	(strtok@s2+1)^0,c
  3823  001288  EC97  F00C         	call	_strtok	;wreg free
  3824  00128C  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3825  001290  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3826                           
  3827                           ;A6Lib.c: 189: operatorToken = strtok(++operatorToken, "\"");
  3828  001294  4A23               	infsnz	A6_NetworkGetOperator@operatorToken^0,f,c
  3829  001296  2A24               	incf	(A6_NetworkGetOperator@operatorToken+1)^0,f,c
  3830  001298  C023  F012         	movff	A6_NetworkGetOperator@operatorToken,strtok@s1
  3831  00129C  C024  F013         	movff	A6_NetworkGetOperator@operatorToken+1,strtok@s1+1
  3832  0012A0  0EF9               	movlw	low STR_33
  3833  0012A2  6E14               	movwf	strtok@s2^0,c
  3834  0012A4  0E5F               	movlw	high STR_33
  3835  0012A6  6E15               	movwf	(strtok@s2+1)^0,c
  3836  0012A8  EC97  F00C         	call	_strtok	;wreg free
  3837  0012AC  C012  F023         	movff	?_strtok,A6_NetworkGetOperator@operatorToken
  3838  0012B0  C013  F024         	movff	?_strtok+1,A6_NetworkGetOperator@operatorToken+1
  3839                           
  3840                           ;A6Lib.c: 190: strcpy(operator, operatorToken);
  3841  0012B4  C01F  F005         	movff	A6_NetworkGetOperator@operator,strcpy@to
  3842  0012B8  C020  F006         	movff	A6_NetworkGetOperator@operator+1,strcpy@to+1
  3843  0012BC  C023  F007         	movff	A6_NetworkGetOperator@operatorToken,strcpy@from
  3844  0012C0  C024  F008         	movff	A6_NetworkGetOperator@operatorToken+1,strcpy@from+1
  3845  0012C4  EC35  F015         	call	_strcpy	;wreg free
  3846  0012C8  EF70  F009         	goto	l626
  3847  0012CC                     l5453:
  3848                           
  3849                           ;A6Lib.c: 192: };A6Lib.c: 193: };A6Lib.c: 194: strcpy(operator, "-");
  3850  0012CC  C01F  F005         	movff	A6_NetworkGetOperator@operator,strcpy@to
  3851  0012D0  C020  F006         	movff	A6_NetworkGetOperator@operator+1,strcpy@to+1
  3852  0012D4  0EFD               	movlw	low STR_34
  3853  0012D6  6E07               	movwf	strcpy@from^0,c
  3854  0012D8  0E5F               	movlw	high STR_34
  3855  0012DA  6E08               	movwf	(strcpy@from+1)^0,c
  3856  0012DC  EC35  F015         	call	_strcpy	;wreg free
  3857  0012E0                     l626:
  3858  0012E0  0012               	return		;funcret
  3859  0012E2                     __end_of_A6_NetworkGetOperator:
  3860                           	opt callstack 0
  3861                           
  3862 ;; *************** function _strcpy *****************
  3863 ;; Defined at:
  3864 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcpy.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  to              2    4[COMRAM] PTR unsigned char 
  3867 ;;		 -> GSMStatus(41), 
  3868 ;;  from            2    6[COMRAM] PTR const unsigned char 
  3869 ;;		 -> STR_34(2), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), 
  3870 ;;		 -> NULL(0), GSMStatus(41), 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;  cp              2    8[COMRAM] PTR unsigned char 
  3873 ;;		 -> GSMStatus(41), 
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    4[COMRAM] PTR unsigned char 
  3876 ;; Registers used:
  3877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3883 ;;      Params:         4       0       0       0       0       0       0       0       0
  3884 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3885 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3886 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3887 ;;Total ram usage:        6 bytes
  3888 ;; Hardware stack levels used:    1
  3889 ;; Hardware stack levels required when called:    2
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_A6_NetworkGetOperator
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text7
  3898  002A6A                     __ptext7:
  3899                           	opt callstack 0
  3900  002A6A                     _strcpy:
  3901                           	opt callstack 25
  3902  002A6A  C005  F009         	movff	strcpy@to,strcpy@cp
  3903  002A6E  C006  F00A         	movff	strcpy@to+1,strcpy@cp+1
  3904  002A72  EF3F  F015         	goto	l5439
  3905  002A76                     l5437:
  3906  002A76  4A09               	infsnz	strcpy@cp^0,f,c
  3907  002A78  2A0A               	incf	(strcpy@cp+1)^0,f,c
  3908  002A7A  4A07               	infsnz	strcpy@from^0,f,c
  3909  002A7C  2A08               	incf	(strcpy@from+1)^0,f,c
  3910  002A7E                     l5439:
  3911  002A7E  C007  FFF6         	movff	strcpy@from,tblptrl
  3912  002A82  C008  FFF7         	movff	strcpy@from+1,tblptrh
  3913  002A86  6AF8               	clrf	tblptru,c
  3914  002A88  C009  FFD9         	movff	strcpy@cp,fsr2l
  3915  002A8C  C00A  FFDA         	movff	strcpy@cp+1,fsr2h
  3916  002A90  0E07               	movlw	(high __ramtop+-1)
  3917  002A92  64F7               	cpfsgt	tblptrh,c
  3918  002A94  D003               	bra	u5117
  3919  002A96  0008               	tblrd		*
  3920  002A98  50F5               	movf	tablat,w,c
  3921  002A9A  D005               	bra	u5110
  3922  002A9C                     u5117:
  3923  002A9C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3924  002AA0  CFF7 FFE2          	movff	tblptrh,fsr1h
  3925  002AA4  50E7               	movf	indf1,w,c
  3926  002AA6                     u5110:
  3927  002AA6  6EDF               	movwf	indf2,c
  3928  002AA8  50DF               	movf	indf2,w,c
  3929  002AAA  A4D8               	btfss	status,2,c
  3930  002AAC  EF5A  F015         	goto	u5121
  3931  002AB0  EF5C  F015         	goto	u5120
  3932  002AB4                     u5121:
  3933  002AB4  EF3B  F015         	goto	l5437
  3934  002AB8                     u5120:
  3935  002AB8  0012               	return		;funcret
  3936  002ABA                     __end_of_strcpy:
  3937                           	opt callstack 0
  3938                           
  3939 ;; *************** function _Ecg_Process *****************
  3940 ;; Defined at:
  3941 ;;		line 23 in file "ecg.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3958 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:   10
  3962 ;; This function calls:
  3963 ;;		_Ecg_ProcessEcg
  3964 ;;		_Ecg_ProcessHeartRate
  3965 ;;		_Ecg_ProcessInterrupt
  3966 ;; This function is called by:
  3967 ;;		_loop
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text8
  3972  002A16                     __ptext8:
  3973                           	opt callstack 0
  3974  002A16                     _Ecg_Process:
  3975                           	opt callstack 19
  3976  002A16                     
  3977                           ;ecg.c: 24: if(ECG_FLAGS.processInterrupt) {
  3978  002A16  0100               	movlb	0	; () banked
  3979  002A18  A980               	btfss	_ECG_FLAGS& (0+255),4,b
  3980  002A1A  EF11  F015         	goto	u5311
  3981  002A1E  EF13  F015         	goto	u5310
  3982  002A22                     u5311:
  3983  002A22  EF17  F015         	goto	l5591
  3984  002A26                     u5310:
  3985  002A26                     
  3986                           ; BSR set to: 0
  3987                           ;ecg.c: 25: Ecg_ProcessInterrupt();
  3988  002A26  EC67  F017         	call	_Ecg_ProcessInterrupt	;wreg free
  3989  002A2A                     
  3990                           ;ecg.c: 26: ECG_FLAGS.processInterrupt = 0;
  3991  002A2A  0100               	movlb	0	; () banked
  3992  002A2C  9980               	bcf	_ECG_FLAGS& (0+255),4,b
  3993  002A2E                     l5591:
  3994                           
  3995                           ; BSR set to: 0
  3996                           ;ecg.c: 27: };ecg.c: 29: if(ECG_FLAGS.processEcg) {
  3997  002A2E  AB80               	btfss	_ECG_FLAGS& (0+255),5,b
  3998  002A30  EF1C  F015         	goto	u5321
  3999  002A34  EF1E  F015         	goto	u5320
  4000  002A38                     u5321:
  4001  002A38  EF22  F015         	goto	l5597
  4002  002A3C                     u5320:
  4003  002A3C                     
  4004                           ; BSR set to: 0
  4005                           ;ecg.c: 30: Ecg_ProcessEcg();
  4006  002A3C  ECAD  F015         	call	_Ecg_ProcessEcg	;wreg free
  4007  002A40                     
  4008                           ;ecg.c: 31: ECG_FLAGS.processEcg = 0;
  4009  002A40  0100               	movlb	0	; () banked
  4010  002A42  9B80               	bcf	_ECG_FLAGS& (0+255),5,b
  4011  002A44                     l5597:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;ecg.c: 32: };ecg.c: 34: if(ECG_FLAGS.processHeartRate && ECG_FLAGS.leadsOk) {
  4015  002A44  A780               	btfss	_ECG_FLAGS& (0+255),3,b
  4016  002A46  EF27  F015         	goto	u5331
  4017  002A4A  EF29  F015         	goto	u5330
  4018  002A4E                     u5331:
  4019  002A4E  EF34  F015         	goto	l431
  4020  002A52                     u5330:
  4021  002A52                     
  4022                           ; BSR set to: 0
  4023  002A52  A380               	btfss	_ECG_FLAGS& (0+255),1,b
  4024  002A54  EF2E  F015         	goto	u5341
  4025  002A58  EF30  F015         	goto	u5340
  4026  002A5C                     u5341:
  4027  002A5C  EF34  F015         	goto	l431
  4028  002A60                     u5340:
  4029  002A60                     
  4030                           ; BSR set to: 0
  4031                           ;ecg.c: 35: Ecg_ProcessHeartRate();
  4032  002A60  EC1D  F008         	call	_Ecg_ProcessHeartRate	;wreg free
  4033  002A64                     
  4034                           ;ecg.c: 36: ECG_FLAGS.processHeartRate = 0;
  4035  002A64  0100               	movlb	0	; () banked
  4036  002A66  9780               	bcf	_ECG_FLAGS& (0+255),3,b
  4037  002A68                     l431:
  4038                           
  4039                           ; BSR set to: 0
  4040  002A68  0012               	return		;funcret
  4041  002A6A                     __end_of_Ecg_Process:
  4042                           	opt callstack 0
  4043                           
  4044 ;; *************** function _Ecg_ProcessInterrupt *****************
  4045 ;; Defined at:
  4046 ;;		line 40 in file "ecg.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4060 ;;      Params:         0       0       0       0       0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4062 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4063 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4064 ;;Total ram usage:        1 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    2
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_Ecg_Process
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text9
  4075  002ECE                     __ptext9:
  4076                           	opt callstack 0
  4077  002ECE                     _Ecg_ProcessInterrupt:
  4078                           	opt callstack 26
  4079  002ECE                     
  4080                           ;ecg.c: 41: if(ECG_FLAGS.msecDelay >= (10 / 5)) {
  4081  002ECE  0100               	movlb	0	; () banked
  4082  002ED0  5181               	movf	(_ECG_FLAGS+1)& (0+255),w,b
  4083  002ED2  0B07               	andlw	7
  4084  002ED4  6E05               	movwf	??_Ecg_ProcessInterrupt^0,c
  4085  002ED6  0E01               	movlw	1
  4086  002ED8  6405               	cpfsgt	??_Ecg_ProcessInterrupt^0,c
  4087  002EDA  EF71  F017         	goto	u3451
  4088  002EDE  EF73  F017         	goto	u3450
  4089  002EE2                     u3451:
  4090  002EE2  EF76  F017         	goto	l4213
  4091  002EE6                     u3450:
  4092  002EE6                     
  4093                           ; BSR set to: 0
  4094                           ;ecg.c: 42: ECG_FLAGS.processEcg = 1;
  4095  002EE6  8B80               	bsf	_ECG_FLAGS& (0+255),5,b
  4096  002EE8                     
  4097                           ; BSR set to: 0
  4098                           ;ecg.c: 43: ECG_FLAGS.msecDelay = 0;
  4099  002EE8  0EF8               	movlw	-8
  4100  002EEA  1781               	andwf	(_ECG_FLAGS+1)& (0+255),f,b
  4101  002EEC                     l4213:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;ecg.c: 44: };ecg.c: 45: if(ECG_HEARTRATE.msecDelay >= (1200 / 5)) {
  4105  002EEC  0EEF               	movlw	239
  4106  002EEE  6575               	cpfsgt	(_ECG_HEARTRATE+3)& (0+255),b
  4107  002EF0  EF7C  F017         	goto	u3461
  4108  002EF4  EF7E  F017         	goto	u3460
  4109  002EF8                     u3461:
  4110  002EF8  EF81  F017         	goto	l436
  4111  002EFC                     u3460:
  4112  002EFC                     
  4113                           ; BSR set to: 0
  4114                           ;ecg.c: 46: ECG_FLAGS.processHeartRate = 1;
  4115  002EFC  8780               	bsf	_ECG_FLAGS& (0+255),3,b
  4116  002EFE                     
  4117                           ; BSR set to: 0
  4118                           ;ecg.c: 47: ECG_HEARTRATE.msecDelay = 0;
  4119  002EFE  0E00               	movlw	0
  4120  002F00  6F75               	movwf	(_ECG_HEARTRATE+3)& (0+255),b
  4121  002F02                     l436:
  4122                           
  4123                           ; BSR set to: 0
  4124  002F02  0012               	return		;funcret
  4125  002F04                     __end_of_Ecg_ProcessInterrupt:
  4126                           	opt callstack 0
  4127                           
  4128 ;; *************** function _Ecg_ProcessHeartRate *****************
  4129 ;; Defined at:
  4130 ;;		line 75 in file "ecg.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  j               1   39[BANK0 ] unsigned char 
  4135 ;;  i               1   38[BANK0 ] unsigned char 
  4136 ;;  jPrev           1   37[BANK0 ] unsigned char 
  4137 ;;  heartrateStr    5   23[BANK0 ] unsigned char [5]
  4138 ;;  heartbeatAve    4   32[BANK0 ] unsigned long 
  4139 ;;  heartrate       1   36[BANK0 ] unsigned char 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0
  4150 ;;      Locals:         0      17       0       0       0       0       0       0       0
  4151 ;;      Temps:          0      12       0       0       0       0       0       0       0
  4152 ;;      Totals:         0      29       0       0       0       0       0       0       0
  4153 ;;Total ram usage:       29 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    8
  4156 ;; This function calls:
  4157 ;;		_TFT_DrawString
  4158 ;;		___lldiv
  4159 ;;		_sprintf
  4160 ;; This function is called by:
  4161 ;;		_Ecg_Process
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           	psect	text10
  4166  00103A                     __ptext10:
  4167                           	opt callstack 0
  4168  00103A                     _Ecg_ProcessHeartRate:
  4169                           	opt callstack 20
  4170  00103A                     
  4171                           ;ecg.c: 77: char heartrateString[5];;ecg.c: 78: uint32_t heartbeatAverage = 0;
  4172  00103A  0E00               	movlw	0
  4173  00103C  0100               	movlb	0	; () banked
  4174  00103E  6FCB               	movwf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),b
  4175  001040  0E00               	movlw	0
  4176  001042  6FCC               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),b
  4177  001044  0E00               	movlw	0
  4178  001046  6FCD               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),b
  4179  001048  0E00               	movlw	0
  4180  00104A  6FCE               	movwf	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),b
  4181                           
  4182                           ;ecg.c: 80: for(uint8_t i=0, j=ECG_HEARTBEAT.i, jPrev=0; i<(3 - 1); i++) {
  4183  00104C  0E00               	movlw	0
  4184  00104E  6FD1               	movwf	Ecg_ProcessHeartRate@i& (0+255),b
  4185  001050                     
  4186                           ; BSR set to: 0
  4187  001050  C06C  F0D2         	movff	_ECG_HEARTBEAT+12,Ecg_ProcessHeartRate@j
  4188  001054                     l5517:
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;ecg.c: 81: j = (j == 0) ? (3 - 1) : (j - 1);
  4192  001054  51D2               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4193  001056  B4D8               	btfsc	status,2,c
  4194  001058  EF30  F008         	goto	u5231
  4195  00105C  EF32  F008         	goto	u5230
  4196  001060                     u5231:
  4197  001060  EF3A  F008         	goto	l5521
  4198  001064                     u5230:
  4199  001064                     
  4200                           ; BSR set to: 0
  4201  001064  0EFF               	movlw	255
  4202  001066  25D2               	addwf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4203  001068  6FC7               	movwf	_Ecg_ProcessHeartRate$1036& (0+255),b
  4204  00106A  6BC8               	clrf	(_Ecg_ProcessHeartRate$1036+1)& (0+255),b
  4205  00106C  0EFF               	movlw	255
  4206  00106E  23C8               	addwfc	(_Ecg_ProcessHeartRate$1036+1)& (0+255),f,b
  4207  001070  EF3E  F008         	goto	l5523
  4208  001074                     l5521:
  4209                           
  4210                           ; BSR set to: 0
  4211  001074  0E00               	movlw	0
  4212  001076  6FC8               	movwf	(_Ecg_ProcessHeartRate$1036+1)& (0+255),b
  4213  001078  0E02               	movlw	2
  4214  00107A  6FC7               	movwf	_Ecg_ProcessHeartRate$1036& (0+255),b
  4215  00107C                     l5523:
  4216                           
  4217                           ; BSR set to: 0
  4218  00107C  C0C7  F0D2         	movff	_Ecg_ProcessHeartRate$1036,Ecg_ProcessHeartRate@j
  4219                           
  4220                           ;ecg.c: 82: jPrev = (j == 0) ? (3 - 1) : (j - 1);
  4221  001080  51D2               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4222  001082  B4D8               	btfsc	status,2,c
  4223  001084  EF46  F008         	goto	u5241
  4224  001088  EF48  F008         	goto	u5240
  4225  00108C                     u5241:
  4226  00108C  EF50  F008         	goto	l5527
  4227  001090                     u5240:
  4228  001090                     
  4229                           ; BSR set to: 0
  4230  001090  0EFF               	movlw	255
  4231  001092  25D2               	addwf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4232  001094  6FC9               	movwf	_Ecg_ProcessHeartRate$1037& (0+255),b
  4233  001096  6BCA               	clrf	(_Ecg_ProcessHeartRate$1037+1)& (0+255),b
  4234  001098  0EFF               	movlw	255
  4235  00109A  23CA               	addwfc	(_Ecg_ProcessHeartRate$1037+1)& (0+255),f,b
  4236  00109C  EF54  F008         	goto	l5529
  4237  0010A0                     l5527:
  4238                           
  4239                           ; BSR set to: 0
  4240  0010A0  0E00               	movlw	0
  4241  0010A2  6FCA               	movwf	(_Ecg_ProcessHeartRate$1037+1)& (0+255),b
  4242  0010A4  0E02               	movlw	2
  4243  0010A6  6FC9               	movwf	_Ecg_ProcessHeartRate$1037& (0+255),b
  4244  0010A8                     l5529:
  4245                           
  4246                           ; BSR set to: 0
  4247  0010A8  C0C9  F0D0         	movff	_Ecg_ProcessHeartRate$1037,Ecg_ProcessHeartRate@jPrev
  4248  0010AC                     
  4249                           ; BSR set to: 0
  4250                           ;ecg.c: 83: heartbeatAverage += (ECG_HEARTBEAT.data[j] - ECG_HEARTBEAT.data[jPrev]);
  4251  0010AC  51D0               	movf	Ecg_ProcessHeartRate@jPrev& (0+255),w,b
  4252  0010AE  0D04               	mullw	4
  4253  0010B0  0E60               	movlw	low _ECG_HEARTBEAT
  4254  0010B2  24F3               	addwf	243,w,c
  4255  0010B4  6ED9               	movwf	fsr2l,c
  4256  0010B6  0E00               	movlw	high _ECG_HEARTBEAT
  4257  0010B8  20F4               	addwfc	prodh,w,c
  4258  0010BA  6EDA               	movwf	fsr2h,c
  4259  0010BC  CFDE F0B6          	movff	postinc2,??_Ecg_ProcessHeartRate
  4260  0010C0  CFDE F0B7          	movff	postinc2,??_Ecg_ProcessHeartRate+1
  4261  0010C4  CFDE F0B8          	movff	postinc2,??_Ecg_ProcessHeartRate+2
  4262  0010C8  CFDE F0B9          	movff	postinc2,??_Ecg_ProcessHeartRate+3
  4263  0010CC  51D2               	movf	Ecg_ProcessHeartRate@j& (0+255),w,b
  4264  0010CE  0D04               	mullw	4
  4265  0010D0  0E60               	movlw	low _ECG_HEARTBEAT
  4266  0010D2  24F3               	addwf	243,w,c
  4267  0010D4  6ED9               	movwf	fsr2l,c
  4268  0010D6  0E00               	movlw	high _ECG_HEARTBEAT
  4269  0010D8  20F4               	addwfc	prodh,w,c
  4270  0010DA  6EDA               	movwf	fsr2h,c
  4271  0010DC  CFDE F0BA          	movff	postinc2,??_Ecg_ProcessHeartRate+4
  4272  0010E0  CFDE F0BB          	movff	postinc2,??_Ecg_ProcessHeartRate+5
  4273  0010E4  CFDE F0BC          	movff	postinc2,??_Ecg_ProcessHeartRate+6
  4274  0010E8  CFDE F0BD          	movff	postinc2,??_Ecg_ProcessHeartRate+7
  4275  0010EC  51B6               	movf	??_Ecg_ProcessHeartRate& (0+255),w,b
  4276  0010EE  5DBA               	subwf	(??_Ecg_ProcessHeartRate+4)& (0+255),w,b
  4277  0010F0  6FBE               	movwf	(??_Ecg_ProcessHeartRate+8)& (0+255),b
  4278  0010F2  51B7               	movf	(??_Ecg_ProcessHeartRate+1)& (0+255),w,b
  4279  0010F4  59BB               	subwfb	(??_Ecg_ProcessHeartRate+5)& (0+255),w,b
  4280  0010F6  6FBF               	movwf	(??_Ecg_ProcessHeartRate+9)& (0+255),b
  4281  0010F8  51B8               	movf	(??_Ecg_ProcessHeartRate+2)& (0+255),w,b
  4282  0010FA  59BC               	subwfb	(??_Ecg_ProcessHeartRate+6)& (0+255),w,b
  4283  0010FC  6FC0               	movwf	(??_Ecg_ProcessHeartRate+10)& (0+255),b
  4284  0010FE  51B9               	movf	(??_Ecg_ProcessHeartRate+3)& (0+255),w,b
  4285  001100  59BD               	subwfb	(??_Ecg_ProcessHeartRate+7)& (0+255),w,b
  4286  001102  6FC1               	movwf	(??_Ecg_ProcessHeartRate+11)& (0+255),b
  4287  001104  51BE               	movf	(??_Ecg_ProcessHeartRate+8)& (0+255),w,b
  4288  001106  27CB               	addwf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),f,b
  4289  001108  51BF               	movf	(??_Ecg_ProcessHeartRate+9)& (0+255),w,b
  4290  00110A  23CC               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),f,b
  4291  00110C  51C0               	movf	(??_Ecg_ProcessHeartRate+10)& (0+255),w,b
  4292  00110E  23CD               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),f,b
  4293  001110  51C1               	movf	(??_Ecg_ProcessHeartRate+11)& (0+255),w,b
  4294  001112  23CE               	addwfc	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),f,b
  4295  001114                     
  4296                           ; BSR set to: 0
  4297  001114  2BD1               	incf	Ecg_ProcessHeartRate@i& (0+255),f,b
  4298  001116                     
  4299                           ; BSR set to: 0
  4300  001116  0E01               	movlw	1
  4301  001118  65D1               	cpfsgt	Ecg_ProcessHeartRate@i& (0+255),b
  4302  00111A  EF91  F008         	goto	u5251
  4303  00111E  EF93  F008         	goto	u5250
  4304  001122                     u5251:
  4305  001122  EF2A  F008         	goto	l5517
  4306  001126                     u5250:
  4307  001126                     
  4308                           ; BSR set to: 0
  4309                           ;ecg.c: 84: };ecg.c: 85: heartbeatAverage /= (3 - 1);
  4310  001126  90D8               	bcf	status,0,c
  4311  001128  33CE               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+3)& (0+255),f,b
  4312  00112A  33CD               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+2)& (0+255),f,b
  4313  00112C  33CC               	rrcf	(Ecg_ProcessHeartRate@heartbeatAverage+1)& (0+255),f,b
  4314  00112E  33CB               	rrcf	Ecg_ProcessHeartRate@heartbeatAverage& (0+255),f,b
  4315  001130                     
  4316                           ; BSR set to: 0
  4317                           ;ecg.c: 86: heartrate = (uint8_t)(60000 / heartbeatAverage);
  4318  001130  0E60               	movlw	96
  4319  001132  6E05               	movwf	___lldiv@dividend^0,c
  4320  001134  0EEA               	movlw	234
  4321  001136  6E06               	movwf	(___lldiv@dividend+1)^0,c
  4322  001138  0E00               	movlw	0
  4323  00113A  6E07               	movwf	(___lldiv@dividend+2)^0,c
  4324  00113C  0E00               	movlw	0
  4325  00113E  6E08               	movwf	(___lldiv@dividend+3)^0,c
  4326  001140  C0CB  F009         	movff	Ecg_ProcessHeartRate@heartbeatAverage,___lldiv@divisor
  4327  001144  C0CC  F00A         	movff	Ecg_ProcessHeartRate@heartbeatAverage+1,___lldiv@divisor+1
  4328  001148  C0CD  F00B         	movff	Ecg_ProcessHeartRate@heartbeatAverage+2,___lldiv@divisor+2
  4329  00114C  C0CE  F00C         	movff	Ecg_ProcessHeartRate@heartbeatAverage+3,___lldiv@divisor+3
  4330  001150  ECDE  F00F         	call	___lldiv	;wreg free
  4331  001154  5005               	movf	?___lldiv^0,w,c
  4332  001156  0100               	movlb	0	; () banked
  4333  001158  6FCF               	movwf	Ecg_ProcessHeartRate@heartrate& (0+255),b
  4334  00115A                     
  4335                           ; BSR set to: 0
  4336                           ;ecg.c: 87: sprintf(heartrateString, "%3d", heartrate);
  4337  00115A  0EC2               	movlw	low Ecg_ProcessHeartRate@heartrateString
  4338  00115C  6E1B               	movwf	sprintf@sp^0,c
  4339  00115E  0E00               	movlw	high Ecg_ProcessHeartRate@heartrateString
  4340  001160  6E1C               	movwf	(sprintf@sp+1)^0,c
  4341  001162  0EF2               	movlw	low STR_2
  4342  001164  6E1D               	movwf	sprintf@f^0,c
  4343  001166  0E5F               	movlw	high STR_2
  4344  001168  6E1E               	movwf	(sprintf@f+1)^0,c
  4345  00116A  C0CF  F01F         	movff	Ecg_ProcessHeartRate@heartrate,?_sprintf+4
  4346  00116E  6A20               	clrf	(?_sprintf+5)^0,c
  4347  001170  EC09  F000         	call	_sprintf	;wreg free
  4348  001174                     
  4349                           ;ecg.c: 88: TFT_DrawString(135, 10, heartrateString, 0x07E0, 0x0821, 2);
  4350  001174  0E00               	movlw	0
  4351  001176  0100               	movlb	0	; () banked
  4352  001178  6FAC               	movwf	(TFT_DrawString@x+1)& (0+255),b
  4353  00117A  0E87               	movlw	135
  4354  00117C  6FAB               	movwf	TFT_DrawString@x& (0+255),b
  4355  00117E  0E00               	movlw	0
  4356  001180  6FAE               	movwf	(TFT_DrawString@y+1)& (0+255),b
  4357  001182  0E0A               	movlw	10
  4358  001184  6FAD               	movwf	TFT_DrawString@y& (0+255),b
  4359  001186  0EC2               	movlw	low Ecg_ProcessHeartRate@heartrateString
  4360  001188  6FAF               	movwf	TFT_DrawString@str& (0+255),b
  4361  00118A  0E00               	movlw	high Ecg_ProcessHeartRate@heartrateString
  4362  00118C  6FB0               	movwf	(TFT_DrawString@str+1)& (0+255),b
  4363  00118E  0E07               	movlw	7
  4364  001190  6FB2               	movwf	(TFT_DrawString@color+1)& (0+255),b
  4365  001192  0EE0               	movlw	224
  4366  001194  6FB1               	movwf	TFT_DrawString@color& (0+255),b
  4367  001196  0E08               	movlw	8
  4368  001198  6FB4               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  4369  00119A  0E21               	movlw	33
  4370  00119C  6FB3               	movwf	TFT_DrawString@bg& (0+255),b
  4371  00119E  0E02               	movlw	2
  4372  0011A0  6FB5               	movwf	TFT_DrawString@size& (0+255),b
  4373  0011A2  EC7D  F010         	call	_TFT_DrawString	;wreg free
  4374  0011A6  0012               	return		;funcret
  4375  0011A8                     __end_of_Ecg_ProcessHeartRate:
  4376                           	opt callstack 0
  4377                           
  4378 ;; *************** function _Ecg_ProcessEcg *****************
  4379 ;; Defined at:
  4380 ;;		line 51 in file "ecg.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    9
  4401 ;; This function calls:
  4402 ;;		_Ecg_Background_Leads_Failure
  4403 ;;		_Ecg_Background_Leads_Ok
  4404 ;;		_Ecg_CheckLeads
  4405 ;;		_Ecg_Draw
  4406 ;;		_Ecg_ProcessHeartbeat
  4407 ;; This function is called by:
  4408 ;;		_Ecg_Process
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text11
  4413  002B5A                     __ptext11:
  4414                           	opt callstack 0
  4415  002B5A                     _Ecg_ProcessEcg:
  4416                           	opt callstack 19
  4417  002B5A                     
  4418                           ;ecg.c: 52: Ecg_CheckLeads();
  4419  002B5A  EC5D  F015         	call	_Ecg_CheckLeads	;wreg free
  4420  002B5E                     
  4421                           ;ecg.c: 54: if(ECG_FLAGS.leadsOk) {
  4422  002B5E  0100               	movlb	0	; () banked
  4423  002B60  A380               	btfss	_ECG_FLAGS& (0+255),1,b
  4424  002B62  EFB5  F015         	goto	u5201
  4425  002B66  EFB7  F015         	goto	u5200
  4426  002B6A                     u5201:
  4427  002B6A  EFC8  F015         	goto	l439
  4428  002B6E                     u5200:
  4429  002B6E                     
  4430                           ; BSR set to: 0
  4431                           ;ecg.c: 56: if(ECG_FLAGS.leadsOkFlag == 0) {
  4432  002B6E  B580               	btfsc	_ECG_FLAGS& (0+255),2,b
  4433  002B70  EFBC  F015         	goto	u5211
  4434  002B74  EFBE  F015         	goto	u5210
  4435  002B78                     u5211:
  4436  002B78  EFC2  F015         	goto	l5501
  4437  002B7C                     u5210:
  4438  002B7C                     
  4439                           ; BSR set to: 0
  4440                           ;ecg.c: 57: Ecg_Background_Leads_Ok();
  4441  002B7C  EC30  F010         	call	_Ecg_Background_Leads_Ok	;wreg free
  4442  002B80                     
  4443                           ;ecg.c: 58: ECG_FLAGS.leadsOkFlag = 1;
  4444  002B80  0100               	movlb	0	; () banked
  4445  002B82  8580               	bsf	_ECG_FLAGS& (0+255),2,b
  4446  002B84                     l5501:
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;ecg.c: 59: };ecg.c: 62: Ecg_Draw();
  4450  002B84  EC24  F00C         	call	_Ecg_Draw	;wreg free
  4451  002B88                     
  4452                           ;ecg.c: 65: Ecg_ProcessHeartbeat();
  4453  002B88  EC5F  F007         	call	_Ecg_ProcessHeartbeat	;wreg free
  4454                           
  4455                           ;ecg.c: 66: } else {
  4456  002B8C  EFD3  F015         	goto	l443
  4457  002B90                     l439:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;ecg.c: 68: if(ECG_FLAGS.leadsOkFlag == 1) {
  4461  002B90  A580               	btfss	_ECG_FLAGS& (0+255),2,b
  4462  002B92  EFCD  F015         	goto	u5221
  4463  002B96  EFCF  F015         	goto	u5220
  4464  002B9A                     u5221:
  4465  002B9A  EFD3  F015         	goto	l443
  4466  002B9E                     u5220:
  4467  002B9E                     
  4468                           ; BSR set to: 0
  4469                           ;ecg.c: 69: Ecg_Background_Leads_Failure();
  4470  002B9E  ECD5  F016         	call	_Ecg_Background_Leads_Failure	;wreg free
  4471  002BA2                     
  4472                           ;ecg.c: 70: ECG_FLAGS.leadsOkFlag = 0;
  4473  002BA2  0100               	movlb	0	; () banked
  4474  002BA4  9580               	bcf	_ECG_FLAGS& (0+255),2,b
  4475  002BA6                     l443:
  4476  002BA6  0012               	return		;funcret
  4477  002BA8                     __end_of_Ecg_ProcessEcg:
  4478                           	opt callstack 0
  4479                           
  4480 ;; *************** function _Ecg_ProcessHeartbeat *****************
  4481 ;; Defined at:
  4482 ;;		line 91 in file "ecg.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;		None
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  delta           2   53[COMRAM] int 
  4487 ;;  i               1   55[COMRAM] unsigned char 
  4488 ;;  ecgDeltaDiff    2   51[COMRAM] int 
  4489 ;;  ecgDeltaAbsS    2   49[COMRAM] int 
  4490 ;;  ecgDeltaSum     2   47[COMRAM] int 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0
  4501 ;;      Locals:         9       0       0       0       0       0       0       0       0
  4502 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4503 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4504 ;;Total ram usage:       11 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; Hardware stack levels required when called:    6
  4507 ;; This function calls:
  4508 ;;		_TFT_DrawBitmap
  4509 ;;		_TFT_DrawFillRect
  4510 ;;		_abs
  4511 ;; This function is called by:
  4512 ;;		_Ecg_ProcessEcg
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text12
  4517  000EBE                     __ptext12:
  4518                           	opt callstack 0
  4519  000EBE                     _Ecg_ProcessHeartbeat:
  4520                           	opt callstack 21
  4521  000EBE                     
  4522                           ;ecg.c: 92: if(ECG_HEARTRATE.processHeartbeat == 1) {
  4523  000EBE  0100               	movlb	0	; () banked
  4524  000EC0  AD72               	btfss	_ECG_HEARTRATE& (0+255),6,b
  4525  000EC2  EF65  F007         	goto	u4791
  4526  000EC6  EF67  F007         	goto	u4790
  4527  000ECA                     u4791:
  4528  000ECA  EFEA  F007         	goto	l459
  4529  000ECE                     u4790:
  4530  000ECE                     
  4531                           ; BSR set to: 0
  4532                           ;ecg.c: 94: int16_t ecgDeltaSum=0, ecgDeltaAbsSum=0, ecgDeltaDiff=0;
  4533  000ECE  0E00               	movlw	0
  4534  000ED0  6E31               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,c
  4535  000ED2  0E00               	movlw	0
  4536  000ED4  6E30               	movwf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,c
  4537  000ED6  0E00               	movlw	0
  4538  000ED8  6E33               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,c
  4539  000EDA  0E00               	movlw	0
  4540  000EDC  6E32               	movwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,c
  4541                           
  4542                           ;ecg.c: 95: for(uint8_t i=1; i<4; i++) {
  4543  000EDE  0E01               	movlw	1
  4544  000EE0  6E38               	movwf	Ecg_ProcessHeartbeat@i^0,c
  4545  000EE2                     l5225:
  4546                           
  4547                           ;ecg.c: 96: int16_t delta = ECG_BUFFER.data[i] - ECG_BUFFER.data[i - 1];
  4548  000EE2  0E6D               	movlw	low _ECG_BUFFER
  4549  000EE4  2438               	addwf	Ecg_ProcessHeartbeat@i^0,w,c
  4550  000EE6  6ED9               	movwf	fsr2l,c
  4551  000EE8  6ADA               	clrf	fsr2h,c
  4552  000EEA  0E00               	movlw	high _ECG_BUFFER
  4553  000EEC  22DA               	addwfc	fsr2h,f,c
  4554  000EEE  50DF               	movf	indf2,w,c
  4555  000EF0  6E2E               	movwf	??_Ecg_ProcessHeartbeat^0,c
  4556  000EF2  0E6C               	movlw	low (_ECG_BUFFER+65535)
  4557  000EF4  2438               	addwf	Ecg_ProcessHeartbeat@i^0,w,c
  4558  000EF6  6ED9               	movwf	fsr2l,c
  4559  000EF8  6ADA               	clrf	fsr2h,c
  4560  000EFA  0E00               	movlw	high (_ECG_BUFFER+65535)
  4561  000EFC  22DA               	addwfc	fsr2h,f,c
  4562  000EFE  50DF               	movf	indf2,w,c
  4563  000F00  6E2F               	movwf	(??_Ecg_ProcessHeartbeat+1)^0,c
  4564  000F02  502F               	movf	(??_Ecg_ProcessHeartbeat+1)^0,w,c
  4565  000F04  5C2E               	subwf	??_Ecg_ProcessHeartbeat^0,w,c
  4566  000F06  6E36               	movwf	Ecg_ProcessHeartbeat@delta^0,c
  4567  000F08  6A37               	clrf	(Ecg_ProcessHeartbeat@delta+1)^0,c
  4568  000F0A  A0D8               	btfss	status,0,c
  4569  000F0C  0637               	decf	(Ecg_ProcessHeartbeat@delta+1)^0,f,c
  4570  000F0E                     
  4571                           ;ecg.c: 97: ecgDeltaSum += delta;
  4572  000F0E  5036               	movf	Ecg_ProcessHeartbeat@delta^0,w,c
  4573  000F10  2630               	addwf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,f,c
  4574  000F12  5037               	movf	(Ecg_ProcessHeartbeat@delta+1)^0,w,c
  4575  000F14  2231               	addwfc	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,f,c
  4576  000F16                     
  4577                           ;ecg.c: 98: ecgDeltaAbsSum += abs(delta);
  4578  000F16  C036  F005         	movff	Ecg_ProcessHeartbeat@delta,abs@a
  4579  000F1A  C037  F006         	movff	Ecg_ProcessHeartbeat@delta+1,abs@a+1
  4580  000F1E  EC82  F017         	call	_abs	;wreg free
  4581  000F22  5005               	movf	?_abs^0,w,c
  4582  000F24  2632               	addwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,f,c
  4583  000F26  5006               	movf	(?_abs+1)^0,w,c
  4584  000F28  2233               	addwfc	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,f,c
  4585  000F2A  2A38               	incf	Ecg_ProcessHeartbeat@i^0,f,c
  4586  000F2C  0E03               	movlw	3
  4587  000F2E  6438               	cpfsgt	Ecg_ProcessHeartbeat@i^0,c
  4588  000F30  EF9C  F007         	goto	u4801
  4589  000F34  EF9E  F007         	goto	u4800
  4590  000F38                     u4801:
  4591  000F38  EF71  F007         	goto	l5225
  4592  000F3C                     u4800:
  4593  000F3C                     
  4594                           ;ecg.c: 99: };ecg.c: 100: ecgDeltaDiff = ecgDeltaAbsSum - ecgDeltaSum;
  4595  000F3C  5030               	movf	Ecg_ProcessHeartbeat@ecgDeltaSum^0,w,c
  4596  000F3E  5C32               	subwf	Ecg_ProcessHeartbeat@ecgDeltaAbsSum^0,w,c
  4597  000F40  6E34               	movwf	Ecg_ProcessHeartbeat@ecgDeltaDiff^0,c
  4598  000F42  5031               	movf	(Ecg_ProcessHeartbeat@ecgDeltaSum+1)^0,w,c
  4599  000F44  5833               	subwfb	(Ecg_ProcessHeartbeat@ecgDeltaAbsSum+1)^0,w,c
  4600  000F46  6E35               	movwf	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,c
  4601                           
  4602                           ;ecg.c: 103: if(ecgDeltaDiff > 60) {
  4603  000F48  BE35               	btfsc	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,7,c
  4604  000F4A  EFB0  F007         	goto	u4811
  4605  000F4E  5035               	movf	(Ecg_ProcessHeartbeat@ecgDeltaDiff+1)^0,w,c
  4606  000F50  E109               	bnz	u4810
  4607  000F52  0E3D               	movlw	61
  4608  000F54  5C34               	subwf	Ecg_ProcessHeartbeat@ecgDeltaDiff^0,w,c
  4609  000F56  A0D8               	btfss	status,0,c
  4610  000F58  EFB0  F007         	goto	u4811
  4611  000F5C  EFB2  F007         	goto	u4810
  4612  000F60                     u4811:
  4613  000F60  EF1C  F008         	goto	l468
  4614  000F64                     u4810:
  4615  000F64                     
  4616                           ;ecg.c: 105: ECG_HEARTBEAT.data[ECG_HEARTBEAT.i++] = MILLISECONDS;
  4617  000F64  0100               	movlb	0	; () banked
  4618  000F66  516C               	movf	(_ECG_HEARTBEAT+12)& (0+255),w,b
  4619  000F68  0D04               	mullw	4
  4620  000F6A  0E60               	movlw	low _ECG_HEARTBEAT
  4621  000F6C  24F3               	addwf	243,w,c
  4622  000F6E  6ED9               	movwf	fsr2l,c
  4623  000F70  0E00               	movlw	high _ECG_HEARTBEAT
  4624  000F72  20F4               	addwfc	prodh,w,c
  4625  000F74  6EDA               	movwf	fsr2h,c
  4626  000F76  C07A  FFDE         	movff	_MILLISECONDS,postinc2
  4627  000F7A  C07B  FFDE         	movff	_MILLISECONDS+1,postinc2
  4628  000F7E  C07C  FFDE         	movff	_MILLISECONDS+2,postinc2
  4629  000F82  C07D  FFDE         	movff	_MILLISECONDS+3,postinc2
  4630  000F86                     
  4631                           ; BSR set to: 0
  4632  000F86  2B6C               	incf	(_ECG_HEARTBEAT+12)& (0+255),f,b
  4633  000F88                     
  4634                           ; BSR set to: 0
  4635                           ;ecg.c: 106: if(ECG_HEARTBEAT.i == 3) ECG_HEARTBEAT.i = 0;
  4636  000F88  0E03               	movlw	3
  4637  000F8A  196C               	xorwf	(_ECG_HEARTBEAT+12)& (0+255),w,b
  4638  000F8C  A4D8               	btfss	status,2,c
  4639  000F8E  EFCB  F007         	goto	u4821
  4640  000F92  EFCD  F007         	goto	u4820
  4641  000F96                     u4821:
  4642  000F96  EFCF  F007         	goto	l5245
  4643  000F9A                     u4820:
  4644  000F9A                     
  4645                           ; BSR set to: 0
  4646  000F9A  0E00               	movlw	0
  4647  000F9C  6F6C               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  4648  000F9E                     l5245:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;ecg.c: 109: TFT_DrawBitmap(180, 7, ECG_ICON_HEART, 0xF800);
  4652  000F9E  0E00               	movlw	0
  4653  000FA0  6E18               	movwf	(TFT_DrawBitmap@x+1)^0,c
  4654  000FA2  0EB4               	movlw	180
  4655  000FA4  6E17               	movwf	TFT_DrawBitmap@x^0,c
  4656  000FA6  0E00               	movlw	0
  4657  000FA8  6E1A               	movwf	(TFT_DrawBitmap@y+1)^0,c
  4658  000FAA  0E07               	movlw	7
  4659  000FAC  6E19               	movwf	TFT_DrawBitmap@y^0,c
  4660  000FAE  0E1F               	movlw	low _ECG_ICON_HEART
  4661  000FB0  6E1B               	movwf	TFT_DrawBitmap@bitmap^0,c
  4662  000FB2  0E5F               	movlw	high _ECG_ICON_HEART
  4663  000FB4  6E1C               	movwf	(TFT_DrawBitmap@bitmap+1)^0,c
  4664  000FB6  0EF8               	movlw	248
  4665  000FB8  6E1E               	movwf	(TFT_DrawBitmap@color+1)^0,c
  4666  000FBA  0E00               	movlw	0
  4667  000FBC  6E1D               	movwf	TFT_DrawBitmap@color^0,c
  4668  000FBE  ECAE  F00B         	call	_TFT_DrawBitmap	;wreg free
  4669  000FC2                     
  4670                           ;ecg.c: 110: ECG_HEARTRATE.heartIconMsecDelay = 100 / 5;
  4671  000FC2  0E14               	movlw	20
  4672  000FC4  0100               	movlb	0	; () banked
  4673  000FC6  6F73               	movwf	(_ECG_HEARTRATE+1)& (0+255),b
  4674  000FC8                     
  4675                           ; BSR set to: 0
  4676                           ;ecg.c: 111: ECG_HEARTRATE.heartIconShown = 1;
  4677  000FC8  8F72               	bsf	_ECG_HEARTRATE& (0+255),7,b
  4678  000FCA                     
  4679                           ; BSR set to: 0
  4680                           ;ecg.c: 114: ECG_HEARTRATE.heartbeatMsecDelay = 250 / 5;
  4681  000FCA  0E32               	movlw	50
  4682  000FCC  6F74               	movwf	(_ECG_HEARTRATE+2)& (0+255),b
  4683  000FCE                     
  4684                           ; BSR set to: 0
  4685                           ;ecg.c: 115: ECG_HEARTRATE.processHeartbeat = 0;
  4686  000FCE  9D72               	bcf	_ECG_HEARTRATE& (0+255),6,b
  4687  000FD0  EF1C  F008         	goto	l468
  4688  000FD4                     l459:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;ecg.c: 119: if(ECG_HEARTRATE.heartIconShown == 1) {
  4692  000FD4  AF72               	btfss	_ECG_HEARTRATE& (0+255),7,b
  4693  000FD6  EFEF  F007         	goto	u4831
  4694  000FDA  EFF1  F007         	goto	u4830
  4695  000FDE                     u4831:
  4696  000FDE  EF12  F008         	goto	l5263
  4697  000FE2                     u4830:
  4698  000FE2                     
  4699                           ; BSR set to: 0
  4700                           ;ecg.c: 120: ECG_HEARTRATE.heartIconMsecDelay--;
  4701  000FE2  0773               	decf	(_ECG_HEARTRATE+1)& (0+255),f,b
  4702  000FE4                     
  4703                           ; BSR set to: 0
  4704                           ;ecg.c: 121: if(ECG_HEARTRATE.heartIconMsecDelay == 0) {
  4705  000FE4  5173               	movf	(_ECG_HEARTRATE+1)& (0+255),w,b
  4706  000FE6  A4D8               	btfss	status,2,c
  4707  000FE8  EFF8  F007         	goto	u4841
  4708  000FEC  EFFA  F007         	goto	u4840
  4709  000FF0                     u4841:
  4710  000FF0  EF12  F008         	goto	l5263
  4711  000FF4                     u4840:
  4712  000FF4                     
  4713                           ; BSR set to: 0
  4714                           ;ecg.c: 122: TFT_DrawFillRect(180, 7, 20, 20, 0x0821);
  4715  000FF4  0E00               	movlw	0
  4716  000FF6  6E21               	movwf	(TFT_DrawFillRect@x+1)^0,c
  4717  000FF8  0EB4               	movlw	180
  4718  000FFA  6E20               	movwf	TFT_DrawFillRect@x^0,c
  4719  000FFC  0E00               	movlw	0
  4720  000FFE  6E23               	movwf	(TFT_DrawFillRect@y+1)^0,c
  4721  001000  0E07               	movlw	7
  4722  001002  6E22               	movwf	TFT_DrawFillRect@y^0,c
  4723  001004  0E00               	movlw	0
  4724  001006  6E25               	movwf	(TFT_DrawFillRect@w+1)^0,c
  4725  001008  0E14               	movlw	20
  4726  00100A  6E24               	movwf	TFT_DrawFillRect@w^0,c
  4727  00100C  0E00               	movlw	0
  4728  00100E  6E27               	movwf	(TFT_DrawFillRect@h+1)^0,c
  4729  001010  0E14               	movlw	20
  4730  001012  6E26               	movwf	TFT_DrawFillRect@h^0,c
  4731  001014  0E08               	movlw	8
  4732  001016  6E29               	movwf	(TFT_DrawFillRect@color+1)^0,c
  4733  001018  0E21               	movlw	33
  4734  00101A  6E28               	movwf	TFT_DrawFillRect@color^0,c
  4735  00101C  EC14  F012         	call	_TFT_DrawFillRect	;wreg free
  4736  001020                     
  4737                           ;ecg.c: 123: ECG_HEARTRATE.heartIconShown = 0;
  4738  001020  0100               	movlb	0	; () banked
  4739  001022  9F72               	bcf	_ECG_HEARTRATE& (0+255),7,b
  4740  001024                     l5263:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;ecg.c: 124: };ecg.c: 125: };ecg.c: 128: ECG_HEARTRATE.heartbeatMsecDelay--;
  4744  001024  0774               	decf	(_ECG_HEARTRATE+2)& (0+255),f,b
  4745  001026                     
  4746                           ; BSR set to: 0
  4747                           ;ecg.c: 129: if(ECG_HEARTRATE.heartbeatMsecDelay == 0) {
  4748  001026  5174               	movf	(_ECG_HEARTRATE+2)& (0+255),w,b
  4749  001028  A4D8               	btfss	status,2,c
  4750  00102A  EF19  F008         	goto	u4851
  4751  00102E  EF1B  F008         	goto	u4850
  4752  001032                     u4851:
  4753  001032  EF1C  F008         	goto	l468
  4754  001036                     u4850:
  4755  001036                     
  4756                           ; BSR set to: 0
  4757                           ;ecg.c: 130: ECG_HEARTRATE.processHeartbeat = 1;
  4758  001036  8D72               	bsf	_ECG_HEARTRATE& (0+255),6,b
  4759  001038                     l468:
  4760  001038  0012               	return		;funcret
  4761  00103A                     __end_of_Ecg_ProcessHeartbeat:
  4762                           	opt callstack 0
  4763                           
  4764 ;; *************** function _TFT_DrawBitmap *****************
  4765 ;; Defined at:
  4766 ;;		line 311 in file "TFT.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  x               2   22[COMRAM] unsigned int 
  4769 ;;  y               2   24[COMRAM] unsigned int 
  4770 ;;  bitmap          2   26[COMRAM] PTR const unsigned char 
  4771 ;;		 -> ECG_ICON_HEART(62), 
  4772 ;;  color           2   28[COMRAM] unsigned int 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  i               2   37[COMRAM] unsigned int 
  4775 ;;  j               2   34[COMRAM] unsigned int 
  4776 ;;  byte            1   36[COMRAM] unsigned char 
  4777 ;;  h               1   33[COMRAM] unsigned char 
  4778 ;;  w               1   32[COMRAM] unsigned char 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4788 ;;      Params:         8       0       0       0       0       0       0       0       0
  4789 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4790 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4791 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4792 ;;Total ram usage:       17 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    4
  4795 ;; This function calls:
  4796 ;;		_TFT_DrawPixel
  4797 ;; This function is called by:
  4798 ;;		_Ecg_ProcessHeartbeat
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text13
  4803  00175C                     __ptext13:
  4804                           	opt callstack 0
  4805  00175C                     _TFT_DrawBitmap:
  4806                           	opt callstack 22
  4807  00175C                     
  4808                           ;TFT.c: 312: uint8_t w = *bitmap++;
  4809  00175C  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4810  001760  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4811  001764                     	if	0	;tblptru may be non-zero
  4812  001764                     	endif
  4813  001764                     	if	0	;tblptru may be non-zero
  4814  001764                     	endif
  4815  001764  0008               	tblrd		*
  4816  001766  CFF5 F021          	movff	tablat,TFT_DrawBitmap@w
  4817  00176A  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4818  00176C  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4819  00176E                     
  4820                           ;TFT.c: 313: uint8_t h = *bitmap++;
  4821  00176E  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4822  001772  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4823  001776                     	if	0	;tblptru may be non-zero
  4824  001776                     	endif
  4825  001776                     	if	0	;tblptru may be non-zero
  4826  001776                     	endif
  4827  001776  0008               	tblrd		*
  4828  001778  CFF5 F022          	movff	tablat,TFT_DrawBitmap@h
  4829  00177C  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4830  00177E  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4831  001780                     
  4832                           ;TFT.c: 314: uint8_t byte = 0;
  4833  001780  0E00               	movlw	0
  4834  001782  6E25               	movwf	TFT_DrawBitmap@byte^0,c
  4835  001784                     
  4836                           ;TFT.c: 316: for(uint16_t j=0; j<h; j++, y++) {
  4837  001784  0E00               	movlw	0
  4838  001786  6E24               	movwf	(TFT_DrawBitmap@j+1)^0,c
  4839  001788  0E00               	movlw	0
  4840  00178A  6E23               	movwf	TFT_DrawBitmap@j^0,c
  4841  00178C  EF15  F00C         	goto	l5087
  4842  001790                     l5067:
  4843                           
  4844                           ;TFT.c: 317: for(uint16_t i=0; i<w; i++) {
  4845  001790  0E00               	movlw	0
  4846  001792  6E27               	movwf	(TFT_DrawBitmap@i+1)^0,c
  4847  001794  0E00               	movlw	0
  4848  001796  6E26               	movwf	TFT_DrawBitmap@i^0,c
  4849  001798  EF03  F00C         	goto	l5083
  4850  00179C                     l5069:
  4851                           
  4852                           ;TFT.c: 318: if(i & 7) {
  4853  00179C  0E07               	movlw	7
  4854  00179E  1426               	andwf	TFT_DrawBitmap@i^0,w,c
  4855  0017A0  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4856  0017A2  0E00               	movlw	0
  4857  0017A4  1427               	andwf	(TFT_DrawBitmap@i+1)^0,w,c
  4858  0017A6  6E20               	movwf	(??_TFT_DrawBitmap+1)^0,c
  4859  0017A8  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4860  0017AA  1020               	iorwf	(??_TFT_DrawBitmap+1)^0,w,c
  4861  0017AC  B4D8               	btfsc	status,2,c
  4862  0017AE  EFDB  F00B         	goto	u4581
  4863  0017B2  EFDD  F00B         	goto	u4580
  4864  0017B6                     u4581:
  4865  0017B6  EFE1  F00B         	goto	l5073
  4866  0017BA                     u4580:
  4867  0017BA                     
  4868                           ;TFT.c: 319: byte >>= 1;
  4869  0017BA  90D8               	bcf	status,0,c
  4870  0017BC  3225               	rrcf	TFT_DrawBitmap@byte^0,f,c
  4871                           
  4872                           ;TFT.c: 320: } else {
  4873  0017BE  EFEA  F00B         	goto	l5077
  4874  0017C2                     l5073:
  4875                           
  4876                           ;TFT.c: 321: byte = *bitmap++;
  4877  0017C2  C01B  FFF6         	movff	TFT_DrawBitmap@bitmap,tblptrl
  4878  0017C6  C01C  FFF7         	movff	TFT_DrawBitmap@bitmap+1,tblptrh
  4879  0017CA                     	if	0	;tblptru may be non-zero
  4880  0017CA                     	endif
  4881  0017CA                     	if	0	;tblptru may be non-zero
  4882  0017CA                     	endif
  4883  0017CA  0008               	tblrd		*
  4884  0017CC  CFF5 F025          	movff	tablat,TFT_DrawBitmap@byte
  4885  0017D0  4A1B               	infsnz	TFT_DrawBitmap@bitmap^0,f,c
  4886  0017D2  2A1C               	incf	(TFT_DrawBitmap@bitmap+1)^0,f,c
  4887  0017D4                     l5077:
  4888                           
  4889                           ;TFT.c: 322: };TFT.c: 323: if(byte & 0x01) TFT_DrawPixel((x + i), y, color);
  4890  0017D4  A025               	btfss	TFT_DrawBitmap@byte^0,0,c
  4891  0017D6  EFEF  F00B         	goto	u4591
  4892  0017DA  EFF1  F00B         	goto	u4590
  4893  0017DE                     u4591:
  4894  0017DE  EF01  F00C         	goto	l5081
  4895  0017E2                     u4590:
  4896  0017E2  5026               	movf	TFT_DrawBitmap@i^0,w,c
  4897  0017E4  2417               	addwf	TFT_DrawBitmap@x^0,w,c
  4898  0017E6  6E0D               	movwf	TFT_DrawPixel@x^0,c
  4899  0017E8  5027               	movf	(TFT_DrawBitmap@i+1)^0,w,c
  4900  0017EA  2018               	addwfc	(TFT_DrawBitmap@x+1)^0,w,c
  4901  0017EC  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  4902  0017EE  C019  F00F         	movff	TFT_DrawBitmap@y,TFT_DrawPixel@y
  4903  0017F2  C01A  F010         	movff	TFT_DrawBitmap@y+1,TFT_DrawPixel@y+1
  4904  0017F6  C01D  F011         	movff	TFT_DrawBitmap@color,TFT_DrawPixel@color
  4905  0017FA  C01E  F012         	movff	TFT_DrawBitmap@color+1,TFT_DrawPixel@color+1
  4906  0017FE  EC77  F00D         	call	_TFT_DrawPixel	;wreg free
  4907  001802                     l5081:
  4908  001802  4A26               	infsnz	TFT_DrawBitmap@i^0,f,c
  4909  001804  2A27               	incf	(TFT_DrawBitmap@i+1)^0,f,c
  4910  001806                     l5083:
  4911  001806  5021               	movf	TFT_DrawBitmap@w^0,w,c
  4912  001808  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4913  00180A  6A20               	clrf	(??_TFT_DrawBitmap+1)^0,c
  4914  00180C  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4915  00180E  5C26               	subwf	TFT_DrawBitmap@i^0,w,c
  4916  001810  5020               	movf	(??_TFT_DrawBitmap+1)^0,w,c
  4917  001812  5827               	subwfb	(TFT_DrawBitmap@i+1)^0,w,c
  4918  001814  A0D8               	btfss	status,0,c
  4919  001816  EF0F  F00C         	goto	u4601
  4920  00181A  EF11  F00C         	goto	u4600
  4921  00181E                     u4601:
  4922  00181E  EFCE  F00B         	goto	l5069
  4923  001822                     u4600:
  4924  001822  4A23               	infsnz	TFT_DrawBitmap@j^0,f,c
  4925  001824  2A24               	incf	(TFT_DrawBitmap@j+1)^0,f,c
  4926  001826  4A19               	infsnz	TFT_DrawBitmap@y^0,f,c
  4927  001828  2A1A               	incf	(TFT_DrawBitmap@y+1)^0,f,c
  4928  00182A                     l5087:
  4929  00182A  5022               	movf	TFT_DrawBitmap@h^0,w,c
  4930  00182C  6E1F               	movwf	??_TFT_DrawBitmap^0,c
  4931  00182E  6A20               	clrf	(??_TFT_DrawBitmap+1)^0,c
  4932  001830  501F               	movf	??_TFT_DrawBitmap^0,w,c
  4933  001832  5C23               	subwf	TFT_DrawBitmap@j^0,w,c
  4934  001834  5020               	movf	(??_TFT_DrawBitmap+1)^0,w,c
  4935  001836  5824               	subwfb	(TFT_DrawBitmap@j+1)^0,w,c
  4936  001838  A0D8               	btfss	status,0,c
  4937  00183A  EF21  F00C         	goto	u4611
  4938  00183E  EF23  F00C         	goto	u4610
  4939  001842                     u4611:
  4940  001842  EFC8  F00B         	goto	l5067
  4941  001846                     u4610:
  4942  001846  0012               	return		;funcret
  4943  001848                     __end_of_TFT_DrawBitmap:
  4944                           	opt callstack 0
  4945                           
  4946 ;; *************** function _Ecg_Draw *****************
  4947 ;; Defined at:
  4948 ;;		line 165 in file "ecg.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  ecg             2   55[COMRAM] unsigned int 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0
  4963 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4965 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4966 ;;Total ram usage:        4 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    6
  4969 ;; This function calls:
  4970 ;;		_Ecg_Read
  4971 ;;		_TFT_DrawFillRect
  4972 ;;		_TFT_DrawLine
  4973 ;;		_TFT_GetHeight
  4974 ;;		_TFT_GetWidth
  4975 ;;		___lwdiv
  4976 ;; This function is called by:
  4977 ;;		_Ecg_ProcessEcg
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text14
  4982  001848                     __ptext14:
  4983                           	opt callstack 0
  4984  001848                     _Ecg_Draw:
  4985                           	opt callstack 21
  4986  001848                     
  4987                           ;ecg.c: 166: uint16_t ecg = Ecg_Read();
  4988  001848  EC90  F012         	call	_Ecg_Read	;wreg free
  4989  00184C  C005  F038         	movff	?_Ecg_Read,Ecg_Draw@ecg
  4990  001850  C006  F039         	movff	?_Ecg_Read+1,Ecg_Draw@ecg+1
  4991  001854                     
  4992                           ;ecg.c: 167: ecg /= 5;
  4993  001854  C038  F005         	movff	Ecg_Draw@ecg,___lwdiv@dividend
  4994  001858  C039  F006         	movff	Ecg_Draw@ecg+1,___lwdiv@dividend+1
  4995  00185C  0E00               	movlw	0
  4996  00185E  6E08               	movwf	(___lwdiv@divisor+1)^0,c
  4997  001860  0E05               	movlw	5
  4998  001862  6E07               	movwf	___lwdiv@divisor^0,c
  4999  001864  ECCC  F012         	call	___lwdiv	;wreg free
  5000  001868  C005  F038         	movff	?___lwdiv,Ecg_Draw@ecg
  5001  00186C  C006  F039         	movff	?___lwdiv+1,Ecg_Draw@ecg+1
  5002  001870                     
  5003                           ;ecg.c: 168: Ecg_Y = TFT_GetHeight() - ecg;
  5004  001870  ECFB  F015         	call	_TFT_GetHeight	;wreg free
  5005  001874  5038               	movf	Ecg_Draw@ecg^0,w,c
  5006  001876  5C05               	subwf	?_TFT_GetHeight^0,w,c
  5007  001878  0100               	movlb	0	; () banked
  5008  00187A  6FE5               	movwf	_Ecg_Y& (0+255),b
  5009  00187C  5039               	movf	(Ecg_Draw@ecg+1)^0,w,c
  5010  00187E  5806               	subwfb	(?_TFT_GetHeight+1)^0,w,c
  5011  001880  6FE6               	movwf	(_Ecg_Y+1)& (0+255),b
  5012  001882                     
  5013                           ; BSR set to: 0
  5014                           ;ecg.c: 169: TFT_DrawFillRect(Ecg_X, 33, 20, (TFT_GetHeight() - 33), 0x0821);
  5015  001882  ECFB  F015         	call	_TFT_GetHeight	;wreg free
  5016  001886  0EDF               	movlw	223
  5017  001888  2405               	addwf	?_TFT_GetHeight^0,w,c
  5018  00188A  6E36               	movwf	_Ecg_Draw$2263^0,c
  5019  00188C  0EFF               	movlw	255
  5020  00188E  2006               	addwfc	(?_TFT_GetHeight+1)^0,w,c
  5021  001890  6E37               	movwf	(_Ecg_Draw$2263+1)^0,c
  5022  001892                     
  5023                           ;ecg.c: 169: TFT_DrawFillRect(Ecg_X, 33, 20, (TFT_GetHeight() - 33), 0x0821);
  5024  001892  C058  F020         	movff	_Ecg_X,TFT_DrawFillRect@x
  5025  001896  C059  F021         	movff	_Ecg_X+1,TFT_DrawFillRect@x+1
  5026  00189A  0E00               	movlw	0
  5027  00189C  6E23               	movwf	(TFT_DrawFillRect@y+1)^0,c
  5028  00189E  0E21               	movlw	33
  5029  0018A0  6E22               	movwf	TFT_DrawFillRect@y^0,c
  5030  0018A2  0E00               	movlw	0
  5031  0018A4  6E25               	movwf	(TFT_DrawFillRect@w+1)^0,c
  5032  0018A6  0E14               	movlw	20
  5033  0018A8  6E24               	movwf	TFT_DrawFillRect@w^0,c
  5034  0018AA  C036  F026         	movff	_Ecg_Draw$2263,TFT_DrawFillRect@h
  5035  0018AE  C037  F027         	movff	_Ecg_Draw$2263+1,TFT_DrawFillRect@h+1
  5036  0018B2  0E08               	movlw	8
  5037  0018B4  6E29               	movwf	(TFT_DrawFillRect@color+1)^0,c
  5038  0018B6  0E21               	movlw	33
  5039  0018B8  6E28               	movwf	TFT_DrawFillRect@color^0,c
  5040  0018BA  EC14  F012         	call	_TFT_DrawFillRect	;wreg free
  5041  0018BE                     
  5042                           ;ecg.c: 170: TFT_DrawLine(Ecg_Xold, Ecg_Yold, Ecg_X, Ecg_Y, 0x07E0);
  5043  0018BE  C0E7  F017         	movff	_Ecg_Xold,TFT_DrawLine@x0
  5044  0018C2  C0E8  F018         	movff	_Ecg_Xold+1,TFT_DrawLine@x0+1
  5045  0018C6  C0E3  F019         	movff	_Ecg_Yold,TFT_DrawLine@y0
  5046  0018CA  C0E4  F01A         	movff	_Ecg_Yold+1,TFT_DrawLine@y0+1
  5047  0018CE  C058  F01B         	movff	_Ecg_X,TFT_DrawLine@x1
  5048  0018D2  C059  F01C         	movff	_Ecg_X+1,TFT_DrawLine@x1+1
  5049  0018D6  C0E5  F01D         	movff	_Ecg_Y,TFT_DrawLine@y1
  5050  0018DA  C0E6  F01E         	movff	_Ecg_Y+1,TFT_DrawLine@y1+1
  5051  0018DE  0E07               	movlw	7
  5052  0018E0  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  5053  0018E2  0EE0               	movlw	224
  5054  0018E4  6E1F               	movwf	TFT_DrawLine@color^0,c
  5055  0018E6  ECAA  F005         	call	_TFT_DrawLine	;wreg free
  5056  0018EA                     
  5057                           ;ecg.c: 171: Ecg_Xold = Ecg_X;
  5058  0018EA  C058  F0E7         	movff	_Ecg_X,_Ecg_Xold
  5059  0018EE  C059  F0E8         	movff	_Ecg_X+1,_Ecg_Xold+1
  5060  0018F2                     
  5061                           ;ecg.c: 172: Ecg_Yold = Ecg_Y;
  5062  0018F2  C0E5  F0E3         	movff	_Ecg_Y,_Ecg_Yold
  5063  0018F6  C0E6  F0E4         	movff	_Ecg_Y+1,_Ecg_Yold+1
  5064  0018FA                     
  5065                           ;ecg.c: 173: Ecg_X++;
  5066  0018FA  4A58               	infsnz	_Ecg_X^0,f,c
  5067  0018FC  2A59               	incf	(_Ecg_X+1)^0,f,c
  5068  0018FE                     
  5069                           ;ecg.c: 174: if(Ecg_X == TFT_GetWidth()) {
  5070  0018FE  ECD4  F015         	call	_TFT_GetWidth	;wreg free
  5071  001902  5058               	movf	_Ecg_X^0,w,c
  5072  001904  1805               	xorwf	?_TFT_GetWidth^0,w,c
  5073  001906  E107               	bnz	u4781
  5074  001908  5059               	movf	(_Ecg_X+1)^0,w,c
  5075  00190A  1806               	xorwf	(?_TFT_GetWidth+1)^0,w,c
  5076  00190C  A4D8               	btfss	status,2,c
  5077  00190E  EF8B  F00C         	goto	u4781
  5078  001912  EF8D  F00C         	goto	u4780
  5079  001916                     u4781:
  5080  001916  EF96  F00C         	goto	l487
  5081  00191A                     u4780:
  5082  00191A                     
  5083                           ;ecg.c: 175: Ecg_X = 0;
  5084  00191A  0E00               	movlw	0
  5085  00191C  6E59               	movwf	(_Ecg_X+1)^0,c
  5086  00191E  0E00               	movlw	0
  5087  001920  6E58               	movwf	_Ecg_X^0,c
  5088                           
  5089                           ;ecg.c: 176: Ecg_Xold = 0;
  5090  001922  0E00               	movlw	0
  5091  001924  0100               	movlb	0	; () banked
  5092  001926  6FE8               	movwf	(_Ecg_Xold+1)& (0+255),b
  5093  001928  0E00               	movlw	0
  5094  00192A  6FE7               	movwf	_Ecg_Xold& (0+255),b
  5095  00192C                     l487:
  5096  00192C  0012               	return		;funcret
  5097  00192E                     __end_of_Ecg_Draw:
  5098                           	opt callstack 0
  5099                           
  5100 ;; *************** function ___lwdiv *****************
  5101 ;; Defined at:
  5102 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/lwdiv.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  dividend        2    4[COMRAM] unsigned int 
  5105 ;;  divisor         2    6[COMRAM] unsigned int 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  quotient        2    8[COMRAM] unsigned int 
  5108 ;;  counter         1   10[COMRAM] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  2    4[COMRAM] unsigned int 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5118 ;;      Params:         4       0       0       0       0       0       0       0       0
  5119 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5121 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5122 ;;Total ram usage:        7 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    2
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_Ecg_Draw
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text15
  5133  002598                     __ptext15:
  5134                           	opt callstack 0
  5135  002598                     ___lwdiv:
  5136                           	opt callstack 24
  5137  002598  0E00               	movlw	0
  5138  00259A  6E0A               	movwf	(___lwdiv@quotient+1)^0,c
  5139  00259C  0E00               	movlw	0
  5140  00259E  6E09               	movwf	___lwdiv@quotient^0,c
  5141  0025A0  5007               	movf	___lwdiv@divisor^0,w,c
  5142  0025A2  1008               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5143  0025A4  B4D8               	btfsc	status,2,c
  5144  0025A6  EFD7  F012         	goto	u2931
  5145  0025AA  EFD9  F012         	goto	u2930
  5146  0025AE                     u2931:
  5147  0025AE  EF01  F013         	goto	l1237
  5148  0025B2                     u2930:
  5149  0025B2  0E01               	movlw	1
  5150  0025B4  6E0B               	movwf	___lwdiv@counter^0,c
  5151  0025B6  EFE1  F012         	goto	l3847
  5152  0025BA                     l3845:
  5153  0025BA  90D8               	bcf	status,0,c
  5154  0025BC  3607               	rlcf	___lwdiv@divisor^0,f,c
  5155  0025BE  3608               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5156  0025C0  2A0B               	incf	___lwdiv@counter^0,f,c
  5157  0025C2                     l3847:
  5158  0025C2  AE08               	btfss	(___lwdiv@divisor+1)^0,7,c
  5159  0025C4  EFE6  F012         	goto	u2941
  5160  0025C8  EFE8  F012         	goto	u2940
  5161  0025CC                     u2941:
  5162  0025CC  EFDD  F012         	goto	l3845
  5163  0025D0                     u2940:
  5164  0025D0                     l3849:
  5165  0025D0  90D8               	bcf	status,0,c
  5166  0025D2  3609               	rlcf	___lwdiv@quotient^0,f,c
  5167  0025D4  360A               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5168  0025D6  5007               	movf	___lwdiv@divisor^0,w,c
  5169  0025D8  5C05               	subwf	___lwdiv@dividend^0,w,c
  5170  0025DA  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  5171  0025DC  5806               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5172  0025DE  A0D8               	btfss	status,0,c
  5173  0025E0  EFF4  F012         	goto	u2951
  5174  0025E4  EFF6  F012         	goto	u2950
  5175  0025E8                     u2951:
  5176  0025E8  EFFB  F012         	goto	l3857
  5177  0025EC                     u2950:
  5178  0025EC  5007               	movf	___lwdiv@divisor^0,w,c
  5179  0025EE  5E05               	subwf	___lwdiv@dividend^0,f,c
  5180  0025F0  5008               	movf	(___lwdiv@divisor+1)^0,w,c
  5181  0025F2  5A06               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5182  0025F4  8009               	bsf	___lwdiv@quotient^0,0,c
  5183  0025F6                     l3857:
  5184  0025F6  90D8               	bcf	status,0,c
  5185  0025F8  3208               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5186  0025FA  3207               	rrcf	___lwdiv@divisor^0,f,c
  5187  0025FC  2E0B               	decfsz	___lwdiv@counter^0,f,c
  5188  0025FE  EFE8  F012         	goto	l3849
  5189  002602                     l1237:
  5190  002602  C009  F005         	movff	___lwdiv@quotient,?___lwdiv
  5191  002606  C00A  F006         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5192  00260A  0012               	return		;funcret
  5193  00260C                     __end_of___lwdiv:
  5194                           	opt callstack 0
  5195                           
  5196 ;; *************** function _Ecg_Read *****************
  5197 ;; Defined at:
  5198 ;;		line 149 in file "ecg.c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;		None
  5201 ;; Auto vars:     Size  Location     Type
  5202 ;;  ecg             2    8[COMRAM] unsigned int 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  2    4[COMRAM] unsigned int 
  5205 ;; Registers used:
  5206 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5212 ;;      Params:         2       0       0       0       0       0       0       0       0
  5213 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5214 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5215 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5216 ;;Total ram usage:        6 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    2
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_Ecg_Draw
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text16
  5227  002520                     __ptext16:
  5228                           	opt callstack 0
  5229  002520                     _Ecg_Read:
  5230                           	opt callstack 24
  5231  002520                     
  5232                           ;ecg.c: 150: uint16_t ecg;;ecg.c: 151: ADCON0bits.CHS = 0b0000;
  5233  002520  0EC3               	movlw	-61
  5234  002522  16C2               	andwf	194,f,c	;volatile
  5235  002524                     
  5236                           ;ecg.c: 152: ADCON0bits.ADON = 1;
  5237  002524  80C2               	bsf	194,0,c	;volatile
  5238  002526                     
  5239                           ;ecg.c: 153: GO_nDONE = 1;
  5240  002526  82C2               	bsf	4034,1,c	;volatile
  5241  002528                     l479:
  5242  002528  B2C2               	btfsc	4034,1,c	;volatile
  5243  00252A  EF99  F012         	goto	u2671
  5244  00252E  EF9B  F012         	goto	u2670
  5245  002532                     u2671:
  5246  002532  EF94  F012         	goto	l479
  5247  002536                     u2670:
  5248  002536                     
  5249                           ;ecg.c: 155: ecg = ADRESH;
  5250  002536  CFC4 F009          	movff	4036,Ecg_Read@ecg	;volatile
  5251  00253A  6A0A               	clrf	(Ecg_Read@ecg+1)^0,c
  5252  00253C                     
  5253                           ;ecg.c: 156: ecg = ecg << 8;
  5254  00253C  5009               	movf	Ecg_Read@ecg^0,w,c
  5255  00253E  6E0A               	movwf	(Ecg_Read@ecg+1)^0,c
  5256  002540  6A09               	clrf	Ecg_Read@ecg^0,c
  5257  002542                     
  5258                           ;ecg.c: 157: ecg &= 0xFF00;
  5259  002542  0E00               	movlw	0
  5260  002544  1609               	andwf	Ecg_Read@ecg^0,f,c
  5261  002546  0EFF               	movlw	255
  5262  002548  160A               	andwf	(Ecg_Read@ecg+1)^0,f,c
  5263  00254A                     
  5264                           ;ecg.c: 158: ecg |= ADRESL;
  5265  00254A  50C3               	movf	195,w,c	;volatile
  5266  00254C  1209               	iorwf	Ecg_Read@ecg^0,f,c
  5267  00254E                     
  5268                           ;ecg.c: 159: ADCON0bits.ADON = 0;
  5269  00254E  90C2               	bcf	194,0,c	;volatile
  5270  002550                     
  5271                           ;ecg.c: 160: ECG_BUFFER.data[ECG_BUFFER.i++] = (uint8_t)(ecg >> 2);
  5272  002550  0E6D               	movlw	low _ECG_BUFFER
  5273  002552  0100               	movlb	0	; () banked
  5274  002554  2571               	addwf	(_ECG_BUFFER+4)& (0+255),w,b
  5275  002556  6ED9               	movwf	fsr2l,c
  5276  002558  6ADA               	clrf	fsr2h,c
  5277  00255A  0E00               	movlw	high _ECG_BUFFER
  5278  00255C  22DA               	addwfc	fsr2h,f,c
  5279  00255E  C009  F007         	movff	Ecg_Read@ecg,??_Ecg_Read
  5280  002562  C00A  F008         	movff	Ecg_Read@ecg+1,??_Ecg_Read+1
  5281  002566  90D8               	bcf	status,0,c
  5282  002568  3208               	rrcf	(??_Ecg_Read+1)^0,f,c
  5283  00256A  3207               	rrcf	??_Ecg_Read^0,f,c
  5284  00256C  90D8               	bcf	status,0,c
  5285  00256E  3208               	rrcf	(??_Ecg_Read+1)^0,f,c
  5286  002570  3207               	rrcf	??_Ecg_Read^0,f,c
  5287  002572  5007               	movf	??_Ecg_Read^0,w,c
  5288  002574  6EDF               	movwf	indf2,c
  5289  002576                     
  5290                           ; BSR set to: 0
  5291  002576  2B71               	incf	(_ECG_BUFFER+4)& (0+255),f,b
  5292  002578                     
  5293                           ; BSR set to: 0
  5294                           ;ecg.c: 161: if(ECG_BUFFER.i == 4) ECG_BUFFER.i = 0;
  5295  002578  0E04               	movlw	4
  5296  00257A  1971               	xorwf	(_ECG_BUFFER+4)& (0+255),w,b
  5297  00257C  A4D8               	btfss	status,2,c
  5298  00257E  EFC3  F012         	goto	u2681
  5299  002582  EFC5  F012         	goto	u2680
  5300  002586                     u2681:
  5301  002586  EFC7  F012         	goto	l3699
  5302  00258A                     u2680:
  5303  00258A                     
  5304                           ; BSR set to: 0
  5305  00258A  0E00               	movlw	0
  5306  00258C  6F71               	movwf	(_ECG_BUFFER+4)& (0+255),b
  5307  00258E                     l3699:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;ecg.c: 162: return ecg;
  5311  00258E  C009  F005         	movff	Ecg_Read@ecg,?_Ecg_Read
  5312  002592  C00A  F006         	movff	Ecg_Read@ecg+1,?_Ecg_Read+1
  5313  002596                     
  5314                           ; BSR set to: 0
  5315  002596  0012               	return		;funcret
  5316  002598                     __end_of_Ecg_Read:
  5317                           	opt callstack 0
  5318                           
  5319 ;; *************** function _init *****************
  5320 ;; Defined at:
  5321 ;;		line 15 in file "init.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;		None
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;		None
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5335 ;;      Params:         0       0       0       0       0       0       0       0       0
  5336 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5337 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5338 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5339 ;;Total ram usage:        2 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    2
  5342 ;; This function calls:
  5343 ;;		Nothing
  5344 ;; This function is called by:
  5345 ;;		_main
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text17
  5350  00260C                     __ptext17:
  5351                           	opt callstack 0
  5352  00260C                     _init:
  5353                           	opt callstack 28
  5354  00260C                     
  5355                           ;init.c: 17: OSCCONbits.IDLEN = 0;
  5356  00260C  9ED3               	bcf	211,7,c	;volatile
  5357  00260E                     
  5358                           ;init.c: 18: OSCCONbits.IRCF = 0b111;
  5359  00260E  0E70               	movlw	112
  5360  002610  12D3               	iorwf	211,f,c	;volatile
  5361                           
  5362                           ;init.c: 19: OSCCONbits.SCS = 0b00;
  5363  002612  0EFC               	movlw	-4
  5364  002614  16D3               	andwf	211,f,c	;volatile
  5365  002616                     
  5366                           ;init.c: 20: OSCTUNEbits.INTSRC = 1;
  5367  002616  8E9B               	bsf	155,7,c	;volatile
  5368                           
  5369                           ;init.c: 21: OSCTUNEbits.TUN = 0;
  5370  002618  0EE0               	movlw	-32
  5371  00261A  169B               	andwf	155,f,c	;volatile
  5372  00261C                     
  5373                           ;init.c: 24: _delay((unsigned long)((100)*(48000000/4000.0)));
  5374  00261C  0E07               	movlw	7
  5375  00261E  6E06               	movwf	(??_init+1)^0,c
  5376  002620  0E17               	movlw	23
  5377  002622  6E05               	movwf	??_init^0,c
  5378  002624  0E6A               	movlw	106
  5379  002626                     u5567:
  5380  002626  2EE8               	decfsz	wreg,f,c
  5381  002628  D7FE               	bra	u5567
  5382  00262A  2E05               	decfsz	??_init^0,f,c
  5383  00262C  D7FC               	bra	u5567
  5384  00262E  2E06               	decfsz	(??_init+1)^0,f,c
  5385  002630  D7FA               	bra	u5567
  5386  002632  D000               	nop2	
  5387  002634                     
  5388                           ;init.c: 27: UCONbits.USBEN = 0;
  5389  002634  966D               	bcf	109,3,c	;volatile
  5390  002636                     
  5391                           ;init.c: 28: UCFGbits.UTRDIS = 1;
  5392  002636  866F               	bsf	111,3,c	;volatile
  5393  002638                     
  5394                           ;init.c: 41: TRISA = 0b00001011;
  5395  002638  0E0B               	movlw	11
  5396  00263A  6E92               	movwf	146,c	;volatile
  5397  00263C                     
  5398                           ;init.c: 42: LATA = 0x00;
  5399  00263C  0E00               	movlw	0
  5400  00263E  6E89               	movwf	137,c	;volatile
  5401  002640                     
  5402                           ;init.c: 48: RBPU = 1;
  5403  002640  8EF1               	bsf	4081,7,c	;volatile
  5404  002642                     
  5405                           ;init.c: 49: TRISB = 0x00;
  5406  002642  0E00               	movlw	0
  5407  002644  6E93               	movwf	147,c	;volatile
  5408  002646                     
  5409                           ;init.c: 50: LATB = 0x00;
  5410  002646  0E00               	movlw	0
  5411  002648  6E8A               	movwf	138,c	;volatile
  5412  00264A                     
  5413                           ;init.c: 63: TRISC = 0b11110000;
  5414  00264A  0EF0               	movlw	240
  5415  00264C  6E94               	movwf	148,c	;volatile
  5416  00264E                     
  5417                           ;init.c: 64: LATC = 0x00;
  5418  00264E  0E00               	movlw	0
  5419  002650  6E8B               	movwf	139,c	;volatile
  5420  002652                     
  5421                           ;init.c: 67: ADCON0bits.ADON = 0;
  5422  002652  90C2               	bcf	194,0,c	;volatile
  5423  002654                     
  5424                           ;init.c: 68: ADCON1bits.VCFG = 0b00;
  5425  002654  0ECF               	movlw	-49
  5426  002656  16C1               	andwf	193,f,c	;volatile
  5427  002658                     
  5428                           ;init.c: 69: ADCON1bits.PCFG = 0b1110;
  5429  002658  50C1               	movf	193,w,c	;volatile
  5430  00265A  0BF0               	andlw	-16
  5431  00265C  090E               	iorlw	14
  5432  00265E  6EC1               	movwf	193,c	;volatile
  5433  002660                     
  5434                           ;init.c: 70: ADCON2bits.ADFM = 1;
  5435  002660  8EC0               	bsf	192,7,c	;volatile
  5436  002662                     
  5437                           ;init.c: 71: ADCON2bits.ACQT = 0b000;
  5438  002662  0EC7               	movlw	-57
  5439  002664  16C0               	andwf	192,f,c	;volatile
  5440  002666                     
  5441                           ;init.c: 72: ADCON2bits.ADCS = 0b010;
  5442  002666  50C0               	movf	192,w,c	;volatile
  5443  002668  0BF8               	andlw	-8
  5444  00266A  0902               	iorlw	2
  5445  00266C  6EC0               	movwf	192,c	;volatile
  5446  00266E                     
  5447                           ;init.c: 75: T3CONbits.T3CKPS = 0b00;
  5448  00266E  0ECF               	movlw	-49
  5449  002670  16B1               	andwf	177,f,c	;volatile
  5450  002672                     
  5451                           ;init.c: 76: T3CONbits.TMR3CS = 0;
  5452  002672  92B1               	bcf	177,1,c	;volatile
  5453  002674                     
  5454                           ;init.c: 77: T3CONbits.TMR3ON = 1;
  5455  002674  80B1               	bsf	177,0,c	;volatile
  5456  002676                     
  5457                           ;init.c: 78: TMR3IE = 1;
  5458  002676  82A0               	bsf	4000,1,c	;volatile
  5459  002678                     
  5460                           ;init.c: 81: PEIE = 1;
  5461  002678  8CF2               	bsf	4082,6,c	;volatile
  5462  00267A                     
  5463                           ;init.c: 82: GIE = 1;
  5464  00267A  8EF2               	bsf	4082,7,c	;volatile
  5465  00267C  0012               	return		;funcret
  5466  00267E                     __end_of_init:
  5467                           	opt callstack 0
  5468                           
  5469 ;; *************** function _TFT_Init *****************
  5470 ;; Defined at:
  5471 ;;		line 46 in file "TFT.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  orientation     1    wreg     unsigned char 
  5474 ;;  color           2   34[COMRAM] unsigned int 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  orientation     1   38[COMRAM] unsigned char 
  5477 ;;  i               2   45[COMRAM] unsigned int 
  5478 ;;  cmd             2   43[COMRAM] unsigned int 
  5479 ;;  initSequence    2   41[COMRAM] unsigned int 
  5480 ;;  data            2   39[COMRAM] unsigned int 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5490 ;;      Params:         2       0       0       0       0       0       0       0       0
  5491 ;;      Locals:         9       0       0       0       0       0       0       0       0
  5492 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5493 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5494 ;;Total ram usage:       13 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    6
  5497 ;; This function calls:
  5498 ;;		_TFT_OrientationSet
  5499 ;;		_TFT_Reset
  5500 ;;		_TFT_WriteRegister
  5501 ;; This function is called by:
  5502 ;;		_main
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text18
  5507  001A10                     __ptext18:
  5508                           	opt callstack 0
  5509  001A10                     _TFT_Init:
  5510                           	opt callstack 24
  5511                           
  5512                           ;incstack = 0
  5513                           ;TFT_Init@orientation stored from wreg
  5514  001A10  6E27               	movwf	TFT_Init@orientation^0,c
  5515  001A12                     
  5516                           ;TFT.c: 47: TFT_Reset();
  5517  001A12  EC04  F018         	call	_TFT_Reset	;wreg free
  5518  001A16                     
  5519                           ;TFT.c: 48: _delay((unsigned long)((200)*(48000000/4000.0)));
  5520  001A16  0E0D               	movlw	13
  5521  001A18  6E26               	movwf	(??_TFT_Init+1)^0,c
  5522  001A1A  0E2D               	movlw	45
  5523  001A1C  6E25               	movwf	??_TFT_Init^0,c
  5524  001A1E  0ED8               	movlw	216
  5525  001A20                     u5577:
  5526  001A20  2EE8               	decfsz	wreg,f,c
  5527  001A22  D7FE               	bra	u5577
  5528  001A24  2E25               	decfsz	??_TFT_Init^0,f,c
  5529  001A26  D7FC               	bra	u5577
  5530  001A28  2E26               	decfsz	(??_TFT_Init+1)^0,f,c
  5531  001A2A  D7FA               	bra	u5577
  5532  001A2C                     
  5533                           ;TFT.c: 51: uint16_t i=0, cmd, data;
  5534  001A2C  0E00               	movlw	0
  5535  001A2E  6E2F               	movwf	(TFT_Init@i+1)^0,c
  5536  001A30  0E00               	movlw	0
  5537  001A32  6E2E               	movwf	TFT_Init@i^0,c
  5538  001A34                     
  5539                           ;TFT.c: 52: uint16_t initSequenceSize = sizeof(TFT_Init_Sequence) / sizeof(uint16_t);
  5540  001A34  0E00               	movlw	0
  5541  001A36  6E2B               	movwf	(TFT_Init@initSequenceSize+1)^0,c
  5542  001A38  0E66               	movlw	102
  5543  001A3A  6E2A               	movwf	TFT_Init@initSequenceSize^0,c
  5544                           
  5545                           ;TFT.c: 53: while(i != initSequenceSize) {
  5546  001A3C  EF63  F00D         	goto	l5721
  5547  001A40                     l5709:
  5548                           
  5549                           ;TFT.c: 54: cmd = TFT_Init_Sequence[i++];
  5550  001A40  90D8               	bcf	status,0,c
  5551  001A42  342E               	rlcf	TFT_Init@i^0,w,c
  5552  001A44  6EF6               	movwf	tblptrl,c
  5553  001A46  342F               	rlcf	(TFT_Init@i+1)^0,w,c
  5554  001A48  6EF7               	movwf	tblptrh,c
  5555  001A4A  0E1F               	movlw	low _TFT_Init_Sequence
  5556  001A4C  26F6               	addwf	tblptrl,f,c
  5557  001A4E  0E5E               	movlw	high _TFT_Init_Sequence
  5558  001A50  22F7               	addwfc	tblptrh,f,c
  5559  001A52                     	if	0	;There are less than 3 active tblptr bytes
  5560  001A52                     	endif
  5561  001A52  0009               	tblrd		*+
  5562  001A54  CFF5 F02C          	movff	tablat,TFT_Init@cmd
  5563  001A58  000A               	tblrd		*-
  5564  001A5A  CFF5 F02D          	movff	tablat,TFT_Init@cmd+1
  5565  001A5E  4A2E               	infsnz	TFT_Init@i^0,f,c
  5566  001A60  2A2F               	incf	(TFT_Init@i+1)^0,f,c
  5567  001A62                     
  5568                           ;TFT.c: 55: data = TFT_Init_Sequence[i++];
  5569  001A62  90D8               	bcf	status,0,c
  5570  001A64  342E               	rlcf	TFT_Init@i^0,w,c
  5571  001A66  6EF6               	movwf	tblptrl,c
  5572  001A68  342F               	rlcf	(TFT_Init@i+1)^0,w,c
  5573  001A6A  6EF7               	movwf	tblptrh,c
  5574  001A6C  0E1F               	movlw	low _TFT_Init_Sequence
  5575  001A6E  26F6               	addwf	tblptrl,f,c
  5576  001A70  0E5E               	movlw	high _TFT_Init_Sequence
  5577  001A72  22F7               	addwfc	tblptrh,f,c
  5578  001A74                     	if	0	;There are less than 3 active tblptr bytes
  5579  001A74                     	endif
  5580  001A74  0009               	tblrd		*+
  5581  001A76  CFF5 F028          	movff	tablat,TFT_Init@data
  5582  001A7A  000A               	tblrd		*-
  5583  001A7C  CFF5 F029          	movff	tablat,TFT_Init@data+1
  5584  001A80  4A2E               	infsnz	TFT_Init@i^0,f,c
  5585  001A82  2A2F               	incf	(TFT_Init@i+1)^0,f,c
  5586  001A84                     
  5587                           ;TFT.c: 56: if(cmd == 0xFFFF) {
  5588  001A84  282C               	incf	TFT_Init@cmd^0,w,c
  5589  001A86  E106               	bnz	u5471
  5590  001A88  282D               	incf	(TFT_Init@cmd+1)^0,w,c
  5591  001A8A  A4D8               	btfss	status,2,c
  5592  001A8C  EF4A  F00D         	goto	u5471
  5593  001A90  EF4C  F00D         	goto	u5470
  5594  001A94                     u5471:
  5595  001A94  EF59  F00D         	goto	l5719
  5596  001A98                     u5470:
  5597  001A98                     
  5598                           ;TFT.c: 57: _delay((unsigned long)((200)*(48000000/4000.0)));
  5599  001A98  0E0D               	movlw	13
  5600  001A9A  6E26               	movwf	(??_TFT_Init+1)^0,c
  5601  001A9C  0E2D               	movlw	45
  5602  001A9E  6E25               	movwf	??_TFT_Init^0,c
  5603  001AA0  0ED8               	movlw	216
  5604  001AA2                     u5587:
  5605  001AA2  2EE8               	decfsz	wreg,f,c
  5606  001AA4  D7FE               	bra	u5587
  5607  001AA6  2E25               	decfsz	??_TFT_Init^0,f,c
  5608  001AA8  D7FC               	bra	u5587
  5609  001AAA  2E26               	decfsz	(??_TFT_Init+1)^0,f,c
  5610  001AAC  D7FA               	bra	u5587
  5611                           
  5612                           ;TFT.c: 58: } else {
  5613  001AAE  EF63  F00D         	goto	l5721
  5614  001AB2                     l5719:
  5615                           
  5616                           ;TFT.c: 59: TFT_WriteRegister(cmd, data);
  5617  001AB2  C02C  F005         	movff	TFT_Init@cmd,TFT_WriteRegister@reg
  5618  001AB6  C02D  F006         	movff	TFT_Init@cmd+1,TFT_WriteRegister@reg+1
  5619  001ABA  C028  F007         	movff	TFT_Init@data,TFT_WriteRegister@data
  5620  001ABE  C029  F008         	movff	TFT_Init@data+1,TFT_WriteRegister@data+1
  5621  001AC2  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  5622  001AC6                     l5721:
  5623  001AC6  502A               	movf	TFT_Init@initSequenceSize^0,w,c
  5624  001AC8  182E               	xorwf	TFT_Init@i^0,w,c
  5625  001ACA  E107               	bnz	u5481
  5626  001ACC  502B               	movf	(TFT_Init@initSequenceSize+1)^0,w,c
  5627  001ACE  182F               	xorwf	(TFT_Init@i+1)^0,w,c
  5628  001AD0  A4D8               	btfss	status,2,c
  5629  001AD2  EF6D  F00D         	goto	u5481
  5630  001AD6  EF6F  F00D         	goto	u5480
  5631  001ADA                     u5481:
  5632  001ADA  EF20  F00D         	goto	l5709
  5633  001ADE                     u5480:
  5634  001ADE                     
  5635                           ;TFT.c: 60: };TFT.c: 61: };TFT.c: 64: TFT_OrientationSet(orientation, color);
  5636  001ADE  C023  F020         	movff	TFT_Init@color,TFT_OrientationSet@color
  5637  001AE2  C024  F021         	movff	TFT_Init@color+1,TFT_OrientationSet@color+1
  5638  001AE6  5027               	movf	TFT_Init@orientation^0,w,c
  5639  001AE8  ECCD  F017         	call	_TFT_OrientationSet
  5640  001AEC  0012               	return		;funcret
  5641  001AEE                     __end_of_TFT_Init:
  5642                           	opt callstack 0
  5643                           
  5644 ;; *************** function _TFT_Reset *****************
  5645 ;; Defined at:
  5646 ;;		line 67 in file "TFT.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5660 ;;      Params:         0       0       0       0       0       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5662 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5663 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5664 ;;Total ram usage:        1 bytes
  5665 ;; Hardware stack levels used:    1
  5666 ;; Hardware stack levels required when called:    2
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_TFT_Init
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text19
  5675  003008                     __ptext19:
  5676                           	opt callstack 0
  5677  003008                     _TFT_Reset:
  5678                           	opt callstack 27
  5679  003008                     
  5680                           ;TFT.c: 68: TRISB = 0x00;;
  5681  003008  0E00               	movlw	0
  5682  00300A  6E93               	movwf	147,c	;volatile
  5683  00300C                     
  5684                           ;TFT.c: 69: PORTCbits.RC0 = 1;;
  5685  00300C  8082               	bsf	130,0,c	;volatile
  5686  00300E                     
  5687                           ;TFT.c: 70: PORTAbits.RA5 = 1;;
  5688  00300E  8A80               	bsf	128,5,c	;volatile
  5689  003010                     
  5690                           ;TFT.c: 71: PORTAbits.RA4 = 1;;
  5691  003010  8880               	bsf	128,4,c	;volatile
  5692  003012                     
  5693                           ;TFT.c: 72: PORTCbits.RC2 = 0;;
  5694  003012  9482               	bcf	130,2,c	;volatile
  5695  003014                     
  5696                           ;TFT.c: 73: _delay((unsigned long)((2)*(48000000/4000.0)));
  5697  003014  0E20               	movlw	32
  5698  003016  6E05               	movwf	??_TFT_Reset^0,c
  5699  003018  0E2A               	movlw	42
  5700  00301A                     u5597:
  5701  00301A  2EE8               	decfsz	wreg,f,c
  5702  00301C  D7FE               	bra	u5597
  5703  00301E  2E05               	decfsz	??_TFT_Reset^0,f,c
  5704  003020  D7FC               	bra	u5597
  5705  003022                     
  5706                           ;TFT.c: 74: PORTCbits.RC2 = 1;;
  5707  003022  8482               	bsf	130,2,c	;volatile
  5708  003024  0012               	return		;funcret
  5709  003026                     __end_of_TFT_Reset:
  5710                           	opt callstack 0
  5711                           
  5712 ;; *************** function _TFT_OrientationSet *****************
  5713 ;; Defined at:
  5714 ;;		line 109 in file "TFT.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  orientation     1    wreg     unsigned char 
  5717 ;;  color           2   31[COMRAM] unsigned int 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  orientation     1   33[COMRAM] unsigned char 
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  1    wreg      void 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0, cstack
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5729 ;;      Params:         2       0       0       0       0       0       0       0       0
  5730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5732 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5733 ;;Total ram usage:        3 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    5
  5736 ;; This function calls:
  5737 ;;		_TFT_FullScreen
  5738 ;; This function is called by:
  5739 ;;		_TFT_Init
  5740 ;;		_TFT_ConsoleInit
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text20
  5745  002F9A                     __ptext20:
  5746                           	opt callstack 0
  5747  002F9A                     _TFT_OrientationSet:
  5748                           	opt callstack 24
  5749                           
  5750                           ;incstack = 0
  5751                           ;TFT_OrientationSet@orientation stored from wreg
  5752  002F9A  6E22               	movwf	TFT_OrientationSet@orientation^0,c
  5753  002F9C                     
  5754                           ;TFT.c: 110: if(orientation > 3) orientation = 0;
  5755  002F9C  0E03               	movlw	3
  5756  002F9E  6422               	cpfsgt	TFT_OrientationSet@orientation^0,c
  5757  002FA0  EFD4  F017         	goto	u5411
  5758  002FA4  EFD6  F017         	goto	u5410
  5759  002FA8                     u5411:
  5760  002FA8  EFD8  F017         	goto	l5655
  5761  002FAC                     u5410:
  5762  002FAC  0E00               	movlw	0
  5763  002FAE  6E22               	movwf	TFT_OrientationSet@orientation^0,c
  5764  002FB0                     l5655:
  5765                           
  5766                           ;TFT.c: 111: TFT_Orientation = orientation;
  5767  002FB0  C022  F057         	movff	TFT_OrientationSet@orientation,_TFT_Orientation
  5768  002FB4                     
  5769                           ;TFT.c: 112: TFT_FullScreen(color);
  5770  002FB4  C020  F01E         	movff	TFT_OrientationSet@color,TFT_FullScreen@color
  5771  002FB8  C021  F01F         	movff	TFT_OrientationSet@color+1,TFT_FullScreen@color+1
  5772  002FBC  ECDD  F014         	call	_TFT_FullScreen	;wreg free
  5773  002FC0  0012               	return		;funcret
  5774  002FC2                     __end_of_TFT_OrientationSet:
  5775                           	opt callstack 0
  5776                           
  5777 ;; *************** function _Ecg_Init *****************
  5778 ;; Defined at:
  5779 ;;		line 12 in file "ecg.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5796 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5797 ;;Total ram usage:        0 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    9
  5800 ;; This function calls:
  5801 ;;		_Ecg_Background_Leads_Failure
  5802 ;;		_Ecg_Background_Leads_Ok
  5803 ;;		_Ecg_CheckLeads
  5804 ;; This function is called by:
  5805 ;;		_main
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text21
  5810  002F6A                     __ptext21:
  5811                           	opt callstack 0
  5812  002F6A                     _Ecg_Init:
  5813                           	opt callstack 21
  5814  002F6A                     
  5815                           ;ecg.c: 13: if(Ecg_CheckLeads() == 0) {
  5816  002F6A  EC5D  F015         	call	_Ecg_CheckLeads	;wreg free
  5817  002F6E  5005               	movf	?_Ecg_CheckLeads^0,w,c
  5818  002F70  1006               	iorwf	(?_Ecg_CheckLeads+1)^0,w,c
  5819  002F72  A4D8               	btfss	status,2,c
  5820  002F74  EFBE  F017         	goto	u5491
  5821  002F78  EFC0  F017         	goto	u5490
  5822  002F7C                     u5491:
  5823  002F7C  EFC4  F017         	goto	l5737
  5824  002F80                     u5490:
  5825  002F80                     
  5826                           ;ecg.c: 14: Ecg_Background_Leads_Ok();
  5827  002F80  EC30  F010         	call	_Ecg_Background_Leads_Ok	;wreg free
  5828                           
  5829                           ;ecg.c: 15: } else {
  5830  002F84  EFC6  F017         	goto	l5739
  5831  002F88                     l5737:
  5832                           
  5833                           ;ecg.c: 16: Ecg_Background_Leads_Failure();
  5834  002F88  ECD5  F016         	call	_Ecg_Background_Leads_Failure	;wreg free
  5835  002F8C                     l5739:
  5836                           
  5837                           ;ecg.c: 17: };ecg.c: 18: ECG_HEARTBEAT.i = 0;
  5838  002F8C  0E00               	movlw	0
  5839  002F8E  0100               	movlb	0	; () banked
  5840  002F90  6F6C               	movwf	(_ECG_HEARTBEAT+12)& (0+255),b
  5841  002F92                     
  5842                           ; BSR set to: 0
  5843                           ;ecg.c: 19: ECG_BUFFER.i = 0;
  5844  002F92  0E00               	movlw	0
  5845  002F94  6F71               	movwf	(_ECG_BUFFER+4)& (0+255),b
  5846  002F96                     
  5847                           ; BSR set to: 0
  5848                           ;ecg.c: 20: ECG_HEARTRATE.processHeartbeat = 1;
  5849  002F96  8D72               	bsf	_ECG_HEARTRATE& (0+255),6,b
  5850  002F98                     
  5851                           ; BSR set to: 0
  5852  002F98  0012               	return		;funcret
  5853  002F9A                     __end_of_Ecg_Init:
  5854                           	opt callstack 0
  5855                           
  5856 ;; *************** function _Ecg_CheckLeads *****************
  5857 ;; Defined at:
  5858 ;;		line 141 in file "ecg.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;		None
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  leadsStatus     1    7[COMRAM] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  2    4[COMRAM] unsigned int 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5872 ;;      Params:         2       0       0       0       0       0       0       0       0
  5873 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5874 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5875 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5876 ;;Total ram usage:        4 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; Hardware stack levels required when called:    2
  5879 ;; This function calls:
  5880 ;;		Nothing
  5881 ;; This function is called by:
  5882 ;;		_Ecg_Init
  5883 ;;		_Ecg_ProcessEcg
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text22
  5888  002ABA                     __ptext22:
  5889                           	opt callstack 0
  5890  002ABA                     _Ecg_CheckLeads:
  5891                           	opt callstack 25
  5892  002ABA                     
  5893                           ;ecg.c: 142: uint8_t leadsStatus = 0;
  5894  002ABA  0E00               	movlw	0
  5895  002ABC  6E08               	movwf	Ecg_CheckLeads@leadsStatus^0,c
  5896  002ABE                     
  5897                           ;ecg.c: 143: if(PORTCbits.RC5 == 1) leadsStatus |= 0b00000010;
  5898  002ABE  AA82               	btfss	130,5,c	;volatile
  5899  002AC0  EF64  F015         	goto	u2961
  5900  002AC4  EF66  F015         	goto	u2960
  5901  002AC8                     u2961:
  5902  002AC8  EF67  F015         	goto	l3867
  5903  002ACC                     u2960:
  5904  002ACC  8208               	bsf	Ecg_CheckLeads@leadsStatus^0,1,c
  5905  002ACE                     l3867:
  5906                           
  5907                           ;ecg.c: 144: if(PORTCbits.RC4 == 1) leadsStatus |= 0b00000001;
  5908  002ACE  A882               	btfss	130,4,c	;volatile
  5909  002AD0  EF6C  F015         	goto	u2971
  5910  002AD4  EF6E  F015         	goto	u2970
  5911  002AD8                     u2971:
  5912  002AD8  EF6F  F015         	goto	l3871
  5913  002ADC                     u2970:
  5914  002ADC  8008               	bsf	Ecg_CheckLeads@leadsStatus^0,0,c
  5915  002ADE                     l3871:
  5916                           
  5917                           ;ecg.c: 145: ECG_FLAGS.leadsOk = (leadsStatus == 0) ? 1 : 0;
  5918  002ADE  5008               	movf	Ecg_CheckLeads@leadsStatus^0,w,c
  5919  002AE0  B4D8               	btfsc	status,2,c
  5920  002AE2  EF75  F015         	goto	u2981
  5921  002AE6  EF79  F015         	goto	u2980
  5922  002AEA                     u2981:
  5923  002AEA  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5924  002AEC  2A07               	incf	??_Ecg_CheckLeads^0,f,c
  5925  002AEE  EF7A  F015         	goto	u2998
  5926  002AF2                     u2980:
  5927  002AF2  6A07               	clrf	??_Ecg_CheckLeads^0,c
  5928  002AF4                     u2998:
  5929  002AF4  4607               	rlncf	??_Ecg_CheckLeads^0,f,c
  5930  002AF6  0100               	movlb	0	; () banked
  5931  002AF8  5180               	movf	_ECG_FLAGS& (0+255),w,b
  5932  002AFA  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5933  002AFC  0BFD               	andlw	-3
  5934  002AFE  1807               	xorwf	??_Ecg_CheckLeads^0,w,c
  5935  002B00  6F80               	movwf	_ECG_FLAGS& (0+255),b
  5936  002B02                     
  5937                           ; BSR set to: 0
  5938                           ;ecg.c: 146: return leadsStatus;
  5939  002B02  C008  F005         	movff	Ecg_CheckLeads@leadsStatus,?_Ecg_CheckLeads
  5940  002B06  6A06               	clrf	(?_Ecg_CheckLeads+1)^0,c
  5941  002B08                     
  5942                           ; BSR set to: 0
  5943  002B08  0012               	return		;funcret
  5944  002B0A                     __end_of_Ecg_CheckLeads:
  5945                           	opt callstack 0
  5946                           
  5947 ;; *************** function _Ecg_Background_Leads_Ok *****************
  5948 ;; Defined at:
  5949 ;;		line 180 in file "ecg.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;		None
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5963 ;;      Params:         0       0       0       0       0       0       0       0       0
  5964 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5965 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5966 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5967 ;;Total ram usage:        2 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    8
  5970 ;; This function calls:
  5971 ;;		_TFT_DrawLine
  5972 ;;		_TFT_DrawString
  5973 ;;		_TFT_FullScreen
  5974 ;;		_TFT_GetHeight
  5975 ;;		_TFT_GetWidth
  5976 ;; This function is called by:
  5977 ;;		_Ecg_Init
  5978 ;;		_Ecg_ProcessEcg
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text23
  5983  002060                     __ptext23:
  5984                           	opt callstack 0
  5985  002060                     _Ecg_Background_Leads_Ok:
  5986                           	opt callstack 19
  5987  002060                     
  5988                           ;ecg.c: 181: TFT_FullScreen(0x0821);
  5989  002060  0E08               	movlw	8
  5990  002062  6E1F               	movwf	(TFT_FullScreen@color+1)^0,c
  5991  002064  0E21               	movlw	33
  5992  002066  6E1E               	movwf	TFT_FullScreen@color^0,c
  5993  002068  ECDD  F014         	call	_TFT_FullScreen	;wreg free
  5994  00206C                     
  5995                           ;ecg.c: 182: TFT_DrawString(8, 10, "Frequenza:", 0xFFFF, 0x0821, 2);
  5996  00206C  0E00               	movlw	0
  5997  00206E  0100               	movlb	0	; () banked
  5998  002070  6FAC               	movwf	(TFT_DrawString@x+1)& (0+255),b
  5999  002072  0E08               	movlw	8
  6000  002074  6FAB               	movwf	TFT_DrawString@x& (0+255),b
  6001  002076  0E00               	movlw	0
  6002  002078  6FAE               	movwf	(TFT_DrawString@y+1)& (0+255),b
  6003  00207A  0E0A               	movlw	10
  6004  00207C  6FAD               	movwf	TFT_DrawString@y& (0+255),b
  6005  00207E  0EA0               	movlw	low STR_3
  6006  002080  6FAF               	movwf	TFT_DrawString@str& (0+255),b
  6007  002082  0E5F               	movlw	high STR_3
  6008  002084  6FB0               	movwf	(TFT_DrawString@str+1)& (0+255),b
  6009  002086  0EFF               	movlw	255
  6010  002088  6FB2               	movwf	(TFT_DrawString@color+1)& (0+255),b
  6011  00208A  69B1               	setf	TFT_DrawString@color& (0+255),b
  6012  00208C  0E08               	movlw	8
  6013  00208E  6FB4               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  6014  002090  0E21               	movlw	33
  6015  002092  6FB3               	movwf	TFT_DrawString@bg& (0+255),b
  6016  002094  0E02               	movlw	2
  6017  002096  6FB5               	movwf	TFT_DrawString@size& (0+255),b
  6018  002098  EC7D  F010         	call	_TFT_DrawString	;wreg free
  6019  00209C                     
  6020                           ;ecg.c: 183: TFT_DrawLine(0, (33 - 1), TFT_GetWidth(), (33 - 1), 0xFFFF);
  6021  00209C  0E00               	movlw	0
  6022  00209E  6E18               	movwf	(TFT_DrawLine@x0+1)^0,c
  6023  0020A0  0E00               	movlw	0
  6024  0020A2  6E17               	movwf	TFT_DrawLine@x0^0,c
  6025  0020A4  0E00               	movlw	0
  6026  0020A6  6E1A               	movwf	(TFT_DrawLine@y0+1)^0,c
  6027  0020A8  0E20               	movlw	32
  6028  0020AA  6E19               	movwf	TFT_DrawLine@y0^0,c
  6029  0020AC  ECD4  F015         	call	_TFT_GetWidth	;wreg free
  6030  0020B0  C005  F01B         	movff	?_TFT_GetWidth,TFT_DrawLine@x1
  6031  0020B4  C006  F01C         	movff	?_TFT_GetWidth+1,TFT_DrawLine@x1+1
  6032  0020B8  0E00               	movlw	0
  6033  0020BA  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  6034  0020BC  0E20               	movlw	32
  6035  0020BE  6E1D               	movwf	TFT_DrawLine@y1^0,c
  6036  0020C0  0EFF               	movlw	255
  6037  0020C2  6E20               	movwf	(TFT_DrawLine@color+1)^0,c
  6038  0020C4  681F               	setf	TFT_DrawLine@color^0,c
  6039  0020C6  ECAA  F005         	call	_TFT_DrawLine	;wreg free
  6040  0020CA                     
  6041                           ;ecg.c: 184: Ecg_X = 0;
  6042  0020CA  0E00               	movlw	0
  6043  0020CC  6E59               	movwf	(_Ecg_X+1)^0,c
  6044  0020CE  0E00               	movlw	0
  6045  0020D0  6E58               	movwf	_Ecg_X^0,c
  6046  0020D2                     
  6047                           ;ecg.c: 185: Ecg_Xold = 0;
  6048  0020D2  0E00               	movlw	0
  6049  0020D4  0100               	movlb	0	; () banked
  6050  0020D6  6FE8               	movwf	(_Ecg_Xold+1)& (0+255),b
  6051  0020D8  0E00               	movlw	0
  6052  0020DA  6FE7               	movwf	_Ecg_Xold& (0+255),b
  6053  0020DC                     
  6054                           ; BSR set to: 0
  6055                           ;ecg.c: 186: Ecg_Y = TFT_GetHeight() >> 1;
  6056  0020DC  ECFB  F015         	call	_TFT_GetHeight	;wreg free
  6057  0020E0  90D8               	bcf	status,0,c
  6058  0020E2  3006               	rrcf	(?_TFT_GetHeight+1)^0,w,c
  6059  0020E4  6E4D               	movwf	??_Ecg_Background_Leads_Ok^0,c
  6060  0020E6  3005               	rrcf	?_TFT_GetHeight^0,w,c
  6061  0020E8  0100               	movlb	0	; () banked
  6062  0020EA  6FE5               	movwf	_Ecg_Y& (0+255),b
  6063  0020EC  C04D  F0E6         	movff	??_Ecg_Background_Leads_Ok,_Ecg_Y+1
  6064  0020F0                     
  6065                           ; BSR set to: 0
  6066                           ;ecg.c: 187: Ecg_Yold = Ecg_Y;
  6067  0020F0  C0E5  F0E3         	movff	_Ecg_Y,_Ecg_Yold
  6068  0020F4  C0E6  F0E4         	movff	_Ecg_Y+1,_Ecg_Yold+1
  6069  0020F8                     
  6070                           ; BSR set to: 0
  6071  0020F8  0012               	return		;funcret
  6072  0020FA                     __end_of_Ecg_Background_Leads_Ok:
  6073                           	opt callstack 0
  6074                           
  6075 ;; *************** function _Ecg_Background_Leads_Failure *****************
  6076 ;; Defined at:
  6077 ;;		line 190 in file "ecg.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;		None
  6080 ;; Auto vars:     Size  Location     Type
  6081 ;;		None
  6082 ;; Return value:  Size  Location     Type
  6083 ;;                  1    wreg      void 
  6084 ;; Registers used:
  6085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6086 ;; Tracked objects:
  6087 ;;		On entry : 0/0
  6088 ;;		On exit  : 0/0
  6089 ;;		Unchanged: 0/0
  6090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6091 ;;      Params:         0       0       0       0       0       0       0       0       0
  6092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6095 ;;Total ram usage:        0 bytes
  6096 ;; Hardware stack levels used:    1
  6097 ;; Hardware stack levels required when called:    8
  6098 ;; This function calls:
  6099 ;;		_TFT_DrawString
  6100 ;;		_TFT_FullScreen
  6101 ;; This function is called by:
  6102 ;;		_Ecg_Init
  6103 ;;		_Ecg_ProcessEcg
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           	psect	text24
  6108  002DAA                     __ptext24:
  6109                           	opt callstack 0
  6110  002DAA                     _Ecg_Background_Leads_Failure:
  6111                           	opt callstack 19
  6112  002DAA                     
  6113                           ;ecg.c: 191: TFT_FullScreen(0x0821);
  6114  002DAA  0E08               	movlw	8
  6115  002DAC  6E1F               	movwf	(TFT_FullScreen@color+1)^0,c
  6116  002DAE  0E21               	movlw	33
  6117  002DB0  6E1E               	movwf	TFT_FullScreen@color^0,c
  6118  002DB2  ECDD  F014         	call	_TFT_FullScreen	;wreg free
  6119  002DB6                     
  6120                           ;ecg.c: 192: TFT_DrawString(36, 75, "*** Collegare elettrodi ***", 0xFFFF, 0x0821, 2);
  6121  002DB6  0E00               	movlw	0
  6122  002DB8  0100               	movlb	0	; () banked
  6123  002DBA  6FAC               	movwf	(TFT_DrawString@x+1)& (0+255),b
  6124  002DBC  0E24               	movlw	36
  6125  002DBE  6FAB               	movwf	TFT_DrawString@x& (0+255),b
  6126  002DC0  0E00               	movlw	0
  6127  002DC2  6FAE               	movwf	(TFT_DrawString@y+1)& (0+255),b
  6128  002DC4  0E4B               	movlw	75
  6129  002DC6  6FAD               	movwf	TFT_DrawString@y& (0+255),b
  6130  002DC8  0E5D               	movlw	low STR_4
  6131  002DCA  6FAF               	movwf	TFT_DrawString@str& (0+255),b
  6132  002DCC  0E5F               	movlw	high STR_4
  6133  002DCE  6FB0               	movwf	(TFT_DrawString@str+1)& (0+255),b
  6134  002DD0  0EFF               	movlw	255
  6135  002DD2  6FB2               	movwf	(TFT_DrawString@color+1)& (0+255),b
  6136  002DD4  69B1               	setf	TFT_DrawString@color& (0+255),b
  6137  002DD6  0E08               	movlw	8
  6138  002DD8  6FB4               	movwf	(TFT_DrawString@bg+1)& (0+255),b
  6139  002DDA  0E21               	movlw	33
  6140  002DDC  6FB3               	movwf	TFT_DrawString@bg& (0+255),b
  6141  002DDE  0E02               	movlw	2
  6142  002DE0  6FB5               	movwf	TFT_DrawString@size& (0+255),b
  6143  002DE2  EC7D  F010         	call	_TFT_DrawString	;wreg free
  6144  002DE6  0012               	return		;funcret
  6145  002DE8                     __end_of_Ecg_Background_Leads_Failure:
  6146                           	opt callstack 0
  6147                           
  6148 ;; *************** function _TFT_DrawString *****************
  6149 ;; Defined at:
  6150 ;;		line 303 in file "TFT.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  x               2    0[BANK0 ] unsigned int 
  6153 ;;  y               2    2[BANK0 ] unsigned int 
  6154 ;;  str             2    4[BANK0 ] PTR const unsigned char 
  6155 ;;		 -> A6_Process_Random_Comms@response(32), STR_4(28), STR_3(11), Ecg_ProcessHeartRate@heartrateString(5), 
  6156 ;;		 -> STR_1(14), GSMStatus.operatorName(32), GSMStatus(41), 
  6157 ;;  color           2    6[BANK0 ] unsigned int 
  6158 ;;  bg              2    8[BANK0 ] unsigned int 
  6159 ;;  size            1   10[BANK0 ] unsigned char 
  6160 ;; Auto vars:     Size  Location     Type
  6161 ;;		None
  6162 ;; Return value:  Size  Location     Type
  6163 ;;                  1    wreg      void 
  6164 ;; Registers used:
  6165 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6166 ;; Tracked objects:
  6167 ;;		On entry : 0/0
  6168 ;;		On exit  : 0/0
  6169 ;;		Unchanged: 0/0
  6170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6171 ;;      Params:         0      11       0       0       0       0       0       0       0
  6172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6174 ;;      Totals:         0      11       0       0       0       0       0       0       0
  6175 ;;Total ram usage:       11 bytes
  6176 ;; Hardware stack levels used:    1
  6177 ;; Hardware stack levels required when called:    7
  6178 ;; This function calls:
  6179 ;;		_TFT_DrawChar
  6180 ;; This function is called by:
  6181 ;;		_processGSM
  6182 ;;		_Ecg_ProcessHeartRate
  6183 ;;		_Ecg_Background_Leads_Ok
  6184 ;;		_Ecg_Background_Leads_Failure
  6185 ;;		_TFT_ConsolePrintLine
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text25
  6190  0020FA                     __ptext25:
  6191                           	opt callstack 0
  6192  0020FA                     _TFT_DrawString:
  6193                           	opt callstack 21
  6194  0020FA                     
  6195                           ;TFT.c: 304: while(*str) {
  6196  0020FA  EFAD  F010         	goto	l5055
  6197  0020FE                     l5049:
  6198                           
  6199                           ;TFT.c: 305: TFT_DrawChar(x, y, *str, color, bg, size);
  6200  0020FE  C0AB  F036         	movff	TFT_DrawString@x,TFT_DrawChar@x
  6201  002102  C0AC  F037         	movff	TFT_DrawString@x+1,TFT_DrawChar@x+1
  6202  002106  C0AD  F038         	movff	TFT_DrawString@y,TFT_DrawChar@y
  6203  00210A  C0AE  F039         	movff	TFT_DrawString@y+1,TFT_DrawChar@y+1
  6204  00210E  C0AF  FFF6         	movff	TFT_DrawString@str,tblptrl
  6205  002112  C0B0  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  6206  002116  6AF8               	clrf	tblptru,c
  6207  002118  0E07               	movlw	(high __ramtop+-1)
  6208  00211A  64F7               	cpfsgt	tblptrh,c
  6209  00211C  D003               	bra	u4557
  6210  00211E  0008               	tblrd		*
  6211  002120  50F5               	movf	tablat,w,c
  6212  002122  D005               	bra	u4550
  6213  002124                     u4557:
  6214  002124  CFF6 FFE1          	movff	tblptrl,fsr1l
  6215  002128  CFF7 FFE2          	movff	tblptrh,fsr1h
  6216  00212C  50E7               	movf	indf1,w,c
  6217  00212E                     u4550:
  6218  00212E  6E3A               	movwf	TFT_DrawChar@c^0,c
  6219  002130  C0B1  F03B         	movff	TFT_DrawString@color,TFT_DrawChar@color
  6220  002134  C0B2  F03C         	movff	TFT_DrawString@color+1,TFT_DrawChar@color+1
  6221  002138  C0B3  F03D         	movff	TFT_DrawString@bg,TFT_DrawChar@bg
  6222  00213C  C0B4  F03E         	movff	TFT_DrawString@bg+1,TFT_DrawChar@bg+1
  6223  002140  C0B5  F03F         	movff	TFT_DrawString@size,TFT_DrawChar@size
  6224  002144  ECFE  F001         	call	_TFT_DrawChar	;wreg free
  6225  002148                     
  6226                           ;TFT.c: 306: x += (6 * size);
  6227  002148  0100               	movlb	0	; () banked
  6228  00214A  51B5               	movf	TFT_DrawString@size& (0+255),w,b
  6229  00214C  0D06               	mullw	6
  6230  00214E  50F3               	movf	243,w,c
  6231  002150  27AB               	addwf	TFT_DrawString@x& (0+255),f,b
  6232  002152  50F4               	movf	244,w,c
  6233  002154  23AC               	addwfc	(TFT_DrawString@x+1)& (0+255),f,b
  6234  002156                     
  6235                           ; BSR set to: 0
  6236                           ;TFT.c: 307: str++;
  6237  002156  4BAF               	infsnz	TFT_DrawString@str& (0+255),f,b
  6238  002158  2BB0               	incf	(TFT_DrawString@str+1)& (0+255),f,b
  6239  00215A                     l5055:
  6240  00215A  C0AF  FFF6         	movff	TFT_DrawString@str,tblptrl
  6241  00215E  C0B0  FFF7         	movff	TFT_DrawString@str+1,tblptrh
  6242  002162  6AF8               	clrf	tblptru,c
  6243  002164  0E07               	movlw	(high __ramtop+-1)
  6244  002166  64F7               	cpfsgt	tblptrh,c
  6245  002168  D003               	bra	u4567
  6246  00216A  0008               	tblrd		*
  6247  00216C  50F5               	movf	tablat,w,c
  6248  00216E  D005               	bra	u4560
  6249  002170                     u4567:
  6250  002170  CFF6 FFE1          	movff	tblptrl,fsr1l
  6251  002174  CFF7 FFE2          	movff	tblptrh,fsr1h
  6252  002178  50E7               	movf	indf1,w,c
  6253  00217A                     u4560:
  6254  00217A  0900               	iorlw	0
  6255  00217C  A4D8               	btfss	status,2,c
  6256  00217E  EFC3  F010         	goto	u4571
  6257  002182  EFC5  F010         	goto	u4570
  6258  002186                     u4571:
  6259  002186  EF7F  F010         	goto	l5049
  6260  00218A                     u4570:
  6261  00218A  0012               	return		;funcret
  6262  00218C                     __end_of_TFT_DrawString:
  6263                           	opt callstack 0
  6264                           
  6265 ;; *************** function _TFT_DrawChar *****************
  6266 ;; Defined at:
  6267 ;;		line 274 in file "TFT.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  x               2   53[COMRAM] unsigned int 
  6270 ;;  y               2   55[COMRAM] unsigned int 
  6271 ;;  c               1   57[COMRAM] unsigned char 
  6272 ;;  color           2   58[COMRAM] unsigned int 
  6273 ;;  bg              2   60[COMRAM] unsigned int 
  6274 ;;  size            1   62[COMRAM] unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  j               1   74[COMRAM] char 
  6277 ;;  xl              2   68[COMRAM] unsigned int 
  6278 ;;  line            1   67[COMRAM] unsigned char 
  6279 ;;  i               1   75[COMRAM] char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6289 ;;      Params:        10       0       0       0       0       0       0       0       0
  6290 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6291 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6292 ;;      Totals:        23       0       0       0       0       0       0       0       0
  6293 ;;Total ram usage:       23 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    6
  6296 ;; This function calls:
  6297 ;;		_TFT_DrawFillRect
  6298 ;;		_TFT_DrawLine
  6299 ;;		_TFT_DrawPixel
  6300 ;;		___wmul
  6301 ;; This function is called by:
  6302 ;;		_TFT_DrawString
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text26
  6307  0003FC                     __ptext26:
  6308                           	opt callstack 0
  6309  0003FC                     _TFT_DrawChar:
  6310                           	opt callstack 21
  6311  0003FC                     
  6312                           ;TFT.c: 275: for(int8_t i=0; i<5; i++ ) {
  6313  0003FC  0E00               	movlw	0
  6314  0003FE  6E4C               	movwf	TFT_DrawChar@i^0,c
  6315  000400                     l4915:
  6316                           
  6317                           ;TFT.c: 276: uint8_t line = TFT_Font[c * 5 + i];
  6318  000400  C04C  F040         	movff	TFT_DrawChar@i,??_TFT_DrawChar
  6319  000404  6A41               	clrf	(??_TFT_DrawChar+1)^0,c
  6320  000406  BE40               	btfsc	??_TFT_DrawChar^0,7,c
  6321  000408  0641               	decf	(??_TFT_DrawChar+1)^0,f,c
  6322  00040A  503A               	movf	TFT_DrawChar@c^0,w,c
  6323  00040C  0D05               	mullw	5
  6324  00040E  0E1F               	movlw	low _TFT_Font
  6325  000410  6E42               	movwf	(??_TFT_DrawChar+2)^0,c
  6326  000412  0E59               	movlw	high _TFT_Font
  6327  000414  6E43               	movwf	(??_TFT_DrawChar+3)^0,c
  6328  000416  50F3               	movf	243,w,c
  6329  000418  2642               	addwf	(??_TFT_DrawChar+2)^0,f,c
  6330  00041A  50F4               	movf	244,w,c
  6331  00041C  2243               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  6332  00041E  5040               	movf	??_TFT_DrawChar^0,w,c
  6333  000420  2642               	addwf	(??_TFT_DrawChar+2)^0,f,c
  6334  000422  5041               	movf	(??_TFT_DrawChar+1)^0,w,c
  6335  000424  2243               	addwfc	(??_TFT_DrawChar+3)^0,f,c
  6336  000426  C042  FFF6         	movff	??_TFT_DrawChar+2,tblptrl
  6337  00042A  C043  FFF7         	movff	??_TFT_DrawChar+3,tblptrh
  6338  00042E                     	if	0	;tblptru may be non-zero
  6339  00042E                     	endif
  6340  00042E                     	if	0	;tblptru may be non-zero
  6341  00042E                     	endif
  6342  00042E  0008               	tblrd		*
  6343  000430  CFF5 F044          	movff	tablat,TFT_DrawChar@line
  6344  000434                     
  6345                           ;TFT.c: 277: for(int8_t j=0; j<8; j++, line >>= 1) {
  6346  000434  0E00               	movlw	0
  6347  000436  6E4B               	movwf	TFT_DrawChar@j^0,c
  6348  000438                     l305:
  6349                           
  6350                           ;TFT.c: 278: if(line & 1) {
  6351  000438  A044               	btfss	TFT_DrawChar@line^0,0,c
  6352  00043A  EF21  F002         	goto	u4271
  6353  00043E  EF23  F002         	goto	u4270
  6354  000442                     u4271:
  6355  000442  EF79  F002         	goto	l4929
  6356  000446                     u4270:
  6357  000446                     
  6358                           ;TFT.c: 279: if(size == 1) {
  6359  000446  043F               	decf	TFT_DrawChar@size^0,w,c
  6360  000448  A4D8               	btfss	status,2,c
  6361  00044A  EF29  F002         	goto	u4281
  6362  00044E  EF2B  F002         	goto	u4280
  6363  000452                     u4281:
  6364  000452  EF43  F002         	goto	l4927
  6365  000456                     u4280:
  6366  000456                     
  6367                           ;TFT.c: 280: TFT_DrawPixel((x + i), (y + j), color);
  6368  000456  5036               	movf	TFT_DrawChar@x^0,w,c
  6369  000458  244C               	addwf	TFT_DrawChar@i^0,w,c
  6370  00045A  6E0D               	movwf	TFT_DrawPixel@x^0,c
  6371  00045C  0E00               	movlw	0
  6372  00045E  BE4C               	btfsc	TFT_DrawChar@i^0,7,c
  6373  000460  0EFF               	movlw	255
  6374  000462  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6375  000464  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  6376  000466  5038               	movf	TFT_DrawChar@y^0,w,c
  6377  000468  244B               	addwf	TFT_DrawChar@j^0,w,c
  6378  00046A  6E0F               	movwf	TFT_DrawPixel@y^0,c
  6379  00046C  0E00               	movlw	0
  6380  00046E  BE4B               	btfsc	TFT_DrawChar@j^0,7,c
  6381  000470  0EFF               	movlw	255
  6382  000472  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6383  000474  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  6384  000476  C03B  F011         	movff	TFT_DrawChar@color,TFT_DrawPixel@color
  6385  00047A  C03C  F012         	movff	TFT_DrawChar@color+1,TFT_DrawPixel@color+1
  6386  00047E  EC77  F00D         	call	_TFT_DrawPixel	;wreg free
  6387                           
  6388                           ;TFT.c: 281: } else {
  6389  000482  EFD9  F002         	goto	l4937
  6390  000486                     l4927:
  6391                           
  6392                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6393  000486  504C               	movf	TFT_DrawChar@i^0,w,c
  6394  000488  6E09               	movwf	___wmul@multiplier^0,c
  6395  00048A  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6396  00048C  BE09               	btfsc	___wmul@multiplier^0,7,c
  6397  00048E  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6398  000490  C03F  F00B         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6399  000494  6A0C               	clrf	(___wmul@multiplicand+1)^0,c
  6400  000496  ECE1  F017         	call	___wmul	;wreg free
  6401  00049A  5036               	movf	TFT_DrawChar@x^0,w,c
  6402  00049C  2409               	addwf	?___wmul^0,w,c
  6403  00049E  6E47               	movwf	_TFT_DrawChar$2260^0,c
  6404  0004A0  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6405  0004A2  200A               	addwfc	(?___wmul+1)^0,w,c
  6406  0004A4  6E48               	movwf	(_TFT_DrawChar$2260+1)^0,c
  6407                           
  6408                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6409  0004A6  504B               	movf	TFT_DrawChar@j^0,w,c
  6410  0004A8  6E09               	movwf	___wmul@multiplier^0,c
  6411  0004AA  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6412  0004AC  BE09               	btfsc	___wmul@multiplier^0,7,c
  6413  0004AE  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6414  0004B0  C03F  F00B         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6415  0004B4  6A0C               	clrf	(___wmul@multiplicand+1)^0,c
  6416  0004B6  ECE1  F017         	call	___wmul	;wreg free
  6417  0004BA  5038               	movf	TFT_DrawChar@y^0,w,c
  6418  0004BC  2409               	addwf	?___wmul^0,w,c
  6419  0004BE  6E49               	movwf	_TFT_DrawChar$2261^0,c
  6420  0004C0  5039               	movf	(TFT_DrawChar@y+1)^0,w,c
  6421  0004C2  200A               	addwfc	(?___wmul+1)^0,w,c
  6422  0004C4  6E4A               	movwf	(_TFT_DrawChar$2261+1)^0,c
  6423                           
  6424                           ;TFT.c: 282: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, color);
  6425  0004C6  C047  F020         	movff	_TFT_DrawChar$2260,TFT_DrawFillRect@x
  6426  0004CA  C048  F021         	movff	_TFT_DrawChar$2260+1,TFT_DrawFillRect@x+1
  6427  0004CE  C049  F022         	movff	_TFT_DrawChar$2261,TFT_DrawFillRect@y
  6428  0004D2  C04A  F023         	movff	_TFT_DrawChar$2261+1,TFT_DrawFillRect@y+1
  6429  0004D6  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6430  0004DA  6A25               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6431  0004DC  C03F  F026         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6432  0004E0  6A27               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6433  0004E2  C03B  F028         	movff	TFT_DrawChar@color,TFT_DrawFillRect@color
  6434  0004E6  C03C  F029         	movff	TFT_DrawChar@color+1,TFT_DrawFillRect@color+1
  6435  0004EA  EC14  F012         	call	_TFT_DrawFillRect	;wreg free
  6436  0004EE  EFD9  F002         	goto	l4937
  6437  0004F2                     l4929:
  6438  0004F2  503B               	movf	TFT_DrawChar@color^0,w,c
  6439  0004F4  183D               	xorwf	TFT_DrawChar@bg^0,w,c
  6440  0004F6  E109               	bnz	u4290
  6441  0004F8  503C               	movf	(TFT_DrawChar@color+1)^0,w,c
  6442  0004FA  183E               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  6443  0004FC  B4D8               	btfsc	status,2,c
  6444  0004FE  EF83  F002         	goto	u4291
  6445  000502  EF85  F002         	goto	u4290
  6446  000506                     u4291:
  6447  000506  EFD9  F002         	goto	l4937
  6448  00050A                     u4290:
  6449  00050A                     
  6450                           ;TFT.c: 285: if(size == 1) {
  6451  00050A  043F               	decf	TFT_DrawChar@size^0,w,c
  6452  00050C  A4D8               	btfss	status,2,c
  6453  00050E  EF8B  F002         	goto	u4301
  6454  000512  EF8D  F002         	goto	u4300
  6455  000516                     u4301:
  6456  000516  EFA5  F002         	goto	l4935
  6457  00051A                     u4300:
  6458  00051A                     
  6459                           ;TFT.c: 286: TFT_DrawPixel((x + i), (y + j), bg);
  6460  00051A  5036               	movf	TFT_DrawChar@x^0,w,c
  6461  00051C  244C               	addwf	TFT_DrawChar@i^0,w,c
  6462  00051E  6E0D               	movwf	TFT_DrawPixel@x^0,c
  6463  000520  0E00               	movlw	0
  6464  000522  BE4C               	btfsc	TFT_DrawChar@i^0,7,c
  6465  000524  0EFF               	movlw	255
  6466  000526  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6467  000528  6E0E               	movwf	(TFT_DrawPixel@x+1)^0,c
  6468  00052A  5038               	movf	TFT_DrawChar@y^0,w,c
  6469  00052C  244B               	addwf	TFT_DrawChar@j^0,w,c
  6470  00052E  6E0F               	movwf	TFT_DrawPixel@y^0,c
  6471  000530  0E00               	movlw	0
  6472  000532  BE4B               	btfsc	TFT_DrawChar@j^0,7,c
  6473  000534  0EFF               	movlw	255
  6474  000536  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6475  000538  6E10               	movwf	(TFT_DrawPixel@y+1)^0,c
  6476  00053A  C03D  F011         	movff	TFT_DrawChar@bg,TFT_DrawPixel@color
  6477  00053E  C03E  F012         	movff	TFT_DrawChar@bg+1,TFT_DrawPixel@color+1
  6478  000542  EC77  F00D         	call	_TFT_DrawPixel	;wreg free
  6479                           
  6480                           ;TFT.c: 287: } else {
  6481  000546  EFD9  F002         	goto	l4937
  6482  00054A                     l4935:
  6483                           
  6484                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6485  00054A  504C               	movf	TFT_DrawChar@i^0,w,c
  6486  00054C  6E09               	movwf	___wmul@multiplier^0,c
  6487  00054E  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6488  000550  BE09               	btfsc	___wmul@multiplier^0,7,c
  6489  000552  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6490  000554  C03F  F00B         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6491  000558  6A0C               	clrf	(___wmul@multiplicand+1)^0,c
  6492  00055A  ECE1  F017         	call	___wmul	;wreg free
  6493  00055E  5036               	movf	TFT_DrawChar@x^0,w,c
  6494  000560  2409               	addwf	?___wmul^0,w,c
  6495  000562  6E47               	movwf	_TFT_DrawChar$2260^0,c
  6496  000564  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6497  000566  200A               	addwfc	(?___wmul+1)^0,w,c
  6498  000568  6E48               	movwf	(_TFT_DrawChar$2260+1)^0,c
  6499                           
  6500                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6501  00056A  504B               	movf	TFT_DrawChar@j^0,w,c
  6502  00056C  6E09               	movwf	___wmul@multiplier^0,c
  6503  00056E  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6504  000570  BE09               	btfsc	___wmul@multiplier^0,7,c
  6505  000572  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6506  000574  C03F  F00B         	movff	TFT_DrawChar@size,___wmul@multiplicand
  6507  000578  6A0C               	clrf	(___wmul@multiplicand+1)^0,c
  6508  00057A  ECE1  F017         	call	___wmul	;wreg free
  6509  00057E  5038               	movf	TFT_DrawChar@y^0,w,c
  6510  000580  2409               	addwf	?___wmul^0,w,c
  6511  000582  6E49               	movwf	_TFT_DrawChar$2261^0,c
  6512  000584  5039               	movf	(TFT_DrawChar@y+1)^0,w,c
  6513  000586  200A               	addwfc	(?___wmul+1)^0,w,c
  6514  000588  6E4A               	movwf	(_TFT_DrawChar$2261+1)^0,c
  6515                           
  6516                           ;TFT.c: 288: TFT_DrawFillRect((x + i * size), (y + j * size), size, size, bg);
  6517  00058A  C047  F020         	movff	_TFT_DrawChar$2260,TFT_DrawFillRect@x
  6518  00058E  C048  F021         	movff	_TFT_DrawChar$2260+1,TFT_DrawFillRect@x+1
  6519  000592  C049  F022         	movff	_TFT_DrawChar$2261,TFT_DrawFillRect@y
  6520  000596  C04A  F023         	movff	_TFT_DrawChar$2261+1,TFT_DrawFillRect@y+1
  6521  00059A  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6522  00059E  6A25               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6523  0005A0  C03F  F026         	movff	TFT_DrawChar@size,TFT_DrawFillRect@h
  6524  0005A4  6A27               	clrf	(TFT_DrawFillRect@h+1)^0,c
  6525  0005A6  C03D  F028         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  6526  0005AA  C03E  F029         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  6527  0005AE  EC14  F012         	call	_TFT_DrawFillRect	;wreg free
  6528  0005B2                     l4937:
  6529  0005B2  2A4B               	incf	TFT_DrawChar@j^0,f,c
  6530  0005B4  90D8               	bcf	status,0,c
  6531  0005B6  3244               	rrcf	TFT_DrawChar@line^0,f,c
  6532  0005B8  504B               	movf	TFT_DrawChar@j^0,w,c
  6533  0005BA  0A80               	xorlw	128
  6534  0005BC  0F78               	addlw	-136
  6535  0005BE  A0D8               	btfss	status,0,c
  6536  0005C0  EFE4  F002         	goto	u4311
  6537  0005C4  EFE6  F002         	goto	u4310
  6538  0005C8                     u4311:
  6539  0005C8  EF1C  F002         	goto	l305
  6540  0005CC                     u4310:
  6541  0005CC  2A4C               	incf	TFT_DrawChar@i^0,f,c
  6542  0005CE  504C               	movf	TFT_DrawChar@i^0,w,c
  6543  0005D0  0A80               	xorlw	128
  6544  0005D2  0F7B               	addlw	-133
  6545  0005D4  A0D8               	btfss	status,0,c
  6546  0005D6  EFEF  F002         	goto	u4321
  6547  0005DA  EFF1  F002         	goto	u4320
  6548  0005DE                     u4321:
  6549  0005DE  EF00  F002         	goto	l4915
  6550  0005E2                     u4320:
  6551  0005E2                     
  6552                           ;TFT.c: 289: };TFT.c: 290: };TFT.c: 291: };TFT.c: 292: };TFT.c: 293: if(bg != color) {
  6553  0005E2  503B               	movf	TFT_DrawChar@color^0,w,c
  6554  0005E4  183D               	xorwf	TFT_DrawChar@bg^0,w,c
  6555  0005E6  E109               	bnz	u4330
  6556  0005E8  503C               	movf	(TFT_DrawChar@color+1)^0,w,c
  6557  0005EA  183E               	xorwf	(TFT_DrawChar@bg+1)^0,w,c
  6558  0005EC  B4D8               	btfsc	status,2,c
  6559  0005EE  EFFB  F002         	goto	u4331
  6560  0005F2  EFFD  F002         	goto	u4330
  6561  0005F6                     u4331:
  6562  0005F6  EF44  F003         	goto	l317
  6563  0005FA                     u4330:
  6564  0005FA                     
  6565                           ;TFT.c: 294: if(size == 1) {
  6566  0005FA  043F               	decf	TFT_DrawChar@size^0,w,c
  6567  0005FC  A4D8               	btfss	status,2,c
  6568  0005FE  EF03  F003         	goto	u4341
  6569  000602  EF05  F003         	goto	u4340
  6570  000606                     u4341:
  6571  000606  EF25  F003         	goto	l4955
  6572  00060A                     u4340:
  6573  00060A                     
  6574                           ;TFT.c: 295: uint16_t xl = x + 5;
  6575  00060A  0E05               	movlw	5
  6576  00060C  2436               	addwf	TFT_DrawChar@x^0,w,c
  6577  00060E  6E45               	movwf	TFT_DrawChar@xl^0,c
  6578  000610  0E00               	movlw	0
  6579  000612  2037               	addwfc	(TFT_DrawChar@x+1)^0,w,c
  6580  000614  6E46               	movwf	(TFT_DrawChar@xl+1)^0,c
  6581  000616                     
  6582                           ;TFT.c: 296: TFT_DrawLine(xl, y, xl, y + 7, bg);
  6583  000616  C045  F017         	movff	TFT_DrawChar@xl,TFT_DrawLine@x0
  6584  00061A  C046  F018         	movff	TFT_DrawChar@xl+1,TFT_DrawLine@x0+1
  6585  00061E  C038  F019         	movff	TFT_DrawChar@y,TFT_DrawLine@y0
  6586  000622  C039  F01A         	movff	TFT_DrawChar@y+1,TFT_DrawLine@y0+1
  6587  000626  C045  F01B         	movff	TFT_DrawChar@xl,TFT_DrawLine@x1
  6588  00062A  C046  F01C         	movff	TFT_DrawChar@xl+1,TFT_DrawLine@x1+1
  6589  00062E  0E07               	movlw	7
  6590  000630  2438               	addwf	TFT_DrawChar@y^0,w,c
  6591  000632  6E1D               	movwf	TFT_DrawLine@y1^0,c
  6592  000634  0E00               	movlw	0
  6593  000636  2039               	addwfc	(TFT_DrawChar@y+1)^0,w,c
  6594  000638  6E1E               	movwf	(TFT_DrawLine@y1+1)^0,c
  6595  00063A  C03D  F01F         	movff	TFT_DrawChar@bg,TFT_DrawLine@color
  6596  00063E  C03E  F020         	movff	TFT_DrawChar@bg+1,TFT_DrawLine@color+1
  6597  000642  ECAA  F005         	call	_TFT_DrawLine	;wreg free
  6598                           
  6599                           ;TFT.c: 297: } else {
  6600  000646  EF44  F003         	goto	l317
  6601  00064A                     l4955:
  6602                           
  6603                           ;TFT.c: 298: TFT_DrawFillRect((x + 5 * size), y, size, 8 * size, bg);
  6604  00064A  503F               	movf	TFT_DrawChar@size^0,w,c
  6605  00064C  0D05               	mullw	5
  6606  00064E  CFF3 F040          	movff	prodl,??_TFT_DrawChar
  6607  000652  CFF4 F041          	movff	prodh,??_TFT_DrawChar+1
  6608  000656  5036               	movf	TFT_DrawChar@x^0,w,c
  6609  000658  2440               	addwf	??_TFT_DrawChar^0,w,c
  6610  00065A  6E20               	movwf	TFT_DrawFillRect@x^0,c
  6611  00065C  5037               	movf	(TFT_DrawChar@x+1)^0,w,c
  6612  00065E  2041               	addwfc	(??_TFT_DrawChar+1)^0,w,c
  6613  000660  6E21               	movwf	(TFT_DrawFillRect@x+1)^0,c
  6614  000662  C038  F022         	movff	TFT_DrawChar@y,TFT_DrawFillRect@y
  6615  000666  C039  F023         	movff	TFT_DrawChar@y+1,TFT_DrawFillRect@y+1
  6616  00066A  C03F  F024         	movff	TFT_DrawChar@size,TFT_DrawFillRect@w
  6617  00066E  6A25               	clrf	(TFT_DrawFillRect@w+1)^0,c
  6618  000670  503F               	movf	TFT_DrawChar@size^0,w,c
  6619  000672  0D08               	mullw	8
  6620  000674  CFF3 F026          	movff	prodl,TFT_DrawFillRect@h
  6621  000678  CFF4 F027          	movff	prodh,TFT_DrawFillRect@h+1
  6622  00067C  C03D  F028         	movff	TFT_DrawChar@bg,TFT_DrawFillRect@color
  6623  000680  C03E  F029         	movff	TFT_DrawChar@bg+1,TFT_DrawFillRect@color+1
  6624  000684  EC14  F012         	call	_TFT_DrawFillRect	;wreg free
  6625  000688                     l317:
  6626  000688  0012               	return		;funcret
  6627  00068A                     __end_of_TFT_DrawChar:
  6628                           	opt callstack 0
  6629                           
  6630 ;; *************** function _TFT_DrawLine *****************
  6631 ;; Defined at:
  6632 ;;		line 192 in file "TFT.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  x0              2   22[COMRAM] int 
  6635 ;;  y0              2   24[COMRAM] int 
  6636 ;;  x1              2   26[COMRAM] int 
  6637 ;;  y1              2   28[COMRAM] int 
  6638 ;;  color           2   30[COMRAM] unsigned int 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;  t               2   41[COMRAM] int 
  6641 ;;  t               2   39[COMRAM] int 
  6642 ;;  t               2   37[COMRAM] int 
  6643 ;;  t               2   35[COMRAM] int 
  6644 ;;  dx              2   51[COMRAM] int 
  6645 ;;  steep           2   49[COMRAM] int 
  6646 ;;  err             2   47[COMRAM] int 
  6647 ;;  ystep           2   45[COMRAM] int 
  6648 ;;  dy              2   43[COMRAM] int 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg, status,2, status,0, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6658 ;;      Params:        10       0       0       0       0       0       0       0       0
  6659 ;;      Locals:        18       0       0       0       0       0       0       0       0
  6660 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6661 ;;      Totals:        31       0       0       0       0       0       0       0       0
  6662 ;;Total ram usage:       31 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:    4
  6665 ;; This function calls:
  6666 ;;		_TFT_DrawPixel
  6667 ;;		___awdiv
  6668 ;;		_abs
  6669 ;; This function is called by:
  6670 ;;		_processGSM
  6671 ;;		_TFT_DrawChar
  6672 ;;		_Ecg_Draw
  6673 ;;		_Ecg_Background_Leads_Ok
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text27
  6678  000B54                     __ptext27:
  6679                           	opt callstack 0
  6680  000B54                     _TFT_DrawLine:
  6681                           	opt callstack 22
  6682  000B54                     
  6683                           ;TFT.c: 193: int16_t steep = abs(y1 - y0) > abs(x1 - x0);
  6684  000B54  5017               	movf	TFT_DrawLine@x0^0,w,c
  6685  000B56  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6686  000B58  6E05               	movwf	abs@a^0,c
  6687  000B5A  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6688  000B5C  581C               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6689  000B5E  6E06               	movwf	(abs@a+1)^0,c
  6690  000B60  EC82  F017         	call	_abs	;wreg free
  6691  000B64  C005  F021         	movff	?_abs,??_TFT_DrawLine
  6692  000B68  C006  F022         	movff	?_abs+1,??_TFT_DrawLine+1
  6693  000B6C  5019               	movf	TFT_DrawLine@y0^0,w,c
  6694  000B6E  5C1D               	subwf	TFT_DrawLine@y1^0,w,c
  6695  000B70  6E05               	movwf	abs@a^0,c
  6696  000B72  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6697  000B74  581E               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6698  000B76  6E06               	movwf	(abs@a+1)^0,c
  6699  000B78  EC82  F017         	call	_abs	;wreg free
  6700  000B7C  5005               	movf	?_abs^0,w,c
  6701  000B7E  5C21               	subwf	??_TFT_DrawLine^0,w,c
  6702  000B80  5022               	movf	(??_TFT_DrawLine+1)^0,w,c
  6703  000B82  0A80               	xorlw	128
  6704  000B84  6E23               	movwf	(??_TFT_DrawLine+2)^0,c
  6705  000B86  5006               	movf	(?_abs+1)^0,w,c
  6706  000B88  0A80               	xorlw	128
  6707  000B8A  5823               	subwfb	(??_TFT_DrawLine+2)^0,w,c
  6708  000B8C  A0D8               	btfss	status,0,c
  6709  000B8E  EFCB  F005         	goto	u4091
  6710  000B92  EFCE  F005         	goto	u4090
  6711  000B96                     u4091:
  6712  000B96  0E01               	movlw	1
  6713  000B98  EFCF  F005         	goto	u4100
  6714  000B9C                     u4090:
  6715  000B9C  0E00               	movlw	0
  6716  000B9E                     u4100:
  6717  000B9E  6E32               	movwf	TFT_DrawLine@steep^0,c
  6718  000BA0  6A33               	clrf	(TFT_DrawLine@steep+1)^0,c
  6719  000BA2                     
  6720                           ;TFT.c: 194: if(steep) {
  6721  000BA2  5032               	movf	TFT_DrawLine@steep^0,w,c
  6722  000BA4  1033               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6723  000BA6  B4D8               	btfsc	status,2,c
  6724  000BA8  EFD8  F005         	goto	u4111
  6725  000BAC  EFDA  F005         	goto	u4110
  6726  000BB0                     u4111:
  6727  000BB0  EFF2  F005         	goto	l4831
  6728  000BB4                     u4110:
  6729  000BB4                     
  6730                           ;TFT.c: 195: { int16_t t = x0; x0 = y0; y0 = t; };
  6731  000BB4  C017  F024         	movff	TFT_DrawLine@x0,TFT_DrawLine@t
  6732  000BB8  C018  F025         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t+1
  6733  000BBC  C019  F017         	movff	TFT_DrawLine@y0,TFT_DrawLine@x0
  6734  000BC0  C01A  F018         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@x0+1
  6735  000BC4  C024  F019         	movff	TFT_DrawLine@t,TFT_DrawLine@y0
  6736  000BC8  C025  F01A         	movff	TFT_DrawLine@t+1,TFT_DrawLine@y0+1
  6737                           
  6738                           ;TFT.c: 196: { int16_t t = x1; x1 = y1; y1 = t; };
  6739  000BCC  C01B  F026         	movff	TFT_DrawLine@x1,TFT_DrawLine@t_786
  6740  000BD0  C01C  F027         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@t_786+1
  6741  000BD4  C01D  F01B         	movff	TFT_DrawLine@y1,TFT_DrawLine@x1
  6742  000BD8  C01E  F01C         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@x1+1
  6743  000BDC  C026  F01D         	movff	TFT_DrawLine@t_786,TFT_DrawLine@y1
  6744  000BE0  C027  F01E         	movff	TFT_DrawLine@t_786+1,TFT_DrawLine@y1+1
  6745  000BE4                     l4831:
  6746                           
  6747                           ;TFT.c: 197: };TFT.c: 198: if(x0 > x1) {
  6748  000BE4  5017               	movf	TFT_DrawLine@x0^0,w,c
  6749  000BE6  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6750  000BE8  501C               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6751  000BEA  0A80               	xorlw	128
  6752  000BEC  6E21               	movwf	??_TFT_DrawLine^0,c
  6753  000BEE  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6754  000BF0  0A80               	xorlw	128
  6755  000BF2  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6756  000BF4  B0D8               	btfsc	status,0,c
  6757  000BF6  EFFF  F005         	goto	u4121
  6758  000BFA  EF01  F006         	goto	u4120
  6759  000BFE                     u4121:
  6760  000BFE  EF19  F006         	goto	l4835
  6761  000C02                     u4120:
  6762  000C02                     
  6763                           ;TFT.c: 199: { int16_t t = x0; x0 = x1; x1 = t; };
  6764  000C02  C017  F028         	movff	TFT_DrawLine@x0,TFT_DrawLine@t_787
  6765  000C06  C018  F029         	movff	TFT_DrawLine@x0+1,TFT_DrawLine@t_787+1
  6766  000C0A  C01B  F017         	movff	TFT_DrawLine@x1,TFT_DrawLine@x0
  6767  000C0E  C01C  F018         	movff	TFT_DrawLine@x1+1,TFT_DrawLine@x0+1
  6768  000C12  C028  F01B         	movff	TFT_DrawLine@t_787,TFT_DrawLine@x1
  6769  000C16  C029  F01C         	movff	TFT_DrawLine@t_787+1,TFT_DrawLine@x1+1
  6770                           
  6771                           ;TFT.c: 200: { int16_t t = y0; y0 = y1; y1 = t; };
  6772  000C1A  C019  F02A         	movff	TFT_DrawLine@y0,TFT_DrawLine@t_788
  6773  000C1E  C01A  F02B         	movff	TFT_DrawLine@y0+1,TFT_DrawLine@t_788+1
  6774  000C22  C01D  F019         	movff	TFT_DrawLine@y1,TFT_DrawLine@y0
  6775  000C26  C01E  F01A         	movff	TFT_DrawLine@y1+1,TFT_DrawLine@y0+1
  6776  000C2A  C02A  F01D         	movff	TFT_DrawLine@t_788,TFT_DrawLine@y1
  6777  000C2E  C02B  F01E         	movff	TFT_DrawLine@t_788+1,TFT_DrawLine@y1+1
  6778  000C32                     l4835:
  6779                           
  6780                           ;TFT.c: 201: };TFT.c: 203: int16_t dx, dy;;TFT.c: 204: dx = x1 - x0;
  6781  000C32  5017               	movf	TFT_DrawLine@x0^0,w,c
  6782  000C34  5C1B               	subwf	TFT_DrawLine@x1^0,w,c
  6783  000C36  6E34               	movwf	TFT_DrawLine@dx^0,c
  6784  000C38  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6785  000C3A  581C               	subwfb	(TFT_DrawLine@x1+1)^0,w,c
  6786  000C3C  6E35               	movwf	(TFT_DrawLine@dx+1)^0,c
  6787  000C3E                     
  6788                           ;TFT.c: 205: dy = abs(y1 - y0);
  6789  000C3E  5019               	movf	TFT_DrawLine@y0^0,w,c
  6790  000C40  5C1D               	subwf	TFT_DrawLine@y1^0,w,c
  6791  000C42  6E05               	movwf	abs@a^0,c
  6792  000C44  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6793  000C46  581E               	subwfb	(TFT_DrawLine@y1+1)^0,w,c
  6794  000C48  6E06               	movwf	(abs@a+1)^0,c
  6795  000C4A  EC82  F017         	call	_abs	;wreg free
  6796  000C4E  C005  F02C         	movff	?_abs,TFT_DrawLine@dy
  6797  000C52  C006  F02D         	movff	?_abs+1,TFT_DrawLine@dy+1
  6798  000C56                     
  6799                           ;TFT.c: 207: int16_t err = dx / 2;
  6800  000C56  C034  F005         	movff	TFT_DrawLine@dx,___awdiv@dividend
  6801  000C5A  C035  F006         	movff	TFT_DrawLine@dx+1,___awdiv@dividend+1
  6802  000C5E  0E00               	movlw	0
  6803  000C60  6E08               	movwf	(___awdiv@divisor+1)^0,c
  6804  000C62  0E02               	movlw	2
  6805  000C64  6E07               	movwf	___awdiv@divisor^0,c
  6806  000C66  ECBC  F00E         	call	___awdiv	;wreg free
  6807  000C6A  C005  F030         	movff	?___awdiv,TFT_DrawLine@err
  6808  000C6E  C006  F031         	movff	?___awdiv+1,TFT_DrawLine@err+1
  6809                           
  6810                           ;TFT.c: 208: int16_t ystep;;TFT.c: 210: if(y0 < y1) {
  6811  000C72  501D               	movf	TFT_DrawLine@y1^0,w,c
  6812  000C74  5C19               	subwf	TFT_DrawLine@y0^0,w,c
  6813  000C76  501A               	movf	(TFT_DrawLine@y0+1)^0,w,c
  6814  000C78  0A80               	xorlw	128
  6815  000C7A  6E21               	movwf	??_TFT_DrawLine^0,c
  6816  000C7C  501E               	movf	(TFT_DrawLine@y1+1)^0,w,c
  6817  000C7E  0A80               	xorlw	128
  6818  000C80  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6819  000C82  B0D8               	btfsc	status,0,c
  6820  000C84  EF46  F006         	goto	u4131
  6821  000C88  EF48  F006         	goto	u4130
  6822  000C8C                     u4131:
  6823  000C8C  EF4E  F006         	goto	l272
  6824  000C90                     u4130:
  6825  000C90                     
  6826                           ;TFT.c: 211: ystep = 1;
  6827  000C90  0E00               	movlw	0
  6828  000C92  6E2F               	movwf	(TFT_DrawLine@ystep+1)^0,c
  6829  000C94  0E01               	movlw	1
  6830  000C96  6E2E               	movwf	TFT_DrawLine@ystep^0,c
  6831                           
  6832                           ;TFT.c: 212: } else {
  6833  000C98  EF8E  F006         	goto	l4857
  6834  000C9C                     l272:
  6835                           
  6836                           ;TFT.c: 213: ystep = -1;
  6837  000C9C  682E               	setf	TFT_DrawLine@ystep^0,c
  6838  000C9E  682F               	setf	(TFT_DrawLine@ystep+1)^0,c
  6839  000CA0  EF8E  F006         	goto	l4857
  6840  000CA4                     l4843:
  6841                           
  6842                           ;TFT.c: 217: if(steep) {
  6843  000CA4  5032               	movf	TFT_DrawLine@steep^0,w,c
  6844  000CA6  1033               	iorwf	(TFT_DrawLine@steep+1)^0,w,c
  6845  000CA8  B4D8               	btfsc	status,2,c
  6846  000CAA  EF59  F006         	goto	u4141
  6847  000CAE  EF5B  F006         	goto	u4140
  6848  000CB2                     u4141:
  6849  000CB2  EF6B  F006         	goto	l4847
  6850  000CB6                     u4140:
  6851  000CB6                     
  6852                           ;TFT.c: 218: TFT_DrawPixel(y0, x0, color);
  6853  000CB6  C019  F00D         	movff	TFT_DrawLine@y0,TFT_DrawPixel@x
  6854  000CBA  C01A  F00E         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@x+1
  6855  000CBE  C017  F00F         	movff	TFT_DrawLine@x0,TFT_DrawPixel@y
  6856  000CC2  C018  F010         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@y+1
  6857  000CC6  C01F  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6858  000CCA  C020  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6859  000CCE  EC77  F00D         	call	_TFT_DrawPixel	;wreg free
  6860                           
  6861                           ;TFT.c: 219: } else {
  6862  000CD2  EF79  F006         	goto	l4849
  6863  000CD6                     l4847:
  6864                           
  6865                           ;TFT.c: 220: TFT_DrawPixel(x0, y0, color);
  6866  000CD6  C017  F00D         	movff	TFT_DrawLine@x0,TFT_DrawPixel@x
  6867  000CDA  C018  F00E         	movff	TFT_DrawLine@x0+1,TFT_DrawPixel@x+1
  6868  000CDE  C019  F00F         	movff	TFT_DrawLine@y0,TFT_DrawPixel@y
  6869  000CE2  C01A  F010         	movff	TFT_DrawLine@y0+1,TFT_DrawPixel@y+1
  6870  000CE6  C01F  F011         	movff	TFT_DrawLine@color,TFT_DrawPixel@color
  6871  000CEA  C020  F012         	movff	TFT_DrawLine@color+1,TFT_DrawPixel@color+1
  6872  000CEE  EC77  F00D         	call	_TFT_DrawPixel	;wreg free
  6873  000CF2                     l4849:
  6874                           
  6875                           ;TFT.c: 221: };TFT.c: 222: err -= dy;
  6876  000CF2  502C               	movf	TFT_DrawLine@dy^0,w,c
  6877  000CF4  5E30               	subwf	TFT_DrawLine@err^0,f,c
  6878  000CF6  502D               	movf	(TFT_DrawLine@dy+1)^0,w,c
  6879  000CF8  5A31               	subwfb	(TFT_DrawLine@err+1)^0,f,c
  6880  000CFA                     
  6881                           ;TFT.c: 223: if(err < 0) {
  6882  000CFA  BE31               	btfsc	(TFT_DrawLine@err+1)^0,7,c
  6883  000CFC  EF84  F006         	goto	u4150
  6884  000D00  EF82  F006         	goto	u4151
  6885  000D04                     u4151:
  6886  000D04  EF8C  F006         	goto	l4855
  6887  000D08                     u4150:
  6888  000D08                     
  6889                           ;TFT.c: 224: y0 += ystep;
  6890  000D08  502E               	movf	TFT_DrawLine@ystep^0,w,c
  6891  000D0A  2619               	addwf	TFT_DrawLine@y0^0,f,c
  6892  000D0C  502F               	movf	(TFT_DrawLine@ystep+1)^0,w,c
  6893  000D0E  221A               	addwfc	(TFT_DrawLine@y0+1)^0,f,c
  6894                           
  6895                           ;TFT.c: 225: err += dx;
  6896  000D10  5034               	movf	TFT_DrawLine@dx^0,w,c
  6897  000D12  2630               	addwf	TFT_DrawLine@err^0,f,c
  6898  000D14  5035               	movf	(TFT_DrawLine@dx+1)^0,w,c
  6899  000D16  2231               	addwfc	(TFT_DrawLine@err+1)^0,f,c
  6900  000D18                     l4855:
  6901  000D18  4A17               	infsnz	TFT_DrawLine@x0^0,f,c
  6902  000D1A  2A18               	incf	(TFT_DrawLine@x0+1)^0,f,c
  6903  000D1C                     l4857:
  6904  000D1C  501B               	movf	TFT_DrawLine@x1^0,w,c
  6905  000D1E  5C17               	subwf	TFT_DrawLine@x0^0,w,c
  6906  000D20  5018               	movf	(TFT_DrawLine@x0+1)^0,w,c
  6907  000D22  0A80               	xorlw	128
  6908  000D24  6E21               	movwf	??_TFT_DrawLine^0,c
  6909  000D26  501C               	movf	(TFT_DrawLine@x1+1)^0,w,c
  6910  000D28  0A80               	xorlw	128
  6911  000D2A  5821               	subwfb	??_TFT_DrawLine^0,w,c
  6912  000D2C  A0D8               	btfss	status,0,c
  6913  000D2E  EF9B  F006         	goto	u4161
  6914  000D32  EF9D  F006         	goto	u4160
  6915  000D36                     u4161:
  6916  000D36  EF52  F006         	goto	l4843
  6917  000D3A                     u4160:
  6918  000D3A  0012               	return		;funcret
  6919  000D3C                     __end_of_TFT_DrawLine:
  6920                           	opt callstack 0
  6921                           
  6922 ;; *************** function _abs *****************
  6923 ;; Defined at:
  6924 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/abs.c"
  6925 ;; Parameters:    Size  Location     Type
  6926 ;;  a               2    4[COMRAM] int 
  6927 ;; Auto vars:     Size  Location     Type
  6928 ;;		None
  6929 ;; Return value:  Size  Location     Type
  6930 ;;                  2    4[COMRAM] int 
  6931 ;; Registers used:
  6932 ;;		wreg, status,2, status,0
  6933 ;; Tracked objects:
  6934 ;;		On entry : 0/0
  6935 ;;		On exit  : 0/0
  6936 ;;		Unchanged: 0/0
  6937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6938 ;;      Params:         2       0       0       0       0       0       0       0       0
  6939 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6940 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6941 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6942 ;;Total ram usage:        4 bytes
  6943 ;; Hardware stack levels used:    1
  6944 ;; Hardware stack levels required when called:    2
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_TFT_DrawLine
  6949 ;;		_Ecg_ProcessHeartbeat
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text28
  6954  002F04                     __ptext28:
  6955                           	opt callstack 0
  6956  002F04                     _abs:
  6957                           	opt callstack 23
  6958  002F04  BE06               	btfsc	(abs@a+1)^0,7,c
  6959  002F06  EF89  F017         	goto	u3990
  6960  002F0A  EF87  F017         	goto	u3991
  6961  002F0E                     u3991:
  6962  002F0E  EF97  F017         	goto	l1420
  6963  002F12                     u3990:
  6964  002F12  C005  F007         	movff	abs@a,??_abs
  6965  002F16  C006  F008         	movff	abs@a+1,??_abs+1
  6966  002F1A  1E07               	comf	??_abs^0,f,c
  6967  002F1C  1E08               	comf	(??_abs+1)^0,f,c
  6968  002F1E  4A07               	infsnz	??_abs^0,f,c
  6969  002F20  2A08               	incf	(??_abs+1)^0,f,c
  6970  002F22  C007  F005         	movff	??_abs,?_abs
  6971  002F26  C008  F006         	movff	??_abs+1,?_abs+1
  6972  002F2A  EF9B  F017         	goto	l1421
  6973  002F2E                     l1420:
  6974  002F2E  C005  F005         	movff	abs@a,?_abs
  6975  002F32  C006  F006         	movff	abs@a+1,?_abs+1
  6976  002F36                     l1421:
  6977  002F36  0012               	return		;funcret
  6978  002F38                     __end_of_abs:
  6979                           	opt callstack 0
  6980                           
  6981 ;; *************** function ___awdiv *****************
  6982 ;; Defined at:
  6983 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/awdiv.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  dividend        2    4[COMRAM] int 
  6986 ;;  divisor         2    6[COMRAM] int 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  quotient        2   10[COMRAM] int 
  6989 ;;  sign            1    9[COMRAM] unsigned char 
  6990 ;;  counter         1    8[COMRAM] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  2    4[COMRAM] int 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7000 ;;      Params:         4       0       0       0       0       0       0       0       0
  7001 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7003 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7004 ;;Total ram usage:        8 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    2
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_TFT_DrawLine
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text29
  7015  001D78                     __ptext29:
  7016                           	opt callstack 0
  7017  001D78                     ___awdiv:
  7018                           	opt callstack 23
  7019  001D78  0E00               	movlw	0
  7020  001D7A  6E0A               	movwf	___awdiv@sign^0,c
  7021  001D7C  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  7022  001D7E  EFC5  F00E         	goto	u4030
  7023  001D82  EFC3  F00E         	goto	u4031
  7024  001D86                     u4031:
  7025  001D86  EFCB  F00E         	goto	l4783
  7026  001D8A                     u4030:
  7027  001D8A  6C07               	negf	___awdiv@divisor^0,c
  7028  001D8C  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  7029  001D8E  B0D8               	btfsc	status,0,c
  7030  001D90  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  7031  001D92  0E01               	movlw	1
  7032  001D94  6E0A               	movwf	___awdiv@sign^0,c
  7033  001D96                     l4783:
  7034  001D96  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  7035  001D98  EFD2  F00E         	goto	u4040
  7036  001D9C  EFD0  F00E         	goto	u4041
  7037  001DA0                     u4041:
  7038  001DA0  EFD8  F00E         	goto	l4789
  7039  001DA4                     u4040:
  7040  001DA4  6C05               	negf	___awdiv@dividend^0,c
  7041  001DA6  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  7042  001DA8  B0D8               	btfsc	status,0,c
  7043  001DAA  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  7044  001DAC  0E01               	movlw	1
  7045  001DAE  1A0A               	xorwf	___awdiv@sign^0,f,c
  7046  001DB0                     l4789:
  7047  001DB0  0E00               	movlw	0
  7048  001DB2  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  7049  001DB4  0E00               	movlw	0
  7050  001DB6  6E0B               	movwf	___awdiv@quotient^0,c
  7051  001DB8  5007               	movf	___awdiv@divisor^0,w,c
  7052  001DBA  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  7053  001DBC  B4D8               	btfsc	status,2,c
  7054  001DBE  EFE3  F00E         	goto	u4051
  7055  001DC2  EFE5  F00E         	goto	u4050
  7056  001DC6                     u4051:
  7057  001DC6  EF0D  F00F         	goto	l4811
  7058  001DCA                     u4050:
  7059  001DCA  0E01               	movlw	1
  7060  001DCC  6E09               	movwf	___awdiv@counter^0,c
  7061  001DCE  EFED  F00E         	goto	l4797
  7062  001DD2                     l4795:
  7063  001DD2  90D8               	bcf	status,0,c
  7064  001DD4  3607               	rlcf	___awdiv@divisor^0,f,c
  7065  001DD6  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  7066  001DD8  2A09               	incf	___awdiv@counter^0,f,c
  7067  001DDA                     l4797:
  7068  001DDA  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  7069  001DDC  EFF2  F00E         	goto	u4061
  7070  001DE0  EFF4  F00E         	goto	u4060
  7071  001DE4                     u4061:
  7072  001DE4  EFE9  F00E         	goto	l4795
  7073  001DE8                     u4060:
  7074  001DE8                     l4799:
  7075  001DE8  90D8               	bcf	status,0,c
  7076  001DEA  360B               	rlcf	___awdiv@quotient^0,f,c
  7077  001DEC  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  7078  001DEE  5007               	movf	___awdiv@divisor^0,w,c
  7079  001DF0  5C05               	subwf	___awdiv@dividend^0,w,c
  7080  001DF2  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7081  001DF4  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  7082  001DF6  A0D8               	btfss	status,0,c
  7083  001DF8  EF00  F00F         	goto	u4071
  7084  001DFC  EF02  F00F         	goto	u4070
  7085  001E00                     u4071:
  7086  001E00  EF07  F00F         	goto	l4807
  7087  001E04                     u4070:
  7088  001E04  5007               	movf	___awdiv@divisor^0,w,c
  7089  001E06  5E05               	subwf	___awdiv@dividend^0,f,c
  7090  001E08  5008               	movf	(___awdiv@divisor+1)^0,w,c
  7091  001E0A  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  7092  001E0C  800B               	bsf	___awdiv@quotient^0,0,c
  7093  001E0E                     l4807:
  7094  001E0E  90D8               	bcf	status,0,c
  7095  001E10  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  7096  001E12  3207               	rrcf	___awdiv@divisor^0,f,c
  7097  001E14  2E09               	decfsz	___awdiv@counter^0,f,c
  7098  001E16  EFF4  F00E         	goto	l4799
  7099  001E1A                     l4811:
  7100  001E1A  500A               	movf	___awdiv@sign^0,w,c
  7101  001E1C  B4D8               	btfsc	status,2,c
  7102  001E1E  EF13  F00F         	goto	u4081
  7103  001E22  EF15  F00F         	goto	u4080
  7104  001E26                     u4081:
  7105  001E26  EF19  F00F         	goto	l4815
  7106  001E2A                     u4080:
  7107  001E2A  6C0B               	negf	___awdiv@quotient^0,c
  7108  001E2C  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  7109  001E2E  B0D8               	btfsc	status,0,c
  7110  001E30  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  7111  001E32                     l4815:
  7112  001E32  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  7113  001E36  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  7114  001E3A  0012               	return		;funcret
  7115  001E3C                     __end_of___awdiv:
  7116                           	opt callstack 0
  7117                           
  7118 ;; *************** function _TFT_DrawPixel *****************
  7119 ;; Defined at:
  7120 ;;		line 167 in file "TFT.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  x               2   12[COMRAM] unsigned int 
  7123 ;;  y               2   14[COMRAM] unsigned int 
  7124 ;;  color           2   16[COMRAM] unsigned int 
  7125 ;; Auto vars:     Size  Location     Type
  7126 ;;  v               2   20[COMRAM] unsigned int 
  7127 ;;  h               2   18[COMRAM] unsigned int 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  1    wreg      void 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0, cstack
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7137 ;;      Params:         6       0       0       0       0       0       0       0       0
  7138 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7140 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7141 ;;Total ram usage:       10 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    3
  7144 ;; This function calls:
  7145 ;;		_TFT_OrientationGet
  7146 ;;		_TFT_WriteRegister
  7147 ;; This function is called by:
  7148 ;;		_TFT_DrawLine
  7149 ;;		_TFT_DrawChar
  7150 ;;		_TFT_DrawBitmap
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text30
  7155  001AEE                     __ptext30:
  7156                           	opt callstack 0
  7157  001AEE                     _TFT_DrawPixel:
  7158                           	opt callstack 23
  7159  001AEE                     
  7160                           ;TFT.c: 168: uint16_t h, v;;TFT.c: 169: switch(TFT_OrientationGet()) {
  7161  001AEE  EFB1  F00D         	goto	l4743
  7162  001AF2                     l262:
  7163                           
  7164                           ;TFT.c: 171: h = x;
  7165  001AF2  C00D  F013         	movff	TFT_DrawPixel@x,TFT_DrawPixel@h
  7166  001AF6  C00E  F014         	movff	TFT_DrawPixel@x+1,TFT_DrawPixel@h+1
  7167                           
  7168                           ;TFT.c: 172: v = y;
  7169  001AFA  C00F  F015         	movff	TFT_DrawPixel@y,TFT_DrawPixel@v
  7170  001AFE  C010  F016         	movff	TFT_DrawPixel@y+1,TFT_DrawPixel@v+1
  7171                           
  7172                           ;TFT.c: 173: break;
  7173  001B02  EFC5  F00D         	goto	l4745
  7174  001B06                     l4733:
  7175                           
  7176                           ;TFT.c: 175: h = 240 - y - 1;
  7177  001B06  500F               	movf	TFT_DrawPixel@y^0,w,c
  7178  001B08  08EF               	sublw	239
  7179  001B0A  6E13               	movwf	TFT_DrawPixel@h^0,c
  7180  001B0C  5010               	movf	(TFT_DrawPixel@y+1)^0,w,c
  7181  001B0E  A0D8               	btfss	status,0,c
  7182  001B10  2AE8               	incf	wreg,f,c
  7183  001B12  0800               	sublw	0
  7184  001B14  6E14               	movwf	(TFT_DrawPixel@h+1)^0,c
  7185  001B16                     
  7186                           ;TFT.c: 176: v = x;
  7187  001B16  C00D  F015         	movff	TFT_DrawPixel@x,TFT_DrawPixel@v
  7188  001B1A  C00E  F016         	movff	TFT_DrawPixel@x+1,TFT_DrawPixel@v+1
  7189                           
  7190                           ;TFT.c: 177: break;
  7191  001B1E  EFC5  F00D         	goto	l4745
  7192  001B22                     l4737:
  7193                           
  7194                           ;TFT.c: 179: h = 240 - x - 1;
  7195  001B22  500D               	movf	TFT_DrawPixel@x^0,w,c
  7196  001B24  08EF               	sublw	239
  7197  001B26  6E13               	movwf	TFT_DrawPixel@h^0,c
  7198  001B28  500E               	movf	(TFT_DrawPixel@x+1)^0,w,c
  7199  001B2A  A0D8               	btfss	status,0,c
  7200  001B2C  2AE8               	incf	wreg,f,c
  7201  001B2E  0800               	sublw	0
  7202  001B30  6E14               	movwf	(TFT_DrawPixel@h+1)^0,c
  7203                           
  7204                           ;TFT.c: 180: v = 400 - y - 1;
  7205  001B32  500F               	movf	TFT_DrawPixel@y^0,w,c
  7206  001B34  088F               	sublw	143
  7207  001B36  6E15               	movwf	TFT_DrawPixel@v^0,c
  7208  001B38  5010               	movf	(TFT_DrawPixel@y+1)^0,w,c
  7209  001B3A  A0D8               	btfss	status,0,c
  7210  001B3C  2AE8               	incf	wreg,f,c
  7211  001B3E  0801               	sublw	1
  7212  001B40  6E16               	movwf	(TFT_DrawPixel@v+1)^0,c
  7213                           
  7214                           ;TFT.c: 181: break;
  7215  001B42  EFC5  F00D         	goto	l4745
  7216  001B46                     l266:
  7217                           
  7218                           ;TFT.c: 183: h = y;
  7219  001B46  C00F  F013         	movff	TFT_DrawPixel@y,TFT_DrawPixel@h
  7220  001B4A  C010  F014         	movff	TFT_DrawPixel@y+1,TFT_DrawPixel@h+1
  7221  001B4E                     
  7222                           ;TFT.c: 184: v = 400 - x - 1;
  7223  001B4E  500D               	movf	TFT_DrawPixel@x^0,w,c
  7224  001B50  088F               	sublw	143
  7225  001B52  6E15               	movwf	TFT_DrawPixel@v^0,c
  7226  001B54  500E               	movf	(TFT_DrawPixel@x+1)^0,w,c
  7227  001B56  A0D8               	btfss	status,0,c
  7228  001B58  2AE8               	incf	wreg,f,c
  7229  001B5A  0801               	sublw	1
  7230  001B5C  6E16               	movwf	(TFT_DrawPixel@v+1)^0,c
  7231                           
  7232                           ;TFT.c: 185: break;
  7233  001B5E  EFC5  F00D         	goto	l4745
  7234  001B62                     l4743:
  7235  001B62  EC2A  F018         	call	_TFT_OrientationGet	;wreg free
  7236                           
  7237                           ; Switch size 1, requested type "simple"
  7238                           ; Number of cases is 4, Range of values is 0 to 3
  7239                           ; switch strategies available:
  7240                           ; Name         Instructions Cycles
  7241                           ; simple_byte           13     7 (average)
  7242                           ;	Chosen strategy is simple_byte
  7243  001B66  0A00               	xorlw	0	; case 0
  7244  001B68  B4D8               	btfsc	status,2,c
  7245  001B6A  EF79  F00D         	goto	l262
  7246  001B6E  0A01               	xorlw	1	; case 1
  7247  001B70  B4D8               	btfsc	status,2,c
  7248  001B72  EF83  F00D         	goto	l4733
  7249  001B76  0A03               	xorlw	3	; case 2
  7250  001B78  B4D8               	btfsc	status,2,c
  7251  001B7A  EF91  F00D         	goto	l4737
  7252  001B7E  0A01               	xorlw	1	; case 3
  7253  001B80  B4D8               	btfsc	status,2,c
  7254  001B82  EFA3  F00D         	goto	l266
  7255  001B86  EFC5  F00D         	goto	l4745
  7256  001B8A                     l4745:
  7257                           
  7258                           ;TFT.c: 187: TFT_WriteRegister(0x0200, h);
  7259  001B8A  0E02               	movlw	2
  7260  001B8C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7261  001B8E  0E00               	movlw	0
  7262  001B90  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7263  001B92  C013  F007         	movff	TFT_DrawPixel@h,TFT_WriteRegister@data
  7264  001B96  C014  F008         	movff	TFT_DrawPixel@h+1,TFT_WriteRegister@data+1
  7265  001B9A  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7266                           
  7267                           ;TFT.c: 188: TFT_WriteRegister(0x0201, v);
  7268  001B9E  0E02               	movlw	2
  7269  001BA0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7270  001BA2  0E01               	movlw	1
  7271  001BA4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7272  001BA6  C015  F007         	movff	TFT_DrawPixel@v,TFT_WriteRegister@data
  7273  001BAA  C016  F008         	movff	TFT_DrawPixel@v+1,TFT_WriteRegister@data+1
  7274  001BAE  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7275                           
  7276                           ;TFT.c: 189: TFT_WriteRegister(0x0202, color);
  7277  001BB2  0E02               	movlw	2
  7278  001BB4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7279  001BB6  0E02               	movlw	2
  7280  001BB8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7281  001BBA  C011  F007         	movff	TFT_DrawPixel@color,TFT_WriteRegister@data
  7282  001BBE  C012  F008         	movff	TFT_DrawPixel@color+1,TFT_WriteRegister@data+1
  7283  001BC2  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7284  001BC6  0012               	return		;funcret
  7285  001BC8                     __end_of_TFT_DrawPixel:
  7286                           	opt callstack 0
  7287                           
  7288 ;; *************** function _TFT_DrawFillRect *****************
  7289 ;; Defined at:
  7290 ;;		line 230 in file "TFT.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  x               2   31[COMRAM] unsigned int 
  7293 ;;  y               2   33[COMRAM] unsigned int 
  7294 ;;  w               2   35[COMRAM] unsigned int 
  7295 ;;  h               2   37[COMRAM] unsigned int 
  7296 ;;  color           2   39[COMRAM] unsigned int 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7308 ;;      Params:        10       0       0       0       0       0       0       0       0
  7309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7310 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7311 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7312 ;;Total ram usage:       14 bytes
  7313 ;; Hardware stack levels used:    1
  7314 ;; Hardware stack levels required when called:    5
  7315 ;; This function calls:
  7316 ;;		_TFT_Flood
  7317 ;;		_TFT_FullScreen
  7318 ;;		_TFT_SetAddrWindow
  7319 ;;		___wmul
  7320 ;; This function is called by:
  7321 ;;		_processGSM
  7322 ;;		_TFT_DrawChar
  7323 ;;		_Ecg_ProcessHeartbeat
  7324 ;;		_Ecg_Draw
  7325 ;;		_TFT_ConsolePrintLine
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text31
  7330  002428                     __ptext31:
  7331                           	opt callstack 0
  7332  002428                     _TFT_DrawFillRect:
  7333                           	opt callstack 21
  7334  002428                     
  7335                           ;TFT.c: 231: TFT_SetAddrWindow(x, y, (x + w - 1), (y + h - 1));
  7336  002428  C020  F00D         	movff	TFT_DrawFillRect@x,TFT_SetAddrWindow@x1
  7337  00242C  C021  F00E         	movff	TFT_DrawFillRect@x+1,TFT_SetAddrWindow@x1+1
  7338  002430  C022  F00F         	movff	TFT_DrawFillRect@y,TFT_SetAddrWindow@y1
  7339  002434  C023  F010         	movff	TFT_DrawFillRect@y+1,TFT_SetAddrWindow@y1+1
  7340  002438  5024               	movf	TFT_DrawFillRect@w^0,w,c
  7341  00243A  2420               	addwf	TFT_DrawFillRect@x^0,w,c
  7342  00243C  6E2A               	movwf	??_TFT_DrawFillRect^0,c
  7343  00243E  5025               	movf	(TFT_DrawFillRect@w+1)^0,w,c
  7344  002440  2021               	addwfc	(TFT_DrawFillRect@x+1)^0,w,c
  7345  002442  6E2B               	movwf	(??_TFT_DrawFillRect+1)^0,c
  7346  002444  0EFF               	movlw	255
  7347  002446  242A               	addwf	??_TFT_DrawFillRect^0,w,c
  7348  002448  6E11               	movwf	TFT_SetAddrWindow@x2^0,c
  7349  00244A  0EFF               	movlw	255
  7350  00244C  202B               	addwfc	(??_TFT_DrawFillRect+1)^0,w,c
  7351  00244E  6E12               	movwf	(TFT_SetAddrWindow@x2+1)^0,c
  7352  002450  5026               	movf	TFT_DrawFillRect@h^0,w,c
  7353  002452  2422               	addwf	TFT_DrawFillRect@y^0,w,c
  7354  002454  6E2C               	movwf	(??_TFT_DrawFillRect+2)^0,c
  7355  002456  5027               	movf	(TFT_DrawFillRect@h+1)^0,w,c
  7356  002458  2023               	addwfc	(TFT_DrawFillRect@y+1)^0,w,c
  7357  00245A  6E2D               	movwf	(??_TFT_DrawFillRect+3)^0,c
  7358  00245C  0EFF               	movlw	255
  7359  00245E  242C               	addwf	(??_TFT_DrawFillRect+2)^0,w,c
  7360  002460  6E13               	movwf	TFT_SetAddrWindow@y2^0,c
  7361  002462  0EFF               	movlw	255
  7362  002464  202D               	addwfc	(??_TFT_DrawFillRect+3)^0,w,c
  7363  002466  6E14               	movwf	(TFT_SetAddrWindow@y2+1)^0,c
  7364  002468  EC45  F003         	call	_TFT_SetAddrWindow	;wreg free
  7365  00246C                     
  7366                           ;TFT.c: 232: TFT_Flood(color, (w * h));
  7367  00246C  C028  F00F         	movff	TFT_DrawFillRect@color,TFT_Flood@color
  7368  002470  C029  F010         	movff	TFT_DrawFillRect@color+1,TFT_Flood@color+1
  7369  002474  C024  F009         	movff	TFT_DrawFillRect@w,___wmul@multiplier
  7370  002478  C025  F00A         	movff	TFT_DrawFillRect@w+1,___wmul@multiplier+1
  7371  00247C  C026  F00B         	movff	TFT_DrawFillRect@h,___wmul@multiplicand
  7372  002480  C027  F00C         	movff	TFT_DrawFillRect@h+1,___wmul@multiplicand+1
  7373  002484  ECE1  F017         	call	___wmul	;wreg free
  7374  002488  C009  F011         	movff	?___wmul,TFT_Flood@len
  7375  00248C  C00A  F012         	movff	?___wmul+1,TFT_Flood@len+1
  7376  002490  6A13               	clrf	(TFT_Flood@len+2)^0,c
  7377  002492  6A14               	clrf	(TFT_Flood@len+3)^0,c
  7378  002494  EC9E  F006         	call	_TFT_Flood	;wreg free
  7379  002498                     
  7380                           ;TFT.c: 233: TFT_FullScreen(0);
  7381  002498  0E00               	movlw	0
  7382  00249A  6E1F               	movwf	(TFT_FullScreen@color+1)^0,c
  7383  00249C  0E00               	movlw	0
  7384  00249E  6E1E               	movwf	TFT_FullScreen@color^0,c
  7385  0024A0  ECDD  F014         	call	_TFT_FullScreen	;wreg free
  7386  0024A4  0012               	return		;funcret
  7387  0024A6                     __end_of_TFT_DrawFillRect:
  7388                           	opt callstack 0
  7389                           
  7390 ;; *************** function _TFT_FullScreen *****************
  7391 ;; Defined at:
  7392 ;;		line 160 in file "TFT.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  color           2   29[COMRAM] unsigned int 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  1    wreg      void 
  7399 ;; Registers used:
  7400 ;;		wreg, status,2, status,0, cstack
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7406 ;;      Params:         2       0       0       0       0       0       0       0       0
  7407 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7409 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7410 ;;Total ram usage:        2 bytes
  7411 ;; Hardware stack levels used:    1
  7412 ;; Hardware stack levels required when called:    4
  7413 ;; This function calls:
  7414 ;;		_TFT_Flood
  7415 ;;		_TFT_GetHeight
  7416 ;;		_TFT_GetWidth
  7417 ;;		_TFT_SetAddrWindow
  7418 ;; This function is called by:
  7419 ;;		_TFT_OrientationSet
  7420 ;;		_TFT_DrawFillRect
  7421 ;;		_Ecg_Background_Leads_Ok
  7422 ;;		_Ecg_Background_Leads_Failure
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           	psect	text32
  7427  0029BA                     __ptext32:
  7428                           	opt callstack 0
  7429  0029BA                     _TFT_FullScreen:
  7430                           	opt callstack 21
  7431  0029BA                     
  7432                           ;TFT.c: 161: TFT_SetAddrWindow(0, 0, TFT_GetWidth(), TFT_GetHeight());
  7433  0029BA  0E00               	movlw	0
  7434  0029BC  6E0E               	movwf	(TFT_SetAddrWindow@x1+1)^0,c
  7435  0029BE  0E00               	movlw	0
  7436  0029C0  6E0D               	movwf	TFT_SetAddrWindow@x1^0,c
  7437  0029C2  0E00               	movlw	0
  7438  0029C4  6E10               	movwf	(TFT_SetAddrWindow@y1+1)^0,c
  7439  0029C6  0E00               	movlw	0
  7440  0029C8  6E0F               	movwf	TFT_SetAddrWindow@y1^0,c
  7441  0029CA  ECD4  F015         	call	_TFT_GetWidth	;wreg free
  7442  0029CE  C005  F011         	movff	?_TFT_GetWidth,TFT_SetAddrWindow@x2
  7443  0029D2  C006  F012         	movff	?_TFT_GetWidth+1,TFT_SetAddrWindow@x2+1
  7444  0029D6  ECFB  F015         	call	_TFT_GetHeight	;wreg free
  7445  0029DA  C005  F013         	movff	?_TFT_GetHeight,TFT_SetAddrWindow@y2
  7446  0029DE  C006  F014         	movff	?_TFT_GetHeight+1,TFT_SetAddrWindow@y2+1
  7447  0029E2  EC45  F003         	call	_TFT_SetAddrWindow	;wreg free
  7448  0029E6                     
  7449                           ;TFT.c: 162: if(color != 0) {
  7450  0029E6  501E               	movf	TFT_FullScreen@color^0,w,c
  7451  0029E8  101F               	iorwf	(TFT_FullScreen@color+1)^0,w,c
  7452  0029EA  B4D8               	btfsc	status,2,c
  7453  0029EC  EFFA  F014         	goto	u3981
  7454  0029F0  EFFC  F014         	goto	u3980
  7455  0029F4                     u3981:
  7456  0029F4  EF0A  F015         	goto	l258
  7457  0029F8                     u3980:
  7458  0029F8                     
  7459                           ;TFT.c: 163: TFT_Flood(color, (uint32_t)240 * (uint32_t)400);
  7460  0029F8  C01E  F00F         	movff	TFT_FullScreen@color,TFT_Flood@color
  7461  0029FC  C01F  F010         	movff	TFT_FullScreen@color+1,TFT_Flood@color+1
  7462  002A00  0E00               	movlw	0
  7463  002A02  6E11               	movwf	TFT_Flood@len^0,c
  7464  002A04  0E77               	movlw	119
  7465  002A06  6E12               	movwf	(TFT_Flood@len+1)^0,c
  7466  002A08  0E01               	movlw	1
  7467  002A0A  6E13               	movwf	(TFT_Flood@len+2)^0,c
  7468  002A0C  0E00               	movlw	0
  7469  002A0E  6E14               	movwf	(TFT_Flood@len+3)^0,c
  7470  002A10  EC9E  F006         	call	_TFT_Flood	;wreg free
  7471  002A14                     l258:
  7472  002A14  0012               	return		;funcret
  7473  002A16                     __end_of_TFT_FullScreen:
  7474                           	opt callstack 0
  7475                           
  7476 ;; *************** function _TFT_SetAddrWindow *****************
  7477 ;; Defined at:
  7478 ;;		line 115 in file "TFT.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  x1              2   12[COMRAM] unsigned int 
  7481 ;;  y1              2   14[COMRAM] unsigned int 
  7482 ;;  x2              2   16[COMRAM] unsigned int 
  7483 ;;  y2              2   18[COMRAM] unsigned int 
  7484 ;; Auto vars:     Size  Location     Type
  7485 ;;		None
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7495 ;;      Params:         8       0       0       0       0       0       0       0       0
  7496 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7497 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7498 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7499 ;;Total ram usage:        8 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    3
  7502 ;; This function calls:
  7503 ;;		_TFT_OrientationGet
  7504 ;;		_TFT_WriteRegister
  7505 ;; This function is called by:
  7506 ;;		_TFT_FullScreen
  7507 ;;		_TFT_DrawFillRect
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text33
  7512  00068A                     __ptext33:
  7513                           	opt callstack 0
  7514  00068A                     _TFT_SetAddrWindow:
  7515                           	opt callstack 22
  7516  00068A                     
  7517                           ;TFT.c: 116: switch(TFT_OrientationGet()) {
  7518  00068A  EF6F  F004         	goto	l4695
  7519  00068E                     l4673:
  7520                           
  7521                           ;TFT.c: 119: TFT_WriteRegister(0x0210, x1);
  7522  00068E  0E02               	movlw	2
  7523  000690  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7524  000692  0E10               	movlw	16
  7525  000694  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7526  000696  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7527  00069A  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7528  00069E  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7529                           
  7530                           ;TFT.c: 120: TFT_WriteRegister(0x0211, x2);
  7531  0006A2  0E02               	movlw	2
  7532  0006A4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7533  0006A6  0E11               	movlw	17
  7534  0006A8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7535  0006AA  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  7536  0006AE  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  7537  0006B2  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7538                           
  7539                           ;TFT.c: 121: TFT_WriteRegister(0x0212, y1);
  7540  0006B6  0E02               	movlw	2
  7541  0006B8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7542  0006BA  0E12               	movlw	18
  7543  0006BC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7544  0006BE  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7545  0006C2  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7546  0006C6  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7547                           
  7548                           ;TFT.c: 122: TFT_WriteRegister(0x0213, y2);
  7549  0006CA  0E02               	movlw	2
  7550  0006CC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7551  0006CE  0E13               	movlw	19
  7552  0006D0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7553  0006D2  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7554  0006D6  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7555  0006DA  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7556                           
  7557                           ;TFT.c: 124: TFT_WriteRegister(0x0200, x1);
  7558  0006DE  0E02               	movlw	2
  7559  0006E0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7560  0006E2  0E00               	movlw	0
  7561  0006E4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7562  0006E6  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7563  0006EA  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7564  0006EE  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7565                           
  7566                           ;TFT.c: 125: TFT_WriteRegister(0x0201, y2);
  7567  0006F2  0E02               	movlw	2
  7568  0006F4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7569  0006F6  0E01               	movlw	1
  7570  0006F8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7571  0006FA  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7572  0006FE  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7573  000702  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7574                           
  7575                           ;TFT.c: 126: break;
  7576  000706  EF83  F004         	goto	l254
  7577  00070A                     l4675:
  7578                           
  7579                           ;TFT.c: 129: TFT_WriteRegister(0x0210, 240 - 1 - y2);
  7580  00070A  0E02               	movlw	2
  7581  00070C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7582  00070E  0E10               	movlw	16
  7583  000710  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7584  000712  5013               	movf	TFT_SetAddrWindow@y2^0,w,c
  7585  000714  08EF               	sublw	239
  7586  000716  6E07               	movwf	TFT_WriteRegister@data^0,c
  7587  000718  5014               	movf	(TFT_SetAddrWindow@y2+1)^0,w,c
  7588  00071A  A0D8               	btfss	status,0,c
  7589  00071C  2AE8               	incf	wreg,f,c
  7590  00071E  0800               	sublw	0
  7591  000720  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7592  000722  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7593                           
  7594                           ;TFT.c: 130: TFT_WriteRegister(0x0211, 240 - 1 - y1);
  7595  000726  0E02               	movlw	2
  7596  000728  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7597  00072A  0E11               	movlw	17
  7598  00072C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7599  00072E  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7600  000730  08EF               	sublw	239
  7601  000732  6E07               	movwf	TFT_WriteRegister@data^0,c
  7602  000734  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7603  000736  A0D8               	btfss	status,0,c
  7604  000738  2AE8               	incf	wreg,f,c
  7605  00073A  0800               	sublw	0
  7606  00073C  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7607  00073E  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7608  000742                     
  7609                           ;TFT.c: 131: TFT_WriteRegister(0x0212, x1);
  7610  000742  0E02               	movlw	2
  7611  000744  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7612  000746  0E12               	movlw	18
  7613  000748  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7614  00074A  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7615  00074E  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7616  000752  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7617  000756                     
  7618                           ;TFT.c: 132: TFT_WriteRegister(0x0213, x2);
  7619  000756  0E02               	movlw	2
  7620  000758  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7621  00075A  0E13               	movlw	19
  7622  00075C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7623  00075E  C011  F007         	movff	TFT_SetAddrWindow@x2,TFT_WriteRegister@data
  7624  000762  C012  F008         	movff	TFT_SetAddrWindow@x2+1,TFT_WriteRegister@data+1
  7625  000766  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7626                           
  7627                           ;TFT.c: 134: TFT_WriteRegister(0x0200, 240 - 1 - y1);
  7628  00076A  0E02               	movlw	2
  7629  00076C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7630  00076E  0E00               	movlw	0
  7631  000770  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7632  000772  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7633  000774  08EF               	sublw	239
  7634  000776  6E07               	movwf	TFT_WriteRegister@data^0,c
  7635  000778  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7636  00077A  A0D8               	btfss	status,0,c
  7637  00077C  2AE8               	incf	wreg,f,c
  7638  00077E  0800               	sublw	0
  7639  000780  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7640  000782  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7641  000786                     
  7642                           ;TFT.c: 135: TFT_WriteRegister(0x0201, x1);
  7643  000786  0E02               	movlw	2
  7644  000788  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7645  00078A  0E01               	movlw	1
  7646  00078C  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7647  00078E  C00D  F007         	movff	TFT_SetAddrWindow@x1,TFT_WriteRegister@data
  7648  000792  C00E  F008         	movff	TFT_SetAddrWindow@x1+1,TFT_WriteRegister@data+1
  7649  000796  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7650                           
  7651                           ;TFT.c: 136: break;
  7652  00079A  EF83  F004         	goto	l254
  7653  00079E                     l4683:
  7654                           
  7655                           ;TFT.c: 139: TFT_WriteRegister(0x0210, 240 - 1 - x2);
  7656  00079E  0E02               	movlw	2
  7657  0007A0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7658  0007A2  0E10               	movlw	16
  7659  0007A4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7660  0007A6  5011               	movf	TFT_SetAddrWindow@x2^0,w,c
  7661  0007A8  08EF               	sublw	239
  7662  0007AA  6E07               	movwf	TFT_WriteRegister@data^0,c
  7663  0007AC  5012               	movf	(TFT_SetAddrWindow@x2+1)^0,w,c
  7664  0007AE  A0D8               	btfss	status,0,c
  7665  0007B0  2AE8               	incf	wreg,f,c
  7666  0007B2  0800               	sublw	0
  7667  0007B4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7668  0007B6  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7669                           
  7670                           ;TFT.c: 140: TFT_WriteRegister(0x0211, 240 - 1 - x1);
  7671  0007BA  0E02               	movlw	2
  7672  0007BC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7673  0007BE  0E11               	movlw	17
  7674  0007C0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7675  0007C2  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7676  0007C4  08EF               	sublw	239
  7677  0007C6  6E07               	movwf	TFT_WriteRegister@data^0,c
  7678  0007C8  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7679  0007CA  A0D8               	btfss	status,0,c
  7680  0007CC  2AE8               	incf	wreg,f,c
  7681  0007CE  0800               	sublw	0
  7682  0007D0  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7683  0007D2  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7684                           
  7685                           ;TFT.c: 141: TFT_WriteRegister(0x0212, 400 - 1 - y2);
  7686  0007D6  0E02               	movlw	2
  7687  0007D8  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7688  0007DA  0E12               	movlw	18
  7689  0007DC  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7690  0007DE  5013               	movf	TFT_SetAddrWindow@y2^0,w,c
  7691  0007E0  088F               	sublw	143
  7692  0007E2  6E07               	movwf	TFT_WriteRegister@data^0,c
  7693  0007E4  5014               	movf	(TFT_SetAddrWindow@y2+1)^0,w,c
  7694  0007E6  A0D8               	btfss	status,0,c
  7695  0007E8  2AE8               	incf	wreg,f,c
  7696  0007EA  0801               	sublw	1
  7697  0007EC  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7698  0007EE  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7699                           
  7700                           ;TFT.c: 142: TFT_WriteRegister(0x0213, 400 - 1 - y1);
  7701  0007F2  0E02               	movlw	2
  7702  0007F4  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7703  0007F6  0E13               	movlw	19
  7704  0007F8  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7705  0007FA  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7706  0007FC  088F               	sublw	143
  7707  0007FE  6E07               	movwf	TFT_WriteRegister@data^0,c
  7708  000800  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7709  000802  A0D8               	btfss	status,0,c
  7710  000804  2AE8               	incf	wreg,f,c
  7711  000806  0801               	sublw	1
  7712  000808  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7713  00080A  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7714                           
  7715                           ;TFT.c: 144: TFT_WriteRegister(0x0200, 240 - 1 - x1);
  7716  00080E  0E02               	movlw	2
  7717  000810  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7718  000812  0E00               	movlw	0
  7719  000814  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7720  000816  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7721  000818  08EF               	sublw	239
  7722  00081A  6E07               	movwf	TFT_WriteRegister@data^0,c
  7723  00081C  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7724  00081E  A0D8               	btfss	status,0,c
  7725  000820  2AE8               	incf	wreg,f,c
  7726  000822  0800               	sublw	0
  7727  000824  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7728  000826  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7729                           
  7730                           ;TFT.c: 145: TFT_WriteRegister(0x0201, 400 - 1 - y1);
  7731  00082A  0E02               	movlw	2
  7732  00082C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7733  00082E  0E01               	movlw	1
  7734  000830  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7735  000832  500F               	movf	TFT_SetAddrWindow@y1^0,w,c
  7736  000834  088F               	sublw	143
  7737  000836  6E07               	movwf	TFT_WriteRegister@data^0,c
  7738  000838  5010               	movf	(TFT_SetAddrWindow@y1+1)^0,w,c
  7739  00083A  A0D8               	btfss	status,0,c
  7740  00083C  2AE8               	incf	wreg,f,c
  7741  00083E  0801               	sublw	1
  7742  000840  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7743  000842  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7744                           
  7745                           ;TFT.c: 146: break;
  7746  000846  EF83  F004         	goto	l254
  7747  00084A                     l4685:
  7748                           
  7749                           ;TFT.c: 149: TFT_WriteRegister(0x0210, y1);
  7750  00084A  0E02               	movlw	2
  7751  00084C  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7752  00084E  0E10               	movlw	16
  7753  000850  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7754  000852  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7755  000856  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7756  00085A  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7757                           
  7758                           ;TFT.c: 150: TFT_WriteRegister(0x0211, y2);
  7759  00085E  0E02               	movlw	2
  7760  000860  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7761  000862  0E11               	movlw	17
  7762  000864  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7763  000866  C013  F007         	movff	TFT_SetAddrWindow@y2,TFT_WriteRegister@data
  7764  00086A  C014  F008         	movff	TFT_SetAddrWindow@y2+1,TFT_WriteRegister@data+1
  7765  00086E  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7766  000872                     
  7767                           ;TFT.c: 151: TFT_WriteRegister(0x0212, 400 - 1 - x2);
  7768  000872  0E02               	movlw	2
  7769  000874  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7770  000876  0E12               	movlw	18
  7771  000878  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7772  00087A  5011               	movf	TFT_SetAddrWindow@x2^0,w,c
  7773  00087C  088F               	sublw	143
  7774  00087E  6E07               	movwf	TFT_WriteRegister@data^0,c
  7775  000880  5012               	movf	(TFT_SetAddrWindow@x2+1)^0,w,c
  7776  000882  A0D8               	btfss	status,0,c
  7777  000884  2AE8               	incf	wreg,f,c
  7778  000886  0801               	sublw	1
  7779  000888  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7780  00088A  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7781  00088E                     
  7782                           ;TFT.c: 152: TFT_WriteRegister(0x0213, 400 - 1 - x1);
  7783  00088E  0E02               	movlw	2
  7784  000890  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7785  000892  0E13               	movlw	19
  7786  000894  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7787  000896  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7788  000898  088F               	sublw	143
  7789  00089A  6E07               	movwf	TFT_WriteRegister@data^0,c
  7790  00089C  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7791  00089E  A0D8               	btfss	status,0,c
  7792  0008A0  2AE8               	incf	wreg,f,c
  7793  0008A2  0801               	sublw	1
  7794  0008A4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7795  0008A6  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7796                           
  7797                           ;TFT.c: 154: TFT_WriteRegister(0x0200, y1);
  7798  0008AA  0E02               	movlw	2
  7799  0008AC  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7800  0008AE  0E00               	movlw	0
  7801  0008B0  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7802  0008B2  C00F  F007         	movff	TFT_SetAddrWindow@y1,TFT_WriteRegister@data
  7803  0008B6  C010  F008         	movff	TFT_SetAddrWindow@y1+1,TFT_WriteRegister@data+1
  7804  0008BA  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7805  0008BE                     
  7806                           ;TFT.c: 155: TFT_WriteRegister(0x0201, 400 - 1 - x1);
  7807  0008BE  0E02               	movlw	2
  7808  0008C0  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  7809  0008C2  0E01               	movlw	1
  7810  0008C4  6E05               	movwf	TFT_WriteRegister@reg^0,c
  7811  0008C6  500D               	movf	TFT_SetAddrWindow@x1^0,w,c
  7812  0008C8  088F               	sublw	143
  7813  0008CA  6E07               	movwf	TFT_WriteRegister@data^0,c
  7814  0008CC  500E               	movf	(TFT_SetAddrWindow@x1+1)^0,w,c
  7815  0008CE  A0D8               	btfss	status,0,c
  7816  0008D0  2AE8               	incf	wreg,f,c
  7817  0008D2  0801               	sublw	1
  7818  0008D4  6E08               	movwf	(TFT_WriteRegister@data+1)^0,c
  7819  0008D6  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  7820                           
  7821                           ;TFT.c: 156: break;
  7822  0008DA  EF83  F004         	goto	l254
  7823  0008DE                     l4695:
  7824  0008DE  EC2A  F018         	call	_TFT_OrientationGet	;wreg free
  7825                           
  7826                           ; Switch size 1, requested type "simple"
  7827                           ; Number of cases is 4, Range of values is 0 to 3
  7828                           ; switch strategies available:
  7829                           ; Name         Instructions Cycles
  7830                           ; simple_byte           13     7 (average)
  7831                           ;	Chosen strategy is simple_byte
  7832  0008E2  0A00               	xorlw	0	; case 0
  7833  0008E4  B4D8               	btfsc	status,2,c
  7834  0008E6  EF47  F003         	goto	l4673
  7835  0008EA  0A01               	xorlw	1	; case 1
  7836  0008EC  B4D8               	btfsc	status,2,c
  7837  0008EE  EF85  F003         	goto	l4675
  7838  0008F2  0A03               	xorlw	3	; case 2
  7839  0008F4  B4D8               	btfsc	status,2,c
  7840  0008F6  EFCF  F003         	goto	l4683
  7841  0008FA  0A01               	xorlw	1	; case 3
  7842  0008FC  B4D8               	btfsc	status,2,c
  7843  0008FE  EF25  F004         	goto	l4685
  7844  000902  EF83  F004         	goto	l254
  7845  000906                     l254:
  7846  000906  0012               	return		;funcret
  7847  000908                     __end_of_TFT_SetAddrWindow:
  7848                           	opt callstack 0
  7849                           
  7850 ;; *************** function _TFT_GetWidth *****************
  7851 ;; Defined at:
  7852 ;;		line 81 in file "TFT.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  2    4[COMRAM] unsigned int 
  7859 ;; Registers used:
  7860 ;;		wreg, status,2, status,0, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7866 ;;      Params:         2       0       0       0       0       0       0       0       0
  7867 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7868 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7869 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7870 ;;Total ram usage:        2 bytes
  7871 ;; Hardware stack levels used:    1
  7872 ;; Hardware stack levels required when called:    3
  7873 ;; This function calls:
  7874 ;;		_TFT_OrientationGet
  7875 ;; This function is called by:
  7876 ;;		_processGSM
  7877 ;;		_TFT_FullScreen
  7878 ;;		_Ecg_Draw
  7879 ;;		_Ecg_Background_Leads_Ok
  7880 ;;		_TFT_ConsolePrintLine
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text34
  7885  002BA8                     __ptext34:
  7886                           	opt callstack 0
  7887  002BA8                     _TFT_GetWidth:
  7888                           	opt callstack 25
  7889  002BA8                     
  7890                           ;TFT.c: 82: switch(TFT_OrientationGet()) {
  7891  002BA8  EFE2  F015         	goto	l4647
  7892  002BAC                     l4637:
  7893                           
  7894                           ;TFT.c: 84: case 2:;TFT.c: 85: return 240 - 1;
  7895  002BAC  0E00               	movlw	0
  7896  002BAE  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7897  002BB0  0EEF               	movlw	239
  7898  002BB2  6E05               	movwf	?_TFT_GetWidth^0,c
  7899  002BB4  EFFA  F015         	goto	l226
  7900  002BB8                     l4641:
  7901                           
  7902                           ;TFT.c: 87: case 3:;TFT.c: 88: return 400 - 1;
  7903  002BB8  0E01               	movlw	1
  7904  002BBA  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7905  002BBC  0E8F               	movlw	143
  7906  002BBE  6E05               	movwf	?_TFT_GetWidth^0,c
  7907  002BC0  EFFA  F015         	goto	l226
  7908  002BC4                     l4647:
  7909  002BC4  EC2A  F018         	call	_TFT_OrientationGet	;wreg free
  7910                           
  7911                           ; Switch size 1, requested type "simple"
  7912                           ; Number of cases is 4, Range of values is 0 to 3
  7913                           ; switch strategies available:
  7914                           ; Name         Instructions Cycles
  7915                           ; simple_byte           13     7 (average)
  7916                           ;	Chosen strategy is simple_byte
  7917  002BC8  0A00               	xorlw	0	; case 0
  7918  002BCA  B4D8               	btfsc	status,2,c
  7919  002BCC  EFD6  F015         	goto	l4637
  7920  002BD0  0A01               	xorlw	1	; case 1
  7921  002BD2  B4D8               	btfsc	status,2,c
  7922  002BD4  EFDC  F015         	goto	l4641
  7923  002BD8  0A03               	xorlw	3	; case 2
  7924  002BDA  B4D8               	btfsc	status,2,c
  7925  002BDC  EFD6  F015         	goto	l4637
  7926  002BE0  0A01               	xorlw	1	; case 3
  7927  002BE2  B4D8               	btfsc	status,2,c
  7928  002BE4  EFDC  F015         	goto	l4641
  7929  002BE8  EFF6  F015         	goto	l4649
  7930  002BEC                     l4649:
  7931                           
  7932                           ;TFT.c: 90: return 0;
  7933  002BEC  0E00               	movlw	0
  7934  002BEE  6E06               	movwf	(?_TFT_GetWidth+1)^0,c
  7935  002BF0  0E00               	movlw	0
  7936  002BF2  6E05               	movwf	?_TFT_GetWidth^0,c
  7937  002BF4                     l226:
  7938  002BF4  0012               	return		;funcret
  7939  002BF6                     __end_of_TFT_GetWidth:
  7940                           	opt callstack 0
  7941                           
  7942 ;; *************** function _TFT_GetHeight *****************
  7943 ;; Defined at:
  7944 ;;		line 93 in file "TFT.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;		None
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  2    4[COMRAM] unsigned int 
  7951 ;; Registers used:
  7952 ;;		wreg, status,2, status,0, cstack
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7958 ;;      Params:         2       0       0       0       0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7961 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7962 ;;Total ram usage:        2 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    3
  7965 ;; This function calls:
  7966 ;;		_TFT_OrientationGet
  7967 ;; This function is called by:
  7968 ;;		_TFT_FullScreen
  7969 ;;		_Ecg_Draw
  7970 ;;		_Ecg_Background_Leads_Ok
  7971 ;;		_TFT_ConsolePrintLine
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           	psect	text35
  7976  002BF6                     __ptext35:
  7977                           	opt callstack 0
  7978  002BF6                     _TFT_GetHeight:
  7979                           	opt callstack 21
  7980  002BF6                     
  7981                           ;TFT.c: 94: switch(TFT_OrientationGet()) {
  7982  002BF6  EF09  F016         	goto	l4665
  7983  002BFA                     l4655:
  7984                           
  7985                           ;TFT.c: 96: case 2:;TFT.c: 97: return 400 - 1;
  7986  002BFA  0E01               	movlw	1
  7987  002BFC  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  7988  002BFE  0E8F               	movlw	143
  7989  002C00  6E05               	movwf	?_TFT_GetHeight^0,c
  7990  002C02  EF21  F016         	goto	l235
  7991  002C06                     l4659:
  7992                           
  7993                           ;TFT.c: 99: case 3:;TFT.c: 100: return 240 - 1;
  7994  002C06  0E00               	movlw	0
  7995  002C08  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  7996  002C0A  0EEF               	movlw	239
  7997  002C0C  6E05               	movwf	?_TFT_GetHeight^0,c
  7998  002C0E  EF21  F016         	goto	l235
  7999  002C12                     l4665:
  8000  002C12  EC2A  F018         	call	_TFT_OrientationGet	;wreg free
  8001                           
  8002                           ; Switch size 1, requested type "simple"
  8003                           ; Number of cases is 4, Range of values is 0 to 3
  8004                           ; switch strategies available:
  8005                           ; Name         Instructions Cycles
  8006                           ; simple_byte           13     7 (average)
  8007                           ;	Chosen strategy is simple_byte
  8008  002C16  0A00               	xorlw	0	; case 0
  8009  002C18  B4D8               	btfsc	status,2,c
  8010  002C1A  EFFD  F015         	goto	l4655
  8011  002C1E  0A01               	xorlw	1	; case 1
  8012  002C20  B4D8               	btfsc	status,2,c
  8013  002C22  EF03  F016         	goto	l4659
  8014  002C26  0A03               	xorlw	3	; case 2
  8015  002C28  B4D8               	btfsc	status,2,c
  8016  002C2A  EFFD  F015         	goto	l4655
  8017  002C2E  0A01               	xorlw	1	; case 3
  8018  002C30  B4D8               	btfsc	status,2,c
  8019  002C32  EF03  F016         	goto	l4659
  8020  002C36  EF1D  F016         	goto	l4667
  8021  002C3A                     l4667:
  8022                           
  8023                           ;TFT.c: 102: return 0;
  8024  002C3A  0E00               	movlw	0
  8025  002C3C  6E06               	movwf	(?_TFT_GetHeight+1)^0,c
  8026  002C3E  0E00               	movlw	0
  8027  002C40  6E05               	movwf	?_TFT_GetHeight^0,c
  8028  002C42                     l235:
  8029  002C42  0012               	return		;funcret
  8030  002C44                     __end_of_TFT_GetHeight:
  8031                           	opt callstack 0
  8032                           
  8033 ;; *************** function _TFT_OrientationGet *****************
  8034 ;; Defined at:
  8035 ;;		line 105 in file "TFT.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;		None
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;		None
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      unsigned char 
  8042 ;; Registers used:
  8043 ;;		wreg, status,2
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0
  8050 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8052 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8053 ;;Total ram usage:        0 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; Hardware stack levels required when called:    2
  8056 ;; This function calls:
  8057 ;;		Nothing
  8058 ;; This function is called by:
  8059 ;;		_TFT_GetWidth
  8060 ;;		_TFT_GetHeight
  8061 ;;		_TFT_SetAddrWindow
  8062 ;;		_TFT_DrawPixel
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text36
  8067  003054                     __ptext36:
  8068                           	opt callstack 0
  8069  003054                     _TFT_OrientationGet:
  8070                           	opt callstack 25
  8071  003054                     
  8072                           ;TFT.c: 106: return TFT_Orientation;
  8073  003054  5057               	movf	_TFT_Orientation^0,w,c
  8074  003056  0012               	return		;funcret
  8075  003058                     __end_of_TFT_OrientationGet:
  8076                           	opt callstack 0
  8077                           
  8078 ;; *************** function _TFT_Flood *****************
  8079 ;; Defined at:
  8080 ;;		line 236 in file "TFT.c"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  color           2   14[COMRAM] unsigned int 
  8083 ;;  len             4   16[COMRAM] unsigned long 
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;  blocks          2   24[COMRAM] unsigned int 
  8086 ;;  color_lo        1   28[COMRAM] unsigned char 
  8087 ;;  color_hi        1   27[COMRAM] unsigned char 
  8088 ;;  i               1   26[COMRAM] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  1    wreg      void 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8098 ;;      Params:         6       0       0       0       0       0       0       0       0
  8099 ;;      Locals:         5       0       0       0       0       0       0       0       0
  8100 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8101 ;;      Totals:        15       0       0       0       0       0       0       0       0
  8102 ;;Total ram usage:       15 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    3
  8105 ;; This function calls:
  8106 ;;		_TFT_WriteRegister
  8107 ;; This function is called by:
  8108 ;;		_TFT_FullScreen
  8109 ;;		_TFT_DrawFillRect
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text37
  8114  000D3C                     __ptext37:
  8115                           	opt callstack 0
  8116  000D3C                     _TFT_Flood:
  8117                           	opt callstack 21
  8118  000D3C                     
  8119                           ;TFT.c: 237: uint16_t blocks;;TFT.c: 238: uint8_t i;;TFT.c: 239: uint8_t color_hi = colo
      +                          r >> 8;
  8120  000D3C  5010               	movf	(TFT_Flood@color+1)^0,w,c
  8121  000D3E  6E1C               	movwf	TFT_Flood@color_hi^0,c
  8122  000D40                     
  8123                           ;TFT.c: 240: uint8_t color_lo = color;
  8124  000D40  C00F  F01D         	movff	TFT_Flood@color,TFT_Flood@color_lo
  8125  000D44                     
  8126                           ;TFT.c: 243: TFT_WriteRegister(0x0202, color);
  8127  000D44  0E02               	movlw	2
  8128  000D46  6E06               	movwf	(TFT_WriteRegister@reg+1)^0,c
  8129  000D48  0E02               	movlw	2
  8130  000D4A  6E05               	movwf	TFT_WriteRegister@reg^0,c
  8131  000D4C  C00F  F007         	movff	TFT_Flood@color,TFT_WriteRegister@data
  8132  000D50  C010  F008         	movff	TFT_Flood@color+1,TFT_WriteRegister@data+1
  8133  000D54  EC93  F016         	call	_TFT_WriteRegister	;wreg free
  8134  000D58                     
  8135                           ;TFT.c: 244: len--;
  8136  000D58  0611               	decf	TFT_Flood@len^0,f,c
  8137  000D5A  0E00               	movlw	0
  8138  000D5C  5A12               	subwfb	(TFT_Flood@len+1)^0,f,c
  8139  000D5E  5A13               	subwfb	(TFT_Flood@len+2)^0,f,c
  8140  000D60  5A14               	subwfb	(TFT_Flood@len+3)^0,f,c
  8141  000D62                     
  8142                           ;TFT.c: 248: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  8143  000D62  9082               	bcf	130,0,c	;volatile
  8144  000D64  F000               	nop		;# 
  8145  000D66                     
  8146                           ;TFT.c: 249: blocks = (uint16_t)(len / 4);
  8147  000D66  C011  F015         	movff	TFT_Flood@len,??_TFT_Flood
  8148  000D6A  C012  F016         	movff	TFT_Flood@len+1,??_TFT_Flood+1
  8149  000D6E  C013  F017         	movff	TFT_Flood@len+2,??_TFT_Flood+2
  8150  000D72  C014  F018         	movff	TFT_Flood@len+3,??_TFT_Flood+3
  8151  000D76  0E03               	movlw	3
  8152  000D78  EFC3  F006         	goto	u3920
  8153  000D7C                     u3925:
  8154  000D7C  90D8               	bcf	status,0,c
  8155  000D7E  3218               	rrcf	(??_TFT_Flood+3)^0,f,c
  8156  000D80  3217               	rrcf	(??_TFT_Flood+2)^0,f,c
  8157  000D82  3216               	rrcf	(??_TFT_Flood+1)^0,f,c
  8158  000D84  3215               	rrcf	??_TFT_Flood^0,f,c
  8159  000D86                     u3920:
  8160  000D86  2EE8               	decfsz	wreg,f,c
  8161  000D88  EFBE  F006         	goto	u3925
  8162  000D8C  C015  F019         	movff	??_TFT_Flood,TFT_Flood@blocks
  8163  000D90  C016  F01A         	movff	??_TFT_Flood+1,TFT_Flood@blocks+1
  8164  000D94                     
  8165                           ;TFT.c: 250: if(color_hi == color_lo) {
  8166  000D94  501D               	movf	TFT_Flood@color_lo^0,w,c
  8167  000D96  181C               	xorwf	TFT_Flood@color_hi^0,w,c
  8168  000D98  A4D8               	btfss	status,2,c
  8169  000D9A  EFD1  F006         	goto	u3931
  8170  000D9E  EFD3  F006         	goto	u3930
  8171  000DA2                     u3931:
  8172  000DA2  EF38  F007         	goto	l4719
  8173  000DA6                     u3930:
  8174  000DA6  EFED  F006         	goto	l4713
  8175  000DAA                     l288:
  8176                           
  8177                           ;TFT.c: 252: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8178  000DAA  9A80               	bcf	128,5,c	;volatile
  8179  000DAC  F000               	nop		;# 
  8180  000DAE  8A80               	bsf	128,5,c	;volatile
  8181  000DB0  9A80               	bcf	128,5,c	;volatile
  8182  000DB2  F000               	nop		;# 
  8183  000DB4  8A80               	bsf	128,5,c	;volatile
  8184                           
  8185                           ;TFT.c: 253: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8186  000DB6  9A80               	bcf	128,5,c	;volatile
  8187  000DB8  F000               	nop		;# 
  8188  000DBA  8A80               	bsf	128,5,c	;volatile
  8189  000DBC  9A80               	bcf	128,5,c	;volatile
  8190  000DBE  F000               	nop		;# 
  8191  000DC0  8A80               	bsf	128,5,c	;volatile
  8192                           
  8193                           ;TFT.c: 254: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8194  000DC2  9A80               	bcf	128,5,c	;volatile
  8195  000DC4  F000               	nop		;# 
  8196  000DC6  8A80               	bsf	128,5,c	;volatile
  8197  000DC8  9A80               	bcf	128,5,c	;volatile
  8198  000DCA  F000               	nop		;# 
  8199  000DCC  8A80               	bsf	128,5,c	;volatile
  8200                           
  8201                           ;TFT.c: 255: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8202  000DCE  9A80               	bcf	128,5,c	;volatile
  8203  000DD0  F000               	nop		;# 
  8204  000DD2  8A80               	bsf	128,5,c	;volatile
  8205  000DD4  9A80               	bcf	128,5,c	;volatile
  8206  000DD6  F000               	nop		;# 
  8207  000DD8  8A80               	bsf	128,5,c	;volatile
  8208  000DDA                     l4713:
  8209  000DDA  0619               	decf	TFT_Flood@blocks^0,f,c
  8210  000DDC  A0D8               	btfss	status,0,c
  8211  000DDE  061A               	decf	(TFT_Flood@blocks+1)^0,f,c
  8212  000DE0  2819               	incf	TFT_Flood@blocks^0,w,c
  8213  000DE2  E106               	bnz	u3941
  8214  000DE4  281A               	incf	(TFT_Flood@blocks+1)^0,w,c
  8215  000DE6  A4D8               	btfss	status,2,c
  8216  000DE8  EFF8  F006         	goto	u3941
  8217  000DEC  EFFA  F006         	goto	u3940
  8218  000DF0                     u3941:
  8219  000DF0  EFD5  F006         	goto	l288
  8220  000DF4                     u3940:
  8221  000DF4                     
  8222                           ;TFT.c: 256: };TFT.c: 257: for(i = (uint8_t)len & 3; i--; ) {
  8223  000DF4  5011               	movf	TFT_Flood@len^0,w,c
  8224  000DF6  0B03               	andlw	3
  8225  000DF8  6E1B               	movwf	TFT_Flood@i^0,c
  8226  000DFA  EF05  F007         	goto	l4717
  8227  000DFE                     l291:
  8228                           
  8229                           ;TFT.c: 258: { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; { { PORTA
      +                          bits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; };
  8230  000DFE  9A80               	bcf	128,5,c	;volatile
  8231  000E00  F000               	nop		;# 
  8232  000E02  8A80               	bsf	128,5,c	;volatile
  8233  000E04  9A80               	bcf	128,5,c	;volatile
  8234  000E06  F000               	nop		;# 
  8235  000E08  8A80               	bsf	128,5,c	;volatile
  8236  000E0A                     l4717:
  8237  000E0A  061B               	decf	TFT_Flood@i^0,f,c
  8238  000E0C  281B               	incf	TFT_Flood@i^0,w,c
  8239  000E0E  A4D8               	btfss	status,2,c
  8240  000E10  EF0C  F007         	goto	u3951
  8241  000E14  EF0E  F007         	goto	u3950
  8242  000E18                     u3951:
  8243  000E18  EFFF  F006         	goto	l291
  8244  000E1C                     u3950:
  8245  000E1C  EF5D  F007         	goto	l293
  8246  000E20                     l295:
  8247                           
  8248                           ;TFT.c: 262: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8249  000E20  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8250  000E24  9A80               	bcf	128,5,c	;volatile
  8251  000E26  F000               	nop		;# 
  8252  000E28  8A80               	bsf	128,5,c	;volatile
  8253  000E2A  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8254  000E2E  9A80               	bcf	128,5,c	;volatile
  8255  000E30  F000               	nop		;# 
  8256  000E32  8A80               	bsf	128,5,c	;volatile
  8257                           
  8258                           ;TFT.c: 263: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8259  000E34  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8260  000E38  9A80               	bcf	128,5,c	;volatile
  8261  000E3A  F000               	nop		;# 
  8262  000E3C  8A80               	bsf	128,5,c	;volatile
  8263  000E3E  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8264  000E42  9A80               	bcf	128,5,c	;volatile
  8265  000E44  F000               	nop		;# 
  8266  000E46  8A80               	bsf	128,5,c	;volatile
  8267                           
  8268                           ;TFT.c: 264: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8269  000E48  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8270  000E4C  9A80               	bcf	128,5,c	;volatile
  8271  000E4E  F000               	nop		;# 
  8272  000E50  8A80               	bsf	128,5,c	;volatile
  8273  000E52  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8274  000E56  9A80               	bcf	128,5,c	;volatile
  8275  000E58  F000               	nop		;# 
  8276  000E5A  8A80               	bsf	128,5,c	;volatile
  8277                           
  8278                           ;TFT.c: 265: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8279  000E5C  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8280  000E60  9A80               	bcf	128,5,c	;volatile
  8281  000E62  F000               	nop		;# 
  8282  000E64  8A80               	bsf	128,5,c	;volatile
  8283  000E66  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8284  000E6A  9A80               	bcf	128,5,c	;volatile
  8285  000E6C  F000               	nop		;# 
  8286  000E6E  8A80               	bsf	128,5,c	;volatile
  8287  000E70                     l4719:
  8288  000E70  0619               	decf	TFT_Flood@blocks^0,f,c
  8289  000E72  A0D8               	btfss	status,0,c
  8290  000E74  061A               	decf	(TFT_Flood@blocks+1)^0,f,c
  8291  000E76  2819               	incf	TFT_Flood@blocks^0,w,c
  8292  000E78  E106               	bnz	u3961
  8293  000E7A  281A               	incf	(TFT_Flood@blocks+1)^0,w,c
  8294  000E7C  A4D8               	btfss	status,2,c
  8295  000E7E  EF43  F007         	goto	u3961
  8296  000E82  EF45  F007         	goto	u3960
  8297  000E86                     u3961:
  8298  000E86  EF10  F007         	goto	l295
  8299  000E8A                     u3960:
  8300  000E8A                     
  8301                           ;TFT.c: 266: };TFT.c: 267: for(i = (uint8_t)len & 3; i--; ) {
  8302  000E8A  5011               	movf	TFT_Flood@len^0,w,c
  8303  000E8C  0B03               	andlw	3
  8304  000E8E  6E1B               	movwf	TFT_Flood@i^0,c
  8305  000E90  EF54  F007         	goto	l4723
  8306  000E94                     l298:
  8307                           
  8308                           ;TFT.c: 268: { PORTB = color_hi; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA
      +                          5 = 1;; }; }; { PORTB = color_lo; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.R
      +                          A5 = 1;; }; };
  8309  000E94  C01C  FF81         	movff	TFT_Flood@color_hi,3969	;volatile
  8310  000E98  9A80               	bcf	128,5,c	;volatile
  8311  000E9A  F000               	nop		;# 
  8312  000E9C  8A80               	bsf	128,5,c	;volatile
  8313  000E9E  C01D  FF81         	movff	TFT_Flood@color_lo,3969	;volatile
  8314  000EA2  9A80               	bcf	128,5,c	;volatile
  8315  000EA4  F000               	nop		;# 
  8316  000EA6  8A80               	bsf	128,5,c	;volatile
  8317  000EA8                     l4723:
  8318  000EA8  061B               	decf	TFT_Flood@i^0,f,c
  8319  000EAA  281B               	incf	TFT_Flood@i^0,w,c
  8320  000EAC  A4D8               	btfss	status,2,c
  8321  000EAE  EF5B  F007         	goto	u3971
  8322  000EB2  EF5D  F007         	goto	u3970
  8323  000EB6                     u3971:
  8324  000EB6  EF4A  F007         	goto	l298
  8325  000EBA                     u3970:
  8326  000EBA                     l293:
  8327                           
  8328                           ;TFT.c: 269: };TFT.c: 270: };TFT.c: 271: PORTCbits.RC0 = 1;;
  8329  000EBA  8082               	bsf	130,0,c	;volatile
  8330  000EBC  0012               	return		;funcret
  8331  000EBE                     __end_of_TFT_Flood:
  8332                           	opt callstack 0
  8333                           
  8334 ;; *************** function _TFT_WriteRegister *****************
  8335 ;; Defined at:
  8336 ;;		line 12 in file "TFT.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  reg             2    4[COMRAM] unsigned int 
  8339 ;;  data            2    6[COMRAM] unsigned int 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  l               1   11[COMRAM] unsigned char 
  8342 ;;  h               1   10[COMRAM] unsigned char 
  8343 ;;  l               1    9[COMRAM] unsigned char 
  8344 ;;  h               1    8[COMRAM] unsigned char 
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8354 ;;      Params:         4       0       0       0       0       0       0       0       0
  8355 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8357 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8358 ;;Total ram usage:        8 bytes
  8359 ;; Hardware stack levels used:    1
  8360 ;; Hardware stack levels required when called:    2
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_TFT_Init
  8365 ;;		_TFT_SetAddrWindow
  8366 ;;		_TFT_DrawPixel
  8367 ;;		_TFT_Flood
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text38
  8372  002D26                     __ptext38:
  8373                           	opt callstack 0
  8374  002D26                     _TFT_WriteRegister:
  8375                           	opt callstack 23
  8376  002D26                     
  8377                           ;TFT.c: 13: { PORTCbits.RC0 = 0; { asm("nop"); }; };
  8378  002D26  9082               	bcf	130,0,c	;volatile
  8379  002D28  F000               	nop		;# 
  8380                           
  8381                           ;TFT.c: 14: { PORTCbits.RC1 = 0;; { uint8_t h = (reg)>>8, l = (uint8_t)reg; { PORTB = h;
      +                           { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { { P
      +                          ORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  8382  002D2A  9282               	bcf	130,1,c	;volatile
  8383  002D2C  5006               	movf	(TFT_WriteRegister@reg+1)^0,w,c
  8384  002D2E  6E09               	movwf	TFT_WriteRegister@h^0,c
  8385  002D30  C005  F00A         	movff	TFT_WriteRegister@reg,TFT_WriteRegister@l
  8386  002D34  C009  FF81         	movff	TFT_WriteRegister@h,3969	;volatile
  8387  002D38  9A80               	bcf	128,5,c	;volatile
  8388  002D3A  F000               	nop		;# 
  8389  002D3C  8A80               	bsf	128,5,c	;volatile
  8390  002D3E  C00A  FF81         	movff	TFT_WriteRegister@l,3969	;volatile
  8391  002D42  9A80               	bcf	128,5,c	;volatile
  8392  002D44  F000               	nop		;# 
  8393  002D46  8A80               	bsf	128,5,c	;volatile
  8394  002D48                     
  8395                           ;TFT.c: 15: { PORTCbits.RC1 = 1;; { uint8_t h = (data)>>8, l = (uint8_t)data; { PORTB = 
      +                          h; { { PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; { PORTB = l; { {
      +                           PORTAbits.RA5 = 0; { asm("nop"); }; }; PORTAbits.RA5 = 1;; }; }; }; };
  8396  002D48  8282               	bsf	130,1,c	;volatile
  8397  002D4A  5008               	movf	(TFT_WriteRegister@data+1)^0,w,c
  8398  002D4C  6E0B               	movwf	TFT_WriteRegister@h_727^0,c
  8399  002D4E  C007  F00C         	movff	TFT_WriteRegister@data,TFT_WriteRegister@l_728
  8400  002D52  C00B  FF81         	movff	TFT_WriteRegister@h_727,3969	;volatile
  8401  002D56  9A80               	bcf	128,5,c	;volatile
  8402  002D58  F000               	nop		;# 
  8403  002D5A  8A80               	bsf	128,5,c	;volatile
  8404  002D5C  C00C  FF81         	movff	TFT_WriteRegister@l_728,3969	;volatile
  8405  002D60  9A80               	bcf	128,5,c	;volatile
  8406  002D62  F000               	nop		;# 
  8407  002D64  8A80               	bsf	128,5,c	;volatile
  8408  002D66                     
  8409                           ;TFT.c: 16: PORTCbits.RC0 = 1;;
  8410  002D66  8082               	bsf	130,0,c	;volatile
  8411  002D68  0012               	return		;funcret
  8412  002D6A                     __end_of_TFT_WriteRegister:
  8413                           	opt callstack 0
  8414                           
  8415 ;; *************** function _EUSART_Init *****************
  8416 ;; Defined at:
  8417 ;;		line 12 in file "EUSART.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8431 ;;      Params:         0       0       0       0       0       0       0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8434 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8435 ;;Total ram usage:        0 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:    3
  8438 ;; This function calls:
  8439 ;;		_memset
  8440 ;; This function is called by:
  8441 ;;		_main
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text39
  8446  002CDE                     __ptext39:
  8447                           	opt callstack 0
  8448  002CDE                     _EUSART_Init:
  8449                           	opt callstack 27
  8450  002CDE                     
  8451                           ;EUSART.c: 14: TXSTAbits.TX9 = 0;
  8452  002CDE  9CAC               	bcf	172,6,c	;volatile
  8453                           
  8454                           ;EUSART.c: 15: TXSTAbits.TXEN = 1;
  8455  002CE0  8AAC               	bsf	172,5,c	;volatile
  8456                           
  8457                           ;EUSART.c: 16: TXSTAbits.SYNC = 0;
  8458  002CE2  98AC               	bcf	172,4,c	;volatile
  8459                           
  8460                           ;EUSART.c: 17: TXSTAbits.SENDB = 0;
  8461  002CE4  96AC               	bcf	172,3,c	;volatile
  8462                           
  8463                           ;EUSART.c: 18: TXSTAbits.BRGH = 1;
  8464  002CE6  84AC               	bsf	172,2,c	;volatile
  8465                           
  8466                           ;EUSART.c: 21: RCSTAbits.SPEN = 1;
  8467  002CE8  8EAB               	bsf	171,7,c	;volatile
  8468                           
  8469                           ;EUSART.c: 22: RCSTAbits.RX9 = 0;
  8470  002CEA  9CAB               	bcf	171,6,c	;volatile
  8471                           
  8472                           ;EUSART.c: 23: RCSTAbits.CREN = 1;
  8473  002CEC  88AB               	bsf	171,4,c	;volatile
  8474                           
  8475                           ;EUSART.c: 26: BAUDCONbits.BRG16 = 1;
  8476  002CEE  86B8               	bsf	184,3,c	;volatile
  8477                           
  8478                           ;EUSART.c: 27: BAUDCONbits.WUE = 0;
  8479  002CF0  92B8               	bcf	184,1,c	;volatile
  8480                           
  8481                           ;EUSART.c: 28: BAUDCONbits.ABDEN = 0;
  8482  002CF2  90B8               	bcf	184,0,c	;volatile
  8483  002CF4                     
  8484                           ;EUSART.c: 29: SPBRGH = 0x04;
  8485  002CF4  0E04               	movlw	4
  8486  002CF6  6EB0               	movwf	176,c	;volatile
  8487                           
  8488                           ;EUSART.c: 30: SPBRG = 0xE1;
  8489  002CF8  0EE1               	movlw	225
  8490  002CFA  6EAF               	movwf	175,c	;volatile
  8491  002CFC                     
  8492                           ;EUSART.c: 33: RCIE = 1;
  8493  002CFC  8A9D               	bsf	3997,5,c	;volatile
  8494                           
  8495                           ;EUSART.c: 36: EUSART_RX.iRead = 0;
  8496  002CFE  0E00               	movlw	0
  8497  002D00  0101               	movlb	1	; () banked
  8498  002D02  6F00               	movwf	_EUSART_RX& (0+255),b
  8499                           
  8500                           ;EUSART.c: 37: EUSART_RX.iWrite = 0;
  8501  002D04  0E00               	movlw	0
  8502  002D06  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
  8503  002D08                     
  8504                           ; BSR set to: 1
  8505                           ;EUSART.c: 38: memset(EUSART_RX.buffer, 0x00, 128);
  8506  002D08  0E02               	movlw	low (_EUSART_RX+2)
  8507  002D0A  6E05               	movwf	memset@p1^0,c
  8508  002D0C  0E01               	movlw	high (_EUSART_RX+2)
  8509  002D0E  6E06               	movwf	(memset@p1+1)^0,c
  8510  002D10  0E00               	movlw	0
  8511  002D12  6E08               	movwf	(memset@c+1)^0,c
  8512  002D14  0E00               	movlw	0
  8513  002D16  6E07               	movwf	memset@c^0,c
  8514  002D18  0E00               	movlw	0
  8515  002D1A  6E0A               	movwf	(memset@n+1)^0,c
  8516  002D1C  0E80               	movlw	128
  8517  002D1E  6E09               	movwf	memset@n^0,c
  8518  002D20  EC4B  F017         	call	_memset	;wreg free
  8519  002D24  0012               	return		;funcret
  8520  002D26                     __end_of_EUSART_Init:
  8521                           	opt callstack 0
  8522                           
  8523 ;; *************** function _A6_Init *****************
  8524 ;; Defined at:
  8525 ;;		line 12 in file "A6Lib.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  baudRate        4   77[COMRAM] const unsigned long 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8539 ;;      Params:         4       0       0       0       0       0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8542 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8543 ;;Total ram usage:        4 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:    8
  8546 ;; This function calls:
  8547 ;;		_A6_BaudRateAutoDetect
  8548 ;;		_A6_BaudRateSet
  8549 ;;		_A6_Command
  8550 ;; This function is called by:
  8551 ;;		_main
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text40
  8556  002E22                     __ptext40:
  8557                           	opt callstack 0
  8558  002E22                     _A6_Init:
  8559                           	opt callstack 22
  8560  002E22                     
  8561                           ;A6Lib.c: 13: A6_BaudRateAutoDetect();
  8562  002E22  EC3F  F013         	call	_A6_BaudRateAutoDetect	;wreg free
  8563                           
  8564                           ;A6Lib.c: 14: A6_BaudRateSet(baudRate);
  8565  002E26  C04E  F04A         	movff	A6_Init@baudRate,A6_BaudRateSet@baudRate
  8566  002E2A  C04F  F04B         	movff	A6_Init@baudRate+1,A6_BaudRateSet@baudRate+1
  8567  002E2E  C050  F04C         	movff	A6_Init@baudRate+2,A6_BaudRateSet@baudRate+2
  8568  002E32  C051  F04D         	movff	A6_Init@baudRate+3,A6_BaudRateSet@baudRate+3
  8569  002E36  EC2C  F00B         	call	_A6_BaudRateSet	;wreg free
  8570  002E3A                     
  8571                           ;A6Lib.c: 15: A6_Command("AT+COPS=3,0\r", 0, (0), 0);
  8572  002E3A  0E87               	movlw	low STR_5
  8573  002E3C  6E18               	movwf	A6_Command@command^0,c
  8574  002E3E  0E5F               	movlw	high STR_5
  8575  002E40  6E19               	movwf	(A6_Command@command+1)^0,c
  8576  002E42  0E00               	movlw	0
  8577  002E44  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  8578  002E46  0E00               	movlw	0
  8579  002E48  6E1A               	movwf	A6_Command@timeout^0,c
  8580  002E4A  0E00               	movlw	0
  8581  002E4C  6E1C               	movwf	A6_Command@response^0,c
  8582  002E4E  0E00               	movlw	0
  8583  002E50  6E1D               	movwf	(A6_Command@response+1)^0,c
  8584  002E52  0E00               	movlw	0
  8585  002E54  6E1E               	movwf	A6_Command@responseLen^0,c
  8586  002E56  EC4E  F011         	call	_A6_Command	;wreg free
  8587  002E5A  0012               	return		;funcret
  8588  002E5C                     __end_of_A6_Init:
  8589                           	opt callstack 0
  8590                           
  8591 ;; *************** function _A6_BaudRateSet *****************
  8592 ;; Defined at:
  8593 ;;		line 85 in file "A6Lib.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  baudRate        4   73[COMRAM] const unsigned long 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  response       32    0[BANK0 ] unsigned char [32]
  8598 ;;  request        20   32[BANK0 ] unsigned char [20]
  8599 ;;  currentBaudR    4   52[BANK0 ] unsigned long 
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  4   73[COMRAM] unsigned long 
  8602 ;; Registers used:
  8603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8609 ;;      Params:         4       0       0       0       0       0       0       0       0
  8610 ;;      Locals:         0      56       0       0       0       0       0       0       0
  8611 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8612 ;;      Totals:         4      56       0       0       0       0       0       0       0
  8613 ;;Total ram usage:       60 bytes
  8614 ;; Hardware stack levels used:    1
  8615 ;; Hardware stack levels required when called:    7
  8616 ;; This function calls:
  8617 ;;		_A6_BaudRateGet
  8618 ;;		_A6_Command
  8619 ;;		_A6_IsAlive
  8620 ;;		_EUSART_BaudRateSet
  8621 ;;		_sleepMS
  8622 ;;		_sprintf
  8623 ;;		_strcmp
  8624 ;; This function is called by:
  8625 ;;		_A6_Init
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text41
  8630  001658                     __ptext41:
  8631                           	opt callstack 0
  8632  001658                     _A6_BaudRateSet:
  8633                           	opt callstack 22
  8634  001658                     
  8635                           ;A6Lib.c: 86: char request[20];;A6Lib.c: 87: char response[32];;A6Lib.c: 88: uint32_t cu
      +                          rrentBaudRate = A6_BaudRateGet();
  8636  001658  EC0E  F00A         	call	_A6_BaudRateGet	;wreg free
  8637  00165C  C01F  F0DF         	movff	?_A6_BaudRateGet,A6_BaudRateSet@currentBaudRate
  8638  001660  C020  F0E0         	movff	?_A6_BaudRateGet+1,A6_BaudRateSet@currentBaudRate+1
  8639  001664  C021  F0E1         	movff	?_A6_BaudRateGet+2,A6_BaudRateSet@currentBaudRate+2
  8640  001668  C022  F0E2         	movff	?_A6_BaudRateGet+3,A6_BaudRateSet@currentBaudRate+3
  8641  00166C                     
  8642                           ;A6Lib.c: 91: if(currentBaudRate == 0) return 0;
  8643  00166C  0100               	movlb	0	; () banked
  8644  00166E  51DF               	movf	A6_BaudRateSet@currentBaudRate& (0+255),w,b
  8645  001670  11E0               	iorwf	(A6_BaudRateSet@currentBaudRate+1)& (0+255),w,b
  8646  001672  11E1               	iorwf	(A6_BaudRateSet@currentBaudRate+2)& (0+255),w,b
  8647  001674  11E2               	iorwf	(A6_BaudRateSet@currentBaudRate+3)& (0+255),w,b
  8648  001676  A4D8               	btfss	status,2,c
  8649  001678  EF40  F00B         	goto	u5441
  8650  00167C  EF42  F00B         	goto	u5440
  8651  001680                     u5441:
  8652  001680  EF44  F00B         	goto	l5683
  8653  001684                     u5440:
  8654  001684  EFAD  F00B         	goto	l589
  8655  001688                     l5683:
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;A6Lib.c: 94: sprintf(request, "AT+IPR=%lu\r", baudRate);
  8659  001688  0ECB               	movlw	low A6_BaudRateSet@request
  8660  00168A  6E1B               	movwf	sprintf@sp^0,c
  8661  00168C  0E00               	movlw	high A6_BaudRateSet@request
  8662  00168E  6E1C               	movwf	(sprintf@sp+1)^0,c
  8663  001690  0E94               	movlw	low STR_12
  8664  001692  6E1D               	movwf	sprintf@f^0,c
  8665  001694  0E5F               	movlw	high STR_12
  8666  001696  6E1E               	movwf	(sprintf@f+1)^0,c
  8667  001698  C04A  F01F         	movff	A6_BaudRateSet@baudRate,?_sprintf+4
  8668  00169C  C04B  F020         	movff	A6_BaudRateSet@baudRate+1,?_sprintf+5
  8669  0016A0  C04C  F021         	movff	A6_BaudRateSet@baudRate+2,?_sprintf+6
  8670  0016A4  C04D  F022         	movff	A6_BaudRateSet@baudRate+3,?_sprintf+7
  8671  0016A8  EC09  F000         	call	_sprintf	;wreg free
  8672  0016AC                     
  8673                           ;A6Lib.c: 95: A6_Command(request, 0, response, 32);
  8674  0016AC  0ECB               	movlw	low A6_BaudRateSet@request
  8675  0016AE  6E18               	movwf	A6_Command@command^0,c
  8676  0016B0  0E00               	movlw	high A6_BaudRateSet@request
  8677  0016B2  6E19               	movwf	(A6_Command@command+1)^0,c
  8678  0016B4  0E00               	movlw	0
  8679  0016B6  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  8680  0016B8  0E00               	movlw	0
  8681  0016BA  6E1A               	movwf	A6_Command@timeout^0,c
  8682  0016BC  0EAB               	movlw	low A6_BaudRateSet@response
  8683  0016BE  6E1C               	movwf	A6_Command@response^0,c
  8684  0016C0  0E00               	movlw	high A6_BaudRateSet@response
  8685  0016C2  6E1D               	movwf	(A6_Command@response+1)^0,c
  8686  0016C4  0E20               	movlw	32
  8687  0016C6  6E1E               	movwf	A6_Command@responseLen^0,c
  8688  0016C8  EC4E  F011         	call	_A6_Command	;wreg free
  8689  0016CC                     
  8690                           ;A6Lib.c: 96: sleepMS(250);
  8691  0016CC  0EFA               	movlw	250
  8692  0016CE  6E05               	movwf	sleepMS@ms^0,c
  8693  0016D0  0E00               	movlw	0
  8694  0016D2  6E06               	movwf	(sleepMS@ms+1)^0,c
  8695  0016D4  0E00               	movlw	0
  8696  0016D6  6E07               	movwf	(sleepMS@ms+2)^0,c
  8697  0016D8  0E00               	movlw	0
  8698  0016DA  6E08               	movwf	(sleepMS@ms+3)^0,c
  8699  0016DC  EC2E  F017         	call	_sleepMS	;wreg free
  8700  0016E0                     
  8701                           ;A6Lib.c: 97: if(strcmp(response, "OK") == 0) {
  8702  0016E0  0EAB               	movlw	low A6_BaudRateSet@response
  8703  0016E2  6E05               	movwf	strcmp@s1^0,c
  8704  0016E4  0E00               	movlw	high A6_BaudRateSet@response
  8705  0016E6  6E06               	movwf	(strcmp@s1+1)^0,c
  8706  0016E8  0EF6               	movlw	low STR_7
  8707  0016EA  6E07               	movwf	strcmp@s2^0,c
  8708  0016EC  0E5F               	movlw	high STR_7
  8709  0016EE  6E08               	movwf	(strcmp@s2+1)^0,c
  8710  0016F0  ECAD  F014         	call	_strcmp	;wreg free
  8711  0016F4  5005               	movf	?_strcmp^0,w,c
  8712  0016F6  1006               	iorwf	(?_strcmp+1)^0,w,c
  8713  0016F8  A4D8               	btfss	status,2,c
  8714  0016FA  EF81  F00B         	goto	u5451
  8715  0016FE  EF83  F00B         	goto	u5450
  8716  001702                     u5451:
  8717  001702  EFA3  F00B         	goto	l5697
  8718  001706                     u5450:
  8719  001706                     
  8720                           ;A6Lib.c: 99: EUSART_BaudRateSet(baudRate);
  8721  001706  C04A  F012         	movff	A6_BaudRateSet@baudRate,EUSART_BaudRateSet@baudRate
  8722  00170A  C04B  F013         	movff	A6_BaudRateSet@baudRate+1,EUSART_BaudRateSet@baudRate+1
  8723  00170E  C04C  F014         	movff	A6_BaudRateSet@baudRate+2,EUSART_BaudRateSet@baudRate+2
  8724  001712  C04D  F015         	movff	A6_BaudRateSet@baudRate+3,EUSART_BaudRateSet@baudRate+3
  8725  001716  EC91  F011         	call	_EUSART_BaudRateSet	;wreg free
  8726                           
  8727                           ;A6Lib.c: 100: sleepMS(150);
  8728  00171A  0E96               	movlw	150
  8729  00171C  6E05               	movwf	sleepMS@ms^0,c
  8730  00171E  0E00               	movlw	0
  8731  001720  6E06               	movwf	(sleepMS@ms+1)^0,c
  8732  001722  0E00               	movlw	0
  8733  001724  6E07               	movwf	(sleepMS@ms+2)^0,c
  8734  001726  0E00               	movlw	0
  8735  001728  6E08               	movwf	(sleepMS@ms+3)^0,c
  8736  00172A  EC2E  F017         	call	_sleepMS	;wreg free
  8737  00172E                     
  8738                           ;A6Lib.c: 101: if(A6_IsAlive() == 1) {
  8739  00172E  EC85  F015         	call	_A6_IsAlive	;wreg free
  8740  001732  06E8               	decf	wreg,f,c
  8741  001734  A4D8               	btfss	status,2,c
  8742  001736  EF9F  F00B         	goto	u5461
  8743  00173A  EFA1  F00B         	goto	u5460
  8744  00173E                     u5461:
  8745  00173E  EFA3  F00B         	goto	l5697
  8746  001742                     u5460:
  8747  001742  EFAD  F00B         	goto	l589
  8748  001746                     l5697:
  8749                           
  8750                           ;A6Lib.c: 103: };A6Lib.c: 104: };A6Lib.c: 107: EUSART_BaudRateSet(currentBaudRate);
  8751  001746  C0DF  F012         	movff	A6_BaudRateSet@currentBaudRate,EUSART_BaudRateSet@baudRate
  8752  00174A  C0E0  F013         	movff	A6_BaudRateSet@currentBaudRate+1,EUSART_BaudRateSet@baudRate+1
  8753  00174E  C0E1  F014         	movff	A6_BaudRateSet@currentBaudRate+2,EUSART_BaudRateSet@baudRate+2
  8754  001752  C0E2  F015         	movff	A6_BaudRateSet@currentBaudRate+3,EUSART_BaudRateSet@baudRate+3
  8755  001756  EC91  F011         	call	_EUSART_BaudRateSet	;wreg free
  8756  00175A                     l589:
  8757  00175A  0012               	return		;funcret
  8758  00175C                     __end_of_A6_BaudRateSet:
  8759                           	opt callstack 0
  8760                           
  8761 ;; *************** function _sprintf *****************
  8762 ;; Defined at:
  8763 ;;		line 505 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/doprnt.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  sp              2   26[COMRAM] PTR unsigned char 
  8766 ;;		 -> A6_BaudRateSet@request(20), Ecg_ProcessHeartRate@heartrateString(5), 
  8767 ;;  f               2   28[COMRAM] PTR const unsigned char 
  8768 ;;		 -> STR_12(12), STR_2(4), 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  val             4   40[COMRAM] unsigned long 
  8771 ;;  tmpval          4    0        struct .
  8772 ;;  cp              3    0        PTR const unsigned char 
  8773 ;;  width           2   47[COMRAM] int 
  8774 ;;  ap              2   44[COMRAM] PTR void [1]
  8775 ;;		 -> ?_sprintf(2), 
  8776 ;;  prec            2   38[COMRAM] int 
  8777 ;;  len             2    0        unsigned int 
  8778 ;;  c               1   49[COMRAM] unsigned char 
  8779 ;;  flag            1   46[COMRAM] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  2   26[COMRAM] int 
  8782 ;; Registers used:
  8783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8789 ;;      Params:         8       0       0       0       0       0       0       0       0
  8790 ;;      Locals:        12       0       0       0       0       0       0       0       0
  8791 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8792 ;;      Totals:        24       0       0       0       0       0       0       0       0
  8793 ;;Total ram usage:       24 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    3
  8796 ;; This function calls:
  8797 ;;		___lldiv
  8798 ;;		___llmod
  8799 ;;		___wmul
  8800 ;;		_isdigit
  8801 ;; This function is called by:
  8802 ;;		_Ecg_ProcessHeartRate
  8803 ;;		_A6_BaudRateSet
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text42
  8808  000012                     __ptext42:
  8809                           	opt callstack 0
  8810  000012                     _sprintf:
  8811                           	opt callstack 24
  8812  000012                     
  8813                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: u
      +                          nsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: un
      +                          signed long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 
      +                          550: *ap = __va_start();
  8814  000012  0E1F               	movlw	low (?_sprintf+4)
  8815  000014  6E2D               	movwf	sprintf@ap^0,c
  8816  000016  0E00               	movlw	high (?_sprintf+4)
  8817  000018  6E2E               	movwf	(sprintf@ap+1)^0,c
  8818                           
  8819                           ;doprnt.c: 553: while((c = *f++)) {
  8820  00001A  EFE6  F001         	goto	l5373
  8821  00001E                     l5271:
  8822                           
  8823                           ;doprnt.c: 555: if(c != '%')
  8824  00001E  0E25               	movlw	37
  8825  000020  1832               	xorwf	sprintf@c^0,w,c
  8826  000022  B4D8               	btfsc	status,2,c
  8827  000024  EF16  F000         	goto	u4861
  8828  000028  EF18  F000         	goto	u4860
  8829  00002C                     u4861:
  8830  00002C  EF22  F000         	goto	l5277
  8831  000030                     u4860:
  8832  000030                     
  8833                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  8834  000030  C01B  FFD9         	movff	sprintf@sp,fsr2l
  8835  000034  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  8836  000038  C032  FFDF         	movff	sprintf@c,indf2
  8837  00003C  4A1B               	infsnz	sprintf@sp^0,f,c
  8838  00003E  2A1C               	incf	(sprintf@sp+1)^0,f,c
  8839                           
  8840                           ;doprnt.c: 559: continue;
  8841  000040  EFE6  F001         	goto	l5373
  8842  000044                     l5277:
  8843                           
  8844                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  8845  000044  0E00               	movlw	0
  8846  000046  6E31               	movwf	(sprintf@width+1)^0,c
  8847  000048  0E00               	movlw	0
  8848  00004A  6E30               	movwf	sprintf@width^0,c
  8849                           
  8850                           ;doprnt.c: 565: flag = 0;
  8851  00004C  0E00               	movlw	0
  8852  00004E  6E2F               	movwf	sprintf@flag^0,c
  8853  000050                     
  8854                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  8855  000050  C01D  FFF6         	movff	sprintf@f,tblptrl
  8856  000054  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8857  000058                     	if	0	;tblptru may be non-zero
  8858  000058                     	endif
  8859  000058                     	if	0	;tblptru may be non-zero
  8860  000058                     	endif
  8861  000058  0008               	tblrd		*
  8862  00005A  50F5               	movf	tablat,w,c
  8863  00005C  EC9C  F017         	call	_isdigit
  8864  000060  A0D8               	btfss	status,0,c
  8865  000062  EF35  F000         	goto	u4871
  8866  000066  EF37  F000         	goto	u4870
  8867  00006A                     u4871:
  8868  00006A  EF76  F000         	goto	l5297
  8869  00006E                     u4870:
  8870  00006E                     
  8871                           ;doprnt.c: 615: width = 0;
  8872  00006E  0E00               	movlw	0
  8873  000070  6E31               	movwf	(sprintf@width+1)^0,c
  8874  000072  0E00               	movlw	0
  8875  000074  6E30               	movwf	sprintf@width^0,c
  8876  000076                     l5283:
  8877                           
  8878                           ;doprnt.c: 617: width *= 10;
  8879  000076  C030  F009         	movff	sprintf@width,___wmul@multiplier
  8880  00007A  C031  F00A         	movff	sprintf@width+1,___wmul@multiplier+1
  8881  00007E  0E00               	movlw	0
  8882  000080  6E0C               	movwf	(___wmul@multiplicand+1)^0,c
  8883  000082  0E0A               	movlw	10
  8884  000084  6E0B               	movwf	___wmul@multiplicand^0,c
  8885  000086  ECE1  F017         	call	___wmul	;wreg free
  8886  00008A  C009  F030         	movff	?___wmul,sprintf@width
  8887  00008E  C00A  F031         	movff	?___wmul+1,sprintf@width+1
  8888  000092                     
  8889                           ;doprnt.c: 618: width += *f++ - '0';
  8890  000092  0ED0               	movlw	208
  8891  000094  6E23               	movwf	??_sprintf^0,c
  8892  000096  0EFF               	movlw	255
  8893  000098  6E24               	movwf	(??_sprintf+1)^0,c
  8894  00009A  C01D  FFF6         	movff	sprintf@f,tblptrl
  8895  00009E  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8896  0000A2                     	if	0	;tblptru may be non-zero
  8897  0000A2                     	endif
  8898  0000A2                     	if	0	;tblptru may be non-zero
  8899  0000A2                     	endif
  8900  0000A2  0008               	tblrd		*
  8901  0000A4  50F5               	movf	tablat,w,c
  8902  0000A6  6E25               	movwf	(??_sprintf+2)^0,c
  8903  0000A8  6A26               	clrf	(??_sprintf+3)^0,c
  8904  0000AA  5023               	movf	??_sprintf^0,w,c
  8905  0000AC  2625               	addwf	(??_sprintf+2)^0,f,c
  8906  0000AE  5024               	movf	(??_sprintf+1)^0,w,c
  8907  0000B0  2226               	addwfc	(??_sprintf+3)^0,f,c
  8908  0000B2  5025               	movf	(??_sprintf+2)^0,w,c
  8909  0000B4  2630               	addwf	sprintf@width^0,f,c
  8910  0000B6  5026               	movf	(??_sprintf+3)^0,w,c
  8911  0000B8  2231               	addwfc	(sprintf@width+1)^0,f,c
  8912  0000BA  4A1D               	infsnz	sprintf@f^0,f,c
  8913  0000BC  2A1E               	incf	(sprintf@f+1)^0,f,c
  8914  0000BE                     
  8915                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  8916  0000BE  C01D  FFF6         	movff	sprintf@f,tblptrl
  8917  0000C2  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8918  0000C6                     	if	0	;tblptru may be non-zero
  8919  0000C6                     	endif
  8920  0000C6                     	if	0	;tblptru may be non-zero
  8921  0000C6                     	endif
  8922  0000C6  0008               	tblrd		*
  8923  0000C8  50F5               	movf	tablat,w,c
  8924  0000CA  EC9C  F017         	call	_isdigit
  8925  0000CE  B0D8               	btfsc	status,0,c
  8926  0000D0  EF6C  F000         	goto	u4881
  8927  0000D4  EF6E  F000         	goto	u4880
  8928  0000D8                     u4881:
  8929  0000D8  EF3B  F000         	goto	l5283
  8930  0000DC                     u4880:
  8931  0000DC  EF76  F000         	goto	l5297
  8932  0000E0                     l5291:
  8933                           
  8934                           ;doprnt.c: 669: flag |= 0x10;
  8935  0000E0  882F               	bsf	sprintf@flag^0,4,c
  8936                           
  8937                           ;doprnt.c: 670: goto loop;
  8938  0000E2  EF76  F000         	goto	l5297
  8939  0000E6                     l5293:
  8940                           
  8941                           ;doprnt.c: 844: flag |= 0x40;
  8942  0000E6  8C2F               	bsf	sprintf@flag^0,6,c
  8943                           
  8944                           ;doprnt.c: 845: break;
  8945  0000E8  EF96  F000         	goto	l731
  8946  0000EC                     l5297:
  8947  0000EC  C01D  FFF6         	movff	sprintf@f,tblptrl
  8948  0000F0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  8949  0000F4  4A1D               	infsnz	sprintf@f^0,f,c
  8950  0000F6  2A1E               	incf	(sprintf@f+1)^0,f,c
  8951  0000F8                     	if	0	;tblptru may be non-zero
  8952  0000F8                     	endif
  8953  0000F8                     	if	0	;tblptru may be non-zero
  8954  0000F8                     	endif
  8955  0000F8  0008               	tblrd		*
  8956  0000FA  CFF5 F032          	movff	tablat,sprintf@c
  8957  0000FE  5032               	movf	sprintf@c^0,w,c
  8958                           
  8959                           ; Switch size 1, requested type "simple"
  8960                           ; Number of cases is 5, Range of values is 0 to 117
  8961                           ; switch strategies available:
  8962                           ; Name         Instructions Cycles
  8963                           ; simple_byte           16     9 (average)
  8964                           ;	Chosen strategy is simple_byte
  8965  000100  0A00               	xorlw	0	; case 0
  8966  000102  B4D8               	btfsc	status,2,c
  8967  000104  EFF7  F001         	goto	l5375
  8968  000108  0A64               	xorlw	100	; case 100
  8969  00010A  B4D8               	btfsc	status,2,c
  8970  00010C  EF96  F000         	goto	l731
  8971  000110  0A0D               	xorlw	13	; case 105
  8972  000112  B4D8               	btfsc	status,2,c
  8973  000114  EF96  F000         	goto	l731
  8974  000118  0A05               	xorlw	5	; case 108
  8975  00011A  B4D8               	btfsc	status,2,c
  8976  00011C  EF70  F000         	goto	l5291
  8977  000120  0A19               	xorlw	25	; case 117
  8978  000122  B4D8               	btfsc	status,2,c
  8979  000124  EF73  F000         	goto	l5293
  8980  000128  EFE6  F001         	goto	l5373
  8981  00012C                     l731:
  8982                           
  8983                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  8984  00012C  BC2F               	btfsc	sprintf@flag^0,6,c
  8985  00012E  EF9B  F000         	goto	u4891
  8986  000132  EF9D  F000         	goto	u4890
  8987  000136                     u4891:
  8988  000136  EFDA  F000         	goto	l734
  8989  00013A                     u4890:
  8990  00013A                     
  8991                           ;doprnt.c: 1279: {;doprnt.c: 1281: if(flag & 0x10)
  8992  00013A  A82F               	btfss	sprintf@flag^0,4,c
  8993  00013C  EFA2  F000         	goto	u4901
  8994  000140  EFA4  F000         	goto	u4900
  8995  000144                     u4901:
  8996  000144  EFB6  F000         	goto	l5305
  8997  000148                     u4900:
  8998  000148                     
  8999                           ;doprnt.c: 1282: val = (unsigned long)(*(long *)__va_arg((*(long **)ap), (long)0));
  9000  000148  C02D  FFD9         	movff	sprintf@ap,fsr2l
  9001  00014C  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  9002  000150  CFDE F029          	movff	postinc2,sprintf@val
  9003  000154  CFDE F02A          	movff	postinc2,sprintf@val+1
  9004  000158  CFDE F02B          	movff	postinc2,sprintf@val+2
  9005  00015C  CFDE F02C          	movff	postinc2,sprintf@val+3
  9006  000160  0E04               	movlw	4
  9007  000162  262D               	addwf	sprintf@ap^0,f,c
  9008  000164  0E00               	movlw	0
  9009  000166  222E               	addwfc	(sprintf@ap+1)^0,f,c
  9010  000168  EFC7  F000         	goto	l5309
  9011  00016C                     l5305:
  9012                           
  9013                           ;doprnt.c: 1283: else;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)a
      +                          p), (int)0));
  9014  00016C  C02D  FFD9         	movff	sprintf@ap,fsr2l
  9015  000170  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  9016  000174  CFDE F029          	movff	postinc2,sprintf@val
  9017  000178  CFDD F02A          	movff	postdec2,sprintf@val+1
  9018  00017C  0E00               	movlw	0
  9019  00017E  BE2A               	btfsc	(sprintf@val+1)^0,7,c
  9020  000180  0EFF               	movlw	-1
  9021  000182  6E2B               	movwf	(sprintf@val+2)^0,c
  9022  000184  6E2C               	movwf	(sprintf@val+3)^0,c
  9023  000186  0E02               	movlw	2
  9024  000188  262D               	addwf	sprintf@ap^0,f,c
  9025  00018A  0E00               	movlw	0
  9026  00018C  222E               	addwfc	(sprintf@ap+1)^0,f,c
  9027  00018E                     l5309:
  9028                           
  9029                           ;doprnt.c: 1287: if((long)val < 0) {
  9030  00018E  BE2C               	btfsc	(sprintf@val+3)^0,7,c
  9031  000190  EFCE  F000         	goto	u4910
  9032  000194  EFCC  F000         	goto	u4911
  9033  000198                     u4911:
  9034  000198  EF05  F001         	goto	l5323
  9035  00019C                     u4910:
  9036  00019C                     
  9037                           ;doprnt.c: 1288: flag |= 0x03;
  9038  00019C  0E03               	movlw	3
  9039  00019E  122F               	iorwf	sprintf@flag^0,f,c
  9040  0001A0                     
  9041                           ;doprnt.c: 1289: val = -val;
  9042  0001A0  1E2C               	comf	(sprintf@val+3)^0,f,c
  9043  0001A2  1E2B               	comf	(sprintf@val+2)^0,f,c
  9044  0001A4  1E2A               	comf	(sprintf@val+1)^0,f,c
  9045  0001A6  6C29               	negf	sprintf@val^0,c
  9046  0001A8  0E00               	movlw	0
  9047  0001AA  222A               	addwfc	(sprintf@val+1)^0,f,c
  9048  0001AC  222B               	addwfc	(sprintf@val+2)^0,f,c
  9049  0001AE  222C               	addwfc	(sprintf@val+3)^0,f,c
  9050  0001B0  EF05  F001         	goto	l5323
  9051  0001B4                     l734:
  9052                           
  9053                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1307: if(flag & 0x10)
  9054  0001B4  A82F               	btfss	sprintf@flag^0,4,c
  9055  0001B6  EFDF  F000         	goto	u4921
  9056  0001BA  EFE1  F000         	goto	u4920
  9057  0001BE                     u4921:
  9058  0001BE  EFF3  F000         	goto	l5319
  9059  0001C2                     u4920:
  9060  0001C2                     
  9061                           ;doprnt.c: 1308: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  9062  0001C2  C02D  FFD9         	movff	sprintf@ap,fsr2l
  9063  0001C6  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  9064  0001CA  CFDE F029          	movff	postinc2,sprintf@val
  9065  0001CE  CFDE F02A          	movff	postinc2,sprintf@val+1
  9066  0001D2  CFDE F02B          	movff	postinc2,sprintf@val+2
  9067  0001D6  CFDE F02C          	movff	postinc2,sprintf@val+3
  9068  0001DA  0E04               	movlw	4
  9069  0001DC  262D               	addwf	sprintf@ap^0,f,c
  9070  0001DE  0E00               	movlw	0
  9071  0001E0  222E               	addwfc	(sprintf@ap+1)^0,f,c
  9072  0001E2  EF05  F001         	goto	l5323
  9073  0001E6                     l5319:
  9074                           
  9075                           ;doprnt.c: 1309: else;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (
      +                          unsigned)0));
  9076  0001E6  C02D  FFD9         	movff	sprintf@ap,fsr2l
  9077  0001EA  C02E  FFDA         	movff	sprintf@ap+1,fsr2h
  9078  0001EE  CFDE F023          	movff	postinc2,??_sprintf
  9079  0001F2  CFDD F024          	movff	postdec2,??_sprintf+1
  9080  0001F6  C023  F029         	movff	??_sprintf,sprintf@val
  9081  0001FA  C024  F02A         	movff	??_sprintf+1,sprintf@val+1
  9082  0001FE  6A2B               	clrf	(sprintf@val+2)^0,c
  9083  000200  6A2C               	clrf	(sprintf@val+3)^0,c
  9084  000202  0E02               	movlw	2
  9085  000204  262D               	addwf	sprintf@ap^0,f,c
  9086  000206  0E00               	movlw	0
  9087  000208  222E               	addwfc	(sprintf@ap+1)^0,f,c
  9088  00020A                     l5323:
  9089                           
  9090                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  9091  00020A  0E01               	movlw	1
  9092  00020C  6E32               	movwf	sprintf@c^0,c
  9093  00020E                     l5329:
  9094                           
  9095                           ;doprnt.c: 1332: if(val < dpowers[c])
  9096  00020E  5032               	movf	sprintf@c^0,w,c
  9097  000210  0D04               	mullw	4
  9098  000212  0EEB               	movlw	low _dpowers
  9099  000214  24F3               	addwf	243,w,c
  9100  000216  6EF6               	movwf	tblptrl,c
  9101  000218  0E5E               	movlw	high _dpowers
  9102  00021A  20F4               	addwfc	244,w,c
  9103  00021C  6EF7               	movwf	tblptrh,c
  9104  00021E                     	if	0	;There are less than 3 active tblptr bytes
  9105  00021E                     	endif
  9106  00021E  0009               	tblrd		*+
  9107  000220  50F5               	movf	tablat,w,c
  9108  000222  5C29               	subwf	sprintf@val^0,w,c
  9109  000224  0009               	tblrd		*+
  9110  000226  50F5               	movf	tablat,w,c
  9111  000228  582A               	subwfb	(sprintf@val+1)^0,w,c
  9112  00022A  0009               	tblrd		*+
  9113  00022C  50F5               	movf	tablat,w,c
  9114  00022E  582B               	subwfb	(sprintf@val+2)^0,w,c
  9115  000230  0009               	tblrd		*+
  9116  000232  50F5               	movf	tablat,w,c
  9117  000234  582C               	subwfb	(sprintf@val+3)^0,w,c
  9118  000236  B0D8               	btfsc	status,0,c
  9119  000238  EF20  F001         	goto	u4931
  9120  00023C  EF22  F001         	goto	u4930
  9121  000240                     u4931:
  9122  000240  EF24  F001         	goto	l5333
  9123  000244                     u4930:
  9124  000244  EF2E  F001         	goto	l5337
  9125  000248                     l5333:
  9126  000248  2A32               	incf	sprintf@c^0,f,c
  9127  00024A  0E0A               	movlw	10
  9128  00024C  1832               	xorwf	sprintf@c^0,w,c
  9129  00024E  A4D8               	btfss	status,2,c
  9130  000250  EF2C  F001         	goto	u4941
  9131  000254  EF2E  F001         	goto	u4940
  9132  000258                     u4941:
  9133  000258  EF07  F001         	goto	l5329
  9134  00025C                     u4940:
  9135  00025C                     l5337:
  9136                           
  9137                           ;doprnt.c: 1371: if(width && flag & 0x03)
  9138  00025C  5030               	movf	sprintf@width^0,w,c
  9139  00025E  1031               	iorwf	(sprintf@width+1)^0,w,c
  9140  000260  B4D8               	btfsc	status,2,c
  9141  000262  EF35  F001         	goto	u4951
  9142  000266  EF37  F001         	goto	u4950
  9143  00026A                     u4951:
  9144  00026A  EF45  F001         	goto	l5343
  9145  00026E                     u4950:
  9146  00026E  C02F  F023         	movff	sprintf@flag,??_sprintf
  9147  000272  0E03               	movlw	3
  9148  000274  1623               	andwf	??_sprintf^0,f,c
  9149  000276  B4D8               	btfsc	status,2,c
  9150  000278  EF40  F001         	goto	u4961
  9151  00027C  EF42  F001         	goto	u4960
  9152  000280                     u4961:
  9153  000280  EF45  F001         	goto	l5343
  9154  000284                     u4960:
  9155  000284                     
  9156                           ;doprnt.c: 1372: width--;
  9157  000284  0630               	decf	sprintf@width^0,f,c
  9158  000286  A0D8               	btfss	status,0,c
  9159  000288  0631               	decf	(sprintf@width+1)^0,f,c
  9160  00028A                     l5343:
  9161                           
  9162                           ;doprnt.c: 1407: if(width > c)
  9163  00028A  5032               	movf	sprintf@c^0,w,c
  9164  00028C  6E23               	movwf	??_sprintf^0,c
  9165  00028E  6A24               	clrf	(??_sprintf+1)^0,c
  9166  000290  5030               	movf	sprintf@width^0,w,c
  9167  000292  5C23               	subwf	??_sprintf^0,w,c
  9168  000294  5024               	movf	(??_sprintf+1)^0,w,c
  9169  000296  0A80               	xorlw	128
  9170  000298  6E25               	movwf	(??_sprintf+2)^0,c
  9171  00029A  5031               	movf	(sprintf@width+1)^0,w,c
  9172  00029C  0A80               	xorlw	128
  9173  00029E  5825               	subwfb	(??_sprintf+2)^0,w,c
  9174  0002A0  B0D8               	btfsc	status,0,c
  9175  0002A2  EF55  F001         	goto	u4971
  9176  0002A6  EF57  F001         	goto	u4970
  9177  0002AA                     u4971:
  9178  0002AA  EF5D  F001         	goto	l5347
  9179  0002AE                     u4970:
  9180  0002AE                     
  9181                           ;doprnt.c: 1408: width -= c;
  9182  0002AE  5032               	movf	sprintf@c^0,w,c
  9183  0002B0  5E30               	subwf	sprintf@width^0,f,c
  9184  0002B2  0E00               	movlw	0
  9185  0002B4  5A31               	subwfb	(sprintf@width+1)^0,f,c
  9186  0002B6  EF61  F001         	goto	l5349
  9187  0002BA                     l5347:
  9188                           
  9189                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  9190  0002BA  0E00               	movlw	0
  9191  0002BC  6E31               	movwf	(sprintf@width+1)^0,c
  9192  0002BE  0E00               	movlw	0
  9193  0002C0  6E30               	movwf	sprintf@width^0,c
  9194  0002C2                     l5349:
  9195                           
  9196                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  9197  0002C2  5030               	movf	sprintf@width^0,w,c
  9198  0002C4  1031               	iorwf	(sprintf@width+1)^0,w,c
  9199  0002C6  B4D8               	btfsc	status,2,c
  9200  0002C8  EF68  F001         	goto	u4981
  9201  0002CC  EF6A  F001         	goto	u4980
  9202  0002D0                     u4981:
  9203  0002D0  EF7E  F001         	goto	l5357
  9204  0002D4                     u4980:
  9205  0002D4                     l5351:
  9206                           
  9207                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  9208  0002D4  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9209  0002D8  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9210  0002DC  0E20               	movlw	32
  9211  0002DE  6EDF               	movwf	indf2,c
  9212  0002E0  4A1B               	infsnz	sprintf@sp^0,f,c
  9213  0002E2  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9214  0002E4                     
  9215                           ;doprnt.c: 1457: while(--width);
  9216  0002E4  0630               	decf	sprintf@width^0,f,c
  9217  0002E6  A0D8               	btfss	status,0,c
  9218  0002E8  0631               	decf	(sprintf@width+1)^0,f,c
  9219  0002EA  5030               	movf	sprintf@width^0,w,c
  9220  0002EC  1031               	iorwf	(sprintf@width+1)^0,w,c
  9221  0002EE  A4D8               	btfss	status,2,c
  9222  0002F0  EF7C  F001         	goto	u4991
  9223  0002F4  EF7E  F001         	goto	u4990
  9224  0002F8                     u4991:
  9225  0002F8  EF6A  F001         	goto	l5351
  9226  0002FC                     u4990:
  9227  0002FC                     l5357:
  9228                           
  9229                           ;doprnt.c: 1464: if(flag & 0x03)
  9230  0002FC  C02F  F023         	movff	sprintf@flag,??_sprintf
  9231  000300  0E03               	movlw	3
  9232  000302  1623               	andwf	??_sprintf^0,f,c
  9233  000304  B4D8               	btfsc	status,2,c
  9234  000306  EF87  F001         	goto	u5001
  9235  00030A  EF89  F001         	goto	u5000
  9236  00030E                     u5001:
  9237  00030E  EF91  F001         	goto	l5363
  9238  000312                     u5000:
  9239  000312                     
  9240                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  9241  000312  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9242  000316  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9243  00031A  0E2D               	movlw	45
  9244  00031C  6EDF               	movwf	indf2,c
  9245  00031E  4A1B               	infsnz	sprintf@sp^0,f,c
  9246  000320  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9247  000322                     l5363:
  9248                           
  9249                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  9250  000322  C032  F027         	movff	sprintf@c,sprintf@prec
  9251  000326  6A28               	clrf	(sprintf@prec+1)^0,c
  9252                           
  9253                           ;doprnt.c: 1500: while(prec--) {
  9254  000328  EFD9  F001         	goto	l5371
  9255  00032C                     l5365:
  9256                           
  9257                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  9258  00032C  C027  F023         	movff	sprintf@prec,??_sprintf
  9259  000330  C028  F024         	movff	sprintf@prec+1,??_sprintf+1
  9260  000334  90D8               	bcf	status,0,c
  9261  000336  3623               	rlcf	??_sprintf^0,f,c
  9262  000338  3624               	rlcf	(??_sprintf+1)^0,f,c
  9263  00033A  90D8               	bcf	status,0,c
  9264  00033C  3623               	rlcf	??_sprintf^0,f,c
  9265  00033E  3624               	rlcf	(??_sprintf+1)^0,f,c
  9266  000340  0EEB               	movlw	low _dpowers
  9267  000342  2423               	addwf	??_sprintf^0,w,c
  9268  000344  6EF6               	movwf	tblptrl,c
  9269  000346  0E5E               	movlw	high _dpowers
  9270  000348  2024               	addwfc	(??_sprintf+1)^0,w,c
  9271  00034A  6EF7               	movwf	tblptrh,c
  9272  00034C                     	if	0	;There are less than 3 active tblptr bytes
  9273  00034C                     	endif
  9274  00034C  0009               	tblrd		*+
  9275  00034E  CFF5 F009          	movff	tablat,___lldiv@divisor
  9276  000352  0009               	tblrd		*+
  9277  000354  CFF5 F00A          	movff	tablat,___lldiv@divisor+1
  9278  000358  0009               	tblrd		*+
  9279  00035A  CFF5 F00B          	movff	tablat,___lldiv@divisor+2
  9280  00035E  000A               	tblrd		*-
  9281  000360  CFF5 F00C          	movff	tablat,___lldiv@divisor+3
  9282  000364  C029  F005         	movff	sprintf@val,___lldiv@dividend
  9283  000368  C02A  F006         	movff	sprintf@val+1,___lldiv@dividend+1
  9284  00036C  C02B  F007         	movff	sprintf@val+2,___lldiv@dividend+2
  9285  000370  C02C  F008         	movff	sprintf@val+3,___lldiv@dividend+3
  9286  000374  ECDE  F00F         	call	___lldiv	;wreg free
  9287  000378  C005  F012         	movff	?___lldiv,___llmod@dividend
  9288  00037C  C006  F013         	movff	?___lldiv+1,___llmod@dividend+1
  9289  000380  C007  F014         	movff	?___lldiv+2,___llmod@dividend+2
  9290  000384  C008  F015         	movff	?___lldiv+3,___llmod@dividend+3
  9291  000388  0E0A               	movlw	10
  9292  00038A  6E16               	movwf	___llmod@divisor^0,c
  9293  00038C  0E00               	movlw	0
  9294  00038E  6E17               	movwf	(___llmod@divisor+1)^0,c
  9295  000390  0E00               	movlw	0
  9296  000392  6E18               	movwf	(___llmod@divisor+2)^0,c
  9297  000394  0E00               	movlw	0
  9298  000396  6E19               	movwf	(___llmod@divisor+3)^0,c
  9299  000398  ECC6  F010         	call	___llmod	;wreg free
  9300  00039C  5012               	movf	?___llmod^0,w,c
  9301  00039E  0F30               	addlw	48
  9302  0003A0  6E32               	movwf	sprintf@c^0,c
  9303  0003A2                     
  9304                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  9305  0003A2  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9306  0003A6  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9307  0003AA  C032  FFDF         	movff	sprintf@c,indf2
  9308  0003AE  4A1B               	infsnz	sprintf@sp^0,f,c
  9309  0003B0  2A1C               	incf	(sprintf@sp+1)^0,f,c
  9310  0003B2                     l5371:
  9311  0003B2  0627               	decf	sprintf@prec^0,f,c
  9312  0003B4  A0D8               	btfss	status,0,c
  9313  0003B6  0628               	decf	(sprintf@prec+1)^0,f,c
  9314  0003B8  2827               	incf	sprintf@prec^0,w,c
  9315  0003BA  E106               	bnz	u5011
  9316  0003BC  2828               	incf	(sprintf@prec+1)^0,w,c
  9317  0003BE  A4D8               	btfss	status,2,c
  9318  0003C0  EFE4  F001         	goto	u5011
  9319  0003C4  EFE6  F001         	goto	u5010
  9320  0003C8                     u5011:
  9321  0003C8  EF96  F001         	goto	l5365
  9322  0003CC                     u5010:
  9323  0003CC                     l5373:
  9324  0003CC  C01D  FFF6         	movff	sprintf@f,tblptrl
  9325  0003D0  C01E  FFF7         	movff	sprintf@f+1,tblptrh
  9326  0003D4  4A1D               	infsnz	sprintf@f^0,f,c
  9327  0003D6  2A1E               	incf	(sprintf@f+1)^0,f,c
  9328  0003D8                     	if	0	;tblptru may be non-zero
  9329  0003D8                     	endif
  9330  0003D8                     	if	0	;tblptru may be non-zero
  9331  0003D8                     	endif
  9332  0003D8  0008               	tblrd		*
  9333  0003DA  CFF5 F032          	movff	tablat,sprintf@c
  9334  0003DE  5032               	movf	sprintf@c^0,w,c
  9335  0003E0  A4D8               	btfss	status,2,c
  9336  0003E2  EFF5  F001         	goto	u5021
  9337  0003E6  EFF7  F001         	goto	u5020
  9338  0003EA                     u5021:
  9339  0003EA  EF0F  F000         	goto	l5271
  9340  0003EE                     u5020:
  9341  0003EE                     l5375:
  9342                           
  9343                           ;doprnt.c: 1564: *sp = 0;
  9344  0003EE  C01B  FFD9         	movff	sprintf@sp,fsr2l
  9345  0003F2  C01C  FFDA         	movff	sprintf@sp+1,fsr2h
  9346  0003F6  0E00               	movlw	0
  9347  0003F8  6EDF               	movwf	indf2,c
  9348  0003FA  0012               	return		;funcret
  9349  0003FC                     __end_of_sprintf:
  9350                           	opt callstack 0
  9351                           
  9352 ;; *************** function ___wmul *****************
  9353 ;; Defined at:
  9354 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul16.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  multiplier      2    8[COMRAM] unsigned int 
  9357 ;;  multiplicand    2   10[COMRAM] unsigned int 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;  product         2   12[COMRAM] unsigned int 
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  2    8[COMRAM] unsigned int 
  9362 ;; Registers used:
  9363 ;;		wreg, status,2, status,0, prodl, prodh
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9369 ;;      Params:         4       0       0       0       0       0       0       0       0
  9370 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9372 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9373 ;;Total ram usage:        6 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; Hardware stack levels required when called:    2
  9376 ;; This function calls:
  9377 ;;		Nothing
  9378 ;; This function is called by:
  9379 ;;		_processGSM
  9380 ;;		_TFT_DrawFillRect
  9381 ;;		_TFT_DrawChar
  9382 ;;		_sprintf
  9383 ;;		_atoi
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text43
  9388  002FC2                     __ptext43:
  9389                           	opt callstack 0
  9390  002FC2                     ___wmul:
  9391                           	opt callstack 26
  9392  002FC2  5009               	movf	___wmul@multiplier^0,w,c
  9393  002FC4  020B               	mulwf	___wmul@multiplicand^0,c
  9394  002FC6  CFF3 F00D          	movff	prodl,___wmul@product
  9395  002FCA  CFF4 F00E          	movff	prodh,___wmul@product+1
  9396  002FCE  5009               	movf	___wmul@multiplier^0,w,c
  9397  002FD0  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  9398  002FD2  50F3               	movf	243,w,c
  9399  002FD4  260E               	addwf	(___wmul@product+1)^0,f,c
  9400  002FD6  500A               	movf	(___wmul@multiplier+1)^0,w,c
  9401  002FD8  020B               	mulwf	___wmul@multiplicand^0,c
  9402  002FDA  50F3               	movf	243,w,c
  9403  002FDC  260E               	addwf	(___wmul@product+1)^0,f,c
  9404  002FDE  C00D  F009         	movff	___wmul@product,?___wmul
  9405  002FE2  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  9406  002FE6  0012               	return		;funcret
  9407  002FE8                     __end_of___wmul:
  9408                           	opt callstack 0
  9409                           
  9410 ;; *************** function ___llmod *****************
  9411 ;; Defined at:
  9412 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/llmod.c"
  9413 ;; Parameters:    Size  Location     Type
  9414 ;;  dividend        4   17[COMRAM] unsigned long 
  9415 ;;  divisor         4   21[COMRAM] unsigned long 
  9416 ;; Auto vars:     Size  Location     Type
  9417 ;;  counter         1   25[COMRAM] unsigned char 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  4   17[COMRAM] unsigned long 
  9420 ;; Registers used:
  9421 ;;		wreg, status,2, status,0
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9427 ;;      Params:         8       0       0       0       0       0       0       0       0
  9428 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9430 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9431 ;;Total ram usage:        9 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; Hardware stack levels required when called:    2
  9434 ;; This function calls:
  9435 ;;		Nothing
  9436 ;; This function is called by:
  9437 ;;		_sprintf
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text44
  9442  00218C                     __ptext44:
  9443                           	opt callstack 0
  9444  00218C                     ___llmod:
  9445                           	opt callstack 24
  9446  00218C  5016               	movf	___llmod@divisor^0,w,c
  9447  00218E  1017               	iorwf	(___llmod@divisor+1)^0,w,c
  9448  002190  1018               	iorwf	(___llmod@divisor+2)^0,w,c
  9449  002192  1019               	iorwf	(___llmod@divisor+3)^0,w,c
  9450  002194  B4D8               	btfsc	status,2,c
  9451  002196  EFCF  F010         	goto	u2901
  9452  00219A  EFD1  F010         	goto	u2900
  9453  00219E                     u2901:
  9454  00219E  EF01  F011         	goto	l1166
  9455  0021A2                     u2900:
  9456  0021A2  0E01               	movlw	1
  9457  0021A4  6E1A               	movwf	___llmod@counter^0,c
  9458  0021A6  EFDB  F010         	goto	l3829
  9459  0021AA                     l3827:
  9460  0021AA  90D8               	bcf	status,0,c
  9461  0021AC  3616               	rlcf	___llmod@divisor^0,f,c
  9462  0021AE  3617               	rlcf	(___llmod@divisor+1)^0,f,c
  9463  0021B0  3618               	rlcf	(___llmod@divisor+2)^0,f,c
  9464  0021B2  3619               	rlcf	(___llmod@divisor+3)^0,f,c
  9465  0021B4  2A1A               	incf	___llmod@counter^0,f,c
  9466  0021B6                     l3829:
  9467  0021B6  AE19               	btfss	(___llmod@divisor+3)^0,7,c
  9468  0021B8  EFE0  F010         	goto	u2911
  9469  0021BC  EFE2  F010         	goto	u2910
  9470  0021C0                     u2911:
  9471  0021C0  EFD5  F010         	goto	l3827
  9472  0021C4                     u2910:
  9473  0021C4                     l3831:
  9474  0021C4  5016               	movf	___llmod@divisor^0,w,c
  9475  0021C6  5C12               	subwf	___llmod@dividend^0,w,c
  9476  0021C8  5017               	movf	(___llmod@divisor+1)^0,w,c
  9477  0021CA  5813               	subwfb	(___llmod@dividend+1)^0,w,c
  9478  0021CC  5018               	movf	(___llmod@divisor+2)^0,w,c
  9479  0021CE  5814               	subwfb	(___llmod@dividend+2)^0,w,c
  9480  0021D0  5019               	movf	(___llmod@divisor+3)^0,w,c
  9481  0021D2  5815               	subwfb	(___llmod@dividend+3)^0,w,c
  9482  0021D4  A0D8               	btfss	status,0,c
  9483  0021D6  EFEF  F010         	goto	u2921
  9484  0021DA  EFF1  F010         	goto	u2920
  9485  0021DE                     u2921:
  9486  0021DE  EFF9  F010         	goto	l3835
  9487  0021E2                     u2920:
  9488  0021E2  5016               	movf	___llmod@divisor^0,w,c
  9489  0021E4  5E12               	subwf	___llmod@dividend^0,f,c
  9490  0021E6  5017               	movf	(___llmod@divisor+1)^0,w,c
  9491  0021E8  5A13               	subwfb	(___llmod@dividend+1)^0,f,c
  9492  0021EA  5018               	movf	(___llmod@divisor+2)^0,w,c
  9493  0021EC  5A14               	subwfb	(___llmod@dividend+2)^0,f,c
  9494  0021EE  5019               	movf	(___llmod@divisor+3)^0,w,c
  9495  0021F0  5A15               	subwfb	(___llmod@dividend+3)^0,f,c
  9496  0021F2                     l3835:
  9497  0021F2  90D8               	bcf	status,0,c
  9498  0021F4  3219               	rrcf	(___llmod@divisor+3)^0,f,c
  9499  0021F6  3218               	rrcf	(___llmod@divisor+2)^0,f,c
  9500  0021F8  3217               	rrcf	(___llmod@divisor+1)^0,f,c
  9501  0021FA  3216               	rrcf	___llmod@divisor^0,f,c
  9502  0021FC  2E1A               	decfsz	___llmod@counter^0,f,c
  9503  0021FE  EFE2  F010         	goto	l3831
  9504  002202                     l1166:
  9505  002202  C012  F012         	movff	___llmod@dividend,?___llmod
  9506  002206  C013  F013         	movff	___llmod@dividend+1,?___llmod+1
  9507  00220A  C014  F014         	movff	___llmod@dividend+2,?___llmod+2
  9508  00220E  C015  F015         	movff	___llmod@dividend+3,?___llmod+3
  9509  002212  0012               	return		;funcret
  9510  002214                     __end_of___llmod:
  9511                           	opt callstack 0
  9512                           
  9513 ;; *************** function _A6_BaudRateGet *****************
  9514 ;; Defined at:
  9515 ;;		line 63 in file "A6Lib.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  j               1   72[COMRAM] unsigned char 
  9520 ;;  response       32   34[COMRAM] unsigned char [32]
  9521 ;;  baudRate        4   66[COMRAM] unsigned long 
  9522 ;;  baudRateToke    2   70[COMRAM] PTR unsigned char 
  9523 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9524 ;;		 -> GSMStatus(41), 
  9525 ;; Return value:  Size  Location     Type
  9526 ;;                  4   30[COMRAM] unsigned long 
  9527 ;; Registers used:
  9528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9529 ;; Tracked objects:
  9530 ;;		On entry : 0/0
  9531 ;;		On exit  : 0/0
  9532 ;;		Unchanged: 0/0
  9533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9534 ;;      Params:         4       0       0       0       0       0       0       0       0
  9535 ;;      Locals:        39       0       0       0       0       0       0       0       0
  9536 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9537 ;;      Totals:        43       0       0       0       0       0       0       0       0
  9538 ;;Total ram usage:       43 bytes
  9539 ;; Hardware stack levels used:    1
  9540 ;; Hardware stack levels required when called:    6
  9541 ;; This function calls:
  9542 ;;		_A6_Command
  9543 ;;		_atol
  9544 ;;		_strstr
  9545 ;;		_strtok
  9546 ;; This function is called by:
  9547 ;;		_A6_BaudRateSet
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           	psect	text45
  9552  00141C                     __ptext45:
  9553                           	opt callstack 0
  9554  00141C                     _A6_BaudRateGet:
  9555                           	opt callstack 22
  9556  00141C                     
  9557                           ;A6Lib.c: 64: uint32_t baudRate;;A6Lib.c: 65: char *baudRateToken;;A6Lib.c: 66: char res
      +                          ponse[32];;A6Lib.c: 68: A6_Command("AT+IPR?\r", 0, response, 32);
  9558  00141C  0EBF               	movlw	low STR_8
  9559  00141E  6E18               	movwf	A6_Command@command^0,c
  9560  001420  0E5F               	movlw	high STR_8
  9561  001422  6E19               	movwf	(A6_Command@command+1)^0,c
  9562  001424  0E00               	movlw	0
  9563  001426  6E1B               	movwf	(A6_Command@timeout+1)^0,c
  9564  001428  0E00               	movlw	0
  9565  00142A  6E1A               	movwf	A6_Command@timeout^0,c
  9566  00142C  0E23               	movlw	low A6_BaudRateGet@response
  9567  00142E  6E1C               	movwf	A6_Command@response^0,c
  9568  001430  0E00               	movlw	high A6_BaudRateGet@response
  9569  001432  6E1D               	movwf	(A6_Command@response+1)^0,c
  9570  001434  0E20               	movlw	32
  9571  001436  6E1E               	movwf	A6_Command@responseLen^0,c
  9572  001438  EC4E  F011         	call	_A6_Command	;wreg free
  9573  00143C                     
  9574                           ;A6Lib.c: 69: if(strstr(response, "+IPR: ") != (0)) {
  9575  00143C  0E23               	movlw	low A6_BaudRateGet@response
  9576  00143E  6E10               	movwf	strstr@s1^0,c
  9577  001440  0E00               	movlw	high A6_BaudRateGet@response
  9578  001442  6E11               	movwf	(strstr@s1+1)^0,c
  9579  001444  0EE7               	movlw	low STR_9
  9580  001446  6E12               	movwf	strstr@s2^0,c
  9581  001448  0E5F               	movlw	high STR_9
  9582  00144A  6E13               	movwf	(strstr@s2+1)^0,c
  9583  00144C  EC7F  F00F         	call	_strstr	;wreg free
  9584  001450  5010               	movf	?_strstr^0,w,c
  9585  001452  1011               	iorwf	(?_strstr+1)^0,w,c
  9586  001454  B4D8               	btfsc	status,2,c
  9587  001456  EF2F  F00A         	goto	u5271
  9588  00145A  EF31  F00A         	goto	u5270
  9589  00145E                     u5271:
  9590  00145E  EF97  F00A         	goto	l5581
  9591  001462                     u5270:
  9592  001462                     
  9593                           ;A6Lib.c: 70: baudRateToken = strtok(response, " ");
  9594  001462  0E23               	movlw	low A6_BaudRateGet@response
  9595  001464  6E12               	movwf	strtok@s1^0,c
  9596  001466  0E00               	movlw	high A6_BaudRateGet@response
  9597  001468  6E13               	movwf	(strtok@s1+1)^0,c
  9598  00146A  0ED6               	movlw	low (STR_16+6)
  9599  00146C  6E14               	movwf	strtok@s2^0,c
  9600  00146E  0E5F               	movlw	high (STR_16+6)
  9601  001470  6E15               	movwf	(strtok@s2+1)^0,c
  9602  001472  EC97  F00C         	call	_strtok	;wreg free
  9603  001476  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  9604  00147A  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  9605                           
  9606                           ;A6Lib.c: 71: baudRateToken = strtok((0), " ");
  9607  00147E  0E00               	movlw	0
  9608  001480  6E12               	movwf	strtok@s1^0,c
  9609  001482  0E00               	movlw	0
  9610  001484  6E13               	movwf	(strtok@s1+1)^0,c
  9611  001486  0ED6               	movlw	low (STR_16+6)
  9612  001488  6E14               	movwf	strtok@s2^0,c
  9613  00148A  0E5F               	movlw	high (STR_16+6)
  9614  00148C  6E15               	movwf	(strtok@s2+1)^0,c
  9615  00148E  EC97  F00C         	call	_strtok	;wreg free
  9616  001492  C012  F047         	movff	?_strtok,A6_BaudRateGet@baudRateToken
  9617  001496  C013  F048         	movff	?_strtok+1,A6_BaudRateGet@baudRateToken+1
  9618  00149A                     
  9619                           ;A6Lib.c: 72: if(baudRateToken != (0)) {
  9620  00149A  5047               	movf	A6_BaudRateGet@baudRateToken^0,w,c
  9621  00149C  1048               	iorwf	(A6_BaudRateGet@baudRateToken+1)^0,w,c
  9622  00149E  B4D8               	btfsc	status,2,c
  9623  0014A0  EF54  F00A         	goto	u5281
  9624  0014A4  EF56  F00A         	goto	u5280
  9625  0014A8                     u5281:
  9626  0014A8  EF97  F00A         	goto	l5581
  9627  0014AC                     u5280:
  9628  0014AC                     
  9629                           ;A6Lib.c: 73: baudRate = atol(baudRateToken);
  9630  0014AC  C047  F011         	movff	A6_BaudRateGet@baudRateToken,atol@s
  9631  0014B0  C048  F012         	movff	A6_BaudRateGet@baudRateToken+1,atol@s+1
  9632  0014B4  EC71  F009         	call	_atol	;wreg free
  9633  0014B8  C011  F043         	movff	?_atol,A6_BaudRateGet@baudRate
  9634  0014BC  C012  F044         	movff	?_atol+1,A6_BaudRateGet@baudRate+1
  9635  0014C0  C013  F045         	movff	?_atol+2,A6_BaudRateGet@baudRate+2
  9636  0014C4  C014  F046         	movff	?_atol+3,A6_BaudRateGet@baudRate+3
  9637  0014C8                     
  9638                           ;A6Lib.c: 74: for(uint8_t j=0; j<3; j++) {
  9639  0014C8  0E00               	movlw	0
  9640  0014CA  6E49               	movwf	A6_BaudRateGet@j^0,c
  9641  0014CC                     l5573:
  9642                           
  9643                           ;A6Lib.c: 75: if(baudRate == A6_BAUDRATES[j]) {
  9644  0014CC  5049               	movf	A6_BaudRateGet@j^0,w,c
  9645  0014CE  0D04               	mullw	4
  9646  0014D0  0E13               	movlw	low _A6_BAUDRATES
  9647  0014D2  24F3               	addwf	243,w,c
  9648  0014D4  6EF6               	movwf	tblptrl,c
  9649  0014D6  0E5F               	movlw	high _A6_BAUDRATES
  9650  0014D8  20F4               	addwfc	244,w,c
  9651  0014DA  6EF7               	movwf	tblptrh,c
  9652  0014DC                     	if	0	;There are less than 3 active tblptr bytes
  9653  0014DC                     	endif
  9654  0014DC  5043               	movf	A6_BaudRateGet@baudRate^0,w,c
  9655  0014DE  0009               	tblrd		*+
  9656  0014E0  18F5               	xorwf	tablat,w,c
  9657  0014E2  E110               	bnz	u5291
  9658  0014E4  5044               	movf	(A6_BaudRateGet@baudRate+1)^0,w,c
  9659  0014E6  0009               	tblrd		*+
  9660  0014E8  18F5               	xorwf	tablat,w,c
  9661  0014EA  E10C               	bnz	u5291
  9662  0014EC  5045               	movf	(A6_BaudRateGet@baudRate+2)^0,w,c
  9663  0014EE  0009               	tblrd		*+
  9664  0014F0  18F5               	xorwf	tablat,w,c
  9665  0014F2  E108               	bnz	u5291
  9666  0014F4  5046               	movf	(A6_BaudRateGet@baudRate+3)^0,w,c
  9667  0014F6  0009               	tblrd		*+
  9668  0014F8  18F5               	xorwf	tablat,w,c
  9669  0014FA  A4D8               	btfss	status,2,c
  9670  0014FC  EF82  F00A         	goto	u5291
  9671  001500  EF84  F00A         	goto	u5290
  9672  001504                     u5291:
  9673  001504  EF8E  F00A         	goto	l5577
  9674  001508                     u5290:
  9675  001508                     
  9676                           ;A6Lib.c: 76: return baudRate;
  9677  001508  C043  F01F         	movff	A6_BaudRateGet@baudRate,?_A6_BaudRateGet
  9678  00150C  C044  F020         	movff	A6_BaudRateGet@baudRate+1,?_A6_BaudRateGet+1
  9679  001510  C045  F021         	movff	A6_BaudRateGet@baudRate+2,?_A6_BaudRateGet+2
  9680  001514  C046  F022         	movff	A6_BaudRateGet@baudRate+3,?_A6_BaudRateGet+3
  9681  001518  EF9F  F00A         	goto	l585
  9682  00151C                     l5577:
  9683  00151C  2A49               	incf	A6_BaudRateGet@j^0,f,c
  9684  00151E  0E02               	movlw	2
  9685  001520  6449               	cpfsgt	A6_BaudRateGet@j^0,c
  9686  001522  EF95  F00A         	goto	u5301
  9687  001526  EF97  F00A         	goto	u5300
  9688  00152A                     u5301:
  9689  00152A  EF66  F00A         	goto	l5573
  9690  00152E                     u5300:
  9691  00152E                     l5581:
  9692                           
  9693                           ;A6Lib.c: 77: };A6Lib.c: 78: };A6Lib.c: 79: };A6Lib.c: 80: };A6Lib.c: 82: return 0;
  9694  00152E  0E00               	movlw	0
  9695  001530  6E1F               	movwf	?_A6_BaudRateGet^0,c
  9696  001532  0E00               	movlw	0
  9697  001534  6E20               	movwf	(?_A6_BaudRateGet+1)^0,c
  9698  001536  0E00               	movlw	0
  9699  001538  6E21               	movwf	(?_A6_BaudRateGet+2)^0,c
  9700  00153A  0E00               	movlw	0
  9701  00153C  6E22               	movwf	(?_A6_BaudRateGet+3)^0,c
  9702  00153E                     l585:
  9703  00153E  0012               	return		;funcret
  9704  001540                     __end_of_A6_BaudRateGet:
  9705                           	opt callstack 0
  9706                           
  9707 ;; *************** function _strtok *****************
  9708 ;; Defined at:
  9709 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strtok.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  s1              2   17[COMRAM] PTR unsigned char 
  9712 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9713 ;;		 -> GSMStatus(41), 
  9714 ;;  s2              2   19[COMRAM] PTR const unsigned char 
  9715 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
  9716 ;;		 -> STR_29(2), STR_28(2), STR_25(2), STR_24(2), 
  9717 ;;		 -> STR_23(2), STR_20(2), STR_19(2), STR_18(2), 
  9718 ;;		 -> STR_17(2), STR_11(2), STR_10(2), 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;		None
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  2   17[COMRAM] PTR unsigned char 
  9723 ;; Registers used:
  9724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9730 ;;      Params:         4       0       0       0       0       0       0       0       0
  9731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9733 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9734 ;;Total ram usage:        4 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; Hardware stack levels required when called:    4
  9737 ;; This function calls:
  9738 ;;		_strcspn
  9739 ;;		_strspn
  9740 ;; This function is called by:
  9741 ;;		_A6_BaudRateGet
  9742 ;;		_A6_NetworkGetRSSI
  9743 ;;		_A6_NetworkGetOperator
  9744 ;;		_A6_NetworkGetStatus
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text46
  9749  00192E                     __ptext46:
  9750                           	opt callstack 0
  9751  00192E                     _strtok:
  9752                           	opt callstack 22
  9753  00192E  5012               	movf	strtok@s1^0,w,c
  9754  001930  1013               	iorwf	(strtok@s1+1)^0,w,c
  9755  001932  A4D8               	btfss	status,2,c
  9756  001934  EF9E  F00C         	goto	u4681
  9757  001938  EFA0  F00C         	goto	u4680
  9758  00193C                     u4681:
  9759  00193C  EFA4  F00C         	goto	l1505
  9760  001940                     u4680:
  9761  001940  C07E  F012         	movff	strtok@sp,strtok@s1
  9762  001944  C07F  F013         	movff	strtok@sp+1,strtok@s1+1
  9763  001948                     l1505:
  9764  001948  5012               	movf	strtok@s1^0,w,c
  9765  00194A  1013               	iorwf	(strtok@s1+1)^0,w,c
  9766  00194C  A4D8               	btfss	status,2,c
  9767  00194E  EFAB  F00C         	goto	u4691
  9768  001952  EFAD  F00C         	goto	u4690
  9769  001956                     u4691:
  9770  001956  EFB3  F00C         	goto	l5129
  9771  00195A                     u4690:
  9772  00195A  0E00               	movlw	0
  9773  00195C  6E12               	movwf	?_strtok^0,c
  9774  00195E  0E00               	movlw	0
  9775  001960  6E13               	movwf	(?_strtok+1)^0,c
  9776  001962  EF07  F00D         	goto	l1507
  9777  001966                     l5129:
  9778  001966  C012  F00B         	movff	strtok@s1,strspn@s1
  9779  00196A  C013  F00C         	movff	strtok@s1+1,strspn@s1+1
  9780  00196E  C014  F00D         	movff	strtok@s2,strspn@s2
  9781  001972  C015  F00E         	movff	strtok@s2+1,strspn@s2+1
  9782  001976  ECE3  F013         	call	_strspn	;wreg free
  9783  00197A  500B               	movf	?_strspn^0,w,c
  9784  00197C  2612               	addwf	strtok@s1^0,f,c
  9785  00197E  500C               	movf	(?_strspn+1)^0,w,c
  9786  001980  2213               	addwfc	(strtok@s1+1)^0,f,c
  9787  001982  C012  FFD9         	movff	strtok@s1,fsr2l
  9788  001986  C013  FFDA         	movff	strtok@s1+1,fsr2h
  9789  00198A  50DF               	movf	indf2,w,c
  9790  00198C  A4D8               	btfss	status,2,c
  9791  00198E  EFCB  F00C         	goto	u4701
  9792  001992  EFCD  F00C         	goto	u4700
  9793  001996                     u4701:
  9794  001996  EFD8  F00C         	goto	l5137
  9795  00199A                     u4700:
  9796  00199A  0E00               	movlw	0
  9797  00199C  0100               	movlb	0	; () banked
  9798  00199E  6F7E               	movwf	strtok@sp& (0+255),b
  9799  0019A0  0E00               	movlw	0
  9800  0019A2  6F7F               	movwf	(strtok@sp+1)& (0+255),b
  9801  0019A4  C07E  F012         	movff	strtok@sp,?_strtok
  9802  0019A8  C07F  F013         	movff	strtok@sp+1,?_strtok+1
  9803  0019AC  EF07  F00D         	goto	l1507
  9804  0019B0                     l5137:
  9805  0019B0  C012  F00B         	movff	strtok@s1,strcspn@s1
  9806  0019B4  C013  F00C         	movff	strtok@s1+1,strcspn@s1+1
  9807  0019B8  C014  F00D         	movff	strtok@s2,strcspn@s2
  9808  0019BC  C015  F00E         	movff	strtok@s2+1,strcspn@s2+1
  9809  0019C0  EC16  F014         	call	_strcspn	;wreg free
  9810  0019C4  500B               	movf	?_strcspn^0,w,c
  9811  0019C6  2412               	addwf	strtok@s1^0,w,c
  9812  0019C8  0100               	movlb	0	; () banked
  9813  0019CA  6F7E               	movwf	strtok@sp& (0+255),b
  9814  0019CC  500C               	movf	(?_strcspn+1)^0,w,c
  9815  0019CE  2013               	addwfc	(strtok@s1+1)^0,w,c
  9816  0019D0  6F7F               	movwf	(strtok@sp+1)& (0+255),b
  9817  0019D2                     
  9818                           ; BSR set to: 0
  9819  0019D2  C07E  FFD9         	movff	strtok@sp,fsr2l
  9820  0019D6  C07F  FFDA         	movff	strtok@sp+1,fsr2h
  9821  0019DA  50DF               	movf	indf2,w,c
  9822  0019DC  B4D8               	btfsc	status,2,c
  9823  0019DE  EFF3  F00C         	goto	u4711
  9824  0019E2  EFF5  F00C         	goto	u4710
  9825  0019E6                     u4711:
  9826  0019E6  EFFF  F00C         	goto	l5145
  9827  0019EA                     u4710:
  9828  0019EA                     
  9829                           ; BSR set to: 0
  9830  0019EA  C07E  FFD9         	movff	strtok@sp,fsr2l
  9831  0019EE  C07F  FFDA         	movff	strtok@sp+1,fsr2h
  9832  0019F2  0E00               	movlw	0
  9833  0019F4  6EDF               	movwf	indf2,c
  9834  0019F6                     
  9835                           ; BSR set to: 0
  9836  0019F6  4B7E               	infsnz	strtok@sp& (0+255),f,b
  9837  0019F8  2B7F               	incf	(strtok@sp+1)& (0+255),f,b
  9838  0019FA  EF03  F00D         	goto	l1510
  9839  0019FE                     l5145:
  9840                           
  9841                           ; BSR set to: 0
  9842  0019FE  0E00               	movlw	0
  9843  001A00  6F7E               	movwf	strtok@sp& (0+255),b
  9844  001A02  0E00               	movlw	0
  9845  001A04  6F7F               	movwf	(strtok@sp+1)& (0+255),b
  9846  001A06                     l1510:
  9847                           
  9848                           ; BSR set to: 0
  9849  001A06  C012  F012         	movff	strtok@s1,?_strtok
  9850  001A0A  C013  F013         	movff	strtok@s1+1,?_strtok+1
  9851  001A0E                     l1507:
  9852  001A0E  0012               	return		;funcret
  9853  001A10                     __end_of_strtok:
  9854                           	opt callstack 0
  9855                           
  9856 ;; *************** function _strspn *****************
  9857 ;; Defined at:
  9858 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strspn.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  9861 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9862 ;;		 -> GSMStatus(41), 
  9863 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  9864 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
  9865 ;;		 -> STR_29(2), STR_28(2), STR_25(2), STR_24(2), 
  9866 ;;		 -> STR_23(2), STR_20(2), STR_19(2), STR_18(2), 
  9867 ;;		 -> STR_17(2), STR_11(2), STR_10(2), 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;  i               2   15[COMRAM] unsigned int 
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  2   10[COMRAM] unsigned int 
  9872 ;; Registers used:
  9873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9879 ;;      Params:         4       0       0       0       0       0       0       0       0
  9880 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9881 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9882 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9883 ;;Total ram usage:        7 bytes
  9884 ;; Hardware stack levels used:    1
  9885 ;; Hardware stack levels required when called:    3
  9886 ;; This function calls:
  9887 ;;		_strchr
  9888 ;; This function is called by:
  9889 ;;		_strtok
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text47
  9894  0027C6                     __ptext47:
  9895                           	opt callstack 0
  9896  0027C6                     _strspn:
  9897                           	opt callstack 22
  9898  0027C6  0E00               	movlw	0
  9899  0027C8  6E11               	movwf	(strspn@i+1)^0,c
  9900  0027CA  0E00               	movlw	0
  9901  0027CC  6E10               	movwf	strspn@i^0,c
  9902  0027CE  EFED  F013         	goto	l5035
  9903  0027D2                     l5033:
  9904  0027D2  4A0B               	infsnz	strspn@s1^0,f,c
  9905  0027D4  2A0C               	incf	(strspn@s1+1)^0,f,c
  9906  0027D6  4A10               	infsnz	strspn@i^0,f,c
  9907  0027D8  2A11               	incf	(strspn@i+1)^0,f,c
  9908  0027DA                     l5035:
  9909  0027DA  C00B  FFD9         	movff	strspn@s1,fsr2l
  9910  0027DE  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  9911  0027E2  50DF               	movf	indf2,w,c
  9912  0027E4  B4D8               	btfsc	status,2,c
  9913  0027E6  EFF7  F013         	goto	u4511
  9914  0027EA  EFF9  F013         	goto	u4510
  9915  0027EE                     u4511:
  9916  0027EE  EF11  F014         	goto	l1544
  9917  0027F2                     u4510:
  9918  0027F2  C00D  F005         	movff	strspn@s2,strchr@ptr
  9919  0027F6  C00E  F006         	movff	strspn@s2+1,strchr@ptr+1
  9920  0027FA  C00B  FFD9         	movff	strspn@s1,fsr2l
  9921  0027FE  C00C  FFDA         	movff	strspn@s1+1,fsr2h
  9922  002802  50DF               	movf	indf2,w,c
  9923  002804  6E0F               	movwf	??_strspn^0,c
  9924  002806  500F               	movf	??_strspn^0,w,c
  9925  002808  6E07               	movwf	strchr@chr^0,c
  9926  00280A  6A08               	clrf	(strchr@chr+1)^0,c
  9927  00280C  ECD3  F011         	call	_strchr	;wreg free
  9928  002810  5005               	movf	?_strchr^0,w,c
  9929  002812  1006               	iorwf	(?_strchr+1)^0,w,c
  9930  002814  A4D8               	btfss	status,2,c
  9931  002816  EF0F  F014         	goto	u4521
  9932  00281A  EF11  F014         	goto	u4520
  9933  00281E                     u4521:
  9934  00281E  EFE9  F013         	goto	l5033
  9935  002822                     u4520:
  9936  002822                     l1544:
  9937  002822  C010  F00B         	movff	strspn@i,?_strspn
  9938  002826  C011  F00C         	movff	strspn@i+1,?_strspn+1
  9939  00282A  0012               	return		;funcret
  9940  00282C                     __end_of_strspn:
  9941                           	opt callstack 0
  9942                           
  9943 ;; *************** function _strcspn *****************
  9944 ;; Defined at:
  9945 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcspn.c"
  9946 ;; Parameters:    Size  Location     Type
  9947 ;;  s1              2   10[COMRAM] PTR const unsigned char 
  9948 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
  9949 ;;		 -> GSMStatus(41), 
  9950 ;;  s2              2   12[COMRAM] PTR const unsigned char 
  9951 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
  9952 ;;		 -> STR_29(2), STR_28(2), STR_25(2), STR_24(2), 
  9953 ;;		 -> STR_23(2), STR_20(2), STR_19(2), STR_18(2), 
  9954 ;;		 -> STR_17(2), STR_11(2), STR_10(2), 
  9955 ;; Auto vars:     Size  Location     Type
  9956 ;;  i               2   15[COMRAM] unsigned int 
  9957 ;; Return value:  Size  Location     Type
  9958 ;;                  2   10[COMRAM] unsigned int 
  9959 ;; Registers used:
  9960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9961 ;; Tracked objects:
  9962 ;;		On entry : 0/0
  9963 ;;		On exit  : 0/0
  9964 ;;		Unchanged: 0/0
  9965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9966 ;;      Params:         4       0       0       0       0       0       0       0       0
  9967 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9968 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9969 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9970 ;;Total ram usage:        7 bytes
  9971 ;; Hardware stack levels used:    1
  9972 ;; Hardware stack levels required when called:    3
  9973 ;; This function calls:
  9974 ;;		_strchr
  9975 ;; This function is called by:
  9976 ;;		_strtok
  9977 ;; This function uses a non-reentrant model
  9978 ;;
  9979                           
  9980                           	psect	text48
  9981  00282C                     __ptext48:
  9982                           	opt callstack 0
  9983  00282C                     _strcspn:
  9984                           	opt callstack 22
  9985  00282C  0E00               	movlw	0
  9986  00282E  6E11               	movwf	(strcspn@i+1)^0,c
  9987  002830  0E00               	movlw	0
  9988  002832  6E10               	movwf	strcspn@i^0,c
  9989  002834  EF20  F014         	goto	l5043
  9990  002838                     l5041:
  9991  002838  4A0B               	infsnz	strcspn@s1^0,f,c
  9992  00283A  2A0C               	incf	(strcspn@s1+1)^0,f,c
  9993  00283C  4A10               	infsnz	strcspn@i^0,f,c
  9994  00283E  2A11               	incf	(strcspn@i+1)^0,f,c
  9995  002840                     l5043:
  9996  002840  C00B  FFD9         	movff	strcspn@s1,fsr2l
  9997  002844  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
  9998  002848  50DF               	movf	indf2,w,c
  9999  00284A  B4D8               	btfsc	status,2,c
 10000  00284C  EF2A  F014         	goto	u4531
 10001  002850  EF2C  F014         	goto	u4530
 10002  002854                     u4531:
 10003  002854  EF44  F014         	goto	l1525
 10004  002858                     u4530:
 10005  002858  C00D  F005         	movff	strcspn@s2,strchr@ptr
 10006  00285C  C00E  F006         	movff	strcspn@s2+1,strchr@ptr+1
 10007  002860  C00B  FFD9         	movff	strcspn@s1,fsr2l
 10008  002864  C00C  FFDA         	movff	strcspn@s1+1,fsr2h
 10009  002868  50DF               	movf	indf2,w,c
 10010  00286A  6E0F               	movwf	??_strcspn^0,c
 10011  00286C  500F               	movf	??_strcspn^0,w,c
 10012  00286E  6E07               	movwf	strchr@chr^0,c
 10013  002870  6A08               	clrf	(strchr@chr+1)^0,c
 10014  002872  ECD3  F011         	call	_strchr	;wreg free
 10015  002876  5005               	movf	?_strchr^0,w,c
 10016  002878  1006               	iorwf	(?_strchr+1)^0,w,c
 10017  00287A  B4D8               	btfsc	status,2,c
 10018  00287C  EF42  F014         	goto	u4541
 10019  002880  EF44  F014         	goto	u4540
 10020  002884                     u4541:
 10021  002884  EF1C  F014         	goto	l5041
 10022  002888                     u4540:
 10023  002888                     l1525:
 10024  002888  C010  F00B         	movff	strcspn@i,?_strcspn
 10025  00288C  C011  F00C         	movff	strcspn@i+1,?_strcspn+1
 10026  002890  0012               	return		;funcret
 10027  002892                     __end_of_strcspn:
 10028                           	opt callstack 0
 10029                           
 10030 ;; *************** function _strstr *****************
 10031 ;; Defined at:
 10032 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strstr.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  s1              2   15[COMRAM] PTR const unsigned char 
 10035 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
 10036 ;;		 -> STR_29(2), STR_28(2), STR_25(2), STR_24(2), 
 10037 ;;		 -> STR_23(2), A6_NetworkGetRSSI@response(32), STR_20(2), STR_19(2), 
 10038 ;;		 -> STR_18(2), STR_17(2), A6_NetworkGetStatus@response(32), STR_11(2), 
 10039 ;;		 -> STR_10(2), A6_BaudRateGet@response(32), NULL(0), GSMStatus(41), 
 10040 ;;  s2              2   17[COMRAM] PTR const unsigned char 
 10041 ;;		 -> STR_27(8), STR_22(7), STR_16(8), STR_9(7), 
 10042 ;; Auto vars:     Size  Location     Type
 10043 ;;		None
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  2   15[COMRAM] PTR unsigned char 
 10046 ;; Registers used:
 10047 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10053 ;;      Params:         4       0       0       0       0       0       0       0       0
 10054 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10055 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10056 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10057 ;;Total ram usage:        4 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; Hardware stack levels required when called:    3
 10060 ;; This function calls:
 10061 ;;		_strchr
 10062 ;;		_strlen
 10063 ;;		_strncmp
 10064 ;; This function is called by:
 10065 ;;		_A6_BaudRateGet
 10066 ;;		_A6_NetworkGetRSSI
 10067 ;;		_A6_NetworkGetOperator
 10068 ;;		_A6_NetworkGetStatus
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071                           
 10072                           	psect	text49
 10073  001EFE                     __ptext49:
 10074                           	opt callstack 0
 10075  001EFE                     _strstr:
 10076                           	opt callstack 23
 10077  001EFE  EFB8  F00F         	goto	l5113
 10078  001F02                     l5105:
 10079  001F02  C010  F009         	movff	strstr@s1,strncmp@s1
 10080  001F06  C011  F00A         	movff	strstr@s1+1,strncmp@s1+1
 10081  001F0A  C012  F00B         	movff	strstr@s2,strncmp@s2
 10082  001F0E  C013  F00C         	movff	strstr@s2+1,strncmp@s2+1
 10083  001F12  C012  F005         	movff	strstr@s2,strlen@s
 10084  001F16  C013  F006         	movff	strstr@s2+1,strlen@s+1
 10085  001F1A  EC22  F016         	call	_strlen	;wreg free
 10086  001F1E  C005  F00D         	movff	?_strlen,strncmp@len
 10087  001F22  C006  F00E         	movff	?_strlen+1,strncmp@len+1
 10088  001F26  ECE4  F00D         	call	_strncmp	;wreg free
 10089  001F2A  5009               	movf	?_strncmp^0,w,c
 10090  001F2C  100A               	iorwf	(?_strncmp+1)^0,w,c
 10091  001F2E  A4D8               	btfss	status,2,c
 10092  001F30  EF9C  F00F         	goto	u4641
 10093  001F34  EF9E  F00F         	goto	u4640
 10094  001F38                     u4641:
 10095  001F38  EFA4  F00F         	goto	l5111
 10096  001F3C                     u4640:
 10097  001F3C  C010  F010         	movff	strstr@s1,?_strstr
 10098  001F40  C011  F011         	movff	strstr@s1+1,?_strstr+1
 10099  001F44  EFDD  F00F         	goto	l1493
 10100  001F48                     l5111:
 10101  001F48  0E01               	movlw	1
 10102  001F4A  2410               	addwf	strstr@s1^0,w,c
 10103  001F4C  6E05               	movwf	strchr@ptr^0,c
 10104  001F4E  0E00               	movlw	0
 10105  001F50  2011               	addwfc	(strstr@s1+1)^0,w,c
 10106  001F52  6E06               	movwf	(strchr@ptr+1)^0,c
 10107  001F54  C012  FFF6         	movff	strstr@s2,tblptrl
 10108  001F58  C013  FFF7         	movff	strstr@s2+1,tblptrh
 10109  001F5C                     	if	0	;tblptru may be non-zero
 10110  001F5C                     	endif
 10111  001F5C                     	if	0	;tblptru may be non-zero
 10112  001F5C                     	endif
 10113  001F5C  0008               	tblrd		*
 10114  001F5E  50F5               	movf	tablat,w,c
 10115  001F60  6E07               	movwf	strchr@chr^0,c
 10116  001F62  6A08               	clrf	(strchr@chr+1)^0,c
 10117  001F64  ECD3  F011         	call	_strchr	;wreg free
 10118  001F68  C005  F010         	movff	?_strchr,strstr@s1
 10119  001F6C  C006  F011         	movff	?_strchr+1,strstr@s1+1
 10120  001F70                     l5113:
 10121  001F70  5010               	movf	strstr@s1^0,w,c
 10122  001F72  1011               	iorwf	(strstr@s1+1)^0,w,c
 10123  001F74  B4D8               	btfsc	status,2,c
 10124  001F76  EFBF  F00F         	goto	u4651
 10125  001F7A  EFC1  F00F         	goto	u4650
 10126  001F7E                     u4651:
 10127  001F7E  EFD9  F00F         	goto	l5117
 10128  001F82                     u4650:
 10129  001F82  C010  FFF6         	movff	strstr@s1,tblptrl
 10130  001F86  C011  FFF7         	movff	strstr@s1+1,tblptrh
 10131  001F8A  6AF8               	clrf	tblptru,c
 10132  001F8C  0E07               	movlw	(high __ramtop+-1)
 10133  001F8E  64F7               	cpfsgt	tblptrh,c
 10134  001F90  D003               	bra	u4667
 10135  001F92  0008               	tblrd		*
 10136  001F94  50F5               	movf	tablat,w,c
 10137  001F96  D005               	bra	u4660
 10138  001F98                     u4667:
 10139  001F98  CFF6 FFE1          	movff	tblptrl,fsr1l
 10140  001F9C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10141  001FA0  50E7               	movf	indf1,w,c
 10142  001FA2                     u4660:
 10143  001FA2  0900               	iorlw	0
 10144  001FA4  A4D8               	btfss	status,2,c
 10145  001FA6  EFD7  F00F         	goto	u4671
 10146  001FAA  EFD9  F00F         	goto	u4670
 10147  001FAE                     u4671:
 10148  001FAE  EF81  F00F         	goto	l5105
 10149  001FB2                     u4670:
 10150  001FB2                     l5117:
 10151  001FB2  0E00               	movlw	0
 10152  001FB4  6E10               	movwf	?_strstr^0,c
 10153  001FB6  0E00               	movlw	0
 10154  001FB8  6E11               	movwf	(?_strstr+1)^0,c
 10155  001FBA                     l1493:
 10156  001FBA  0012               	return		;funcret
 10157  001FBC                     __end_of_strstr:
 10158                           	opt callstack 0
 10159                           
 10160 ;; *************** function _strncmp *****************
 10161 ;; Defined at:
 10162 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strncmp.c"
 10163 ;; Parameters:    Size  Location     Type
 10164 ;;  s1              2    8[COMRAM] PTR const unsigned char 
 10165 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
 10166 ;;		 -> STR_29(2), STR_28(2), STR_25(2), STR_24(2), 
 10167 ;;		 -> STR_23(2), A6_NetworkGetRSSI@response(32), STR_20(2), STR_19(2), 
 10168 ;;		 -> STR_18(2), STR_17(2), A6_NetworkGetStatus@response(32), STR_11(2), 
 10169 ;;		 -> STR_10(2), A6_BaudRateGet@response(32), NULL(0), GSMStatus(41), 
 10170 ;;  s2              2   10[COMRAM] PTR const unsigned char 
 10171 ;;		 -> STR_27(8), STR_22(7), STR_16(8), STR_9(7), 
 10172 ;;  len             2   12[COMRAM] unsigned int 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;		None
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  2    8[COMRAM] int 
 10177 ;; Registers used:
 10178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10184 ;;      Params:         6       0       0       0       0       0       0       0       0
 10185 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10186 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10187 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10188 ;;Total ram usage:        7 bytes
 10189 ;; Hardware stack levels used:    1
 10190 ;; Hardware stack levels required when called:    2
 10191 ;; This function calls:
 10192 ;;		Nothing
 10193 ;; This function is called by:
 10194 ;;		_strstr
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           	psect	text50
 10199  001BC8                     __ptext50:
 10200                           	opt callstack 0
 10201  001BC8                     _strncmp:
 10202                           	opt callstack 23
 10203  001BC8  EF3F  F00E         	goto	l5025
 10204  001BCC                     l5015:
 10205  001BCC  C009  FFF6         	movff	strncmp@s1,tblptrl
 10206  001BD0  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10207  001BD4  6AF8               	clrf	tblptru,c
 10208  001BD6  0E07               	movlw	(high __ramtop+-1)
 10209  001BD8  64F7               	cpfsgt	tblptrh,c
 10210  001BDA  D003               	bra	u4467
 10211  001BDC  0008               	tblrd		*
 10212  001BDE  50F5               	movf	tablat,w,c
 10213  001BE0  D005               	bra	u4460
 10214  001BE2                     u4467:
 10215  001BE2  CFF6 FFE1          	movff	tblptrl,fsr1l
 10216  001BE6  CFF7 FFE2          	movff	tblptrh,fsr1h
 10217  001BEA  50E7               	movf	indf1,w,c
 10218  001BEC                     u4460:
 10219  001BEC  0900               	iorlw	0
 10220  001BEE  B4D8               	btfsc	status,2,c
 10221  001BF0  EFFC  F00D         	goto	u4471
 10222  001BF4  EFFE  F00D         	goto	u4470
 10223  001BF8                     u4471:
 10224  001BF8  EF1D  F00E         	goto	l5019
 10225  001BFC                     u4470:
 10226  001BFC  C00B  FFF6         	movff	strncmp@s2,tblptrl
 10227  001C00  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
 10228  001C04                     	if	0	;tblptru may be non-zero
 10229  001C04                     	endif
 10230  001C04                     	if	0	;tblptru may be non-zero
 10231  001C04                     	endif
 10232  001C04  0008               	tblrd		*
 10233  001C06  CFF5 F00F          	movff	tablat,??_strncmp
 10234  001C0A  C009  FFF6         	movff	strncmp@s1,tblptrl
 10235  001C0E  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10236  001C12  6AF8               	clrf	tblptru,c
 10237  001C14  0E07               	movlw	(high __ramtop+-1)
 10238  001C16  64F7               	cpfsgt	tblptrh,c
 10239  001C18  D003               	bra	u4487
 10240  001C1A  0008               	tblrd		*
 10241  001C1C  50F5               	movf	tablat,w,c
 10242  001C1E  D005               	bra	u4485
 10243  001C20                     u4487:
 10244  001C20  CFF6 FFE1          	movff	tblptrl,fsr1l
 10245  001C24  CFF7 FFE2          	movff	tblptrh,fsr1h
 10246  001C28  50E7               	movf	indf1,w,c
 10247  001C2A                     u4485:
 10248  001C2A  180F               	xorwf	??_strncmp^0,w,c
 10249  001C2C  B4D8               	btfsc	status,2,c
 10250  001C2E  EF1B  F00E         	goto	u4481
 10251  001C32  EF1D  F00E         	goto	u4480
 10252  001C36                     u4481:
 10253  001C36  EF3B  F00E         	goto	l5023
 10254  001C3A                     u4480:
 10255  001C3A                     l5019:
 10256  001C3A  C009  FFF6         	movff	strncmp@s1,tblptrl
 10257  001C3E  C00A  FFF7         	movff	strncmp@s1+1,tblptrh
 10258  001C42  6AF8               	clrf	tblptru,c
 10259  001C44  0E07               	movlw	(high __ramtop+-1)
 10260  001C46  64F7               	cpfsgt	tblptrh,c
 10261  001C48  D003               	bra	u4497
 10262  001C4A  0008               	tblrd		*
 10263  001C4C  50F5               	movf	tablat,w,c
 10264  001C4E  D005               	bra	u4490
 10265  001C50                     u4497:
 10266  001C50  CFF6 FFE1          	movff	tblptrl,fsr1l
 10267  001C54  CFF7 FFE2          	movff	tblptrh,fsr1h
 10268  001C58  50E7               	movf	indf1,w,c
 10269  001C5A                     u4490:
 10270  001C5A  6E0F               	movwf	??_strncmp^0,c
 10271  001C5C  C00B  FFF6         	movff	strncmp@s2,tblptrl
 10272  001C60  C00C  FFF7         	movff	strncmp@s2+1,tblptrh
 10273  001C64                     	if	0	;tblptru may be non-zero
 10274  001C64                     	endif
 10275  001C64                     	if	0	;tblptru may be non-zero
 10276  001C64                     	endif
 10277  001C64  0008               	tblrd		*
 10278  001C66  50F5               	movf	tablat,w,c
 10279  001C68  5C0F               	subwf	??_strncmp^0,w,c
 10280  001C6A  6E09               	movwf	?_strncmp^0,c
 10281  001C6C  6A0A               	clrf	(?_strncmp+1)^0,c
 10282  001C6E  A0D8               	btfss	status,0,c
 10283  001C70  060A               	decf	(?_strncmp+1)^0,f,c
 10284  001C72  EF50  F00E         	goto	l1534
 10285  001C76                     l5023:
 10286  001C76  4A09               	infsnz	strncmp@s1^0,f,c
 10287  001C78  2A0A               	incf	(strncmp@s1+1)^0,f,c
 10288  001C7A  4A0B               	infsnz	strncmp@s2^0,f,c
 10289  001C7C  2A0C               	incf	(strncmp@s2+1)^0,f,c
 10290  001C7E                     l5025:
 10291  001C7E  060D               	decf	strncmp@len^0,f,c
 10292  001C80  A0D8               	btfss	status,0,c
 10293  001C82  060E               	decf	(strncmp@len+1)^0,f,c
 10294  001C84  280D               	incf	strncmp@len^0,w,c
 10295  001C86  E106               	bnz	u4501
 10296  001C88  280E               	incf	(strncmp@len+1)^0,w,c
 10297  001C8A  A4D8               	btfss	status,2,c
 10298  001C8C  EF4A  F00E         	goto	u4501
 10299  001C90  EF4C  F00E         	goto	u4500
 10300  001C94                     u4501:
 10301  001C94  EFE6  F00D         	goto	l5015
 10302  001C98                     u4500:
 10303  001C98  0E00               	movlw	0
 10304  001C9A  6E0A               	movwf	(?_strncmp+1)^0,c
 10305  001C9C  0E00               	movlw	0
 10306  001C9E  6E09               	movwf	?_strncmp^0,c
 10307  001CA0                     l1534:
 10308  001CA0  0012               	return		;funcret
 10309  001CA2                     __end_of_strncmp:
 10310                           	opt callstack 0
 10311                           
 10312 ;; *************** function _strchr *****************
 10313 ;; Defined at:
 10314 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strchr.c"
 10315 ;; Parameters:    Size  Location     Type
 10316 ;;  ptr             2    4[COMRAM] PTR const unsigned char 
 10317 ;;		 -> STR_33(2), STR_32(2), STR_31(2), STR_30(2), 
 10318 ;;		 -> STR_29(2), STR_28(2), STR_25(2), STR_24(2), 
 10319 ;;		 -> STR_23(2), A6_NetworkGetRSSI@response(32), STR_20(2), STR_19(2), 
 10320 ;;		 -> STR_18(2), STR_17(2), A6_NetworkGetStatus@response(32), STR_11(2), 
 10321 ;;		 -> STR_10(2), A6_BaudRateGet@response(32), NULL(0), GSMStatus(41), 
 10322 ;;  chr             2    6[COMRAM] int 
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;		None
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  2    4[COMRAM] PTR unsigned char 
 10327 ;; Registers used:
 10328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10334 ;;      Params:         4       0       0       0       0       0       0       0       0
 10335 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10336 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10337 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10338 ;;Total ram usage:        6 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; Hardware stack levels required when called:    2
 10341 ;; This function calls:
 10342 ;;		Nothing
 10343 ;; This function is called by:
 10344 ;;		_strstr
 10345 ;;		_strcspn
 10346 ;;		_strspn
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           	psect	text51
 10351  0023A6                     __ptext51:
 10352                           	opt callstack 0
 10353  0023A6                     _strchr:
 10354                           	opt callstack 22
 10355  0023A6                     l1513:
 10356  0023A6  C005  FFF6         	movff	strchr@ptr,tblptrl
 10357  0023AA  C006  FFF7         	movff	strchr@ptr+1,tblptrh
 10358  0023AE  6AF8               	clrf	tblptru,c
 10359  0023B0  0E07               	movlw	(high __ramtop+-1)
 10360  0023B2  64F7               	cpfsgt	tblptrh,c
 10361  0023B4  D003               	bra	u4217
 10362  0023B6  0008               	tblrd		*
 10363  0023B8  50F5               	movf	tablat,w,c
 10364  0023BA  D005               	bra	u4210
 10365  0023BC                     u4217:
 10366  0023BC  CFF6 FFE1          	movff	tblptrl,fsr1l
 10367  0023C0  CFF7 FFE2          	movff	tblptrh,fsr1h
 10368  0023C4  50E7               	movf	indf1,w,c
 10369  0023C6                     u4210:
 10370  0023C6  1807               	xorwf	strchr@chr^0,w,c
 10371  0023C8  A4D8               	btfss	status,2,c
 10372  0023CA  EFE9  F011         	goto	u4221
 10373  0023CE  EFEB  F011         	goto	u4220
 10374  0023D2                     u4221:
 10375  0023D2  EFF1  F011         	goto	l4893
 10376  0023D6                     u4220:
 10377  0023D6  C005  F005         	movff	strchr@ptr,?_strchr
 10378  0023DA  C006  F006         	movff	strchr@ptr+1,?_strchr+1
 10379  0023DE  EF13  F012         	goto	l1515
 10380  0023E2                     l4893:
 10381  0023E2  5005               	movf	strchr@ptr^0,w,c
 10382  0023E4  6E09               	movwf	??_strchr^0,c
 10383  0023E6  5006               	movf	(strchr@ptr+1)^0,w,c
 10384  0023E8  6E0A               	movwf	(??_strchr+1)^0,c
 10385  0023EA  4A05               	infsnz	strchr@ptr^0,f,c
 10386  0023EC  2A06               	incf	(strchr@ptr+1)^0,f,c
 10387  0023EE  C009  FFF6         	movff	??_strchr,tblptrl
 10388  0023F2  C00A  FFF7         	movff	??_strchr+1,tblptrh
 10389  0023F6  6AF8               	clrf	tblptru,c
 10390  0023F8  0E07               	movlw	(high __ramtop+-1)
 10391  0023FA  64F7               	cpfsgt	tblptrh,c
 10392  0023FC  D003               	bra	u4237
 10393  0023FE  0008               	tblrd		*
 10394  002400  50F5               	movf	tablat,w,c
 10395  002402  D005               	bra	u4230
 10396  002404                     u4237:
 10397  002404  CFF6 FFE1          	movff	tblptrl,fsr1l
 10398  002408  CFF7 FFE2          	movff	tblptrh,fsr1h
 10399  00240C  50E7               	movf	indf1,w,c
 10400  00240E                     u4230:
 10401  00240E  0900               	iorlw	0
 10402  002410  A4D8               	btfss	status,2,c
 10403  002412  EF0D  F012         	goto	u4241
 10404  002416  EF0F  F012         	goto	u4240
 10405  00241A                     u4241:
 10406  00241A  EFD3  F011         	goto	l1513
 10407  00241E                     u4240:
 10408  00241E  0E00               	movlw	0
 10409  002420  6E05               	movwf	?_strchr^0,c
 10410  002422  0E00               	movlw	0
 10411  002424  6E06               	movwf	(?_strchr+1)^0,c
 10412  002426                     l1515:
 10413  002426  0012               	return		;funcret
 10414  002428                     __end_of_strchr:
 10415                           	opt callstack 0
 10416                           
 10417 ;; *************** function _atol *****************
 10418 ;; Defined at:
 10419 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/atol.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;  s               2   16[COMRAM] PTR const unsigned char 
 10422 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateGet@response(32), NULL(0), 
 10423 ;;		 -> GSMStatus(41), 
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;  a               4   25[COMRAM] long 
 10426 ;;  c               1   29[COMRAM] unsigned char 
 10427 ;;  sign            1   24[COMRAM] unsigned char 
 10428 ;; Return value:  Size  Location     Type
 10429 ;;                  4   16[COMRAM] long 
 10430 ;; Registers used:
 10431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10432 ;; Tracked objects:
 10433 ;;		On entry : 0/0
 10434 ;;		On exit  : 0/0
 10435 ;;		Unchanged: 0/0
 10436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10437 ;;      Params:         4       0       0       0       0       0       0       0       0
 10438 ;;      Locals:         6       0       0       0       0       0       0       0       0
 10439 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10440 ;;      Totals:        14       0       0       0       0       0       0       0       0
 10441 ;;Total ram usage:       14 bytes
 10442 ;; Hardware stack levels used:    1
 10443 ;; Hardware stack levels required when called:    3
 10444 ;; This function calls:
 10445 ;;		___lmul
 10446 ;;		_isdigit
 10447 ;; This function is called by:
 10448 ;;		_A6_BaudRateGet
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           	psect	text52
 10453  0012E2                     __ptext52:
 10454                           	opt callstack 0
 10455  0012E2                     _atol:
 10456                           	opt callstack 24
 10457  0012E2                     l1441:
 10458  0012E2  C011  FFD9         	movff	atol@s,fsr2l
 10459  0012E6  C012  FFDA         	movff	atol@s+1,fsr2h
 10460  0012EA  50DF               	movf	indf2,w,c
 10461  0012EC  6E1E               	movwf	atol@c^0,c
 10462  0012EE  4A11               	infsnz	atol@s^0,f,c
 10463  0012F0  2A12               	incf	(atol@s+1)^0,f,c
 10464  0012F2  0E20               	movlw	32
 10465  0012F4  181E               	xorwf	atol@c^0,w,c
 10466  0012F6  B4D8               	btfsc	status,2,c
 10467  0012F8  EF80  F009         	goto	u5031
 10468  0012FC  EF82  F009         	goto	u5030
 10469  001300                     u5031:
 10470  001300  EF71  F009         	goto	l1441
 10471  001304                     u5030:
 10472  001304  0E09               	movlw	9
 10473  001306  181E               	xorwf	atol@c^0,w,c
 10474  001308  B4D8               	btfsc	status,2,c
 10475  00130A  EF89  F009         	goto	u5041
 10476  00130E  EF8B  F009         	goto	u5040
 10477  001312                     u5041:
 10478  001312  EF71  F009         	goto	l1441
 10479  001316                     u5040:
 10480  001316  0E00               	movlw	0
 10481  001318  6E1A               	movwf	atol@a^0,c
 10482  00131A  0E00               	movlw	0
 10483  00131C  6E1B               	movwf	(atol@a+1)^0,c
 10484  00131E  0E00               	movlw	0
 10485  001320  6E1C               	movwf	(atol@a+2)^0,c
 10486  001322  0E00               	movlw	0
 10487  001324  6E1D               	movwf	(atol@a+3)^0,c
 10488  001326  0E00               	movlw	0
 10489  001328  6E19               	movwf	atol@sign^0,c
 10490  00132A  0E2D               	movlw	45
 10491  00132C  181E               	xorwf	atol@c^0,w,c
 10492  00132E  A4D8               	btfss	status,2,c
 10493  001330  EF9C  F009         	goto	u5051
 10494  001334  EF9E  F009         	goto	u5050
 10495  001338                     u5051:
 10496  001338  EFA9  F009         	goto	l5397
 10497  00133C                     u5050:
 10498  00133C  2A19               	incf	atol@sign^0,f,c
 10499  00133E                     l5393:
 10500  00133E  C011  FFD9         	movff	atol@s,fsr2l
 10501  001342  C012  FFDA         	movff	atol@s+1,fsr2h
 10502  001346  50DF               	movf	indf2,w,c
 10503  001348  6E1E               	movwf	atol@c^0,c
 10504  00134A  4A11               	infsnz	atol@s^0,f,c
 10505  00134C  2A12               	incf	(atol@s+1)^0,f,c
 10506  00134E  EFD8  F009         	goto	l5409
 10507  001352                     l5397:
 10508  001352  0E2B               	movlw	43
 10509  001354  181E               	xorwf	atol@c^0,w,c
 10510  001356  A4D8               	btfss	status,2,c
 10511  001358  EFB0  F009         	goto	u5061
 10512  00135C  EFB2  F009         	goto	u5060
 10513  001360                     u5061:
 10514  001360  EFD8  F009         	goto	l5409
 10515  001364                     u5060:
 10516  001364  EF9F  F009         	goto	l5393
 10517  001368                     l5403:
 10518  001368  C01A  F005         	movff	atol@a,___lmul@multiplier
 10519  00136C  C01B  F006         	movff	atol@a+1,___lmul@multiplier+1
 10520  001370  C01C  F007         	movff	atol@a+2,___lmul@multiplier+2
 10521  001374  C01D  F008         	movff	atol@a+3,___lmul@multiplier+3
 10522  001378  0E0A               	movlw	10
 10523  00137A  6E09               	movwf	___lmul@multiplicand^0,c
 10524  00137C  0E00               	movlw	0
 10525  00137E  6E0A               	movwf	(___lmul@multiplicand+1)^0,c
 10526  001380  0E00               	movlw	0
 10527  001382  6E0B               	movwf	(___lmul@multiplicand+2)^0,c
 10528  001384  0E00               	movlw	0
 10529  001386  6E0C               	movwf	(___lmul@multiplicand+3)^0,c
 10530  001388  ECAE  F013         	call	___lmul	;wreg free
 10531  00138C  C01E  F015         	movff	atol@c,??_atol
 10532  001390  0ED0               	movlw	208
 10533  001392  2615               	addwf	??_atol^0,f,c
 10534  001394  5015               	movf	??_atol^0,w,c
 10535  001396  2405               	addwf	?___lmul^0,w,c
 10536  001398  6E1A               	movwf	atol@a^0,c
 10537  00139A  0E00               	movlw	0
 10538  00139C  2006               	addwfc	(?___lmul+1)^0,w,c
 10539  00139E  6E1B               	movwf	(atol@a+1)^0,c
 10540  0013A0  0E00               	movlw	0
 10541  0013A2  2007               	addwfc	(?___lmul+2)^0,w,c
 10542  0013A4  6E1C               	movwf	(atol@a+2)^0,c
 10543  0013A6  0E00               	movlw	0
 10544  0013A8  2008               	addwfc	(?___lmul+3)^0,w,c
 10545  0013AA  6E1D               	movwf	(atol@a+3)^0,c
 10546  0013AC  EF9F  F009         	goto	l5393
 10547  0013B0                     l5409:
 10548  0013B0  501E               	movf	atol@c^0,w,c
 10549  0013B2  EC9C  F017         	call	_isdigit
 10550  0013B6  B0D8               	btfsc	status,0,c
 10551  0013B8  EFE0  F009         	goto	u5071
 10552  0013BC  EFE2  F009         	goto	u5070
 10553  0013C0                     u5071:
 10554  0013C0  EFB4  F009         	goto	l5403
 10555  0013C4                     u5070:
 10556  0013C4  5019               	movf	atol@sign^0,w,c
 10557  0013C6  B4D8               	btfsc	status,2,c
 10558  0013C8  EFE8  F009         	goto	u5081
 10559  0013CC  EFEA  F009         	goto	u5080
 10560  0013D0                     u5081:
 10561  0013D0  EF05  F00A         	goto	l1449
 10562  0013D4                     u5080:
 10563  0013D4  C01A  F015         	movff	atol@a,??_atol
 10564  0013D8  C01B  F016         	movff	atol@a+1,??_atol+1
 10565  0013DC  C01C  F017         	movff	atol@a+2,??_atol+2
 10566  0013E0  C01D  F018         	movff	atol@a+3,??_atol+3
 10567  0013E4  1E15               	comf	??_atol^0,f,c
 10568  0013E6  1E16               	comf	(??_atol+1)^0,f,c
 10569  0013E8  1E17               	comf	(??_atol+2)^0,f,c
 10570  0013EA  1E18               	comf	(??_atol+3)^0,f,c
 10571  0013EC  2A15               	incf	??_atol^0,f,c
 10572  0013EE  0E00               	movlw	0
 10573  0013F0  2216               	addwfc	(??_atol+1)^0,f,c
 10574  0013F2  2217               	addwfc	(??_atol+2)^0,f,c
 10575  0013F4  2218               	addwfc	(??_atol+3)^0,f,c
 10576  0013F6  C015  F011         	movff	??_atol,?_atol
 10577  0013FA  C016  F012         	movff	??_atol+1,?_atol+1
 10578  0013FE  C017  F013         	movff	??_atol+2,?_atol+2
 10579  001402  C018  F014         	movff	??_atol+3,?_atol+3
 10580  001406  EF0D  F00A         	goto	l1450
 10581  00140A                     l1449:
 10582  00140A  C01A  F011         	movff	atol@a,?_atol
 10583  00140E  C01B  F012         	movff	atol@a+1,?_atol+1
 10584  001412  C01C  F013         	movff	atol@a+2,?_atol+2
 10585  001416  C01D  F014         	movff	atol@a+3,?_atol+3
 10586  00141A                     l1450:
 10587  00141A  0012               	return		;funcret
 10588  00141C                     __end_of_atol:
 10589                           	opt callstack 0
 10590                           
 10591 ;; *************** function _isdigit *****************
 10592 ;; Defined at:
 10593 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/isdigit.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;  c               1    wreg     unsigned char 
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;  c               1    6[COMRAM] unsigned char 
 10598 ;; Return value:  Size  Location     Type
 10599 ;;		None               void
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10607 ;;      Params:         0       0       0       0       0       0       0       0       0
 10608 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10609 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10610 ;;      Totals:         3       0       0       0       0       0       0       0       0
 10611 ;;Total ram usage:        3 bytes
 10612 ;; Hardware stack levels used:    1
 10613 ;; Hardware stack levels required when called:    2
 10614 ;; This function calls:
 10615 ;;		Nothing
 10616 ;; This function is called by:
 10617 ;;		_sprintf
 10618 ;;		_atoi
 10619 ;;		_atol
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           	psect	text53
 10624  002F38                     __ptext53:
 10625                           	opt callstack 0
 10626  002F38                     _isdigit:
 10627                           	opt callstack 23
 10628                           
 10629                           ;incstack = 0
 10630                           ;isdigit@c stored from wreg
 10631  002F38  6E07               	movwf	isdigit@c^0,c
 10632  002F3A  0E00               	movlw	0
 10633  002F3C  6E06               	movwf	_isdigit$1975^0,c
 10634  002F3E  0E3A               	movlw	58
 10635  002F40  6007               	cpfslt	isdigit@c^0,c
 10636  002F42  EFA5  F017         	goto	u4441
 10637  002F46  EFA7  F017         	goto	u4440
 10638  002F4A                     u4441:
 10639  002F4A  EFB1  F017         	goto	l5009
 10640  002F4E                     u4440:
 10641  002F4E  0E2F               	movlw	47
 10642  002F50  6407               	cpfsgt	isdigit@c^0,c
 10643  002F52  EFAD  F017         	goto	u4451
 10644  002F56  EFAF  F017         	goto	u4450
 10645  002F5A                     u4451:
 10646  002F5A  EFB1  F017         	goto	l5009
 10647  002F5E                     u4450:
 10648  002F5E  0E01               	movlw	1
 10649  002F60  6E06               	movwf	_isdigit$1975^0,c
 10650  002F62                     l5009:
 10651  002F62  C006  F005         	movff	_isdigit$1975,??_isdigit
 10652  002F66  3005               	rrcf	??_isdigit^0,w,c
 10653  002F68  0012               	return		;funcret
 10654  002F6A                     __end_of_isdigit:
 10655                           	opt callstack 0
 10656                           
 10657 ;; *************** function ___lmul *****************
 10658 ;; Defined at:
 10659 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/Umul32.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;  multiplier      4    4[COMRAM] unsigned long 
 10662 ;;  multiplicand    4    8[COMRAM] unsigned long 
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;  product         4   12[COMRAM] unsigned long 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  4    4[COMRAM] unsigned long 
 10667 ;; Registers used:
 10668 ;;		wreg, status,2, status,0
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10674 ;;      Params:         8       0       0       0       0       0       0       0       0
 10675 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10676 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10677 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10678 ;;Total ram usage:       12 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:    2
 10681 ;; This function calls:
 10682 ;;		Nothing
 10683 ;; This function is called by:
 10684 ;;		_atol
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688                           	psect	text54
 10689  00275C                     __ptext54:
 10690                           	opt callstack 0
 10691  00275C                     ___lmul:
 10692                           	opt callstack 24
 10693  00275C  0E00               	movlw	0
 10694  00275E  6E0D               	movwf	___lmul@product^0,c
 10695  002760  0E00               	movlw	0
 10696  002762  6E0E               	movwf	(___lmul@product+1)^0,c
 10697  002764  0E00               	movlw	0
 10698  002766  6E0F               	movwf	(___lmul@product+2)^0,c
 10699  002768  0E00               	movlw	0
 10700  00276A  6E10               	movwf	(___lmul@product+3)^0,c
 10701  00276C                     l3793:
 10702  00276C  A005               	btfss	___lmul@multiplier^0,0,c
 10703  00276E  EFBB  F013         	goto	u2851
 10704  002772  EFBD  F013         	goto	u2850
 10705  002776                     u2851:
 10706  002776  EFC5  F013         	goto	l3797
 10707  00277A                     u2850:
 10708  00277A  5009               	movf	___lmul@multiplicand^0,w,c
 10709  00277C  260D               	addwf	___lmul@product^0,f,c
 10710  00277E  500A               	movf	(___lmul@multiplicand+1)^0,w,c
 10711  002780  220E               	addwfc	(___lmul@product+1)^0,f,c
 10712  002782  500B               	movf	(___lmul@multiplicand+2)^0,w,c
 10713  002784  220F               	addwfc	(___lmul@product+2)^0,f,c
 10714  002786  500C               	movf	(___lmul@multiplicand+3)^0,w,c
 10715  002788  2210               	addwfc	(___lmul@product+3)^0,f,c
 10716  00278A                     l3797:
 10717  00278A  90D8               	bcf	status,0,c
 10718  00278C  3609               	rlcf	___lmul@multiplicand^0,f,c
 10719  00278E  360A               	rlcf	(___lmul@multiplicand+1)^0,f,c
 10720  002790  360B               	rlcf	(___lmul@multiplicand+2)^0,f,c
 10721  002792  360C               	rlcf	(___lmul@multiplicand+3)^0,f,c
 10722  002794  90D8               	bcf	status,0,c
 10723  002796  3208               	rrcf	(___lmul@multiplier+3)^0,f,c
 10724  002798  3207               	rrcf	(___lmul@multiplier+2)^0,f,c
 10725  00279A  3206               	rrcf	(___lmul@multiplier+1)^0,f,c
 10726  00279C  3205               	rrcf	___lmul@multiplier^0,f,c
 10727  00279E  5005               	movf	___lmul@multiplier^0,w,c
 10728  0027A0  1006               	iorwf	(___lmul@multiplier+1)^0,w,c
 10729  0027A2  1007               	iorwf	(___lmul@multiplier+2)^0,w,c
 10730  0027A4  1008               	iorwf	(___lmul@multiplier+3)^0,w,c
 10731  0027A6  A4D8               	btfss	status,2,c
 10732  0027A8  EFD8  F013         	goto	u2861
 10733  0027AC  EFDA  F013         	goto	u2860
 10734  0027B0                     u2861:
 10735  0027B0  EFB6  F013         	goto	l3793
 10736  0027B4                     u2860:
 10737  0027B4  C00D  F005         	movff	___lmul@product,?___lmul
 10738  0027B8  C00E  F006         	movff	___lmul@product+1,?___lmul+1
 10739  0027BC  C00F  F007         	movff	___lmul@product+2,?___lmul+2
 10740  0027C0  C010  F008         	movff	___lmul@product+3,?___lmul+3
 10741  0027C4  0012               	return		;funcret
 10742  0027C6                     __end_of___lmul:
 10743                           	opt callstack 0
 10744                           
 10745 ;; *************** function _A6_BaudRateAutoDetect *****************
 10746 ;; Defined at:
 10747 ;;		line 111 in file "A6Lib.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;  i               1   62[COMRAM] unsigned char 
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  4  495[None  ] unsigned long 
 10754 ;; Registers used:
 10755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10761 ;;      Params:         0       0       0       0       0       0       0       0       0
 10762 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10764 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10765 ;;Total ram usage:        1 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    7
 10768 ;; This function calls:
 10769 ;;		_A6_IsAlive
 10770 ;;		_EUSART_BaudRateSet
 10771 ;;		_sleepMS
 10772 ;; This function is called by:
 10773 ;;		_A6_Init
 10774 ;; This function uses a non-reentrant model
 10775 ;;
 10776                           
 10777                           	psect	text55
 10778  00267E                     __ptext55:
 10779                           	opt callstack 0
 10780  00267E                     _A6_BaudRateAutoDetect:
 10781                           	opt callstack 22
 10782  00267E                     
 10783                           ;A6Lib.c: 112: for(uint8_t i=0; i<3; i++) {
 10784  00267E  0E00               	movlw	0
 10785  002680  6E3F               	movwf	A6_BaudRateAutoDetect@i^0,c
 10786  002682                     l5665:
 10787                           
 10788                           ;A6Lib.c: 113: EUSART_BaudRateSet(A6_BAUDRATES[i]);
 10789  002682  503F               	movf	A6_BaudRateAutoDetect@i^0,w,c
 10790  002684  0D04               	mullw	4
 10791  002686  0E13               	movlw	low _A6_BAUDRATES
 10792  002688  24F3               	addwf	243,w,c
 10793  00268A  6EF6               	movwf	tblptrl,c
 10794  00268C  0E5F               	movlw	high _A6_BAUDRATES
 10795  00268E  20F4               	addwfc	244,w,c
 10796  002690  6EF7               	movwf	tblptrh,c
 10797  002692                     	if	0	;There are less than 3 active tblptr bytes
 10798  002692                     	endif
 10799  002692  0009               	tblrd		*+
 10800  002694  CFF5 F012          	movff	tablat,EUSART_BaudRateSet@baudRate
 10801  002698  0009               	tblrd		*+
 10802  00269A  CFF5 F013          	movff	tablat,EUSART_BaudRateSet@baudRate+1
 10803  00269E  0009               	tblrd		*+
 10804  0026A0  CFF5 F014          	movff	tablat,EUSART_BaudRateSet@baudRate+2
 10805  0026A4  000A               	tblrd		*-
 10806  0026A6  CFF5 F015          	movff	tablat,EUSART_BaudRateSet@baudRate+3
 10807  0026AA  EC91  F011         	call	_EUSART_BaudRateSet	;wreg free
 10808  0026AE                     
 10809                           ;A6Lib.c: 114: if(A6_IsAlive() == 1) {
 10810  0026AE  EC85  F015         	call	_A6_IsAlive	;wreg free
 10811  0026B2  06E8               	decf	wreg,f,c
 10812  0026B4  A4D8               	btfss	status,2,c
 10813  0026B6  EF5F  F013         	goto	u5421
 10814  0026BA  EF61  F013         	goto	u5420
 10815  0026BE                     u5421:
 10816  0026BE  EF63  F013         	goto	l5671
 10817  0026C2                     u5420:
 10818  0026C2  EF76  F013         	goto	l597
 10819  0026C6                     l5671:
 10820                           
 10821                           ;A6Lib.c: 116: };A6Lib.c: 117: sleepMS(100);
 10822  0026C6  0E64               	movlw	100
 10823  0026C8  6E05               	movwf	sleepMS@ms^0,c
 10824  0026CA  0E00               	movlw	0
 10825  0026CC  6E06               	movwf	(sleepMS@ms+1)^0,c
 10826  0026CE  0E00               	movlw	0
 10827  0026D0  6E07               	movwf	(sleepMS@ms+2)^0,c
 10828  0026D2  0E00               	movlw	0
 10829  0026D4  6E08               	movwf	(sleepMS@ms+3)^0,c
 10830  0026D6  EC2E  F017         	call	_sleepMS	;wreg free
 10831  0026DA  2A3F               	incf	A6_BaudRateAutoDetect@i^0,f,c
 10832  0026DC  0E02               	movlw	2
 10833  0026DE  643F               	cpfsgt	A6_BaudRateAutoDetect@i^0,c
 10834  0026E0  EF74  F013         	goto	u5431
 10835  0026E4  EF76  F013         	goto	u5430
 10836  0026E8                     u5431:
 10837  0026E8  EF41  F013         	goto	l5665
 10838  0026EC                     u5430:
 10839  0026EC                     l597:
 10840  0026EC  0012               	return		;funcret
 10841  0026EE                     __end_of_A6_BaudRateAutoDetect:
 10842                           	opt callstack 0
 10843                           
 10844 ;; *************** function _sleepMS *****************
 10845 ;; Defined at:
 10846 ;;		line 91 in file "init.c"
 10847 ;; Parameters:    Size  Location     Type
 10848 ;;  ms              4    4[COMRAM] unsigned long 
 10849 ;; Auto vars:     Size  Location     Type
 10850 ;;  t               4    8[COMRAM] unsigned long 
 10851 ;; Return value:  Size  Location     Type
 10852 ;;                  1    wreg      void 
 10853 ;; Registers used:
 10854 ;;		wreg, status,2, status,0
 10855 ;; Tracked objects:
 10856 ;;		On entry : 0/0
 10857 ;;		On exit  : 0/0
 10858 ;;		Unchanged: 0/0
 10859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10860 ;;      Params:         4       0       0       0       0       0       0       0       0
 10861 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10862 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10863 ;;      Totals:         8       0       0       0       0       0       0       0       0
 10864 ;;Total ram usage:        8 bytes
 10865 ;; Hardware stack levels used:    1
 10866 ;; Hardware stack levels required when called:    2
 10867 ;; This function calls:
 10868 ;;		Nothing
 10869 ;; This function is called by:
 10870 ;;		_A6_BaudRateSet
 10871 ;;		_A6_BaudRateAutoDetect
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           	psect	text56
 10876  002E5C                     __ptext56:
 10877                           	opt callstack 0
 10878  002E5C                     _sleepMS:
 10879                           	opt callstack 26
 10880  002E5C                     
 10881                           ;init.c: 92: uint32_t t = MILLISECONDS + ms;
 10882  002E5C  5005               	movf	sleepMS@ms^0,w,c
 10883  002E5E  0100               	movlb	0	; () banked
 10884  002E60  257A               	addwf	_MILLISECONDS& (0+255),w,b
 10885  002E62  6E09               	movwf	sleepMS@t^0,c
 10886  002E64  5006               	movf	(sleepMS@ms+1)^0,w,c
 10887  002E66  217B               	addwfc	(_MILLISECONDS+1)& (0+255),w,b
 10888  002E68  6E0A               	movwf	(sleepMS@t+1)^0,c
 10889  002E6A  5007               	movf	(sleepMS@ms+2)^0,w,c
 10890  002E6C  217C               	addwfc	(_MILLISECONDS+2)& (0+255),w,b
 10891  002E6E  6E0B               	movwf	(sleepMS@t+2)^0,c
 10892  002E70  5008               	movf	(sleepMS@ms+3)^0,w,c
 10893  002E72  217D               	addwfc	(_MILLISECONDS+3)& (0+255),w,b
 10894  002E74  6E0C               	movwf	(sleepMS@t+3)^0,c
 10895  002E76                     l4205:
 10896                           
 10897                           ; BSR set to: 0
 10898  002E76  5009               	movf	sleepMS@t^0,w,c
 10899  002E78  5D7A               	subwf	_MILLISECONDS& (0+255),w,b
 10900  002E7A  500A               	movf	(sleepMS@t+1)^0,w,c
 10901  002E7C  597B               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
 10902  002E7E  500B               	movf	(sleepMS@t+2)^0,w,c
 10903  002E80  597C               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
 10904  002E82  500C               	movf	(sleepMS@t+3)^0,w,c
 10905  002E84  597D               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
 10906  002E86  A0D8               	btfss	status,0,c
 10907  002E88  EF48  F017         	goto	u3441
 10908  002E8C  EF4A  F017         	goto	u3440
 10909  002E90                     u3441:
 10910  002E90  EF3B  F017         	goto	l4205
 10911  002E94                     u3440:
 10912  002E94                     
 10913                           ; BSR set to: 0
 10914  002E94  0012               	return		;funcret
 10915  002E96                     __end_of_sleepMS:
 10916                           	opt callstack 0
 10917                           
 10918 ;; *************** function _EUSART_BaudRateSet *****************
 10919 ;; Defined at:
 10920 ;;		line 41 in file "EUSART.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  baudRate        4   17[COMRAM] const unsigned long 
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;  tmp             4   25[COMRAM] unsigned long 
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  1    wreg      void 
 10927 ;; Registers used:
 10928 ;;		wreg, status,2, status,0, cstack
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10934 ;;      Params:         4       0       0       0       0       0       0       0       0
 10935 ;;      Locals:         4       0       0       0       0       0       0       0       0
 10936 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10937 ;;      Totals:        12       0       0       0       0       0       0       0       0
 10938 ;;Total ram usage:       12 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:    3
 10941 ;; This function calls:
 10942 ;;		___lldiv
 10943 ;; This function is called by:
 10944 ;;		_A6_BaudRateSet
 10945 ;;		_A6_BaudRateAutoDetect
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948                           
 10949                           	psect	text57
 10950  002322                     __ptext57:
 10951                           	opt callstack 0
 10952  002322                     _EUSART_BaudRateSet:
 10953                           	opt callstack 25
 10954  002322                     
 10955                           ;EUSART.c: 42: TXSTAbits.SYNC = 0;
 10956  002322  98AC               	bcf	172,4,c	;volatile
 10957                           
 10958                           ;EUSART.c: 43: TXSTAbits.BRGH = 1;
 10959  002324  84AC               	bsf	172,2,c	;volatile
 10960                           
 10961                           ;EUSART.c: 44: BAUDCONbits.BRG16 = 1;
 10962  002326  86B8               	bsf	184,3,c	;volatile
 10963  002328                     
 10964                           ;EUSART.c: 46: uint32_t tmp = (48000000 / baudRate);
 10965  002328  0E00               	movlw	0
 10966  00232A  6E05               	movwf	___lldiv@dividend^0,c
 10967  00232C  0E6C               	movlw	108
 10968  00232E  6E06               	movwf	(___lldiv@dividend+1)^0,c
 10969  002330  0EDC               	movlw	220
 10970  002332  6E07               	movwf	(___lldiv@dividend+2)^0,c
 10971  002334  0E02               	movlw	2
 10972  002336  6E08               	movwf	(___lldiv@dividend+3)^0,c
 10973  002338  C012  F009         	movff	EUSART_BaudRateSet@baudRate,___lldiv@divisor
 10974  00233C  C013  F00A         	movff	EUSART_BaudRateSet@baudRate+1,___lldiv@divisor+1
 10975  002340  C014  F00B         	movff	EUSART_BaudRateSet@baudRate+2,___lldiv@divisor+2
 10976  002344  C015  F00C         	movff	EUSART_BaudRateSet@baudRate+3,___lldiv@divisor+3
 10977  002348  ECDE  F00F         	call	___lldiv	;wreg free
 10978  00234C  C005  F01A         	movff	?___lldiv,EUSART_BaudRateSet@tmp
 10979  002350  C006  F01B         	movff	?___lldiv+1,EUSART_BaudRateSet@tmp+1
 10980  002354  C007  F01C         	movff	?___lldiv+2,EUSART_BaudRateSet@tmp+2
 10981  002358  C008  F01D         	movff	?___lldiv+3,EUSART_BaudRateSet@tmp+3
 10982  00235C                     
 10983                           ;EUSART.c: 47: tmp = tmp / 4;
 10984  00235C  C01A  F016         	movff	EUSART_BaudRateSet@tmp,??_EUSART_BaudRateSet
 10985  002360  C01B  F017         	movff	EUSART_BaudRateSet@tmp+1,??_EUSART_BaudRateSet+1
 10986  002364  C01C  F018         	movff	EUSART_BaudRateSet@tmp+2,??_EUSART_BaudRateSet+2
 10987  002368  C01D  F019         	movff	EUSART_BaudRateSet@tmp+3,??_EUSART_BaudRateSet+3
 10988  00236C  0E03               	movlw	3
 10989  00236E  EFBE  F011         	goto	u3580
 10990  002372                     u3585:
 10991  002372  90D8               	bcf	status,0,c
 10992  002374  3219               	rrcf	(??_EUSART_BaudRateSet+3)^0,f,c
 10993  002376  3218               	rrcf	(??_EUSART_BaudRateSet+2)^0,f,c
 10994  002378  3217               	rrcf	(??_EUSART_BaudRateSet+1)^0,f,c
 10995  00237A  3216               	rrcf	??_EUSART_BaudRateSet^0,f,c
 10996  00237C                     u3580:
 10997  00237C  2EE8               	decfsz	wreg,f,c
 10998  00237E  EFB9  F011         	goto	u3585
 10999  002382  C016  F01A         	movff	??_EUSART_BaudRateSet,EUSART_BaudRateSet@tmp
 11000  002386  C017  F01B         	movff	??_EUSART_BaudRateSet+1,EUSART_BaudRateSet@tmp+1
 11001  00238A  C018  F01C         	movff	??_EUSART_BaudRateSet+2,EUSART_BaudRateSet@tmp+2
 11002  00238E  C019  F01D         	movff	??_EUSART_BaudRateSet+3,EUSART_BaudRateSet@tmp+3
 11003  002392                     
 11004                           ;EUSART.c: 48: tmp--;
 11005  002392  061A               	decf	EUSART_BaudRateSet@tmp^0,f,c
 11006  002394  0E00               	movlw	0
 11007  002396  5A1B               	subwfb	(EUSART_BaudRateSet@tmp+1)^0,f,c
 11008  002398  5A1C               	subwfb	(EUSART_BaudRateSet@tmp+2)^0,f,c
 11009  00239A  5A1D               	subwfb	(EUSART_BaudRateSet@tmp+3)^0,f,c
 11010  00239C                     
 11011                           ;EUSART.c: 50: SPBRG = (uint8_t) tmp;
 11012  00239C  C01A  FFAF         	movff	EUSART_BaudRateSet@tmp,4015	;volatile
 11013  0023A0                     
 11014                           ;EUSART.c: 51: SPBRGH = (uint8_t) (tmp >> 8);
 11015  0023A0  C01B  FFB0         	movff	EUSART_BaudRateSet@tmp+1,4016	;volatile
 11016  0023A4  0012               	return		;funcret
 11017  0023A6                     __end_of_EUSART_BaudRateSet:
 11018                           	opt callstack 0
 11019                           
 11020 ;; *************** function ___lldiv *****************
 11021 ;; Defined at:
 11022 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/__lldiv.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;  dividend        4    4[COMRAM] unsigned long 
 11025 ;;  divisor         4    8[COMRAM] unsigned long 
 11026 ;; Auto vars:     Size  Location     Type
 11027 ;;  quotient        4   12[COMRAM] unsigned long 
 11028 ;;  counter         1   16[COMRAM] unsigned char 
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  4    4[COMRAM] unsigned long 
 11031 ;; Registers used:
 11032 ;;		wreg, status,2, status,0
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11038 ;;      Params:         8       0       0       0       0       0       0       0       0
 11039 ;;      Locals:         5       0       0       0       0       0       0       0       0
 11040 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11041 ;;      Totals:        13       0       0       0       0       0       0       0       0
 11042 ;;Total ram usage:       13 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; Hardware stack levels required when called:    2
 11045 ;; This function calls:
 11046 ;;		Nothing
 11047 ;; This function is called by:
 11048 ;;		_Ecg_ProcessHeartRate
 11049 ;;		_EUSART_BaudRateSet
 11050 ;;		_sprintf
 11051 ;; This function uses a non-reentrant model
 11052 ;;
 11053                           
 11054                           	psect	text58
 11055  001FBC                     __ptext58:
 11056                           	opt callstack 0
 11057  001FBC                     ___lldiv:
 11058                           	opt callstack 24
 11059  001FBC  0E00               	movlw	0
 11060  001FBE  6E0D               	movwf	___lldiv@quotient^0,c
 11061  001FC0  0E00               	movlw	0
 11062  001FC2  6E0E               	movwf	(___lldiv@quotient+1)^0,c
 11063  001FC4  0E00               	movlw	0
 11064  001FC6  6E0F               	movwf	(___lldiv@quotient+2)^0,c
 11065  001FC8  0E00               	movlw	0
 11066  001FCA  6E10               	movwf	(___lldiv@quotient+3)^0,c
 11067  001FCC  5009               	movf	___lldiv@divisor^0,w,c
 11068  001FCE  100A               	iorwf	(___lldiv@divisor+1)^0,w,c
 11069  001FD0  100B               	iorwf	(___lldiv@divisor+2)^0,w,c
 11070  001FD2  100C               	iorwf	(___lldiv@divisor+3)^0,w,c
 11071  001FD4  B4D8               	btfsc	status,2,c
 11072  001FD6  EFEF  F00F         	goto	u2871
 11073  001FDA  EFF1  F00F         	goto	u2870
 11074  001FDE                     u2871:
 11075  001FDE  EF27  F010         	goto	l785
 11076  001FE2                     u2870:
 11077  001FE2  0E01               	movlw	1
 11078  001FE4  6E11               	movwf	___lldiv@counter^0,c
 11079  001FE6  EFFB  F00F         	goto	l3809
 11080  001FEA                     l3807:
 11081  001FEA  90D8               	bcf	status,0,c
 11082  001FEC  3609               	rlcf	___lldiv@divisor^0,f,c
 11083  001FEE  360A               	rlcf	(___lldiv@divisor+1)^0,f,c
 11084  001FF0  360B               	rlcf	(___lldiv@divisor+2)^0,f,c
 11085  001FF2  360C               	rlcf	(___lldiv@divisor+3)^0,f,c
 11086  001FF4  2A11               	incf	___lldiv@counter^0,f,c
 11087  001FF6                     l3809:
 11088  001FF6  AE0C               	btfss	(___lldiv@divisor+3)^0,7,c
 11089  001FF8  EF00  F010         	goto	u2881
 11090  001FFC  EF02  F010         	goto	u2880
 11091  002000                     u2881:
 11092  002000  EFF5  F00F         	goto	l3807
 11093  002004                     u2880:
 11094  002004                     l3811:
 11095  002004  90D8               	bcf	status,0,c
 11096  002006  360D               	rlcf	___lldiv@quotient^0,f,c
 11097  002008  360E               	rlcf	(___lldiv@quotient+1)^0,f,c
 11098  00200A  360F               	rlcf	(___lldiv@quotient+2)^0,f,c
 11099  00200C  3610               	rlcf	(___lldiv@quotient+3)^0,f,c
 11100  00200E  5009               	movf	___lldiv@divisor^0,w,c
 11101  002010  5C05               	subwf	___lldiv@dividend^0,w,c
 11102  002012  500A               	movf	(___lldiv@divisor+1)^0,w,c
 11103  002014  5806               	subwfb	(___lldiv@dividend+1)^0,w,c
 11104  002016  500B               	movf	(___lldiv@divisor+2)^0,w,c
 11105  002018  5807               	subwfb	(___lldiv@dividend+2)^0,w,c
 11106  00201A  500C               	movf	(___lldiv@divisor+3)^0,w,c
 11107  00201C  5808               	subwfb	(___lldiv@dividend+3)^0,w,c
 11108  00201E  A0D8               	btfss	status,0,c
 11109  002020  EF14  F010         	goto	u2891
 11110  002024  EF16  F010         	goto	u2890
 11111  002028                     u2891:
 11112  002028  EF1F  F010         	goto	l3819
 11113  00202C                     u2890:
 11114  00202C  5009               	movf	___lldiv@divisor^0,w,c
 11115  00202E  5E05               	subwf	___lldiv@dividend^0,f,c
 11116  002030  500A               	movf	(___lldiv@divisor+1)^0,w,c
 11117  002032  5A06               	subwfb	(___lldiv@dividend+1)^0,f,c
 11118  002034  500B               	movf	(___lldiv@divisor+2)^0,w,c
 11119  002036  5A07               	subwfb	(___lldiv@dividend+2)^0,f,c
 11120  002038  500C               	movf	(___lldiv@divisor+3)^0,w,c
 11121  00203A  5A08               	subwfb	(___lldiv@dividend+3)^0,f,c
 11122  00203C  800D               	bsf	___lldiv@quotient^0,0,c
 11123  00203E                     l3819:
 11124  00203E  90D8               	bcf	status,0,c
 11125  002040  320C               	rrcf	(___lldiv@divisor+3)^0,f,c
 11126  002042  320B               	rrcf	(___lldiv@divisor+2)^0,f,c
 11127  002044  320A               	rrcf	(___lldiv@divisor+1)^0,f,c
 11128  002046  3209               	rrcf	___lldiv@divisor^0,f,c
 11129  002048  2E11               	decfsz	___lldiv@counter^0,f,c
 11130  00204A  EF02  F010         	goto	l3811
 11131  00204E                     l785:
 11132  00204E  C00D  F005         	movff	___lldiv@quotient,?___lldiv
 11133  002052  C00E  F006         	movff	___lldiv@quotient+1,?___lldiv+1
 11134  002056  C00F  F007         	movff	___lldiv@quotient+2,?___lldiv+2
 11135  00205A  C010  F008         	movff	___lldiv@quotient+3,?___lldiv+3
 11136  00205E  0012               	return		;funcret
 11137  002060                     __end_of___lldiv:
 11138                           	opt callstack 0
 11139                           
 11140 ;; *************** function _A6_IsAlive *****************
 11141 ;; Defined at:
 11142 ;;		line 54 in file "A6Lib.c"
 11143 ;; Parameters:    Size  Location     Type
 11144 ;;		None
 11145 ;; Auto vars:     Size  Location     Type
 11146 ;;  response       32   30[COMRAM] unsigned char [32]
 11147 ;; Return value:  Size  Location     Type
 11148 ;;                  1    wreg      unsigned char 
 11149 ;; Registers used:
 11150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11151 ;; Tracked objects:
 11152 ;;		On entry : 0/0
 11153 ;;		On exit  : 0/0
 11154 ;;		Unchanged: 0/0
 11155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11156 ;;      Params:         0       0       0       0       0       0       0       0       0
 11157 ;;      Locals:        32       0       0       0       0       0       0       0       0
 11158 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11159 ;;      Totals:        32       0       0       0       0       0       0       0       0
 11160 ;;Total ram usage:       32 bytes
 11161 ;; Hardware stack levels used:    1
 11162 ;; Hardware stack levels required when called:    6
 11163 ;; This function calls:
 11164 ;;		_A6_Command
 11165 ;;		_strcmp
 11166 ;; This function is called by:
 11167 ;;		_A6_BaudRateSet
 11168 ;;		_A6_BaudRateAutoDetect
 11169 ;; This function uses a non-reentrant model
 11170 ;;
 11171                           
 11172                           	psect	text59
 11173  002B0A                     __ptext59:
 11174                           	opt callstack 0
 11175  002B0A                     _A6_IsAlive:
 11176                           	opt callstack 22
 11177  002B0A                     
 11178                           ;A6Lib.c: 55: char response[32];;A6Lib.c: 56: A6_Command("AT\r", 0, response, 32);
 11179  002B0A  0EEE               	movlw	low STR_6
 11180  002B0C  6E18               	movwf	A6_Command@command^0,c
 11181  002B0E  0E5F               	movlw	high STR_6
 11182  002B10  6E19               	movwf	(A6_Command@command+1)^0,c
 11183  002B12  0E00               	movlw	0
 11184  002B14  6E1B               	movwf	(A6_Command@timeout+1)^0,c
 11185  002B16  0E00               	movlw	0
 11186  002B18  6E1A               	movwf	A6_Command@timeout^0,c
 11187  002B1A  0E1F               	movlw	low A6_IsAlive@response
 11188  002B1C  6E1C               	movwf	A6_Command@response^0,c
 11189  002B1E  0E00               	movlw	high A6_IsAlive@response
 11190  002B20  6E1D               	movwf	(A6_Command@response+1)^0,c
 11191  002B22  0E20               	movlw	32
 11192  002B24  6E1E               	movwf	A6_Command@responseLen^0,c
 11193  002B26  EC4E  F011         	call	_A6_Command	;wreg free
 11194  002B2A                     
 11195                           ;A6Lib.c: 57: if(strcmp(response, "OK") == 0) {
 11196  002B2A  0E1F               	movlw	low A6_IsAlive@response
 11197  002B2C  6E05               	movwf	strcmp@s1^0,c
 11198  002B2E  0E00               	movlw	high A6_IsAlive@response
 11199  002B30  6E06               	movwf	(strcmp@s1+1)^0,c
 11200  002B32  0EF6               	movlw	low STR_7
 11201  002B34  6E07               	movwf	strcmp@s2^0,c
 11202  002B36  0E5F               	movlw	high STR_7
 11203  002B38  6E08               	movwf	(strcmp@s2+1)^0,c
 11204  002B3A  ECAD  F014         	call	_strcmp	;wreg free
 11205  002B3E  5005               	movf	?_strcmp^0,w,c
 11206  002B40  1006               	iorwf	(?_strcmp+1)^0,w,c
 11207  002B42  A4D8               	btfss	status,2,c
 11208  002B44  EFA6  F015         	goto	u5261
 11209  002B48  EFA8  F015         	goto	u5260
 11210  002B4C                     u5261:
 11211  002B4C  EFAB  F015         	goto	l5553
 11212  002B50                     u5260:
 11213  002B50                     
 11214                           ;A6Lib.c: 58: return 1;
 11215  002B50  0E01               	movlw	1
 11216  002B52  EFAC  F015         	goto	l577
 11217  002B56                     l5553:
 11218                           
 11219                           ;A6Lib.c: 59: };A6Lib.c: 60: return 0;
 11220  002B56  0E00               	movlw	0
 11221  002B58                     l577:
 11222  002B58  0012               	return		;funcret
 11223  002B5A                     __end_of_A6_IsAlive:
 11224                           	opt callstack 0
 11225                           
 11226 ;; *************** function _strcmp *****************
 11227 ;; Defined at:
 11228 ;;		line 33 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strcmp.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  s1              2    4[COMRAM] PTR const unsigned char 
 11231 ;;		 -> A6_Process_Random_Comms@response(32), A6_BaudRateSet@response(32), A6_IsAlive@response(32), 
 11232 ;;  s2              2    6[COMRAM] PTR const unsigned char 
 11233 ;;		 -> STR_14(3), STR_13(3), STR_7(3), 
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;  r               1   10[COMRAM] char 
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  2    4[COMRAM] int 
 11238 ;; Registers used:
 11239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11245 ;;      Params:         4       0       0       0       0       0       0       0       0
 11246 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11247 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11248 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11249 ;;Total ram usage:        7 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; Hardware stack levels required when called:    2
 11252 ;; This function calls:
 11253 ;;		Nothing
 11254 ;; This function is called by:
 11255 ;;		_A6_IsAlive
 11256 ;;		_A6_BaudRateSet
 11257 ;;		_A6_Process_Random_Comms
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text60
 11262  00295A                     __ptext60:
 11263                           	opt callstack 0
 11264  00295A                     _strcmp:
 11265                           	opt callstack 26
 11266  00295A  EFB3  F014         	goto	l4083
 11267  00295E                     l4081:
 11268  00295E  4A05               	infsnz	strcmp@s1^0,f,c
 11269  002960  2A06               	incf	(strcmp@s1+1)^0,f,c
 11270  002962  4A07               	infsnz	strcmp@s2^0,f,c
 11271  002964  2A08               	incf	(strcmp@s2+1)^0,f,c
 11272  002966                     l4083:
 11273  002966  C007  FFF6         	movff	strcmp@s2,tblptrl
 11274  00296A  C008  FFF7         	movff	strcmp@s2+1,tblptrh
 11275  00296E                     	if	0	;tblptru may be non-zero
 11276  00296E                     	endif
 11277  00296E                     	if	0	;tblptru may be non-zero
 11278  00296E                     	endif
 11279  00296E  0008               	tblrd		*
 11280  002970  CFF5 F009          	movff	tablat,??_strcmp
 11281  002974  C005  FFD9         	movff	strcmp@s1,fsr2l
 11282  002978  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 11283  00297C  50DF               	movf	indf2,w,c
 11284  00297E  6E0A               	movwf	(??_strcmp+1)^0,c
 11285  002980  5009               	movf	??_strcmp^0,w,c
 11286  002982  5C0A               	subwf	(??_strcmp+1)^0,w,c
 11287  002984  6E0B               	movwf	strcmp@r^0,c
 11288  002986  500B               	movf	strcmp@r^0,w,c
 11289  002988  A4D8               	btfss	status,2,c
 11290  00298A  EFC9  F014         	goto	u3251
 11291  00298E  EFCB  F014         	goto	u3250
 11292  002992                     u3251:
 11293  002992  EFD7  F014         	goto	l4087
 11294  002996                     u3250:
 11295  002996  C005  FFD9         	movff	strcmp@s1,fsr2l
 11296  00299A  C006  FFDA         	movff	strcmp@s1+1,fsr2h
 11297  00299E  50DF               	movf	indf2,w,c
 11298  0029A0  A4D8               	btfss	status,2,c
 11299  0029A2  EFD5  F014         	goto	u3261
 11300  0029A6  EFD7  F014         	goto	u3260
 11301  0029AA                     u3261:
 11302  0029AA  EFAF  F014         	goto	l4081
 11303  0029AE                     u3260:
 11304  0029AE                     l4087:
 11305  0029AE  500B               	movf	strcmp@r^0,w,c
 11306  0029B0  6E05               	movwf	?_strcmp^0,c
 11307  0029B2  6A06               	clrf	(?_strcmp+1)^0,c
 11308  0029B4  BE05               	btfsc	?_strcmp^0,7,c
 11309  0029B6  0606               	decf	(?_strcmp+1)^0,f,c
 11310  0029B8  0012               	return		;funcret
 11311  0029BA                     __end_of_strcmp:
 11312                           	opt callstack 0
 11313                           
 11314 ;; *************** function _A6_Command *****************
 11315 ;; Defined at:
 11316 ;;		line 18 in file "A6Lib.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;  command         2   23[COMRAM] PTR const unsigned char 
 11319 ;;		 -> STR_26(10), STR_21(8), STR_15(10), A6_BaudRateSet@request(20), 
 11320 ;;		 -> STR_8(9), STR_6(4), STR_5(13), 
 11321 ;;  timeout         2   25[COMRAM] int 
 11322 ;;  response        2   27[COMRAM] PTR unsigned char 
 11323 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_BaudRateSet@response(32), A6_BaudRateGet@re
      +sponse(32), 
 11324 ;;		 -> A6_IsAlive@response(32), NULL(0), GSMStatus(41), 
 11325 ;;  responseLen     1   29[COMRAM] unsigned char 
 11326 ;; Auto vars:     Size  Location     Type
 11327 ;;		None
 11328 ;; Return value:  Size  Location     Type
 11329 ;;                  1    wreg      void 
 11330 ;; Registers used:
 11331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11332 ;; Tracked objects:
 11333 ;;		On entry : 0/0
 11334 ;;		On exit  : 0/0
 11335 ;;		Unchanged: 0/0
 11336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11337 ;;      Params:         7       0       0       0       0       0       0       0       0
 11338 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11339 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11340 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11341 ;;Total ram usage:        7 bytes
 11342 ;; Hardware stack levels used:    1
 11343 ;; Hardware stack levels required when called:    5
 11344 ;; This function calls:
 11345 ;;		_A6_ReadLine
 11346 ;;		_EUSART_RX_Flush
 11347 ;;		_EUSART_TX_String
 11348 ;;		_strlen
 11349 ;; This function is called by:
 11350 ;;		_A6_Init
 11351 ;;		_A6_IsAlive
 11352 ;;		_A6_BaudRateGet
 11353 ;;		_A6_BaudRateSet
 11354 ;;		_A6_NetworkGetRSSI
 11355 ;;		_A6_NetworkGetOperator
 11356 ;;		_A6_NetworkGetStatus
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360                           	psect	text61
 11361  00229C                     __ptext61:
 11362                           	opt callstack 0
 11363  00229C                     _A6_Command:
 11364                           	opt callstack 21
 11365  00229C                     
 11366                           ;A6Lib.c: 19: A6_LAST_COMMAND_MILLISECONDS += 75;
 11367  00229C  0E4B               	movlw	75
 11368  00229E  0100               	movlb	0	; () banked
 11369  0022A0  2776               	addwf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),f,b
 11370  0022A2  0E00               	movlw	0
 11371  0022A4  2377               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),f,b
 11372  0022A6  2378               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),f,b
 11373  0022A8  2379               	addwfc	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),f,b
 11374  0022AA                     l5091:
 11375                           
 11376                           ; BSR set to: 0
 11377  0022AA  5176               	movf	_A6_LAST_COMMAND_MILLISECONDS& (0+255),w,b
 11378  0022AC  5D7A               	subwf	_MILLISECONDS& (0+255),w,b
 11379  0022AE  5177               	movf	(_A6_LAST_COMMAND_MILLISECONDS+1)& (0+255),w,b
 11380  0022B0  597B               	subwfb	(_MILLISECONDS+1)& (0+255),w,b
 11381  0022B2  5178               	movf	(_A6_LAST_COMMAND_MILLISECONDS+2)& (0+255),w,b
 11382  0022B4  597C               	subwfb	(_MILLISECONDS+2)& (0+255),w,b
 11383  0022B6  5179               	movf	(_A6_LAST_COMMAND_MILLISECONDS+3)& (0+255),w,b
 11384  0022B8  597D               	subwfb	(_MILLISECONDS+3)& (0+255),w,b
 11385  0022BA  A0D8               	btfss	status,0,c
 11386  0022BC  EF62  F011         	goto	u4621
 11387  0022C0  EF64  F011         	goto	u4620
 11388  0022C4                     u4621:
 11389  0022C4  EF55  F011         	goto	l5091
 11390  0022C8                     u4620:
 11391  0022C8                     
 11392                           ; BSR set to: 0
 11393                           ;A6Lib.c: 21: A6_LAST_COMMAND_MILLISECONDS = MILLISECONDS;
 11394  0022C8  C07A  F076         	movff	_MILLISECONDS,_A6_LAST_COMMAND_MILLISECONDS
 11395  0022CC  C07B  F077         	movff	_MILLISECONDS+1,_A6_LAST_COMMAND_MILLISECONDS+1
 11396  0022D0  C07C  F078         	movff	_MILLISECONDS+2,_A6_LAST_COMMAND_MILLISECONDS+2
 11397  0022D4  C07D  F079         	movff	_MILLISECONDS+3,_A6_LAST_COMMAND_MILLISECONDS+3
 11398  0022D8                     
 11399                           ; BSR set to: 0
 11400                           ;A6Lib.c: 23: EUSART_RX_Flush();
 11401  0022D8  EC27  F018         	call	_EUSART_RX_Flush	;wreg free
 11402  0022DC                     
 11403                           ;A6Lib.c: 24: EUSART_TX_String(command, strlen(command));
 11404  0022DC  C018  F009         	movff	A6_Command@command,EUSART_TX_String@str
 11405  0022E0  C019  F00A         	movff	A6_Command@command+1,EUSART_TX_String@str+1
 11406  0022E4  C018  F005         	movff	A6_Command@command,strlen@s
 11407  0022E8  C019  F006         	movff	A6_Command@command+1,strlen@s+1
 11408  0022EC  EC22  F016         	call	_strlen	;wreg free
 11409  0022F0  5005               	movf	?_strlen^0,w,c
 11410  0022F2  6E0B               	movwf	EUSART_TX_String@len^0,c
 11411  0022F4  ECB5  F016         	call	_EUSART_TX_String	;wreg free
 11412  0022F8                     
 11413                           ;A6Lib.c: 25: if(responseLen != 0) {
 11414  0022F8  501E               	movf	A6_Command@responseLen^0,w,c
 11415  0022FA  B4D8               	btfsc	status,2,c
 11416  0022FC  EF82  F011         	goto	u4631
 11417  002300  EF84  F011         	goto	u4630
 11418  002304                     u4631:
 11419  002304  EF90  F011         	goto	l559
 11420  002308                     u4630:
 11421  002308                     
 11422                           ;A6Lib.c: 26: A6_ReadLine(response, responseLen, timeout);
 11423  002308  C01C  F011         	movff	A6_Command@response,A6_ReadLine@line
 11424  00230C  C01D  F012         	movff	A6_Command@response+1,A6_ReadLine@line+1
 11425  002310  C01E  F013         	movff	A6_Command@responseLen,A6_ReadLine@lineLen
 11426  002314  C01A  F014         	movff	A6_Command@timeout,A6_ReadLine@timeout
 11427  002318  C01B  F015         	movff	A6_Command@timeout+1,A6_ReadLine@timeout+1
 11428  00231C  EC51  F00E         	call	_A6_ReadLine	;wreg free
 11429  002320                     l559:
 11430  002320  0012               	return		;funcret
 11431  002322                     __end_of_A6_Command:
 11432                           	opt callstack 0
 11433                           
 11434 ;; *************** function _strlen *****************
 11435 ;; Defined at:
 11436 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/strlen.c"
 11437 ;; Parameters:    Size  Location     Type
 11438 ;;  s               2    4[COMRAM] PTR const unsigned char 
 11439 ;;		 -> STR_27(8), STR_26(10), STR_22(7), STR_21(8), 
 11440 ;;		 -> STR_16(8), STR_15(10), A6_BaudRateSet@request(20), STR_9(7), 
 11441 ;;		 -> STR_8(9), STR_6(4), STR_5(13), GSMStatus.operatorName(32), 
 11442 ;;		 -> GSMStatus(41), 
 11443 ;; Auto vars:     Size  Location     Type
 11444 ;;  cp              2    6[COMRAM] PTR const unsigned char 
 11445 ;;		 -> STR_27(8), STR_26(10), STR_22(7), STR_21(8), 
 11446 ;;		 -> STR_16(8), STR_15(10), A6_BaudRateSet@request(20), STR_9(7), 
 11447 ;;		 -> STR_8(9), STR_6(4), STR_5(13), GSMStatus.operatorName(32), 
 11448 ;;		 -> GSMStatus(41), 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  2    4[COMRAM] unsigned int 
 11451 ;; Registers used:
 11452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11458 ;;      Params:         2       0       0       0       0       0       0       0       0
 11459 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11460 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11461 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11462 ;;Total ram usage:        4 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:    2
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_processGSM
 11469 ;;		_A6_Command
 11470 ;;		_strstr
 11471 ;; This function uses a non-reentrant model
 11472 ;;
 11473                           
 11474                           	psect	text62
 11475  002C44                     __ptext62:
 11476                           	opt callstack 0
 11477  002C44                     _strlen:
 11478                           	opt callstack 26
 11479  002C44  C005  F007         	movff	strlen@s,strlen@cp
 11480  002C48  C006  F008         	movff	strlen@s+1,strlen@cp+1
 11481  002C4C  EF2A  F016         	goto	l4903
 11482  002C50                     l4901:
 11483  002C50  4A07               	infsnz	strlen@cp^0,f,c
 11484  002C52  2A08               	incf	(strlen@cp+1)^0,f,c
 11485  002C54                     l4903:
 11486  002C54  C007  FFF6         	movff	strlen@cp,tblptrl
 11487  002C58  C008  FFF7         	movff	strlen@cp+1,tblptrh
 11488  002C5C  6AF8               	clrf	tblptru,c
 11489  002C5E  0E07               	movlw	(high __ramtop+-1)
 11490  002C60  64F7               	cpfsgt	tblptrh,c
 11491  002C62  D003               	bra	u4257
 11492  002C64  0008               	tblrd		*
 11493  002C66  50F5               	movf	tablat,w,c
 11494  002C68  D005               	bra	u4250
 11495  002C6A                     u4257:
 11496  002C6A  CFF6 FFE1          	movff	tblptrl,fsr1l
 11497  002C6E  CFF7 FFE2          	movff	tblptrh,fsr1h
 11498  002C72  50E7               	movf	indf1,w,c
 11499  002C74                     u4250:
 11500  002C74  0900               	iorlw	0
 11501  002C76  A4D8               	btfss	status,2,c
 11502  002C78  EF40  F016         	goto	u4261
 11503  002C7C  EF42  F016         	goto	u4260
 11504  002C80                     u4261:
 11505  002C80  EF28  F016         	goto	l4901
 11506  002C84                     u4260:
 11507  002C84  5005               	movf	strlen@s^0,w,c
 11508  002C86  5C07               	subwf	strlen@cp^0,w,c
 11509  002C88  6E05               	movwf	?_strlen^0,c
 11510  002C8A  5006               	movf	(strlen@s+1)^0,w,c
 11511  002C8C  5808               	subwfb	(strlen@cp+1)^0,w,c
 11512  002C8E  6E06               	movwf	(?_strlen+1)^0,c
 11513  002C90  0012               	return		;funcret
 11514  002C92                     __end_of_strlen:
 11515                           	opt callstack 0
 11516                           
 11517 ;; *************** function _EUSART_TX_String *****************
 11518 ;; Defined at:
 11519 ;;		line 62 in file "EUSART.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;  str             2    8[COMRAM] PTR const unsigned char 
 11522 ;;		 -> STR_26(10), STR_21(8), STR_15(10), A6_BaudRateSet@request(20), 
 11523 ;;		 -> STR_8(9), STR_6(4), STR_5(13), 
 11524 ;;  len             1   10[COMRAM] unsigned char 
 11525 ;; Auto vars:     Size  Location     Type
 11526 ;;		None
 11527 ;; Return value:  Size  Location     Type
 11528 ;;                  1    wreg      void 
 11529 ;; Registers used:
 11530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11531 ;; Tracked objects:
 11532 ;;		On entry : 0/0
 11533 ;;		On exit  : 0/0
 11534 ;;		Unchanged: 0/0
 11535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11536 ;;      Params:         3       0       0       0       0       0       0       0       0
 11537 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11538 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11539 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11540 ;;Total ram usage:        3 bytes
 11541 ;; Hardware stack levels used:    1
 11542 ;; Hardware stack levels required when called:    3
 11543 ;; This function calls:
 11544 ;;		_EUSART_TX_Char
 11545 ;; This function is called by:
 11546 ;;		_A6_Command
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text63
 11551  002D6A                     __ptext63:
 11552                           	opt callstack 0
 11553  002D6A                     _EUSART_TX_String:
 11554                           	opt callstack 22
 11555  002D6A                     
 11556                           ;EUSART.c: 63: while(len--) {
 11557  002D6A  EFCB  F016         	goto	l4965
 11558  002D6E                     l4961:
 11559                           
 11560                           ;EUSART.c: 64: EUSART_TX_Char(*str++);
 11561  002D6E  C009  FFF6         	movff	EUSART_TX_String@str,tblptrl
 11562  002D72  C00A  FFF7         	movff	EUSART_TX_String@str+1,tblptrh
 11563  002D76  6AF8               	clrf	tblptru,c
 11564  002D78  0E07               	movlw	(high __ramtop+-1)
 11565  002D7A  64F7               	cpfsgt	tblptrh,c
 11566  002D7C  D003               	bra	u4357
 11567  002D7E  0008               	tblrd		*
 11568  002D80  50F5               	movf	tablat,w,c
 11569  002D82  D005               	bra	u4350
 11570  002D84                     u4357:
 11571  002D84  CFF6 FFE1          	movff	tblptrl,fsr1l
 11572  002D88  CFF7 FFE2          	movff	tblptrh,fsr1h
 11573  002D8C  50E7               	movf	indf1,w,c
 11574  002D8E                     u4350:
 11575  002D8E  EC13  F018         	call	_EUSART_TX_Char
 11576  002D92  4A09               	infsnz	EUSART_TX_String@str^0,f,c
 11577  002D94  2A0A               	incf	(EUSART_TX_String@str+1)^0,f,c
 11578  002D96                     l4965:
 11579  002D96  060B               	decf	EUSART_TX_String@len^0,f,c
 11580  002D98  280B               	incf	EUSART_TX_String@len^0,w,c
 11581  002D9A  A4D8               	btfss	status,2,c
 11582  002D9C  EFD2  F016         	goto	u4361
 11583  002DA0  EFD4  F016         	goto	u4360
 11584  002DA4                     u4361:
 11585  002DA4  EFB7  F016         	goto	l4961
 11586  002DA8                     u4360:
 11587  002DA8  0012               	return		;funcret
 11588  002DAA                     __end_of_EUSART_TX_String:
 11589                           	opt callstack 0
 11590                           
 11591 ;; *************** function _EUSART_TX_Char *****************
 11592 ;; Defined at:
 11593 ;;		line 56 in file "EUSART.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;  c               1    wreg     unsigned char 
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;  c               1    4[COMRAM] unsigned char 
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11607 ;;      Params:         0       0       0       0       0       0       0       0       0
 11608 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11610 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11611 ;;Total ram usage:        1 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:    2
 11614 ;; This function calls:
 11615 ;;		Nothing
 11616 ;; This function is called by:
 11617 ;;		_EUSART_TX_String
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text64
 11622  003026                     __ptext64:
 11623                           	opt callstack 0
 11624  003026                     _EUSART_TX_Char:
 11625                           	opt callstack 22
 11626                           
 11627                           ;incstack = 0
 11628                           ;EUSART_TX_Char@c stored from wreg
 11629  003026  6E05               	movwf	EUSART_TX_Char@c^0,c
 11630  003028                     l677:
 11631  003028  A89E               	btfss	3998,4,c	;volatile
 11632  00302A  EF19  F018         	goto	u4201
 11633  00302E  EF1B  F018         	goto	u4200
 11634  003032                     u4201:
 11635  003032  EF14  F018         	goto	l677
 11636  003036                     u4200:
 11637  003036                     
 11638                           ;EUSART.c: 58: TXREG = c;
 11639  003036  C005  FFAD         	movff	EUSART_TX_Char@c,4013	;volatile
 11640  00303A  F000               	nop		;# 
 11641  00303C  0012               	return		;funcret
 11642  00303E                     __end_of_EUSART_TX_Char:
 11643                           	opt callstack 0
 11644                           
 11645 ;; *************** function _EUSART_RX_Flush *****************
 11646 ;; Defined at:
 11647 ;;		line 82 in file "EUSART.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;		None
 11650 ;; Auto vars:     Size  Location     Type
 11651 ;;		None
 11652 ;; Return value:  Size  Location     Type
 11653 ;;                  1    wreg      void 
 11654 ;; Registers used:
 11655 ;;		None
 11656 ;; Tracked objects:
 11657 ;;		On entry : 0/0
 11658 ;;		On exit  : 0/0
 11659 ;;		Unchanged: 0/0
 11660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11661 ;;      Params:         0       0       0       0       0       0       0       0       0
 11662 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11663 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11664 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11665 ;;Total ram usage:        0 bytes
 11666 ;; Hardware stack levels used:    1
 11667 ;; Hardware stack levels required when called:    2
 11668 ;; This function calls:
 11669 ;;		Nothing
 11670 ;; This function is called by:
 11671 ;;		_A6_Command
 11672 ;; This function uses a non-reentrant model
 11673 ;;
 11674                           
 11675                           	psect	text65
 11676  00304E                     __ptext65:
 11677                           	opt callstack 0
 11678  00304E                     _EUSART_RX_Flush:
 11679                           	opt callstack 23
 11680  00304E                     
 11681                           ;EUSART.c: 83: EUSART_RX.iRead = EUSART_RX.iWrite;
 11682  00304E  C101  F100         	movff	_EUSART_RX+1,_EUSART_RX
 11683  003052  0012               	return		;funcret
 11684  003054                     __end_of_EUSART_RX_Flush:
 11685                           	opt callstack 0
 11686                           
 11687 ;; *************** function _A6_ReadLine *****************
 11688 ;; Defined at:
 11689 ;;		line 31 in file "A6Lib.c"
 11690 ;; Parameters:    Size  Location     Type
 11691 ;;  line            2   16[COMRAM] PTR unsigned char 
 11692 ;;		 -> A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@response(32), A6_BaudR
      +ateSet@response(32), 
 11693 ;;		 -> A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), GSMStatus(41), 
 11694 ;;  lineLen         1   18[COMRAM] unsigned char 
 11695 ;;  timeout         2   19[COMRAM] int 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;  c               1   22[COMRAM] unsigned char 
 11698 ;;  iResponse       1   21[COMRAM] unsigned char 
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      unsigned char 
 11701 ;; Registers used:
 11702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11708 ;;      Params:         5       0       0       0       0       0       0       0       0
 11709 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11710 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11711 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11712 ;;Total ram usage:        7 bytes
 11713 ;; Hardware stack levels used:    1
 11714 ;; Hardware stack levels required when called:    4
 11715 ;; This function calls:
 11716 ;;		_EUSART_BufferGetChar
 11717 ;;		_memset
 11718 ;; This function is called by:
 11719 ;;		_A6_Command
 11720 ;;		_A6_Process_Random_Comms
 11721 ;; This function uses a non-reentrant model
 11722 ;;
 11723                           
 11724                           	psect	text66
 11725  001CA2                     __ptext66:
 11726                           	opt callstack 0
 11727  001CA2                     _A6_ReadLine:
 11728                           	opt callstack 21
 11729  001CA2                     
 11730                           ;A6Lib.c: 32: char c;;A6Lib.c: 33: memset(line, 0x00, lineLen);
 11731  001CA2  C011  F005         	movff	A6_ReadLine@line,memset@p1
 11732  001CA6  C012  F006         	movff	A6_ReadLine@line+1,memset@p1+1
 11733  001CAA  0E00               	movlw	0
 11734  001CAC  6E08               	movwf	(memset@c+1)^0,c
 11735  001CAE  0E00               	movlw	0
 11736  001CB0  6E07               	movwf	memset@c^0,c
 11737  001CB2  C013  F009         	movff	A6_ReadLine@lineLen,memset@n
 11738  001CB6  6A0A               	clrf	(memset@n+1)^0,c
 11739  001CB8  EC4B  F017         	call	_memset	;wreg free
 11740  001CBC                     l562:
 11741                           
 11742                           ;A6Lib.c: 37: c = EUSART_BufferGetChar(timeout);
 11743  001CBC  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 11744  001CC0  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 11745  001CC4  EC49  F016         	call	_EUSART_BufferGetChar	;wreg free
 11746  001CC8  6E17               	movwf	A6_ReadLine@c^0,c
 11747  001CCA                     
 11748                           ;A6Lib.c: 38: if(c == (0)) return 0;
 11749  001CCA  5017               	movf	A6_ReadLine@c^0,w,c
 11750  001CCC  A4D8               	btfss	status,2,c
 11751  001CCE  EF6B  F00E         	goto	u4371
 11752  001CD2  EF6D  F00E         	goto	u4370
 11753  001CD6                     u4371:
 11754  001CD6  EF70  F00E         	goto	l4975
 11755  001CDA                     u4370:
 11756  001CDA  0E00               	movlw	0
 11757  001CDC  EFBB  F00E         	goto	l564
 11758  001CE0                     l4975:
 11759                           
 11760                           ;A6Lib.c: 39: if((c != '\r') && (c != '\n')) break;
 11761  001CE0  0E0D               	movlw	13
 11762  001CE2  1817               	xorwf	A6_ReadLine@c^0,w,c
 11763  001CE4  B4D8               	btfsc	status,2,c
 11764  001CE6  EF77  F00E         	goto	u4381
 11765  001CEA  EF79  F00E         	goto	u4380
 11766  001CEE                     u4381:
 11767  001CEE  EF5E  F00E         	goto	l562
 11768  001CF2                     u4380:
 11769  001CF2  0E0A               	movlw	10
 11770  001CF4  1817               	xorwf	A6_ReadLine@c^0,w,c
 11771  001CF6  B4D8               	btfsc	status,2,c
 11772  001CF8  EF80  F00E         	goto	u4391
 11773  001CFC  EF82  F00E         	goto	u4390
 11774  001D00                     u4391:
 11775  001D00  EF5E  F00E         	goto	l562
 11776  001D04                     u4390:
 11777  001D04                     
 11778                           ;A6Lib.c: 40: };A6Lib.c: 43: uint8_t iResponse = 0;
 11779  001D04  0E00               	movlw	0
 11780  001D06  6E16               	movwf	A6_ReadLine@iResponse^0,c
 11781  001D08                     l4983:
 11782                           
 11783                           ;A6Lib.c: 45: if((c == '\r') || (c == (0))) break;
 11784  001D08  0E0D               	movlw	13
 11785  001D0A  1817               	xorwf	A6_ReadLine@c^0,w,c
 11786  001D0C  B4D8               	btfsc	status,2,c
 11787  001D0E  EF8B  F00E         	goto	u4401
 11788  001D12  EF8D  F00E         	goto	u4400
 11789  001D16                     u4401:
 11790  001D16  EFBA  F00E         	goto	l4997
 11791  001D1A                     u4400:
 11792  001D1A  5017               	movf	A6_ReadLine@c^0,w,c
 11793  001D1C  A4D8               	btfss	status,2,c
 11794  001D1E  EF93  F00E         	goto	u4411
 11795  001D22  EF95  F00E         	goto	u4410
 11796  001D26                     u4411:
 11797  001D26  EF97  F00E         	goto	l4987
 11798  001D2A                     u4410:
 11799  001D2A  EFBA  F00E         	goto	l4997
 11800  001D2E                     l4987:
 11801                           
 11802                           ;A6Lib.c: 46: line[iResponse] = c;
 11803  001D2E  5016               	movf	A6_ReadLine@iResponse^0,w,c
 11804  001D30  2411               	addwf	A6_ReadLine@line^0,w,c
 11805  001D32  6ED9               	movwf	fsr2l,c
 11806  001D34  0E00               	movlw	0
 11807  001D36  2012               	addwfc	(A6_ReadLine@line+1)^0,w,c
 11808  001D38  6EDA               	movwf	fsr2h,c
 11809  001D3A  C017  FFDF         	movff	A6_ReadLine@c,indf2
 11810  001D3E                     
 11811                           ;A6Lib.c: 47: iResponse++;
 11812  001D3E  2A16               	incf	A6_ReadLine@iResponse^0,f,c
 11813  001D40                     
 11814                           ;A6Lib.c: 48: if(iResponse == lineLen) break;
 11815  001D40  5013               	movf	A6_ReadLine@lineLen^0,w,c
 11816  001D42  1816               	xorwf	A6_ReadLine@iResponse^0,w,c
 11817  001D44  A4D8               	btfss	status,2,c
 11818  001D46  EFA7  F00E         	goto	u4421
 11819  001D4A  EFA9  F00E         	goto	u4420
 11820  001D4E                     u4421:
 11821  001D4E  EFAB  F00E         	goto	l4995
 11822  001D52                     u4420:
 11823  001D52  EFBA  F00E         	goto	l4997
 11824  001D56                     l4995:
 11825                           
 11826                           ;A6Lib.c: 49: } while(c = EUSART_BufferGetChar(timeout));
 11827  001D56  C014  F00F         	movff	A6_ReadLine@timeout,EUSART_BufferGetChar@timeout
 11828  001D5A  C015  F010         	movff	A6_ReadLine@timeout+1,EUSART_BufferGetChar@timeout+1
 11829  001D5E  EC49  F016         	call	_EUSART_BufferGetChar	;wreg free
 11830  001D62  6E17               	movwf	A6_ReadLine@c^0,c
 11831  001D64  5017               	movf	A6_ReadLine@c^0,w,c
 11832  001D66  A4D8               	btfss	status,2,c
 11833  001D68  EFB8  F00E         	goto	u4431
 11834  001D6C  EFBA  F00E         	goto	u4430
 11835  001D70                     u4431:
 11836  001D70  EF84  F00E         	goto	l4983
 11837  001D74                     u4430:
 11838  001D74                     l4997:
 11839                           
 11840                           ;A6Lib.c: 51: return iResponse;
 11841  001D74  5016               	movf	A6_ReadLine@iResponse^0,w,c
 11842  001D76                     l564:
 11843  001D76  0012               	return		;funcret
 11844  001D78                     __end_of_A6_ReadLine:
 11845                           	opt callstack 0
 11846                           
 11847 ;; *************** function _memset *****************
 11848 ;; Defined at:
 11849 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/memset.c"
 11850 ;; Parameters:    Size  Location     Type
 11851 ;;  p1              2    4[COMRAM] PTR void 
 11852 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 11853 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), 
 11854 ;;		 -> GSMStatus(41), 
 11855 ;;  c               2    6[COMRAM] int 
 11856 ;;  n               2    8[COMRAM] unsigned int 
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;  p               2   10[COMRAM] PTR unsigned char 
 11859 ;;		 -> EUSART_RX(130), A6_NetworkGetRSSI@response(32), A6_NetworkGetStatus@response(32), A6_Process_Random_Comms@respon
      +se(32), 
 11860 ;;		 -> A6_BaudRateSet@response(32), A6_BaudRateGet@response(32), A6_IsAlive@response(32), NULL(0), 
 11861 ;;		 -> GSMStatus(41), 
 11862 ;; Return value:  Size  Location     Type
 11863 ;;                  2    4[COMRAM] PTR void 
 11864 ;; Registers used:
 11865 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11866 ;; Tracked objects:
 11867 ;;		On entry : 0/0
 11868 ;;		On exit  : 0/0
 11869 ;;		Unchanged: 0/0
 11870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11871 ;;      Params:         6       0       0       0       0       0       0       0       0
 11872 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11873 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11874 ;;      Totals:         8       0       0       0       0       0       0       0       0
 11875 ;;Total ram usage:        8 bytes
 11876 ;; Hardware stack levels used:    1
 11877 ;; Hardware stack levels required when called:    2
 11878 ;; This function calls:
 11879 ;;		Nothing
 11880 ;; This function is called by:
 11881 ;;		_A6_ReadLine
 11882 ;;		_EUSART_Init
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text67
 11887  002E96                     __ptext67:
 11888                           	opt callstack 0
 11889  002E96                     _memset:
 11890                           	opt callstack 22
 11891  002E96  C005  F00B         	movff	memset@p1,memset@p
 11892  002E9A  C006  F00C         	movff	memset@p1+1,memset@p+1
 11893  002E9E  EF59  F017         	goto	l4865
 11894  002EA2                     l4861:
 11895  002EA2  C00B  FFD9         	movff	memset@p,fsr2l
 11896  002EA6  C00C  FFDA         	movff	memset@p+1,fsr2h
 11897  002EAA  C007  FFDF         	movff	memset@c,indf2
 11898  002EAE  4A0B               	infsnz	memset@p^0,f,c
 11899  002EB0  2A0C               	incf	(memset@p+1)^0,f,c
 11900  002EB2                     l4865:
 11901  002EB2  0609               	decf	memset@n^0,f,c
 11902  002EB4  A0D8               	btfss	status,0,c
 11903  002EB6  060A               	decf	(memset@n+1)^0,f,c
 11904  002EB8  2809               	incf	memset@n^0,w,c
 11905  002EBA  E106               	bnz	u4171
 11906  002EBC  280A               	incf	(memset@n+1)^0,w,c
 11907  002EBE  A4D8               	btfss	status,2,c
 11908  002EC0  EF64  F017         	goto	u4171
 11909  002EC4  EF66  F017         	goto	u4170
 11910  002EC8                     u4171:
 11911  002EC8  EF51  F017         	goto	l4861
 11912  002ECC                     u4170:
 11913  002ECC  0012               	return		;funcret
 11914  002ECE                     __end_of_memset:
 11915                           	opt callstack 0
 11916                           
 11917 ;; *************** function _EUSART_BufferGetChar *****************
 11918 ;; Defined at:
 11919 ;;		line 95 in file "EUSART.c"
 11920 ;; Parameters:    Size  Location     Type
 11921 ;;  timeout         2   14[COMRAM] int 
 11922 ;; Auto vars:     Size  Location     Type
 11923 ;;		None
 11924 ;; Return value:  Size  Location     Type
 11925 ;;                  1    wreg      unsigned char 
 11926 ;; Registers used:
 11927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11928 ;; Tracked objects:
 11929 ;;		On entry : 0/0
 11930 ;;		On exit  : 0/0
 11931 ;;		Unchanged: 0/0
 11932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11933 ;;      Params:         2       0       0       0       0       0       0       0       0
 11934 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11935 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11936 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11937 ;;Total ram usage:        2 bytes
 11938 ;; Hardware stack levels used:    1
 11939 ;; Hardware stack levels required when called:    3
 11940 ;; This function calls:
 11941 ;;		_EUSART_RX_AvailableData
 11942 ;; This function is called by:
 11943 ;;		_A6_ReadLine
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           	psect	text68
 11948  002C92                     __ptext68:
 11949                           	opt callstack 0
 11950  002C92                     _EUSART_BufferGetChar:
 11951                           	opt callstack 21
 11952  002C92                     
 11953                           ;EUSART.c: 96: if(EUSART_RX_AvailableData(timeout) == 0) return (0);
 11954  002C92  C00F  F005         	movff	EUSART_BufferGetChar@timeout,EUSART_RX_AvailableData@timeout
 11955  002C96  C010  F006         	movff	EUSART_BufferGetChar@timeout+1,EUSART_RX_AvailableData@timeout+1
 11956  002C9A  EC0A  F011         	call	_EUSART_RX_AvailableData	;wreg free
 11957  002C9E  0900               	iorlw	0
 11958  002CA0  A4D8               	btfss	status,2,c
 11959  002CA2  EF55  F016         	goto	u4181
 11960  002CA6  EF57  F016         	goto	u4180
 11961  002CAA                     u4181:
 11962  002CAA  EF5A  F016         	goto	l4873
 11963  002CAE                     u4180:
 11964  002CAE  0E00               	movlw	0
 11965  002CB0  EF6E  F016         	goto	l706
 11966  002CB4                     l4873:
 11967                           
 11968                           ;EUSART.c: 97: EUSART_RX.iRead++;
 11969  002CB4  0101               	movlb	1	; () banked
 11970  002CB6  2B00               	incf	_EUSART_RX& (0+255),f,b
 11971  002CB8                     
 11972                           ; BSR set to: 1
 11973                           ;EUSART.c: 98: if(EUSART_RX.iRead == 128) EUSART_RX.iRead = 0;
 11974  002CB8  0E80               	movlw	128
 11975  002CBA  1900               	xorwf	_EUSART_RX& (0+255),w,b
 11976  002CBC  A4D8               	btfss	status,2,c
 11977  002CBE  EF63  F016         	goto	u4191
 11978  002CC2  EF65  F016         	goto	u4190
 11979  002CC6                     u4191:
 11980  002CC6  EF67  F016         	goto	l4879
 11981  002CCA                     u4190:
 11982  002CCA                     
 11983                           ; BSR set to: 1
 11984  002CCA  0E00               	movlw	0
 11985  002CCC  6F00               	movwf	_EUSART_RX& (0+255),b
 11986  002CCE                     l4879:
 11987                           
 11988                           ; BSR set to: 1
 11989                           ;EUSART.c: 99: return EUSART_RX.buffer[EUSART_RX.iRead];
 11990  002CCE  0E02               	movlw	low (_EUSART_RX+2)
 11991  002CD0  2500               	addwf	_EUSART_RX& (0+255),w,b
 11992  002CD2  6ED9               	movwf	fsr2l,c
 11993  002CD4  6ADA               	clrf	fsr2h,c
 11994  002CD6  0E01               	movlw	high (_EUSART_RX+2)
 11995  002CD8  22DA               	addwfc	fsr2h,f,c
 11996  002CDA  50DF               	movf	indf2,w,c
 11997  002CDC                     l706:
 11998  002CDC  0012               	return		;funcret
 11999  002CDE                     __end_of_EUSART_BufferGetChar:
 12000                           	opt callstack 0
 12001                           
 12002 ;; *************** function _EUSART_RX_AvailableData *****************
 12003 ;; Defined at:
 12004 ;;		line 86 in file "EUSART.c"
 12005 ;; Parameters:    Size  Location     Type
 12006 ;;  timeout         2    4[COMRAM] int 
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;  t               4   10[COMRAM] unsigned long 
 12009 ;; Return value:  Size  Location     Type
 12010 ;;                  1    wreg      unsigned char 
 12011 ;; Registers used:
 12012 ;;		wreg, status,2, status,0
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12018 ;;      Params:         2       0       0       0       0       0       0       0       0
 12019 ;;      Locals:         4       0       0       0       0       0       0       0       0
 12020 ;;      Temps:          4       0       0       0       0       0       0       0       0
 12021 ;;      Totals:        10       0       0       0       0       0       0       0       0
 12022 ;;Total ram usage:       10 bytes
 12023 ;; Hardware stack levels used:    1
 12024 ;; Hardware stack levels required when called:    2
 12025 ;; This function calls:
 12026 ;;		Nothing
 12027 ;; This function is called by:
 12028 ;;		_EUSART_BufferGetChar
 12029 ;;		_A6_Process_Random_Comms
 12030 ;; This function uses a non-reentrant model
 12031 ;;
 12032                           
 12033                           	psect	text69
 12034  002214                     __ptext69:
 12035                           	opt callstack 0
 12036  002214                     _EUSART_RX_AvailableData:
 12037                           	opt callstack 21
 12038  002214                     
 12039                           ;EUSART.c: 87: if(timeout == 0) timeout = 1000;
 12040  002214  5005               	movf	EUSART_RX_AvailableData@timeout^0,w,c
 12041  002216  1006               	iorwf	(EUSART_RX_AvailableData@timeout+1)^0,w,c
 12042  002218  A4D8               	btfss	status,2,c
 12043  00221A  EF11  F011         	goto	u4001
 12044  00221E  EF13  F011         	goto	u4000
 12045  002222                     u4001:
 12046  002222  EF17  F011         	goto	l4755
 12047  002226                     u4000:
 12048  002226  0E03               	movlw	3
 12049  002228  6E06               	movwf	(EUSART_RX_AvailableData@timeout+1)^0,c
 12050  00222A  0EE8               	movlw	232
 12051  00222C  6E05               	movwf	EUSART_RX_AvailableData@timeout^0,c
 12052  00222E                     l4755:
 12053                           
 12054                           ;EUSART.c: 88: uint32_t t = MILLISECONDS + timeout;
 12055  00222E  C005  F007         	movff	EUSART_RX_AvailableData@timeout,??_EUSART_RX_AvailableData
 12056  002232  C006  F008         	movff	EUSART_RX_AvailableData@timeout+1,??_EUSART_RX_AvailableData+1
 12057  002236  0E00               	movlw	0
 12058  002238  BE08               	btfsc	(??_EUSART_RX_AvailableData+1)^0,7,c
 12059  00223A  0EFF               	movlw	255
 12060  00223C  6E09               	movwf	(??_EUSART_RX_AvailableData+2)^0,c
 12061  00223E  6E0A               	movwf	(??_EUSART_RX_AvailableData+3)^0,c
 12062  002240  0100               	movlb	0	; () banked
 12063  002242  517A               	movf	_MILLISECONDS& (0+255),w,b
 12064  002244  2407               	addwf	??_EUSART_RX_AvailableData^0,w,c
 12065  002246  6E0B               	movwf	EUSART_RX_AvailableData@t^0,c
 12066  002248  517B               	movf	(_MILLISECONDS+1)& (0+255),w,b
 12067  00224A  2008               	addwfc	(??_EUSART_RX_AvailableData+1)^0,w,c
 12068  00224C  6E0C               	movwf	(EUSART_RX_AvailableData@t+1)^0,c
 12069  00224E  517C               	movf	(_MILLISECONDS+2)& (0+255),w,b
 12070  002250  2009               	addwfc	(??_EUSART_RX_AvailableData+2)^0,w,c
 12071  002252  6E0D               	movwf	(EUSART_RX_AvailableData@t+2)^0,c
 12072  002254  517D               	movf	(_MILLISECONDS+3)& (0+255),w,b
 12073  002256  200A               	addwfc	(??_EUSART_RX_AvailableData+3)^0,w,c
 12074  002258  6E0E               	movwf	(EUSART_RX_AvailableData@t+3)^0,c
 12075                           
 12076                           ;EUSART.c: 89: while(EUSART_RX.iRead == EUSART_RX.iWrite) {
 12077  00225A  EF42  F011         	goto	l4763
 12078  00225E                     l4757:
 12079                           
 12080                           ; BSR set to: 1
 12081                           ;EUSART.c: 90: if(t < MILLISECONDS) return 0;
 12082  00225E  0100               	movlb	0	; () banked
 12083  002260  517A               	movf	_MILLISECONDS& (0+255),w,b
 12084  002262  5C0B               	subwf	EUSART_RX_AvailableData@t^0,w,c
 12085  002264  517B               	movf	(_MILLISECONDS+1)& (0+255),w,b
 12086  002266  580C               	subwfb	(EUSART_RX_AvailableData@t+1)^0,w,c
 12087  002268  517C               	movf	(_MILLISECONDS+2)& (0+255),w,b
 12088  00226A  580D               	subwfb	(EUSART_RX_AvailableData@t+2)^0,w,c
 12089  00226C  517D               	movf	(_MILLISECONDS+3)& (0+255),w,b
 12090  00226E  580E               	subwfb	(EUSART_RX_AvailableData@t+3)^0,w,c
 12091  002270  B0D8               	btfsc	status,0,c
 12092  002272  EF3D  F011         	goto	u4011
 12093  002276  EF3F  F011         	goto	u4010
 12094  00227A                     u4011:
 12095  00227A  EF42  F011         	goto	l4763
 12096  00227E                     u4010:
 12097  00227E                     
 12098                           ; BSR set to: 0
 12099  00227E  0E00               	movlw	0
 12100  002280  EF4D  F011         	goto	l701
 12101  002284                     l4763:
 12102                           
 12103                           ; BSR set to: 0
 12104  002284  0101               	movlb	1	; () banked
 12105  002286  5100               	movf	_EUSART_RX& (0+255),w,b
 12106  002288  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 12107  00228A  B4D8               	btfsc	status,2,c
 12108  00228C  EF4A  F011         	goto	u4021
 12109  002290  EF4C  F011         	goto	u4020
 12110  002294                     u4021:
 12111  002294  EF2F  F011         	goto	l4757
 12112  002298                     u4020:
 12113  002298                     
 12114                           ; BSR set to: 1
 12115                           ;EUSART.c: 91: };EUSART.c: 92: return 1;
 12116  002298  0E01               	movlw	1
 12117  00229A                     l701:
 12118  00229A  0012               	return		;funcret
 12119  00229C                     __end_of_EUSART_RX_AvailableData:
 12120                           	opt callstack 0
 12121                           
 12122 ;; *************** function _isr *****************
 12123 ;; Defined at:
 12124 ;;		line 100 in file "init.c"
 12125 ;; Parameters:    Size  Location     Type
 12126 ;;		None
 12127 ;; Auto vars:     Size  Location     Type
 12128 ;;		None
 12129 ;; Return value:  Size  Location     Type
 12130 ;;                  1    wreg      void 
 12131 ;; Registers used:
 12132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12133 ;; Tracked objects:
 12134 ;;		On entry : 0/0
 12135 ;;		On exit  : 0/0
 12136 ;;		Unchanged: 0/0
 12137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12138 ;;      Params:         0       0       0       0       0       0       0       0       0
 12139 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12140 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12141 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12142 ;;Total ram usage:        2 bytes
 12143 ;; Hardware stack levels used:    1
 12144 ;; Hardware stack levels required when called:    1
 12145 ;; This function calls:
 12146 ;;		_EUSART_RX_Interrupt
 12147 ;;		_Ecg_Interrupt
 12148 ;; This function is called by:
 12149 ;;		Interrupt level 2
 12150 ;; This function uses a non-reentrant model
 12151 ;;
 12152                           
 12153                           	psect	intcode
 12154  000008                     __pintcode:
 12155                           	opt callstack 0
 12156  000008                     _isr:
 12157                           	opt callstack 19
 12158                           
 12159                           ;incstack = 0
 12160  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12161  00000A  ED77  F013         	call	int_func,f	;refresh shadow registers
 12162                           
 12163                           	psect	intcode_body
 12164  0026EE                     __pintcode_body:
 12165                           	opt callstack 19
 12166  0026EE                     int_func:
 12167                           	opt callstack 19
 12168  0026EE  0006               	pop		; remove dummy address from shadow register refresh
 12169  0026F0  CFD9 F003          	movff	fsr2l,??_isr
 12170  0026F4  CFDA F004          	movff	fsr2h,??_isr+1
 12171  0026F8                     
 12172                           ;init.c: 102: if(TMR3IE && TMR3IF) {
 12173  0026F8  A2A0               	btfss	4000,1,c	;volatile
 12174  0026FA  EF81  F013         	goto	i2u383_41
 12175  0026FE  EF83  F013         	goto	i2u383_40
 12176  002702                     i2u383_41:
 12177  002702  EF98  F013         	goto	i2l4553
 12178  002706                     i2u383_40:
 12179  002706  A2A1               	btfss	4001,1,c	;volatile
 12180  002708  EF88  F013         	goto	i2u384_41
 12181  00270C  EF8A  F013         	goto	i2u384_40
 12182  002710                     i2u384_41:
 12183  002710  EF98  F013         	goto	i2l4553
 12184  002714                     i2u384_40:
 12185  002714                     
 12186                           ;init.c: 103: MILLISECONDS += 5;
 12187  002714  0E05               	movlw	5
 12188  002716  0100               	movlb	0	; () banked
 12189  002718  277A               	addwf	_MILLISECONDS& (0+255),f,b
 12190  00271A  0E00               	movlw	0
 12191  00271C  237B               	addwfc	(_MILLISECONDS+1)& (0+255),f,b
 12192  00271E  237C               	addwfc	(_MILLISECONDS+2)& (0+255),f,b
 12193  002720  237D               	addwfc	(_MILLISECONDS+3)& (0+255),f,b
 12194  002722                     
 12195                           ; BSR set to: 0
 12196                           ;init.c: 104: Ecg_Interrupt();
 12197  002722  ECF4  F017         	call	_Ecg_Interrupt	;wreg free
 12198  002726                     
 12199                           ;init.c: 107: TMR3H = 0x16;
 12200  002726  0E16               	movlw	22
 12201  002728  6EB3               	movwf	179,c	;volatile
 12202  00272A                     
 12203                           ;init.c: 108: TMR3L = 0x00;
 12204  00272A  0E00               	movlw	0
 12205  00272C  6EB2               	movwf	178,c	;volatile
 12206  00272E                     
 12207                           ;init.c: 109: TMR3IF = 0;
 12208  00272E  92A1               	bcf	4001,1,c	;volatile
 12209  002730                     i2l4553:
 12210                           
 12211                           ;init.c: 110: };init.c: 113: if(RCIE && RCIF) {
 12212  002730  AA9D               	btfss	3997,5,c	;volatile
 12213  002732  EF9D  F013         	goto	i2u385_41
 12214  002736  EF9F  F013         	goto	i2u385_40
 12215  00273A                     i2u385_41:
 12216  00273A  EFA8  F013         	goto	i2l155
 12217  00273E                     i2u385_40:
 12218  00273E  AA9E               	btfss	3998,5,c	;volatile
 12219  002740  EFA4  F013         	goto	i2u386_41
 12220  002744  EFA6  F013         	goto	i2u386_40
 12221  002748                     i2u386_41:
 12222  002748  EFA8  F013         	goto	i2l155
 12223  00274C                     i2u386_40:
 12224  00274C                     
 12225                           ;init.c: 114: EUSART_RX_Interrupt();
 12226  00274C  EC7B  F014         	call	_EUSART_RX_Interrupt	;wreg free
 12227  002750                     i2l155:
 12228  002750  C004  FFDA         	movff	??_isr+1,fsr2h
 12229  002754  C003  FFD9         	movff	??_isr,fsr2l
 12230  002758  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12231  00275A  0011               	retfie		f
 12232  00275C                     __end_of_isr:
 12233                           	opt callstack 0
 12234                           
 12235 ;; *************** function _Ecg_Interrupt *****************
 12236 ;; Defined at:
 12237 ;;		line 135 in file "ecg.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;		None
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;		None
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2, status,0
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12251 ;;      Params:         0       0       0       0       0       0       0       0       0
 12252 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12253 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12254 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12255 ;;Total ram usage:        2 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; This function calls:
 12258 ;;		Nothing
 12259 ;; This function is called by:
 12260 ;;		_isr
 12261 ;; This function uses a non-reentrant model
 12262 ;;
 12263                           
 12264                           	psect	text71
 12265  002FE8                     __ptext71:
 12266                           	opt callstack 0
 12267  002FE8                     _Ecg_Interrupt:
 12268                           	opt callstack 19
 12269  002FE8                     
 12270                           ;ecg.c: 136: ECG_FLAGS.msecDelay++;
 12271  002FE8  0E01               	movlw	1
 12272  002FEA  6E01               	movwf	??_Ecg_Interrupt^0,c
 12273  002FEC  0100               	movlb	0	; () banked
 12274  002FEE  5181               	movf	(_ECG_FLAGS+1)& (0+255),w,b
 12275  002FF0  0B07               	andlw	7
 12276  002FF2  6E02               	movwf	(??_Ecg_Interrupt+1)^0,c
 12277  002FF4  5001               	movf	??_Ecg_Interrupt^0,w,c
 12278  002FF6  2602               	addwf	(??_Ecg_Interrupt+1)^0,f,c
 12279  002FF8  5181               	movf	(_ECG_FLAGS+1)& (0+255),w,b
 12280  002FFA  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 12281  002FFC  0BF8               	andlw	-8
 12282  002FFE  1802               	xorwf	(??_Ecg_Interrupt+1)^0,w,c
 12283  003000  6F81               	movwf	(_ECG_FLAGS+1)& (0+255),b
 12284  003002                     
 12285                           ; BSR set to: 0
 12286                           ;ecg.c: 137: ECG_HEARTRATE.msecDelay++;
 12287  003002  2B75               	incf	(_ECG_HEARTRATE+3)& (0+255),f,b
 12288  003004                     
 12289                           ; BSR set to: 0
 12290                           ;ecg.c: 138: ECG_FLAGS.processInterrupt = 1;
 12291  003004  8980               	bsf	_ECG_FLAGS& (0+255),4,b
 12292  003006                     
 12293                           ; BSR set to: 0
 12294  003006  0012               	return		;funcret
 12295  003008                     __end_of_Ecg_Interrupt:
 12296                           	opt callstack 0
 12297                           
 12298 ;; *************** function _EUSART_RX_Interrupt *****************
 12299 ;; Defined at:
 12300 ;;		line 68 in file "EUSART.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;		None
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;  c               1    1[COMRAM] unsigned char 
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      void 
 12307 ;; Registers used:
 12308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12314 ;;      Params:         0       0       0       0       0       0       0       0       0
 12315 ;;      Locals:         1       0       0       0       0       0       0       0       0
 12316 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12317 ;;      Totals:         2       0       0       0       0       0       0       0       0
 12318 ;;Total ram usage:        2 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; This function calls:
 12321 ;;		Nothing
 12322 ;; This function is called by:
 12323 ;;		_isr
 12324 ;; This function uses a non-reentrant model
 12325 ;;
 12326                           
 12327                           	psect	text72
 12328  0028F6                     __ptext72:
 12329                           	opt callstack 0
 12330  0028F6                     _EUSART_RX_Interrupt:
 12331                           	opt callstack 19
 12332  0028F6                     
 12333                           ;EUSART.c: 69: uint8_t c = RCREG;
 12334  0028F6  CFAE F002          	movff	4014,EUSART_RX_Interrupt@c	;volatile
 12335                           
 12336                           ;EUSART.c: 70: if(OERR == 1) {
 12337  0028FA  A2AB               	btfss	4011,1,c	;volatile
 12338  0028FC  EF82  F014         	goto	i2u378_41
 12339  002900  EF84  F014         	goto	i2u378_40
 12340  002904                     i2u378_41:
 12341  002904  EF97  F014         	goto	i2l4505
 12342  002908                     i2u378_40:
 12343  002908                     
 12344                           ;EUSART.c: 71: CREN = 0;
 12345  002908  98AB               	bcf	4011,4,c	;volatile
 12346                           
 12347                           ;EUSART.c: 72: CREN = 1;
 12348  00290A  88AB               	bsf	4011,4,c	;volatile
 12349  00290C                     
 12350                           ;EUSART.c: 73: PORTAbits.RA2 = !PORTAbits.RA2;
 12351  00290C  A480               	btfss	128,2,c	;volatile
 12352  00290E  EF8B  F014         	goto	i2u379_41
 12353  002912  EF8F  F014         	goto	i2u379_40
 12354  002916                     i2u379_41:
 12355  002916  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 12356  002918  2A01               	incf	??_EUSART_RX_Interrupt^0,f,c
 12357  00291A  EF90  F014         	goto	i2u380_48
 12358  00291E                     i2u379_40:
 12359  00291E  6A01               	clrf	??_EUSART_RX_Interrupt^0,c
 12360  002920                     i2u380_48:
 12361  002920  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 12362  002922  4601               	rlncf	??_EUSART_RX_Interrupt^0,f,c
 12363  002924  5080               	movf	128,w,c	;volatile
 12364  002926  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 12365  002928  0BFB               	andlw	-5
 12366  00292A  1801               	xorwf	??_EUSART_RX_Interrupt^0,w,c
 12367  00292C  6E80               	movwf	128,c	;volatile
 12368  00292E                     i2l4505:
 12369                           
 12370                           ;EUSART.c: 74: };EUSART.c: 76: EUSART_RX.iWrite++;
 12371  00292E  0101               	movlb	1	; () banked
 12372  002930  2B01               	incf	(_EUSART_RX+1)& (0+255),f,b
 12373  002932                     
 12374                           ; BSR set to: 1
 12375                           ;EUSART.c: 77: if(EUSART_RX.iWrite == 128) EUSART_RX.iWrite = 0;
 12376  002932  0E80               	movlw	128
 12377  002934  1901               	xorwf	(_EUSART_RX+1)& (0+255),w,b
 12378  002936  A4D8               	btfss	status,2,c
 12379  002938  EFA0  F014         	goto	i2u381_41
 12380  00293C  EFA2  F014         	goto	i2u381_40
 12381  002940                     i2u381_41:
 12382  002940  EFA4  F014         	goto	i2l4511
 12383  002944                     i2u381_40:
 12384  002944                     
 12385                           ; BSR set to: 1
 12386  002944  0E00               	movlw	0
 12387  002946  6F01               	movwf	(_EUSART_RX+1)& (0+255),b
 12388  002948                     i2l4511:
 12389                           
 12390                           ; BSR set to: 1
 12391                           ;EUSART.c: 78: EUSART_RX.buffer[EUSART_RX.iWrite] = c;
 12392  002948  0E02               	movlw	low (_EUSART_RX+2)
 12393  00294A  2501               	addwf	(_EUSART_RX+1)& (0+255),w,b
 12394  00294C  6ED9               	movwf	fsr2l,c
 12395  00294E  6ADA               	clrf	fsr2h,c
 12396  002950  0E01               	movlw	high (_EUSART_RX+2)
 12397  002952  22DA               	addwfc	fsr2h,f,c
 12398  002954  C002  FFDF         	movff	EUSART_RX_Interrupt@c,indf2
 12399  002958                     
 12400                           ; BSR set to: 1
 12401  002958  0012               	return		;funcret
 12402  00295A                     __end_of_EUSART_RX_Interrupt:
 12403                           	opt callstack 0
 12404                           
 12405                           	psect	rparam
 12406  0000                     
 12407                           	psect	temp
 12408  00005A                     btemp:
 12409                           	opt callstack 0
 12410  00005A                     	ds	1
 12411  0000                     int$flags	set	btemp
 12412  0000                     wtemp8	set	btemp+1
 12413  0000                     ttemp5	set	btemp+1
 12414  0000                     ttemp6	set	btemp+4
 12415  0000                     ttemp7	set	btemp+8
 12416                           tosu	equ	0xFFF
 12417                           tosh	equ	0xFFE
 12418                           tosl	equ	0xFFD
 12419                           stkptr	equ	0xFFC
 12420                           pclatu	equ	0xFFB
 12421                           pclath	equ	0xFFA
 12422                           pcl	equ	0xFF9
 12423                           tblptru	equ	0xFF8
 12424                           tblptrh	equ	0xFF7
 12425                           tblptrl	equ	0xFF6
 12426                           tablat	equ	0xFF5
 12427                           prodh	equ	0xFF4
 12428                           prodl	equ	0xFF3
 12429                           indf0	equ	0xFEF
 12430                           postinc0	equ	0xFEE
 12431                           postdec0	equ	0xFED
 12432                           preinc0	equ	0xFEC
 12433                           plusw0	equ	0xFEB
 12434                           fsr0h	equ	0xFEA
 12435                           fsr0l	equ	0xFE9
 12436                           wreg	equ	0xFE8
 12437                           indf1	equ	0xFE7
 12438                           postinc1	equ	0xFE6
 12439                           postdec1	equ	0xFE5
 12440                           preinc1	equ	0xFE4
 12441                           plusw1	equ	0xFE3
 12442                           fsr1h	equ	0xFE2
 12443                           fsr1l	equ	0xFE1
 12444                           bsr	equ	0xFE0
 12445                           indf2	equ	0xFDF
 12446                           postinc2	equ	0xFDE
 12447                           postdec2	equ	0xFDD
 12448                           preinc2	equ	0xFDC
 12449                           plusw2	equ	0xFDB
 12450                           fsr2h	equ	0xFDA
 12451                           fsr2l	equ	0xFD9
 12452                           status	equ	0xFD8


Data Sizes:
    Strings     162
    Constant    1598
    Data        8
    BSS         208
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     84      89
    BANK0           160     56     137
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_27(CODE[8]), STR_22(CODE[7]), STR_16(CODE[8]), STR_9(CODE[7]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), GSMStatus(BANK0[41]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), GSMStatus(BANK0[41]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 41
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), GSMStatus(BANK0[41]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_27(CODE[8]), STR_22(CODE[7]), STR_16(CODE[8]), STR_9(CODE[7]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), GSMStatus(BANK0[41]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_27(CODE[8]), STR_26(CODE[10]), STR_22(CODE[7]), STR_21(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_9(CODE[7]), 
		 -> STR_8(CODE[9]), STR_6(CODE[4]), STR_5(CODE[13]), GSMStatus.operatorName(BANK0[32]), 
		 -> GSMStatus(BANK0[41]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_27(CODE[8]), STR_26(CODE[10]), STR_22(CODE[7]), STR_21(CODE[8]), 
		 -> STR_16(CODE[8]), STR_15(CODE[10]), A6_BaudRateSet@request(BANK0[20]), STR_9(CODE[7]), 
		 -> STR_8(CODE[9]), STR_6(CODE[4]), STR_5(CODE[13]), GSMStatus.operatorName(BANK0[32]), 
		 -> GSMStatus(BANK0[41]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_34(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> NULL(NULL[0]), GSMStatus(BANK0[41]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 41
		 -> GSMStatus(BANK0[41]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 41
		 -> GSMStatus(BANK0[41]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_7(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 32
		 -> A6_Process_Random_Comms@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_IsAlive@response(COMRAM[32]), 

    memset@p1	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    memset@p	PTR unsigned char  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_12(CODE[12]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> A6_BaudRateSet@request(BANK0[20]), Ecg_ProcessHeartRate@heartrateString(BANK0[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EUSART_TX_String@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_26(CODE[10]), STR_21(CODE[8]), STR_15(CODE[10]), A6_BaudRateSet@request(BANK0[20]), 
		 -> STR_8(CODE[9]), STR_6(CODE[4]), STR_5(CODE[13]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 41
		 -> GSMStatus(BANK0[41]), 

    A6_NetworkGetOperator@operatorToken	PTR unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    A6_NetworkGetOperator@operator	PTR unsigned char  size(2) Largest target is 41
		 -> GSMStatus(BANK0[41]), 

    A6_NetworkGetRSSI@RSSIToken	PTR unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    A6_BaudRateGet@baudRateToken	PTR unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 41
		 -> STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[2]), STR_30(CODE[2]), 
		 -> STR_29(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_24(CODE[2]), 
		 -> STR_23(CODE[2]), A6_NetworkGetRSSI@response(COMRAM[32]), STR_20(CODE[2]), STR_19(CODE[2]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), A6_NetworkGetStatus@response(COMRAM[32]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), A6_BaudRateGet@response(COMRAM[32]), NULL(NULL[0]), GSMStatus(BANK0[41]), 

    sp__memset	PTR void  size(2) Largest target is 130
		 -> EUSART_RX(BANK1[130]), A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), 
		 -> A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), 
		 -> GSMStatus(BANK0[41]), 

    A6_ReadLine@line	PTR unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_Process_Random_Comms@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), 
		 -> A6_BaudRateGet@response(COMRAM[32]), A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), GSMStatus(BANK0[41]), 

    A6_Command@response	PTR unsigned char  size(2) Largest target is 41
		 -> A6_NetworkGetRSSI@response(COMRAM[32]), A6_NetworkGetStatus@response(COMRAM[32]), A6_BaudRateSet@response(BANK0[32]), A6_BaudRateGet@response(COMRAM[32]), 
		 -> A6_IsAlive@response(COMRAM[32]), NULL(NULL[0]), GSMStatus(BANK0[41]), 

    A6_Command@command	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_26(CODE[10]), STR_21(CODE[8]), STR_15(CODE[10]), A6_BaudRateSet@request(BANK0[20]), 
		 -> STR_8(CODE[9]), STR_6(CODE[4]), STR_5(CODE[13]), 

    TFT_DrawBitmap@bitmap	PTR const unsigned char  size(2) Largest target is 62
		 -> ECG_ICON_HEART(CODE[62]), 

    TFT_DrawString@str	PTR const unsigned char  size(2) Largest target is 41
		 -> A6_Process_Random_Comms@response(COMRAM[32]), STR_4(CODE[28]), STR_3(CODE[11]), Ecg_ProcessHeartRate@heartrateString(BANK0[5]), 
		 -> STR_1(CODE[14]), GSMStatus.operatorName(BANK0[32]), GSMStatus(BANK0[41]), 


Critical Paths under _main in COMRAM

    _loop->_processGSM
    _A6_NetworkGetRSSILevel->_A6_NetworkGetRSSI
    _A6_NetworkGetRSSI->_A6_Command
    _atoi->___wmul
    _A6_NetworkGetOperator->_A6_Command
    _Ecg_ProcessEcg->_Ecg_Background_Leads_Ok
    _Ecg_ProcessHeartbeat->_TFT_DrawFillRect
    _TFT_DrawBitmap->_TFT_DrawPixel
    _Ecg_Draw->_TFT_DrawLine
    _TFT_Init->_TFT_OrientationSet
    _TFT_OrientationSet->_TFT_FullScreen
    _Ecg_Init->_Ecg_Background_Leads_Ok
    _TFT_DrawString->_TFT_DrawChar
    _TFT_DrawChar->_TFT_DrawLine
    _TFT_DrawLine->_TFT_DrawPixel
    _TFT_DrawPixel->_TFT_WriteRegister
    _TFT_DrawFillRect->_TFT_FullScreen
    _TFT_FullScreen->_TFT_Flood
    _TFT_SetAddrWindow->_TFT_WriteRegister
    _TFT_Flood->___wmul
    _EUSART_Init->_memset
    _A6_Init->_A6_BaudRateSet
    _A6_BaudRateSet->_A6_BaudRateGet
    _sprintf->___llmod
    ___wmul->_strlen
    ___llmod->___lldiv
    _A6_BaudRateGet->_A6_Command
    _A6_BaudRateGet->_atol
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strncmp
    _strncmp->_strlen
    _atol->___lmul
    _A6_BaudRateAutoDetect->_A6_IsAlive
    _EUSART_BaudRateSet->___lldiv
    _A6_IsAlive->_A6_Command
    _A6_Command->_A6_ReadLine
    _EUSART_TX_String->_strlen
    _A6_ReadLine->_EUSART_BufferGetChar
    _EUSART_BufferGetChar->_EUSART_RX_AvailableData

Critical Paths under _isr in COMRAM

    _isr->_EUSART_RX_Interrupt
    _isr->_Ecg_Interrupt

Critical Paths under _main in BANK0

    _processGSM->_TFT_DrawString
    _Ecg_Process->_Ecg_ProcessHeartRate
    _Ecg_ProcessHeartRate->_TFT_DrawString
    _Ecg_Background_Leads_Ok->_TFT_DrawString
    _Ecg_Background_Leads_Failure->_TFT_DrawString
    _A6_Init->_A6_BaudRateSet

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  667590
                            _A6_Init
                        _EUSART_Init
                           _Ecg_Init
                           _TFT_Init
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0  443690
                        _Ecg_Process
                         _processGSM
 ---------------------------------------------------------------------------------
 (2) _processGSM                                           8     8      0  135450
                                             76 COMRAM     8     8      0
              _A6_NetworkGetOperator
             _A6_NetworkGetRSSILevel
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                     _TFT_DrawString
                       _TFT_GetWidth
                             ___wmul
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _A6_NetworkGetRSSILevel                               1     1      0   15730
                                             64 COMRAM     1     1      0
                  _A6_NetworkGetRSSI
 ---------------------------------------------------------------------------------
 (4) _A6_NetworkGetRSSI                                   34    34      0   15572
                                             30 COMRAM    34    34      0
                         _A6_Command
                               _atoi
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _atoi                                                 7     5      2    2285
                                             14 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _A6_NetworkGetOperator                                6     3      3   13948
                                             30 COMRAM     6     3      3
                         _A6_Command
                             _strcpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     2      4     469
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Ecg_Process                                          0     0      0  308240
                     _Ecg_ProcessEcg
               _Ecg_ProcessHeartRate
               _Ecg_ProcessInterrupt
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessInterrupt                                 1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessHeartRate                                29    29      0   64519
                                             11 BANK0     29    29      0
                     _TFT_DrawString
                            ___lldiv
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _Ecg_ProcessEcg                                       0     0      0  243721
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
                           _Ecg_Draw
               _Ecg_ProcessHeartbeat
 ---------------------------------------------------------------------------------
 (4) _Ecg_ProcessHeartbeat                                11    11      0   41697
                                             45 COMRAM    11    11      0
                     _TFT_DrawBitmap
                   _TFT_DrawFillRect
                                _abs
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawBitmap                                      17     9      8    7997
                                             22 COMRAM    17     9      8
                      _TFT_DrawPixel
 ---------------------------------------------------------------------------------
 (4) _Ecg_Draw                                             4     4      0   44775
                                             53 COMRAM     4     4      0
                           _Ecg_Read
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                      _TFT_GetHeight
                       _TFT_GetWidth
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _Ecg_Read                                             6     4      2      70
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0       0
                                              4 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TFT_Init                                            13    11      2   20049
                                             34 COMRAM    13    11      2
                 _TFT_OrientationSet
                          _TFT_Reset
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (2) _TFT_Reset                                            1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TFT_OrientationSet                                   3     1      2   14182
                                             31 COMRAM     3     1      2
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (1) _Ecg_Init                                             0     0      0  157249
       _Ecg_Background_Leads_Failure
            _Ecg_Background_Leads_Ok
                     _Ecg_CheckLeads
 ---------------------------------------------------------------------------------
 (4) _Ecg_CheckLeads                                       4     2      2      47
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _Ecg_Background_Leads_Ok                              2     2      0   84275
                                             76 COMRAM     2     2      0
                       _TFT_DrawLine
                     _TFT_DrawString
                     _TFT_FullScreen
                      _TFT_GetHeight
                       _TFT_GetWidth
 ---------------------------------------------------------------------------------
 (4) _Ecg_Background_Leads_Failure                         0     0      0   72927
                     _TFT_DrawString
                     _TFT_FullScreen
 ---------------------------------------------------------------------------------
 (3) _TFT_DrawString                                      11     0     11   59021
                                              0 BANK0     11     0     11
                       _TFT_DrawChar
 ---------------------------------------------------------------------------------
 (4) _TFT_DrawChar                                        23    13     10   55527
                                             53 COMRAM    23    13     10
                   _TFT_DrawFillRect
                       _TFT_DrawLine
                      _TFT_DrawPixel
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawLine                                        31    21     10   11348
                                             22 COMRAM    31    21     10
                      _TFT_DrawPixel
                       _TFT_GetWidth (ARG)
                            ___awdiv
                                _abs
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     453
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawPixel                                       10     4      6    7195
                                             12 COMRAM    10     4      6
                 _TFT_OrientationGet
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (5) _TFT_DrawFillRect                                    14     4     10   32941
                                             31 COMRAM    14     4     10
                          _TFT_Flood
                     _TFT_FullScreen
                  _TFT_SetAddrWindow
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _TFT_FullScreen                                       2     0      2   13906
                                             29 COMRAM     2     0      2
                          _TFT_Flood
                      _TFT_GetHeight
                       _TFT_GetWidth
                  _TFT_SetAddrWindow
 ---------------------------------------------------------------------------------
 (6) _TFT_SetAddrWindow                                    8     0      8    6944
                                             12 COMRAM     8     0      8
                      _TFT_GetHeight (ARG)
                       _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
                  _TFT_WriteRegister
 ---------------------------------------------------------------------------------
 (3) _TFT_GetWidth                                         2     0      2       0
                                              4 COMRAM     2     0      2
                 _TFT_OrientationGet
 ---------------------------------------------------------------------------------
 (7) _TFT_GetHeight                                        2     0      2       0
                                              4 COMRAM     2     0      2
                 _TFT_OrientationGet
 ---------------------------------------------------------------------------------
 (4) _TFT_OrientationGet                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TFT_Flood                                           15     9      6    6540
                                             14 COMRAM    15     9      6
                  _TFT_WriteRegister
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _TFT_WriteRegister                                    8     4      4    5480
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          0     0      0     677
                             _memset
 ---------------------------------------------------------------------------------
 (1) _A6_Init                                              4     0      4   45925
                                             77 COMRAM     4     0      4
              _A6_BaudRateAutoDetect
                     _A6_BaudRateSet
                         _A6_Command
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateSet                                      60    56      4   32729
                                             73 COMRAM     4     0      4
                                              0 BANK0     56    56      0
                     _A6_BaudRateGet
                         _A6_Command
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
                            _sprintf
                             _strcmp
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             33    25      8    4365
                                             26 COMRAM    24    16      8
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1672
                                              8 COMRAM     6     2      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     311
                                             17 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _A6_BaudRateGet                                      43    39      4   14446
                                             30 COMRAM    43    39      4
                         _A6_Command
                               _atol
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (5) _strtok                                               4     0      4    4939
                                             17 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (6) _strspn                                               7     3      4     977
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (6) _strcspn                                              7     3      4     977
                                             10 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strstr                                               4     0      4    2497
                                             15 COMRAM     4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              7     1      6     462
                                              8 COMRAM     7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (7) _strchr                                               6     2      4     664
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1029
                                             16 COMRAM    14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              3     3      0      99
                                              4 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _A6_BaudRateAutoDetect                                1     1      0    7509
                                             62 COMRAM     1     1      0
                         _A6_IsAlive
                 _EUSART_BaudRateSet
                            _sleepMS
 ---------------------------------------------------------------------------------
 (3) _sleepMS                                              8     4      4     273
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateSet                                  12     8      4     937
                                             17 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     618
                                              4 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _A6_IsAlive                                          32    32      0    6193
                                             30 COMRAM    32    32      0
                         _A6_Command
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               7     3      4     547
                                              4 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _A6_Command                                           7     0      7    5566
                                             23 COMRAM     7     0      7
                        _A6_ReadLine
                    _EUSART_RX_Flush
                   _EUSART_TX_String
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     400
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _EUSART_TX_String                                     3     0      3     276
                                              8 COMRAM     3     0      3
                     _EUSART_TX_Char
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (7) _EUSART_TX_Char                                       1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _EUSART_RX_Flush                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _A6_ReadLine                                          7     2      5    2184
                                             16 COMRAM     7     2      5
               _EUSART_BufferGetChar
                             _memset
 ---------------------------------------------------------------------------------
 (7) _memset                                               8     2      6     677
                                              4 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (7) _EUSART_BufferGetChar                                 2     0      2     490
                                             14 COMRAM     2     0      2
            _EUSART_RX_AvailableData
 ---------------------------------------------------------------------------------
 (8) _EUSART_RX_AvailableData                             10     8      2     279
                                              4 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                 2     2      0      23
                                              2 COMRAM     2     2      0
                _EUSART_RX_Interrupt
                      _Ecg_Interrupt
 ---------------------------------------------------------------------------------
 (12) _Ecg_Interrupt                                       2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_RX_Interrupt                                 2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _A6_Init
     _A6_BaudRateAutoDetect
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
     _A6_BaudRateSet
       _A6_BaudRateGet
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _atol
           ___lmul
           _isdigit
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_Command
         _A6_ReadLine
           _EUSART_BufferGetChar
             _EUSART_RX_AvailableData
           _memset
         _EUSART_RX_Flush
         _EUSART_TX_String
           _EUSART_TX_Char
           _strlen (ARG)
         _strlen
       _A6_IsAlive
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcmp
       _EUSART_BaudRateSet
         ___lldiv
       _sleepMS
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
           _strlen (ARG)
         _isdigit
       _strcmp
     _A6_Command
       _A6_ReadLine
         _EUSART_BufferGetChar
           _EUSART_RX_AvailableData
         _memset
       _EUSART_RX_Flush
       _EUSART_TX_String
         _EUSART_TX_Char
         _strlen (ARG)
       _strlen
   _EUSART_Init
     _memset
   _Ecg_Init
     _Ecg_Background_Leads_Failure
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
             _strlen (ARG)
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
             _strlen (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _Ecg_Background_Leads_Ok
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_OrientationGet
           _TFT_WriteRegister
         _TFT_GetWidth (ARG)
           _TFT_OrientationGet
         ___awdiv (ARG)
         _abs (ARG)
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
             _strlen (ARG)
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
             _strlen (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
       _TFT_GetHeight
         _TFT_OrientationGet
       _TFT_GetWidth
         _TFT_OrientationGet
     _Ecg_CheckLeads
   _TFT_Init
     _TFT_OrientationSet
       _TFT_FullScreen
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
             _strlen (ARG)
         _TFT_GetHeight
           _TFT_OrientationGet
         _TFT_GetWidth
           _TFT_OrientationGet
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
     _TFT_Reset
     _TFT_WriteRegister
   _init
   _loop
     _Ecg_Process
       _Ecg_ProcessEcg
         _Ecg_Background_Leads_Failure
           _TFT_DrawString
             _TFT_DrawChar
               _TFT_DrawFillRect
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                     _strlen (ARG)
                 _TFT_FullScreen
                   _TFT_Flood
                     _TFT_WriteRegister
                     ___wmul (ARG)
                       _strlen (ARG)
                   _TFT_GetHeight
                     _TFT_OrientationGet
                   _TFT_GetWidth
                     _TFT_OrientationGet
                   _TFT_SetAddrWindow
                     _TFT_GetHeight (ARG)
                       _TFT_OrientationGet
                     _TFT_GetWidth (ARG)
                       _TFT_OrientationGet
                     _TFT_OrientationGet (ARG)
                     _TFT_WriteRegister (ARG)
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
                 ___wmul
                   _strlen (ARG)
               _TFT_DrawLine
                 _TFT_DrawPixel
                   _TFT_OrientationGet
                   _TFT_WriteRegister
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 ___awdiv (ARG)
                 _abs (ARG)
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___wmul
                 _strlen (ARG)
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
         _Ecg_Background_Leads_Ok
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawString
             _TFT_DrawChar
               _TFT_DrawFillRect
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                     _strlen (ARG)
                 _TFT_FullScreen
                   _TFT_Flood
                     _TFT_WriteRegister
                     ___wmul (ARG)
                       _strlen (ARG)
                   _TFT_GetHeight
                     _TFT_OrientationGet
                   _TFT_GetWidth
                     _TFT_OrientationGet
                   _TFT_SetAddrWindow
                     _TFT_GetHeight (ARG)
                       _TFT_OrientationGet
                     _TFT_GetWidth (ARG)
                       _TFT_OrientationGet
                     _TFT_OrientationGet (ARG)
                     _TFT_WriteRegister (ARG)
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
                 ___wmul
                   _strlen (ARG)
               _TFT_DrawLine
                 _TFT_DrawPixel
                   _TFT_OrientationGet
                   _TFT_WriteRegister
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 ___awdiv (ARG)
                 _abs (ARG)
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               ___wmul
                 _strlen (ARG)
           _TFT_FullScreen
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_GetHeight
               _TFT_OrientationGet
             _TFT_GetWidth
               _TFT_OrientationGet
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
         _Ecg_CheckLeads
         _Ecg_Draw
           _Ecg_Read
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
           ___lwdiv
         _Ecg_ProcessHeartbeat
           _TFT_DrawBitmap
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _abs
       _Ecg_ProcessHeartRate
         _TFT_DrawString
           _TFT_DrawChar
             _TFT_DrawFillRect
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_FullScreen
                 _TFT_Flood
                   _TFT_WriteRegister
                   ___wmul (ARG)
                     _strlen (ARG)
                 _TFT_GetHeight
                   _TFT_OrientationGet
                 _TFT_GetWidth
                   _TFT_OrientationGet
                 _TFT_SetAddrWindow
                   _TFT_GetHeight (ARG)
                     _TFT_OrientationGet
                   _TFT_GetWidth (ARG)
                     _TFT_OrientationGet
                   _TFT_OrientationGet (ARG)
                   _TFT_WriteRegister (ARG)
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
               ___wmul
                 _strlen (ARG)
             _TFT_DrawLine
               _TFT_DrawPixel
                 _TFT_OrientationGet
                 _TFT_WriteRegister
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               ___awdiv (ARG)
               _abs (ARG)
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             ___wmul
               _strlen (ARG)
         ___lldiv
         _sprintf
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
             _strlen (ARG)
           _isdigit
       _Ecg_ProcessInterrupt
     _processGSM
       _A6_NetworkGetOperator
         _A6_Command
           _A6_ReadLine
             _EUSART_BufferGetChar
               _EUSART_RX_AvailableData
             _memset
           _EUSART_RX_Flush
           _EUSART_TX_String
             _EUSART_TX_Char
             _strlen (ARG)
           _strlen
         _strcpy
         _strstr
           _strchr
           _strlen
           _strncmp
             _strlen (ARG)
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _A6_NetworkGetRSSILevel
         _A6_NetworkGetRSSI
           _A6_Command
             _A6_ReadLine
               _EUSART_BufferGetChar
                 _EUSART_RX_AvailableData
               _memset
             _EUSART_RX_Flush
             _EUSART_TX_String
               _EUSART_TX_Char
               _strlen (ARG)
             _strlen
           _atoi
             ___wmul
               _strlen (ARG)
             _isdigit
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _strtok
             _strcspn
               _strchr
             _strspn
               _strchr
       _TFT_DrawFillRect
         _TFT_Flood
           _TFT_WriteRegister
           ___wmul (ARG)
             _strlen (ARG)
         _TFT_FullScreen
           _TFT_Flood
             _TFT_WriteRegister
             ___wmul (ARG)
               _strlen (ARG)
           _TFT_GetHeight
             _TFT_OrientationGet
           _TFT_GetWidth
             _TFT_OrientationGet
           _TFT_SetAddrWindow
             _TFT_GetHeight (ARG)
               _TFT_OrientationGet
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             _TFT_OrientationGet (ARG)
             _TFT_WriteRegister (ARG)
         _TFT_SetAddrWindow
           _TFT_GetHeight (ARG)
             _TFT_OrientationGet
           _TFT_GetWidth (ARG)
             _TFT_OrientationGet
           _TFT_OrientationGet (ARG)
           _TFT_WriteRegister (ARG)
         ___wmul
           _strlen (ARG)
       _TFT_DrawLine
         _TFT_DrawPixel
           _TFT_OrientationGet
           _TFT_WriteRegister
         _TFT_GetWidth (ARG)
           _TFT_OrientationGet
         ___awdiv (ARG)
         _abs (ARG)
       _TFT_DrawString
         _TFT_DrawChar
           _TFT_DrawFillRect
             _TFT_Flood
               _TFT_WriteRegister
               ___wmul (ARG)
                 _strlen (ARG)
             _TFT_FullScreen
               _TFT_Flood
                 _TFT_WriteRegister
                 ___wmul (ARG)
                   _strlen (ARG)
               _TFT_GetHeight
                 _TFT_OrientationGet
               _TFT_GetWidth
                 _TFT_OrientationGet
               _TFT_SetAddrWindow
                 _TFT_GetHeight (ARG)
                   _TFT_OrientationGet
                 _TFT_GetWidth (ARG)
                   _TFT_OrientationGet
                 _TFT_OrientationGet (ARG)
                 _TFT_WriteRegister (ARG)
             _TFT_SetAddrWindow
               _TFT_GetHeight (ARG)
                 _TFT_OrientationGet
               _TFT_GetWidth (ARG)
                 _TFT_OrientationGet
               _TFT_OrientationGet (ARG)
               _TFT_WriteRegister (ARG)
             ___wmul
               _strlen (ARG)
           _TFT_DrawLine
             _TFT_DrawPixel
               _TFT_OrientationGet
               _TFT_WriteRegister
             _TFT_GetWidth (ARG)
               _TFT_OrientationGet
             ___awdiv (ARG)
             _abs (ARG)
           _TFT_DrawPixel
             _TFT_OrientationGet
             _TFT_WriteRegister
           ___wmul
             _strlen (ARG)
       _TFT_GetWidth
         _TFT_OrientationGet
       ___wmul
         _strlen (ARG)
       _strlen

 _isr (ROOT)
   _EUSART_RX_Interrupt
   _Ecg_Interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      82       7       50.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      89       5       85.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     54      59       1       94.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     164      20        0.0%
DATA                 0      0     164       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 28 09:27:18 2019

               A6_BaudRateAutoDetect@i 003F                    __size_of_A6_IsAlive 0050  
  Ecg_ProcessHeartRate@heartrateString 00C2                                     l71 0B52  
                                   l59 3046                    __size_of_A6_Command 0086  
                         ___awdiv@sign 000A                ??_A6_NetworkGetOperator 0022  
                  ___wmul@multiplicand 000B                            __CFG_BORV$0 000000  
                         __CFG_CP0$OFF 000000                           __CFG_CP1$OFF 000000  
                         __CFG_CP2$OFF 000000                                    l300 0EBC  
                                  l214 1AEC                                    l142 267C  
                                  l241 3056                                    l305 0438  
                                  l217 3024                                    l226 2BF4  
                                  l235 2C42                                    l323 218A  
                                  l148 2E94                                    l317 0688  
                                  l245 2FC0                                    l254 0906  
                                  l262 1AF2                                    l335 1846  
                                  l431 2A68                                    l280 0D3A  
                                  l272 0C9C                                    l425 2F98  
                                  l194 2D68                                    l258 2A14  
                                  l266 1B46                                    l291 0DFE  
                                  l283 24A4                                    l267 1BC6  
                                  l443 2BA6                                    l436 2F02  
                                  l701 229A                                    l293 0EBA  
                                  l613 1EFC                                    l295 0E20  
                                  l439 2B90                                    l552 2E5A  
                                  l288 0DAA                                    l456 11A6  
                                  l481 2536                                    l617 251E  
                                  l706 2CDC                                    l562 1CBC  
                                  l298 0E94                                    l490 20F8  
                                  l626 12E0                                    l731 012C  
                                  l483 2596                                    l459 0FD4  
                                  l564 1D76                                    l476 2B08  
                                  l468 1038                                    l557 22C8  
                                  l493 2DE6                                    l734 01B4  
                                  l559 2320                                    l671 2D24  
                                  l479 2528                                    l487 192C  
                                  l680 303C                                    l577 2B58  
                                  l585 153E                                    l674 23A4  
                                  l770 27C4                                    l755 03FA  
      __end_of_Ecg_Background_Leads_Ok 20FA                                    l677 3028  
                                  l597 26EC                                    l589 175A  
                                  l694 3052                                    l686 2DA8  
                                  l758 2FE6                                    l792 205E  
                                  l785 204E                                    l769 27B4  
                                  _GIE 007F97                                    l989 1E3A  
                         __CFG_CPB$OFF 000000                           __CFG_CPD$OFF 000000  
                         __CFG_BOR$OFF 000000                                    _abs 2F04  
                                  _isr 0008                        __end_of_A6_Init 2E5C  
                                  prod 000FF3                                    wreg 000FE8  
                 __size_of_A6_ReadLine 00D6                           TFT_Flood@len 0011  
                EUSART_BaudRateSet@tmp 001A                           ?_EUSART_Init 0001  
                         __CFG_LVP$OFF 000000                           TFT_Init@data 0028  
                         __CFG_WDT$OFF 000000                                   ?_abs 0005  
                                 l1420 2F2E                                   l1244 260A  
                                 l1173 2212                                   l1421 2F36  
                                 l1237 2602                                   l1510 1A06  
                                 l1166 2202                                   l1441 12E2  
                                 l1513 23A6                                   l1505 1948  
                                 l1450 141A                                   l1515 2426  
                                 l1507 1A0E                                   l1435 164E  
                                 l1436 1656                                   l1461 2ECC  
                                 l1525 2888                                   l1534 1CA0  
                                 l1526 2890                                   l1455 2F68  
                                 l1544 2822                                   l1481 2C90  
                                 l5001 2F3A                                   l1449 140A  
                                 l1545 282A                                   l4203 2E5C  
                                 l5003 2F3E                                   l4211 2EE8  
                                 l1475 2AB8                                   l1469 29B8  
                                 l4205 2E76                                   l5005 2F4E  
                                 l5013 1BC8                                   l1493 1FBA  
                                 l4213 2EEC                                   l5007 2F5E  
                                 l5023 1C76                                   l5015 1BCC  
                                 l5111 1F48                                   l5103 1EFE  
                                 l5031 27C6                                   l4215 2EFC  
                                 l4207 2ECE                                   l4081 295E  
                                 l4321 239C                                   l4313 2322  
                                 l5009 2F62                                   l5017 1BFC  
                                 l5025 1C7E                                   l5105 1F02  
                                 l5113 1F70                                   l5041 2838  
                                 l5033 27D2                                   l5121 192E  
                                 l5201 1882                                   l4217 2EFE  
                                 l4209 2EE6                                   l4083 2966  
                                 l4323 23A0                                   l4315 2328  
                                 l5027 1C98                                   l5019 1C3A  
                                 l5115 1F82                                   l5107 1F3C  
                                 l5043 2840                                   l5035 27DA  
                                 l5131 1982                                   l5123 1940  
                                 l5051 2148                                   l5211 18FA  
                                 l5203 1892                                   l4085 2996  
                                 l4317 235C                                   l5117 1FB2  
                                 l5045 2858                                   l5037 27F2  
                                 l5141 19EA                                   l5133 199A  
                                 l5125 195A                                   l5301 0148  
                                 l5053 2156                                   l2901 260C  
                                 l5213 18FE                                   l5205 18BE  
                                 l5061 176E                                   l4087 29AE  
                                 l4079 295A                                   l4319 2392  
                                 l5039 282C                                   l5143 19F6  
                                 l5311 019C                                   l5303 0160  
                                 l5055 215A                                   l5047 20FA  
                                 l2911 2636                                   l2903 260E  
                                 l5215 191A                                   l5207 18EA  
                                 l5071 17BA                                   l5063 1780  
                                 l5231 0F2A                                   l5151 1544  
                                 l3801 1FBC                                   l5145 19FE  
                                 l5137 19B0                                   l5129 1966  
                                 l5321 0202                                   l5313 01A0  
                                 l5305 016C                                   l4601 2D34  
                                 l5049 20FE                                   l2841 3010  
                                 l2921 2646                                   l2913 2638  
                                 l2905 2616                                   l5209 18F2  
                                 l5081 1802                                   l5073 17C2  
                                 l5065 1784                                   l5057 175C  
                                 l5241 0F88                                   l5233 0F2C  
                                 l5225 0EE2                                   l5217 0EBE  
                                 l5161 15A2                                   l5153 1548  
                                 l5091 22AA                                   l3811 2004  
                                 l3803 1FCC                                   l5411 13C4  
                                 l5403 1368                                   l5139 19D2  
                                 l5315 01C2                                   l5323 020A  
                                 l5307 0186                                   l4611 2D46  
                                 l4603 2D38                                   l2843 3012  
                                 l2835 3008                                   l2931 2658  
                                 l2923 264A                                   l2915 263C  
                                 l2907 261C                                   l5075 17D0  
                                 l5083 1806                                   l5067 1790  
                                 l5059 176A                                   l5251 0FCA  
                                 l5243 0F9A                                   l5235 0F3C  
                                 l5227 0F0E                                   l5219 0ECE  
                                 l5171 1606                                   l5163 15AC  
                                 l5155 1562                                   l5093 22D8  
                                 l3821 2048                                   l3813 200E  
                                 l3805 1FE2                                   l5413 13D4  
                                 l5341 0284                                   l5333 0248  
                                 l5317 01DA                                   l5309 018E  
                                 l4621 2D5A                                   l4613 2D48  
                                 l4605 2D3C                                   l4701 0D44  
                                 l5181 209C                                   l2845 3014  
                                 l2837 300C                                   l2941 2672  
                                 l2933 2660                                   l2925 264E  
                                 l2917 2640                                   l2909 2634  
                                 l5085 1822                                   l5077 17D4  
                                 l5069 179C                                   l5261 1020  
                                 l5253 0FCE                                   l5245 0F9E  
                                 l5237 0F64                                   l5229 0F16  
                                 l5501 2B84                                   l5173 1622  
                                 l5165 15C6                                   l5157 157C  
                                 l5149 1540                                   l5421 1E82  
                                 l5095 22DC                                   l3815 202C  
                                 l3807 1FEA                                   l3831 21C4  
                                 l3823 218C                                   l5351 02D4  
                                 l5343 028A                                   l5335 024A  
                                 l5319 01E6                                   l5271 001E  
                                 l4623 2D5C                                   l4615 2D4E  
                                 l4607 2D3E                                   l4703 0D58  
                                 l4631 3054                                   l5191 2DAA  
                                 l5183 20CA                                   l2847 3022  
                                 l2839 300E                                   l2943 2674  
                                 l2935 2662                                   l2927 2652  
                                 l2919 2642                                   l5079 17E2  
                                 l5087 182A                                   l5255 0FE2  
                                 l5263 1024                                   l5247 0FC2  
                                 l5239 0F86                                   l5503 2B88  
                                 l5511 1050                                   l5175 1632  
                                 l5167 15CE                                   l5159 1588  
                                 l5423 1EBA                                   l5431 1EFA  
                                 l5097 22F8                                   l5089 229C  
                                 l3817 203C                                   l3809 1FF6  
                                 l5409 13B0                                   l3833 21E2  
                                 l3825 21A2                                   l5361 031E  
                                 l5353 02E0                                   l5345 02AE  
                                 l5337 025C                                   l5329 020E  
                                 l5281 006E                                   l5273 0030  
                                 l4625 2D60                                   l4617 2D52  
                                 l4609 2D42                                   l4721 0E8A  
                                 l4713 0DDA                                   l4705 0D62  
                                 l4641 2BB8                                   l4801 1DEE  
                                 l5193 2DB6                                   l5185 20D2  
                                 l5177 2060                                   l2945 2676  
                                 l2937 2666                                   l2929 2654  
                                 l3681 2526                                   l3841 25A0  
                                 l5265 1026                                   l5257 0FE4  
                                 l5249 0FC8                                   l5505 2B9E  
                                 l5521 1074                                   l5601 2A60  
                                 l5441 11A8                                   l5425 1ECC  
                                 l5417 1E3C                                   l5099 2308  
                                 l3819 203E                                   l3835 21F2  
                                 l3827 21AA                                   l5371 03B2  
                                 l5363 0322                                   l5355 02E4  
                                 l5347 02BA                                   l5339 026E  
                                 l5291 00E0                                   l5283 0076  
                                 l5275 003C                                   l4627 2D64  
                                 l4619 2D56                                   l4723 0EA8  
                                 l4715 0DF4                                   l4707 0D66  
                                 l4635 2BA8                                   l4731 1AEE  
                                 l4803 1E04                                   l4811 1E1A  
                                 l5187 20DC                                   l5179 206C  
                                 l2947 2678                                   l2939 266E  
                                 l3691 2550                                   l3683 253C  
                                 l3851 25D6                                   l3843 25B2  
                                 l5195 1848                                   l5267 1036  
                                 l5259 0FF4                                   l5507 2BA2  
                                 l5531 10AC                                   l5523 107C  
                                 l5603 2A64                                   l5435 2A6A  
                                 l5443 11C8                                   l5427 1EE8  
                                 l5419 1E5C                                   l5611 0948  
                                 l4901 2C50                                   l5381 12EE  
                                 l3837 21FC                                   l3829 21B6  
                                 l5365 032C                                   l5357 02FC  
                                 l5349 02C2                                   l5293 00E6  
                                 l5285 0092                                   l5277 0044  
                                 l5373 03CC                                   l5269 0012  
                                 l4629 2D66                                   l4717 0E0A  
                                 l4709 0D94                                   l4653 2BF6  
                                 l4637 2BAC                                   l4725 29BA  
                                 l4821 246C                                   l4733 1B06  
                                 l4813 1E2A                                   l4805 1E0C  
                                 l5189 20F0                                   l3861 2ABA  
                                 l5701 1A12                                   l2949 267A  
                                 l3693 2576                                   l3685 2542  
                                 l3677 2520                                   l3853 25EC  
                                 l3845 25BA                                   l5197 1854  
                                 l5541 115A                                   l5533 1114  
                                 l5525 1090                                   l5517 1054  
                                 l5509 103A                                   l5437 2A76  
                                 l5445 11EE                                   l5453 12CC  
                                 l5613 095C                                   l5621 09EE  
                                 l5605 0908                                   l4751 2214  
                                 l4903 2C54                                   l3791 275C  
                                 l5391 133C                                   l5383 12F2  
                                 l5367 03A2                                   l5359 0312  
                                 l5375 03EE                                   l5287 00BA  
                                 l5279 0050                                   l4719 0E70  
                                 l4655 2BFA                                   l4647 2BC4  
                                 l4671 068A                                   l4727 29E6  
                                 l4823 2498                                   l4735 1B16  
                                 l4743 1B62                                   l4815 1E32  
                                 l4807 1E0E                                   l4831 0BE4  
                                 l3871 2ADE                                   l3863 2ABE  
                                 l5711 1A5E                                   l5703 1A16  
                                 l3695 2578                                   l3687 254A  
                                 l3679 2524                                   l3855 25F4  
                                 l3847 25C2                                   l3839 2598  
                                 l5199 1870                                   l5543 1174  
                                 l5535 1116                                   l5527 10A0  
                                 l5519 1064                                   l5439 2A7E  
                                 l5447 1242                                   l5471 24EA  
                                 l5463 24C4                                   l5455 24A6  
                                 l5623 0A0E                                   l5615 0974  
                                 l5607 0928                                   l4753 2226  
                                 l4905 2C84                                   l5553 2B56  
                                 l5545 2B0A                                   l3793 276C  
                                 l5393 133E                                   l5385 1304  
                                 l5561 1462                                   l5369 03AE  
                                 l5289 00BE                                   l5297 00EC  
                                 l4665 2C12                                   l4649 2BEC  
                                 l4681 0786                                   l4673 068E  
                                 l4729 29F8                                   l4737 1B22  
                                 l4745 1B8A                                   l4809 1E14  
                                 l4841 0C90                                   l4833 0C02  
                                 l4825 0B54                                   l3873 2B02  
                                 l3865 2ACC                                   l5713 1A62  
                                 l5721 1AC6                                   l5705 1A2C  
                                 l3697 258A                                   l3689 254E  
                                 l3857 25F6                                   l3849 25D0  
                                 l5537 1126                                   l5529 10A8  
                                 l5449 125C                                   l5481 2506  
                                 l5465 24D4                                   l5457 24AC  
                                 l5641 0ADE                                   l5625 0A38  
                                 l5617 09A8                                   l5609 0938  
                                 l4763 2284                                   l4755 222E  
                                 l5547 2B2A                                   l3795 277A  
                                 l5395 134A                                   l5387 1316  
                                 l5379 12E2                                   l5563 149A  
                                 l4771 2FDE                                   l5299 013A  
                                 l5731 2D08                                   l4595 2D26  
                                 l4667 2C3A                                   l4659 2C06  
                                 l4691 08BE                                   l4683 079E  
                                 l4675 070A                                   l4819 2428  
                                 l4739 1B4E                                   l4747 2F04  
                                 l4851 0CFA                                   l4843 0CA4  
                                 l4835 0C32                                   l4827 0BA2  
                                 l4931 050A                                   l4923 0446  
                                 l4915 0400                                   l3867 2ACE  
                                 l5651 2F9C                                   l5723 1ADE  
                                 l5715 1A84                                   l5707 1A34  
                                 l3699 258E                                   l3859 25FC  
                                 l5491 2B5A                                   l5539 1130  
                                 l5483 2516                                   l5475 24F0  
                                 l5459 24BE                                   l5643 0B0A  
                                 l5635 0A84                                   l5627 0A40  
                                 l5619 09C0                                   l4765 2298  
                                 l4757 225E                                   l4861 2EA2  
                                 l5549 2B50                                   l3797 278A  
                                 l5397 1352                                   l5389 132A  
                                 l5573 14CC                                   l5565 14AC  
                                 l5581 152E                                   l5557 141C  
                                 l5725 2CDE                                   l4597 2D2C  
                                 l4685 084A                                   l4677 0742  
                                 l4781 1D92                                   l4749 2F12  
                                 l4853 0D08                                   l4845 0CB6  
                                 l4837 0C3E                                   l4829 0BB4  
                                 l4941 05B8                                   l4933 051A  
                                 l4925 0456                                   l4917 0434  
                                 l4909 03FC                                   l3869 2ADC  
                                 l5741 2F92                                   l5733 2F6A  
                                 l5653 2FAC                                   l5717 1A98  
                                 l5709 1A40                                   l5493 2B5E  
                                 l5477 2500                                   l5469 24DA  
                                 l5645 0B38                                   l5637 0A98  
                                 l5629 0A80                                   l4759 227E  
                                 l4863 2EAE                                   l5671 26C6  
                                 l3799 2794                                   l5575 1508  
                                 l5567 14C8                                   l5559 143C  
                                 l5727 2CF4                                   l4599 2D30  
                                 l4687 0872                                   l4679 0756  
                                 l4695 08DE                                   l4791 1DB8  
                                 l4783 1D96                                   l4775 1D78  
                                 l4855 0D18                                   l4847 0CD6  
                                 l4839 0C56                                   l4951 060A  
                                 l4943 05CC                                   l4935 054A  
                                 l4927 0486                                   l5743 2F96  
                                 l5735 2F80                                   l5655 2FB0  
                                 l5719 1AB2                                   l5495 2B6E  
                                 l5591 2A2E                                   l5487 251C  
                                 l5647 0B40                                   l5639 0AA4  
                                 l4873 2CB4                                   l4865 2EB2  
                                 l4961 2D6E                                   l5673 26DA  
                                 l5665 2682                                   l5577 151C  
                                 l4769 2FC2                                   l5745 2E22  
                                 l5729 2CFC                                   l4697 0D3C  
                                 l4689 088E                                   l4793 1DCA  
                                 l4785 1DA4                                   l4777 1D7C  
                                 l4849 0CF2                                   l4857 0D1C  
                                 l4953 0616                                   l4945 05CE  
                                 l4937 05B2                                   l4929 04F2  
                                 l5737 2F88                                   l5657 2FB4  
                                 l5497 2B7C                                   l5593 2A3C  
                                 l5585 2A16                                   l5649 0B42  
                                 l4875 2CB8                                   l4867 2C92  
                                 l4859 2E96                                   l4971 1CDA  
                                 l4883 3028                                   l4963 2D92  
                                 l5675 26DC                                   l5667 26AE  
                                 l5659 267E                                   l5579 151E  
                                 l5691 1706                                   l5683 1688  
                                 l5747 2E3A                                   l4699 0D40  
                                 l4795 1DD2                                   l4787 1DAC  
                                 l4779 1D8A                                   l4955 064A  
                                 l4947 05E2                                   l4939 05B4  
                                 l5739 2F8C                                   l5499 2B80  
                                 l5595 2A40                                   l5587 2A26  
                                 l5771 2E02                                   l5763 2DE8  
                                 ?_isr 0001                                   l4877 2CCA  
                                 l4869 2CAE                                   l4981 1D04  
                                 l4957 304E                                   l4885 3036  
                                 l4965 2D96                                   l4893 23E2  
                                 l5693 172E                                   l5685 16AC  
                                 l5677 1658                                   l4797 1DDA  
                                 l4789 1DB0                                   l4949 05FA  
                                 l5597 2A44                                   l5589 2A2A  
                                 l5749 303E                                   l5773 2E16  
                                 l5765 2DEC                                   l4879 2CCE  
                                 l4991 1D40                                   l4983 1D08  
                                 l4975 1CE0                                   l4967 1CA2  
                                 l4959 2D6A                                   l4895 241E  
                                 l4887 23A6                                   l5687 16CC  
                                 l5679 166C                                   l4799 1DE8  
                                 l5599 2A52                                   l5767 2DFA  
                                 l4985 1D1A                                   l4977 1CF2  
                                 l4969 1CCA                                   l4889 23D6  
                                 l5697 1746                                   l5689 16E0  
                                 l5769 2DFE                                   l4995 1D56  
                                 l4987 1D2E                                   l4899 2C44  
                                 l4989 1D3E                                   l4997 1D74  
                                 STR_1 5F79                                   STR_2 5FF2  
                                 STR_3 5FA0                                   STR_4 5F5D  
                                 STR_5 5F87                                   STR_6 5FEE  
                                 STR_7 5FF6                                   STR_8 5FBF  
                                 STR_9 5FE7                                   _CREN 007D5C  
                        TFT_DrawChar@c 003A                          TFT_DrawChar@i 004C  
                        TFT_DrawChar@j 004B                                   _LATA 000F89  
                                 _LATB 000F8A                                   _LATC 000F8B  
                                 u4000 2226                                   u4001 2222  
                                 u4010 227E                                   u4011 227A  
                                 u4020 2298                                   u4100 0B9E  
                                 u4021 2294                                   u4030 1D8A  
                                 u4110 0BB4                                   u4031 1D86  
                                 u4111 0BB0                                   u4200 3036  
                                 u5000 0312                                   u4040 1DA4  
                                 u4120 0C02                                   u4201 3032  
                                 u5001 030E                                   u4041 1DA0  
                                 u4121 0BFE                                   u3250 2996  
                                 u4210 23C6                                   u5010 03CC  
                                 u4050 1DCA                                   u4130 0C90  
                        TFT_DrawChar@x 0036                                   u3251 2992  
                                 u5011 03C8                                   u4051 1DC6  
                                 u4131 0C8C                          TFT_DrawChar@y 0038  
                                 u3260 29AE                                   u4220 23D6  
                                 u5020 03EE                                   u4060 1DE8  
                                 u4140 0CB6                                   u4300 051A  
                                 u5100 1ECC                                   u3261 29AA  
                                 u4221 23D2                                   u5021 03EA  
                                 u4061 1DE4                                   u4141 0CB2  
                                 u4301 0516                                   u5101 1EC8  
                                 u5030 1304                                   u4230 240E  
                                 u4070 1E04                                   u4150 0D08  
                                 u4310 05CC                                   u5110 2AA6  
                                 u5031 1300                                   u4071 1E00  
                                 u4151 0D04                                   u4311 05C8  
                                 u4400 1D1A                                   u3440 2E94  
                                 u5040 1316                                   u4240 241E  
                                 u4080 1E2A                                   u4160 0D3A  
                                 u4320 05E2                                   u5200 2B6E  
                                 u5120 2AB8                                   u4401 1D16  
                                 u3441 2E90                                   u5041 1312  
                                 u4241 241A                                   u4217 23BC  
                                 u4081 1E26                                   u4161 0D36  
                                 u4321 05DE                                   u5201 2B6A  
                                 u5121 2AB4                                   u4170 2ECC  
                                 u4410 1D2A                                   u4250 2C74  
                                 u5050 133C                                   u4090 0B9C  
                                 u4330 05FA                                   u5210 2B7C  
                                 u3450 2EE6                                   u5130 11EE  
                                 u4171 2EC8                                   u4411 1D26  
                                 u5051 1338                                   u4091 0B96  
                                 u4331 05F6                                   u5211 2B78  
                                 u3451 2EE2                                   u5131 11EA  
                                 u4180 2CAE                                   u4420 1D52  
                                 u4260 2C84                                   u5060 1364  
                                 u4500 1C98                                   u5300 152E  
                                 u2900 21A2                                   u4340 060A  
                                 u5220 2B9E                                   u3460 2EFC  
                                 u5140 125C                                   u4181 2CAA  
                                 u4421 1D4E                                   u4261 2C80  
                                 u5061 1360                                   u4237 2404  
                                 u4501 1C94                                   u5301 152A  
                                 u2901 219E                                   u4341 0606  
                                 u5221 2B9A                                   u3461 2EF8  
                                 u5117 2A9C                                   u5141 1258  
                                 u4190 2CCA                                   u4430 1D74  
                                 u4350 2D8E                                   u5070 13C4  
                                 u4510 27F2                                   u2910 21C4  
                                 u4270 0446                                   u2670 2536  
                                 u5230 1064                                   u5310 2A26  
                                 u5150 24BE                                   u4191 2CC6  
                                 u4431 1D70                                   u5071 13C0  
                                 u4511 27EE                                   u2911 21C0  
                                 u4271 0442                                   u2671 2532  
                                 u5231 1060                                   u5311 2A22  
                                 u5151 24BA                                   u4360 2DA8  
                                 u4440 2F4E                                   u5080 13D4  
                                 u4520 2822                                   u2920 21E2  
                                 u4280 0456                                   u2680 258A  
                                 u4600 1822                                   u5240 1090  
                                 u5320 2A3C                                   u5160 24D4  
                                 u5400 0B52                                   u4361 2DA4  
                                 u4257 2C6A                                   u4441 2F4A  
                                 u5081 13D0                                   u4521 281E  
                                 u2921 21DE                                   u4281 0452  
                                 u2681 2586                                   u4601 181E  
                                 u5241 108C                                   u5321 2A38  
                                 u5161 24D0                                   u5401 0B4E  
                                 u4370 1CDA                                   u2850 277A  
                                 u4450 2F5E                                   u4530 2858  
                                 u4290 050A                                   u5410 2FAC  
                                 u2930 25B2                                   u4610 1846  
                                 u5250 1126                                   u5330 2A52  
                                 u5090 1E82                                   u5170 24EA  
                                 u4371 1CD6                                   u2851 2776  
                                 u4451 2F5A                                   u4531 2854  
                                 u4291 0506                                   u5411 2FA8  
                                 u2931 25AE                                   u4611 1842  
                                 u5251 1122                                   u5331 2A4E  
                                 u5091 1E7E                                   u5171 24E6  
                                 _PEIE 007F96                                   u4380 1CF2  
                                 u4620 22C8                                   u5260 2B50  
                                 u3580 237C                                   u5420 26C2  
                                 u2860 27B4                                   u4460 1BEC  
                                 u4540 2888                                   u4700 199A  
                                 u2940 25D0                                   u5340 2A60  
                                 u5180 2500                                   u4381 1CEE  
                                 u4357 2D84                                   u4621 22C4  
                                 u5261 2B4C                                   u5421 26BE  
                                 u2861 27B0                                   u4541 2884  
                                 u4701 1996                                   u2941 25CC  
                                 u5341 2A5C                                   u5181 24FC  
                                 u4390 1D04                                   u4630 2308  
                                 u2870 1FE2                                   u5430 26EC  
                                 u4470 1BFC                                   u4710 19EA  
                                 u5270 1462                                   u4550 212E  
                                 u2950 25EC                                   u5190 2516  
                                 u5350 0928                                   u4391 1D00  
                                 u4631 2304                                   u2871 1FDE  
                                 u5431 26E8                                   u4471 1BF8  
                                 u4711 19E6                                   u5271 145E  
                                 u2951 25E8                                   u5191 2512  
                                 u5351 0924                                   u2880 2004  
                                 u4480 1C3A                                   u4640 1F3C  
                                 u5280 14AC                                   u5440 1684  
                                 u3920 0D86                                   u4560 217A  
                                 u2960 2ACC                                   u4800 0F3C  
                                 u4720 1562                                   u5360 095C  
                                 u2881 2000                                   u3585 2372  
                                 u4481 1C36                                   u4641 1F38  
                                 u5281 14A8                                   u5441 1680  
                                 u2961 2AC8                                   u4801 0F38  
                                 u4721 155E                                   u5361 0958  
                                 u2890 202C                                   u4490 1C5A  
                                 u4650 1F82                                   u5290 1508  
                                 u5450 1706                                   u3930 0DA6  
                                 u4570 218A                                   u2970 2ADC  
                                 u4810 0F64                                   u4730 157C  
                                 u5370 0A0E                                   u2891 2028  
                                 u4467 1BE2                                   u4651 1F7E  
                                 u5291 1504                                   u5451 1702  
                                 u3931 0DA2                                   u4571 2186  
                                 u2971 2AD8                                   u4811 0F60  
                                 u4731 1578                                   u5371 0A0A  
                                 _RCIE 007CED                                   u4660 1FA2  
                                 u4900 0148                                   u5460 1742  
                                 u3940 0DF4                                   u2980 2AF2  
                                 u4580 17BA                                   u4820 0F9A  
                                 u4740 15A2                                   u5380 0A38  
                                 _RCIF 007CF5                                   u4485 1C2A  
                                 u4901 0144                                   u5461 173E  
                                 u3941 0DF0                                   u3925 0D7C  
                                 u4557 2124                                   u2981 2AEA  
                                 u4581 17B6                                   u4821 0F96  
                                 u4741 159E                                   u5381 0A34  
                                 u4670 1FB2                                   u4910 019C  
                                 u3950 0E1C                                   u5470 1A98  
                                 u4590 17E2                                   u4830 0FE2  
                                 u4750 15C6                                   u5390 0A98  
                                 u4487 1C20                                   u4671 1FAE  
                                 u4911 0198                                   u3951 0E18  
                                 u4567 2170                                   u5471 1A94  
                                 u4591 17DE                                   u4831 0FDE  
                                 u4751 15C2                                   u5391 0A94  
                                 u4680 1940                                   u4920 01C2  
                                 u3960 0E8A                                   u5480 1ADE  
                                 u4840 0FF4                                   u4760 1622  
                                 u4497 1C50                                   u4681 193C  
                                 u4921 01BE                                   u3961 0E86  
                                 u5481 1ADA                                   u4841 0FF0  
                                 u4761 161E                                   u4690 195A  
                                 u4930 0244                                   u3970 0EBA  
                                 u5490 2F80                                   u4850 1036  
                                 u4770 1632                                   u4667 1F98  
                                 u4691 1956                                   u4931 0240  
                                 u3971 0EB6                                   u5491 2F7C  
                                 u4851 1032                                   u4771 162E  
                                 u4940 025C                                   u4860 0030  
                                 u3980 29F8                                   u4780 191A  
                                 u4941 0258                                   u4861 002C  
                                 u3981 29F4                                   u4781 1916  
                                 u4950 026E                                   u4870 006E  
                                 u3990 2F12                                   u2998 2AF4  
                                 u4790 0ECE                                   u4951 026A  
                                 u4871 006A                                   u3991 2F0E  
                                 u5567 2626                                   u4791 0ECA  
                                 u4960 0284                                   u4880 00DC  
                                 u4961 0280                                   u4881 00D8  
                                 u5577 1A20                                   u4970 02AE  
                                 u4890 013A                                   _OERR 007D59  
                                 u4971 02AA                                   u4891 0136  
                                 u5587 1AA2                                   u4980 02D4  
                                 u4981 02D0                                   u5597 301A  
                                 u4990 02FC                                   u4991 02F8  
                                 _RBPU 007F8F                __size_of_A6_BaudRateGet 0124  
              __size_of_A6_BaudRateSet 0104                                   _TXIF 007CF4  
            _Ecg_ProcessHeartRate$1036 00C7              _Ecg_ProcessHeartRate$1037 00C9  
               ??_Ecg_ProcessHeartRate 00B6                          TFT_DrawLine@t 0024  
                                 abs@a 0005                 ??_Ecg_ProcessHeartbeat 002E  
                                 _atoi 1540                                   _atol 12E2  
                                 _main 2DE8                        A6_BaudRateGet@j 0049  
                                 _init 260C                                   _loop 303E  
                                 fsr1h 000FE2                                   fsr2h 000FDA  
                                 indf1 000FE7                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 005A                                   prodh 000FF4  
                                 prodl 000FF3                                   start 000E  
                  TFT_DrawBitmap@color 001D                      TFT_Flood@color_hi 001C  
                    TFT_Flood@color_lo 001D                            _Ecg_Process 2A16  
                        __CFG_IESO$OFF 000000            __size_of_EUSART_BaudRateSet 0084  
      __size_of_A6_NetworkGetRSSILevel 007A           __end_of_EUSART_BufferGetChar 2CDE  
                      ??_TFT_GetHeight 0007                           ___param_bank 000000  
        ?_Ecg_Background_Leads_Failure 0001          A6_BaudRateSet@currentBaudRate 00DF  
                                ??_abs 0007                                  ??_isr 0003  
                        __CFG_PLLDIV$1 000000                        ??_TFT_DrawPixel 0013  
                       __CFG_CCP2MX$ON 000000                          TFT_Init@color 0023  
                                ?_atoi 000F                                  ?_atol 0011  
                                ?_main 0001                                  ?_init 0001  
                      __end_of___awdiv 1E3C                                  ?_loop 0001  
                                STR_10 5FD6                                  STR_11 5FD6  
                                STR_12 5F94                                  STR_13 5FF6  
                                STR_21 5FC8                                  STR_30 5FFB  
                                STR_22 5FE0                                  STR_23 5FD6  
                                STR_31 5FFB                                  STR_15 5FAB  
                                STR_24 5FD6                                  STR_32 5FFB  
                                STR_16 5FD0                                  STR_25 5FFB  
                                STR_33 5FF9                                  STR_34 5FFD  
                                STR_26 5FB5                                  STR_19 5FFB  
                                STR_27 5FD8                                  STR_28 5FD6  
                                STR_29 5FD6                        __end_of___lldiv 2060  
                      ___awdiv@divisor 0007                        __end_of___llmod 2214  
                       TFT_DrawChar@bg 003D                        __end_of___lwdiv 260C  
                       TFT_DrawChar@xl 0045                                  i2l155 2750  
                                i2l471 3006                                  i2l691 2958  
                      ___awdiv@counter 0009                                  _RCREG 000FAE  
               ??_Ecg_ProcessInterrupt 0005                                  _TMR3H 000FB3  
                                _TMR3L 000FB2                                  _SPBRG 000FAF  
                                _PORTB 000F81                          __CFG_USBDIV$2 000000  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TXREG 000FAD  
                                _Ecg_X 0058                                  _Ecg_Y 00E5  
                        __CFG_PWRT$OFF 000000                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                  ___lmul@multiplicand 0009                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                      ??_EUSART_RX_Flush 0005  
                       TFT_DrawLine@x0 0017                         TFT_DrawLine@x1 001B  
                       TFT_DrawLine@y0 0019                         TFT_DrawLine@y1 001D  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                       TFT_DrawLine@dx 0034                         TFT_DrawLine@dy 002C  
                        __CFG_WRTD$OFF 000000                         __CFG_EBTRB$OFF 000000  
              __size_of_Ecg_CheckLeads 0050                        __end_of_dpowers 5F13  
                      __end_of_isdigit 2F6A                       __end_of_TFT_Font 5E1F  
                     __end_of_TFT_Init 1AEE                                  atoi@a 0014  
                                atol@a 001A                                  atol@c 001E  
                                atoi@s 000F                                  atol@s 0011  
                       TFT_DrawPixel@h 0013                         TFT_DrawPixel@v 0015  
                       TFT_DrawPixel@x 000D                         TFT_DrawPixel@y 000F  
                   __size_of_TFT_Flood 0182                        __end_of_sleepMS 2E96  
                     _TFT_DrawFillRect 2428                                  tablat 000FF5  
                   __size_of_TFT_Reset 001E                 __size_of_Ecg_Interrupt 0020  
                     __end_of_Ecg_Draw 192E                       __end_of_Ecg_Init 2F9A  
                     __end_of_Ecg_Read 2598                   TFT_DrawBitmap@bitmap 001B  
                                ttemp5 005B                                  ttemp6 005E  
                                ttemp7 0062                                  status 000FD8  
                                wtemp8 005B                        __end_of_sprintf 03FC  
          EUSART_BufferGetChar@timeout 000F                        __end_of_strcspn 2892  
                      __end_of_strncmp 1CA2                    TFT_FullScreen@color 001E  
                       __CFG_MCLRE$OFF 000000                         TFT_Flood@color 000F  
                      __initialization 2892                           __end_of_atoi 1658  
                         __end_of_atol 141C                           __end_of_main 2E22  
                         __end_of_init 267E                           __end_of_loop 3048  
                            ??_A6_Init 0052                                 ??_atoi 0011  
                               ??_atol 0015                                 ??_main 0055  
                               ??_init 0005                                 ??_loop 0055  
                        _Ecg_Draw$2263 0036                       ??_TFT_DrawBitmap 001F  
                        __activetblptr 000002                 _A6_NetworkGetRSSILevel 24A6  
                     ??_TFT_DrawString 004D                           ??_A6_IsAlive 001F  
                         ??_A6_Command 001F                         _EUSART_TX_Char 3026  
                     ___llmod@dividend 0012                                 _ADRESH 000FC4  
                               _ADRESL 000FC3                       ___awdiv@dividend 0005  
                    _TFT_DrawChar$2260 0047                      _TFT_DrawChar$2261 0049  
                               i2l4501 2908                                 i2l4511 2948  
                               i2l4503 290C                                 i2l4505 292E  
                               i2l4507 2932                                 i2l4509 2944  
                               i2l4541 2706                                 i2l4551 272E  
                               i2l4543 2714                                 i2l4545 2722  
                               i2l4553 2730                                 i2l4555 273E  
                               i2l4547 2726                                 i2l4539 26F8  
                               i2l4493 2FE8                                 i2l4557 274C  
                               i2l4549 272A                                 i2l4495 3002  
                               i2l4497 3004                                 i2l4499 28F6  
                _A6_BaudRateAutoDetect 267E                                 _TMR3IE 007D01  
                               _TMR3IF 007D09                                 _SPBRGH 000FB0  
                      TFT_DrawBitmap@h 0022                        TFT_DrawBitmap@i 0026  
                      TFT_DrawBitmap@j 0023                        TFT_DrawBitmap@w 0021  
                      TFT_DrawBitmap@x 0017                        TFT_DrawBitmap@y 0019  
        TFT_OrientationSet@orientation 0022       __size_of_Ecg_Background_Leads_Ok 009A  
                       __CFG_XINST$OFF 000000                        TFT_DrawLine@err 0030  
                     ??_TFT_FullScreen 0020                                 ___lmul 275C  
                               ___wmul 2FC2                 A6_BaudRateSet@baudRate 004A  
                            ??___awdiv 0009                              ??___lldiv 000D  
                            ??___llmod 001A                              ??___lwdiv 0009  
                    ?_EUSART_TX_String 0009                     __end_of_A6_IsAlive 2B5A  
                               _memset 2E96                          _Ecg_Interrupt 2FE8  
                    __end_of_TFT_Flood 0EBE                                 clear_0 28D0  
                               clear_1 28DC                     __end_of_A6_Command 2322  
                     ___awdiv@quotient 000B                      __end_of_TFT_Reset 3026  
                   ??_EUSART_TX_String 000C                                 _strchr 23A6  
                               _strcmp 295A                                 _strcpy 2A6A  
                               _strlen 2C44                                 _strtok 192E  
                               _strspn 27C6                                 _strstr 1EFE  
        A6_NetworkGetOperator@operator 001F                           __pdataCOMRAM 0058  
                            ??_isdigit 0005                           __mediumconst 591E  
               __end_of_EUSART_TX_Char 303E                              ??_sleepMS 0009  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                   _EUSART_BufferGetChar 2C92  
                      TFT_DrawString@x 00AB                        TFT_DrawString@y 00AD  
                            ??_sprintf 0023                              ??_strcspn 000F  
                            ??_strncmp 000F                         _A6_BaudRateGet 141C  
                       _A6_BaudRateSet 1658                   __size_of_EUSART_Init 0048  
                           __accesstop 0060                __end_of__initialization 28E8  
               A6_BaudRateSet@response 00AB                        __CFG_PBADEN$OFF 000000  
                      processGSM@RSSIX 0052                        processGSM@RSSIY 0051  
                        ___rparam_used 000001                        TFT_Flood@blocks 0019  
                       __pcstackCOMRAM 0001                           __pidataBANK0 3048  
                       ?_Ecg_Interrupt 0001                              ?_TFT_Init 0023  
   Ecg_ProcessHeartbeat@ecgDeltaAbsSum 0032                __size_of_Ecg_ProcessEcg 004E  
       __size_of_A6_NetworkGetOperator 013A        Ecg_ProcessHeartbeat@ecgDeltaSum 0030  
        __end_of_A6_NetworkGetOperator 12E2                              ?_Ecg_Draw 0001  
                            ?_Ecg_Init 0001                              ?_Ecg_Read 0005  
                  processGSM@operatorX 004F                     _TFT_OrientationGet 3054  
                   _TFT_OrientationSet 2F9A           __size_of_EUSART_RX_Interrupt 0064  
                      ?_EUSART_TX_Char 0001                  ?_EUSART_BufferGetChar 000F  
                       _Ecg_CheckLeads 2ABA                 __end_of_A6_BaudRateGet 1540  
               __end_of_A6_BaudRateSet 175C                           sprintf@width 0030  
                  ?_TFT_OrientationGet 0001                 ?_A6_BaudRateAutoDetect 0001  
                  ?_TFT_OrientationSet 0020                             __pbssBANK0 0060  
                           __pbssBANK1 0100                           ?_Ecg_Process 0001  
                 A6_ReadLine@iResponse 0016                                ?___lmul 0005  
                              ?___wmul 0009             EUSART_BaudRateSet@baudRate 0012  
                 ??_TFT_OrientationGet 0005                   ??_TFT_OrientationSet 0022  
                      _EUSART_RX_Flush 304E                     A6_ReadLine@lineLen 0013  
                           ??_TFT_Init 0025                                ?_memset 0005  
                              _A6_Init 2E22                         ___lmul@product 000D  
             __end_of_TFT_DrawFillRect 24A6                                ?_strchr 0005  
                              ?_strcmp 0005                                ?_strcpy 0005  
                              ?_strlen 0005                          ??_A6_ReadLine 0016  
                              ?_strtok 0012                                ?_strspn 000B  
                              ?_strstr 0010                             ??_Ecg_Draw 0036  
                           ??_Ecg_Init 004F                             ??_Ecg_Read 0007  
                   A6_ReadLine@timeout 0014                 TFT_WriteRegister@h_727 000B  
               TFT_WriteRegister@l_728 000C                 __end_of_Ecg_CheckLeads 2B0A  
                     TFT_DrawChar@line 0044                       TFT_DrawChar@size 003F  
                         A6_ReadLine@c 0017               ?_EUSART_RX_AvailableData 0005  
                      ?_A6_BaudRateGet 001F                        ?_A6_BaudRateSet 004A  
              TFT_OrientationSet@color 0020                              TFT_Init@i 002E  
                      __CFG_VREGEN$OFF 000000                  TFT_DrawFillRect@color 0028  
           __end_of_EUSART_BaudRateSet 23A6                _Ecg_Background_Leads_Ok 2060  
        __size_of_Ecg_ProcessHeartRate 016E          __size_of_Ecg_ProcessHeartbeat 017C  
                              __Hparam 0000                                __Lparam 0000  
                    A6_Command@command 0018                              _ECG_FLAGS 0080  
                      ??_Ecg_Interrupt 0001              A6_NetworkGetRSSI@response 001F  
                              ___awdiv 1D78                        __size_of___lmul 006A  
                __end_of_TFT_GetHeight 2C44                                ___lldiv 1FBC  
                      __size_of___wmul 0026                                ___llmod 218C  
                              ___lwdiv 2598                      _A6_NetworkGetRSSI 1E3C  
                      __CFG_STVREN$OFF 000000                      A6_Command@timeout 001A  
                        _ECG_HEARTBEAT 0060                                __pcinit 2892  
                      __size_of_memset 0038                                __ramtop 0800  
                        _ECG_HEARTRATE 0072                ?_A6_NetworkGetRSSILevel 0001  
                              __ptext0 2DE8                                __ptext1 303E  
                              __ptext2 0908                                __ptext3 24A6  
                              __ptext4 1E3C                                __ptext5 1540  
                              __ptext6 11A8                                __ptext7 2A6A  
                              __ptext8 2A16                                __ptext9 2ECE  
                   ?_A6_NetworkGetRSSI 0001                  __end_of_TFT_DrawPixel 1BC8  
                      __size_of_strchr 0082                        __size_of_strcmp 0060  
                      __size_of_strcpy 0050                        __size_of_strlen 004E  
                      __size_of_strtok 00E2                        __size_of_strspn 0066  
                      __size_of_strstr 00BE                                _dpowers 5EEB  
                         __size_of_abs 0034                                _isdigit 2F38  
                         __size_of_isr 2754                        ?_Ecg_CheckLeads 0005  
                            _T3CONbits 000FB1                 ??_EUSART_BufferGetChar 0011  
                              _sleepMS 2E5C          __size_of_Ecg_ProcessInterrupt 0036  
                  ??_A6_NetworkGetRSSI 001F                    __end_of_A6_ReadLine 1D78  
                              _sprintf 0012                                _strcspn 282C  
                              _strncmp 1BC8                         __pintcode_body 26EE  
                            _EUSART_RX 0100                   end_of_initialization 28E8  
                              memset@c 0007                                memset@n 0009  
                              memset@p 000B                          __Lmediumconst 591E  
                              int_func 26EE                     TFT_WriteRegister@h 0009  
                   TFT_WriteRegister@l 000A                        ___lldiv@divisor 0009  
              __end_of_EUSART_RX_Flush 3054                        ___lldiv@counter 0011  
            Ecg_CheckLeads@leadsStatus 0008                              _GSMStatus 0082  
                            _RCSTAbits 000FAB              __end_of_A6_NetworkGetRSSI 1EFE  
                              postdec1 000FE5                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                        ?_TFT_GetWidth 0005                       TFT_DrawString@bg 00B3  
                        ?_TFT_DrawChar 0036                          ?_TFT_DrawLine 0017  
       __end_of_A6_NetworkGetRSSILevel 2520                                strcmp@r 000B  
                              strlen@s 0005                         _Ecg_ProcessEcg 2B5A  
                              strspn@i 0010                              _PORTAbits 000F80  
      __end_of_EUSART_RX_AvailableData 229C                              _PORTCbits 000F82  
                           _processGSM 0908                              _TFT_Flood 0D3C  
                            _TFT_Reset 3008              __size_of_EUSART_TX_String 0040  
            ??_Ecg_Background_Leads_Ok 004D                            processGSM@i 0054  
                          TFT_Init@cmd 002C                              _TXSTAbits 000FAC  
                   TFT_DrawBitmap@byte 0025                    _EUSART_RX_Interrupt 28F6  
                 __size_of_Ecg_Process 0054                         ??_TFT_GetWidth 0007  
                       ??_TFT_DrawChar 0040                         ??_TFT_DrawLine 0021  
               __end_of_Ecg_ProcessEcg 2BA8               EUSART_RX_AvailableData@t 000B  
                       __end_of___lmul 27C6                         __end_of___wmul 2FE8  
                          _BAUDCONbits 000FB8                     A6_IsAlive@response 001F  
                        __pidataCOMRAM 3058                       ??_EUSART_TX_Char 0005  
                       __end_of_memset 2ECE                      __size_of_TFT_Init 00DE  
                         _MILLISECONDS 007A                            _A6_ReadLine 1CA2  
                           ?_TFT_Flood 000F                         __end_of_strchr 2428  
                       __end_of_strcmp 29BA                         __end_of_strcpy 2ABA  
                       __end_of_strlen 2C92                         __end_of_strtok 1A10  
                       __end_of_strspn 282C                         __end_of_strstr 1FBC  
                           ?_TFT_Reset 0001                    start_initialization 2892  
                 ?_EUSART_RX_Interrupt 0001                      __size_of_Ecg_Draw 00E6  
              ??_A6_BaudRateAutoDetect 003F                      __size_of_Ecg_Init 0030  
                    __size_of_Ecg_Read 0078                            __end_of_abs 2F38  
                          __end_of_isr 275C                          ??_EUSART_Init 000D  
     Ecg_ProcessHeartbeat@ecgDeltaDiff 0034                    TFT_SetAddrWindow@x1 000D  
                  TFT_SetAddrWindow@x2 0011                    TFT_SetAddrWindow@y1 000F  
                  TFT_SetAddrWindow@y2 0013             A6_NetworkGetRSSI@RSSIToken 003F  
                Ecg_ProcessHeartRate@i 00D1                  Ecg_ProcessHeartRate@j 00D2  
              __size_of_TFT_DrawBitmap 00EC                    EUSART_TX_String@len 000B  
                  EUSART_TX_String@str 0009                  Ecg_ProcessHeartbeat@i 0038  
                      ___llmod@divisor 0016                        ___llmod@counter 001A  
              __size_of_TFT_DrawString 0092                       ?_EUSART_RX_Flush 0001  
                  TFT_Init@orientation 0027             __size_of_A6_NetworkGetRSSI 00C2  
                    _TFT_Init_Sequence 5E1F                               ??___lmul 000D  
                             ??___wmul 000D                        ?_Ecg_ProcessEcg 0001  
                A6_Command@responseLen 001E                            __pdataBANK0 00E3  
                     __CFG_LPT1OSC$OFF 000000                               ??_memset 000B  
                             ?_A6_Init 004E                      ?_TFT_DrawFillRect 0020  
       EUSART_RX_AvailableData@timeout 0005                            ?_processGSM 0001  
                             ??_strchr 0009                               ??_strcmp 0009  
                             ??_strcpy 0009                               ??_strlen 0007  
                     ??_A6_BaudRateGet 0023                               ??_strtok 0016  
                             ??_strspn 000F                               ??_strstr 0014  
                     ??_A6_BaudRateSet 004E                  A6_BaudRateSet@request 00CB  
                   ??_TFT_DrawFillRect 002A                  ??_EUSART_RX_Interrupt 0001  
       ??_Ecg_Background_Leads_Failure 004D                __size_of_TFT_FullScreen 005C  
                          __pbssCOMRAM 0055                  _A6_NetworkGetOperator 11A8  
                        __pcstackBANK0 00AB                           _isdigit$1975 0006  
         _A6_LAST_COMMAND_MILLISECONDS 0076                            sprintf@flag 002F  
                          sprintf@prec 0027                            Ecg_Draw@ecg 0038  
                  __end_of_EUSART_Init 2D26       __size_of_EUSART_RX_AvailableData 0088  
            __end_of_TFT_Init_Sequence 5EEB                       ___lwdiv@dividend 0005  
                          Ecg_Read@ecg 0009                              __pintcode 0008  
                        __pmediumconst 591E                               ?___awdiv 0005  
                             ?___lldiv 0005                               ?___llmod 0012  
                             ?___lwdiv 0005            __size_of_TFT_OrientationGet 0004  
          __size_of_TFT_OrientationSet 0028     A6_NetworkGetOperator@operatorToken 0023  
                     ??_Ecg_CheckLeads 0007                     _EUSART_BaudRateSet 2322  
                TFT_WriteRegister@data 0007           __end_of_Ecg_ProcessHeartRate 11A8  
         __end_of_Ecg_ProcessHeartbeat 103A                            ??_TFT_Flood 0015  
                             ?_isdigit 0001                   EUSART_RX_Interrupt@c 0002  
                          ??_TFT_Reset 0005                    ?_EUSART_BaudRateSet 0012  
                             ?_sleepMS 0005                   __end_of_A6_BAUDRATES 5F1F  
                    _TFT_WriteRegister 2D26                       ___lwdiv@quotient 0009  
                     _EUSART_TX_String 2D6A                               ?_sprintf 001B  
                 __end_of_TFT_GetWidth 2BF6                   __end_of_TFT_DrawChar 068A  
                             ?_strcspn 000B                               ?_strncmp 0009  
                 __end_of_TFT_DrawLine 0D3C                     ?_TFT_WriteRegister 0005  
 Ecg_ProcessHeartRate@heartbeatAverage 00CB                         ___wmul@product 000D  
                    TFT_DrawChar@color 003B                    __size_of_processGSM 024C  
                  ??_TFT_WriteRegister 0009                   ??_EUSART_BaudRateSet 0016  
         __end_of_Ecg_ProcessInterrupt 2F04                               i2u381_40 2944  
                             i2u380_48 2920                               i2u381_41 2940  
                             i2u383_40 2706                               i2u383_41 2702  
                             i2u384_40 2714                               i2u384_41 2710  
                             i2u385_40 273E                               i2u385_41 273A  
                             i2u378_40 2908                               i2u386_40 274C  
                             i2u378_41 2904                               i2u386_41 2748  
                             i2u379_40 291E                               i2u379_41 2916  
                             _GO_nDONE 007E11                               _UCFGbits 000F6F  
                     __CFG_WDTPS$32768 000000                               _UCONbits 000F6D  
                __end_of_Ecg_Interrupt 3008                               _TFT_Font 591F  
                             _TFT_Init 1A10                       __size_of_A6_Init 003A  
                           _ADCON0bits 000FC2                             _ADCON1bits 000FC1  
                           _ADCON2bits 000FC0                      ___wmul@multiplier 0009  
                             _Ecg_Draw 1848                               _Ecg_Init 2F6A  
                             _Ecg_Read 2520                 ?_A6_NetworkGetOperator 001F  
                           TFT_Flood@i 001B                               _Ecg_Xold 00E7  
                             _Ecg_Yold 00E3              __end_of_TFT_WriteRegister 2D6A  
                   TFT_DrawPixel@color 0011          __size_of_EUSART_BufferGetChar 004C  
                           _A6_IsAlive 2B0A                        EUSART_TX_Char@c 0005  
                          _EUSART_Init 2CDE                      TFT_DrawFillRect@h 0026  
                           _A6_Command 229C                      TFT_DrawFillRect@w 0024  
                    TFT_DrawFillRect@x 0020                      TFT_DrawFillRect@y 0022  
                    ___lmul@multiplier 0005                              copy_data0 28A6  
                       _TFT_DrawBitmap 175C                 __size_of_TFT_GetHeight 004E  
                    _TFT_SetAddrWindow 068A                        _TFT_Orientation 0057  
                       _TFT_DrawString 20FA                 __size_of_TFT_DrawPixel 00DA  
                   ?_TFT_SetAddrWindow 000D                               __Hrparam 0000  
               A6_BaudRateGet@baudRate 0043                               __Lrparam 0000  
             TFT_Init@initSequenceSize 002A                         _TFT_ConsoleRow 0055  
            Ecg_ProcessHeartRate@jPrev 00D0                             _ECG_BUFFER 006D  
                  TFT_DrawString@color 00B1                    ??_TFT_SetAddrWindow 0015  
                    TFT_DrawLine@t_786 0026                      TFT_DrawLine@t_787 0028  
                    TFT_DrawLine@t_788 002A                       __size_of___awdiv 00C4  
        Ecg_ProcessHeartRate@heartrate 00CF                       __size_of___lldiv 00A4  
                     __size_of___llmod 0088                      TFT_DrawLine@color 001F  
                     __size_of___lwdiv 0074                      TFT_DrawLine@steep 0032  
                      A6_Init@baudRate 004E                      TFT_DrawLine@ystep 002E  
                         ?_A6_ReadLine 0011                         _TFT_FullScreen 29BA  
                   A6_Command@response 001C                             sprintf@val 0029  
                     __size_of_isdigit 0032                        ___lwdiv@divisor 0007  
                      ___lwdiv@counter 000B                 __end_of_TFT_DrawBitmap 1848  
                             __ptext10 103A                               __ptext11 2B5A  
                             __ptext20 2F9A                               __ptext12 0EBE  
                             __ptext21 2F6A                               __ptext13 175C  
                             __ptext30 1AEE                               __ptext22 2ABA  
                             __ptext14 1848                               __ptext31 2428  
                             __ptext23 2060                               __ptext15 2598  
                             __ptext40 2E22                               __ptext32 29BA  
                             __ptext24 2DAA                               __ptext16 2520  
                             __ptext41 1658                               __ptext33 068A  
                             __ptext25 20FA                               __ptext17 260C  
                             __ptext50 1BC8                               __ptext42 0012  
                             __ptext34 2BA8                               __ptext26 03FC  
                             __ptext18 1A10                               __ptext51 23A6  
                             __ptext43 2FC2                               __ptext35 2BF6  
                             __ptext27 0B54                               __ptext19 3008  
                             __ptext60 295A                               __ptext52 12E2  
                             __ptext44 218C                               __ptext36 3054  
                             __ptext28 2F04                               __ptext61 229C  
                             __ptext53 2F38                               __ptext45 141C  
                             __ptext37 0D3C                               __ptext29 1D78  
                             __ptext62 2C44                               __ptext54 275C  
                             __ptext46 192E                               __ptext38 2D26  
                             __ptext71 2FE8                               __ptext63 2D6A  
                             __ptext55 267E                               __ptext47 27C6  
                             __ptext39 2CDE                               __ptext72 28F6  
                             __ptext64 3026                               __ptext56 2E5C  
                             __ptext48 282C                               __ptext65 304E  
                             __ptext57 2322                               __ptext49 1EFE  
                             __ptext66 1CA2                               __ptext58 1FBC  
                             __ptext67 2E96                               __ptext59 2B0A  
                             __ptext68 2C92                               __ptext69 2214  
                     __size_of_sleepMS 003A         __size_of_A6_BaudRateAutoDetect 0070  
        __end_of_A6_BaudRateAutoDetect 26EE                   TFT_WriteRegister@reg 0005  
            __end_of_TFT_SetAddrWindow 0908                 A6_BaudRateGet@response 0023  
                     __size_of_sprintf 03EA                       __size_of_strcspn 0066  
                     __size_of_strncmp 00DA                             strcpy@from 0007  
               __end_of_TFT_DrawString 218C                              sleepMS@ms 0005  
                        __size_of_atoi 0118                          __size_of_atol 013A  
                        __size_of_main 003A                          __size_of_init 0072  
                        __size_of_loop 000A                _EUSART_RX_AvailableData 2214  
           A6_NetworkGetRSSILevel@RSSI 0041                          ??_Ecg_Process 004F  
                           strncmp@len 000D                   _Ecg_ProcessHeartRate 103A  
                     ??_Ecg_ProcessEcg 004F                   _Ecg_ProcessHeartbeat 0EBE  
                       _ECG_ICON_HEART 5F1F                               int$flags 005A  
                             atoi@sign 0013                               atol@sign 0019  
                        _TFT_GetHeight 2BF6                 __end_of_TFT_FullScreen 2A16  
                         ??_processGSM 004D                  __CFG_CPUDIV$OSC1_PLL2 000000  
                        _TFT_DrawPixel 1AEE                            _OSCTUNEbits 000F9B  
                __size_of_TFT_GetWidth 004E                  __size_of_TFT_DrawChar 028E  
                __size_of_TFT_DrawLine 01E8             __size_of_TFT_WriteRegister 0044  
                 _Ecg_ProcessInterrupt 2ECE               ?_Ecg_Background_Leads_Ok 0001  
                             isdigit@c 0007                               memset@p1 0005  
                      ?_TFT_DrawBitmap 0017                            ?_A6_IsAlive 0001  
                   TFT_DrawString@size 00B5                            ?_A6_Command 0018  
                             intlevel2 0000                              sprintf@ap 002D  
                            sprintf@sp 001B              __size_of_TFT_DrawFillRect 007E  
                      ?_TFT_DrawString 00AB                              strchr@chr 0007  
                      A6_ReadLine@line 0011                              strchr@ptr 0005  
                     ___lldiv@dividend 0005                 __end_of_ECG_ICON_HEART 5F5D  
                ?_Ecg_ProcessHeartRate 0001                  ?_Ecg_ProcessHeartbeat 0001  
                            strcspn@s1 000B                              strcspn@s2 000D  
                             sleepMS@t 0009                              strncmp@s1 0009  
                            strncmp@s2 000B               ??_A6_NetworkGetRSSILevel 0041  
                   __end_of_processGSM 0B54                             _OSCCONbits 000FD3  
            Ecg_ProcessHeartbeat@delta 0036                           _A6_BAUDRATES 5F13  
             __end_of_EUSART_TX_String 2DAA                         ?_TFT_GetHeight 0005  
                  __end_of_Ecg_Process 2A6A                           _TFT_GetWidth 2BA8  
                         _TFT_DrawChar 03FC                           _TFT_DrawLine 0B54  
          __end_of_EUSART_RX_Interrupt 295A               __size_of_EUSART_RX_Flush 0006  
                      ?_TFT_FullScreen 001E                      TFT_DrawString@str 00AF  
                       ?_TFT_DrawPixel 000D                               sprintf@c 0032  
                             sprintf@f 001D                               strcmp@s1 0005  
                             strcmp@s2 0007                       ___lldiv@quotient 000D  
                             strcpy@cp 0009                               strlen@cp 0007  
                             strcpy@to 0005                               strcspn@i 0010  
                ?_Ecg_ProcessInterrupt 0001            A6_BaudRateGet@baudRateToken 0047  
                             strtok@s1 0012                               strtok@s2 0014  
                             strspn@s1 000B                               strspn@s2 000D  
                             strtok@sp 007E                               strstr@s1 0010  
                             strstr@s2 0012                __size_of_EUSART_TX_Char 0018  
     A6_NetworkGetOperator@operatorLen 0021             __size_of_TFT_SetAddrWindow 027E  
            ??_EUSART_RX_AvailableData 0007                     __CFG_FOSC$HSPLL_HS 000000  
 __end_of_Ecg_Background_Leads_Failure 2DE8  __size_of_Ecg_Background_Leads_Failure 003E  
         _Ecg_Background_Leads_Failure 2DAA             __end_of_TFT_OrientationGet 3058  
           __end_of_TFT_OrientationSet 2FC2  
